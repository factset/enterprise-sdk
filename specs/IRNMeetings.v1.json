{
  "openapi": "3.0.1",
  "info": {
    "title": "IRN API v1",
    "description": "Allows users to extract, create, update and configure IRN data.",
    "contact": {
      "name": "FactSet Research Systems",
      "url": "https://developer.factset.com/contact",
      "email": "api@factset.com"
    },
    "license": {
      "name": "Apache License, Version 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0"
    },
    "version": "1.4.0"
  },
  "servers": [
    {
      "url": "https://api.factset.com/research/irn/v1",
      "description": "Production Server"
    },
    {
      "url": "https://api-sandbox.factset.com/research/irn/v1",
      "description": "Sandbox Server"
    }
  ],
  "paths": {
    "/meetings": {
      "get": {
        "tags": [
          "Meetings"
        ],
        "summary": "Get all the meetings in the specified date range filtered on the given identifiers",
        "description": "Get all the meetings in the specified date range filtered on the given identifiers.",
        "operationId": "GetMeetings",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "StartDate",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end",
            "in": "query",
            "description": "EndDate",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "identifiers",
            "in": "query",
            "description": "Set of identifiers to filter on",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit on the number of meetings retrieved",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "modifiedSince",
            "in": "query",
            "description": "Only return meetings which have been modified or created since a particular time",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeRelatedEntities",
            "in": "query",
            "description": "When set to true fetches meetings tagged with all the entities related to identifiers param",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "X-IRN-Include-Deleted",
            "in": "header",
            "description": "Includes deleted meetings in results when set to true",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MeetingSummaryDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Meetings"
        ],
        "summary": "Create a meeting",
        "description": "Create a meeting with the given details like date, time, location, attendees, etc.",
        "operationId": "CreateMeeting",
        "requestBody": {
          "description": "Note: The organizer property is deprecated in favor of organizerId",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMeetingDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMeetingDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMeetingDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMeetingDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success - Returns unique identifier of the meeting created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewItemDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/meetings/{meetingId}": {
      "get": {
        "tags": [
          "Meetings"
        ],
        "summary": "Get details of a meeting",
        "description": "Get details of a meeting by providing the meeting id.",
        "operationId": "GetMeeting",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "Meeting Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeetingDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Meetings"
        ],
        "summary": "Update meeting",
        "description": "Update the details of a meeting by providing the meeting id based on the given details.",
        "operationId": "UpdateMeeting",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "Meeting Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Meeting details to update. Note: The organizer property is deprecated in favor of organizerId",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMeetingDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMeetingDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMeetingDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMeetingDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Meetings"
        ],
        "summary": "Delete a Meeting",
        "description": "Delete a meeting by providing the meeting id.",
        "operationId": "DeleteMeeting",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "Meeting Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/meetings/{meetingId}/attachments": {
      "get": {
        "tags": [
          "Attachments"
        ],
        "summary": "Get all the attachments belonging to a meeting",
        "description": "Get all the attachments belonging to a meeting by providing the meeting id.",
        "operationId": "GetAttachments",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "Meeting Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttachmentSummaryDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Attachments"
        ],
        "summary": "Create an attachment for a existing meeting",
        "description": "Create an attachment for a existing meeting by providing the meeting id and atatchment details.",
        "operationId": "CreateAttachment",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "Meeting Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success - Returns unique identifier of the Attachment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewItemDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/meetings/{meetingId}/attachments/{attachmentId}/download": {
      "get": {
        "tags": [
          "Attachments"
        ],
        "summary": "Download an attachment from a Meeting",
        "description": "Download an attachment from a Meeting by providing the meeting id and attachment id.",
        "operationId": "DownloadAttachment",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "Meeting Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attachmentId",
            "in": "path",
            "description": "Attachment Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/meetings/{meetingId}/comments": {
      "get": {
        "tags": [
          "Comments"
        ],
        "summary": "Get all comments for a meeting",
        "description": "Get all comments for a meeting by providing the meeting id.",
        "operationId": "GetComments",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "Meeting Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CommentSummaryDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Comments"
        ],
        "summary": "Create a comment to a Meeting",
        "description": "Create a comment to a Meeting by providing the meeting id and comment details.",
        "operationId": "CreateComment",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "The meeting Id to which the comment will be added",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The details of the comment to be created",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommentDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommentDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommentDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewItemDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/meetings/{meetingId}/comments/{commentId}": {
      "get": {
        "tags": [
          "Comments"
        ],
        "summary": "Get details of a comment belonging to a meeting",
        "description": "Get details of a comment belonging to a meeting by providing the meeting id and comment id.",
        "operationId": "GetComment",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "Meeting Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "commentId",
            "in": "path",
            "description": "Comment Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommentDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Comments"
        ],
        "summary": "Edit a comment for a meeting",
        "description": "Edit a comment for a meeting by providing the meeting id and comment id.",
        "operationId": "PatchComment",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "Meeting Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "commentId",
            "in": "path",
            "description": "Comment Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON patch document with updates for the comment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Comments"
        ],
        "summary": "Delete a Comment from a Meeting",
        "description": "Delete a Comment from a Meeting by providing the meeting id and comment id.",
        "operationId": "DeleteComment",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "Meeting Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "commentId",
            "in": "path",
            "description": "Comment Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/meetings/{meetingId}/comments/{commentId}/attachments": {
      "get": {
        "tags": [
          "Comments"
        ],
        "summary": "Get attachments summary of a comment belonging to a meeting",
        "description": "Get attachments summary of a comment belonging to a meeting by providing the meeting id and comment id.",
        "operationId": "GetCommentAttachments",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "Meeting Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "commentId",
            "in": "path",
            "description": "Comment Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttachmentSummaryDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Comments"
        ],
        "summary": "Create a comment attachment to a Meeting",
        "description": "Create a attachment on a comment of a Meeting by providing the meeting id and comment id and attachment details.",
        "operationId": "CreateCommentAttachment",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "Meeting Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "commentId",
            "in": "path",
            "description": "Comment Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewItemDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/meetings/{meetingId}/comments/{commentId}/attachments/{attachmentId}/download": {
      "get": {
        "tags": [
          "Comments"
        ],
        "summary": "Download single attachment detail of a comment belonging to a meeting",
        "description": "Download single attachment detail of a comment belonging to a meeting by providing the meeting id, comment id and attachment id.",
        "operationId": "DownloadCommentAttachmentForComment",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "Meeting Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "commentId",
            "in": "path",
            "description": "Comment Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attachmentId",
            "in": "path",
            "description": "Attachment Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/meetings/{meetingId}/events": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get all the record events that belong to a meeting",
        "description": "Get all the record events that belong to a meeting by providing the meeting id.",
        "operationId": "GetEvents",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "Meeting ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordEventSummaryDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/meetings/{meetingId}/events/{recordEventId}": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get details of a record event of a meeting",
        "description": "Get details of record event of meeting by providing recordeventid and meetingid",
        "operationId": "GetRecordEvent",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "Meeting Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "recordEventId",
            "in": "path",
            "description": "Record Event Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeetingEventDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/meetings/{meetingId}/attachments/{attachmentId}": {
      "delete": {
        "tags": [
          "Attachments"
        ],
        "summary": "Delete attachment from meeting",
        "description": "Delete a attachment from a meeting by providing the meeting id and attachment id.",
        "operationId": "SoftDeleteMeetingAttachment",
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "description": "Meeting Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "attachmentId",
            "in": "path",
            "description": "Attachment Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AttachmentSummaryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "mimeType": {
            "type": "string",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "nullable": true
      },
      "AttendeeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "emailAddress": {
            "type": "string",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "nullable": true
          }
        },
        "nullable": true
      },
      "CommentDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "authorId": {
            "type": "string",
            "format": "uuid"
          },
          "parentCommentId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "nullable": true
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttachmentSummaryDto"
            },
            "nullable": true
          },
          "subcomments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubcommentSummaryDto"
            },
            "nullable": true
          }
        },
        "nullable": true
      },
      "CommentSummaryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "nullable": true
          },
          "subcomments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubcommentSummaryDto"
            },
            "nullable": true
          }
        },
        "nullable": true
      },
      "CreateBodyDto": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "nullable": true
          }
        },
        "nullable": true
      },
      "CreateCommentDto": {
        "type": "object",
        "properties": {
          "authorId": {
            "type": "string",
            "format": "uuid"
          },
          "parentCommentId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "attachmentsCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateCustomFieldValueDto": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "minLength": 1,
            "type": "string"
          },
          "integerValue": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "textValue": {
            "type": "string",
            "nullable": true
          },
          "filePathValue": {
            "type": "string",
            "nullable": true
          },
          "numericValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "dateValue": {
            "type": "string",
            "nullable": true
          },
          "extendedTextValue": {
            "type": "string",
            "nullable": true
          },
          "contactLookupValues": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "optionValue": {
            "type": "string",
            "nullable": true
          },
          "optionValues": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "userTeamLookupValues": {
            "$ref": "#/components/schemas/UserTeamLookupDto"
          }
        },
        "description": "Set a value or values for a custom field identified by the field 'Code'. Only one of the fields (IntegerValue / TextValue / FilePathValue etc) will be used,\r\ndepending on the data type of the custom field corresponding to the 'Code' provided",
        "nullable": true
      },
      "CreateMeetingDto": {
        "required": [
          "author",
          "end",
          "start"
        ],
        "type": "object",
        "properties": {
          "author": {
            "$ref": "#/components/schemas/UserSerialDto"
          },
          "title": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "start": {
            "minLength": 1,
            "type": "string"
          },
          "end": {
            "minLength": 1,
            "type": "string"
          },
          "locations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "organizer": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "organizerId": {
            "type": "string",
            "format": "uuid"
          },
          "attendees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReferenceAttendeeDto"
            },
            "nullable": true
          },
          "alertAttendees": {
            "type": "boolean",
            "default": false
          },
          "alertAuthor": {
            "type": "boolean",
            "default": false
          },
          "relatedRecords": {
            "$ref": "#/components/schemas/RelatedRecordsDto"
          },
          "relatedContacts": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "relatedSymbols": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "body": {
            "$ref": "#/components/schemas/CreateBodyDto"
          },
          "customFieldValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateCustomFieldValueDto"
            },
            "nullable": true
          }
        }
      },
      "CustomFieldValueDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "options": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "contactValues": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "userTeamValues": {
            "$ref": "#/components/schemas/UserTeamLookupDto"
          }
        },
        "nullable": true
      },
      "LocationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "locationName": {
            "type": "string",
            "nullable": true
          }
        },
        "nullable": true
      },
      "MeetingDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "start": {
            "type": "string",
            "nullable": true
          },
          "end": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "nullable": true
          },
          "authorId": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "organizer": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "organizerId": {
            "type": "string",
            "format": "uuid"
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "averageRating": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "alertAttendees": {
            "type": "boolean"
          },
          "alertAuthor": {
            "type": "boolean"
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationDto"
            },
            "nullable": true
          },
          "attendees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttendeeDto"
            },
            "nullable": true
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldValueDto"
            },
            "nullable": true
          },
          "relatedSymbols": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "relatedRecords": {
            "$ref": "#/components/schemas/RelatedRecordsDto"
          },
          "relatedContacts": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "nullable": true
      },
      "MeetingEventDto": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "type": "string",
            "nullable": true
          },
          "changeList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecordChangeDto"
            },
            "nullable": true
          }
        },
        "nullable": true
      },
      "MeetingSummaryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "start": {
            "type": "string",
            "nullable": true
          },
          "end": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "nullable": true
          },
          "authorId": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "organizer": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "organizerId": {
            "type": "string",
            "format": "uuid"
          },
          "attachmentIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "relatedSymbols": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationDto"
            },
            "nullable": true
          },
          "attendees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttendeeDto"
            },
            "nullable": true
          },
          "customFieldValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldValueDto"
            },
            "nullable": true
          }
        },
        "nullable": true
      },
      "NewItemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "nullable": true
      },
      "Operation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "nullable": true
      },
      "OperationType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32",
        "description": "Type can be one of 0-Add, 1-Remove, 2-Replace, 3-Move, 4-Copy, 5-Test, 6-Get"
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {},
        "nullable": true
      },
      "RecordChangeDto": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "nullable": true
          },
          "operation": {
            "type": "string",
            "nullable": true
          },
          "oldValue": {
            "type": "string",
            "nullable": true
          },
          "newValue": {
            "type": "string",
            "nullable": true
          },
          "oldList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "newList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "nullable": true
      },
      "RecordEventSummaryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "nullable": true
          }
        },
        "nullable": true
      },
      "ReferenceAttendeeDto": {
        "type": "object",
        "properties": {
          "emailAddress": {
            "type": "string",
            "nullable": true
          }
        },
        "nullable": true
      },
      "RelatedRecordsDto": {
        "type": "object",
        "properties": {
          "noteIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "meetingIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "nullable": true
      },
      "SubcommentSummaryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "nullable": true
          }
        },
        "nullable": true
      },
      "UpdateMeetingDto": {
        "required": [
          "end",
          "identifier",
          "start",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "identifier": {
            "minLength": 1,
            "type": "string"
          },
          "start": {
            "minLength": 1,
            "type": "string"
          },
          "end": {
            "minLength": 1,
            "type": "string"
          },
          "locations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "organizer": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "organizerId": {
            "type": "string",
            "format": "uuid"
          },
          "attendees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReferenceAttendeeDto"
            },
            "nullable": true
          },
          "alertAttendees": {
            "type": "boolean",
            "default": false
          },
          "alertAuthor": {
            "type": "boolean",
            "default": false
          },
          "relatedRecords": {
            "$ref": "#/components/schemas/RelatedRecordsDto"
          },
          "relatedContacts": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "relatedSymbols": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "body": {
            "$ref": "#/components/schemas/CreateBodyDto"
          },
          "customFieldValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateCustomFieldValueDto"
            },
            "nullable": true
          }
        }
      },
      "UserSerialDto": {
        "required": [
          "serialNumber",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "serialNumber": {
            "maxLength": 8,
            "minLength": 0,
            "type": "string"
          }
        },
        "nullable": true
      },
      "UserTeamLookupDto": {
        "type": "object",
        "properties": {
          "userIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "teamIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          }
        },
        "nullable": true
      }
    },
    "securitySchemes": {
      "FactSetOAuth2": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://auth.factset.com/as/token.oauth2",
            "scopes": {}
          }
        }
      },
      "FactSetApiKey": {
        "type": "http",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "FactSetApiKey": []
    },
    {
      "FactSetOAuth2": []
    }
  ],
  "tags": [
    {
      "name": "Attachments",
      "description": "Attachments related operations"
    },
    {
      "name": "Comments",
      "description": "Comments related operations"
    },
    {
      "name": "Events",
      "description": "Events related operations"
    },
    {
      "name": "Meetings",
      "description": "Meetings related operations"
    }
  ],
  "externalDocs": {
    "description": "API Documentation",
    "url": "https://developer.factset.com/api-catalog/irn-meetings-api#apiDocumentation"
  }
}