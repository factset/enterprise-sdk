{
  "openapi": "3.0.0",
  "servers": [
    {
      "url": "https://api.factset.com/analytics/security-explanation/v1"
    }
  ],
  "info": {
    "contact": {
      "email": "api@factset.com",
      "name": "FactSet Research Systems",
      "url": "https://developer.factset.com/contact"
    },
    "description": "Allow clients to use Security Explanation through APIs.",
    "license": {
      "name": "Apache License, Version 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0"
    },
    "title": "Security Explanation API",
    "version": "1.4.0"
  },
  "externalDocs": {
    "description": "API Documentation",
    "url": "https://developer.factset.com/api-catalog/security-explanation-api"
  },
  "tags": [
    {
      "description": "Security Explanation",
      "name": "Security Explanation"
    }
  ],
  "paths": {
    "/explanation": {
      "post": {
        "description": "Create a new Security Explanation request with parameters.",
        "operationId": "createExplanation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SecurityExplanationParametersRoot"
              }
            }
          }
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "examples": {
                  "202 - Expected Response": {
                    "value": {
                      "data": {
                        "id": "80931ca92c7b432380dcd51f539c79f5",
                        "status": "executing"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ExplanationCreateResponseRoot"
                }
              }
            },
            "description": "Expected response, returns the poll ID in the status and poll URL in location header.",
            "headers": {
              "Location": {
                "$ref": "#/components/headers/Location"
              },
              "X-DataDirect-Request-Key": {
                "$ref": "#/components/headers/X-DataDirect-Request-Key"
              },
              "X-FactSet-Api-RateLimit-Limit": {
                "$ref": "#/components/headers/X-FactSet-Api-RateLimit-Limit"
              },
              "X-FactSet-Api-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-FactSet-Api-RateLimit-Remaining"
              },
              "X-FactSet-Api-RateLimit-Reset": {
                "$ref": "#/components/headers/X-FactSet-Api-RateLimit-Reset"
              },
              "X-FactSet-Api-Request-Key": {
                "$ref": "#/components/headers/X-FactSet-Api-Request-Key"
              }
            }
          },
          "400": {
            "description": "Invalid identifier provided.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIClientErrorResponse"
                },
                "examples": {
                  "400 - Bad Symbols": {
                    "value": {
                      "errors": [
                        {
                          "id": "667BBEFFBD1F4651",
                          "code": "BadRequest",
                          "title": "Failed to process request",
                          "detail": "Explanation creation failed"
                        }
                      ]
                    }
                  },
                  "400 - Date before 2020-12-31": {
                    "value": {
                      "errors": [
                        {
                          "id": "67D988B0C43D9B11",
                          "code": "BadRequest",
                          "title": "Failed to process request",
                          "detail": "Dates should be greater than 2020-12-31",
                          "source": {
                            "parameter": "endDate"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            },
            "headers": {
              "X-DataDirect-Request-Key": {
                "schema": {
                  "type": "string"
                },
                "description": "FactSet's request key header."
              },
              "X-FactSet-Api-Request-Key": {
                "schema": {
                  "type": "string"
                },
                "description": "Key to uniquely identify an Analytics API request. Only available after successful authentication."
              },
              "X-FactSet-Api-RateLimit-Limit": {
                "schema": {
                  "type": "string"
                },
                "description": "Number of allowed requests for the time window."
              },
              "X-FactSet-Api-RateLimit-Remaining": {
                "schema": {
                  "type": "string"
                },
                "description": "Number of requests left for the time window."
              },
              "X-FactSet-Api-RateLimit-Reset": {
                "schema": {
                  "type": "string"
                },
                "description": "Number of seconds remaining till rate limit resets."
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication.  ",
            "headers": {
              "X-DataDirect-Request-Key": {
                "schema": {
                  "type": "string"
                },
                "description": "FactSet's request key header."
              },
              "X-FactSet-Api-Request-Key": {
                "schema": {
                  "type": "string"
                },
                "description": "Key to uniquely identify an Analytics API request. Only available after successful authentication."
              }
            }
          },
          "403": {
            "description": "User is forbidden with current credentials.",
            "headers": {
              "X-DataDirect-Request-Key": {
                "schema": {
                  "type": "string"
                },
                "description": "FactSet's request key header."
              },
              "X-FactSet-Api-RateLimit-Limit": {
                "schema": {
                  "type": "string"
                },
                "description": "Number of allowed requests for the time window."
              },
              "X-FactSet-Api-RateLimit-Remaining": {
                "schema": {
                  "type": "string"
                },
                "description": "Number of requests left for the time window."
              },
              "X-FactSet-Api-RateLimit-Reset": {
                "schema": {
                  "type": "string"
                },
                "description": "Number of seconds remaining till rate limit resets."
              },
              "X-FactSet-Api-Request-Key": {
                "schema": {
                  "type": "string"
                },
                "description": "Key to uniquely identify an Analytics API request. Only available after successful authentication."
              }
            }
          },
          "429": {
            "description": "Rate limit reached. Wait till the time specified in Retry-After header value to make further requests.",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string"
                },
                "description": "Time to wait in seconds before making a new request as the rate limit has reached."
              },
              "X-DataDirect-Request-Key": {
                "schema": {
                  "type": "string"
                },
                "description": "FactSet's request key header."
              },
              "X-FactSet-Api-RateLimit-Limit": {
                "schema": {
                  "type": "string"
                },
                "description": "Number of allowed requests for the time window."
              },
              "X-FactSet-Api-RateLimit-Remaining": {
                "schema": {
                  "type": "string"
                },
                "description": "Number of requests left for the time window."
              },
              "X-FactSet-Api-Request-Key": {
                "schema": {
                  "type": "string"
                },
                "description": "Key to uniquely identify an Analytics API request. Only available after successful authentication."
              }
            }
          },
          "500": {
            "description": "Server error. Log the X-DataDirect-Request-Key header to assist in troubleshooting",
            "headers": {
              "X-DataDirect-Request-Key": {
                "schema": {
                  "type": "string"
                },
                "description": "FactSet's request key header."
              },
              "X-FactSet-Api-Request-Key": {
                "schema": {
                  "type": "string"
                },
                "description": "Key to uniquely identify an Analytics API request. Only available after successful authentication."
              }
            }
          },
          "503": {
            "description": "Request timed out. Retry the request in sometime.",
            "headers": {
              "X-DataDirect-Request-Key": {
                "schema": {
                  "type": "string"
                },
                "description": "FactSet's request key header."
              },
              "X-FactSet-Api-Request-Key": {
                "schema": {
                  "type": "string"
                },
                "description": "Key to uniquely identify an Analytics API request. Only available after successful authentication."
              }
            }
          }
        },
        "summary": "Request explanation",
        "tags": [
          "Security Explanation"
        ]
      }
    },
    "/explanation/{id}/status": {
      "get": {
        "description": "Use this endpoint to fetch the status of the given explanation ID.",
        "operationId": "checkExplanationStatus",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "examples": {
                  "Completed request": {
                    "value": {
                      "data": {
                        "result": "https://api.factset.com/analytics/security-explanation/v0/explanation/b2af976907c7465b8ad48dc7ecd4a96b/result",
                        "id": "80931ca92c7b432380dcd51f539c79f5",
                        "status": "completed"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ExplanationStatusRoot"
                }
              }
            },
            "description": "Expected response, explanation was created.",
            "headers": {
              "Location": {
                "$ref": "#/components/headers/Location"
              },
              "Content-Encoding": {
                "$ref": "#/components/headers/Content-Encoding"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              },
              "Transfer-Encoding": {
                "$ref": "#/components/headers/Transfer-Encoding"
              },
              "X-DataDirect-Request-Key": {
                "$ref": "#/components/headers/X-DataDirect-Request-Key"
              },
              "X-FactSet-Api-RateLimit-Limit": {
                "$ref": "#/components/headers/X-FactSet-Api-RateLimit-Limit"
              },
              "X-FactSet-Api-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-FactSet-Api-RateLimit-Remaining"
              },
              "X-FactSet-Api-RateLimit-Reset": {
                "$ref": "#/components/headers/X-FactSet-Api-RateLimit-Reset"
              },
              "X-FactSet-Api-Request-Key": {
                "$ref": "#/components/headers/X-FactSet-Api-Request-Key"
              }
            }
          },
          "202": {
            "description": "Expected response, returns the poll ID with status.",
            "content": {
              "application/json": {
                "examples": {
                  "202 - Expected Response": {
                    "value": {
                      "data": {
                        "id": "80931ca92c7b432380dcd51f539c79f5",
                        "status": "queued"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ExplanationCreateResponseRoot"
                }
              }
            },
            "headers": {
              "Location": {
                "$ref": "#/components/headers/Location"
              },
              "X-DataDirect-Request-Key": {
                "schema": {
                  "type": "string"
                },
                "description": "FactSet's request key header."
              },
              "X-FactSet-Api-RateLimit-Limit": {
                "schema": {
                  "type": "string"
                },
                "description": "Number of allowed requests for the time window."
              },
              "X-FactSet-Api-RateLimit-Remaining": {
                "schema": {
                  "type": "string"
                },
                "description": "Number of requests left for the time window."
              },
              "X-FactSet-Api-RateLimit-Reset": {
                "schema": {
                  "type": "string"
                },
                "description": "Number of seconds remaining till rate limit resets."
              },
              "X-FactSet-Api-Request-Key": {
                "schema": {
                  "type": "string"
                },
                "description": "Key to uniquely identify an Analytics API request. Only available after successful authentication."
              }
            }
          },
          "400": {
            "description": "Invalid identifier provided.",
            "headers": {
              "X-DataDirect-Request-Key": {
                "schema": {
                  "type": "string"
                },
                "description": "FactSet's request key header."
              },
              "X-FactSet-Api-Request-Key": {
                "schema": {
                  "type": "string"
                },
                "description": "Key to uniquely identify an Analytics API request. Only available after successful authentication."
              },
              "X-FactSet-Api-RateLimit-Limit": {
                "schema": {
                  "type": "string"
                },
                "description": "Number of allowed requests for the time window."
              },
              "X-FactSet-Api-RateLimit-Remaining": {
                "schema": {
                  "type": "string"
                },
                "description": "Number of requests left for the time window."
              },
              "X-FactSet-Api-RateLimit-Reset": {
                "schema": {
                  "type": "string"
                },
                "description": "Number of seconds remaining till rate limit resets."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIClientErrorResponse"
                },
                "examples": {
                  "400 - Bad Request": {
                    "value": {
                      "errors": [
                        {
                          "id": "667BBEFFBD1F4651",
                          "code": "BadRequest",
                          "title": "Failed to process request",
                          "detail": "Error processing the request"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication.",
            "headers": {
              "X-DataDirect-Request-Key": {
                "$ref": "#/components/headers/X-DataDirect-Request-Key"
              },
              "X-FactSet-Api-Request-Key": {
                "$ref": "#/components/headers/X-FactSet-Api-Request-Key"
              }
            }
          },
          "403": {
            "description": "User is forbidden with current credentials.",
            "headers": {
              "X-DataDirect-Request-Key": {
                "$ref": "#/components/headers/X-DataDirect-Request-Key"
              },
              "X-FactSet-Api-RateLimit-Limit": {
                "$ref": "#/components/headers/X-FactSet-Api-RateLimit-Limit"
              },
              "X-FactSet-Api-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-FactSet-Api-RateLimit-Remaining"
              },
              "X-FactSet-Api-RateLimit-Reset": {
                "$ref": "#/components/headers/X-FactSet-Api-RateLimit-Reset"
              },
              "X-FactSet-Api-Request-Key": {
                "$ref": "#/components/headers/X-FactSet-Api-Request-Key"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "404 - Invalid Explanation ID Provided": {
                    "value": {
                      "errors": [
                        {
                          "code": "NotFound",
                          "detail": "Explanation not found",
                          "id": "667BC1D3CCF1F383",
                          "title": "Failed to process request"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/APIClientErrorResponse"
                }
              }
            },
            "description": "Explanation was already returned, provided id was not a requested explanation, or the explanation requested was cancelled.",
            "headers": {
              "X-DataDirect-Request-Key": {
                "$ref": "#/components/headers/X-DataDirect-Request-Key"
              },
              "X-FactSet-Api-RateLimit-Limit": {
                "$ref": "#/components/headers/X-FactSet-Api-RateLimit-Limit"
              },
              "X-FactSet-Api-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-FactSet-Api-RateLimit-Remaining"
              },
              "X-FactSet-Api-RateLimit-Reset": {
                "$ref": "#/components/headers/X-FactSet-Api-RateLimit-Reset"
              },
              "X-FactSet-Api-Request-Key": {
                "$ref": "#/components/headers/X-FactSet-Api-Request-Key"
              }
            }
          },
          "429": {
            "description": "Rate limit reached. Wait till the time specified in Retry-After header value to make further requests.",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/Retry-After"
              },
              "X-DataDirect-Request-Key": {
                "$ref": "#/components/headers/X-DataDirect-Request-Key"
              },
              "X-FactSet-Api-RateLimit-Limit": {
                "$ref": "#/components/headers/X-FactSet-Api-RateLimit-Limit"
              },
              "X-FactSet-Api-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-FactSet-Api-RateLimit-Remaining"
              },
              "X-FactSet-Api-Request-Key": {
                "$ref": "#/components/headers/X-FactSet-Api-Request-Key"
              }
            }
          },
          "500": {
            "description": "Server error. Log the X-DataDirect-Request-Key header to assist in troubleshooting.",
            "headers": {
              "X-DataDirect-Request-Key": {
                "$ref": "#/components/headers/X-DataDirect-Request-Key"
              },
              "X-FactSet-Api-Request-Key": {
                "$ref": "#/components/headers/X-FactSet-Api-Request-Key"
              }
            }
          },
          "503": {
            "description": "Request timed out. Retry the request in sometime.",
            "headers": {
              "X-DataDirect-Request-Key": {
                "$ref": "#/components/headers/X-DataDirect-Request-Key"
              },
              "X-FactSet-Api-Request-Key": {
                "$ref": "#/components/headers/X-FactSet-Api-Request-Key"
              }
            }
          }
        },
        "summary": "Get explanation status by id",
        "tags": [
          "Security Explanation"
        ],
        "x-factset-different-success-responses": true
      }
    },
    "/explanation/{id}/result": {
      "get": {
        "description": "Use this endpoint to fetch the results of the given explanation ID.",
        "operationId": "fetchExplanationResults",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "200- Expected Response": {
                    "$ref": "#/components/examples/SecurityExplanationResponseRoot"
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/SecurityExplanationResponseRoot"
                }
              }
            },
            "description": "Expected response if explanation is generated.",
            "headers": {
              "Content-Encoding": {
                "$ref": "#/components/headers/Content-Encoding"
              },
              "Content-Type": {
                "$ref": "#/components/headers/Content-Type"
              },
              "Transfer-Encoding": {
                "$ref": "#/components/headers/Transfer-Encoding"
              },
              "X-DataDirect-Request-Key": {
                "$ref": "#/components/headers/X-DataDirect-Request-Key"
              },
              "X-FactSet-Api-RateLimit-Limit": {
                "$ref": "#/components/headers/X-FactSet-Api-RateLimit-Limit"
              },
              "X-FactSet-Api-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-FactSet-Api-RateLimit-Remaining"
              },
              "X-FactSet-Api-RateLimit-Reset": {
                "$ref": "#/components/headers/X-FactSet-Api-RateLimit-Reset"
              },
              "X-FactSet-Api-Request-Key": {
                "$ref": "#/components/headers/X-FactSet-Api-Request-Key"
              }
            }
          },
          "400": {
            "description": "Invalid identifier provided.\n",
            "headers": {
              "X-DataDirect-Request-Key": {
                "schema": {
                  "type": "string"
                },
                "description": "FactSet's request key header."
              },
              "X-FactSet-Api-Request-Key": {
                "schema": {
                  "type": "string"
                },
                "description": "Key to uniquely identify an Analytics API request. Only available after successful authentication."
              },
              "X-FactSet-Api-RateLimit-Limit": {
                "schema": {
                  "type": "string"
                },
                "description": "Number of allowed requests for the time window."
              },
              "X-FactSet-Api-RateLimit-Remaining": {
                "schema": {
                  "type": "string"
                },
                "description": "Number of requests left for the time window."
              },
              "X-FactSet-Api-RateLimit-Reset": {
                "schema": {
                  "type": "string"
                },
                "description": "Number of seconds remaining till rate limit resets."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIClientErrorResponse"
                },
                "examples": {
                  "400 - Bad Request": {
                    "value": {
                      "errors": [
                        {
                          "id": "667BBEFFBD1F4651",
                          "code": "BadRequest",
                          "title": "Failed to process request",
                          "detail": "Error processing the request"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication.",
            "headers": {
              "X-DataDirect-Request-Key": {
                "$ref": "#/components/headers/X-DataDirect-Request-Key"
              },
              "X-FactSet-Api-Request-Key": {
                "$ref": "#/components/headers/X-FactSet-Api-Request-Key"
              }
            }
          },
          "403": {
            "description": "User is forbidden with current credentials.",
            "headers": {
              "X-DataDirect-Request-Key": {
                "$ref": "#/components/headers/X-DataDirect-Request-Key"
              },
              "X-FactSet-Api-RateLimit-Limit": {
                "$ref": "#/components/headers/X-FactSet-Api-RateLimit-Limit"
              },
              "X-FactSet-Api-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-FactSet-Api-RateLimit-Remaining"
              },
              "X-FactSet-Api-RateLimit-Reset": {
                "$ref": "#/components/headers/X-FactSet-Api-RateLimit-Reset"
              },
              "X-FactSet-Api-Request-Key": {
                "$ref": "#/components/headers/X-FactSet-Api-Request-Key"
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "examples": {
                  "404 - Invalid Explanation ID Provided": {
                    "value": {
                      "errors": [
                        {
                          "code": "NotFound",
                          "detail": "Explanation not found",
                          "id": "667BC1D3CCF1F383",
                          "title": "Failed to process request"
                        }
                      ]
                    }
                  },
                  "404 - Explanation Not Completed": {
                    "value": {
                      "errors": [
                        {
                          "code": "NotFound",
                          "detail": "Explanation creation for 1 not completed yet",
                          "id": "667BC1D3CCF1F383",
                          "title": "Failed to process request"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/APIClientErrorResponse"
                }
              }
            },
            "description": "Provided id was not a requested explanation.",
            "headers": {
              "X-DataDirect-Request-Key": {
                "$ref": "#/components/headers/X-DataDirect-Request-Key"
              },
              "X-FactSet-Api-RateLimit-Limit": {
                "$ref": "#/components/headers/X-FactSet-Api-RateLimit-Limit"
              },
              "X-FactSet-Api-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-FactSet-Api-RateLimit-Remaining"
              },
              "X-FactSet-Api-RateLimit-Reset": {
                "$ref": "#/components/headers/X-FactSet-Api-RateLimit-Reset"
              },
              "X-FactSet-Api-Request-Key": {
                "$ref": "#/components/headers/X-FactSet-Api-Request-Key"
              }
            }
          },
          "429": {
            "description": "Rate limit reached. Wait till the time specified in Retry-After header value to make further requests.",
            "headers": {
              "Retry-After": {
                "$ref": "#/components/headers/Retry-After"
              },
              "X-DataDirect-Request-Key": {
                "$ref": "#/components/headers/X-DataDirect-Request-Key"
              },
              "X-FactSet-Api-RateLimit-Limit": {
                "$ref": "#/components/headers/X-FactSet-Api-RateLimit-Limit"
              },
              "X-FactSet-Api-RateLimit-Remaining": {
                "$ref": "#/components/headers/X-FactSet-Api-RateLimit-Remaining"
              },
              "X-FactSet-Api-Request-Key": {
                "$ref": "#/components/headers/X-FactSet-Api-Request-Key"
              }
            }
          },
          "500": {
            "description": "Server error. Log the X-DataDirect-Request-Key header to assist in troubleshooting.",
            "headers": {
              "X-DataDirect-Request-Key": {
                "$ref": "#/components/headers/X-DataDirect-Request-Key"
              },
              "X-FactSet-Api-Request-Key": {
                "$ref": "#/components/headers/X-FactSet-Api-Request-Key"
              }
            }
          },
          "503": {
            "description": "Request timed out. Retry the request in sometime.",
            "headers": {
              "X-DataDirect-Request-Key": {
                "$ref": "#/components/headers/X-DataDirect-Request-Key"
              },
              "X-FactSet-Api-Request-Key": {
                "$ref": "#/components/headers/X-FactSet-Api-Request-Key"
              }
            }
          }
        },
        "summary": "Get explanation results by id",
        "tags": [
          "Security Explanation"
        ]
      }
    }
  },
  "components": {
    "examples": {
      "SecurityExplanationResponseRoot": {
        "value": {
          "data": {
            "explanation": "x% return driven from A event at Y time"
          }
        }
      }
    },
    "headers": {
      "Content-Encoding": {
        "description": "Standard HTTP header. Header value based on Accept-Encoding Request header.",
        "schema": {
          "description": "Standard HTTP header. Header value based on Accept-Encoding Request header.",
          "type": "string"
        }
      },
      "Content-Type": {
        "description": "Standard HTTP header.",
        "schema": {
          "description": "Standard HTTP header.",
          "type": "string"
        }
      },
      "Location": {
        "description": "The URL to poll for status or fetch the results",
        "schema": {
          "type": "string"
        }
      },
      "Retry-After": {
        "description": "Time to wait in seconds before making a new request as the rate limit has reached.",
        "schema": {
          "type": "string"
        }
      },
      "Transfer-Encoding": {
        "description": "Standard HTTP header. Header value will be set to Chunked if Accept-Encoding header is specified.",
        "schema": {
          "description": "Standard HTTP header. Header value will be set to Chunked if Accept-Encoding header is specified.",
          "type": "string"
        }
      },
      "X-DataDirect-Request-Key": {
        "description": "FactSet's request key header.",
        "schema": {
          "description": "FactSet's request key header.",
          "type": "string"
        }
      },
      "X-FactSet-Api-RateLimit-Limit": {
        "description": "Number of allowed requests for the time window.",
        "schema": {
          "type": "string"
        }
      },
      "X-FactSet-Api-RateLimit-Remaining": {
        "description": "Number of requests left for the time window.",
        "schema": {
          "type": "string"
        }
      },
      "X-FactSet-Api-RateLimit-Reset": {
        "description": "Number of seconds remaining till rate limit resets.",
        "schema": {
          "type": "string"
        }
      },
      "X-FactSet-Api-Request-Key": {
        "description": "Key to uniquely identify an Analytics API request. Only available after successful authentication.",
        "schema": {
          "description": "Key to uniquely identify an Analytics API request. Only available after successful authentication.",
          "type": "string"
        }
      }
    },
    "parameters": {
      "id": {
        "description": "id",
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "example": "80931ca92c7b432380dcd51f539c79f5",
          "type": "string"
        }
      }
    },
    "schemas": {
      "ErrorSource": {
        "description": "The pointer and parameter of the error",
        "properties": {
          "parameter": {
            "description": "Indicates which path or URI query parameter caused the error",
            "nullable": true,
            "type": "string"
          },
          "pointer": {
            "description": "Pointer to the associated entity in the request body",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "APIError": {
        "description": "Full details of any error",
        "required": [
          "code",
          "id",
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Identifier for the error (the Chain ID)",
            "type": "string"
          },
          "code": {
            "description": "The error code",
            "type": "string"
          },
          "title": {
            "type": "string",
            "description": "The title of the error"
          },
          "detail": {
            "description": "Explanation specific to the occurrence of the error",
            "type": "string",
            "nullable": true
          },
          "source": {
            "$ref": "#/components/schemas/ErrorSource"
          }
        }
      },
      "APIClientErrorResponse": {
        "type": "object",
        "description": "The response schema for errors",
        "properties": {
          "errors": {
            "description": "List of errors",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/APIError"
            },
            "nullable": true
          }
        }
      },
      "ExplanationStatus": {
        "description": "Details of the explanation.",
        "title": "ExplanationStatus",
        "type": "object",
        "properties": {
          "result": {
            "type": "string",
            "description": "The result URL of the explanation"
          },
          "id": {
            "description": "Explanation identifier",
            "type": "string",
            "nullable": true
          },
          "status": {
            "description": "Explanation status",
            "enum": [
              "queued",
              "executing",
              "completed"
            ],
            "type": "string"
          }
        }
      },
      "ExplanationStatusRoot": {
        "description": "The status of the explnation as per FactSets API standards.",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ExplanationStatus"
          }
        },
        "required": [
          "data"
        ],
        "title": "ExplanationStatusRoot",
        "type": "object"
      },
      "ExplanationCreateResponse": {
        "description": "Details of the explanation.",
        "title": "ExplanationCreateResponse",
        "type": "object",
        "properties": {
          "id": {
            "description": "Explanation identifier",
            "type": "string",
            "nullable": true
          },
          "status": {
            "description": "Explanation status",
            "enum": [
              "queued",
              "executing",
              "completed"
            ],
            "type": "string"
          }
        }
      },
      "ExplanationCreateResponseRoot": {
        "description": "The status of the explnation as per FactSets API standards.",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ExplanationCreateResponse"
          }
        },
        "required": [
          "data"
        ],
        "title": "ExplanationCreateResponseRoot",
        "type": "object"
      },
      "SecurityExplanationResponse": {
        "description": "Result from Security Explanation",
        "properties": {
          "explanation": {
            "description": "Generated explanation for the security",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SecurityExplanationResponseRoot": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SecurityExplanationResponse"
          },
          "meta": {
            "type": "object",
            "description": "Metadata of the response."
          }
        },
        "required": [
          "data"
        ],
        "title": "",
        "type": "object",
        "description": "Top-level response object"
      },
      "SecurityExplanationRequestParameters": {
        "type": "object",
        "description": "Parameters for the security explanation request",
        "required": [
          "id",
          "startDate",
          "endDate"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Accepted ID types include Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids.",
            "example": "FDS-US"
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "description": "Start date of the explain request in YYYY-MM-DD format.",
            "example": "2024-01-01"
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "description": "End date of the explain request in YYYY-MM-DD format.",
            "example": "2024-01-15"
          },
          "enableLinks": {
            "type": "boolean",
            "description": "Include or exclude hyperlinks to underlying sources.",
            "default": false,
            "example": false
          },
          "explanationStyle": {
            "type": "string",
            "enum": [
              "short",
              "long"
            ],
            "description": "Determines the style of the Explanation",
            "default": "short",
            "example": "short"
          },
          "includePerformance": {
            "type": "boolean",
            "description": "Include or exclude the company's total return for the request period.",
            "default": false,
            "example": false
          },
          "internalInvestmentRationale": {
            "type": "string",
            "enum": [
              "none",
              "summary",
              "footnote"
            ],
            "description": "For IRN users only; select to include a summary, footnotes, or no IRN notes for the period.",
            "default": "none",
            "example": "none"
          },
          "includeCompanyDescription": {
            "type": "boolean",
            "description": "Include or exclude the target company's business description.",
            "default": false,
            "example": false
          },
          "includeMarketSummary": {
            "type": "boolean",
            "description": "Include or exclude a second paragraph in the explanation, offering market and sector news relating to the target company for additional context.",
            "default": true,
            "example": true
          },
          "includeInternalInvestmentRationaleRecommendation": {
            "type": "boolean",
            "description": "For IRN users only; include or exclude your firm's rating in the summary or footnote.",
            "default": true,
            "example": true
          },
          "includeInternalInvestmentRationalePriceTarget": {
            "type": "boolean",
            "description": "For IRN users only; include or exclude your firm's price target in the summary or footnote.",
            "default": true,
            "example": true
          },
          "brokerResearchSummary": {
            "$ref": "#/components/schemas/BrokerResearchSummary"
          }
        }
      },
      "SecurityExplanationParametersRoot": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SecurityExplanationRequestParameters"
          }
        },
        "required": [
          "data"
        ],
        "description": "Top-level data container object.",
        "type": "object"
      },
      "BrokerResearchSummary": {
        "type": "object",
        "description": "Broker research summary configuration object.",
        "properties": {
          "style": {
            "enum": [
              "none",
              "summary",
              "footnote"
            ],
            "type": "string",
            "default": "none",
            "description": "Include summarized broker research notes on the company, or just the footnote, or none. Only available for Broker Research users"
          },
          "brokerIds": {
            "type": "array",
            "description": "List of broker IDs covering the company to receive individual research summaries for each over the specified period.Summaries are presented separately by broker, not combined.",
            "items": {
              "type": "integer",
              "format": "int32",
              "description": "broker IDs",
              "example": 6
            }
          }
        }
      }
    },
    "securitySchemes": {
      "FactSetOAuth2": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://auth.factset.com/as/token.oauth2",
            "scopes": {}
          }
        }
      },
      "FactSetApiKey": {
        "type": "http",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "FactSetApiKey": []
    },
    {
      "FactSetOAuth2": []
    }
  ]
}