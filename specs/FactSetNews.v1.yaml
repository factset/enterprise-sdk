openapi: 3.0.3
info:
  title: News API
  description: >

    The FactSet News API provides access to FactSetâ€™s news alongside business
    logic that allows users to replicate views and functionality consistent with
    the experience provided by the Workstation.

    This API provides the ability to create views and pull news headlines based
    on specific filters. There are the filters available for News:


    * Watchlists/Indices/Tickers

    * Sources

    * Company Filters

    * Market Topics

    * Countries

    * Regions


      
  version: 1.0.0
  contact:
    name: FactSet Research Systems
    url: https://developer.factset.com/contact
    email: api@factset.com
  license:
    name: Apache License, Version 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
servers:
  - url: https://api.factset.com/content/news/v1
tags:
  - name: Filters
    description: Get flattened or structured filters
  - name: Headlines
    description: Get headlines for a specified view or specified filters
  - name: Views
    description: Create, edit and delete views
paths:
  /views:
    get:
      summary: Retrieves a list of search views created in News app
      description: >-
        This endpoint allows you to pull the full list of app views that have
        been previously saved.
      tags:
        - Views
      operationId: getFactSetNewsViews
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Views'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default400ResponseExample:
                  $ref: '#/components/examples/400Example'
        '401':
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default401ResponseExample:
                  $ref: '#/components/examples/401Example'
        '429':
          $ref: '#/components/responses/429'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default500ResponseExample:
                  $ref: '#/components/examples/500Example'
  /views/create:
    post:
      summary: Creates and saves a FactSet News view
      description: >-
        This endpoint allows you to create a new FactSet News view. Select
        watchlists/tickers and filters of your choice to create and save a view.
        Please refer to `/filters` endpoint to obtain the values.
      tags:
        - Views
      operationId: createFactSetNewsView
      requestBody:
        $ref: '#/components/requestBodies/createOrEditViewBody'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateViewResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default400ResponseExample:
                  $ref: '#/components/examples/400Example'
        '401':
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default401ResponseExample:
                  $ref: '#/components/examples/401Example'
        '429':
          $ref: '#/components/responses/429'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default500ResponseExample:
                  $ref: '#/components/examples/500Example'
  /views/update:
    post:
      summary: Edit an existing FactSet News view with filters specified
      description: >-
        This endpoint allows you to edit the criteria used for a previously
        saved FactSet News view.
      tags:
        - Views
      operationId: editFactSetNewsView
      requestBody:
        $ref: '#/components/requestBodies/createOrEditViewBody'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default400ResponseExample:
                  $ref: '#/components/examples/400Example'
        '401':
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default401ResponseExample:
                  $ref: '#/components/examples/401Example'
        '429':
          $ref: '#/components/responses/429'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default500ResponseExample:
                  $ref: '#/components/examples/500Example'
  /views/delete:
    post:
      summary: Deletes an existing App view
      description: This endpoint allows you to delete a previously saved view.
      tags:
        - Views
      operationId: deleteView
      requestBody:
        $ref: '#/components/requestBodies/deleteViewBody'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default400ResponseExample:
                  $ref: '#/components/examples/400Example'
        '401':
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default401ResponseExample:
                  $ref: '#/components/examples/401Example'
        '429':
          $ref: '#/components/responses/429'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default500ResponseExample:
                  $ref: '#/components/examples/500Example'
  /headlines:
    post:
      summary: Retrieve FactSet News headlines for the given filters
      description: >-
        This endpoint will pull all FactSet News headlines. Filters can be
        specified via the endpoint below. Please refer to `/filters` endpoint to
        obtain the values.
      tags:
        - Headlines
      operationId: getFactSetNewsHeadlines
      requestBody:
        $ref: '#/components/requestBodies/HeadlinesRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default400ResponseExample:
                  $ref: '#/components/examples/400Example'
        '401':
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default401ResponseExample:
                  $ref: '#/components/examples/401Example'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default404ResponseExample:
                  $ref: '#/components/examples/404Example'
        '429':
          $ref: '#/components/responses/429'
  /headlines/view:
    post:
      summary: Retrieve FactSet News headlines for given view
      description: >-
        This endpoint allows you to pull all FactSet News Headlines for a saved
        view. Views can be created via the 'Create Views' endpoint.
      tags:
        - Headlines
      operationId: getFactSetNewsHeadlinesByView
      requestBody:
        $ref: '#/components/requestBodies/HeadlinesRequestByView'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default400ResponseExample:
                  $ref: '#/components/examples/400Example'
        '401':
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default401ResponseExample:
                  $ref: '#/components/examples/401Example'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default404ResponseExample:
                  $ref: '#/components/examples/404Example'
        '429':
          $ref: '#/components/responses/429'
  /quick-alert/create:
    post:
      summary: Creates a quick-alert for given saved view
      description: >-
        This endpoint takes in a view name and provides realtime email updates
        on new stories coming in for the view. Only one quick alert can be
        enabled for a view at a time.
      tags:
        - Views
      operationId: createQuickAlertForView
      requestBody:
        $ref: '#/components/requestBodies/QuickAlertsBody'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuickAlertsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default400ResponseExample:
                  $ref: '#/components/examples/400Example'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default404ResponseExample:
                  $ref: '#/components/examples/404Example'
        '429':
          $ref: '#/components/responses/429'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default500ResponseExample:
                  $ref: '#/components/examples/500Example'
  /quick-alert/delete:
    post:
      summary: Deletes an existing quick alert for a view.
      description: >-
        This endpoint allows you to delete a quick alert from a previously saved
        view.
      tags:
        - Views
      operationId: deleteQuickalertView
      requestBody:
        $ref: '#/components/requestBodies/QuickAlertsBody'
      responses:
        '204':
          description: Quick alert deleted.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default400ResponseExample:
                  $ref: '#/components/examples/400Example'
        '401':
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default401ResponseExample:
                  $ref: '#/components/examples/401Example'
        '429':
          $ref: '#/components/responses/429'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default500ResponseExample:
                  $ref: '#/components/examples/500Example'
  /filters:
    get:
      summary: Retrieve all FactSet News filters
      tags:
        - Filters
      operationId: getFilters
      parameters:
        - in: query
          description: >
            Pass a list of filters to return the respective type of filter.
            Accepted list values are "structured" and/or "flattened". If no
            _attributes are specified, all filters will be returned in the
            response (this is the default response).
          name: _attributes
          schema:
            type: array
            items:
              type: string
              maxLength: 11
              enum:
                - structured
                - flattened
            maxItems: 2
            uniqueItems: true
          explode: false
          required: false
      description: >-
        If structured flag is set, parent and child filter information will be
        returned. If flattened flag is set, flattened filters will be returned
        which can be used with the `/headlines` and `/views/create` endpoints.
        Both flags can be set to return both sets of filters.  If no params are
        provided it will return both.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default400ResponseExample:
                  $ref: '#/components/examples/400Example'
        '401':
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default401ResponseExample:
                  $ref: '#/components/examples/401Example'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default404ResponseExample:
                  $ref: '#/components/examples/404Example'
        '429':
          $ref: '#/components/responses/429'
  /filters/sources:
    get:
      summary: Retrieve all News filter sources
      tags:
        - Filters
      operationId: getNewsFiltersSources
      parameters:
        - in: query
          description: >
            Pass a list of filters to return the respective type of filter
            sources. Accepted list values are "structured" and/or "flattened".
            If no _attributes are specified, all filters will be returned in the
            response (this is the default response).
          name: _attributes
          schema:
            type: array
            items:
              type: string
              maxLength: 11
              enum:
                - structured
                - flattened
            maxItems: 2
            uniqueItems: true
          explode: false
          required: false
      description: >-
        If structured flag is set, parent and child filter information will be
        returned. If flattened flag is set, flattened filters will be returned
        which can be used with the `/headlines` and `/views/create` endpoints.
        Both flags can be set to return both sets of filters.  If no params are
        provided it will return both.
      responses:
        '200':
          description: Returns News Sources.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterSourcesResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default400ResponseExample:
                  $ref: '#/components/examples/400Example'
        '401':
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default401ResponseExample:
                  $ref: '#/components/examples/401Example'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default401ResponseExample:
                  $ref: '#/components/examples/404Example'
        '429':
          $ref: '#/components/responses/429'
  /filters/categories:
    get:
      summary: Retrieve all News filter categories
      tags:
        - Filters
      operationId: getNewsFiltersCategories
      parameters:
        - in: query
          description: >
            Pass a list of filters to return the respective type of filter
            categories. Accepted list values are "structured" and/or
            "flattened". If no _attributes are specified, all filters will be
            returned in the response (this is the default response).
          name: _attributes
          schema:
            type: array
            items:
              type: string
              maxLength: 11
              enum:
                - structured
                - flattened
            maxItems: 2
            uniqueItems: true
          explode: false
          required: false
      description: >-
        If structured flag is set, parent and child filter information will be
        returned. If flattened flag is set, flattened filters will be returned
        which can be used with the `/headlines` and `/views/create` endpoints.
        Both flags can be set to return both sets of filters.  If no params are
        provided it will return both.
      responses:
        '200':
          description: Returns news categories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterCategoriesResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default400ResponseExample:
                  $ref: '#/components/examples/400Example'
        '401':
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default401ResponseExample:
                  $ref: '#/components/examples/401Example'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default401ResponseExample:
                  $ref: '#/components/examples/404Example'
        '429':
          $ref: '#/components/responses/429'
  /filters/topics:
    get:
      summary: Retrieve all News filter topics
      tags:
        - Filters
      operationId: getNewsFiltersTopics
      parameters:
        - in: query
          description: >
            Pass a list of filters to return the respective type of filter
            topics. Accepted list values are "structured" and/or "flattened". If
            no _attributes are specified, all filters will be returned in the
            response (this is the default response).
          name: _attributes
          schema:
            type: array
            items:
              type: string
              maxLength: 11
              enum:
                - structured
                - flattened
            maxItems: 2
            uniqueItems: true
          explode: false
          required: false
      description: >-
        If structured flag is set, parent and child filter information will be
        returned. If flattened flag is set, flattened filters will be returned
        which can be used with the `/headlines` and `/views/create` endpoints.
        Both flags can be set to return both sets of filters.  If no params are
        provided it will return both.
      responses:
        '200':
          description: Returns News topics.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterTopicResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default400ResponseExample:
                  $ref: '#/components/examples/400Example'
        '401':
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default401ResponseExample:
                  $ref: '#/components/examples/401Example'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default401ResponseExample:
                  $ref: '#/components/examples/404Example'
        '429':
          $ref: '#/components/responses/429'
  /filters/regions:
    get:
      summary: Retrieve all News filter regions
      tags:
        - Filters
      operationId: getNewsFiltersRegions
      parameters:
        - in: query
          description: >
            Pass a list of filters to return the respective type of filter
            regions. Accepted list values are "structured" and/or "flattened".
            If no _attributes are specified, all filters will be returned in the
            response (this is the default response).
          name: _attributes
          schema:
            type: array
            items:
              type: string
              maxLength: 11
              enum:
                - structured
                - flattened
            maxItems: 2
            uniqueItems: true
          explode: false
          required: false
      description: >-
        If structured flag is set, parent and child filter information will be
        returned. If flattened flag is set, flattened filters will be returned
        which can be used with the `/headlines` and `/views/create` endpoints.
        Both flags can be set to return both sets of filters.  If no params are
        provided it will return both.
      responses:
        '200':
          description: Returns News regions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterRegionsResponse'
              examples:
                Sample Response:
                  value:
                    data:
                      structured:
                        regions:
                          - name: Africa
                            topLevel: true
                            value:
                              - AF
                            children:
                              - name: Algeria
                                value:
                                  - DZ
                      flattered:
                        regions:
                          - name: Africa
                            value:
                              - AF
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default400ResponseExample:
                  $ref: '#/components/examples/400Example'
        '401':
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default401ResponseExample:
                  $ref: '#/components/examples/401Example'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default401ResponseExample:
                  $ref: '#/components/examples/404Example'
        '429':
          $ref: '#/components/responses/429'
  /filters/countries:
    get:
      summary: Retrieve all News filter countries
      tags:
        - Filters
      operationId: getNewsFiltersCountries
      parameters:
        - in: query
          description: >
            Pass a list of filters to return the respective type of filter
            countries. Accepted list values are "structured" and/or "flattened".
            If no _attributes are specified, all filters will be returned in the
            response (this is the default response).
          name: _attributes
          schema:
            type: array
            items:
              type: string
              maxLength: 11
              enum:
                - structured
                - flattened
            maxItems: 2
            uniqueItems: true
          explode: false
          required: false
      description: >-
        If structured flag is set, parent and child filter information will be
        returned. If flattened flag is set, flattened filters will be returned
        which can be used with the `/headlines` and `/views/create` endpoints.
        Both flags can be set to return both sets of filters.  If no params are
        provided it will return both.
      responses:
        '200':
          description: Returns News countries.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterCountriesResponse'
              examples:
                Sample Response:
                  value:
                    data:
                      structured:
                        countries:
                          - name: Algeria
                            value:
                              - DZ
                      flattered:
                        countries:
                          - name: Algeria
                            value:
                              - DZ
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default400ResponseExample:
                  $ref: '#/components/examples/400Example'
        '401':
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default401ResponseExample:
                  $ref: '#/components/examples/401Example'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default401ResponseExample:
                  $ref: '#/components/examples/404Example'
        '429':
          $ref: '#/components/responses/429'
  /filters/watchlists:
    get:
      summary: Retrieve all News filter watchlists
      tags:
        - Filters
      operationId: getNewsFiltersWatchlists
      parameters:
        - in: query
          description: >
            Pass a list of filters to return the respective type of filter
            watchlists. Accepted list values are "structured" and/or
            "flattened". If no _attributes are specified, all filters will be
            returned in the response (this is the default response).
          name: _attributes
          schema:
            type: array
            items:
              type: string
              maxLength: 11
              enum:
                - structured
                - flattened
            maxItems: 2
            uniqueItems: true
          explode: false
          required: false
      description: >-
        If structured flag is set, parent and child filter information will be
        returned. If flattened flag is set, flattened filters will be returned
        which can be used with the `/headlines` and `/views/create` endpoints.
        Both flags can be set to return both sets of filters.  If no params are
        provided it will return both.
      responses:
        '200':
          description: Returns News watchlists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterWatchlistsResponse'
              examples:
                Sample Response:
                  value:
                    data:
                      structured:
                        watchlists:
                          - name: S&P 500
                            type: Index
                            value: SP50
                      flattered:
                        watchlists:
                          - name: S&P 500
                            type: Index
                            value: SP50
        '400':
          description: Bad Request. This can occur for invalid parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default400ResponseExample:
                  $ref: '#/components/examples/400Example'
        '401':
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default401ResponseExample:
                  $ref: '#/components/examples/401Example'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                default401ResponseExample:
                  $ref: '#/components/examples/404Example'
        '429':
          $ref: '#/components/responses/429'
externalDocs:
  description: API Documentation
  url: https://developer.factset.com/api-catalog/factset-news-api
security:
  - FactSetApiKey: []
  - FactSetOAuth2: []
components:
  securitySchemes:
    FactSetOAuth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://auth.factset.com/as/token.oauth2
          scopes: {}
    FactSetApiKey:
      type: http
      scheme: basic
  responses:
    '429':
      description: Limit Exceeded
      headers:
        X-FactSet-Api-RateLimit-Limit:
          description: Number of allowed requests for the time window.
          schema:
            type: string
        X-FactSet-Api-RateLimit-Limit-Remaining:
          description: Number of requests left for the time window.
          schema:
            type: string
        X-FactSet-Api-RateLimit-Limit-Reset:
          description: Number of seconds remaining till rate limit resets.
          schema:
            type: string
  schemas:
    FilterSourcesResponse:
      type: object
      description: Filters Sources Object
      properties:
        data:
          type: object
          properties:
            structured:
              $ref: '#/components/schemas/StructuredFiltersSources'
            flattened:
              $ref: '#/components/schemas/FlattenedFiltersSources'
    StructuredFiltersSources:
      type: object
      description: Structured Filters Sources Object
      properties:
        sources:
          type: array
          items:
            $ref: '#/components/schemas/StructuredFiltersSourcesObject'
    FlattenedFiltersSources:
      type: object
      description: Flattened Filters Sources Object
      properties:
        sources:
          type: array
          items:
            $ref: '#/components/schemas/FlattenedFiltersSourcesObject'
    StructuredFiltersSourcesObject:
      type: object
      properties:
        name:
          type: string
          description: The name of the source.
          example: Business Wire
        topLevel:
          description: Indicates if its a toplevel value or not.
          example: true
          type: boolean
        value:
          description: The value associated with the source.
          type: array
          items:
            type: string
            example: BW
        children:
          type: array
          items:
            $ref: '#/components/schemas/StructuredFiltersSourcesChildrenObject'
        criteriaLabel:
          type: string
          description: The criteria label associated with the source.
          example: DS_COR
        topLevelCriteria:
          type: boolean
          description: Indicates if its the toplevelCriteria value or not.
          example: true
      required:
        - name
    StructuredFiltersSourcesChildrenObject:
      type: object
      properties:
        name:
          type: string
          description: The name of the source.
          example: MTN Live Briefs PRO APAC
        value:
          description: The value associated with the source.
          type: array
          items:
            type: string
            example: NEWS_MTAPAC
        criteriaLabel:
          type: string
          description: The criteria label associated with the source.
          example: PRESS_RELEASE_SUBJECT
    FlattenedFiltersSourcesObject:
      type: object
      properties:
        name:
          type: string
          description: The name of the source.
        value:
          type: array
          items:
            type: string
          description: The value associated with the source.
      example:
        sources:
          name: OMX Regulatory News
          value:
            - OMX
    FilterCountriesResponse:
      type: object
      description: Filters Countries Object
      properties:
        data:
          type: object
          properties:
            structured:
              $ref: '#/components/schemas/StructuredFiltersCountries'
            flattened:
              $ref: '#/components/schemas/FlattenedFiltersCountries'
    FlattenedFiltersCountries:
      type: object
      description: Flattened Filters Countries Object
      properties:
        countries:
          type: array
          items:
            $ref: '#/components/schemas/FlattenedFiltersCountriesObject'
    StructuredFiltersCountries:
      type: object
      description: Structured Filters Countries Object
      properties:
        countries:
          type: array
          items:
            $ref: '#/components/schemas/StructuredFiltersCountriesObject'
    FilterCategoriesResponse:
      type: object
      description: Filters Categories Object
      properties:
        data:
          type: object
          properties:
            structured:
              $ref: '#/components/schemas/StructuredFiltersCategories'
            flattened:
              $ref: '#/components/schemas/FlattenedFiltersCategories'
    FlattenedFiltersCategories:
      type: object
      description: Flattened Filters Categories Object
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schemas/FlattenedFiltersCategoriesObject'
    StructuredFiltersCategories:
      type: object
      description: Structured Filters Categories Object
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schemas/StructuredFiltersCategoriesObject'
    FilterTopicResponse:
      type: object
      description: Filters Topic Object
      properties:
        data:
          type: object
          properties:
            structured:
              $ref: '#/components/schemas/StructuredFiltersTopics'
            flattened:
              $ref: '#/components/schemas/FlattenedFiltersTopics'
    FlattenedFiltersTopics:
      type: object
      description: Flattened Filters Topic Object
      properties:
        topics:
          type: array
          items:
            $ref: '#/components/schemas/FlattenedFiltersTopicsObject'
    StructuredFiltersTopics:
      type: object
      description: Structured Filters Topic Object
      properties:
        topics:
          type: array
          items:
            $ref: '#/components/schemas/StructuredFiltersTopicsObject'
    FilterRegionsResponse:
      type: object
      description: Filters Regions Object
      properties:
        data:
          type: object
          properties:
            structured:
              $ref: '#/components/schemas/StructuredFiltersRegions'
            flattened:
              $ref: '#/components/schemas/FlattenedFiltersRegions'
    FlattenedFiltersRegions:
      type: object
      description: Flattened Filters Regions Object
      properties:
        regions:
          type: array
          items:
            $ref: '#/components/schemas/FlattenedFiltersRegionsObject'
    StructuredFiltersRegions:
      type: object
      description: Structured Filters Regions Object
      properties:
        regions:
          type: array
          items:
            $ref: '#/components/schemas/StructuredFiltersRegionsObject'
    FlattenedFiltersWatchlistsObject:
      type: object
      properties:
        name:
          type: string
          description: The name of the watchlist.
        type:
          type: string
          description: The type of watchlist.
        value:
          type: string
          description: The value associated with the watchlist.
      example:
        name: S&P 500
        type: Index
        value: SP50
    FilterWatchlistsResponse:
      type: object
      description: Filters Watchlists Object
      properties:
        data:
          type: object
          properties:
            structured:
              $ref: '#/components/schemas/StructuredFiltersWatchlists'
            flattened:
              $ref: '#/components/schemas/FlattenedFiltersWatchlists'
    FlattenedFiltersWatchlists:
      type: object
      description: Flattened Filter Watchlists Object
      properties:
        watchlists:
          type: array
          items:
            $ref: '#/components/schemas/FlattenedFiltersWatchlistsObject'
    StructuredFiltersWatchlists:
      type: object
      description: Structured Filters Watchlists Object
      properties:
        watchlists:
          type: array
          items:
            $ref: '#/components/schemas/StructuredFiltersWatchlistsObject'
    QuickAlertsBody:
      type: object
      properties:
        data:
          type: object
          properties:
            name:
              type: string
              description: The name of the view associated with quick alerts.
              example: FactSet News View
    DeleteViewBody:
      type: object
      properties:
        data:
          type: object
          properties:
            name:
              type: string
              description: The name of the view to be deleted.
              example: FactSet News View
    CreateOrEditViewBody:
      type: object
      properties:
        data:
          type: object
          properties:
            name:
              type: string
              description: The name of the view.
              example: FactSet News View
            tickers:
              type: array
              items:
                $ref: '#/components/schemas/CreateOrEditViewTickers'
            isPrimary:
              type: boolean
              example: true
              description: >-
                If true, then only stories with the provided ticker as a primary
                symbol will be returned. When this parameter is false, the
                symbol is either primary OR a related symbol will be returned.
            categories:
              type: array
              items:
                type: string
                example: Earnings
                description: An array of categories associated with the view.
            countries:
              type: array
              items:
                type: string
                example: India
                description: An array of countries associated with the view.
            regions:
              type: array
              items:
                type: string
                example: Americas
                description: An array of regions associated with the view.
            sources:
              type: array
              items:
                type: string
                example: Business Wire
                description: An array of sources associated with the view.
            topics:
              description: An array of topics associated with the view.
              type: array
              items:
                type: string
                example: Market Summaries
            quickAlert:
              type: boolean
              example: false
              description: >-
                Indicates whether quick alerts are enabled for the view. A value
                of 'true' means quick alerts are enabled, while 'false' means
                they are not.
    CreateOrEditViewTickers:
      type: object
      properties:
        name:
          type: string
          example: Russell 1000
          description: Name of the ticker.
        value:
          type: string
          example: R.1000
          description: The ticker symbol.
        type:
          type: string
          example: Index
          enum:
            - Index
            - ETF
            - Holder
            - Mutual_Fund
            - Portfolios
          description: The type of the asset associated with the ticker.
    CreateViewResponse:
      type: object
      description: Properties in object are results of the create or save operation.
      properties:
        data:
          type: object
          properties:
            name:
              type: string
              description: The name of the created view.
              example: FactSet News View
    HeadlinesRequestByView:
      type: object
      properties:
        data:
          type: object
          properties:
            name:
              type: string
              description: Name of the view to return headlines for.
              example: FactSet News View
            predefinedRange:
              type: string
              description: >-
                See list of valid date ranges. Date range is mutually exlusive
                to start/end time.
              enum:
                - today
                - twoDays
                - oneWeek
                - oneMonth
                - threeMonths
                - sixMonths
                - oneYear
                - threeYears
                - fiveYears
                - tenYears
                - allAvailable
            searchTime:
              type: object
              properties:
                start:
                  type: string
                  format: date-time
                  description: >-
                    Start time for custom search. startTime must follow the ISO
                    8601 standard format, YYYY-MM-DDTHH:mm:ssZ (UTC). It also
                    supports offsets Â±[hh]:[mm].
                  example: '2022-08-21T12:35:45Z'
                end:
                  type: string
                  format: date-time
                  description: >-
                    End time for custom search. If end time is not present end
                    time is automatically set to the time of the search. endTime
                    must follow the ISO 8601 standard format,
                    YYYY-MM-DDTHH:mm:ssZ (UTC). It also supports offsets
                    Â±[hh]:[mm].
                  example: '2022-08-29T08:10:30Z'
        meta:
          type: object
          properties:
            pagination:
              type: object
              description: >-
                Object defining pagination for the results pageable attribute.
                Offset-based strategy is used for Pagination.
              properties:
                limit:
                  type: integer
                  example: 50
                  default: 500
                  description: Non-negative maximum number of entries to return.
                offset:
                  type: integer
                  example: 100
                  default: 0
                  description: Non-negative number of entries to skip.
    HeadlinesRequest:
      type: object
      properties:
        data:
          type: object
          properties:
            tickers:
              type: array
              description: >-
                List of tickers to filter the headlines. Each ticker is an
                object. Please refer to the /filters endpoint to obtain the
                values accepted by the optional parameters.
              items:
                $ref: '#/components/schemas/HeadlinesRequestTickersObject'
            isPrimary:
              type: boolean
              description: >
                If true, then only stories with the provided ticker as a primary
                symbol will be returned. When this parameter is false, the
                symbol is either primary OR a related symbol will be returned.
              example: true
            categories:
              type: array
              description: >-
                A list of categories used to filter the headlines. Categories
                are define the nature or topic of the headlines, such as
                "Earnings".
              items:
                type: string
                example: Earnings
            countries:
              type: array
              description: A list of countries used to filter the headlines.
              items:
                type: string
                example: India
            regions:
              type: array
              description: >-
                A list of regions used to filter the headlines. Regions specify
                the geographical location or market to which the headlines are
                relevant, for example, "Americas".
              items:
                type: string
                example: North America
            sources:
              type: array
              description: A list of sources used to filter the headlines.
              items:
                type: string
                example: Business Wire
            topics:
              type: array
              description: >-
                A list of topics used to filter the headlines. Topics represent
                specific subjects or themes associated with the headlines, such
                as "Market Summaries".
              items:
                type: string
                example: Market Summaries
            predefinedRange:
              type: string
              description: >-
                See list of valid date ranges. Date range is mutually exclusive
                to start/end time
              enum:
                - today
                - twoDays
                - oneWeek
                - oneMonth
                - threeMonths
                - sixMonths
                - oneYear
                - threeYears
                - fiveYears
                - tenYears
                - allAvailable
            searchTime:
              type: object
              properties:
                start:
                  type: string
                  format: date-time
                  description: >-
                    Start time for custom search. startTime must follow the ISO
                    8601 standard format, YYYY-MM-DDTHH:mm:ssZ (UTC). It also
                    supports offsets Â±[hh]:[mm].
                  example: '2022-08-21T12:35:45Z'
                end:
                  type: string
                  description: >-
                    End time for custom search. If end time is not present end
                    time is automatically set to the time of the search. endTime
                    must follow the ISO 8601 standard format,
                    YYYY-MM-DDTHH:mm:ssZ (UTC). It also supports offsets
                    Â±[hh]:[mm].
                  example: '2022-08-29T08:10:30Z'
        meta:
          type: object
          properties:
            pagination:
              type: object
              description: >-
                Object defining pagination for the results pageable attribute.
                Offset-based strategy is used for Pagination.
              properties:
                limit:
                  type: integer
                  example: 50
                  default: 500
                  description: Non-negative maximum number of entries to return.
                offset:
                  type: integer
                  example: 100
                  default: 0
                  description: Non-negative number of entries to skip.
            attributes:
              type: array
              items:
                type: string
                enum:
                  - storyDateAndTime
                  - headlines
                  - id
                  - url
                  - source
                  - product
                  - primarySymbols
                  - symbols
                  - subjects
                  - fdsSubject
              description: >-
                A specific set of attributes to return in the response. If empty
                or not specified, the response does not omit attributes.
              example:
                - headlines
    HeadlinesRequestTickersObject:
      type: object
      properties:
        value:
          type: string
          description: The ticker symbol.
          example: SP50
        type:
          type: string
          description: The type of asset associated with the ticker.
          example: Index
          enum:
            - Index
            - ETF
            - Mutual_Fund
            - Portfolios
            - Equity
            - privateCompanies
            - Fixed_Income
    SearchResponse:
      type: object
      description: Properties in results objects are based on return values.
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/SearchResponseArrayObject'
        meta:
          type: object
          properties:
            requestGuid:
              type: string
              example: 79D8C5700000R
              description: >-
                Identifier to get general information about the request that
                produced that search response.
            pagination:
              type: object
              properties:
                total:
                  type: integer
                  example: 100
                  description: The total number of items available in the search result.
                isEstimatedTotal:
                  type: boolean
                  example: false
                  description: Indicates whether the total count provided is an estimation.
    SearchResponseArrayObject:
      type: object
      properties:
        storyDateAndTime:
          type: string
          format: date-time
          example: '2022-09-15T06:48:19Z'
          description: The timestamp when the headline was published.
        headlines:
          type: string
          example: 'Transcript Intelligence: Ameren Q2 Earnings'
          description: The Headline.
        id:
          type: string
          example: '1214441110'
          description: The ID associated with the headline.
        url:
          type: string
          description: The URI associated with the headline.
          example: >-
            https://my.apps.factset.com/viewer-fusion/?_doc_id=1234567&_doc_date=20220915&_doc_product=NEWS_SAMPLE
        source:
          type: string
          example: 00000-bid
          description: The source associated with the headline.
        product:
          type: string
          example: NEWS_CNINF
          description: The source associated with the headline.
        primarySymbols:
          type: array
          items:
            type: string
            example: AAPL-US
          description: The primary symbols associated with the headline.
        symbols:
          type: array
          items:
            type: string
            example: AAPL-US
          description: All symbols associated with the headline.
        subjects:
          type: array
          items:
            type: string
            example: Class Action
          description: All subjects associated with the headline.
        fdsSubject:
          type: string
          example: FILNS, COARLS
          description: The filters associated with the headline.
    FilterResponse:
      type: object
      description: Filters Object
      properties:
        data:
          type: object
          properties:
            structured:
              $ref: '#/components/schemas/StructuredFilters'
            flattened:
              $ref: '#/components/schemas/FlattenedFilters'
    FlattenedFilters:
      type: object
      description: Flattened Filters Object
      properties:
        sources:
          type: array
          items:
            $ref: '#/components/schemas/FlattenedFiltersSourcesObject'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/FlattenedFiltersCategoriesObject'
        topics:
          type: array
          items:
            $ref: '#/components/schemas/FlattenedFiltersTopicsObject'
        regions:
          type: array
          items:
            $ref: '#/components/schemas/FlattenedFiltersRegionsObject'
        countries:
          type: array
          items:
            $ref: '#/components/schemas/FlattenedFiltersCountriesObject'
        watchlists:
          type: array
          items:
            $ref: '#/components/schemas/FlattenedFiltersWatchlistsObject'
    FlattenedFiltersCategoriesObject:
      type: object
      description: |

        '(Note: the value array will always have just one value.)'
      properties:
        name:
          type: string
          description: The name of the category.
        value:
          type: array
          items:
            type: string
          description: |
            An array containing a single value associated with the category.
        sourceDisplayNames:
          type: array
          items:
            type: string
          description: |
            An array containing a source names associated with the category.
        field:
          type: string
          description: The field of the category.
        source:
          type: array
          items:
            type: string
          description: The source of the category.
      example:
        categories:
          name: Initiating Coverage and Other Notable Research
          value:
            - AN_INC
    FlattenedFiltersTopicsObject:
      type: object
      description: |


        '(Note: the value array will always have just one value.)'
      properties:
        name:
          type: string
          description: The name of the topic.
          example: Barron's
        field:
          type: string
          description: The field of the topic.
          example: subjects
        source:
          type: array
          items:
            type: string
          description: The source of the topic.
          example:
            - BAR
            - DJAN
        value:
          type: array
          items:
            type: string
          description: An array containing a single value associated with the topic.
          example:
            - N/BRN
    FlattenedFiltersRegionsObject:
      type: object
      description: '(Note: the value array will always have just one value.)'
      properties:
        name:
          type: string
          description: The name of the region.
        value:
          type: array
          items:
            type: string
          description: An array containing a single value associated with the region.
      example:
        regions:
          name: Africa
          value:
            - AF
    FlattenedFiltersCountriesObject:
      type: object
      description: '(Note: the value array will always have just one value.)'
      properties:
        name:
          type: string
          description: The name of the country.
        value:
          type: array
          items:
            type: string
          description: |
            An array containing a single  value associated with the country.
      example:
        countries:
          name: Algeria
          value:
            - DZ
    StructuredFilters:
      type: object
      description: Structured Filters Object
      properties:
        sources:
          type: array
          items:
            $ref: '#/components/schemas/StructuredFiltersSourcesObject'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/StructuredFiltersCategoriesObject'
        topics:
          type: array
          items:
            $ref: '#/components/schemas/StructuredFiltersTopicsObject'
        regions:
          type: array
          items:
            $ref: '#/components/schemas/StructuredFiltersRegionsObject'
        countries:
          type: array
          items:
            $ref: '#/components/schemas/StructuredFiltersCountriesObject'
        watchlists:
          type: array
          items:
            $ref: '#/components/schemas/StructuredFiltersWatchlistsObject'
    StructuredFiltersCategoriesObject:
      type: object
      properties:
        name:
          type: string
          description: The name of the category.
          example: BTU Analytics Filters
        toplevel:
          type: boolean
          description: Indicates if its a toplevel value or not.
          example: true
        value:
          type: array
          items:
            type: string
            example: ANLCH
            description: The values associated with the category.
        field:
          type: string
          example: categories
          description: The field associated with the category.
        operator:
          type: string
          example: IN
          description: The operator associated with the category.
        source:
          type: array
          items:
            type: string
            example: NEWS_BTOUT
            description: The source associated with the category.
        sourceDisplayNames:
          type: array
          items:
            type: string
            example: BTU Analytics - Energy Insights
            description: The source associated with the category.
        type:
          type: string
          example: MARKET
          description: The type associated with the category.
        children:
          type: array
          items:
            $ref: '#/components/schemas/StructuredFiltersChildrenObject'
          description: An array of children objects.
      required:
        - name
    StructuredFiltersChildrenObject:
      type: object
      properties:
        name:
          type: string
          description: The name of the child.
          example: AEM
        value:
          type: array
          items:
            type: string
            description: The values associated with the child.
            example: AE Mercas
        parentConfig:
          type: boolean
          description: Indicates if there's a parent configuration or not.
        field:
          type: string
          example: categories
          description: The field associated with the child.
        operator:
          type: string
          example: IN
          description: The operator associated with the child.
        source:
          type: array
          items:
            type: string
            example: NEWS_BTOUT
            description: The source associated with the child.
        sourceDisplayNames:
          type: array
          items:
            type: string
            example: BTU Analytics - Energy Insights
            description: The source associated with the child.
        children:
          type: array
          items:
            $ref: '#/components/schemas/StructuredFiltersChildrenObject'
          description: An array of children objects.
    StructuredFiltersTopicsObject:
      type: object
      properties:
        name:
          type: string
          description: The name of the topic.
          example: Twitter News
        parentConfig:
          type: boolean
          description: Indicates if there's a parent configuration or not.
        field:
          type: string
          example: tweet_type
          description: The field associated with the topic.
        operator:
          type: string
          example: IN
          description: The operator associated with the topic.
        source:
          type: array
          items:
            type: string
            example: NEWS_TWTR
            description: The source associated with the topic.
        type:
          type: string
          example: MARKET_TWEET
          description: The source associated with the topic.
        toplevel:
          type: boolean
          description: Indicates if its the toplevel value or not.
          example: true
        value:
          type: array
          items:
            type: string
            description: The values associated with the topic.
          example:
            - BDliveSA
        children:
          type: array
          items:
            $ref: '#/components/schemas/StructuredFiltersChildrenObject'
          description: An array of child objects.
      required:
        - name
    StructuredFiltersRegionsObject:
      type: object
      properties:
        name:
          type: string
          description: The name of the region.
          example: Africa
        topLevel:
          type: boolean
          description: Indicates if its a toplevel value or not.
        value:
          type: array
          items:
            type: string
            description: The values associated with the region.
            example: AF
        children:
          type: array
          items:
            $ref: '#/components/schemas/RegionObject'
      required:
        - name
        - topLevel
        - value
        - children
    RegionObject:
      type: object
      properties:
        name:
          type: string
          description: The name of the region.
          example: Algeria
        value:
          type: array
          items:
            type: string
            description: The values associated with the region.
            example: DZ
    StructuredFiltersCountriesObject:
      type: object
      properties:
        name:
          type: string
          description: The name of the country.
          example: Algeria
        value:
          type: array
          items:
            type: string
          description: The values associated with the country.
          example:
            - DZ
      required:
        - name
        - value
    StructuredFiltersWatchlistsObject:
      type: object
      properties:
        name:
          type: string
          description: The name of the watchlist.
          example: S&P 500
        type:
          type: string
          description: The type of watchlist.
          example: Index
        value:
          type: string
          description: The value associated with the watchlist.
          example: SP50
      required:
        - name
        - type
        - value
    QuickAlertsResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            name:
              type: string
              description: The name of the view associated with quick alerts.
              example: FactSet News
    Criteria:
      type: object
      description: Criteria object within a search object.
      properties:
        field:
          type: string
        detail:
          $ref: '#/components/schemas/CriteriaDetail'
        operator:
          type: string
        effect:
          type: string
        source:
          type: array
          items:
            type: string
        criteria:
          $ref: '#/components/schemas/CriteriaOneOf'
        caseSensitive:
          type: boolean
        enableHighlight:
          type: boolean
        enableStemming:
          type: boolean
        enableThesaurus:
          type: boolean
        textSearchSlop:
          type: number
    CriteriaDetail:
      oneOf:
        - type: array
          items:
            type: string
        - type: array
          items:
            type: number
        - type: string
    CriteriaOneOf:
      oneOf:
        - type: array
          items:
            $ref: '#/components/schemas/Criteria'
        - $ref: '#/components/schemas/Criteria'
    Views:
      type: object
      description: FactSet News views
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ViewsObject'
    ViewsObject:
      type: object
      properties:
        name:
          type: string
          example: FactSet News View
          description: Name of the view.
        tickers:
          type: array
          items:
            $ref: '#/components/schemas/CreateOrEditViewTickers'
        isPrimary:
          type: boolean
          description: >-
            If true, then only stories with the provided ticker as a primary
            symbol will be returned. When this parameter is false, the symbol is
            either primary OR a related symbol will be returned.
        categories:
          type: array
          items:
            type: string
            example: Earnings
            description: An array of categories associated with the view.
        topics:
          type: array
          items:
            type: string
            example: 'Market Summaries '
            description: An array of topics associated with the view.
        sources:
          type: array
          items:
            type: string
            example: Business Wire
            description: An array of sources associated with the view.
        regions:
          type: array
          items:
            type: string
            example: Asia
            description: An array of regions associated with the view.
        countries:
          type: array
          items:
            type: string
            example: China
            description: An array of countries associated with the view.
        quickAlert:
          type: boolean
          example: false
          description: >-
            Indicates whether quick alerts are enabled for the view. A value of
            'true' means quick alerts are enabled, while 'false' means they are
            not.
    Error:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorResponseObject'
    ErrorResponseObject:
      type: object
      nullable: true
      properties:
        id:
          type: string
        title:
          type: string
        code:
          type: string
  requestBodies:
    QuickAlertsBody:
      description: View name to get an alert.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QuickAlertsBody'
    HeadlinesRequest:
      description: Filter Body which needs to be sent with request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HeadlinesRequest'
          examples:
            Using predefinedRange:
              $ref: '#/components/examples/PredefinedRange'
            Using searchTime:
              $ref: '#/components/examples/SearchTime'
    HeadlinesRequestByView:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HeadlinesRequestByView'
          examples:
            Using predefinedRange with view name:
              $ref: '#/components/examples/PredefinedRangeid'
            Using searchTime with view name:
              $ref: '#/components/examples/SearchTimeid'
      description: View body which needs to be sent with request.
    createOrEditViewBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateOrEditViewBody'
      description: Create or Edit View Body which needs to be sent with request.
    deleteViewBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteViewBody'
      description: Delete View Body which needs to be sent with request.
  examples:
    404Example:
      summary: Sample error response
      value:
        errors:
          - code: Not Found
            title: Id not found
            id: 7af3d86ca5954503b9244f2620fcf5eb
    PredefinedRange:
      summary: Using predefinedRange
      value:
        data:
          tickers:
            - value: SP50
              type: Index
          isPrimary: true
          categories:
            - Earnings
          topics:
            - Market Summaries
          regions:
            - Americas
          countries:
            - India
          sources:
            - Business Wire
          predefinedRange: oneMonth
        meta:
          pagination:
            limit: 50
            offset: 100
    SearchTime:
      summary: Using searchTime
      value:
        data:
          tickers:
            - value: SP50
              type: Index
          isPrimary: true
          categories:
            - Earnings
          topics:
            - Market Summaries
          regions:
            - Americas
          countries:
            - India
          sources:
            - Business Wire
          searchTime:
            start: '2023-12-01T12:35:45Z'
            end: '2042-01-24T08:10:30Z'
        meta:
          pagination:
            limit: 50
            offset: 100
    400Example:
      summary: Sample error Response
      value:
        errors:
          - code: Bad Request
            title: parameterError:['_id'] is not a valid parameter(s)
            id: 7af3d86ca5954503b9244f2620fcf5eb
    401Example:
      summary: Sample error response
      value:
        errors:
          - code: Not Authenticated
            title: USERNAME-SERIAL does not have permission
            id: 7af3d86ca5954503b9244f2620fcf5eb
    500Example:
      summary: Sample error response
      value:
        errors:
          - code: Internal Server Error
            title: An unexpected error happened
            id: 7af3d86ca5954503b9244f2620fcf5eb
    PredefinedRangeid:
      summary: Using predefinedRange with view name
      value:
        data:
          name: FactSet News View
          predefinedRange: oneMonth
        meta:
          pagination:
            limit: 50
            offset: 100
    SearchTimeid:
      summary: Using searchTime with view name
      value:
        data:
          name: FactSet News View
          searchTime:
            start: '2023-12-01T12:35:45Z'
            end: '2024-01-01T08:10:30Z'
        meta:
          pagination:
            limit: 50
            offset: 100
