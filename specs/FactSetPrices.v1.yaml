openapi: 3.0.0
info:
  version: 1.3.0
  title: FactSet Prices API
  contact:
    name: FactSet Research Systems
    email: api@factset.com
  description: >
    Gain access to comprehensive global coverage for Equities & Fixed Income.
    Perform quick analytics by controlling the date ranges, currencies, and
    rolling periods, or simply request Open, High, Low, and Close prices. Easily
    connect pricing data with other core company data or alternative content
    sets using FactSet's hub and spoke symbology. <p>Equity and Fund Security
    types include Common Stock, ADR, GDR, Preferred, Closed-ended Fund, Exchange
    Traded Fund, Unit, Open-ended Fund, Exchange Traded Fund UVI, Exchange
    Traded Fund NAV, Preferred Equity, Non-Voting Depositary
    Receipt/Certificate, Alien/Foreign, Structured Product, and Temporary
    Instruments. Reference over 180,000+ active and inactive
    securities.</p><p>Fixed Income Security Types include Corporate Bonds,
    Treasury and Agency bonds, Government Bonds, and Municipals.</p><p><b>Rate
    limit is set to 25 requests per second</b>.</p>
servers:
  - url: https://api.factset.com/content
    description: Production
security:
  - FactSetApiKey: []
  - FactSetOAuth2: []
paths:
  /factset-prices/v1/prices:
    get:
      tags:
        - Prices
      summary: Gets end-of-day Open, High, Low, Close for a list of securities.
      operationId: getSecurityPrices
      description: >
        Gets security prices, Open, High, Low, Close, Volume, and currency for a
        specified date range and frequency. Prices are updated and at different
        times across the different regions around the globe. The Prices API
        automatically defaults relative price dates to the local region which is
        determined by the local region of the requested security id. To learn
        more about relative dates please visit [OA Page
        4627](https://my.apps.factset.com/oa/pages/4627)


        */prices* endpoint currently supports Long Running asynchronous requests
        up to **10 minutes** via `batch` parameter. **Additional Approvals
        needed for access**. Id limits increased to **5000 ids** per request
        using batch parameter.
      parameters:
        - $ref: '#/components/parameters/idsBatchMax5000'
        - $ref: '#/components/parameters/startDate'
        - $ref: '#/components/parameters/endDate'
        - $ref: '#/components/parameters/frequency'
        - $ref: '#/components/parameters/calendar'
        - $ref: '#/components/parameters/currency'
        - $ref: '#/components/parameters/adjust'
        - $ref: '#/components/parameters/batch'
      responses:
        '200':
          description: Array of security prices open, high, low, close, and volume.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pricesResponse'
              examples:
                Price of AAPL as of March 29 2019:
                  $ref: '#/components/examples/singleSecurityPrices'
                Prices for AAPL and TSLA as of March 29th 2019:
                  $ref: '#/components/examples/twoSecuritiesPrices'
                One Month of Daily Prices for AAPL in March 2019:
                  $ref: '#/components/examples/oneMonthSecurityPrices'
        '202':
          description: Batch request has been accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
              examples:
                Batch Request Accepted:
                  $ref: '#/components/examples/BatchStatusAcceptedResponse'
          headers:
            Location:
              description: Path to Batch Request status.
              schema:
                type: string
              example: batch/v1/status?id=2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      x-factset-different-success-responses: true
    post:
      tags:
        - Prices
      summary: >-
        Requests end-of-day Open, High, Low, Close for a large list of
        securities.
      description: >

        Gets security prices, Open, High, Low, Close, Volume, and currency for a
        specified date range and frequency.


        */prices* endpoint currently supports Long Running asynchronous requests
        up to **10 minutes** via `batch` parameter. **Additional Approvals
        needed for access**. Id limits increased to **5000 ids** per request
        using batch parameter.
      operationId: getSecurityPricesForList
      requestBody:
        required: true
        description: Request object for `Security` prices.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pricesRequest'
            examples:
              One Year of Daily Prices for Apple and Tesla in 2019:
                $ref: '#/components/examples/multipleIdsOneYearPost'
              Single Company Monthly Prices for One Year:
                $ref: '#/components/examples/singleIdsOneYearMonthlyPost'
              Price Adjusted for Splits, Spinoffs, and Dividends:
                $ref: '#/components/examples/priceAdjustedForDividendsMonthlyPost'
              Batch Request for Prices for APPL and Tesla:
                $ref: '#/components/examples/BatchPricesRequestPost'
      responses:
        '200':
          description: Array of security prices
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pricesResponse'
              examples:
                Price of AAPL as of March 29 2019:
                  $ref: '#/components/examples/singleSecurityPrices'
                Prices for AAPL and TSLA as of March 29th 2019:
                  $ref: '#/components/examples/twoSecuritiesPrices'
                One Month of Daily Prices for AAPL in March 2019:
                  $ref: '#/components/examples/oneMonthSecurityPrices'
        '202':
          description: Batch request has been accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
              examples:
                Batch Request Accepted:
                  $ref: '#/components/examples/BatchStatusAcceptedResponse'
          headers:
            Location:
              description: Path to Batch Request status.
              schema:
                type: string
              example: batch/v1/status?id=2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
      x-factset-different-success-responses: true
  /factset-prices/v1/fixed-income:
    get:
      tags:
        - Prices
      summary: Gets pricing for a list of Fixed Income securities
      operationId: getFixedSecurityPrices
      description: >
        Get BID, MID, ASK, and Issuer Entity ID for a list of Fixed Income
        Securities as of a requested date range. Available for U.S. Corporate,
        Treasury and Agency bonds, Municipals, and non-U.S. Corporate and
        Government bonds. To learn more about Fixed Income Prices database,
        please review [OA:15995](https://my.apps.factset.com/oa/pages/15995)
      parameters:
        - $ref: '#/components/parameters/fixedIds'
        - $ref: '#/components/parameters/startDate'
        - $ref: '#/components/parameters/endDate'
        - $ref: '#/components/parameters/frequencyFi'
      responses:
        '200':
          description: >-
            Array of Fixed Income Security prices objects for date range
            requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pricesFixedIncomeResponse'
              examples:
                Fixed Income Price of Apple 4.65% 23-FEB-2046:
                  $ref: '#/components/examples/singleSecurityPricesFixedIncome'
                Fixed Income Prices for Three Security Types:
                  $ref: '#/components/examples/multipleSecurityPricesFixedIncome'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
    post:
      tags:
        - Prices
      summary: >-
        Requests pricing for a list of Fixed Income securities for date range
        requested
      description: >
        Get BID, MID, ASK, and Issuer Entity ID for a list of Fixed Income
        Securities as of a requested date range. Available for U.S. Corporate,
        Treasury and Agency bonds, Municipals, and non-U.S. Corporate and
        Government bonds. To learn more about Fixed Income Prices database,
        please review [OA:15995](https://my.apps.factset.com/oa/pages/15995)
      operationId: getFixedSecurityPricesForList
      requestBody:
        required: true
        description: Request object for Fixed Income `Security` prices.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pricesFixedIncomeRequest'
            examples:
              Single Fixed Income Id Request for One Year of Monthly Prices:
                $ref: '#/components/examples/singleFixedOneYearPost'
              Fixed Income Single Id Request:
                $ref: '#/components/examples/multipleFixedPricesPost'
      responses:
        '200':
          description: Array of Fixed Income Security prices objects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pricesFixedIncomeResponse'
              examples:
                Fixed Income Price of Apple 4.65% 23-FEB-2046:
                  $ref: '#/components/examples/singleSecurityPricesFixedIncome'
                Fixed Income Prices for Three Security Types:
                  $ref: '#/components/examples/multipleSecurityPricesFixedIncome'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /factset-prices/v1/references:
    get:
      tags:
        - Reference
      summary: Gets security reference details for a list of securities
      operationId: getSecurityReferences
      description: >
        Gets security reference details for a list of `ids`, such as Name,
        Security Type, Currency, Country, Primary Exchange, Local Index, and
        dates of First and Last Trade.
      parameters:
        - $ref: '#/components/parameters/idsMax2000'
      responses:
        '200':
          description: Array of security references objects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/referencesResponse'
              examples:
                Single Company Reference:
                  $ref: '#/components/examples/singleSecurityReferences'
                Multiple Company References:
                  $ref: '#/components/examples/multipleSecurityReferences'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
    post:
      tags:
        - Reference
      summary: Requests security reference details a list of securities
      description: >
        Gets security reference details for a large list of `ids`, such as Name,
        Security Type, Currency, Country, Primary Exchange, Local Index, and
        dates of First and Last Trade.
      operationId: getSecurityReferenceForList
      requestBody:
        required: true
        description: Request object for `Security` prices.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/referencesRequest'
            examples:
              Multiple Security Reference Request:
                $ref: '#/components/examples/multipleReferencesPost'
      responses:
        '200':
          description: Array of security prices
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/referencesResponse'
              examples:
                Single Company Reference:
                  $ref: '#/components/examples/singleSecurityReferences'
                Multiple Company References:
                  $ref: '#/components/examples/multipleSecurityReferences'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /factset-prices/v1/returns:
    get:
      tags:
        - Returns
      summary: >-
        Gets Returns for a list of `ids` as of given date range and rolling
        Period
      operationId: getSecurityReturns
      description: >-
        The simple or compound return for the requested frequency and/or
        rollingPeriod. Depending on the input parameters the return will adjust
        accordingly. If you simply use frequency and no rollingPeriod, the
        return value will represent the frequency period. If you use
        rollingPeriod, the values will be returned in actual period ends (e.g.
        actual month, actual week, daily, etc.). General Return Calculation
        Details found on [Online Assistant Page
        #8748](https://oa.apps.factset.com/pages/8748)
      parameters:
        - $ref: '#/components/parameters/idsMax2000'
        - $ref: '#/components/parameters/startDate'
        - $ref: '#/components/parameters/endDate'
        - $ref: '#/components/parameters/frequency'
        - $ref: '#/components/parameters/calendar'
        - $ref: '#/components/parameters/currency'
        - $ref: '#/components/parameters/dividendAdjust'
        - $ref: '#/components/parameters/rollingPeriod'
      responses:
        '200':
          description: >-
            Array of security returns for the requested date range and rolling
            period
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/returnsResponse'
              examples:
                Daily Returns of AAPL for the Year 2019:
                  $ref: '#/components/examples/dailyReturnsAPPL'
                Latest 52w Return for AAPL:
                  $ref: '#/components/examples/52WKReturnAAPL'
                Latest Month Return for FB, AAPL, NFLX, GOOGL:
                  $ref: '#/components/examples/fangStocksReturn'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
    post:
      tags:
        - Returns
      summary: Requests security returns for the given date range and rollingPeriod.
      description: >-
        The simple or compound return for the requested frequency and/or
        rollingPeriod. Depending on the input parameters the return will adjust
        accordingly. If you simply use frequency and no rollingPeriod, the
        return value will represent the frequency period. If you use
        rollingPeriod, the values will be returned in actual period ends (e.g.
        actual month, actual week, daily, etc.). General Return Calculation
        Details found on [Online Assistant Page
        #8748](https://oa.apps.factset.com/pages/8748)
      operationId: getSecurityReturnsForList
      requestBody:
        required: true
        description: Request object for `Security` returns.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/returnsRequest'
            examples:
              What is the latest monthly total return for APPL TSLA FB and NFLX:
                $ref: '#/components/examples/fangStocksReturnPost'
              Daily Price Changes of AMZN in 2019:
                $ref: '#/components/examples/dailyPriceChangeAMZNPost'
      responses:
        '200':
          description: >-
            Array of security returns for the requested date range and rolling
            period
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/returnsResponse'
              examples:
                Daily Returns of AAPL for the Year 2019:
                  $ref: '#/components/examples/dailyReturnsAPPL'
                Latest 52w Return for AAPL:
                  $ref: '#/components/examples/52WKReturnAAPL'
                Latest Month Return for FB, AAPL, NFLX, GOOGL:
                  $ref: '#/components/examples/fangStocksReturn'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /factset-prices/v1/returns-snapshot:
    get:
      tags:
        - Returns
      summary: >-
        Returns the price performance of the security and annualized compound
        total returns.
      operationId: getReturnsSnapshot
      description: >
        Retrieves various return periods as of a given date for a requested list
        of securities. This endpoint is very helpful for quickly retrieving a
        list of pre-calculated returns for application development.<p> Return
        periods include
          * oneDay
          * weekToDate
          * monthToDate
          * quarterToDate
          * yearToDate
          * oneMonth
          * threeMonth
          * sixMonth
          * nineMonth
          * oneYear
          * twoYearAnnualized
          * threeYearAnnualized
          * fiveYearAnnualized
          * tenYearAnnualized
          * twentyYearAnnualized
          * thirtyYearAnnualized
          * ipoToDateAnnualized
          </p>
      parameters:
        - $ref: '#/components/parameters/idsMax2000'
        - $ref: '#/components/parameters/dateRs'
        - $ref: '#/components/parameters/calendar'
        - $ref: '#/components/parameters/currency'
        - $ref: '#/components/parameters/dividendAdjustSnapshot'
      responses:
        '200':
          description: Array of returns-snapshot objects for the list of ids requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/returnsSnapshotResponse'
              examples:
                Return details for IBM-US with compound return type:
                  $ref: '#/components/examples/singleRSCompundRTResponse'
                Requesting returns details for Multiple companies with simple return type:
                  $ref: '#/components/examples/multipleRSSimpleRTResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
    post:
      tags:
        - Returns
      summary: >-
        Returns the price performance of the security and annualized compound
        total returns.
      description: >
        Retrieves various return periods as of a given date for a requested list
        of securities. This endpoint is very helpful for quickly retrieving a
        list of pre-calculated returns for application development.<p> Return
        periods include
          * oneDay
          * weekToDate
          * monthToDate
          * quarterToDate
          * yearToDate
          * oneMonth
          * threeMonth
          * sixMonth
          * nineMonth
          * oneYear
          * twoYearAnnualized
          * threeYearAnnualized
          * fiveYearAnnualized
          * tenYearAnnualized
          * twentyYearAnnualized
          * thirtyYearAnnualized
          * ipoToDateAnnualized
          </p>
      operationId: getReturnsSnapshotForList
      requestBody:
        required: true
        description: Request object for Returns-Snapshot.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/returnsSnapshotRequest'
            examples:
              Return details for IBM-US with compound return type:
                $ref: '#/components/examples/singleRSCompundRT'
              Requesting returns details for multiple companies with simple return type:
                $ref: '#/components/examples/multipleRSSimpleRT'
      responses:
        '200':
          description: Array of returns-snapshot objects for the list of ids requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/returnsSnapshotResponse'
              examples:
                Return details for IBM-US with compound return type:
                  $ref: '#/components/examples/singleRSCompundRTResponse'
                Requesting returns details for multiple companies with simple return type:
                  $ref: '#/components/examples/multipleRSSimpleRTResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /factset-prices/v1/dividends:
    get:
      tags:
        - Dividends
      summary: Gets dividend information for a given date range and list of securities
      operationId: getSecurityDividends
      description: >-
        Get the dividend amounts, dates, types, and flags over a specified date
        range. You may request future dates to receive information for declared
        dividends.
      parameters:
        - $ref: '#/components/parameters/idsMax1000'
        - $ref: '#/components/parameters/startDate'
        - $ref: '#/components/parameters/endDate'
        - $ref: '#/components/parameters/currency'
        - $ref: '#/components/parameters/adjust'
      responses:
        '200':
          description: >-
            Array of security dividend information for a given date range and
            list of securities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dividendsResponse'
              examples:
                Three Years of Dividends for AAPL as of 2019:
                  $ref: '#/components/examples/3yrDividendsAPPL'
                Latest Dividends for AAPL and AMZN:
                  $ref: '#/components/examples/latestDividends'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
    post:
      tags:
        - Dividends
      summary: >-
        Requests dividend information for a given date range and list of
        securities
      description: >-
        Get the dividend amounts, dates, types, and flags over a specified date
        range
      operationId: getSecurityDividendsForList
      requestBody:
        required: true
        description: Request object for `Security` dividends.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dividendsRequest'
            examples:
              Request AAPL Dividends in 2019:
                $ref: '#/components/examples/singleSecurityDividends'
              Request Latest Dividends of AAPL and MSFT:
                $ref: '#/components/examples/latestDividendsPost'
      responses:
        '200':
          description: >-
            Array of dividend information for a given date range and list of
            securities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dividendsResponse'
              examples:
                Latest Dividends for AAPL and MSFT:
                  $ref: '#/components/examples/latestDividends'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /factset-prices/v1/splits:
    get:
      tags:
        - Splits
      summary: Gets full history of security Splits for a list of `ids`
      operationId: getSecuritySplits
      description: >-
        Gets the entire history of splits for a given list of identifiers.
        Information returned includes the split factor, a plain text comment
        regarding the type of split, and the event date.
      parameters:
        - $ref: '#/components/parameters/idsMax2000'
      responses:
        '200':
          description: Array of security splits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/splitsResponse'
              examples:
                Split History for a Single Security - MSFT:
                  $ref: '#/components/examples/singleSecuritySplits'
                Split History for a List of Securities:
                  $ref: '#/components/examples/multipleSecuritySplits'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
    post:
      tags:
        - Splits
      summary: Requests splits for a list of `ids`
      description: >-
        Gets the entire history of splits for a given list of identifiers.
        Information returned includes the split factor, a plain text comment
        regarding the type of split, and the event date.
      operationId: getSecuritySplitsForList
      requestBody:
        required: true
        description: Request object for `Security` split factors.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/splitsRequest'
            examples:
              Single Company Daily Prices One Month:
                $ref: '#/components/examples/splitHistoryMSFTPost'
              One Year of Monthly Prices for AAPL in 2019:
                $ref: '#/components/examples/multipleSplitsHistoryPost'
      responses:
        '200':
          description: Array of Splits objects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/splitsResponse'
              examples:
                Splits History for MSFT:
                  $ref: '#/components/examples/singleSecuritySplits'
                Split History for a List of Securities:
                  $ref: '#/components/examples/multipleSecuritySplits'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /factset-prices/v1/shares:
    get:
      tags:
        - Shares
      summary: Gets shares for a list of `ids` as of given date range.
      operationId: getSecurityShares
      description: >-
        Gets security shares for a list of 'ids' and given date range. Share
        values returned include security-level and company-level.
      parameters:
        - $ref: '#/components/parameters/idsMax1000'
        - $ref: '#/components/parameters/startDate'
        - $ref: '#/components/parameters/endDate'
        - $ref: '#/components/parameters/frequency'
        - $ref: '#/components/parameters/calendar'
        - $ref: '#/components/parameters/splitAdjust'
      responses:
        '200':
          description: Array of security shares
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sharesResponse'
              examples:
                One Year of Monthly Share Counts for AAPL:
                  $ref: '#/components/examples/singleSecurityShares'
                Multiple Security Share Counts as of 2019 Year End - FB, AAPL, NFLX, GOOGL:
                  $ref: '#/components/examples/multipleSecuritiesShares'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
    post:
      tags:
        - Shares
      summary: Requests shares for a list of `ids` as of given date range.
      description: >-
        Gets security shares for a list of 'ids' and given date range. Share
        values returned include security-level and company-level.
      operationId: getSecuritySharesForList
      requestBody:
        required: true
        description: Request object for `Security` shares.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sharesRequest'
            examples:
              Request One Year of Monthly Share Counts for AAPL:
                $ref: '#/components/examples/singleSecuritySharesPost'
              Request Multiple Security Share Counts as of 2019 Year End - FB, AAPL, NFLX, GOOGL:
                $ref: '#/components/examples/multipleSecuritiesSharesPost'
      responses:
        '200':
          description: Array of Shares objects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sharesResponse'
              examples:
                One Year of Monthly Share Counts for AAPL:
                  $ref: '#/components/examples/singleSecurityShares'
                Multiple Security Share Counts as of 2019 Year End - FB, AAPL, NFLX, GOOGL:
                  $ref: '#/components/examples/multipleSecuritiesShares'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /factset-prices/v1/market-value:
    get:
      tags:
        - Market Value
      summary: >-
        Gets the security level and company level market values for a list of
        `ids` as of given date range and frequency.
      operationId: getMarketValue
      description: >
        Gets market capitalization of list of ids for the company level,
        security level, calendar, frequency, and currency for a specified date
        range.
      parameters:
        - $ref: '#/components/parameters/idsMax2000'
        - $ref: '#/components/parameters/startDate'
        - $ref: '#/components/parameters/endDate'
        - $ref: '#/components/parameters/frequency'
        - $ref: '#/components/parameters/calendar'
        - $ref: '#/components/parameters/currency'
      responses:
        '200':
          description: Array of company market capitalization values.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/marketValueResponse'
              examples:
                Market Value of GOOGL as of July 07 2020:
                  $ref: '#/components/examples/singleMarketValue'
                Market Value for AAPL and TSLA as of March 29th 2019:
                  $ref: '#/components/examples/multipleMarketValues'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
    post:
      tags:
        - Market Value
      summary: Requests the market value for a list of `ids` as of given date range.
      description: Requests the market value for a list of `ids` as of given date range.
      operationId: getMarketValueForList
      requestBody:
        required: true
        description: Request object for `Security` market values.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/marketValueRequest'
            examples:
              Single Company Market Value:
                $ref: '#/components/examples/singleMarketValuePost'
              Multiple Company Market Values:
                $ref: '#/components/examples/multipleMarketValuePost'
      responses:
        '200':
          description: Array of company market capitalization values.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/marketValueResponse'
              examples:
                Market Value of GOOGL as of July 07 2020:
                  $ref: '#/components/examples/singleMarketValue'
                Market Value for AAPL and TSLA as of March 29th 2019:
                  $ref: '#/components/examples/multipleMarketValues'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /factset-prices/v1/high-low:
    get:
      tags:
        - High Low
      summary: >-
        Gets the price high and price low of securities for a list of `ids` as
        of given date, period and frequency.
      operationId: getHighLow
      description: >
        For given security(s), gets the high and low prices with the respective
        dates on which they occurred. This service gives options for fetching
        the price as of the close or intraday.
      parameters:
        - $ref: '#/components/parameters/idsMax2000'
        - $ref: '#/components/parameters/date'
        - $ref: '#/components/parameters/period'
        - $ref: '#/components/parameters/priceType'
        - $ref: '#/components/parameters/calendar'
        - $ref: '#/components/parameters/currency'
        - $ref: '#/components/parameters/adjust'
      responses:
        '200':
          description: Array of price high and price low values.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/highLowResponse'
              examples:
                52 week Price High and Price Low of GOOGL-US as of July 07 2020:
                  $ref: '#/components/examples/singleHighLow'
                52 week Price High and Price Low for AAPL-US and TSLA-US as of March 07 2020:
                  $ref: '#/components/examples/multipleHighLow'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
    post:
      tags:
        - High Low
      summary: >-
        Requests the price high and price low of securities for a list of `ids`
        as of given date, period and frequency.
      description: >
        For given security(s), gets the high and low prices with the respective
        dates on which they occurred. This service gives options for fetching
        the price as of the close or intraday.
      operationId: getHighLowForList
      requestBody:
        required: true
        description: Request object for high low prices.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/highLowRequest'
            examples:
              Single Company Market Value:
                $ref: '#/components/examples/singleHighLowPost'
              Multiple Company Market Values:
                $ref: '#/components/examples/multipleHighLowPost'
      responses:
        '200':
          description: Array of company price high and price low values.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/highLowResponse'
              examples:
                52 week Price High and Price Low of GOOGL-US as of July 07 2020:
                  $ref: '#/components/examples/singleHighLow'
                52 week Price High and Price Low of AAPL-US and TSLA-US as of March 07 2020:
                  $ref: '#/components/examples/multipleHighLow'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /factset-prices/v1/database-rollover:
    get:
      summary: Gets the latest relative rollover date for the database.
      description: >
        Gets zero relative date and last update time for FactSet databases. The
        dates represent the date that the rollover event happened; the date and
        time is in **eastern time zone**.  <p>Depending on the ids requested and
        their respective regions, a requested startDate or endDate used in the
        various Prices API may reflect different previous close dates. This
        relative "zero" date, meaning - as of yesterday's close - will vary
        across global regions. This API is designed to help production systems
        account for regional rollover dates to know when to trigger their
        processes for different regions to reflect the latest close. The
        response gives context for AMERICAS, ASIA PACIFIC, and EUROPE. </p>
      tags:
        - Database Rollover
      operationId: getDatabaseRollover
      responses:
        '200':
          description: Database rollover data items.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rolloverResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
    post:
      summary: Gets the latest relative rollover date for the database.
      description: >
        Gets zero relative date and last update time for FactSet databases. The
        dates represent the date that the rollover event happened; the date and
        time is in **eastern time zone**.  <p>Depending on the ids requested and
        their respective regions, a requested startDate or endDate used in the
        various Prices API may reflect different previous close dates. This
        relative "zero" date, meaning - as of yesterday's close - will vary
        across global regions. This API is designed to help production systems
        account for regional rollover dates to know when to trigger their
        processes for different regions to reflect the latest close. The
        response gives context for AMERICAS, ASIA PACIFIC, and EUROPE. </p>
      tags:
        - Database Rollover
      operationId: getDatabaseRolloverForList
      responses:
        '200':
          description: Database rollover data items.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rolloverResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /batch/v1/status:
    get:
      tags:
        - Batch Processing
      summary: Returns the status for a Batch Request
      description: >-
        Return the status for the underlying batch request that is specified by
        the id.
      operationId: getBatchStatus
      parameters:
        - $ref: '#/components/parameters/batchId'
      responses:
        '201':
          description: Batch Request has been completed and the response has been created.
          headers:
            Location:
              description: Path to Batch Request result.
              schema:
                type: string
              example: batch/v1/result?id=2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
              examples:
                Batch Status Done:
                  $ref: '#/components/examples/BatchStatusDoneResponse'
        '202':
          description: Batch Request has not finished and the result has NOT been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
              examples:
                Batch Status Queued:
                  $ref: '#/components/examples/BatchStatusQueuedResponse'
                Batch Status Executing:
                  $ref: '#/components/examples/BatchStatusExecutingResponse'
                Batch Status Failed:
                  $ref: '#/components/examples/BatchStatusFailedResponse'
        '404':
          $ref: '#/components/responses/404'
      deprecated: false
    post:
      tags:
        - Batch Processing
      summary: Returns the status for a Batch Request
      description: >-
        Return the status for the underlying batch request that is specified by
        the id. 
      operationId: getBatchStatusWithPost
      requestBody:
        description: Batch Status Request Post Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchStatusRequest'
            examples:
              Batch Status Request:
                $ref: '#/components/examples/BatchStatusRequest'
        required: true
      responses:
        '201':
          description: Batch Request has been completed and the response has been created.
          headers:
            Location:
              description: Path to Batch Request result.
              schema:
                type: string
              example: batch/v1/result?id=2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
              examples:
                Batch Status Done:
                  $ref: '#/components/examples/BatchStatusDoneResponse'
        '202':
          description: Batch Request has not finished and the result has NOT been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
              examples:
                Batch Status Queued:
                  $ref: '#/components/examples/BatchStatusQueuedResponse'
                Batch Status Executing:
                  $ref: '#/components/examples/BatchStatusExecutingResponse'
                Batch Status Failed:
                  $ref: '#/components/examples/BatchStatusFailedResponse'
        '404':
          $ref: '#/components/responses/404'
      deprecated: false
  /batch/v1/result:
    get:
      tags:
        - Batch Processing
      summary: Returns the response for a Batch Request
      description: >-
        Returns the response data for the underlying batch request that is
        specified by the id.
      operationId: getBatchData
      parameters:
        - $ref: '#/components/parameters/batchId'
      responses:
        '200':
          description: >-
            Request Response Object when batch request has completed and
            response is created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDataResponse'
              examples:
                Price of AAPL as of March 29 2019:
                  $ref: '#/components/examples/singleSecurityPrices'
                Prices for AAPL and TSLA as of March 29th 2019:
                  $ref: '#/components/examples/twoSecuritiesPrices'
                One Month of Daily Prices for AAPL in March 2019:
                  $ref: '#/components/examples/oneMonthSecurityPrices'
        '202':
          description: Batch Request has not finished and the result has NOT been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
              examples:
                Batch Request Queued:
                  $ref: '#/components/examples/BatchStatusQueuedResponse'
                Batch Request Executing:
                  $ref: '#/components/examples/BatchStatusExecutingResponse'
        '404':
          $ref: '#/components/responses/404'
      deprecated: false
      x-factset-different-success-responses: true
    post:
      tags:
        - Batch Processing
      summary: Returns the response for a Batch Request
      description: >-
        Return the response data for the underlying batch request that is
        specified by the id. 
      operationId: getBatchDataWithPost
      requestBody:
        description: Batch Data Request Post Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDataRequest'
            examples:
              Batch Data Request:
                $ref: '#/components/examples/BatchDataRequest'
        required: true
      responses:
        '200':
          description: >-
            Request Response Object when batch request has completed and
            response is created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDataResponse'
              examples:
                Price of AAPL as of March 29 2019:
                  $ref: '#/components/examples/singleSecurityPrices'
                Prices for AAPL and TSLA as of March 29th 2019:
                  $ref: '#/components/examples/twoSecuritiesPrices'
                One Month of Daily Prices for AAPL in March 2019:
                  $ref: '#/components/examples/oneMonthSecurityPrices'
        '202':
          description: Batch Request has not finished and the result has NOT been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
              examples:
                Batch Request Queued:
                  $ref: '#/components/examples/BatchStatusQueuedResponse'
                Batch Request Executing:
                  $ref: '#/components/examples/BatchStatusExecutingResponse'
        '404':
          $ref: '#/components/responses/404'
      deprecated: false
      x-factset-different-success-responses: true
components:
  securitySchemes:
    FactSetOAuth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://auth.factset.com/as/token.oauth2
          scopes: {}
    FactSetApiKey:
      type: http
      scheme: basic
  parameters:
    batchId:
      name: id
      in: query
      description: Batch Request identifier.
      schema:
        type: string
        format: uuid
      required: true
      allowEmptyValue: false
    idsBatchMax5000:
      name: ids
      in: query
      schema:
        type: array
        items:
          type: string
      required: true
      explode: false
      description: >-
        The requested list of security identifiers. Accepted ID types include
        Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids.<p>***ids
        limit** =  2000 per non-batch request / 5000 per batch request*</p>
        *<p>Make note, GET Method URL request lines are also limited to a total
        length of 8192 bytes (8KB). In cases where the service allows for
        thousands of ids, which may lead to exceeding this request line limit of
        8KB, its advised for any requests with large request lines to be
        requested through the respective "POST" method.</p>*
      examples:
        oneEquityId:
          summary: One Equity Market Identifier
          value:
            - AAPL-USA
        multipleEquityIds:
          summary: Multiple Equity Market Identifiers
          value:
            - FDS-US
            - AAPL-US
            - MSFT-US
    idsMax2000:
      name: ids
      in: query
      schema:
        type: array
        items:
          type: string
        minItems: 1
        maxItems: 2000
      required: true
      explode: false
      description: >-
        The requested list of security identifiers. Accepted ID types include
        Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids.
        <p>***ids limit** =  2000 per request*</p> *<p>Make note, GET Method URL
        request lines are also limited to a total length of 8192 bytes (8KB). In
        cases where the service allows for thousands of ids, which may lead to
        exceeding this request line limit of 8KB, its advised for any requests
        with large request lines to be requested through the respective "POST"
        method.</p>*
      examples:
        oneEquityId:
          summary: One Equity Market Identifier
          value:
            - AAPL-USA
        multipleEquityIds:
          summary: Multiple Equity Market Identifiers
          value:
            - FDS-US
            - AAPL-US
            - MSFT-US
    idsMax1000:
      name: ids
      in: query
      schema:
        type: array
        items:
          type: string
        minItems: 1
        maxItems: 1000
      required: true
      explode: false
      description: >-
        The requested list of security identifiers. Accepted ID types include
        Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids.
        <p>***ids limit** =  1000 per request*</p> *<p>Make note, GET Method URL
        request lines are also limited to a total length of 8192 bytes (8KB). In
        cases where the service allows for thousands of ids, which may lead to
        exceeding this request line limit of 8KB, its advised for any requests
        with large request lines to be requested through the respective "POST"
        method.</p>*
      examples:
        oneEquityId:
          summary: One Equity Market Identifier
          value:
            - AAPL-USA
        multipleEquityIds:
          summary: Multiple Equity Market Identifiers
          value:
            - FDS-US
            - AAPL-US
            - MSFT-US
    fixedIds:
      name: ids
      in: query
      schema:
        type: array
        items:
          type: string
        minItems: 1
        maxItems: 2000
      required: true
      explode: false
      description: >-
        The requested list of Fixed Income security identifiers. <p>***ids
        limit** =  2000 per request*</p> *<p>Make note, GET Method URL request
        lines are also limited to a total length of 8192 bytes (8KB). In cases
        where the service allows for thousands of ids, which may lead to
        exceeding this request line limit of 8KB, its advised for any requests
        with large request lines to be requested through the respective "POST"
        method.</p>*
      examples:
        oneFixedId:
          summary: One Fixed Income Identifier
          value:
            - 037833BX
        multipleFixedIds:
          summary: Multiple Fixed Income Identifiers and Types
          value:
            - 037833BX
            - 853207EZ
            - 9127963H
    startDate:
      name: startDate
      in: query
      required: false
      schema:
        type: string
      description: >
        The start date requested for a given date range in **YYYY-MM-DD**
        format. If left blank, the API will default to previous close. Future
        dates (T+1) are not accepted in this endpoint.
      example: '2019-01-01'
    endDate:
      name: endDate
      in: query
      required: false
      schema:
        type: string
      description: >
        The end date requested for a given date range in **YYYY-MM-DD** format.
        If left blank, the API will default to previous close. Future dates
        (T+1) are not accepted in this endpoint.
      example: '2019-12-31'
    date:
      name: date
      in: query
      required: false
      schema:
        type: string
      description: >
        The as of date in **YYYY-MM-DD** format. This controls the perspective
        date in which the period parameter will be computed. If left blank, the
        API will default to previous close. Future dates (T+1) are not accepted
        in this endpoint.
      example: '2019-07-07'
    dateRs:
      name: date
      in: query
      required: false
      schema:
        type: string
      description: >
        The date in **YYYY-MM-DD** format. This controls the perspective dates
        to the calculate the returns. If left blank, the API will default to
        previous close. Future dates (T+1) are not accepted in this endpoint.
      example: '2019-07-07'
    frequency:
      name: frequency
      in: query
      schema:
        type: string
        enum:
          - D
          - W
          - M
          - AM
          - CQ
          - FQ
          - AY
          - CY
          - FY
        default: D
      description: |
        Controls the display frequency of the data returned.
          * **D** = Daily
          * **W** = Weekly, based on the last day of the week of the start date.
          * **M** = Monthly, based on the last trading day of the month.
          * **AM** = Monthly, based on the start date (e.g., if the start date is June 16, data is displayed for June 16, May 16, April 16 etc.).
          * **CQ** = Quarterly based on the last trading day of the calendar quarter (March, June, September, or December).
          * **FQ** = Fiscal Quarter of the company.
          * **AY** = Actual Annual, based on the start date.
          * **CY** = Calendar Annual, based on the last trading day of the calendar year.
          * **FY** = Fiscal Annual, based on the last trading day of the company's fiscal year.
      examples:
        Daily:
          summary: D - Daily frequency display based on trading calendar
          value: D
        Weekly:
          summary: W - Weekly - based on the last day of the week of the start date
          value: W
        Monthly:
          summary: M - Monthly - based on the last trading day of the month.
          value: M
        Actual Month:
          summary: >-
            AM - Actual Month - based on the startDate (e.g., if the start date
            is June 16, data is displayed for June 16, May 16, April 16 etc.).
          value: AM
        Calendar Quarterly:
          summary: >-
            CQ - Calendar Quarterly - based on the last day of the week of the
            startDate
          value: CQ
        Fiscal Quarterly:
          summary: FQ - Fiscal Quarter of the company
          value: FQ
        Actual Annual:
          summary: AY - Actual Annual - based on the startDate
          value: AY
        Calendar Annual:
          summary: >-
            CY - Calendar Annual - based on the last trading day of the calendar
            year.
          value: CY
        Fiscal Annual:
          summary: >-
            FY - Fiscal Annual - based on the last trading day of the company's
            fiscal year.
          value: FY
    frequencyFi:
      name: frequency
      in: query
      schema:
        type: string
        enum:
          - D
          - M
          - AM
          - MTD
          - CQ
          - CQTD
          - AY
          - CY
          - CYTD
        default: D
      description: |
        Controls the display frequency of the data returned.
          * **D** = Daily
          * **M** = Monthly, based on the last trading day of the month.
          * **AM** = Monthly, based on the start date (e.g., if the start date is June 16, data is displayed for June 16, May 16, April 16 etc.).
          * **MTD** = Month-to-date
          * **CQ** = Quarterly based on the last trading day of the calendar quarter (March, June, September, or December).
          * **CQTD** =  Calendar quarter-to-date
          * **AY** = Actual Annual, based on the start date.
          * **CY** = Calendar Annual, based on the last trading day of the calendar year.
          * **CYTD** = Calendar Year-to-date.
      examples:
        Daily:
          summary: D - Daily frequency display based on trading calendar
          value: D
        Month-to-date:
          summary: MTD - Month-to-date
          value: MTD
        Monthly:
          summary: M - Monthly - based on the last trading day of the month.
          value: M
        Actual Month:
          summary: >-
            AM - Actual Month - based on the startDate (e.g., if the start date
            is June 16, data is displayed for June 16, May 16, April 16 etc.).
          value: AM
        Calendar Quarterly:
          summary: >-
            CQ - Calendar Quarterly - based on the last day of the week of the
            startDate
          value: CQ
        Calendar quarter-to-date:
          summary: CQTD - Calendar quarter-to-date
          value: CQTD
        Actual Annual:
          summary: AY - Actual Annual - based on the startDate
          value: AY
        Calendar Annual:
          summary: >-
            CY - Calendar Annual - based on the last trading day of the calendar
            year.
          value: CY
        Calendar Year-to-date:
          summary: CYTD - Calendar Year-to-date
          value: CYTD
    calendar:
      name: calendar
      in: query
      schema:
        type: string
        enum:
          - FIVEDAY
          - SEVENDAY
          - LOCAL
        default: FIVEDAY
      description: >-
        Calendar of data returned. SEVENDAY includes weekends. LOCAL calendar
        will default to the securities' trading calendar which excludes date
        records for respective holiday periods.
      example: FIVEDAY
    currency:
      name: currency
      in: query
      schema:
        type: string
      description: >-
        Currency code for adjusting prices. Default is Local. For a list of
        currency ISO codes, visit [Online Assistant Page
        1470](https://oa.apps.factset.com/pages/1470).
      example: USD
    adjust:
      name: adjust
      in: query
      schema:
        type: string
        enum:
          - SPLIT
          - SPINOFF
          - DIVADJ
          - UNSPLIT
        default: SPLIT
      description: >
        Controls the split, spinoff, and dividend adjustments for the prices.
        <p>For more information, visit [Online Assistant Page
        614](https://oa.apps.factset.com/pages/614)</p>
          * **SPLIT** = Split ONLY Adjusted. This is used by default.
          * **SPINOFF** = Splits & Spinoff Adjusted.
          * **DIVADJ** = Splits, Spinoffs, and Dividends adjusted.
          * **UNSPLIT** = No Adjustments.
      examples:
        split:
          summary: >-
            Split adjusted by default - accounts for splits over security's
            history.
          value: SPLIT
        spinoff:
          summary: >-
            Spinoff Adjusted - accounts for a company's spinoff. Spinoffs are
            treated as special dividends.
          value: SPINOFF
        Dividend Adjusted:
          summary: Dividend Adjusted
          value: DIVADJ
        Unsplit:
          summary: Unsplit data - overrides the default split adjustment
          value: UNSPLIT
    dividendAdjust:
      name: dividendAdjust
      in: query
      schema:
        type: string
        enum:
          - PRICE
          - EXDATE
          - PAYDATE
          - EXDATE_C
          - PAYDATE_C
        default: PRICE
      required: false
      description: |
        Controls the dividend reinvestment for the returns calculation.
          * **PRICE** = Price Change - Dividends Excluded
          * **EXDATE** = Simple Return - Dividends Received on exdate but not reinvested
          * **PAYDATE** = Simple Return - Dividends Received on paydate but not reinvested
          * **EXDATE_C** = Compound Return - Dividends reinvested on exdate
          * **PAYDATE_C** = Compound Return - Dividends reinvested on paydate.
    splitAdjust:
      name: splitAdjust
      in: query
      description: Code to control split adjustments for shares count.
      required: false
      schema:
        type: string
        enum:
          - SPLIT
          - UNSPLIT
        default: SPLIT
    rollingPeriod:
      name: rollingPeriod
      in: query
      description: >-
        Period of measure for the rolling cumulative return. This does not
        change display `frequency` but rather the underlying return calculation
        period. All periods are referencing actual periods of measure, not
        period-ends. For example, 1M rolling period will go back to that date
        the previous month, which is not always the month-end date.
      required: false
      schema:
        type: string
        enum:
          - 1D
          - 1W
          - 1M
          - 3M
          - 6M
          - 52W
          - 2Y
          - 3Y
          - 5Y
          - 10Y
    period:
      name: period
      in: query
      description: >
        The period of measure for the security's high and low pricing. This does
        not change display `frequency` but rather the underlying period. For
        example, if you wish to fetch the latest 52 week high and low price,
        select 52W. All periods are referencing actual periods of measure, not
        period-ends where-

          * **D** = Daily
          * **W** = Weekly, based on the last trading day of the week. Use the 52W for representing the latest year.
          * **M** = Monthly, based on the start date (e.g., if the start date is June 16, data is displayed for June 16, May 16, April 16 etc.).
          * **YTD** = Year-to-Date
          * **Y** =  Actual Annual, based on the start date.
      required: false
      schema:
        type: string
        enum:
          - 1D
          - 1W
          - 1M
          - 3M
          - 6M
          - YTD
          - 52W
          - 2Y
          - 3Y
          - 5Y
          - 10Y
        default: 52W
    priceType:
      name: priceType
      in: query
      description: >
        Controls whether price high and low data is returned intraday or at the
        close. For example, by selecting INTRADAY, if a security price reached
        an all time high of 10 during trading hours over the period of measure
        but closed that day at 8, then the service will return 10. If CLOSE was
        selected the service would return 8 if that was the high for the period
        measured.
      required: false
      schema:
        type: string
        enum:
          - INTRADAY
          - CLOSE
        default: CLOSE
    dividendAdjustSnapshot:
      name: dividendAdjust
      in: query
      description: >
        Controls the dividend reinvestment for the returns calculation.
        Dividends will be reinvested on the date the dividends go ex (when the
        dividends belong to the seller rather than the buyer). Visit [OA
        8748](https://my.apps.factset.com/oa/pages/8748) for calculation
        methodology.
          * **PRICE** = Price Change - Dividends Excluded.
          * **EXDATE** = Simple Return - Dividends Received on exdate but not reinvested. Dividends accumulated throughout the specified period are added to the price at the end of the period.
          * **EXDATE_C** = Compound Return - Dividends reinvested on exdate. Dividends accumulated throughout the specified period are used to buy more shares of stock in the company.
      required: false
      schema:
        type: string
        enum:
          - PRICE
          - EXDATE
          - EXDATE_C
        default: PRICE
    batch:
      name: batch
      in: query
      description: >
        Enables the ability to asynchronously "batch" the request, supporting a
        long-running request up to **10 minutes**. Upon requesting batch=Y, the
        service will respond back with an HTTP Status Code of 202.


        **Additional Access Required. To gain access to this feature, reach out
        to your FactSet Account team or "Report Issue" above and our support
        teams can assist.**


        Once a batch request is submitted, use `batch/v1/status` to see if the
        job has completed. Once completed, retrieve the results of the request
        via `batch/v1/result`.


        When using Batch, `ids` limit is increased to **5000** ids per request,
        though limits on query string via GET method still apply. It's advised
        to submit large lists of ids via POST method.
      schema:
        type: string
        enum:
          - 'Y'
          - 'N'
        default: 'N'
  schemas:
    pricesRequest:
      title: Prices Request Body
      description: Prices Request Body
      type: object
      properties:
        ids:
          $ref: '#/components/schemas/idsBatchMax5000'
        startDate:
          $ref: '#/components/schemas/startDate'
        endDate:
          $ref: '#/components/schemas/endDate'
        frequency:
          $ref: '#/components/schemas/frequency'
        currency:
          $ref: '#/components/schemas/requestCurrency'
        calendar:
          $ref: '#/components/schemas/calendar'
        adjust:
          $ref: '#/components/schemas/adjust'
        batch:
          $ref: '#/components/schemas/batch'
      required:
        - ids
    pricesResponse:
      type: object
      title: Prices Response
      properties:
        data:
          description: Array of Price Objects
          type: array
          items:
            $ref: '#/components/schemas/price'
    price:
      title: Price Object
      type: object
      properties:
        fsymId:
          description: >-
            Factset Regional Security Identifier. Six alpha-numeric characters,
            excluding vowels, with an -R suffix (XXXXXX-R). Identifies the
            security's best regional security data series per currency. For
            equities, all primary listings per region and currency are allocated
            a regional-level permanent identifier. The regional-level permanent
            identifier will be available once a SEDOL representing the
            region/currency has been allocated and the identifiers are on
            FactSet.
          type: string
          example: SJY281-R
          nullable: true
        date:
          description: Ending date for the period expressed in YYYY-MM-DD format.
          type: string
          format: date
          example: '2013-08-01'
          nullable: true
        adjDate:
          description: >-
            Date of last split for which prices and volume have been adjusted.
            Use /factset-prices/v#/splits endpoint for details regarding the
            split.
          type: string
          format: date
          example: '2005-02-07'
          nullable: true
        currency:
          type: string
          description: >-
            Currency ISO code. For more details, visit [Online Assistant Page
            #1470](https://oa.apps.factset.com/pages/1470).
          example: USD
          nullable: true
        price:
          type: number
          format: double
          description: >-
            Closing Price as of the date(s) requested. By default the price is
            in local trading currency, split adjusted and not spinoff adjusted.
            Prices updated nightly at approximately at 9pm ET.
          example: 125
          nullable: true
        priceOpen:
          description: >-
            Open price as of the date(s) requested. By default the price is in
            local trading currency, split adjusted and not spinoff adjusted.
            Prices updated nightly at approximately at 9pm ET.
          type: number
          format: double
          example: 123.75
          nullable: true
        priceHigh:
          description: >-
            High closing price as of the date(s) requested. By default the price
            is in local trading currency, split adjusted and not spinoff
            adjusted.  Prices updated nightly at approximately at 9pm ET.
          type: number
          format: double
          example: 126
          nullable: true
        priceLow:
          description: >-
            Low closing price as of the date(s) requested. By default the price
            is in local trading currency, split adjusted and not spinoff
            adjusted.  Prices updated nightly at approximately at 9pm ET.
          type: number
          format: double
          example: 121.25
          nullable: true
        volume:
          description: >-
            Returns the cumulative volume over dates requested. Data is returned
            in thousands.
          type: number
          format: double
          example: 120341
          nullable: true
        requestId:
          description: Identifier that was used for the request.
          type: string
          example: IBM-US
    pricesFixedIncomeRequest:
      title: Fixed Income Request Body
      description: Fixed Income Request Body
      type: object
      properties:
        ids:
          $ref: '#/components/schemas/fixedIds'
        startDate:
          $ref: '#/components/schemas/startDate'
        endDate:
          $ref: '#/components/schemas/endDate'
        frequency:
          $ref: '#/components/schemas/frequencyFi'
      required:
        - ids
    pricesFixedIncomeResponse:
      type: object
      title: Fixed Income Prices Response
      properties:
        data:
          description: Array of Price Objects
          type: array
          items:
            $ref: '#/components/schemas/fixedIncomePrice'
    fixedIncomePrice:
      title: Fixed Income Price Object
      type: object
      properties:
        fsymId:
          description: >-
            Factset Security Identifier. Six alpha-numeric characters, excluding
            vowels, with an -S suffix (XXXXXX-S).
          type: string
          example: NL6DQ8-S
          nullable: true
        date:
          description: Ending date for the period expressed in YYYY-MM-DD format.
          type: string
          format: date
          example: '2020-06-09'
          nullable: true
        securityType:
          description: |
            Returns the security type code of fixed income instruments.
              * AGCY - Agency
              * BDNT - Bond/Note
              * BDWT  - Bond with Warrants
              * BKAC  - Bankers Acceptance
              * BLDN - Bill/Discount Note
              * BOND  - Bond
              * CAP  - Embedded ceiling or short interest rates
              * CAPS - Capital Security
              * CAPT - Capital Trust Security
              * CD - Certificate of Deposit (Munis)
              * CDO - Collateralized Debt Obligation
              * CMO  - Collateralized mortgage obligation
              * COMP - Commercial Paper
              * CONV - Convertible/Exchangeable
              * CONVP - Convertible Preferred
              * CORP - Corporate
              * COVR - Covered Bond
              * CP  - Commercial Paper
              * CRL - Credit Linked Security
              * DEB - Debenture
              * DERI  - Derivative (generic type)
              * EBON - Eurobond
              * EQL - Equity Linked Security
              * FORW  - Forward deliveries
              * GRTR  - Grantor trust
              * HY - Hypotheken Pfandbriefe
              * IIDX - Inflation Indexed Security
              * INVF  - Inverse floaters
              * LAUTH - Local Authority/Political Division
              * LINK  - Linked securities
              * LKS - Linked Securities
              * MAPL - Mixed Asset Portfolio Linked Security
              * MM - Money Market
              * NOTE  - Note
              * OF - Obligations FonciÃres
              * OPTN  - Options
              * OTHL - Other Linked Security
              * PAYS  - Payment streams
              * PFD - Preferred
              * PFND - Pfandbriefe
              * POOL  - Pooled derivatives
              * PSEC - Preferred Security
              * PSTK - Preferred Stock
              * REPO  - REPOS
              * RMIC  - REMIC
              * SHFL  - Short floats (auction)
              * STRIPS - STRIPS
              * SWAP  - Embedded swaps
              * TR  - Trust
              * TRUPS - Trust Preferred Security
          type: string
          example: BDNT
          nullable: true
        issuerEntityId:
          description: Fixed Income Issuer Entity ID (-E).
          type: string
          example: 000C7F-E
          nullable: true
        issuerType:
          description: |
            Returns the issuer type code of fixed income instruments.
              * AGCY - Agency
              * CORP - Corporate
              * LAUTH - Local Authority/Political Division
              * MUNI - Municipals
              * SOV - Sovereign
              * SUPR - Supranational
              * SCOL - Securitized/Collateralized
          type: string
          example: CORP
          nullable: true
        priceBid:
          description: >-
            BID PRICE. For North American issues, the value is an evaluated
            price, where available, else it is an exchange-traded price. Please
            note that distinct Bid and Ask Prices are not available for North
            American issues; Bid, Mid, and Ask Prices will be identical for
            North American issues. For issues outside of North America
            (International), the value is an evaluated price. Please note that
            distinct Bid and Ask Prices are only available for issues outside of
            North America. By default, the Mid Price is returned for issues
            outside of North America.
          type: number
          format: double
          example: 134.959
          nullable: true
        priceMid:
          description: >-
            MID Price. For North American issues, the value is an evaluated
            price, where available, else it is an exchange-traded price. Please
            note that distinct Bid and Ask Prices are not available for North
            American issues; Bid, Mid, and Ask Prices will be identical for
            North American issues. For issues outside of North America
            (International), the value is an evaluated price. Please note that
            distinct Bid and Ask Prices are only available for issues outside of
            North America. By default, the Mid Price is returned for issues
            outside of North America.
          type: number
          format: double
          example: 137.695
          nullable: true
        priceAsk:
          description: >-
            ASK Price. For North American issues, the value is an evaluated
            price, where available, else it is an exchange-traded price. Please
            note that distinct Bid and Ask Prices are not available for North
            American issues; Bid, Mid, and Ask Prices will be identical for
            North American issues. For issues outside of North America
            (International), the value is an evaluated price. Please note that
            distinct Bid and Ask Prices are only available for issues outside of
            North America. By default, the Mid Price is returned for issues
            outside of North America.
          type: number
          format: double
          example: 134.959
          nullable: true
        requestId:
          description: Identifier that was used for the request.
          type: string
          example: 037833BX
    referencesRequest:
      title: References Request Body
      description: References Request Body
      type: object
      properties:
        ids:
          $ref: '#/components/schemas/idsMax2000'
      required:
        - ids
    referencesResponse:
      type: object
      title: References Response
      properties:
        data:
          description: Array of References Objects
          type: array
          items:
            $ref: '#/components/schemas/references'
    references:
      title: References Object
      type: object
      properties:
        fsymId:
          description: >-
            Factset Regional Security Identifier. Six alpha-numeric characters,
            excluding vowels, with an -R suffix (XXXXXX-R). Identifies the
            security's best regional security data series per currency. For
            equities, all primary listings per region and currency are allocated
            a regional-level permanent identifier. The regional-level permanent
            identifier will be available once a SEDOL representing the
            region/currency has been allocated and the identifiers are on
            FactSet.
          type: string
          example: HTM0LK-R
          nullable: true
        name:
          description: The name of the security.
          type: string
          example: ALPHABET INC
          nullable: true
        secType:
          type: string
          description: >-
            Security Type Description. For more details, visit [Online Assistant
            Page #10149](https://oa.apps.factset.com/pages/10149).
          example: Common stock
          nullable: true
        secTypeCode:
          type: string
          description: >-
            General Security Type Code. For more details regarding what the code
            represents, visit [Online Assistant Page
            #10149](https://oa.apps.factset.com/pages/10149).
          example: '0'
          nullable: true
        secTypeCodeDet:
          type: string
          description: >-
            Detailed Security Type Code. For more details regarding what the
            code represents, visit [Online Assistant Page
            #10149](https://oa.apps.factset.com/pages/10149).
          example: '10'
          nullable: true
        currency:
          type: string
          description: >-
            Currency ISO code. For more details, visit [Online Assistant Page
            #1470](https://oa.apps.factset.com/pages/1470).
          example: USD
          nullable: true
        country:
          type: string
          description: >-
            Country Name. Returns the country where the security is *traded*
            from the North American Pricing database. Therefore, for securities
            covered by the North American Pricing database, will return either
            UNITED STATES. or CANADA. For securities covered by the Global
            Pricing database, the item returns the country where the company is
            *incorporated*.
          example: UNITED STATES
          nullable: true
        primaryExchange:
          type: string
          description: >-
            Primary Exchange Name. For more details, visit [Online Assistant
            Page #16610](https://oa.apps.factset.com/pages/16610).
          example: NASDAQ
          nullable: true
        exchangeCountry:
          type: string
          description: >-
            Returns the location of the exchange where the company's stock is
            traded.
          example: UNITED STATES
          nullable: true
        localIndex:
          type: string
          description: >-
            The Local Index ID for the company's home country benchmark. For
            more details, visit [Online Assistant Page
            #10698](https://oa.apps.factset.com/pages/10698).
          example: SP50
          nullable: true
        nextTradingHolidayDate:
          type: string
          format: date
          description: >-
            The Next Trading Holiday. For more details regarding Global Trading
            Holiday Schedules, visit [Online Assistant Page
            #10397](https://oa.apps.factset.com/pages/10397).
          example: '2020-09-07'
          nullable: true
        firstDate:
          type: string
          format: date
          description: >-
            The Security's Date of First Trade. It will return the first date
            that the FactSet Pricing database began to cover the security and it
            may not coincide with the actual IPO date. Pricing information for
            this security will not be available before the date returned. For
            more details.
          example: '2004-08-19'
          nullable: true
        lastDate:
          type: string
          format: date
          description: >-
            Date of Last Trade.  It will return the last date that the FactSet
            Pricing database as a record for this security listing.
          example: '2020-09-04'
          nullable: true
        requestId:
          description: Identifier that was used for the request.
          type: string
          example: GOOGL-US
    returnsRequest:
      title: Returns Request Body
      description: Returns Request Body
      type: object
      properties:
        ids:
          $ref: '#/components/schemas/idsMax2000'
        startDate:
          $ref: '#/components/schemas/startDate'
        endDate:
          $ref: '#/components/schemas/endDate'
        frequency:
          $ref: '#/components/schemas/frequency'
        currency:
          $ref: '#/components/schemas/requestCurrency'
        calendar:
          $ref: '#/components/schemas/calendar'
        dividendAdjust:
          $ref: '#/components/schemas/dividendAdjust'
        rollingPeriod:
          $ref: '#/components/schemas/rollingPeriod'
      required:
        - ids
    returnsResponse:
      type: object
      title: Returns Response
      properties:
        data:
          description: Array of Returns Objects
          type: array
          items:
            $ref: '#/components/schemas/return'
    return:
      title: Return Object
      type: object
      properties:
        fsymId:
          description: >-
            Factset Regional Security Identifier. Six alpha-numeric characters,
            excluding vowels, with an -R suffix (XXXXXX-R). Identifies the
            security's best regional security data series per currency. For
            equities, all primary listings per region and currency are allocated
            a regional-level permanent identifier. The regional-level permanent
            identifier will be available once a SEDOL representing the
            region/currency has been allocated and the identifiers are on
            FactSet.
          type: string
          example: SJY281-R
          nullable: true
        date:
          description: >-
            End date of the return. Date in YYYY-MM-DD format. Depending on
            Frequency and Calendar settings, this could represent the entire
            return period requested.
          type: string
          format: date
          example: '2013-08-01'
          nullable: true
        adjDate:
          description: Date of last split for which return has been adjusted.
          type: string
          format: date
          example: '2005-02-07'
          nullable: true
        currency:
          description: >-
            Currency ISO code. For more details, visit [Online Assistant Page
            #1470](https://oa.apps.factset.com/pages/1470).
          type: string
          example: USD
          nullable: true
        totalReturn:
          description: >-
            The simple or compound return for the requested `frequency` and/or
            `rolling_period`. Depending on the input parameters the return will
            adjust accordingly. If you simply use `frequency` and no
            `rolling_period`, the return value will represent the frequency
            period. If you use `rolling_period`, the values will be returned in
            actual period ends (e.g. actual month, actual week, daily, etc.).
            General Return Calculation Details found on [Online Assistant Page
            #8748](https://oa.apps.factset.com/pages/8748)
          type: number
          format: double
          example: 1.0345
          nullable: true
        requestId:
          description: Identifier that was used for the request.
          type: string
          example: IBM-US
    dividendsRequest:
      title: Dividends Request Body
      description: Dividends Request Body
      type: object
      properties:
        ids:
          $ref: '#/components/schemas/idsMax1000'
        startDate:
          $ref: '#/components/schemas/startDate'
        endDate:
          $ref: '#/components/schemas/endDate'
        currency:
          $ref: '#/components/schemas/requestCurrency'
        adjust:
          $ref: '#/components/schemas/adjust'
      required:
        - ids
    dividendsResponse:
      type: object
      title: Dividend Response
      properties:
        data:
          description: Array of Dividend Objects
          type: array
          items:
            $ref: '#/components/schemas/dividend'
    dividend:
      title: Dividend Object
      type: object
      properties:
        fsymId:
          description: >-
            Factset Regional Security Identifier. Six alpha-numeric characters,
            excluding vowels, with an -R suffix (XXXXXX-R). Identifies the
            security's best regional security data series per currency. For
            equities, all primary listings per region and currency are allocated
            a regional-level permanent identifier. The regional-level permanent
            identifier will be available once a SEDOL representing the
            region/currency has been allocated and the identifiers are on
            FactSet.
          type: string
          example: SJY281-R
          nullable: true
        divsExDate:
          description: Ex-Date of the dividend expressed in YYYY-MM-DD format.
          type: string
          format: date
          example: '2013-08-01'
          nullable: true
        adjDate:
          description: Date of last split for which prices and volume have been adjusted.
          type: string
          format: date
          example: '2005-02-07'
          nullable: true
        currency:
          description: >-
            Currency ISO code. For more details, visit [Online Assistant Page
            #1470](https://oa.apps.factset.com/pages/1470).
          type: string
          example: USD
          nullable: true
        divsPaid:
          description: Amount of the dividend paid.
          type: number
          format: double
          example: 5
          nullable: true
        divsRecDate:
          description: Date the dividend was recorded expressed in YYYY-MM-DD format.
          type: string
          format: date
          example: '2013-07-10'
          nullable: true
        divsPayDate:
          description: Date the dividend will be paid expressed in YYYY-MM-DD format.
          type: string
          format: date
          example: '2013-08-08'
          nullable: true
        divsTypeC:
          description: >-
            Dividend type code. For code descriptions, visit [Online Assistant
            Page #8764](https://oa.apps.factset.com/pages/8764).
          type: integer
          example: 1049
          nullable: true
        divsTypeD:
          description: >-
            Description of dividend type. For type descriptions, visit [Online
            Assistant Page #8764](https://oa.apps.factset.com/pages/8764).
          type: string
          example: U.S. Currency
          nullable: true
        divsTaxC:
          description: >-
            Tax Marker Code. For code descriptions, visit [Online Assistant Page
            #15265](https://oa.apps.factset.com/pages/15265).
          type: string
          example: FC
          nullable: true
        divsTaxD:
          description: >-
            Description of Tax Marker. For type descriptions, visit [Online
            Assistant Page #15265](https://oa.apps.factset.com/pages/15265).
          type: string
          example: Free of tax
          nullable: true
        divsNGFlag:
          description: >-
            Net/Gross Marker Code. For details describing Net vs. Gross
            dividends, visit [Online Assistant Page
            #11512](https://oa.apps.factset.com/pages/11512).
          type: string
          enum:
            - 'N'
            - G
            - T
            - X
            - V
            - '0'
          nullable: true
        divsNGEquiv:
          description: >-
            Net/Gross equivalent (opposite of dividend paid). For details
            describing Net vs. Gross dividends, visit [Online Assistant Page
            #11512](https://oa.apps.factset.com/pages/11512).
          type: number
          format: double
          example: 5.5
          nullable: true
        requestId:
          description: Identifier that was used for the request.
          type: string
          example: IBM-US
    splitsRequest:
      title: Splits Request Body
      description: Splits Request Body
      type: object
      properties:
        ids:
          $ref: '#/components/schemas/idsMax2000'
      required:
        - ids
    splitsResponse:
      type: object
      title: Splits Response
      properties:
        data:
          description: Array of Splits Objects
          type: array
          items:
            $ref: '#/components/schemas/splits'
    splits:
      title: Split Object
      type: object
      properties:
        fsymId:
          description: >-
            Factset Regional Security Identifier. Six alpha-numeric characters,
            excluding vowels, with an -R suffix (XXXXXX-R). Identifies the
            security's best regional security data series per currency. For
            equities, all primary listings per region and currency are allocated
            a regional-level permanent identifier. The regional-level permanent
            identifier will be available once a SEDOL representing the
            region/currency has been allocated and the identifiers are on
            FactSet.
          type: string
          example: SJY281-R
          nullable: true
        date:
          description: Ex-Date of the split expressed in YYYY-MM-DD format.
          type: string
          format: date
          example: '2013-08-01'
          nullable: true
        splitFactor:
          description: >-
            Split adjustment factor for n splits ago. A 2-for-1 split returns
            .50, the number you would multiply the stock price by to adjust for
            the split.
          type: number
          format: double
          example: 2
          nullable: true
        splitComment:
          description: Description for the type of split or spin off.
          type: string
          example: 'Split: 2 for 1'
          nullable: true
        requestId:
          description: Identifier that was used for the request.
          type: string
          example: IBM-US
    sharesRequest:
      title: Shares Request Body
      description: Shares Request Body
      type: object
      properties:
        ids:
          $ref: '#/components/schemas/idsMax1000'
        startDate:
          $ref: '#/components/schemas/startDate'
        endDate:
          $ref: '#/components/schemas/endDate'
        frequency:
          $ref: '#/components/schemas/frequency'
        calendar:
          $ref: '#/components/schemas/calendar'
        splitAdjust:
          $ref: '#/components/schemas/splitAdjust'
      required:
        - ids
    sharesResponse:
      type: object
      title: Shares Response
      properties:
        data:
          description: Array of Shares Objects
          type: array
          items:
            $ref: '#/components/schemas/shares'
    shares:
      title: Shares Object
      type: object
      properties:
        fsymId:
          description: >-
            Factset Regional Security Identifier. Six alpha-numeric characters,
            excluding vowels, with an -R suffix (XXXXXX-R). Identifies the
            security's best regional security data series per currency. For
            equities, all primary listings per region and currency are allocated
            a regional-level permanent identifier. The regional-level permanent
            identifier will be available once a SEDOL representing the
            region/currency has been allocated and the identifiers are on
            FactSet.
          type: string
          example: SJY281-R
          nullable: true
        date:
          description: Date expressed in YYYY-MM-DD format.
          type: string
          format: date
          example: '2013-08-01'
          nullable: true
        adjDate:
          description: >-
            Date of last split for which return has been adjusted. Use the
            /factset-prices/v#/splits endpoint for details on split. If not
            available, date will return as 0001-01-01.
          type: string
          format: date
          example: '2005-02-07'
          nullable: true
        sharesSecurity:
          description: >-
            **Security-level** Common Shares Outstanding in base units. Shares
            sourced primarily from SEC filings. Securities in certain countries
            will include treasury shares. For details visit [Online Assistant
            Page #10435](https://oa.apps.factset.com/pages/10435)
          type: number
          example: 299532000
          nullable: true
        sharesCompany:
          description: >-
            **Company-level** Shares Outstanding aggregated across all share
            classes. Non-traded shares are *excluded*. In base units. For more
            details, visit [Online Assistant Page
            #16867](https://oa.apps.factset.com/pages/16867)
          type: number
          example: 649532000
          nullable: true
        sharesCompanyNontraded:
          description: >-
            **Company-level** Shares Outstanding aggregated across all share
            classes. Non-traded shares are *included* to the calculation basis
            by the proportion of their nominal or par value. In base units. For
            more details, visit [Online Assistant Page
            #16867](https://oa.apps.factset.com/pages/16867)
          type: number
          example: 657532000
          nullable: true
        requestId:
          description: Identifier that was used for the request.
          type: string
          example: IBM-US
    marketValueRequest:
      title: Market Value Request Body
      description: Market Value Request Body
      type: object
      properties:
        ids:
          $ref: '#/components/schemas/idsMax2000'
        startDate:
          $ref: '#/components/schemas/startDate'
        endDate:
          $ref: '#/components/schemas/endDate'
        frequency:
          $ref: '#/components/schemas/frequency'
        currency:
          $ref: '#/components/schemas/requestCurrency'
        calendar:
          $ref: '#/components/schemas/calendar'
      required:
        - ids
    marketValueResponse:
      type: object
      title: Market Value Response
      properties:
        data:
          description: Array of Market Value Objects
          type: array
          items:
            $ref: '#/components/schemas/marketValue'
    marketValue:
      title: Market Value Object
      type: object
      properties:
        fsymId:
          description: >-
            Factset Regional Security Identifier. Six alpha-numeric characters,
            excluding vowels, with an -R suffix (XXXXXX-R). Identifies the
            security's best regional security data series per currency. For
            equities, all primary listings per region and currency are allocated
            a regional-level permanent identifier. The regional-level permanent
            identifier will be available once a SEDOL representing the
            region/currency has been allocated and the identifiers are on
            FactSet.
          type: string
          example: HTM0LK-R
          nullable: true
        date:
          description: Ending date for the period expressed in YYYY-MM-DD format.
          type: string
          format: date
          example: '2020-07-07'
          nullable: true
        currency:
          type: string
          description: >-
            Currency ISO code. For more details, visit [Online Assistant Page
            #1470](https://oa.apps.factset.com/pages/1470).
          example: USD
          nullable: true
        entityMarketValue:
          description: >-
            Aggregate market value across all share classes and includes
            non-traded shares which are added to the calculation basis by the
            proportion of their nominal or par value. Values are in base units.
            To value non-traded shares, the price of the parent equity provides
            the most appropriate approximation of what the non-traded shares
            would be worth in the open market. For unique companies with an ADR
            as the parent equity, since it is the only traded security
            associated with that company, when calculating company-level market
            value, the price of the ADR is used, but is scaled by the ADR ratio
            since there's not always a one-to-one relationship between ADR
            shares and the non-traded shares which they represent. For more
            details visit [Online Assistant Page
            #16867](https://my.apps.factset.com/oa/pages/16867). 
          type: number
          format: double
          example: 1022362841136.31
          nullable: true
        entityMarketValueExNonTraded:
          description: >-
            Aggregate across all share classes and excludes non-traded shares.
            Values are in base units. For more details visit [Online Assistant
            Page #16867](https://my.apps.factset.com/oa/pages/16867).
          type: number
          format: double
          example: 952768582453.33
          nullable: true
        securityMarketValue:
          description: >-
            Returns the security level market value calculated as the share
            price multiplied by the number of shares at the security level.
            **Note:** History is available back to Oct-1999 for North American
            securities, and 1-Jan-2001 for non-North American securities.
          type: number
          format: double
          example: 449970657342.5
          nullable: true
        requestId:
          description: Identifier that was used for the request.
          type: string
          example: GOOGL
    highLowRequest:
      title: High Low Request Body
      description: High Low Request Body
      type: object
      properties:
        ids:
          $ref: '#/components/schemas/idsMax2000'
        date:
          $ref: '#/components/schemas/dateHL'
        period:
          $ref: '#/components/schemas/period'
        priceType:
          $ref: '#/components/schemas/priceType'
        calendar:
          $ref: '#/components/schemas/calendar'
        currency:
          $ref: '#/components/schemas/currency'
        adjust:
          $ref: '#/components/schemas/adjust'
      required:
        - ids
    highLowResponse:
      type: object
      title: High Low Response
      properties:
        data:
          description: Array of High Low Objects
          type: array
          items:
            $ref: '#/components/schemas/highLow'
    highLow:
      title: High Low Object
      type: object
      properties:
        adjDate:
          description: Date of last split for which prices have been adjusted.
          type: string
          format: date
          example: '2005-02-07'
          nullable: true
        date:
          description: >-
            Specific reference date for the period expressed in YYYY-MM-DD
            format.
          type: string
          format: date
          example: '2020-07-07'
          nullable: true
        period:
          description: The period of measure requested using the period query parameter.
          type: string
          example: 52W
          nullable: true
        fsymId:
          description: >-
            Factset Regional Security Identifier. Six alpha-numeric characters,
            excluding vowels, with an -R suffix (XXXXXX-R). Identifies the
            security's best regional security data series per currency. For
            equities, all primary listings per region and currency are allocated
            a regional-level permanent identifier. The regional-level permanent
            identifier will be available once a SEDOL representing the
            region/currency has been allocated and the identifiers are on
            FactSet.
          type: string
          example: HTM0LK-R
          nullable: true
        priceHigh:
          description: >-
            High price over the period requested. This can represent the
            intra-day or closing price depending on the priceType requested. By
            default the price is as of closing in local trading currency, split
            adjusted and not spinoff adjusted.
          type: number
          format: double
          example: 126
          nullable: true
        priceLow:
          description: >-
            Low price over the period requested. This can represent the
            intra-day or closing price depending on the priceType requested. By
            default the price is as of closing in local trading currency, split
            adjusted and not spinoff adjusted.
          type: number
          format: double
          example: 121.25
          nullable: true
        priceHighDate:
          description: >-
            Date in which the highest price occurred over the requested period 
            for the given id expressed in YYYY-MM-DD format.
          type: string
          format: date
          example: '2020-03-05'
          nullable: true
        priceLowDate:
          description: >-
            Date in which the lowest price occurred over the requested period
            for the given id expressed in YYYY-MM-DD format.
          type: string
          format: date
          example: '2019-09-14'
          nullable: true
        requestId:
          description: Identifier that was used for the request.
          type: string
          example: GOOGL
    returnsSnapshotRequest:
      title: Returns Snapshot Request Body
      description: Returns Snapshot Request Body
      type: object
      properties:
        ids:
          $ref: '#/components/schemas/idsMax2000'
        date:
          $ref: '#/components/schemas/dateRS'
        currency:
          $ref: '#/components/schemas/requestCurrency'
        calendar:
          $ref: '#/components/schemas/calendar'
        dividendAdjust:
          $ref: '#/components/schemas/dividendAdjustSnapshot'
      required:
        - ids
    returnsSnapshotResponse:
      type: object
      title: Returns Snapshot Response
      properties:
        data:
          description: Array of Returns Snapshot Objects
          type: array
          items:
            $ref: '#/components/schemas/returnsSnapshot'
    returnsSnapshot:
      title: Return Snapshot Object
      type: object
      properties:
        fsymId:
          description: >-
            Factset Regional Security Identifier. Six alpha-numeric characters,
            excluding vowels, with an -R suffix (XXXXXX-R). Identifies the
            security's best regional security data series per currency. For
            equities, all primary listings per region and currency are allocated
            a regional-level permanent identifier. The regional-level permanent
            identifier will be available once a SEDOL representing the
            region/currency has been allocated and the identifiers are on
            FactSet.
          type: string
          example: SJY281-R
          nullable: true
        date:
          description: >-
            Specific reference date for the period expressed in YYYY-MM-DD
            format.
          type: string
          format: date
          example: '2020-09-09'
          nullable: true
        currency:
          description: >-
            Currency ISO code. For more details, visit [Online Assistant Page
            #1470](https://oa.apps.factset.com/pages/1470).
          type: string
          example: USD
          nullable: true
        requestId:
          description: Identifier that was used for the request.
          type: string
          example: IBM-US
        oneDay:
          description: >-
            Returns the price performance of the security for the previous one
            day from the given date.
          type: number
          format: double
          example: 0.86627007
          nullable: true
        oneMonth:
          description: >-
            Returns the price performance of the security for the past one
            month.
          type: number
          format: double
          example: -2.1606863
          nullable: true
        threeMonth:
          description: >-
            Returns the price performance of the security for the past three
            months.
          type: number
          format: double
          example: -7.2874727
          nullable: true
        sixMonth:
          description: >-
            Returns the price performance of the security for the past six
            months.
          type: number
          format: double
          example: 3.7772775
          nullable: true
        nineMonth:
          description: >-
            Returns the price performance of the security for the past nine
            months.
          type: number
          format: double
          example: -8.706689
          nullable: true
        oneYear:
          description: Returns the price performance of the security for the past one year.
          type: number
          format: double
          example: -14.263678
          nullable: true
        quarterToDate:
          description: >-
            Returns the price performance of the security from the previous
            calendar quarter end to the given date.
          type: number
          format: double
          example: 1.2337565
          nullable: true
        weekToDate:
          description: >-
            Returns the price performance of the security from the previous week
            (usually Friday) to the given date.
          type: number
          format: double
          example: -0.03270507
          nullable: true
        monthToDate:
          description: >-
            Returns the price performance of the security from the previous
            month-end to the given date.
          type: number
          format: double
          example: -0.851506
          nullable: true
        yearToDate:
          description: >-
            Returns the price performance of the security from the previous
            calendar year-end to the given date.
          type: number
          format: double
          example: -8.788413
          nullable: true
        twoYearAnnualized:
          description: Returns the annualized compound total return for two years.
          type: number
          format: double
          example: -3.7836754
          nullable: true
        threeYearAnnualized:
          description: Returns the annualized compound total return for three years.
          type: number
          format: double
          example: -0.49112806
          nullable: true
        fiveYearAnnualized:
          description: Returns the annualized compound total return for five years.
          type: number
          format: double
          example: 0.8408688
          nullable: true
        tenYearAnnualized:
          description: Returns the annualized compound total return for ten years.
          type: number
          format: double
          example: 2.8786583
          nullable: true
        twentyYearAnnualized:
          description: Returns the annualized compound total return for twenty years.
          type: number
          format: double
          example: 1.8996516
          nullable: true
        thirtyYearAnnualized:
          description: Returns the annualized compound total return for thirty years.
          type: number
          format: double
          example: 7.5250373
          nullable: true
        ipoToDateAnnualized:
          description: >-
            Returns the annualized compound total return from the ipo date. The
            calculation uses the closing price as of the IPO date, and not the
            IPO price itself.
          type: number
          format: double
          example: 6.5763993
          nullable: true
        dividendAdjust:
          description: >
            Controls the dividend reinvestment for the returns calculation.
            Dividends will be reinvested on the date the dividends go ex (when
            the dividends belong to the seller rather than the buyer). Visit [OA
            8748](https://my.apps.factset.com/oa/pages/8748) for calculation
            methodology.
              * **PRICE** = Price Change - Dividends Excluded.
              * **EXDATE** = Simple Return - Dividends Received on exdate but not reinvested. Dividends accumulated throughout the specified period are added to the price at the end of the period.
              * **EXDATE_C** = Compound Return - Dividends reinvested on exdate. Dividends accumulated throughout the specified period are used to buy more shares of stock in the company.
          type: string
          example: PRICE
          nullable: true
    rolloverResponse:
      type: object
      title: Rollover Response
      properties:
        data:
          description: Array of `Database Rollover` objects.
          type: array
          items:
            $ref: '#/components/schemas/rollover'
    rollover:
      title: Rollover Object
      type: object
      properties:
        americasRollTime:
          description: >-
            Time of last zero date rollover for the Americas. This is in Eastern
            Time Zone. The date-time format is expressed as
            [YYYY-MM-DD]T[HH:MM:SSS], following ISO 8601.
          type: string
          format: date-time
          example: '2020-06-18T02:52:21.000'
          nullable: true
        americasZeroDate:
          description: >-
            Current relative zero date for the Americas. Date is expressed in
            Eastern Time and expressed as YYYY-MM-DD.
          type: string
          format: date
          example: '2020-06-17'
          nullable: true
        asiapacificRollTime:
          description: >-
            Time of last zero date rollover for Asia/Pacific. This is in Eastern
            Time Zone. The date-time format is expressed as
            [YYYY-MM-DD]T[HH:MM:SSS], following ISO 8601.
          type: string
          format: date-time
          example: '2020-06-18T12:50:30.000'
          nullable: true
        asiapacificZeroDate:
          description: >-
            Current relative zero date for Asia/Pacific. This is in Eastern Time
            Zone
          type: string
          format: date
          example: '2020-06-18'
          nullable: true
        europeRollTime:
          description: >-
            Time of last zero date rollover for Europe. This is in Eastern Time
            Zone. The date-time format is expressed as [YYYY-MM-DD]T[HH:MM:SSS],
            following ISO 8601.
          type: string
          format: date-time
          example: '2020-06-17T21:50:36.000'
          nullable: true
        europeZeroDate:
          description: Current relative zero date for Europe. This is in Eastern Time Zone
          type: string
          format: date
          example: '2020-06-17'
          nullable: true
    errorResponse:
      type: object
      title: Error Response
      properties:
        status:
          description: status
          type: string
          example: Bad Request
        timestamp:
          description: timestamp in YYYY-MM-DD HH:MM:SS.SSS
          type: string
          example: '2019-11-01 11:09:41.918'
          format: date-time
        path:
          description: The Endpoint path {package}/version/{endpoint}
          type: string
          example: /factset-prices/v1/prices
        message:
          description: The plain text error message
          type: string
          example: Validation Error
        subErrors:
          description: subErrors related to the error message. Null if not applicable.
          type: object
          properties:
            object:
              description: the operation ID
              type: string
            field:
              description: Parameter Field Name
              type: string
            message:
              description: Error message
              type: string
            rejectedValue:
              description: Rejected Values in an Array
              type: array
              items:
                type: string
    idsMax1000:
      type: array
      items:
        type: string
      minItems: 1
      maxItems: 1000
      description: >
        The requested list of security identifiers. Accepted ID types include
        Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids.
      example:
        - FDS-US
    idsMax2000:
      type: array
      items:
        type: string
      minItems: 1
      maxItems: 2000
      description: >
        The requested list of security identifiers. Accepted ID types include
        Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids.
      example:
        - FDS-US
    idsBatchMax5000:
      type: array
      items:
        type: string
      description: >
        The requested list of security identifiers. Accepted ID types include
        Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids. 

        <p>ids limit =  2000 per non-batch request / 5000 per batch request</p>
      example:
        - FDS-US
    fixedIds:
      type: array
      items:
        type: string
      minItems: 1
      maxItems: 2000
      description: |
        The requested list of Fixed Income Security Identifiers.
      example:
        - 037833BX
    startDate:
      type: string
      description: >
        The start date requested for a given date range in **YYYY-MM-DD**
        format. If left blank, the API will default to previous close. Future
        dates (T+1) are not accepted in this endpoint.
      example: '2019-01-01'
    endDate:
      type: string
      description: >
        The end date requested for a given date range in **YYYY-MM-DD** format.
        If left blank, the API will default to previous close. Future dates
        (T+1) are not accepted in this endpoint.
      example: '2019-12-31'
    dateHL:
      type: string
      description: >
        The specific date requested for a given period range in **YYYY-MM-DD**
        format. If left blank, the API will default to previous close. Future
        dates (T+1) are not accepted in this endpoint.
      example: '2020-07-07'
    frequency:
      type: string
      enum:
        - D
        - W
        - M
        - AM
        - CQ
        - FQ
        - AY
        - CY
        - FY
      default: D
      description: |
        Controls the display frequency of the data returned.
          * **D** = Daily
          * **W** = Weekly, based on the last day of the week of the start date.
          * **M** = Monthly, based on the last trading day of the month.
          * **AM** = Monthly, based on the start date (e.g., if the start date is June 16, data is displayed for June 16, May 16, April 16 etc.).
          * **CQ** = Quarterly based on the last trading day of the calendar quarter (March, June, September, or December).
          * **FQ** = Fiscal Quarter of the company.
          * **AY** = Actual Annual, based on the start date.
          * **CY** = Calendar Annual, based on the last trading day of the calendar year.
          * **FY** = Fiscal Annual, based on the last trading day of the company's fiscal year.
      example: M
    frequencyFi:
      type: string
      enum:
        - D
        - M
        - AM
        - MTD
        - CQ
        - CQTD
        - AY
        - CY
        - CYTD
      default: D
      description: |
        Controls the display frequency of the data returned.
          * **D** = Daily
          * **M** = Monthly, based on the last trading day of the month.
          * **AM** = Monthly, based on the start date (e.g., if the start date is June 16, data is displayed for June 16, May 16, April 16 etc.).
          * **MTD** = Month-to-date
          * **CQ** = Quarterly based on the last trading day of the calendar quarter (March, June, September, or December).
          * **CQTD** =  Calendar quarter-to-date
          * **AY** = Actual Annual, based on the start date.
          * **CY** = Calendar Annual, based on the last trading day of the calendar year.
          * **CYTD** = Calendar Year-to-date.
      example: M
    calendar:
      type: string
      enum:
        - FIVEDAY
        - SEVENDAY
        - LOCAL
      default: FIVEDAY
      description: >-
        Calendar of data returned. SEVENDAY includes weekends. LOCAL calendar
        will default to the securities' trading calendar which excludes date
        records for respective holiday periods.
      example: FIVEDAY
    requestCurrency:
      title: Request Currency
      type: string
      description: >-
        Currency code for adjusting prices. Default is Local. For a list of
        currency ISO codes, visit [Online Assistant Page
        1470](https://oa.apps.factset.com/pages/1470).
      example: USD
    adjust:
      type: string
      enum:
        - SPLIT
        - SPINOFF
        - DIVADJ
        - UNSPLIT
      default: SPLIT
      description: >
        Controls the split, spinoff, and dividend adjustments for the prices.
        <p>For more information, visit [Online Assistant Page
        614](https://oa.apps.factset.com/pages/614)</p>
          * **SPLIT** = Split ONLY Adjusted. This is used by default.
          * **SPINOFF** = Splits & Spinoff Adjusted.
          * **DIVADJ** = Splits, Spinoffs, and Dividends adjusted.
          * **UNSPLIT** = No Adjustments, Controls the split and dividend adjustments for the prices.
      example: SPLIT
    dividendAdjust:
      type: string
      enum:
        - PRICE
        - EXDATE
        - PAYDATE
        - EXDATE_C
        - PAYDATE_C
      default: PRICE
      description: |
        Controls the dividend reinvestment for the returns calculation.
          * **PRICE** = Price Change - Dividends Excluded
          * **EXDATE** = Simple Return - Dividends Received on exdate but not reinvested
          * **PAYDATE** = Simple Return - Dividends Received on paydate but not reinvested
          * **EXDATE_C** = Compound Return - Dividends reinvested on exdate
          * **PAYDATE_C** = Compound Return - Dividends reinvested on paydate.
    splitAdjust:
      description: Code to control split adjustments for shares count.
      type: string
      enum:
        - SPLIT
        - UNSPLIT
      default: SPLIT
    rollingPeriod:
      description: >-
        Period of measure for the rolling cumulative return. This does not
        change display `frequency` but rather the underlying return calculation
        period. All periods are referencing actual periods of measure, not
        period-ends. For example, 1M rolling period will go back to that date
        the previous month, which is not always the month-end date.
      type: string
      enum:
        - 1D
        - 1W
        - 1M
        - 3M
        - 6M
        - 52W
        - 2Y
        - 3Y
        - 5Y
        - 10Y
    period:
      description: >-
        Period of measure for Prices High Low. This does not change display
        `frequency` but rather the underlying return calculation period. All
        periods are referencing actual periods of measure, not period-ends. For
        example, 1M rolling period will go back to that date the previous month,
        which is not always the month-end date.
      type: string
      enum:
        - 1D
        - 1W
        - 1M
        - 3M
        - 6M
        - 52W
        - 2Y
        - 3Y
        - 5Y
        - 10Y
      default: 52W
    priceType:
      description: Controls whether price high low data is returned intra-day or at close.
      type: string
      enum:
        - INTRADAY
        - CLOSE
      default: CLOSE
    currency:
      description: >-
        Currency code for adjusting prices. Default is Local. For a list of
        currency ISO codes, visit [Online Assistant Page
        1470](https://oa.apps.factset.com/pages/1470).
      type: string
    dateRS:
      type: string
      description: >
        The date in **YYYY-MM-DD** format. This controls the perspective dates
        to the calculate the returns. If left blank, the API will default to
        previous close. Future dates (T+1) are not accepted in this endpoint.
      example: '2019-12-31'
    dividendAdjustSnapshot:
      type: string
      enum:
        - PRICE
        - EXDATE
        - EXDATE_C
      default: PRICE
      description: >
        Controls the dividend reinvestment for the returns calculation.
        Dividends will be reinvested on the date the dividends go ex (when the
        dividends belong to the seller rather than the buyer). Visit [OA
        8748](https://my.apps.factset.com/oa/pages/8748) for calculation
        methodology.
          * **PRICE** = Price Change - Dividends Excluded.
          * **EXDATE** = Simple Return - Dividends Received on exdate but not reinvested. Dividends accumulated throughout the specified period are added to the price at the end of the period.
          * **EXDATE_C** = Compound Return - Dividends reinvested on exdate. Dividends accumulated throughout the specified period are used to buy more shares of stock in the company.
      example: PRICE
    batch:
      description: >
        Enables the ability to asynchronously "batch" the request, supporting a
        long-running request up to 10 minutes. Upon requesting batch=Y, the
        service will respond back with an HTTP Status Code of 202. Once a batch
        request is submitted, use the `batch/v1/status` to see if the job has
        completed. Once completed, retrieve the results of the request via
        `batch/v1/result`. <p>**Additional Access Required. To gain access to
        this feature, reach out to your FactSet Account team or "Report Issue"
        above and our support teams can assist.** Upon requesting "batch": "Y",
        the service will respond back with an HTTP Status Code of 202.
      type: string
      enum:
        - 'Y'
        - 'N'
      default: 'N'
    BatchDataRequest:
      title: Batch Data Request
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          example: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c
          description: Batch Request identifier.
    BatchDataResponse:
      title: Batch Data Response
      type: object
      properties:
        data:
          $ref: '#/components/schemas/BatchData'
    BatchData:
      title: Batch Data
      description: >
        The schema for the batched result is determined by the endpoint you used
        with the _batch_ parameter.

        Please see the schema for that endpoint for the definition.
      type: object
    BatchStatusRequest:
      title: Batch Status Request
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          example: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c
          description: Batch Request identifier.
    BatchStatusResponse:
      title: Batch Status Response
      type: object
      properties:
        data:
          $ref: '#/components/schemas/BatchStatus'
    BatchStatus:
      title: Batch Status
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: the id of batch request.
        startTime:
          type: string
          format: date-time
          description: >-
            Time when the batch request is started. This is in Eastern Time
            Zone. The date-time format is expressed as [YYYY-MM-DD]T[HH:MM:SSS],
            following ISO 8601.
        endTime:
          type: string
          format: date-time
          description: >-
            Time when the batch request is ended. This is in Eastern Time Zone.
            The date-time format is expressed as [YYYY-MM-DD]T[HH:MM:SSS],
            following ISO 8601.
          nullable: true
        status:
          type: string
          enum:
            - QUEUED
            - EXECUTING
            - DONE
            - FAILED
        error:
          type: string
          example: >-
            Invalid Parameter (s)- curr. Please modify your request to use
            parameters outlined in the specification for this endpoint.
          description: Error message.
  responses:
    '400':
      description: >-
        Bad Request. This can occur for several reasons. Please review the
        "message" for more details.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
          examples:
            Bad Request - Date Format:
              $ref: '#/components/examples/badRequestDateFormat'
            Bad Request - Missing Required Parameter:
              $ref: '#/components/examples/badRequestRequiredParameter'
            Bad Request - Future Date:
              $ref: '#/components/examples/badRequestFutureDate'
            Bad Request - Invalid Parameter:
              $ref: '#/components/examples/badRequestInvalidParameters'
            Bad Request - Malformed JSON:
              $ref: '#/components/examples/badRequestMalformedJSON'
            Bad Request - Read Timeout:
              $ref: '#/components/examples/badRequestReadTimeout'
    '401':
      description: >-
        Unauthenticated USERNAME-SERIAL. Ensure you are logged in and have
        successfully generated an API KEY for the IP range you are connecting
        from. For more help, select the **Report Issue** in the top right corner
        of this Developer Portal specification card and choose Connectivity 401
        or 403 Responses.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
          examples:
            Bad Request - Date Format:
              $ref: '#/components/examples/unauthenticated'
    '403':
      description: >-
        The USERNAME-SERIAL attempted to request the endpoint is not authorized
        to access. The request was a legal request, but the server is refusing
        to respond. Please reach out to FactSet Account Team for assistance with
        authorization.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
          examples:
            Bad Request - Date Format:
              $ref: '#/components/examples/forbidden'
    '404':
      description: Resource not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
          examples:
            Batch Request Not Found:
              $ref: '#/components/examples/notFound'
    '415':
      description: >-
        Unsupported Media Type. This error may be returned when the caller sends
        a resource in a format that is not accepted by the server. This can be
        fixed by ensuring that Content-Type header is set to the correct value.
        In this instance, "application/json" would be the appropriate value.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
          examples:
            Bad Request - Date Format:
              $ref: '#/components/examples/unsupportedMediaType'
    '500':
      description: Internal Server Error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
          examples:
            Internal Server Error - Not Writable:
              $ref: '#/components/examples/notWritable'
            Internal Server Error - General Exception:
              $ref: '#/components/examples/generalException'
  examples:
    singleSecurityPrices:
      summary: Single Price Record for AAPL as of March 29 2019
      description: Single Price Record for AAPL
      value:
        data:
          - fsymId: MH33D6-R
            date: '2019-03-29'
            adjDate: '2014-06-09'
            currency: USD
            price: 189.95
            priceOpen: 189.83
            priceHigh: 190.08
            priceLow: 188.54
            volume: 23563.96
            requestId: AAPL
    twoSecuritiesPrices:
      summary: Price Records for AAPL and TSLA as of March 29 2019
      description: Price Records for AAPL and TSLA as of March 29 2019
      value:
        data:
          - fsymId: MH33D6-R
            date: '2019-03-29'
            adjDate: '2014-06-09'
            currency: USD
            price: 189.95
            priceOpen: 189.83
            priceHigh: 190.08
            priceLow: 188.54
            volume: 23563.96
            requestId: AAPL
          - fsymId: Q2YN1N-R
            date: '2019-03-29'
            adjDate: null
            currency: USD
            price: 279.86
            priceOpen: 278.7
            priceHigh: 280.16
            priceLow: 274.5
            volume: 5991.338
            requestId: TSLA
    oneMonthSecurityPrices:
      summary: One month of daily prices for AAPL for March 2019
      description: >-
        One month of daily open, high, low, and close end-of-day prices and
        volume for AAPL for March 2019.
      value:
        data:
          - fsymId: MH33D6-R
            date: '2019-03-01'
            adjDate: '2014-06-09'
            currency: USD
            price: 174.97
            priceOpen: 174.28
            priceHigh: 175.15
            priceLow: 172.89
            volume: 25886.17
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-03-04'
            adjDate: '2014-06-09'
            currency: USD
            price: 175.85
            priceOpen: 175.69
            priceHigh: 177.75
            priceLow: 173.97
            volume: 27436.2
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-03-05'
            adjDate: '2014-06-09'
            currency: USD
            price: 175.53
            priceOpen: 175.94
            priceHigh: 176
            priceLow: 174.54
            volume: 19737.42
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-03-06'
            adjDate: '2014-06-09'
            currency: USD
            price: 174.52
            priceOpen: 174.67
            priceHigh: 175.49
            priceLow: 173.94
            volume: 20810.38
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-03-07'
            adjDate: '2014-06-09'
            currency: USD
            price: 172.5
            priceOpen: 173.87
            priceHigh: 174.44
            priceLow: 172.02
            volume: 24796.37
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-03-08'
            adjDate: '2014-06-09'
            currency: USD
            price: 172.91
            priceOpen: 170.32
            priceHigh: 173.07
            priceLow: 169.5
            volume: 23999.36
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-03-11'
            adjDate: '2014-06-09'
            currency: USD
            price: 178.9
            priceOpen: 175.49
            priceHigh: 179.12
            priceLow: 175.35
            volume: 32011.03
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-03-12'
            adjDate: '2014-06-09'
            currency: USD
            price: 180.91
            priceOpen: 180
            priceHigh: 182.67
            priceLow: 179.37
            volume: 32467.58
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-03-13'
            adjDate: '2014-06-09'
            currency: USD
            price: 181.71
            priceOpen: 182.25
            priceHigh: 183.3
            priceLow: 180.92
            volume: 31032.52
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-03-14'
            adjDate: '2014-06-09'
            currency: USD
            price: 183.73
            priceOpen: 183.9
            priceHigh: 184.1
            priceLow: 182.56
            volume: 23579.51
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-03-15'
            adjDate: '2014-06-09'
            currency: USD
            price: 186.12
            priceOpen: 184.85
            priceHigh: 187.33
            priceLow: 183.74
            volume: 39042.91
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-03-18'
            adjDate: '2014-06-09'
            currency: USD
            price: 188.02
            priceOpen: 185.8
            priceHigh: 188.39
            priceLow: 185.79
            volume: 26219.83
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-03-19'
            adjDate: '2014-06-09'
            currency: USD
            price: 186.53
            priceOpen: 188.35
            priceHigh: 188.99
            priceLow: 185.92
            volume: 31646.37
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-03-20'
            adjDate: '2014-06-09'
            currency: USD
            price: 188.16
            priceOpen: 186.23
            priceHigh: 189.49
            priceLow: 184.73
            volume: 31035.23
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-03-21'
            adjDate: '2014-06-09'
            currency: USD
            price: 195.09
            priceOpen: 190.02
            priceHigh: 196.33
            priceLow: 189.81
            volume: 51034.24
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-03-22'
            adjDate: '2014-06-09'
            currency: USD
            price: 191.05
            priceOpen: 195.34
            priceHigh: 197.69
            priceLow: 190.78
            volume: 42407.67
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-03-25'
            adjDate: '2014-06-09'
            currency: USD
            price: 188.74
            priceOpen: 191.51
            priceHigh: 191.98
            priceLow: 186.6
            volume: 43845.29
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-03-26'
            adjDate: '2014-06-09'
            currency: USD
            price: 186.79
            priceOpen: 191.664
            priceHigh: 192.88
            priceLow: 184.58
            volume: 49800.54
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-03-27'
            adjDate: '2014-06-09'
            currency: USD
            price: 188.47
            priceOpen: 188.75
            priceHigh: 189.76
            priceLow: 186.55
            volume: 29848.43
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-03-28'
            adjDate: '2014-06-09'
            currency: USD
            price: 188.72
            priceOpen: 188.95
            priceHigh: 189.559
            priceLow: 187.53
            volume: 20780.36
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-03-29'
            adjDate: '2014-06-09'
            currency: USD
            price: 189.95
            priceOpen: 189.83
            priceHigh: 190.08
            priceLow: 188.54
            volume: 23563.96
            requestId: AAPL
    multipleIdsOneYearPost:
      summary: One Year of Daily Prices for APPL and Tesla in Calendar 2019 Year
      description: One Year of Daily Prices for APPL and Tesla in Calendar 2019 Year
      value:
        ids:
          - AAPL-US
          - TSLA-US
        startDate: '2019-01-01'
        endDate: '2019-12-31'
        frequency: D
        calendar: FIVEDAY
        currency: LOCAL
        adjust: SPLIT
    singleIdsOneYearMonthlyPost:
      summary: One Year of Monthly Prices for AAPL-US in Calendar 2019 Year
      description: One Year of Monthly Prices for AAPL-US in Calendar 2019 Year
      value:
        ids:
          - AAPL-US
        startDate: '2019-01-01'
        endDate: '2019-12-31'
        frequency: M
        calendar: FIVEDAY
        currency: LOCAL
        adjust: SPLIT
    priceAdjustedForDividendsMonthlyPost:
      summary: Price adjusted for splits, spinoffs and dividends.
      value:
        ids:
          - AAPL-US
        startDate: '2019-01-01'
        endDate: '2019-12-31'
        frequency: M
        calendar: FIVEDAY
        currency: LOCAL
        adjust: DIVADJ
    singleSecurityPricesFixedIncome:
      summary: Single Fixed Income Price Record for Apple Inc. 4.65% 23-FEB-2046
      description: Single Fixed Income Price Record for Apple Inc. 4.65% 23-FEB-2046
      value:
        data:
          - fsymId: MCCBMM-S
            date: '2020-07-13'
            securityType: BDNT
            issuerEntityId: 000C7F-E
            issuerType: CORP
            priceBid: 141.212
            priceMid: 141.212
            priceAsk: 141.212
            requestId: 037833BX
    multipleSecurityPricesFixedIncome:
      summary: Multiple Fixed Income Prices for a sample of different Security Types
      description: Multiple Fixed Income Prices for a sample of different Security Types
      value:
        data:
          - fsymId: MCCBMM-S
            date: '2020-07-13'
            securityType: BDNT
            issuerEntityId: 000C7F-E
            issuerType: CORP
            priceBid: 141.212
            priceMid: 141.212
            priceAsk: 141.212
            requestId: 037833BX
          - fsymId: R388JW-S
            date: '2020-07-13'
            securityType: BOND
            issuerEntityId: 0DN2GL-E
            issuerType: MUNI
            priceBid: 100.091
            priceMid: 100.238
            priceAsk: 100.384
            requestId: 853207EZ
          - fsymId: SG86MQ-S
            date: '2020-07-13'
            securityType: BLDN
            issuerEntityId: 05MCSG-E
            issuerType: SOV
            priceBid: 99.847
            priceMid: 99.847
            priceAsk: 99.847
            requestId: 9127963H
    singleFixedOneYearPost:
      summary: >-
        One Year of Daily Fixed Income Prices for Apple Inc. 4.65% 23-FEB-2046
        in Calendar 2019 Year
      description: >-
        One Year of Daily Fixed Income Prices for Apple Inc. 4.65% 23-FEB-2046
        in Calendar 2019 Year
      value:
        ids:
          - 037833BX
        startDate: '2019-01-01'
        endDate: '2019-12-31'
        frequency: D
    multipleFixedPricesPost:
      summary: Latest Daily Fixed Income Prices for three Fixed Income Securities
      description: Latest Daily Fixed Income Prices for three Fixed Income Securities
      value:
        ids:
          - 037833BX
          - 853207EZ
          - 9127963H
        frequency: D
    52WKReturnAAPL:
      summary: Rolling 52W Week Total Return for AAPL-US
      description: >-
        Rolling 52W Total Return for apple as of 2020-06-11. Request URL
        https://api.factset.com/content/factset-prices/v1/returns?ids=AAPL&frequency=D&dividendAdjust=EXDATE_C&rollingPeriod=52W
      value:
        data:
          - fsymId: MH33D6-R
            date: '2020-06-11'
            adjDate: '2014-06-09'
            currency: USD
            totalReturn: 74.47648
            requestId: AAPL
    fangStocksReturn:
      summary: >-
        The latest Month return for FANG Stocks - Facebook, Apple, Netflix,
        Google.
      description: >-
        The latest Month return for FANG Stocks - Facebook, Apple, Netflix,
        Google.
      value:
        data:
          - fsymId: QLGSL2-R
            date: '2020-06-11'
            adjDate: null
            currency: USD
            totalReturn: 5.2772284
            requestId: FB
          - fsymId: MH33D6-R
            date: '2020-06-11'
            adjDate: '2014-06-09'
            currency: USD
            totalReturn: 6.6315293
            requestId: AAPL
          - fsymId: C4C0BL-R
            date: '2020-06-11'
            adjDate: '2015-07-15'
            currency: USD
            totalReturn: -3.3959866
            requestId: NFLX
          - fsymId: HTM0LK-R
            date: '2020-06-11'
            adjDate: '2014-04-03'
            currency: USD
            totalReturn: -0.12040138
            requestId: GOOGL
    dailyReturnsAPPL:
      summary: One Month Daily Returns for AAPL-US During December 2019
      description: >-
        One Month Daily Returns for AAPL-US During December 2019. Note, each
        total Return value is representative of the dates return value with
        dividends reinvested using EXDATE_C
      value:
        data:
          - fsymId: MH33D6-R
            date: '2019-11-29'
            adjDate: '2014-06-09'
            currency: USD
            totalReturn: -0.22028089
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-12-02'
            adjDate: '2014-06-09'
            currency: USD
            totalReturn: -1.1562169
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-12-03'
            adjDate: '2014-06-09'
            currency: USD
            totalReturn: -1.7830074
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-12-04'
            adjDate: '2014-06-09'
            currency: USD
            totalReturn: 0.8826256
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-12-05'
            adjDate: '2014-06-09'
            currency: USD
            totalReturn: 1.4671087
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-12-06'
            adjDate: '2014-06-09'
            currency: USD
            totalReturn: 1.9316196
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-12-09'
            adjDate: '2014-06-09'
            currency: USD
            totalReturn: -1.4000118
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-12-10'
            adjDate: '2014-06-09'
            currency: USD
            totalReturn: 0.5844474
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-12-11'
            adjDate: '2014-06-09'
            currency: USD
            totalReturn: 0.85294247
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-12-12'
            adjDate: '2014-06-09'
            currency: USD
            totalReturn: 0.2548337
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-12-13'
            adjDate: '2014-06-09'
            currency: USD
            totalReturn: 1.3593197
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-12-16'
            adjDate: '2014-06-09'
            currency: USD
            totalReturn: 1.7117858
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-12-17'
            adjDate: '2014-06-09'
            currency: USD
            totalReturn: 0.19652843
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-12-18'
            adjDate: '2014-06-09'
            currency: USD
            totalReturn: -0.2389431
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-12-19'
            adjDate: '2014-06-09'
            currency: USD
            totalReturn: 0.10008812
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-12-20'
            adjDate: '2014-06-09'
            currency: USD
            totalReturn: -0.20712614
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-12-23'
            adjDate: '2014-06-09'
            currency: USD
            totalReturn: 1.6318321
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-12-24'
            adjDate: '2014-06-09'
            currency: USD
            totalReturn: 0.09506941
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-12-25'
            adjDate: '2014-06-09'
            currency: USD
            totalReturn: 0
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-12-26'
            adjDate: '2014-06-09'
            currency: USD
            totalReturn: 1.984036
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-12-27'
            adjDate: '2014-06-09'
            currency: USD
            totalReturn: -0.037950277
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-12-30'
            adjDate: '2014-06-09'
            currency: USD
            totalReturn: 0.5935073
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-12-31'
            adjDate: '2014-06-09'
            currency: USD
            totalReturn: 0.7306576
            requestId: AAPL
    fangStocksReturnPost:
      summary: >-
        Fetch the latest one month returns for the FANG stocks - FB, AAPL, NFLX,
        and GOOGL
      description: >-
        Fetch the latest one month returns for the FANG stocks - FB, AAPL, NFLX,
        and GOOGL
      value:
        ids:
          - FB-US
          - AAPL-US
          - NFLX-US
          - GOOGL-US
        frequency: D
        calendar: FIVEDAY
        currency: LOCAL
        dividendAdjust: EXDATE_C
        rollingPeriod: 1M
    dailyPriceChangeAMZNPost:
      summary: Fetch daily price changes for AAPL for the year 2019
      description: Fetch daily price changes for AAPL for the year 2019
      value:
        ids:
          - AMZN-US
        startDate: '2018-12-31'
        endDate: '2019-12-31'
        frequency: D
        calendar: FIVEDAY
        currency: LOCAL
        dividendAdjust: PRICE
    latestDividends:
      summary: Latest Dividends for AAPL and MSFT
      description: Latest Dividends for AAPL and MSFT
      value:
        data:
          - fsymId: MH33D6-R
            divsExDate: '2020-02-07'
            adjDate: '2014-06-09'
            currency: USD
            divsPaid: 0.77
            divsRecDate: '2020-02-10'
            divsPayDate: '2020-02-13'
            divsTypeC: 1049
            divsTypeD: U.S. Currency
            divsTaxC: null
            divsTaxD: null
            divsNGFlag: null
            divsNGEquiv: 0
            requestId: AAPL
          - fsymId: MH33D6-R
            divsExDate: '2020-05-08'
            adjDate: '2014-06-09'
            currency: USD
            divsPaid: 0.82
            divsRecDate: '2020-05-11'
            divsPayDate: '2020-05-14'
            divsTypeC: 1049
            divsTypeD: U.S. Currency
            divsTaxC: null
            divsTaxD: null
            divsNGFlag: null
            divsNGEquiv: 0
            requestId: AAPL
          - fsymId: P8R3C2-R
            divsExDate: '2020-02-19'
            adjDate: '2003-02-18'
            currency: USD
            divsPaid: 0.51
            divsRecDate: '2020-02-20'
            divsPayDate: '2020-03-12'
            divsTypeC: 1049
            divsTypeD: U.S. Currency
            divsTaxC: null
            divsTaxD: null
            divsNGFlag: null
            divsNGEquiv: 0
            requestId: MSFT
          - fsymId: P8R3C2-R
            divsExDate: '2020-05-20'
            adjDate: '2003-02-18'
            currency: USD
            divsPaid: 0.51
            divsRecDate: '2020-05-21'
            divsPayDate: '2020-06-11'
            divsTypeC: 1049
            divsTypeD: U.S. Currency
            divsTaxC: null
            divsTaxD: null
            divsNGFlag: null
            divsNGEquiv: 0
            requestId: MSFT
    3yrDividendsAPPL:
      summary: Three Years of Dividends for AAPL as of 2019
      description: Three Years of Dividends for AAPL as of 2019
      value:
        data:
          - fsymId: MH33D6-R
            divsExDate: '2017-02-09'
            adjDate: '2014-06-09'
            currency: USD
            divsPaid: 0.57
            divsRecDate: '2017-02-13'
            divsPayDate: '2017-02-16'
            divsTypeC: 1049
            divsTypeD: U.S. Currency
            divsTaxC: null
            divsTaxD: null
            divsNGFlag: null
            divsNGEquiv: 0
            requestId: AAPL
          - fsymId: MH33D6-R
            divsExDate: '2017-05-11'
            adjDate: '2014-06-09'
            currency: USD
            divsPaid: 0.63
            divsRecDate: '2017-05-15'
            divsPayDate: '2017-05-18'
            divsTypeC: 1049
            divsTypeD: U.S. Currency
            divsTaxC: null
            divsTaxD: null
            divsNGFlag: null
            divsNGEquiv: 0
            requestId: AAPL
          - fsymId: MH33D6-R
            divsExDate: '2017-08-10'
            adjDate: '2014-06-09'
            currency: USD
            divsPaid: 0.63
            divsRecDate: '2017-08-14'
            divsPayDate: '2017-08-17'
            divsTypeC: 1049
            divsTypeD: U.S. Currency
            divsTaxC: null
            divsTaxD: null
            divsNGFlag: null
            divsNGEquiv: 0
            requestId: AAPL
          - fsymId: MH33D6-R
            divsExDate: '2017-11-10'
            adjDate: '2014-06-09'
            currency: USD
            divsPaid: 0.63
            divsRecDate: '2017-11-13'
            divsPayDate: '2017-11-16'
            divsTypeC: 1049
            divsTypeD: U.S. Currency
            divsTaxC: null
            divsTaxD: null
            divsNGFlag: null
            divsNGEquiv: 0
            requestId: AAPL
          - fsymId: MH33D6-R
            divsExDate: '2018-02-09'
            adjDate: '2014-06-09'
            currency: USD
            divsPaid: 0.63
            divsRecDate: '2018-02-12'
            divsPayDate: '2018-02-15'
            divsTypeC: 1049
            divsTypeD: U.S. Currency
            divsTaxC: null
            divsTaxD: null
            divsNGFlag: null
            divsNGEquiv: 0
            requestId: AAPL
          - fsymId: MH33D6-R
            divsExDate: '2018-05-11'
            adjDate: '2014-06-09'
            currency: USD
            divsPaid: 0.73
            divsRecDate: '2018-05-14'
            divsPayDate: '2018-05-17'
            divsTypeC: 1049
            divsTypeD: U.S. Currency
            divsTaxC: null
            divsTaxD: null
            divsNGFlag: null
            divsNGEquiv: 0
            requestId: AAPL
          - fsymId: MH33D6-R
            divsExDate: '2018-08-10'
            adjDate: '2014-06-09'
            currency: USD
            divsPaid: 0.73
            divsRecDate: '2018-08-13'
            divsPayDate: '2018-08-16'
            divsTypeC: 1049
            divsTypeD: U.S. Currency
            divsTaxC: null
            divsTaxD: null
            divsNGFlag: null
            divsNGEquiv: 0
            requestId: AAPL
          - fsymId: MH33D6-R
            divsExDate: '2018-11-08'
            adjDate: '2014-06-09'
            currency: USD
            divsPaid: 0.73
            divsRecDate: '2018-11-12'
            divsPayDate: '2018-11-15'
            divsTypeC: 1049
            divsTypeD: U.S. Currency
            divsTaxC: null
            divsTaxD: null
            divsNGFlag: null
            divsNGEquiv: 0
            requestId: AAPL
          - fsymId: MH33D6-R
            divsExDate: '2019-02-08'
            adjDate: '2014-06-09'
            currency: USD
            divsPaid: 0.73
            divsRecDate: '2019-02-11'
            divsPayDate: '2019-02-14'
            divsTypeC: 1049
            divsTypeD: U.S. Currency
            divsTaxC: null
            divsTaxD: null
            divsNGFlag: null
            divsNGEquiv: 0
            requestId: AAPL
          - fsymId: MH33D6-R
            divsExDate: '2019-05-10'
            adjDate: '2014-06-09'
            currency: USD
            divsPaid: 0.77
            divsRecDate: '2019-05-13'
            divsPayDate: '2019-05-16'
            divsTypeC: 1049
            divsTypeD: U.S. Currency
            divsTaxC: null
            divsTaxD: null
            divsNGFlag: null
            divsNGEquiv: 0
            requestId: AAPL
          - fsymId: MH33D6-R
            divsExDate: '2019-08-09'
            adjDate: '2014-06-09'
            currency: USD
            divsPaid: 0.77
            divsRecDate: '2019-08-12'
            divsPayDate: '2019-08-15'
            divsTypeC: 1049
            divsTypeD: U.S. Currency
            divsTaxC: null
            divsTaxD: null
            divsNGFlag: null
            divsNGEquiv: 0
            requestId: AAPL
          - fsymId: MH33D6-R
            divsExDate: '2019-11-07'
            adjDate: '2014-06-09'
            currency: USD
            divsPaid: 0.77
            divsRecDate: '2019-11-11'
            divsPayDate: '2019-11-14'
            divsTypeC: 1049
            divsTypeD: U.S. Currency
            divsTaxC: null
            divsTaxD: null
            divsNGFlag: null
            divsNGEquiv: 0
            requestId: AAPL
    singleSecurityDividends:
      summary: AAPL Dividends in 2019
      description: AAPL Dividends in 2019
      value:
        ids:
          - AAPL-US
        startDate: '2018-12-31'
        endDate: '2019-12-31'
        currency: LOCAL
        adjust: SPLIT
    latestDividendsPost:
      summary: Latest Dividends for AAPL and MSFT
      description: Latest Dividends for AAPL and MSFT
      value:
        ids:
          - AAPL-US
          - MSFT-US
        startDate: ''
        endDate: ''
        currency: LOCAL
        adjust: SPLIT
    singleSecuritySplits:
      summary: Split History for MSFT
      description: Split History for MSFT
      value:
        data:
          - fsymId: P8R3C2-R
            date: '1987-09-21'
            splitFactor: 0.5
            splitComment: null
            requestId: MSFT
          - fsymId: P8R3C2-R
            date: '1990-04-16'
            splitFactor: 0.5
            splitComment: null
            requestId: MSFT
          - fsymId: P8R3C2-R
            date: '1991-06-27'
            splitFactor: 0.6666667
            splitComment: null
            requestId: MSFT
          - fsymId: P8R3C2-R
            date: '1992-06-15'
            splitFactor: 0.6666667
            splitComment: null
            requestId: MSFT
          - fsymId: P8R3C2-R
            date: '1994-05-23'
            splitFactor: 0.5
            splitComment: null
            requestId: MSFT
          - fsymId: P8R3C2-R
            date: '1996-12-09'
            splitFactor: 0.5
            splitComment: null
            requestId: MSFT
          - fsymId: P8R3C2-R
            date: '1998-02-23'
            splitFactor: 0.5
            splitComment: null
            requestId: MSFT
          - fsymId: P8R3C2-R
            date: '1999-03-29'
            splitFactor: 0.5
            splitComment: null
            requestId: MSFT
          - fsymId: P8R3C2-R
            date: '2003-02-18'
            splitFactor: 0.5
            splitComment: 'Split: 2 for 1'
            requestId: MSFT
    multipleSecuritySplits:
      summary: Split History for GOOGL, MSFT, and AMZN
      description: Split History for Multiple Securities - GOOGL, MSFT, AMZN
      value:
        data:
          - fsymId: HTM0LK-R
            date: '2014-04-03'
            splitFactor: 0.500484
            splitComment: 'Split: 2 for 1.000968'
            requestId: GOOGL
          - fsymId: P8R3C2-R
            date: '1987-09-21'
            splitFactor: 0.5
            splitComment: null
            requestId: MSFT
          - fsymId: P8R3C2-R
            date: '1990-04-16'
            splitFactor: 0.5
            splitComment: null
            requestId: MSFT
          - fsymId: P8R3C2-R
            date: '1991-06-27'
            splitFactor: 0.6666667
            splitComment: null
            requestId: MSFT
          - fsymId: P8R3C2-R
            date: '1992-06-15'
            splitFactor: 0.6666667
            splitComment: null
            requestId: MSFT
          - fsymId: P8R3C2-R
            date: '1994-05-23'
            splitFactor: 0.5
            splitComment: null
            requestId: MSFT
          - fsymId: P8R3C2-R
            date: '1996-12-09'
            splitFactor: 0.5
            splitComment: null
            requestId: MSFT
          - fsymId: P8R3C2-R
            date: '1998-02-23'
            splitFactor: 0.5
            splitComment: null
            requestId: MSFT
          - fsymId: P8R3C2-R
            date: '1999-03-29'
            splitFactor: 0.5
            splitComment: null
            requestId: MSFT
          - fsymId: P8R3C2-R
            date: '2003-02-18'
            splitFactor: 0.5
            splitComment: 'Split: 2 for 1'
            requestId: MSFT
          - fsymId: MCNYYL-R
            date: '1998-06-02'
            splitFactor: 0.5
            splitComment: null
            requestId: AMZN
          - fsymId: MCNYYL-R
            date: '1999-01-05'
            splitFactor: 0.33333334
            splitComment: null
            requestId: AMZN
          - fsymId: MCNYYL-R
            date: '1999-09-02'
            splitFactor: 0.5
            splitComment: null
            requestId: AMZN
    splitHistoryMSFTPost:
      summary: Split History Request for MSFT
      description: Split History Request for MSFT
      value:
        ids:
          - MSFT-US
    multipleSplitsHistoryPost:
      summary: Splits History for GOOGL, MSFT, and AMZN
      description: Splits History for GOOGL, MSFT, and AMZN
      value:
        ids:
          - GOOGL-US
          - MSFT-US
          - AMZN-US
    singleSecurityShares:
      summary: One Year of Monthly Share Values for AAPL
      description: Latest Dividends for AAPL and MSFT
      value:
        data:
          - fsymId: MH33D6-R
            date: '2018-12-31'
            adjDate: '2014-06-09'
            sharesSecurity: 4745398000
            sharesCompany: 4745397949.21875
            sharesCompanyNontraded: 4745397949.21875
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-01-31'
            adjDate: '2014-06-09'
            sharesSecurity: 4715280000
            sharesCompany: 4715279785.15625
            sharesCompanyNontraded: 4715279785.15625
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-02-28'
            adjDate: '2014-06-09'
            sharesSecurity: 4715280000
            sharesCompany: 4715279785.15625
            sharesCompanyNontraded: 4715279785.15625
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-03-29'
            adjDate: '2014-06-09'
            sharesSecurity: 4715280000
            sharesCompany: 4715279785.15625
            sharesCompanyNontraded: 4715279785.15625
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-04-30'
            adjDate: '2014-06-09'
            sharesSecurity: 4601075000
            sharesCompany: 4601075195.3125
            sharesCompanyNontraded: 4601075195.3125
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-05-31'
            adjDate: '2014-06-09'
            sharesSecurity: 4601075000
            sharesCompany: 4601075195.3125
            sharesCompanyNontraded: 4601075195.3125
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-06-28'
            adjDate: '2014-06-09'
            sharesSecurity: 4601075000
            sharesCompany: 4601075195.3125
            sharesCompanyNontraded: 4601075195.3125
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-07-31'
            adjDate: '2014-06-09'
            sharesSecurity: 4519180300
            sharesCompany: 4519180175.78125
            sharesCompanyNontraded: 4519180175.78125
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-08-30'
            adjDate: '2014-06-09'
            sharesSecurity: 4519180300
            sharesCompany: 4519180175.78125
            sharesCompanyNontraded: 4519180175.78125
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-09-30'
            adjDate: '2014-06-09'
            sharesSecurity: 4519180300
            sharesCompany: 4519180175.78125
            sharesCompanyNontraded: 4519180175.78125
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-10-31'
            adjDate: '2014-06-09'
            sharesSecurity: 4443265000
            sharesCompany: 4443265136.71875
            sharesCompanyNontraded: 4443265136.71875
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-11-29'
            adjDate: '2014-06-09'
            sharesSecurity: 4443265000
            sharesCompany: 4443265136.71875
            sharesCompanyNontraded: 4443265136.71875
            requestId: AAPL
          - fsymId: MH33D6-R
            date: '2019-12-31'
            adjDate: '2014-06-09'
            sharesSecurity: 4443265000
            sharesCompany: 4443265136.71875
            sharesCompanyNontraded: 4443265136.71875
            requestId: AAPL
    multipleSecuritiesShares:
      summary: >-
        Multiple Security Share Values as of 2019 Year End - FB, AAPL, NFLX,
        GOOGL
      description: Latest Dividends for AAPL and MSFT
      value:
        data:
          - fsymId: QLGSL2-R
            date: '2019-12-31'
            adjDate: null
            sharesSecurity: 2406468000
            sharesCompany: 2406468017.57812
            sharesCompanyNontraded: 2851468017.57812
            requestId: FB
          - fsymId: MH33D6-R
            date: '2019-12-31'
            adjDate: '2014-06-09'
            sharesSecurity: 4443265000
            sharesCompany: 4443265136.71875
            sharesCompanyNontraded: 4443265136.71875
            requestId: AAPL
          - fsymId: C4C0BL-R
            date: '2019-12-31'
            adjDate: '2015-07-15'
            sharesSecurity: 438251000
            sharesCompany: 438251007.080078
            sharesCompanyNontraded: 438251007.080078
            requestId: NFLX
          - fsymId: HTM0LK-R
            date: '2019-12-31'
            adjDate: '2014-04-03'
            sharesSecurity: 299828000
            sharesCompany: 641894012.451172
            sharesCompanyNontraded: 688335012.451172
            requestId: GOOGL
    singleSecuritySharesPost:
      summary: Request Monthly Shares Values for AAPL for 2019 calendar year
      description: Request Monthly Shares Values for AAPL for 2019 calendar year
      value:
        ids:
          - AAPL-US
        startDate: '2018-12-31'
        endDate: '2019-12-31'
        frequency: M
        calendar: FIVEDAY
        splitAdjust: SPLIT
    multipleSecuritiesSharesPost:
      summary: >-
        Request Multiple Security Share Counts as of 2019 year end - FB, AAPL,
        NFLX, GOOGL
      description: >-
        Request Multiple Security Share Counts as of 2019 year end - FB, AAPL,
        NFLX, GOOGL. Note the startDate and endDate must both be equal to the
        single day requested, if one is left blank yesterday's close will be
        used as default.
      value:
        ids:
          - FB-US
          - AAPL-US
          - NFLX-US
          - GOOGL-US
        startDate: '2019-12-31'
        endDate: '2019-12-31'
        frequency: D
        calendar: FIVEDAY
        splitAdjust: SPLIT
    singleMarketValue:
      summary: Single Market Value Record for GOOGL as of July 7 2020
      description: Single Market Value Record for GOOGL
      value:
        data:
          - fsymId: HTM0LK-R
            date: '2020-07-07'
            currency: USD
            entityMarketValue: 1022362841136.31
            entityMarketValueExNotTraded: 952768582453.33
            securityMarketValue: 449970657342.5
            requestId: GOOGL
    multipleMarketValues:
      summary: Multiple Market Value Records for GOOGL and TSLA as of July 7 2020
      description: Multiple Market Value Records for GOOGL and TSLA as of July 7 2020
      value:
        data:
          - fsymId: HTM0LK-R
            date: '2020-07-07'
            currency: USD
            entityMarketValue: 1022362841136.31
            entityMarketValueExNotTraded: 952768582453.33
            securityMarketValue: 449970657342.5
            requestId: GOOGL
          - fsymId: Q2YN1N-R
            date: '2020-07-07'
            currency: USD
            entityMarketValue: 257784946701.1
            entityMarketValueExNotTraded: 257784946701.1
            securityMarketValue: 257784978430
            requestId: TSLA
    singleMarketValuePost:
      summary: Requesting One Year of Daily Market Values for GOOGL Calendar 2019 Year
      description: >-
        Requesting One Year of Daily Market Values for GOOGL in Calendar 2019
        Year
      value:
        ids:
          - GOOGL-US
        startDate: '2019-01-01'
        endDate: '2019-12-31'
        frequency: D
        calendar: FIVEDAY
        currency: USD
    multipleMarketValuePost:
      summary: >-
        Requesting One Year of Market Values on a monthly frequency for GOOGL
        and TSLA Calendar 2019 Year
      description: >-
        Requesting One Year of Market Values on a monthly frequency for GOOGL
        and TSLA in Calendar 2019 Year
      value:
        ids:
          - GOOGL-US
          - TSLA-US
        startDate: '2019-01-01'
        endDate: '2019-12-31'
        frequency: M
        calendar: FIVEDAY
        currency: USD
    singleSecurityReferences:
      summary: Single Security Reference Details
      description: Single Security Reference Details
      value:
        data:
          - fsymId: MH33D6-R
            name: APPLE INC
            secType: Common stock
            secTypeCode: '0'
            secTypeCodeDet: '10'
            currency: USD
            country: UNITED STATES
            primaryExchange: NASDAQ
            exchangeCountry: UNITED STATES
            localIndex: SP50
            nextTradingHolidayDate: '2020-11-26'
            firstDate: '1980-12-12'
            lastDate: '2020-10-13'
            requestId: AAPL-USA
    multipleSecurityReferences:
      summary: Multiple Security Reference Details
      description: Multiple Security Reference Details
      value:
        data:
          - fsymId: SQFMK3-R
            name: FACTSET RESH SYS INC
            secType: Common stock
            secTypeCode: '0'
            secTypeCodeDet: '10'
            currency: USD
            country: UNITED STATES
            primaryExchange: NYSE
            exchangeCountry: UNITED STATES
            localIndex: SP50
            nextTradingHolidayDate: '2020-11-26'
            firstDate: '1996-06-28'
            lastDate: '2020-10-13'
            requestId: FDS-US
          - fsymId: MH33D6-R
            name: APPLE INC
            secType: Common stock
            secTypeCode: '0'
            secTypeCodeDet: '10'
            currency: USD
            country: UNITED STATES
            primaryExchange: NASDAQ
            exchangeCountry: UNITED STATES
            localIndex: SP50
            nextTradingHolidayDate: '2020-11-26'
            firstDate: '1980-12-12'
            lastDate: '2020-10-13'
            requestId: AAPL-US
          - fsymId: P8R3C2-R
            name: MICROSOFT CORP
            secType: Common stock
            secTypeCode: '0'
            secTypeCodeDet: '10'
            currency: USD
            country: UNITED STATES
            primaryExchange: NASDAQ
            exchangeCountry: UNITED STATES
            localIndex: SP50
            nextTradingHolidayDate: '2020-11-26'
            firstDate: '1986-03-13'
            lastDate: '2020-10-13'
            requestId: MSFT-US
    multipleReferencesPost:
      summary: Requesting Multiple Security References
      description: Requesting Multiple Security References
      value:
        ids:
          - GOOGL-US
          - TSLA-US
    singleHighLow:
      summary: Price High and Price Low for a Single Security for 52 week period
      description: Price High and Price Low for a Single Security for 52 week period
      value:
        data:
          - adjDate: '2014-04-03'
            date: '2020-07-07'
            fsymId: HTM0LK-R
            period: 52W
            priceHigh: 1524.87
            priceLow: 1054.13
            priceLowDate: '2020-03-23'
            priceHighDate: '2020-02-19'
            requestId: GOOGL-US
    multipleHighLow:
      summary: Price High and Price Low for Multiple Securities for 52 week period
      description: Price High and Price Low for a Multiple Securities for 52 week period
      value:
        data:
          - adjDate: '2020-08-31'
            date: '2020-03-06'
            fsymId: MH33D6-R
            period: 52W
            priceHigh: 81.8
            priceLow: 43.125
            priceLowDate: '2020-03-27'
            priceHighDate: '2020-02-12'
            requestId: AAPL-US
          - adjDate: '2020-08-31'
            date: '2020-03-06'
            fsymId: Q2YN1N-R
            period: 52W
            priceHigh: 183.48
            priceLow: 35.79
            priceLowDate: '2020-06-03'
            priceHighDate: '2020-02-19'
            requestId: TSLA-US
    singleHighLowPost:
      summary: >-
        Requesting Price High and Price Low for a Single Security for 52 week
        period
      description: Price High and Price Low for a Single Security for 52 week period
      value:
        ids:
          - GOOGL-US
        date: '2020-07-07'
        period: 52W
        priceType: CLOSE
        calendar: FIVEDAY
        currency: USD
        adjust: SPLIT
    multipleHighLowPost:
      summary: >-
        Requesting Price High and Price Low for Multiple Securities for 52 week
        period
      description: Price High and Price Low for Multiple Securities for 52 week period
      value:
        ids:
          - AAPL-US
          - TSLA-US
        date: '2020-07-07'
        period: 52W
        priceType: CLOSE
        calendar: FIVEDAY
        currency: USD
        adjust: SPLIT
    singleRSCompundRT:
      summary: Requesting returns details for single company with compound return type.
      description: >-
        Returns result for the given ticker price performance and annualized
        returns analysis with compound return type.
      value:
        ids:
          - GOOGL-US
        date: '2020-10-09'
        dividendAdjust: EXDATE_C
        calendar: FIVEDAY
        currency: USD
    multipleRSSimpleRT:
      summary: >-
        Requesting returns details for Multiple companies with simple return
        type.
      description: >-
        Returns result for the given tickers price performance and annualized
        returns analysis with simple return type.
      value:
        ids:
          - GOOGL-US
          - IBM-US
        date: '2020-10-09'
        dividendAdjust: EXDATE
        calendar: FIVEDAY
        currency: USD
    singleRSCompundRTResponse:
      summary: Requesting returns details for single company with compound return type.
      description: >-
        Returns result for the given ticker price performance and annualized
        returns analysis with compound return type.
      value:
        data:
          - currency: USD
            date: '2020-09-10'
            dividendAdjust: EXDATE_C
            fiveYearAnnualized: 18.892164
            fsymId: HTM0LK-R
            ipoToDateAnnualized: 23.792849
            monthToDate: -5.05054
            nineMonth: 15.2164345
            oneDay: 0
            oneMonth: 3.3678055
            oneYear: 28.326284
            quarterToDate: 9.109688
            sixMonth: 21.335184
            tenYearAnnualized: 20.567951
            thirtyYearAnnualized: null
            threeMonth: 5.634606
            threeYearAnnualized: 17.971731
            twentyYearAnnualized: null
            twoYearAnnualized: 14.737806
            weekToDate: -2.1489859
            yearToDate: 15.517509
            requestId: GOOGL-US
    multipleRSSimpleRTResponse:
      summary: >-
        Requesting returns details for multiple companies with simple return
        type.
      description: >-
        Returns result for the given tickers returns and annualized returns
        analysis with simple return type.
      value:
        data:
          - currency: USD
            date: '2020-09-10'
            dividendAdjust: EXDATE
            fiveYearAnnualized: 18.892164
            fsymId: HTM0LK-R
            ipoToDateAnnualized: 23.792849
            monthToDate: -5.05054
            nineMonth: 15.2164345
            oneDay: 0
            oneMonth: 3.3678055
            oneYear: 28.326284
            quarterToDate: 9.109688
            requestId: GOOGL-US
            sixMonth: 21.335184
            tenYearAnnualized: 20.567951
            thirtyYearAnnualized: null
            threeMonth: 5.634606
            threeYearAnnualized: 17.971731
            twentyYearAnnualized: null
            twoYearAnnualized: 14.737806
            weekToDate: -2.1489859
            yearToDate: 15.517509
          - currency: USD
            date: '2020-09-10'
            dividendAdjust: EXDATE
            fiveYearAnnualized: 0.68179286
            fsymId: SJY281-R
            ipoToDateAnnualized: 6.5760174
            monthToDate: -0.851506
            nineMonth: -5.0556364
            oneDay: 0
            oneMonth: -3.8155913
            oneYear: -11.230612
            quarterToDate: 2.5834322
            requestId: IBM-US
            sixMonth: 0.60111284
            tenYearAnnualized: 2.7469
            thirtyYearAnnualized: 7.513745
            threeMonth: -4.604602
            threeYearAnnualized: -0.49068186
            twentyYearAnnualized: 1.8993893
            twoYearAnnualized: -3.8598573
            weekToDate: -0.03270507
            yearToDate: -5.1477075
    BatchPricesRequestPost:
      summary: Batch Request for Prices for APPL and Tesla.
      description: Batch Request for Prices for APPL and Tesla.
      value:
        ids:
          - AAPL-US
          - TSLA-US
        startDate: '2019-01-01'
        endDate: '2019-12-31'
        frequency: D
        calendar: FIVEDAY
        currency: LOCAL
        adjust: SPLIT
        batch: 'Y'
    BatchStatusAcceptedResponse:
      description: Batch Status Accepted Response
      value:
        data:
          id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c
          status: QUEUED
          startTime: '2021-06-29T18:34:52.168Z'
          endTime: null
          error: null
    BatchDataRequest:
      description: Batch Data Request
      value:
        id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c
    BatchStatusRequest:
      description: Batch Status Request
      value:
        id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c
    BatchStatusQueuedResponse:
      description: Batch Status Queued Response
      value:
        data:
          id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c
          status: QUEUED
          startTime: '2021-06-29T18:34:52.168Z'
          endTime: null
          error: null
    BatchStatusExecutingResponse:
      description: Batch Status Executing Response
      value:
        data:
          id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c
          status: EXECUTING
          startTime: '2021-06-29T18:34:52.168Z'
          endTime: null
          error: null
    BatchStatusDoneResponse:
      description: Batch Status Done Response
      value:
        data:
          id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c
          status: DONE
          startTime: '2021-06-29T18:34:52.168Z'
          endTime: '2021-06-29T18:34:55.402Z'
          error: null
    BatchStatusFailedResponse:
      description: Batch Status Failed Response
      value:
        data:
          id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c
          status: FAILED
          startTime: '2021-06-29T18:34:52.168Z'
          endTime: '2021-06-29T18:34:55.402Z'
          error: Invalid format for startDate
    notFound:
      summary: Not Found
      description: The requested item was not found.
      value:
        status: Not Found
        timestamp: '2020-06-12T16:08:51.731Z'
        path: /batch/v1/status
        message: The Batch Request was not found. It has probably expired.
        subErrors: null
    badRequestDateFormat:
      summary: Bad Request - Date Format
      description: >-
        This bad request occurs when a request doesn't use the YYYY-MM-DD in the
        date parameters. To resolve, convert your date to YYYY-MM-DD.
      value:
        status: Bad Request
        timestamp: '2019-10-31 16:08:07.945'
        path: /factset-prices/v1/{endpoint}
        message: >-
          The date parameter 'startDate' must be in the following date format:
          YYYY-MM-DD
        subErrors: null
    badRequestRequiredParameter:
      summary: Bad Request - Required Parameter Missing
      description: >-
        This error message occurs when the request does not include the required
        parameters. Required parameters are indicated with a red asterisks
        symbol in the specification file.
      value:
        status: Bad Request
        timestamp: '2020-06-12 15:48:42.016'
        path: /factset-prices/v1/{endpoint}
        message: The parameter 'ids' is required and may not be empty.
        subErrors: null
    badRequestFutureDate:
      summary: Bad Request - Future Date
      description: >-
        This error message occurs when a future date is requested in the
        startDate and endDate parameters. Please revise your request to include
        dates as of today's current date or any prior historical date.
      value:
        status: Bad Request
        timestamp: '2020-06-12 15:52:48.091'
        path: /factset-prices/v1/{endpoint}
        message: >-
          The use of future dates is not applicable in this endpoint. Please
          revise your request to include dates up to today's current date.
        subErrors: null
    badRequestInvalidParameters:
      summary: Bad Request - Invalid Parameters
      description: >-
        This error message occurs when a request parameter is used in which is
        not recognized by the service. Please revise your request to include
        only the parameters listed in the specification. Typical causes are
        spelling mistakes and use of improper casing.
      value:
        status: Bad Request
        timestamp: '2020-06-12 15:58:54.068'
        path: /factset-prices/v1/{endpoint}
        message: >-
          Invalid Parameter (s): fakeParameterName1 fakeParameterName2. Please
          modify your request to use parameters outlined in the specification
          for this endpoint.
        subErrors: null
    badRequestMalformedJSON:
      summary: Bad Request - Malformed JSON Request
      description: >-
        This error may be returned when the request body is specified as JSON,
        but is not in proper JSON format.
      value:
        status: Bad Request
        timestamp: '2019-11-05 09:48:29.18'
        path: /factset-prices/v1/{endpoint}
        message: Malformed JSON Request
        subErrors: null
    badRequestReadTimeout:
      summary: Bad Request - Read Timeout
      description: >-
        This error may be returned if it takes more than 29 seconds to hear back
        from the data fetch service.
      value:
        status: Bad Request
        timestamp: '2019-11-04 16:18:38.949'
        path: /factset-prices/v1/{endpoint}
        message: The request took too long. Try again with a smaller request.
        subErrors: null
    unauthenticated:
      summary: User Authentication Failed
      description: >-
        This occurs when a user is not properly authenticated or recognized by
        the service. Please double check the USERNAME-SERIAL and API-Key used to
        request and ensure you are within the IP range specified for the Key.
        Report Issue under 401 error for help with troubleshooting.
      value:
        status: User Authentication Failed
        timestamp: '2019-10-31 16:08:07.945'
        path: /factset-prices/v1/{endpoint}
        message: User Authentication Failed.
        subErrors: null
    forbidden:
      summary: Forbidden
      description: >-
        The USERNAME-SERIAL attempted to request the endpoint is not authorized
        to access. The request was a legal request, but the server is refusing
        to respond. Please reach out to FactSet Account Team for assistance with
        authorization.
      value:
        status: Forbidden
        timestamp: '2020-06-12 16:08:51.731'
        path: /factset-prices/v1/{endpoint}
        message: >-
          USERNAME-SERIAL does not have permission to use
          /factset-prices/v1/{endpoint}
        subErrors: null
    unsupportedMediaType:
      summary: Unsupported Media Type
      description: >-
        This bad request occurs when the media type passed in the request is not
        supported. Currently the APIs only support 'application/json'.
      value:
        status: Unsupported Media Type
        timestamp: '2019-11-05 09:42:27.237'
        path: /factset-prices/v1/{endpoint}
        message: >-
          text/html media type is not supported. Supported media types are
          application/json
        subErrors: null
    notWritable:
      summary: Internal Server Error - Not Writable
      description: >-
        This error may be returned when the server encounters an error writing
        the JSON response.
      value:
        status: Internal Server Error
        timestamp: '2019-11-05 09:48:29.18'
        path: /factset-prices/v1/{endpoint}
        message: Error writing JSON output
        subErrors: null
    generalException:
      summary: Internal Server Error - General Exception
      description: >-
        This is the most general error that can be returned to by the service.
        Please `Report Issue` to FactSet.
      value:
        status: Internal Server Error
        timestamp: '2019-11-01 10:36:01.944'
        path: /factset-prices/v1/{endpoint}
        message: Unexpected error
        subErrors: null
