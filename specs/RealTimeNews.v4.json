{
  "openapi": "3.0.0",
  "info": {
    "version": "4.0.0",
    "title": "Real-Time News API",
    "description": "Consume FactSetâ€™s StreetAccount news and 3rd party content through an API that seamlessly integrates with\n[quotes](https://developer.factset.com/api-catalog/real-time-quotes-api),\n[time series](https://developer.factset.com/api-catalog/real-time-time-series-api),\n[watchlists](https://developer.factset.com/api-catalog/watchlist-api-digital-portals), and other Functional APIs.\n\nSearch for news articles from various news distributors and publishers. Incorporate a multitude of search parameters such as region, category, source, article type and provider-specific meta data, to easily filter out the noise.\n\nAll search and list endpoints can be subscribed to receive streamed updates.\n\nNews providers include:\n\n* APA\n* AWP \n* Businesswire\n* Cercle Finance\n* Direkt News SE\n* Dow Jones News\n* dpa\n* dpa-AFX \n* EUWAX\n* GlobenewsWire\n* Kauppalehti\n* MT Newswires\n* MoneyAM\n* newsaktuell\n* OMX\n* PR Newswire \n* Ritzau Finans\n* StreetAccount News\n* TDN News\n      \nSee the [Real-Time Quotes API](https://developer.factset.com/api-catalog/real-time-quotes-api) for access to detailed\nprice and performance information, plus basic support for security identifier cross-reference.\n",
    "contact": {
      "name": "FactSet Research Systems",
      "url": "https://developer.factset.com/contact",
      "email": "api@factset.com"
    },
    "license": {
      "name": "Apache License, Version 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "servers": [
    {
      "url": "https://api.factset.com/wealth/v4"
    }
  ],
  "paths": {
    "/basic/asset-class/list": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "getBasicAssetClassList",
        "description": "List of asset classes as defined by FactSet Digital Solutions.",
        "summary": "List of asset classes.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetBasicAssetClassList200Response"
          }
        },
        "parameters": [
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          }
        ]
      }
    },
    "/basic/background-text/type/list": {
      "post": {
        "tags": [
          "basic"
        ],
        "operationId": "postBasicBackgroundTextTypeList",
        "summary": "List of background text types.",
        "description": "List of background text types.",
        "requestBody": {
          "description": "Request Body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostBasicBackgroundTextTypeListRequest"
              },
              "example": {
                "data": {
                  "filter": {
                    "ids": [
                      5
                    ]
                  }
                },
                "meta": {
                  "attributes": []
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PostBasicBackgroundTextTypeList200Response"
          }
        },
        "parameters": []
      }
    },
    "/basic/benchmark/type/list": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "getBasicBenchmarkTypeList",
        "summary": "List of benchmark types.",
        "description": "List of benchmark types.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetBasicBenchmarkTypeList200Response"
          }
        },
        "parameters": [
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "metaLanguage",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "ISO 639-1 code of the language.",
              "maxLength": 2,
              "minLength": 2,
              "example": "en"
            },
            "description": "ISO 639-1 code of the language.",
            "example": "en"
          }
        ]
      }
    },
    "/basic/delivery/list": {
      "post": {
        "tags": [
          "basic"
        ],
        "operationId": "postBasicDeliveryList",
        "summary": "List of deliveries.",
        "description": "List of deliveries.",
        "requestBody": {
          "description": "Request Body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostBasicDeliveryListRequest"
              },
              "example": {
                "data": {
                  "filter": {
                    "ids": [
                      1
                    ]
                  }
                },
                "meta": {
                  "attributes": [],
                  "sort": [
                    "name"
                  ]
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PostBasicDeliveryList200Response"
          }
        },
        "parameters": []
      }
    },
    "/basic/frequency/type/list": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "getBasicFrequencyTypeList",
        "summary": "List of frequency types.",
        "description": "List of frequency types.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetBasicFrequencyTypeList200Response"
          }
        },
        "parameters": [
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "metaLanguage",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "ISO 639-1 code of the language.",
              "maxLength": 2,
              "minLength": 2,
              "example": "de"
            },
            "description": "ISO 639-1 code of the language.",
            "example": "de"
          }
        ]
      }
    },
    "/basic/language/get": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "getBasicLanguageGet",
        "description": "Details for a language.",
        "summary": "Details for a language.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "id32",
              "description": "Identifier of a language.",
              "example": 2
            },
            "required": true,
            "description": "Identifier of a language.",
            "example": 2
          },
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "metaLanguage",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "ISO 639-1 code of the language.",
              "maxLength": 2,
              "minLength": 2,
              "example": "en"
            },
            "description": "ISO 639-1 code of the language.",
            "example": "en"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetBasicLanguageGet200Response"
          }
        }
      }
    },
    "/basic/language/get-by-code": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "getBasicLanguageGetByCode",
        "description": "Details for a language identified by code.",
        "summary": "Details for a language identified by code.",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "schema": {
              "type": "string",
              "maxLength": 2,
              "description": "ISO 639-1 code of the language.",
              "example": "de"
            },
            "required": true,
            "description": "ISO 639-1 code of the language.",
            "example": "de"
          },
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "metaLanguage",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "ISO 639-1 code of the language.",
              "maxLength": 2,
              "minLength": 2,
              "example": "de"
            },
            "description": "ISO 639-1 code of the language.",
            "example": "de"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetBasicLanguageGetByCode200Response"
          }
        }
      }
    },
    "/basic/language/list": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "getBasicLanguageList",
        "description": "List of languages.",
        "summary": "List of languages.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetBasicLanguageList200Response"
          }
        },
        "parameters": [
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "metaLanguage",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "ISO 639-1 code of the language.",
              "maxLength": 2,
              "minLength": 2,
              "example": "de"
            },
            "description": "ISO 639-1 code of the language.",
            "example": "de"
          },
          {
            "description": "Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 2 (possibly prefixed) attribute name(s) is allowed.\n| Value |\n| --- |\n| code |\n| -code |\n| name |\n| -name |\n\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "code",
                  "-code",
                  "name",
                  "-name"
                ],
                "example": "-code"
              },
              "maxItems": 2,
              "uniqueItems": true,
              "default": [
                "name"
              ]
            },
            "style": "form",
            "explode": false,
            "name": "_sort",
            "in": "query"
          }
        ]
      }
    },
    "/basic/market/get": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "getBasicMarketGet",
        "description": "Details of a market.",
        "summary": "Details of a market.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "id32",
              "description": "Identifier of a market.",
              "example": 2
            },
            "required": true,
            "description": "Identifier of a market.",
            "example": 2
          },
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "metaLanguage",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "ISO 639-1 code of the language.",
              "maxLength": 2,
              "minLength": 2,
              "example": "en"
            },
            "description": "ISO 639-1 code of the language.",
            "example": "en"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetBasicMarketGet200Response"
          }
        }
      }
    },
    "/basic/market/list": {
      "post": {
        "tags": [
          "basic"
        ],
        "operationId": "postBasicMarketList",
        "description": "List of markets.",
        "summary": "List of markets.",
        "requestBody": {
          "description": "Request Body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostBasicMarketListRequest"
              },
              "example": {
                "data": {
                  "filter": {
                    "markets": {
                      "ids": [
                        5
                      ]
                    },
                    "onlyActive": true
                  }
                },
                "meta": {
                  "attributes": [],
                  "language": "en",
                  "sort": [
                    "-shortName"
                  ],
                  "pagination": {
                    "offset": 0,
                    "limit": 20
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PostBasicMarketList200Response"
          }
        },
        "parameters": []
      }
    },
    "/basic/market/group/list": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "getBasicMarketGroupList",
        "description": "List of market groups.",
        "summary": "List of market groups.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetBasicMarketGroupList200Response"
          }
        },
        "parameters": [
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "metaLanguage",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "ISO 639-1 code of the language.",
              "maxLength": 2,
              "minLength": 2,
              "example": "de"
            },
            "description": "ISO 639-1 code of the language.",
            "example": "de"
          },
          {
            "description": "Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 2 (possibly prefixed) attribute name(s) is allowed.\n| Value |\n| --- |\n| name |\n| -name |\n| shortName |\n| -shortName |\n\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "-name",
                  "shortName",
                  "-shortName"
                ],
                "example": "shortName"
              },
              "maxItems": 2,
              "uniqueItems": true,
              "default": [
                "name"
              ]
            },
            "style": "form",
            "explode": false,
            "name": "_sort",
            "in": "query"
          }
        ]
      }
    },
    "/basic/market/type/list": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "getBasicMarketTypeList",
        "description": "List of market types.",
        "summary": "List of market types.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetBasicMarketTypeList200Response"
          }
        },
        "parameters": [
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "metaLanguage",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "ISO 639-1 code of the language.",
              "maxLength": 2,
              "minLength": 2,
              "example": "de"
            },
            "description": "ISO 639-1 code of the language.",
            "example": "de"
          },
          {
            "description": "Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 1 (possibly prefixed) attribute name(s) is allowed.\n| Value |\n| --- |\n| name |\n| -name |\n\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "-name"
                ],
                "example": "name"
              },
              "maxItems": 1,
              "uniqueItems": true,
              "default": [
                "name"
              ]
            },
            "style": "form",
            "explode": false,
            "name": "_sort",
            "in": "query"
          }
        ]
      }
    },
    "/basic/media/kind/list": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "getBasicMediaKindList",
        "summary": "List of media kinds.",
        "description": "List of media kinds.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetBasicMediaKindList200Response"
          }
        },
        "parameters": [
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          }
        ]
      }
    },
    "/basic/media/type/list": {
      "post": {
        "tags": [
          "basic"
        ],
        "operationId": "postBasicMediaTypeList",
        "description": "List of Internet media types. See http://www.iana.org/assignments/media-types/ for further details. Not all such Internet media types are available on the MDG.",
        "summary": "List of Internet media types.",
        "requestBody": {
          "description": "Request Body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostBasicMediaTypeListRequest"
              },
              "example": {
                "data": {
                  "filter": {
                    "ids": [
                      1
                    ]
                  }
                },
                "meta": {
                  "attributes": [],
                  "sort": [
                    "name"
                  ]
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PostBasicMediaTypeList200Response"
          }
        },
        "parameters": []
      }
    },
    "/basic/mic/operating/list": {
      "post": {
        "tags": [
          "basic"
        ],
        "operationId": "postBasicMicOperatingList",
        "summary": "List of operating market identifier codes (MIC).",
        "description": "List of operating market identifier codes (MIC).",
        "requestBody": {
          "description": "Request Body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostBasicMicOperatingListRequest"
              },
              "example": {
                "data": {
                  "filter": {
                    "status": "active"
                  }
                },
                "meta": {
                  "attributes": [],
                  "sort": [
                    "-name"
                  ],
                  "pagination": {
                    "offset": 0,
                    "limit": 20
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PostBasicMicOperatingList200Response"
          }
        },
        "parameters": []
      }
    },
    "/basic/region/get": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "getBasicRegionGet",
        "summary": "Details for a region.",
        "description": "Details for a geographic, political, or economic region.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "id32",
              "description": "Identifier of a region.",
              "example": 5
            },
            "required": true,
            "description": "Identifier of a region.",
            "example": 5
          },
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "metaLanguage",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "ISO 639-1 code of the language.",
              "maxLength": 2,
              "minLength": 2,
              "example": "de"
            },
            "description": "ISO 639-1 code of the language.",
            "example": "de"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetBasicRegionGet200Response"
          }
        }
      }
    },
    "/basic/region/list": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "getBasicRegionList",
        "summary": "List of regions.",
        "description": "List of geographic, political, and economic regions.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetBasicRegionList200Response"
          }
        },
        "parameters": [
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "metaLanguage",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "ISO 639-1 code of the language.",
              "maxLength": 2,
              "minLength": 2,
              "example": "en"
            },
            "description": "ISO 639-1 code of the language.",
            "example": "en"
          },
          {
            "description": "Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 2 (possibly prefixed) attribute name(s) is allowed.\n| Value |\n| --- |\n| code |\n| -code |\n| name |\n| -name |\n\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "code",
                  "-code",
                  "name",
                  "-name"
                ],
                "example": "name"
              },
              "maxItems": 2,
              "uniqueItems": true,
              "default": [
                "name"
              ]
            },
            "style": "form",
            "explode": false,
            "name": "_sort",
            "in": "query"
          }
        ]
      }
    },
    "/basic/region/continent/get": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "getBasicRegionContinentGet",
        "summary": "Details for a continent.",
        "description": "Details for a continent.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "id32",
              "description": "Identifier of a continent.",
              "example": 1
            },
            "required": true,
            "description": "Identifier of a continent.",
            "example": 1
          },
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "metaLanguage",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "ISO 639-1 code of the language.",
              "maxLength": 2,
              "minLength": 2,
              "example": "en"
            },
            "description": "ISO 639-1 code of the language.",
            "example": "en"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetBasicRegionContinentGet200Response"
          }
        }
      }
    },
    "/basic/region/continent/list": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "getBasicRegionContinentList",
        "summary": "List of continents.",
        "description": "List of continents.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetBasicRegionContinentList200Response"
          }
        },
        "parameters": [
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "metaLanguage",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "ISO 639-1 code of the language.",
              "maxLength": 2,
              "minLength": 2,
              "example": "de"
            },
            "description": "ISO 639-1 code of the language.",
            "example": "de"
          },
          {
            "description": "Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 1 (possibly prefixed) attribute name(s) is allowed.\n| Value |\n| --- |\n| name |\n| -name |\n\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "-name"
                ],
                "example": "-name"
              },
              "maxItems": 1,
              "uniqueItems": true,
              "default": [
                "name"
              ]
            },
            "style": "form",
            "explode": false,
            "name": "_sort",
            "in": "query"
          }
        ]
      }
    },
    "/basic/region/country/get": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "getBasicRegionCountryGet",
        "summary": "Details for a country.",
        "description": "Details for a country.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "id32",
              "description": "Identifier of a country.",
              "example": 4
            },
            "required": true,
            "description": "Identifier of a country.",
            "example": 4
          },
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "metaLanguage",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "ISO 639-1 code of the language.",
              "maxLength": 2,
              "minLength": 2,
              "example": "de"
            },
            "description": "ISO 639-1 code of the language.",
            "example": "de"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetBasicRegionCountryGet200Response"
          }
        }
      }
    },
    "/basic/region/country/get-by-code": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "getBasicRegionCountryGetByCode",
        "summary": "Details for a country identified by code.",
        "description": "Details for a country identified by code.",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "schema": {
              "type": "string",
              "maxLength": 2,
              "description": "ISO 3166-1 alpha-2 code of a country.",
              "example": "DE"
            },
            "required": true,
            "description": "ISO 3166-1 alpha-2 code of a country.",
            "example": "DE"
          },
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "metaLanguage",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "ISO 639-1 code of the language.",
              "maxLength": 2,
              "minLength": 2,
              "example": "en"
            },
            "description": "ISO 639-1 code of the language.",
            "example": "en"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetBasicRegionCountryGetByCode200Response"
          }
        }
      }
    },
    "/basic/region/country/list": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "getBasicRegionCountryList",
        "summary": "List of countries.",
        "description": "List of countries.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetBasicRegionCountryList200Response"
          }
        },
        "parameters": [
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "metaLanguage",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "ISO 639-1 code of the language.",
              "maxLength": 2,
              "minLength": 2,
              "example": "de"
            },
            "description": "ISO 639-1 code of the language.",
            "example": "de"
          },
          {
            "description": "Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 2 (possibly prefixed) attribute name(s) is allowed.\n| Value |\n| --- |\n| code |\n| -code |\n| name |\n| -name |\n\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "code",
                  "-code",
                  "name",
                  "-name"
                ],
                "example": "name"
              },
              "maxItems": 2,
              "uniqueItems": true,
              "default": [
                "name"
              ]
            },
            "style": "form",
            "explode": false,
            "name": "_sort",
            "in": "query"
          }
        ]
      }
    },
    "/basic/timezone/get": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "getBasicTimezoneGet",
        "description": "Details of a timezone identified by id, as specified by the Internet Assigned Numbers Authority. See http://www.iana.org/time-zones for further details. Not all such timezones are available on the MDG.",
        "summary": "Details of a timezone.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "id32",
              "description": "Identifier of a timezone. An invalid or unsupported identifier will result in an error.",
              "example": 1
            },
            "required": true,
            "description": "Identifier of a timezone. An invalid or unsupported identifier will result in an error.",
            "example": 1
          },
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetBasicTimezoneGet200Response"
          }
        }
      }
    },
    "/basic/timezone/get-by-name": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "getBasicTimezoneGetByName",
        "description": "Details of a timezone identified by name, as specified by the Internet Assigned Numbers Authority. See http://www.iana.org/time-zones for further details. Not all such timezones are available on the MDG.",
        "summary": "Details of a timezone identified by name.",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[A-Za-z_/-]+$",
              "minLength": 1,
              "maxLength": 100,
              "description": "Name of a timezone. The result is determined by a case-sensitive equality comparison with the stored timezone names. An invalid or unsupported name will result in an error.",
              "example": "America/New_York"
            },
            "required": true,
            "description": "Name of a timezone. The result is determined by a case-sensitive equality comparison with the stored timezone names. An invalid or unsupported name will result in an error.",
            "example": "America/New_York"
          },
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetBasicTimezoneGetByName200Response"
          }
        }
      }
    },
    "/basic/timezone/list": {
      "post": {
        "tags": [
          "basic"
        ],
        "operationId": "postBasicTimezoneList",
        "description": "List of timezones identified by id, as specified by the Internet Assigned Numbers Authority. See http://www.iana.org/time-zones for further details. Not all such timezones are available on the MDG.",
        "summary": "List of timezones.",
        "requestBody": {
          "description": "Request Body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostBasicTimezoneListRequest"
              },
              "example": {
                "data": {
                  "filter": {
                    "ids": [
                      3
                    ]
                  }
                },
                "meta": {
                  "attributes": []
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PostBasicTimezoneList200Response"
          }
        },
        "parameters": []
      }
    },
    "/basic/value-unit/get": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "getBasicValueUnitGet",
        "summary": "Details of a value unit.",
        "description": "Details of a value unit.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "id32",
              "description": "Identifier of a value unit.",
              "example": 5
            },
            "required": true,
            "description": "Identifier of a value unit.",
            "example": 5
          },
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "metaLanguage",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "ISO 639-1 code of the language.",
              "maxLength": 2,
              "minLength": 2,
              "example": "de"
            },
            "description": "ISO 639-1 code of the language.",
            "example": "de"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetBasicValueUnitGet200Response"
          }
        }
      }
    },
    "/basic/value-unit/list": {
      "post": {
        "tags": [
          "basic"
        ],
        "operationId": "postBasicValueUnitList",
        "summary": "List of value units.",
        "description": "List of value units.",
        "requestBody": {
          "description": "Request Body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostBasicValueUnitListRequest"
              },
              "example": {
                "data": {
                  "filter": {
                    "status": "active"
                  }
                },
                "meta": {
                  "attributes": [],
                  "language": "en",
                  "sort": [
                    "name"
                  ]
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PostBasicValueUnitList200Response"
          }
        },
        "parameters": []
      }
    },
    "/basic/value-unit/alternative/list": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "getBasicValueUnitAlternativeList",
        "description": "List of alternative units.",
        "summary": "List of alternative units.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetBasicValueUnitAlternativeList200Response"
          }
        },
        "parameters": [
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "metaLanguage",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "ISO 639-1 code of the language.",
              "maxLength": 2,
              "minLength": 2,
              "example": "de"
            },
            "description": "ISO 639-1 code of the language.",
            "example": "de"
          },
          {
            "description": "Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 1 (possibly prefixed) attribute name(s) is allowed.\n| Value |\n| --- |\n| name |\n| -name |\n\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "-name"
                ],
                "example": "-name"
              },
              "maxItems": 1,
              "uniqueItems": true,
              "default": [
                "name"
              ]
            },
            "style": "form",
            "explode": false,
            "name": "_sort",
            "in": "query"
          }
        ]
      }
    },
    "/basic/value-unit/currency/list": {
      "post": {
        "tags": [
          "basic"
        ],
        "operationId": "postBasicValueUnitCurrencyList",
        "summary": "List of currencies.",
        "description": "List of currencies.",
        "requestBody": {
          "description": "Request Body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostBasicValueUnitCurrencyListRequest"
              },
              "example": {
                "data": {
                  "filter": {
                    "status": "active"
                  }
                },
                "meta": {
                  "attributes": [],
                  "language": "en",
                  "sort": [
                    "-name"
                  ]
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PostBasicValueUnitCurrencyList200Response"
          }
        },
        "parameters": []
      }
    },
    "/basic/value-unit/currency/fractional/get": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "getBasicValueUnitCurrencyFractionalGet",
        "summary": "Details of a fractional currency.",
        "description": "Details of a fractional currency.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "id32",
              "description": "Identifier of a fractional currency.",
              "example": 1
            },
            "required": true,
            "description": "Identifier of a fractional currency.",
            "example": 1
          },
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "metaLanguage",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "ISO 639-1 code of the language.",
              "maxLength": 2,
              "minLength": 2,
              "example": "en"
            },
            "description": "ISO 639-1 code of the language.",
            "example": "en"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetBasicValueUnitCurrencyFractionalGet200Response"
          }
        }
      }
    },
    "/basic/value-unit/currency/fractional/list": {
      "get": {
        "tags": [
          "basic"
        ],
        "operationId": "getBasicValueUnitCurrencyFractionalList",
        "summary": "List of fractional currencies.",
        "description": "List of fractional currencies.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetBasicValueUnitCurrencyFractionalList200Response"
          }
        },
        "parameters": [
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "metaLanguage",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "ISO 639-1 code of the language.",
              "maxLength": 2,
              "minLength": 2,
              "example": "en"
            },
            "description": "ISO 639-1 code of the language.",
            "example": "en"
          },
          {
            "description": "Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 1 (possibly prefixed) attribute name(s) is allowed.\n| Value |\n| --- |\n| name |\n| -name |\n\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "-name"
                ],
                "example": "name"
              },
              "maxItems": 1,
              "uniqueItems": true,
              "default": [
                "name"
              ]
            },
            "style": "form",
            "explode": false,
            "name": "_sort",
            "in": "query"
          }
        ]
      }
    },
    "/basic/value-unit/currency/main/list": {
      "post": {
        "tags": [
          "basic"
        ],
        "operationId": "postBasicValueUnitCurrencyMainList",
        "summary": "List of main currencies.",
        "description": "List of main currencies.",
        "requestBody": {
          "description": "Request Body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostBasicValueUnitCurrencyMainListRequest"
              },
              "example": {
                "data": {
                  "filter": {
                    "status": "active"
                  }
                },
                "meta": {
                  "attributes": [],
                  "language": "en",
                  "sort": [
                    "-name"
                  ]
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PostBasicValueUnitCurrencyMainList200Response"
          }
        },
        "parameters": []
      }
    },
    "/category/get": {
      "get": {
        "tags": [
          "category"
        ],
        "operationId": "getCategoryGet",
        "summary": "Details of a category.",
        "description": "Details of a category.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "id32",
              "description": "Identifier of a category.",
              "example": 4
            },
            "required": true,
            "description": "Identifier of a category.",
            "example": 4
          },
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "metaLanguage",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "ISO 639-1 code of the language.",
              "maxLength": 2,
              "minLength": 2,
              "example": "de"
            },
            "description": "ISO 639-1 code of the language.",
            "example": "de"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetCategoryGet200Response"
          }
        }
      }
    },
    "/category/list": {
      "get": {
        "tags": [
          "category"
        ],
        "operationId": "getCategoryList",
        "summary": "List of categories.",
        "description": "List of categories.",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "type": "number",
                "format": "id32",
                "example": 1
              },
              "description": "List of categories belonging to the same category system.",
              "uniqueItems": true,
              "minItems": 1,
              "maxItems": 100
            },
            "style": "form",
            "explode": false,
            "required": true,
            "description": "List of categories belonging to the same category system.",
            "example": [
              1
            ]
          },
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "metaLanguage",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "ISO 639-1 code of the language.",
              "maxLength": 2,
              "minLength": 2,
              "example": "de"
            },
            "description": "ISO 639-1 code of the language.",
            "example": "de"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetCategoryList200Response"
          }
        }
      }
    },
    "/category/list-by-level": {
      "get": {
        "tags": [
          "category"
        ],
        "operationId": "getCategoryListByLevel",
        "summary": "List of categories assigned to a category level.",
        "description": "List of categories assigned to a category level.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "id32",
              "description": "Identifier of a category level. See attribute `levels` in endpoint `/category/system/get` for valid values.",
              "example": 2
            },
            "required": true,
            "description": "Identifier of a category level. See attribute `levels` in endpoint `/category/system/get` for valid values.",
            "example": 2
          },
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "metaLanguage",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "ISO 639-1 code of the language.",
              "maxLength": 2,
              "minLength": 2,
              "example": "de"
            },
            "description": "ISO 639-1 code of the language.",
            "example": "de"
          },
          {
            "description": "Non-negative number of entries to skip, or 0 (default).",
            "name": "_paginationOffset",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": false,
              "default": 0,
              "example": 0
            }
          },
          {
            "description": "Non-negative maximum number of entries to return.",
            "name": "_paginationLimit",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": false,
              "maximum": 500,
              "exclusiveMaximum": false,
              "default": 20,
              "example": 20
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetCategoryListByLevel200Response"
          }
        }
      }
    },
    "/category/list-by-system": {
      "get": {
        "tags": [
          "category"
        ],
        "operationId": "getCategoryListBySystem",
        "summary": "List of categories assigned to a category system.",
        "description": "List of categories assigned to a category system.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "id32",
              "description": "Identifier of a category system. See endpoint `/category/system/list` for valid values.",
              "example": 5
            },
            "required": true,
            "description": "Identifier of a category system. See endpoint `/category/system/list` for valid values.",
            "example": 5
          },
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "metaLanguage",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "ISO 639-1 code of the language.",
              "maxLength": 2,
              "minLength": 2,
              "example": "en"
            },
            "description": "ISO 639-1 code of the language.",
            "example": "en"
          },
          {
            "description": "Non-negative number of entries to skip, or 0 (default).",
            "name": "_paginationOffset",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": false,
              "default": 0,
              "example": 0
            }
          },
          {
            "description": "Non-negative maximum number of entries to return.",
            "name": "_paginationLimit",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": false,
              "maximum": 500,
              "exclusiveMaximum": false,
              "default": 20,
              "example": 20
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetCategoryListBySystem200Response"
          }
        }
      }
    },
    "/category/dataset/list": {
      "get": {
        "tags": [
          "category"
        ],
        "operationId": "getCategoryDatasetList",
        "summary": "List of entitled category datasets.",
        "description": "List of entitled category datasets.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetCategoryDatasetList200Response"
          }
        },
        "parameters": [
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "metaLanguage",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "ISO 639-1 code of the language.",
              "maxLength": 2,
              "minLength": 2,
              "example": "de"
            },
            "description": "ISO 639-1 code of the language.",
            "example": "de"
          }
        ]
      }
    },
    "/category/instrument/list": {
      "get": {
        "tags": [
          "category"
        ],
        "operationId": "getCategoryInstrumentList",
        "summary": "List of instruments where a specific dataset has assigned a given category.",
        "description": "List of instruments where a specific dataset has assigned a given category.",
        "parameters": [
          {
            "name": "idCategory",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "id32",
              "description": "Identifier of a category.",
              "example": 1
            },
            "required": true,
            "description": "Identifier of a category.",
            "example": 1
          },
          {
            "name": "idCategoryDataset",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "id32",
              "description": "Identifier of a category dataset.",
              "example": 3
            },
            "required": true,
            "description": "Identifier of a category dataset.",
            "example": 3
          },
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "description": "Non-negative number of entries to skip, or 0 (default).",
            "name": "_paginationOffset",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": false,
              "default": 0,
              "example": 0
            }
          },
          {
            "description": "Non-negative maximum number of entries to return.",
            "name": "_paginationLimit",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": false,
              "maximum": 1000,
              "exclusiveMaximum": false,
              "default": 20,
              "example": 20
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetCategoryInstrumentList200Response"
          }
        }
      }
    },
    "/category/level/get": {
      "get": {
        "tags": [
          "category"
        ],
        "operationId": "getCategoryLevelGet",
        "summary": "Details of a category level.",
        "description": "Details of a category level.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "id32",
              "description": "Identifier of a category level. See attribute `levels` in endpoint `/category/system/get` for valid values.",
              "example": 4
            },
            "required": true,
            "description": "Identifier of a category level. See attribute `levels` in endpoint `/category/system/get` for valid values.",
            "example": 4
          },
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "metaLanguage",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "ISO 639-1 code of the language.",
              "maxLength": 2,
              "minLength": 2,
              "example": "de"
            },
            "description": "ISO 639-1 code of the language.",
            "example": "de"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetCategoryLevelGet200Response"
          }
        }
      }
    },
    "/category/path/get": {
      "get": {
        "tags": [
          "category"
        ],
        "operationId": "getCategoryPathGet",
        "summary": "Path from the first level to the level of a specific category.",
        "description": "Path from the first level to the level of a specific category.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "id32",
              "description": "Identifier of a category.",
              "example": 2
            },
            "required": true,
            "description": "Identifier of a category.",
            "example": 2
          },
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "metaLanguage",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "ISO 639-1 code of the language.",
              "maxLength": 2,
              "minLength": 2,
              "example": "de"
            },
            "description": "ISO 639-1 code of the language.",
            "example": "de"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetCategoryPathGet200Response"
          }
        }
      }
    },
    "/category/system/get": {
      "get": {
        "tags": [
          "category"
        ],
        "operationId": "getCategorySystemGet",
        "summary": "Details of an entitled category system.",
        "description": "Details of an entitled category system.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "id32",
              "description": "Identifier of a category system. See endpoint `/category/system/list` for valid values.",
              "example": 4
            },
            "required": true,
            "description": "Identifier of a category system. See endpoint `/category/system/list` for valid values.",
            "example": 4
          },
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "metaLanguage",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "ISO 639-1 code of the language.",
              "maxLength": 2,
              "minLength": 2,
              "example": "en"
            },
            "description": "ISO 639-1 code of the language.",
            "example": "en"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetCategorySystemGet200Response"
          }
        }
      }
    },
    "/category/system/list": {
      "get": {
        "tags": [
          "category"
        ],
        "operationId": "getCategorySystemList",
        "summary": "List of entitled category systems.",
        "description": "List of entitled category systems.",
        "parameters": [
          {
            "name": "idType",
            "in": "query",
            "schema": {
              "description": "Filter for a specific category system type. See endpoint `/category/system/type/list` for valid values.",
              "type": "number",
              "format": "id32",
              "example": 1
            },
            "description": "Filter for a specific category system type. See endpoint `/category/system/type/list` for valid values.",
            "example": 1
          },
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "metaLanguage",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "ISO 639-1 code of the language.",
              "maxLength": 2,
              "minLength": 2,
              "example": "de"
            },
            "description": "ISO 639-1 code of the language.",
            "example": "de"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetCategorySystemList200Response"
          }
        }
      }
    },
    "/category/system/type/list": {
      "get": {
        "tags": [
          "category"
        ],
        "operationId": "getCategorySystemTypeList",
        "summary": "List of category system types.",
        "description": "List of category system types.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetCategorySystemTypeList200Response"
          }
        },
        "parameters": [
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "metaLanguage",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "ISO 639-1 code of the language.",
              "maxLength": 2,
              "minLength": 2,
              "example": "en"
            },
            "description": "ISO 639-1 code of the language.",
            "example": "en"
          }
        ]
      }
    },
    "/news/article/get": {
      "get": {
        "tags": [
          "news"
        ],
        "operationId": "getNewsArticleGet",
        "summary": "Details for a news article.",
        "description": "Details for a news article.",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "schema": {
              "description": "Identifier of a news article.",
              "type": "string",
              "pattern": "^[0-9A-Za-z+/=:]+$",
              "minLength": 1,
              "maxLength": 128,
              "example": "1234567890FactSet"
            },
            "required": true,
            "description": "Identifier of a news article.",
            "example": "1234567890FactSet"
          },
          {
            "name": "includeMedia",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false,
              "description": "If true, media references are included if available.",
              "example": true
            },
            "required": false,
            "description": "If true, media references are included if available.",
            "example": true
          },
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "metaLanguage",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "ISO 639-1 code of the language.",
              "maxLength": 2,
              "minLength": 2,
              "example": "en"
            },
            "description": "ISO 639-1 code of the language.",
            "example": "en"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetNewsArticleGet200Response"
          }
        }
      }
    },
    "/news/article/list": {
      "post": {
        "tags": [
          "news"
        ],
        "operationId": "postNewsArticleList",
        "summary": "List of news articles.",
        "description": "List of news articles.",
        "requestBody": {
          "description": "Request Body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostNewsArticleListRequest"
              },
              "example": {
                "data": {
                  "filter": {
                    "range": {
                      "start": "2024-01-01T00:00:00.000Z",
                      "end": "2024-12-24T18:00:00.000000Z"
                    },
                    "categories": {
                      "ids": [
                        5
                      ]
                    },
                    "regions": {
                      "ids": [
                        4
                      ]
                    },
                    "distributor": {
                      "ids": [
                        3
                      ]
                    },
                    "publisher": {
                      "ids": [
                        2
                      ]
                    },
                    "language": {
                      "ids": [
                        5
                      ]
                    },
                    "types": {
                      "ids": [
                        2
                      ]
                    }
                  }
                },
                "meta": {
                  "attributes": [],
                  "subscription": {
                    "minimumInterval": 4156
                  },
                  "pagination": {
                    "cursor": "Lorem ipsum",
                    "limit": 20
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PostNewsArticleList200Response"
          }
        },
        "parameters": []
      }
    },
    "/news/article/list-by-chain": {
      "post": {
        "tags": [
          "news"
        ],
        "operationId": "postNewsArticleListByChain",
        "summary": "List news articles of an article chain.",
        "description": "List news articles of an article chain.",
        "requestBody": {
          "description": "Request Body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostNewsArticleListByChainRequest"
              },
              "example": {
                "data": {
                  "id": "4004",
                  "filter": {
                    "range": {
                      "start": "2024-12-24T18:00:00.000000Z",
                      "end": "2024-01-01T00:00:00.000Z"
                    }
                  }
                },
                "meta": {
                  "attributes": [],
                  "subscription": {
                    "minimumInterval": 3401
                  },
                  "pagination": {
                    "cursor": "Lorem ipsum",
                    "limit": 20
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PostNewsArticleListByChain200Response"
          }
        },
        "parameters": []
      }
    },
    "/news/article/list-by-index": {
      "post": {
        "tags": [
          "news"
        ],
        "operationId": "postNewsArticleListByIndex",
        "summary": "News articles for instruments that are constituents of the given indices.",
        "description": "News articles for instruments that are constituents of the given indices.",
        "requestBody": {
          "description": "Request Body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostNewsArticleListByIndexRequest"
              },
              "example": {
                "data": {
                  "identifier": {
                    "values": [
                      "FDS-US"
                    ],
                    "type": "tickerRegion"
                  },
                  "filter": {
                    "range": {
                      "start": "2024-12-24T18:00:00.000000Z",
                      "end": "2024-01-01T00:00:00.000Z"
                    },
                    "categories": {
                      "ids": [
                        3
                      ]
                    },
                    "regions": {
                      "ids": [
                        3
                      ]
                    },
                    "distributor": {
                      "ids": [
                        4
                      ]
                    },
                    "publisher": {
                      "ids": [
                        3
                      ]
                    },
                    "language": {
                      "ids": [
                        2
                      ]
                    },
                    "types": {
                      "ids": [
                        3
                      ]
                    }
                  }
                },
                "meta": {
                  "attributes": [],
                  "subscription": {
                    "minimumInterval": 3450
                  },
                  "pagination": {
                    "cursor": "Lorem ipsum",
                    "limit": 20
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PostNewsArticleListByIndex200Response"
          }
        },
        "parameters": []
      }
    },
    "/news/article/list-by-instrument": {
      "post": {
        "tags": [
          "news"
        ],
        "operationId": "postNewsArticleListByInstrument",
        "summary": "News articles for instruments.",
        "description": "News articles for instruments.",
        "requestBody": {
          "description": "Request Body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostNewsArticleListByInstrumentRequest"
              },
              "example": {
                "data": {
                  "identifier": {
                    "values": [
                      "FDS-US"
                    ],
                    "type": "tickerRegion"
                  },
                  "filter": {
                    "range": {
                      "start": "2024-12-24T18:00:00.000000Z",
                      "end": "2024-12-24T18:00:00.000000Z"
                    },
                    "categories": {
                      "ids": [
                        2
                      ]
                    },
                    "regions": {
                      "ids": [
                        3
                      ]
                    },
                    "distributor": {
                      "ids": [
                        2
                      ]
                    },
                    "publisher": {
                      "ids": [
                        5
                      ]
                    },
                    "language": {
                      "ids": [
                        5
                      ]
                    },
                    "types": {
                      "ids": [
                        3
                      ]
                    }
                  }
                },
                "meta": {
                  "attributes": [],
                  "subscription": {
                    "minimumInterval": 1290
                  },
                  "pagination": {
                    "cursor": "Lorem ipsum",
                    "limit": 20
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PostNewsArticleListByInstrument200Response"
          }
        },
        "parameters": []
      }
    },
    "/news/article/list-by-media-kind": {
      "post": {
        "tags": [
          "news"
        ],
        "operationId": "postNewsArticleListByMediaKind",
        "summary": "List news articles which contain media of specific media kinds.",
        "description": "List news articles which contain media of specific media kinds.",
        "requestBody": {
          "description": "Request Body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostNewsArticleListByMediaKindRequest"
              },
              "example": {
                "data": {
                  "ids": [
                    5
                  ],
                  "filter": {
                    "range": {
                      "start": "2024-12-24T18:00:00.000000Z",
                      "end": "2024-01-01T00:00:00.000Z"
                    },
                    "categories": {
                      "ids": [
                        5
                      ]
                    },
                    "regions": {
                      "ids": [
                        4
                      ]
                    },
                    "distributor": {
                      "ids": [
                        1
                      ]
                    },
                    "publisher": {
                      "ids": [
                        4
                      ]
                    },
                    "language": {
                      "ids": [
                        4
                      ]
                    },
                    "types": {
                      "ids": [
                        4
                      ]
                    }
                  }
                },
                "meta": {
                  "attributes": [],
                  "subscription": {
                    "minimumInterval": 1484
                  },
                  "pagination": {
                    "cursor": "Lorem ipsum",
                    "limit": 20
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PostNewsArticleListByMediaKind200Response"
          }
        },
        "parameters": []
      }
    },
    "/news/article/search-by-text": {
      "post": {
        "tags": [
          "news"
        ],
        "operationId": "postNewsArticleSearchByText",
        "summary": "Search for news articles using a fulltext search.",
        "description": "Search for news articles using a fulltext search. All specified criteria need to be fulfilled for an article to match. Each criterion is handled according to its selectionType; \"include\" requires the criterion to evaluate to true, \"exclude\" requires the criterion to evaluate to false. A criterion is fulfilled when at least one of its values is found.",
        "requestBody": {
          "description": "Request Body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostNewsArticleSearchByTextRequest"
              },
              "example": {
                "data": {
                  "text": {
                    "criteria": {
                      "selectionType": "include",
                      "phrases": [
                        "Lorem Ipsum"
                      ],
                      "minimumMatchScore": 0.7,
                      "scope": "all"
                    }
                  },
                  "criteria": [
                    {
                      "selectionType": "include",
                      "range": {
                        "start": "2024-12-24T18:00:00.000000Z",
                        "end": "2024-12-24T18:00:00.000000Z"
                      },
                      "indices": {
                        "ids": [
                          "5005"
                        ]
                      },
                      "instruments": {
                        "ids": [
                          "5005"
                        ]
                      },
                      "types": {
                        "ids": [
                          2
                        ]
                      },
                      "categories": {
                        "ids": [
                          5
                        ]
                      },
                      "regions": {
                        "ids": [
                          4
                        ]
                      },
                      "distributor": {
                        "ids": [
                          5
                        ]
                      },
                      "publisher": {
                        "ids": [
                          2
                        ]
                      },
                      "language": {
                        "ids": [
                          3
                        ]
                      }
                    }
                  ]
                },
                "meta": {
                  "attributes": [],
                  "subscription": {
                    "minimumInterval": 2670
                  },
                  "pagination": {
                    "cursor": "Lorem ipsum",
                    "limit": 20
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PostNewsArticleSearchByText200Response"
          }
        },
        "parameters": []
      }
    },
    "/news/article/type/get": {
      "get": {
        "tags": [
          "news"
        ],
        "operationId": "getNewsArticleTypeGet",
        "summary": "Details for a news article type.",
        "description": "Details for a news article type.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "description": "Identifier of a news article type.",
              "type": "number",
              "format": "id32",
              "example": 3
            },
            "required": true,
            "description": "Identifier of a news article type.",
            "example": 3
          },
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "metaLanguage",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "ISO 639-1 code of the language.",
              "maxLength": 2,
              "minLength": 2,
              "example": "en"
            },
            "description": "ISO 639-1 code of the language.",
            "example": "en"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetNewsArticleTypeGet200Response"
          }
        }
      }
    },
    "/news/article/type/list": {
      "get": {
        "tags": [
          "news"
        ],
        "operationId": "getNewsArticleTypeList",
        "summary": "List of news article types.",
        "description": "List of news article types.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetNewsArticleTypeList200Response"
          }
        },
        "parameters": [
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "metaLanguage",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "ISO 639-1 code of the language.",
              "maxLength": 2,
              "minLength": 2,
              "example": "en"
            },
            "description": "ISO 639-1 code of the language.",
            "example": "en"
          }
        ]
      }
    },
    "/news/distributor/get": {
      "get": {
        "tags": [
          "news"
        ],
        "operationId": "getNewsDistributorGet",
        "summary": "Details of a distributor.",
        "description": "Details of a distributor.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "id32",
              "description": "Identifier of a distributor.",
              "example": 1
            },
            "required": true,
            "description": "Identifier of a distributor.",
            "example": 1
          },
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetNewsDistributorGet200Response"
          }
        }
      }
    },
    "/news/distributor/list": {
      "get": {
        "tags": [
          "news"
        ],
        "operationId": "getNewsDistributorList",
        "summary": "List of distributors.",
        "description": "List of distributors.",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "type": "number",
                "format": "id32",
                "example": 2
              },
              "maxItems": 100,
              "uniqueItems": true,
              "description": "Identifiers of distributors."
            },
            "style": "form",
            "explode": false,
            "description": "Identifiers of distributors.",
            "example": [
              2
            ]
          },
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "description": "Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 1 (possibly prefixed) attribute name(s) is allowed.\n| Value |\n| --- |\n| id |\n| -id |\n| name |\n| -name |\n\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "-id",
                  "name",
                  "-name"
                ],
                "example": "-name"
              },
              "maxItems": 1,
              "uniqueItems": true,
              "default": [
                "name"
              ]
            },
            "style": "form",
            "explode": false,
            "name": "_sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetNewsDistributorList200Response"
          }
        }
      }
    },
    "/news/publisher/get": {
      "get": {
        "tags": [
          "news"
        ],
        "operationId": "getNewsPublisherGet",
        "summary": "Details of a publisher.",
        "description": "Details of a publisher.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "id32",
              "description": "Identifier of a publisher.",
              "example": 4
            },
            "required": true,
            "description": "Identifier of a publisher.",
            "example": 4
          },
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetNewsPublisherGet200Response"
          }
        }
      }
    },
    "/news/publisher/list": {
      "get": {
        "tags": [
          "news"
        ],
        "operationId": "getNewsPublisherList",
        "summary": "List of publishers.",
        "description": "List of publishers.",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "schema": {
              "type": "array",
              "nullable": false,
              "items": {
                "type": "number",
                "format": "id32",
                "example": 2
              },
              "maxItems": 100,
              "uniqueItems": true,
              "description": "Identifiers of publishers."
            },
            "style": "form",
            "explode": false,
            "description": "Identifiers of publishers.",
            "example": [
              2
            ]
          },
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "description": "Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 1 (possibly prefixed) attribute name(s) is allowed.\n| Value |\n| --- |\n| id |\n| -id |\n| name |\n| -name |\n\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "-id",
                  "name",
                  "-name"
                ],
                "example": "name"
              },
              "maxItems": 1,
              "uniqueItems": true,
              "default": [
                "name"
              ]
            },
            "style": "form",
            "explode": false,
            "name": "_sort",
            "in": "query"
          },
          {
            "description": "Non-negative number of entries to skip, or 0 (default).",
            "name": "_paginationOffset",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": false,
              "default": 0,
              "example": 0
            }
          },
          {
            "description": "Non-negative maximum number of entries to return.",
            "name": "_paginationLimit",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": false,
              "maximum": 500,
              "exclusiveMaximum": false,
              "default": 20,
              "example": 20
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetNewsPublisherList200Response"
          }
        }
      }
    },
    "/news/publisher/list-by-distributor": {
      "get": {
        "tags": [
          "news"
        ],
        "operationId": "getNewsPublisherListByDistributor",
        "summary": "List of publishers provided by the given distributor.",
        "description": "List of publishers provided by the given distributor.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "id32",
              "description": "Identifier of a distributor.",
              "example": 3
            },
            "required": true,
            "description": "Identifier of a distributor.",
            "example": 3
          },
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "description": "Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 1 (possibly prefixed) attribute name(s) is allowed.\n| Value |\n| --- |\n| id |\n| -id |\n| name |\n| -name |\n\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "-id",
                  "name",
                  "-name"
                ],
                "example": "-name"
              },
              "maxItems": 1,
              "uniqueItems": true,
              "default": [
                "name"
              ]
            },
            "style": "form",
            "explode": false,
            "name": "_sort",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetNewsPublisherListByDistributor200Response"
          }
        }
      }
    },
    "/news/publisher/search-by-name": {
      "post": {
        "tags": [
          "news"
        ],
        "operationId": "postNewsPublisherSearchByName",
        "summary": "Search for publishers.",
        "description": "Search for publishers by the name of the publisher.",
        "requestBody": {
          "description": "Request Body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostNewsPublisherSearchByNameRequest"
              },
              "example": {
                "data": {
                  "searchValue": "Lorem ipsum",
                  "matchType": "contains",
                  "filter": {
                    "distributor": {
                      "id": 5
                    },
                    "delivery": {
                      "id": 5
                    }
                  }
                },
                "meta": {
                  "attributes": [],
                  "sort": [
                    "id"
                  ]
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PostNewsPublisherSearchByName200Response"
          }
        },
        "parameters": []
      }
    }
  },
  "components": {
    "schemas": {
      "AttributesMember": {
        "type": "array",
        "description": "Limit the attributes returned in the response to the specified set.",
        "items": {
          "type": "string",
          "maxLength": 100
        },
        "maxItems": 100,
        "uniqueItems": true,
        "example": []
      },
      "LanguageMember": {
        "type": "string",
        "description": "ISO 639-1 code of the language.",
        "maxLength": 2,
        "minLength": 2,
        "example": "en"
      },
      "StatusObject": {
        "type": "object",
        "properties": {
          "code": {
            "type": "number",
            "format": "int32",
            "description": "The HTTP status code of the response, mirroring the code from the Status-Line of the HTTP response message (see [RFC2616] section 6.1).",
            "example": 200
          }
        },
        "description": "The status member contains the status code of the response.",
        "required": [
          "code"
        ]
      },
      "CursorBasedPaginationOutputObjectWithoutTotal": {
        "type": "object",
        "description": "Pagination attributes for the cursor-based pagination strategy; a total element count is not supported.",
        "properties": {
          "next": {
            "type": "string",
            "description": "The next cursor position to use in the parameter `pagination.cursor` for an endpoint that supports cursor-based pagination, otherwise `null`.",
            "example": "Lorem ipsum"
          },
          "previous": {
            "type": "string",
            "description": "The previous cursor position to use in the parameter `pagination.cursor` for an endpoint that supports cursor-based pagination. If a previous cursor position is not supported or available, `previous` is `null`.",
            "example": "Lorem ipsum"
          }
        },
        "required": [
          "next",
          "previous"
        ]
      },
      "OffsetBasedPaginationOutputObject": {
        "type": "object",
        "description": "Pagination attributes for the offset-based pagination strategy.",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of entries in the result set.",
            "example": 3
          },
          "isEstimatedTotal": {
            "type": "boolean",
            "description": "Flag indicating that the value of \"total\" is estimated.",
            "example": false
          }
        },
        "required": [
          "total",
          "isEstimatedTotal"
        ]
      },
      "OffsetBasedPaginationOutputObjectWithoutTotal": {
        "type": "object",
        "description": "Pagination attributes for the offset-based pagination strategy; a total element count is not supported.",
        "properties": {
          "hasNext": {
            "type": "boolean",
            "description": "Flag indicating that a subsequent request with the same parameters, except that the parameter `pagination.offset` is incremented by `pagination.limit`, would yield additional results.",
            "example": false
          }
        },
        "required": [
          "hasNext"
        ]
      },
      "PartialOutputObject": {
        "type": "object",
        "properties": {
          "isPartial": {
            "type": "boolean",
            "description": "Flag indicating that the response is a possibly incomplete array or an object containing a possibly incomplete array, due to hitting a processing time limit. If `true`, some matching results might be missing from the array, or elements for matching results might be incorrectly included (for example, when priority sorting would have removed the element). Depending on the use case, such a response may be unsuitable.",
            "example": true
          }
        },
        "description": "Object denoting that the endpoint response is possibly incomplete.",
        "required": [
          "isPartial"
        ]
      },
      "PostBasicBackgroundTextTypeListRequest": {
        "description": "Request Body",
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "The data member contains the request's primary data.",
            "properties": {
              "filter": {
                "type": "object",
                "description": "Criteria that filter the items in the response list; only items that match all of the criteria are returned.",
                "properties": {
                  "ids": {
                    "type": "array",
                    "nullable": false,
                    "items": {
                      "type": "number",
                      "format": "id32",
                      "example": 5
                    },
                    "minItems": 1,
                    "maxItems": 100,
                    "uniqueItems": true,
                    "description": "List of background text type identifiers. Invalid identifiers result in an error."
                  }
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "The meta member contains the meta information of the request.",
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/AttributesMember"
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "PostBasicDeliveryListRequest": {
        "description": "Request Body",
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "The data member contains the request's primary data.",
            "properties": {
              "filter": {
                "type": "object",
                "description": "Criteria that filter the items in the response list; only items that match all of the criteria are returned.",
                "properties": {
                  "ids": {
                    "type": "array",
                    "nullable": false,
                    "items": {
                      "type": "number",
                      "format": "id32",
                      "example": 1
                    },
                    "minItems": 1,
                    "maxItems": 100,
                    "uniqueItems": true,
                    "description": "List of delivery identifiers. Invalid identifiers result in an error."
                  }
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "The meta member contains the meta information of the request.",
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/AttributesMember"
              },
              "sort": {
                "description": "Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 1 (possibly prefixed) attribute name(s) is allowed.\n| Value |\n| --- |\n| name |\n| -name |\n\n",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "-name"
                  ],
                  "example": "name"
                },
                "maxItems": 1,
                "uniqueItems": true,
                "default": [
                  "name"
                ]
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "PostBasicMarketListRequest": {
        "description": "Request Body",
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "The data member contains the request's primary data.",
            "properties": {
              "filter": {
                "type": "object",
                "description": "Criteria that filter the items in the response list; only items that match all of the criteria are returned.",
                "properties": {
                  "markets": {
                    "type": "object",
                    "description": "Filter for specific markets.",
                    "properties": {
                      "ids": {
                        "type": "array",
                        "nullable": false,
                        "items": {
                          "type": "number",
                          "format": "id32",
                          "example": 5
                        },
                        "minItems": 1,
                        "maxItems": 100,
                        "uniqueItems": true,
                        "description": "List of market identifiers. Invalid identifiers result in an error."
                      }
                    }
                  },
                  "onlyActive": {
                    "type": "boolean",
                    "default": true,
                    "description": "Indicates whether the market exists.",
                    "example": true
                  }
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "The meta member contains the meta information of the request.",
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/AttributesMember"
              },
              "language": {
                "$ref": "#/components/schemas/LanguageMember"
              },
              "sort": {
                "description": "Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 5 (possibly prefixed) attribute name(s) is allowed.\n| Value |\n| --- |\n| name |\n| -name |\n| shortName |\n| -shortName |\n| country.name |\n| -country.name |\n| type.name |\n| -type.name |\n| group.name |\n| -group.name |\n\n",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "-name",
                    "shortName",
                    "-shortName",
                    "country.name",
                    "-country.name",
                    "type.name",
                    "-type.name",
                    "group.name",
                    "-group.name"
                  ],
                  "example": "-shortName"
                },
                "maxItems": 5,
                "uniqueItems": true,
                "default": [
                  "name"
                ]
              },
              "pagination": {
                "type": "object",
                "description": "Pagination attributes for the offset-based pagination strategy.",
                "properties": {
                  "offset": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "exclusiveMinimum": false,
                    "default": 0,
                    "description": "Non-negative number of entries to skip, or 0 (default).",
                    "example": 0
                  },
                  "limit": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "exclusiveMinimum": false,
                    "maximum": 500,
                    "exclusiveMaximum": false,
                    "default": 20,
                    "description": "Non-negative maximum number of entries to return.",
                    "example": 20
                  }
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "PostBasicMediaTypeListRequest": {
        "description": "Request Body",
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "The data member contains the request's primary data.",
            "properties": {
              "filter": {
                "description": "Criteria that filter the items in the response list; only items that match all of the criteria are returned.",
                "type": "object",
                "properties": {
                  "ids": {
                    "type": "array",
                    "nullable": false,
                    "items": {
                      "type": "number",
                      "format": "id32",
                      "example": 1
                    },
                    "minItems": 1,
                    "maxItems": 100,
                    "uniqueItems": true,
                    "description": "List of Internet media type identifiers. Invalid identifiers result in an error."
                  }
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "The meta member contains the meta information of the request.",
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/AttributesMember"
              },
              "sort": {
                "description": "Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 2 (possibly prefixed) attribute name(s) is allowed.\n| Value |\n| --- |\n| id |\n| -id |\n| name |\n| -name |\n\n",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "-id",
                    "name",
                    "-name"
                  ],
                  "example": "name"
                },
                "maxItems": 2,
                "uniqueItems": true,
                "default": [
                  "name"
                ]
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "PostBasicMicOperatingListRequest": {
        "description": "Request Body",
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "The data member contains the request's primary data.",
            "properties": {
              "filter": {
                "type": "object",
                "description": "Criteria that filter the items in the response list; only items that match all of the criteria are returned.",
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "Filter for the status.\n| Value | Description |\n| --- | --- |\n| all | Show all operating MICs. |\n| active | Show only active operating MICs. |\n| inactive | Show only inactive operating MICs. |\n\n",
                    "default": "active",
                    "enum": [
                      "all",
                      "active",
                      "inactive"
                    ],
                    "example": "active"
                  }
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "The meta member contains the meta information of the request.",
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/AttributesMember"
              },
              "sort": {
                "description": "Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 2 (possibly prefixed) attribute name(s) is allowed.\n| Value |\n| --- |\n| isoCode |\n| -isoCode |\n| name |\n| -name |\n\n",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "isoCode",
                    "-isoCode",
                    "name",
                    "-name"
                  ],
                  "example": "-name"
                },
                "maxItems": 2,
                "uniqueItems": true,
                "default": [
                  "name"
                ]
              },
              "pagination": {
                "type": "object",
                "description": "Pagination attributes for the offset-based pagination strategy.",
                "properties": {
                  "offset": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "exclusiveMinimum": false,
                    "default": 0,
                    "description": "Non-negative number of entries to skip, or 0 (default).",
                    "example": 0
                  },
                  "limit": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "exclusiveMinimum": false,
                    "maximum": 500,
                    "exclusiveMaximum": false,
                    "default": 20,
                    "description": "Non-negative maximum number of entries to return.",
                    "example": 20
                  }
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "PostBasicTimezoneListRequest": {
        "description": "Request Body",
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "The data member contains the request's primary data.",
            "properties": {
              "filter": {
                "type": "object",
                "description": "Criteria that filter the items in the response list; only items that match all of the criteria are returned.",
                "properties": {
                  "ids": {
                    "type": "array",
                    "nullable": false,
                    "items": {
                      "type": "number",
                      "format": "id32",
                      "example": 3
                    },
                    "minItems": 1,
                    "maxItems": 100,
                    "uniqueItems": true,
                    "description": "List of timezone identifiers. Invalid identifiers result in an error."
                  }
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "The meta member contains the meta information of the request.",
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/AttributesMember"
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "PostBasicValueUnitListRequest": {
        "description": "Request Body",
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "The data member contains the request's primary data.",
            "properties": {
              "filter": {
                "type": "object",
                "description": "Criteria that filter the items in the response list; only items that match all of the criteria are returned.",
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "Filter for the status.\n| Value | Description |\n| --- | --- |\n| all | Show all currencies. |\n| active | Show only active currencies. |\n| inactive | Show only inactive currencies. |\n\n",
                    "default": "active",
                    "enum": [
                      "all",
                      "active",
                      "inactive"
                    ],
                    "example": "active"
                  }
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "The meta member contains the meta information of the request.",
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/AttributesMember"
              },
              "language": {
                "$ref": "#/components/schemas/LanguageMember"
              },
              "sort": {
                "description": "Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 1 (possibly prefixed) attribute name(s) is allowed.\n| Value |\n| --- |\n| name |\n| -name |\n\n",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "-name"
                  ],
                  "example": "name"
                },
                "maxItems": 1,
                "uniqueItems": true,
                "default": [
                  "name"
                ]
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "PostBasicValueUnitCurrencyListRequest": {
        "description": "Request Body",
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "The data member contains the request's primary data.",
            "properties": {
              "filter": {
                "type": "object",
                "description": "Criteria that filter the items in the response list; only items that match all of the criteria are returned.",
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "Filter for the status.\n| Value | Description |\n| --- | --- |\n| all | Show all currencies. |\n| active | Show only active currencies. |\n| inactive | Show only inactive currencies. |\n\n",
                    "default": "active",
                    "enum": [
                      "all",
                      "active",
                      "inactive"
                    ],
                    "example": "active"
                  }
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "The meta member contains the meta information of the request.",
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/AttributesMember"
              },
              "language": {
                "$ref": "#/components/schemas/LanguageMember"
              },
              "sort": {
                "description": "Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 1 (possibly prefixed) attribute name(s) is allowed.\n| Value |\n| --- |\n| name |\n| -name |\n\n",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "-name"
                  ],
                  "example": "-name"
                },
                "maxItems": 1,
                "uniqueItems": true,
                "default": [
                  "name"
                ]
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "PostBasicValueUnitCurrencyMainListRequest": {
        "description": "Request Body",
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "The data member contains the request's primary data.",
            "properties": {
              "filter": {
                "type": "object",
                "description": "Criteria that filter the items in the response list; only items that match all of the criteria are returned.",
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "Filter for the status.\n| Value | Description |\n| --- | --- |\n| all | Show all main currencies. |\n| active | Show only active main currencies. |\n| inactive | Show only inactive main currencies. |\n\n",
                    "default": "active",
                    "enum": [
                      "all",
                      "active",
                      "inactive"
                    ],
                    "example": "active"
                  }
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "The meta member contains the meta information of the request.",
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/AttributesMember"
              },
              "language": {
                "$ref": "#/components/schemas/LanguageMember"
              },
              "sort": {
                "description": "Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 1 (possibly prefixed) attribute name(s) is allowed.\n| Value |\n| --- |\n| name |\n| -name |\n\n",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "-name"
                  ],
                  "example": "-name"
                },
                "maxItems": 1,
                "uniqueItems": true,
                "default": [
                  "name"
                ]
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "PostNewsArticleListRequest": {
        "description": "Request Body",
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "The data member contains the request's primary data.",
            "properties": {
              "filter": {
                "description": "Criteria that filter the items in the response list; only items that match all of the criteria are returned.",
                "type": "object",
                "properties": {
                  "range": {
                    "type": "object",
                    "format": "timeRange",
                    "properties": {
                      "start": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The starting point of the time range (inclusive), or `null` to indicate that the time range extends indefinitely into the past.",
                        "example": "2024-01-01T00:00:00.000Z"
                      },
                      "end": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The ending point of the time range (exclusive), or `null` to indicate that the time range extends indefinitely into the future.",
                        "example": "2024-12-24T18:00:00.000000Z"
                      }
                    },
                    "required": [
                      "start",
                      "end"
                    ],
                    "description": "Time range for matching the news article's date. At most one of the attributes `start` or `end` may be `null`."
                  },
                  "categories": {
                    "type": "object",
                    "description": "Filter for specific categories of the news article. Use a category system of type news with endpoint `/category/listBySystem` for valid values.",
                    "properties": {
                      "ids": {
                        "type": "array",
                        "nullable": false,
                        "items": {
                          "type": "number",
                          "format": "id32",
                          "example": 5
                        },
                        "minItems": 1,
                        "maxItems": 100,
                        "uniqueItems": true,
                        "description": "Identifiers of the categories."
                      }
                    }
                  },
                  "regions": {
                    "type": "object",
                    "description": "Filter for specific regions of the content of the news article. See endpoint `/basic/region/list` for valid values.",
                    "properties": {
                      "ids": {
                        "type": "array",
                        "nullable": false,
                        "items": {
                          "type": "number",
                          "format": "id32",
                          "example": 4
                        },
                        "minItems": 1,
                        "maxItems": 100,
                        "uniqueItems": true,
                        "description": "Identifiers of the regions."
                      }
                    }
                  },
                  "distributor": {
                    "type": "object",
                    "description": "Filter for specific distributors of the news article. See endpoint `/news/distributor/list` for valid values.",
                    "properties": {
                      "ids": {
                        "type": "array",
                        "nullable": false,
                        "items": {
                          "type": "number",
                          "format": "id32",
                          "example": 3
                        },
                        "minItems": 1,
                        "maxItems": 100,
                        "uniqueItems": true,
                        "description": "Identifiers of the distributors."
                      }
                    }
                  },
                  "publisher": {
                    "type": "object",
                    "description": "Filter for specific publishers of the news article. See endpoint `/news/publisher/list` for valid values.",
                    "properties": {
                      "ids": {
                        "type": "array",
                        "nullable": false,
                        "items": {
                          "type": "number",
                          "format": "id32",
                          "example": 2
                        },
                        "minItems": 1,
                        "maxItems": 100,
                        "uniqueItems": true,
                        "description": "Identifiers of the publishers."
                      }
                    }
                  },
                  "language": {
                    "type": "object",
                    "description": "Filter for specific languages of the news article. See endpoint `/basic/language/list` for valid values.",
                    "properties": {
                      "ids": {
                        "type": "array",
                        "nullable": false,
                        "items": {
                          "type": "number",
                          "format": "id32",
                          "example": 5
                        },
                        "minItems": 1,
                        "maxItems": 100,
                        "uniqueItems": true,
                        "description": "Identifiers of the languages."
                      }
                    }
                  },
                  "types": {
                    "type": "object",
                    "description": "Filter for specific types of the news article. See endpoint `/news/article/type/list` for valid values.",
                    "properties": {
                      "ids": {
                        "type": "array",
                        "nullable": false,
                        "items": {
                          "type": "number",
                          "format": "id32",
                          "example": 2
                        },
                        "minItems": 1,
                        "maxItems": 100,
                        "uniqueItems": true,
                        "description": "Identifiers of the article types."
                      }
                    }
                  }
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "The meta member contains the meta information of the request.",
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/AttributesMember"
              },
              "subscription": {
                "type": "object",
                "description": "Object defining the subscription attributes.",
                "properties": {
                  "minimumInterval": {
                    "type": "number",
                    "format": "int32",
                    "minimum": 0,
                    "exclusiveMinimum": false,
                    "maximum": 5000,
                    "exclusiveMaximum": false,
                    "default": 0,
                    "description": "Non-negative number of milliseconds to throttle the update rate from 0ms to 5000ms. Set to 0 for sending updates immediately.",
                    "example": 4156
                  }
                }
              },
              "pagination": {
                "type": "object",
                "description": "Pagination attributes for the cursor-based pagination strategy.",
                "properties": {
                  "cursor": {
                    "type": "string",
                    "maxLength": 50,
                    "description": "Starting point as returned in the attributes `pagination.next` or `pagination.previous` by a prior invocation of this endpoint, or undefined (default).",
                    "example": "Lorem ipsum"
                  },
                  "limit": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "exclusiveMinimum": false,
                    "maximum": 500,
                    "exclusiveMaximum": false,
                    "default": 20,
                    "description": "Non-negative maximum number of entries to return.",
                    "example": 20
                  }
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "PostNewsArticleListByChainRequest": {
        "description": "Request Body",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "The data member contains the request's primary data.",
            "properties": {
              "id": {
                "description": "Identifier of the news article chain.",
                "type": "string",
                "format": "id64",
                "example": "4004"
              },
              "filter": {
                "description": "Criteria that filter the items in the response list; only items that match all of the criteria are returned.",
                "type": "object",
                "properties": {
                  "range": {
                    "type": "object",
                    "format": "timeRange",
                    "properties": {
                      "start": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The starting point of the time range (inclusive), or `null` to indicate that the time range extends indefinitely into the past.",
                        "example": "2024-12-24T18:00:00.000000Z"
                      },
                      "end": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The ending point of the time range (exclusive), or `null` to indicate that the time range extends indefinitely into the future.",
                        "example": "2024-01-01T00:00:00.000Z"
                      }
                    },
                    "required": [
                      "start",
                      "end"
                    ],
                    "description": "Time range for matching the news article's date. At most one of the attributes `start` or `end` may be `null`."
                  }
                }
              }
            },
            "required": [
              "id"
            ]
          },
          "meta": {
            "type": "object",
            "description": "The meta member contains the meta information of the request.",
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/AttributesMember"
              },
              "subscription": {
                "type": "object",
                "description": "Object defining the subscription attributes.",
                "properties": {
                  "minimumInterval": {
                    "type": "number",
                    "format": "int32",
                    "minimum": 0,
                    "exclusiveMinimum": false,
                    "maximum": 5000,
                    "exclusiveMaximum": false,
                    "default": 0,
                    "description": "Non-negative number of milliseconds to throttle the update rate from 0ms to 5000ms. Set to 0 for sending updates immediately.",
                    "example": 3401
                  }
                }
              },
              "pagination": {
                "type": "object",
                "description": "Pagination attributes for the cursor-based pagination strategy.",
                "properties": {
                  "cursor": {
                    "type": "string",
                    "maxLength": 50,
                    "description": "Starting point as returned in the attributes `pagination.next` or `pagination.previous` by a prior invocation of this endpoint, or undefined (default).",
                    "example": "Lorem ipsum"
                  },
                  "limit": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "exclusiveMinimum": false,
                    "maximum": 500,
                    "exclusiveMaximum": false,
                    "default": 20,
                    "description": "Non-negative maximum number of entries to return.",
                    "example": 20
                  }
                }
              }
            }
          }
        }
      },
      "PostNewsArticleListByIndexRequest": {
        "description": "Request Body",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "The data member contains the request's primary data.",
            "properties": {
              "identifier": {
                "type": "object",
                "description": "Set of identifiers and their type.",
                "properties": {
                  "values": {
                    "description": "Set of identifiers to resolve.",
                    "type": "array",
                    "nullable": false,
                    "items": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 50,
                      "example": "FDS-US",
                      "pattern": "^[B-DF-HJ-NP-TV-Z0-9]{6}-[SLR]$|^[A-Z0-9.#&*+]{1,47}-[A-Z0-9]{2,4}$|^[0-9]{3,20}$|^[B-DF-HJ-NP-TV-Z0-9]{6}[0-9]$|^[A-Z]{2}[A-Z0-9]{9}[0-9]$|^[A-Z1-9][A-Z0-9]{5}$|^[0-9]{1,9}$|^[A-Z0-9]{8}[0-9]$"
                    },
                    "uniqueItems": true,
                    "minItems": 1,
                    "maxItems": 100,
                    "example": [
                      "FDS-US"
                    ]
                  },
                  "type": {
                    "type": "string",
                    "example": "tickerRegion",
                    "description": "Type of the identifier. An instrument level identifier is resolved to a listing level identifier according to the configured listing selection rules.\n| Value | Description |\n| --- | --- |\n| idInstrument | MDG identifier of an instrument. |\n| idNotation | MDG identifier of a listing. |\n| fdsPermanentIdentifierSecurity | FactSet Permanent Identifier on security level. |\n| fdsPermanentIdentifierListing | FactSet Permanent Identifier on listing level. |\n| fdsPermanentIdentifierRegional | Regional FactSet Permanent Identifier, identifying the primary listing in the region. |\n| tickerExchange | FactSet market symbol of a listing. |\n| tickerRegion | Regional FactSet ticker symbol, identifying the primary listing in the region. |\n| sedol | SEDOL or IDII of a listing. |\n| isin | ISIN of an instrument. |\n| wkn | WKN of an instrument. |\n| valor | Valor number of an instrument. |\n| cusip | CUSIP or CINS identifier of an instrument |\n\n",
                    "enum": [
                      "idInstrument",
                      "idNotation",
                      "fdsPermanentIdentifierSecurity",
                      "fdsPermanentIdentifierListing",
                      "fdsPermanentIdentifierRegional",
                      "tickerExchange",
                      "tickerRegion",
                      "sedol",
                      "isin",
                      "wkn",
                      "valor",
                      "cusip"
                    ]
                  }
                },
                "required": [
                  "values",
                  "type"
                ]
              },
              "filter": {
                "description": "Criteria that filter the items in the response list; only items that match all of the criteria are returned.",
                "type": "object",
                "properties": {
                  "range": {
                    "type": "object",
                    "format": "timeRange",
                    "properties": {
                      "start": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The starting point of the time range (inclusive), or `null` to indicate that the time range extends indefinitely into the past.",
                        "example": "2024-12-24T18:00:00.000000Z"
                      },
                      "end": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The ending point of the time range (exclusive), or `null` to indicate that the time range extends indefinitely into the future.",
                        "example": "2024-01-01T00:00:00.000Z"
                      }
                    },
                    "required": [
                      "start",
                      "end"
                    ],
                    "description": "Time range for matching the news article's date. At most one of the attributes `start` or `end` may be `null`."
                  },
                  "categories": {
                    "type": "object",
                    "description": "Filter for specific categories of the news article. Use a category system of type news with endpoint `/category/listBySystem` for valid values.",
                    "properties": {
                      "ids": {
                        "type": "array",
                        "nullable": false,
                        "items": {
                          "type": "number",
                          "format": "id32",
                          "example": 3
                        },
                        "minItems": 1,
                        "maxItems": 100,
                        "uniqueItems": true,
                        "description": "Identifiers of the categories."
                      }
                    }
                  },
                  "regions": {
                    "type": "object",
                    "description": "Filter for specific regions of the content of the news article. See endpoint `/basic/region/list` for valid values.",
                    "properties": {
                      "ids": {
                        "type": "array",
                        "nullable": false,
                        "items": {
                          "type": "number",
                          "format": "id32",
                          "example": 3
                        },
                        "minItems": 1,
                        "maxItems": 100,
                        "uniqueItems": true,
                        "description": "Identifiers of the regions."
                      }
                    }
                  },
                  "distributor": {
                    "type": "object",
                    "description": "Filter for specific distributors of the news article. See endpoint `/news/distributor/list` for valid values.",
                    "properties": {
                      "ids": {
                        "type": "array",
                        "nullable": false,
                        "items": {
                          "type": "number",
                          "format": "id32",
                          "example": 4
                        },
                        "minItems": 1,
                        "maxItems": 100,
                        "uniqueItems": true,
                        "description": "Identifiers of the distributors."
                      }
                    }
                  },
                  "publisher": {
                    "type": "object",
                    "description": "Filter for specific publishers of the news article. See endpoint `/news/publisher/list` for valid values.",
                    "properties": {
                      "ids": {
                        "type": "array",
                        "nullable": false,
                        "items": {
                          "type": "number",
                          "format": "id32",
                          "example": 3
                        },
                        "minItems": 1,
                        "maxItems": 100,
                        "uniqueItems": true,
                        "description": "Identifiers of the publishers."
                      }
                    }
                  },
                  "language": {
                    "type": "object",
                    "description": "Filter for specific languages of the news article. See endpoint `/basic/language/list` for valid values.",
                    "properties": {
                      "ids": {
                        "type": "array",
                        "nullable": false,
                        "items": {
                          "type": "number",
                          "format": "id32",
                          "example": 2
                        },
                        "minItems": 1,
                        "maxItems": 100,
                        "uniqueItems": true,
                        "description": "Identifiers of the languages."
                      }
                    }
                  },
                  "types": {
                    "type": "object",
                    "description": "Filter for specific types of the news article. See endpoint `/news/article/type/list` for valid values.",
                    "properties": {
                      "ids": {
                        "type": "array",
                        "nullable": false,
                        "items": {
                          "type": "number",
                          "format": "id32",
                          "example": 3
                        },
                        "minItems": 1,
                        "maxItems": 100,
                        "uniqueItems": true,
                        "description": "Identifiers of the article types."
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "identifier"
            ]
          },
          "meta": {
            "type": "object",
            "description": "The meta member contains the meta information of the request.",
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/AttributesMember"
              },
              "subscription": {
                "type": "object",
                "description": "Object defining the subscription attributes.",
                "properties": {
                  "minimumInterval": {
                    "type": "number",
                    "format": "int32",
                    "minimum": 0,
                    "exclusiveMinimum": false,
                    "maximum": 5000,
                    "exclusiveMaximum": false,
                    "default": 0,
                    "description": "Non-negative number of milliseconds to throttle the update rate from 0ms to 5000ms. Set to 0 for sending updates immediately.",
                    "example": 3450
                  }
                }
              },
              "pagination": {
                "type": "object",
                "description": "Pagination attributes for the cursor-based pagination strategy.",
                "properties": {
                  "cursor": {
                    "type": "string",
                    "maxLength": 50,
                    "description": "Starting point as returned in the attributes `pagination.next` or `pagination.previous` by a prior invocation of this endpoint, or undefined (default).",
                    "example": "Lorem ipsum"
                  },
                  "limit": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "exclusiveMinimum": false,
                    "maximum": 500,
                    "exclusiveMaximum": false,
                    "default": 20,
                    "description": "Non-negative maximum number of entries to return.",
                    "example": 20
                  }
                }
              }
            }
          }
        }
      },
      "PostNewsArticleListByInstrumentRequest": {
        "description": "Request Body",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "The data member contains the request's primary data.",
            "properties": {
              "identifier": {
                "type": "object",
                "description": "Set of identifiers and their type.",
                "properties": {
                  "values": {
                    "description": "Set of identifiers to resolve.",
                    "type": "array",
                    "nullable": false,
                    "items": {
                      "type": "string",
                      "minLength": 3,
                      "maxLength": 50,
                      "example": "FDS-US",
                      "pattern": "^[B-DF-HJ-NP-TV-Z0-9]{6}-[SLR]$|^[A-Z0-9.#&*+]{1,47}-[A-Z0-9]{2,4}$|^[0-9]{3,20}$|^[B-DF-HJ-NP-TV-Z0-9]{6}[0-9]$|^[A-Z]{2}[A-Z0-9]{9}[0-9]$|^[A-Z1-9][A-Z0-9]{5}$|^[0-9]{1,9}$|^[A-Z0-9]{8}[0-9]$"
                    },
                    "uniqueItems": true,
                    "minItems": 1,
                    "maxItems": 100,
                    "example": [
                      "FDS-US"
                    ]
                  },
                  "type": {
                    "type": "string",
                    "example": "tickerRegion",
                    "description": "Type of the identifier.\n| Value | Description |\n| --- | --- |\n| idInstrument | MDG identifier of an instrument. |\n| idNotation | MDG identifier of a listing. |\n| fdsPermanentIdentifierSecurity | FactSet Permanent Identifier on security level. |\n| fdsPermanentIdentifierListing | FactSet Permanent Identifier on listing level. |\n| fdsPermanentIdentifierRegional | Regional FactSet Permanent Identifier. |\n| tickerExchange | FactSet market symbol of a listing. |\n| tickerRegion | Regional FactSet ticker symbol. |\n| sedol | SEDOL or IDII of a listing. |\n| isin | ISIN of an instrument. |\n| wkn | WKN of an instrument. |\n| valor | Valor number of an instrument. |\n| cusip | CUSIP or CINS identifier of an instrument |\n\n",
                    "enum": [
                      "idInstrument",
                      "idNotation",
                      "fdsPermanentIdentifierSecurity",
                      "fdsPermanentIdentifierListing",
                      "fdsPermanentIdentifierRegional",
                      "tickerExchange",
                      "tickerRegion",
                      "sedol",
                      "isin",
                      "wkn",
                      "valor",
                      "cusip"
                    ]
                  }
                },
                "required": [
                  "values",
                  "type"
                ]
              },
              "filter": {
                "description": "Criteria that filter the items in the response list; only items that match all of the criteria are returned.",
                "type": "object",
                "properties": {
                  "range": {
                    "type": "object",
                    "format": "timeRange",
                    "properties": {
                      "start": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The starting point of the time range (inclusive), or `null` to indicate that the time range extends indefinitely into the past.",
                        "example": "2024-12-24T18:00:00.000000Z"
                      },
                      "end": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The ending point of the time range (exclusive), or `null` to indicate that the time range extends indefinitely into the future.",
                        "example": "2024-12-24T18:00:00.000000Z"
                      }
                    },
                    "required": [
                      "start",
                      "end"
                    ],
                    "description": "Time range for matching the news article's date. At most one of the attributes `start` or `end` may be `null`."
                  },
                  "categories": {
                    "type": "object",
                    "description": "Filter for specific categories of the news article. Use a category system of type news with endpoint `/category/listBySystem` for valid values.",
                    "properties": {
                      "ids": {
                        "type": "array",
                        "nullable": false,
                        "items": {
                          "type": "number",
                          "format": "id32",
                          "example": 2
                        },
                        "minItems": 1,
                        "maxItems": 100,
                        "uniqueItems": true,
                        "description": "Identifiers of the categories."
                      }
                    }
                  },
                  "regions": {
                    "type": "object",
                    "description": "Filter for specific regions of the content of the news article. See endpoint `/basic/region/list` for valid values.",
                    "properties": {
                      "ids": {
                        "type": "array",
                        "nullable": false,
                        "items": {
                          "type": "number",
                          "format": "id32",
                          "example": 3
                        },
                        "minItems": 1,
                        "maxItems": 100,
                        "uniqueItems": true,
                        "description": "Identifiers of the regions."
                      }
                    }
                  },
                  "distributor": {
                    "type": "object",
                    "description": "Filter for specific distributors of the news article. See endpoint `/news/distributor/list` for valid values.",
                    "properties": {
                      "ids": {
                        "type": "array",
                        "nullable": false,
                        "items": {
                          "type": "number",
                          "format": "id32",
                          "example": 2
                        },
                        "minItems": 1,
                        "maxItems": 100,
                        "uniqueItems": true,
                        "description": "Identifiers of the distributors."
                      }
                    }
                  },
                  "publisher": {
                    "type": "object",
                    "description": "Filter for specific publishers of the news article. See endpoint `/news/publisher/list` for valid values.",
                    "properties": {
                      "ids": {
                        "type": "array",
                        "nullable": false,
                        "items": {
                          "type": "number",
                          "format": "id32",
                          "example": 5
                        },
                        "minItems": 1,
                        "maxItems": 100,
                        "uniqueItems": true,
                        "description": "Identifiers of the publishers."
                      }
                    }
                  },
                  "language": {
                    "type": "object",
                    "description": "Filter for specific languages of the news article. See endpoint `/basic/language/list` for valid values.",
                    "properties": {
                      "ids": {
                        "type": "array",
                        "nullable": false,
                        "items": {
                          "type": "number",
                          "format": "id32",
                          "example": 5
                        },
                        "minItems": 1,
                        "maxItems": 100,
                        "uniqueItems": true,
                        "description": "Identifiers of the languages."
                      }
                    }
                  },
                  "types": {
                    "type": "object",
                    "description": "Filter for specific types of the news article. See endpoint `/news/article/type/list` for valid values.",
                    "properties": {
                      "ids": {
                        "type": "array",
                        "nullable": false,
                        "items": {
                          "type": "number",
                          "format": "id32",
                          "example": 3
                        },
                        "minItems": 1,
                        "maxItems": 100,
                        "uniqueItems": true,
                        "description": "Identifiers of the article types."
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "identifier"
            ]
          },
          "meta": {
            "type": "object",
            "description": "The meta member contains the meta information of the request.",
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/AttributesMember"
              },
              "subscription": {
                "type": "object",
                "description": "Object defining the subscription attributes.",
                "properties": {
                  "minimumInterval": {
                    "type": "number",
                    "format": "int32",
                    "minimum": 0,
                    "exclusiveMinimum": false,
                    "maximum": 5000,
                    "exclusiveMaximum": false,
                    "default": 0,
                    "description": "Non-negative number of milliseconds to throttle the update rate from 0ms to 5000ms. Set to 0 for sending updates immediately.",
                    "example": 1290
                  }
                }
              },
              "pagination": {
                "type": "object",
                "description": "Pagination attributes for the cursor-based pagination strategy.",
                "properties": {
                  "cursor": {
                    "type": "string",
                    "maxLength": 50,
                    "description": "Starting point as returned in the attributes `pagination.next` or `pagination.previous` by a prior invocation of this endpoint, or undefined (default).",
                    "example": "Lorem ipsum"
                  },
                  "limit": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "exclusiveMinimum": false,
                    "maximum": 500,
                    "exclusiveMaximum": false,
                    "default": 20,
                    "description": "Non-negative maximum number of entries to return.",
                    "example": 20
                  }
                }
              }
            }
          }
        }
      },
      "PostNewsArticleListByMediaKindRequest": {
        "description": "Request Body",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "The data member contains the request's primary data.",
            "properties": {
              "ids": {
                "type": "array",
                "nullable": false,
                "items": {
                  "type": "number",
                  "format": "id32",
                  "example": 5
                },
                "minItems": 1,
                "maxItems": 20,
                "uniqueItems": true,
                "description": "List of media kind identifiers. See endpoint `/basic/media/kind/list` for valid values."
              },
              "filter": {
                "description": "Criteria that filter the items in the response list; only items that match all of the criteria are returned.",
                "type": "object",
                "properties": {
                  "range": {
                    "type": "object",
                    "format": "timeRange",
                    "properties": {
                      "start": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The starting point of the time range (inclusive), or `null` to indicate that the time range extends indefinitely into the past.",
                        "example": "2024-12-24T18:00:00.000000Z"
                      },
                      "end": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The ending point of the time range (exclusive), or `null` to indicate that the time range extends indefinitely into the future.",
                        "example": "2024-01-01T00:00:00.000Z"
                      }
                    },
                    "required": [
                      "start",
                      "end"
                    ],
                    "description": "Time range for matching the news article's date. At most one of the attributes `start` or `end` may be `null`."
                  },
                  "categories": {
                    "type": "object",
                    "description": "Filter for specific categories of the news article. Use a category system of type news with endpoint `/category/listBySystem` for valid values.",
                    "properties": {
                      "ids": {
                        "type": "array",
                        "nullable": false,
                        "items": {
                          "type": "number",
                          "format": "id32",
                          "example": 5
                        },
                        "minItems": 1,
                        "maxItems": 100,
                        "uniqueItems": true,
                        "description": "Identifiers of the categories."
                      }
                    }
                  },
                  "regions": {
                    "type": "object",
                    "description": "Filter for specific regions of the content of the news article. See endpoint `/basic/region/list` for valid values.",
                    "properties": {
                      "ids": {
                        "type": "array",
                        "nullable": false,
                        "items": {
                          "type": "number",
                          "format": "id32",
                          "example": 4
                        },
                        "minItems": 1,
                        "maxItems": 100,
                        "uniqueItems": true,
                        "description": "Identifiers of the regions."
                      }
                    }
                  },
                  "distributor": {
                    "type": "object",
                    "description": "Filter for specific distributors of the news article. See endpoint `/news/distributor/list` for valid values.",
                    "properties": {
                      "ids": {
                        "type": "array",
                        "nullable": false,
                        "items": {
                          "type": "number",
                          "format": "id32",
                          "example": 1
                        },
                        "minItems": 1,
                        "maxItems": 100,
                        "uniqueItems": true,
                        "description": "Identifiers of the distributors."
                      }
                    }
                  },
                  "publisher": {
                    "type": "object",
                    "description": "Filter for specific publishers of the news article. See endpoint `/news/publisher/list` for valid values.",
                    "properties": {
                      "ids": {
                        "type": "array",
                        "nullable": false,
                        "items": {
                          "type": "number",
                          "format": "id32",
                          "example": 4
                        },
                        "minItems": 1,
                        "maxItems": 100,
                        "uniqueItems": true,
                        "description": "Identifiers of the publishers."
                      }
                    }
                  },
                  "language": {
                    "type": "object",
                    "description": "Filter for specific languages of the news article. See endpoint `/basic/language/list` for valid values.",
                    "properties": {
                      "ids": {
                        "type": "array",
                        "nullable": false,
                        "items": {
                          "type": "number",
                          "format": "id32",
                          "example": 4
                        },
                        "minItems": 1,
                        "maxItems": 100,
                        "uniqueItems": true,
                        "description": "Identifiers of the languages."
                      }
                    }
                  },
                  "types": {
                    "type": "object",
                    "description": "Filter for specific types of the news article. See endpoint `/news/article/type/list` for valid values.",
                    "properties": {
                      "ids": {
                        "type": "array",
                        "nullable": false,
                        "items": {
                          "type": "number",
                          "format": "id32",
                          "example": 4
                        },
                        "minItems": 1,
                        "maxItems": 100,
                        "uniqueItems": true,
                        "description": "Identifiers of the article types."
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "ids"
            ]
          },
          "meta": {
            "type": "object",
            "description": "The meta member contains the meta information of the request.",
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/AttributesMember"
              },
              "subscription": {
                "type": "object",
                "description": "Object defining the subscription attributes.",
                "properties": {
                  "minimumInterval": {
                    "type": "number",
                    "format": "int32",
                    "minimum": 0,
                    "exclusiveMinimum": false,
                    "maximum": 5000,
                    "exclusiveMaximum": false,
                    "default": 0,
                    "description": "Non-negative number of milliseconds to throttle the update rate from 0ms to 5000ms. Set to 0 for sending updates immediately.",
                    "example": 1484
                  }
                }
              },
              "pagination": {
                "type": "object",
                "description": "Pagination attributes for the cursor-based pagination strategy.",
                "properties": {
                  "cursor": {
                    "type": "string",
                    "maxLength": 50,
                    "description": "Starting point as returned in the attributes `pagination.next` or `pagination.previous` by a prior invocation of this endpoint, or undefined (default).",
                    "example": "Lorem ipsum"
                  },
                  "limit": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "exclusiveMinimum": false,
                    "maximum": 500,
                    "exclusiveMaximum": false,
                    "default": 20,
                    "description": "Non-negative maximum number of entries to return.",
                    "example": 20
                  }
                }
              }
            }
          }
        }
      },
      "PostNewsArticleSearchByTextRequest": {
        "description": "Request Body",
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "The data member contains the request's primary data.",
            "properties": {
              "text": {
                "description": "Restrict the response of news articles to given include and exclude text criteria.",
                "type": "object",
                "properties": {
                  "criteria": {
                    "description": "",
                    "type": "object",
                    "properties": {
                      "selectionType": {
                        "description": "Specify how the criteria should be applied to the search.\n| Value | Description |\n| --- | --- |\n| include | Articles covering the given criteria are included in the result. |\n| exclude | Articles covering the given criteria are excluded from the result. |\n\n",
                        "type": "string",
                        "default": "include",
                        "enum": [
                          "include",
                          "exclude"
                        ],
                        "example": "include"
                      },
                      "phrases": {
                        "description": "Phrases to be used in the criteria.",
                        "type": "array",
                        "nullable": false,
                        "items": {
                          "type": "string",
                          "maxLength": 100
                        },
                        "minItems": 1,
                        "maxItems": 16,
                        "example": [
                          "Lorem Ipsum"
                        ]
                      },
                      "minimumMatchScore": {
                        "type": "number",
                        "format": "real",
                        "default": 0.7,
                        "description": "Minimum match score for words in the news article.",
                        "example": 0.7
                      },
                      "scope": {
                        "description": "Restrict fulltext search to specific scope.\n| Value | Description |\n| --- | --- |\n| headline | Headline of the news article. |\n| body | Text body of the news article. |\n| all | Search in both headline and body. |\n\n",
                        "type": "string",
                        "default": "all",
                        "enum": [
                          "headline",
                          "body",
                          "all"
                        ],
                        "example": "all"
                      }
                    }
                  }
                }
              },
              "criteria": {
                "description": "Restrict the response of news articles to given include and exclude criteria.",
                "type": "array",
                "nullable": false,
                "items": {
                  "$ref": "#/components/schemas/PostNewsArticleSearchByTextDataCriteriaItems"
                },
                "maxItems": 8
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "The meta member contains the meta information of the request.",
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/AttributesMember"
              },
              "subscription": {
                "type": "object",
                "description": "Object defining the subscription attributes.",
                "properties": {
                  "minimumInterval": {
                    "type": "number",
                    "format": "int32",
                    "minimum": 0,
                    "exclusiveMinimum": false,
                    "maximum": 5000,
                    "exclusiveMaximum": false,
                    "default": 0,
                    "description": "Non-negative number of milliseconds to throttle the update rate from 0ms to 5000ms. Set to 0 for sending updates immediately.",
                    "example": 2670
                  }
                }
              },
              "pagination": {
                "type": "object",
                "description": "Pagination attributes for the cursor-based pagination strategy.",
                "properties": {
                  "cursor": {
                    "type": "string",
                    "maxLength": 50,
                    "description": "Starting point as returned in the attributes `pagination.next` or `pagination.previous` by a prior invocation of this endpoint, or undefined (default).",
                    "example": "Lorem ipsum"
                  },
                  "limit": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "exclusiveMinimum": false,
                    "maximum": 500,
                    "exclusiveMaximum": false,
                    "default": 20,
                    "description": "Non-negative maximum number of entries to return.",
                    "example": 20
                  }
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "PostNewsPublisherSearchByNameRequest": {
        "description": "Request Body",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "The data member contains the request's primary data.",
            "properties": {
              "searchValue": {
                "type": "string",
                "minLength": 2,
                "maxLength": 50,
                "description": "Restricts the search to publishers, which match the search value. The comparison for a match is case sensitive.",
                "example": "Lorem ipsum"
              },
              "matchType": {
                "type": "string",
                "description": "The match type that is applied to the search.\n| Value | Description |\n| --- | --- |\n| begins | Publisher name must begin with the searchValue. |\n| ends | Publisher name must end with the searchValue. |\n| contains | Publisher name must begin, end, or contain the searchValue. |\n\n",
                "enum": [
                  "begins",
                  "ends",
                  "contains"
                ],
                "example": "contains"
              },
              "filter": {
                "description": "Criteria that filter the items in the response list; only items that match all of the criteria are returned.",
                "type": "object",
                "properties": {
                  "distributor": {
                    "type": "object",
                    "description": "Filter for distributors. See endpoint `/news/distributor/list` for valid values.",
                    "properties": {
                      "id": {
                        "type": "number",
                        "format": "id32",
                        "description": "Identifier of distributor.",
                        "example": 5
                      }
                    }
                  },
                  "delivery": {
                    "type": "object",
                    "description": "Filter for deliveries. See endpoint `/basic/delivery/list` for valid values.",
                    "properties": {
                      "id": {
                        "type": "number",
                        "format": "id32",
                        "description": "Identifier of delivery.",
                        "example": 5
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "searchValue",
              "matchType"
            ]
          },
          "meta": {
            "type": "object",
            "description": "The meta member contains the meta information of the request.",
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/AttributesMember"
              },
              "sort": {
                "description": "Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 1 (possibly prefixed) attribute name(s) is allowed.\n| Value |\n| --- |\n| id |\n| -id |\n| name |\n| -name |\n\n",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "-id",
                    "name",
                    "-name"
                  ],
                  "example": "id"
                },
                "maxItems": 1,
                "uniqueItems": true,
                "default": [
                  "name"
                ]
              }
            }
          }
        }
      },
      "PostNewsArticleListByInstrumentDataArticlesInstrumentsItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "description": "Identifier of the instrument.",
            "type": "string",
            "format": "id64",
            "example": "209485"
          },
          "fsym": {
            "nullable": false,
            "type": "object",
            "description": "Instrument-level FactSet identifier of the financial instrument used primarily in FactSet products other than the MDG.",
            "properties": {
              "security": {
                "nullable": false,
                "type": "object",
                "description": "Security-level identifier.",
                "properties": {
                  "permanentIdentifier": {
                    "nullable": true,
                    "description": "FactSet Permanent Identifier for an instrument. The format is six alpha numeric characters, excluding vowels, with an S suffix (XXXXXX-S).",
                    "type": "string",
                    "example": "DJC0PL-S"
                  }
                }
              }
            }
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostNewsArticleListByInstrumentDataArticlesCategoriesItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "description": "Identifier of the category.",
            "type": "number",
            "format": "id32",
            "example": 2
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostNewsArticleListByChainDataArticlesInstrumentsItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "description": "Identifier of the instrument.",
            "type": "string",
            "format": "id64",
            "example": "209485"
          },
          "fsym": {
            "nullable": false,
            "type": "object",
            "description": "Instrument-level FactSet identifier of the financial instrument used primarily in FactSet products other than the MDG.",
            "properties": {
              "security": {
                "nullable": false,
                "type": "object",
                "description": "Security-level identifier.",
                "properties": {
                  "permanentIdentifier": {
                    "nullable": true,
                    "description": "FactSet Permanent Identifier for an instrument. The format is six alpha numeric characters, excluding vowels, with an S suffix (XXXXXX-S).",
                    "type": "string",
                    "example": "DJC0PL-S"
                  }
                }
              }
            }
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostNewsArticleListByIndexDataArticlesInstrumentsItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "description": "Identifier of the instrument.",
            "type": "string",
            "format": "id64",
            "example": "209485"
          },
          "fsym": {
            "nullable": false,
            "type": "object",
            "description": "Instrument-level FactSet identifier of the financial instrument used primarily in FactSet products other than the MDG.",
            "properties": {
              "security": {
                "nullable": false,
                "type": "object",
                "description": "Security-level identifier.",
                "properties": {
                  "permanentIdentifier": {
                    "nullable": true,
                    "description": "FactSet Permanent Identifier for an instrument. The format is six alpha numeric characters, excluding vowels, with an S suffix (XXXXXX-S).",
                    "type": "string",
                    "example": "DJC0PL-S"
                  }
                }
              }
            }
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostNewsArticleListByChainDataArticlesCategoriesItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "description": "Identifier of the category.",
            "type": "number",
            "format": "id32",
            "example": 5
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostNewsArticleListByIndexDataArticlesCategoriesItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "description": "Identifier of the category.",
            "type": "number",
            "format": "id32",
            "example": 5
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostNewsArticleListByInstrumentDataArticlesTypesItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "description": "Identifier of the type of news article.",
            "type": "number",
            "format": "id32",
            "example": 2
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostNewsArticleListByChainDataArticlesTypesItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "description": "Identifier of the type of news article.",
            "type": "number",
            "format": "id32",
            "example": 4
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostNewsArticleListByIndexDataArticlesTypesItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "description": "Identifier of the type of news article.",
            "type": "number",
            "format": "id32",
            "example": 5
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostNewsArticleListByMediaKindDataInstrumentsItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "description": "Identifier of the instrument.",
            "type": "string",
            "format": "id64",
            "example": "209485"
          },
          "fsym": {
            "nullable": false,
            "type": "object",
            "description": "Instrument-level FactSet identifier of the financial instrument used primarily in FactSet products other than the MDG.",
            "properties": {
              "security": {
                "nullable": false,
                "type": "object",
                "description": "Security-level identifier.",
                "properties": {
                  "permanentIdentifier": {
                    "nullable": true,
                    "description": "FactSet Permanent Identifier for an instrument. The format is six alpha numeric characters, excluding vowels, with an S suffix (XXXXXX-S).",
                    "type": "string",
                    "example": "DJC0PL-S"
                  }
                }
              }
            }
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostNewsArticleListByMediaKindDataCategoriesItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "description": "Identifier of the category.",
            "type": "number",
            "format": "id32",
            "example": 2
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostNewsArticleSearchByTextDataInstrumentsItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "description": "Identifier of the instrument.",
            "type": "string",
            "format": "id64",
            "example": "209485"
          },
          "fsym": {
            "nullable": false,
            "type": "object",
            "description": "Instrument-level FactSet identifier of the financial instrument used primarily in FactSet products other than the MDG.",
            "properties": {
              "security": {
                "nullable": false,
                "type": "object",
                "description": "Security-level identifier.",
                "properties": {
                  "permanentIdentifier": {
                    "nullable": true,
                    "description": "FactSet Permanent Identifier for an instrument. The format is six alpha numeric characters, excluding vowels, with an S suffix (XXXXXX-S).",
                    "type": "string",
                    "example": "DJC0PL-S"
                  }
                }
              }
            }
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostNewsArticleSearchByTextDataCategoriesItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "description": "Identifier of the category.",
            "type": "number",
            "format": "id32",
            "example": 4
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostNewsArticleListByMediaKindDataTypesItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "description": "Identifier of the type of news article.",
            "type": "number",
            "format": "id32",
            "example": 2
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "GetBasicRegionCountryGetByCodeDataSubdivisionsItems": {
        "type": "object",
        "nullable": false,
        "description": "Subdivisions of this country in unspecified order.",
        "properties": {
          "id": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Identifier of a country subdivision.",
            "example": 2
          },
          "name": {
            "nullable": true,
            "type": "string",
            "format": "localizedString",
            "description": "Name of the country subdivision.",
            "example": "Lorem ipsum"
          }
        }
      },
      "PostNewsArticleListByInstrumentDataIdentifiersItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "idInstrument": {
            "nullable": true,
            "type": "string",
            "format": "id64",
            "description": "MDG identifier of the instrument.",
            "example": "209485"
          },
          "sourceIdentifier": {
            "nullable": true,
            "type": "string",
            "description": "Identifier used in the request.",
            "example": "FDS-US"
          },
          "status": {
            "nullable": false,
            "type": "object",
            "description": "Error status for the requested identifier.",
            "properties": {
              "code": {
                "nullable": true,
                "type": "string",
                "description": "Code of the error condition.\n| Value | Description |\n| --- | --- |\n| none | No error. |\n| parameter | The provided identifier does not refer to a valid instrument level identifier. |\n| entitlement | Not entitled to see data for the identifier. |\n| identifierMapping | Unable to resolve the provided identifier. |\n\n",
                "example": "none",
                "enum": [
                  "none",
                  "parameter",
                  "entitlement",
                  "identifierMapping"
                ]
              },
              "identifier": {
                "nullable": true,
                "type": "string",
                "description": "Provided identifier.",
                "example": "FDS-US"
              },
              "details": {
                "nullable": true,
                "type": "string",
                "description": "A human-readable, unstructured explanation specific to this occurrence of the problem.",
                "example": "Lorem ipsum"
              },
              "encryptedDetails": {
                "nullable": true,
                "type": "string",
                "description": "Base64-encoded internal details about the error.",
                "example": "Lorem ipsum"
              }
            }
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostNewsArticleSearchByTextDataTypesItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "description": "Identifier of the type of news article.",
            "type": "number",
            "format": "id32",
            "example": 5
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostNewsArticleListDataInstrumentsItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "description": "Identifier of the instrument.",
            "type": "string",
            "format": "id64",
            "example": "209485"
          },
          "fsym": {
            "nullable": false,
            "type": "object",
            "description": "Instrument-level FactSet identifier of the financial instrument used primarily in FactSet products other than the MDG.",
            "properties": {
              "security": {
                "nullable": false,
                "type": "object",
                "description": "Security-level identifier.",
                "properties": {
                  "permanentIdentifier": {
                    "nullable": true,
                    "description": "FactSet Permanent Identifier for an instrument. The format is six alpha numeric characters, excluding vowels, with an S suffix (XXXXXX-S).",
                    "type": "string",
                    "example": "DJC0PL-S"
                  }
                }
              }
            }
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostNewsArticleListByInstrumentDataArticlesItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "code": {
            "nullable": true,
            "description": "Identifier of the news article.",
            "type": "string",
            "example": "Lorem ipsum"
          },
          "time": {
            "nullable": true,
            "description": "Date and time of the news article.",
            "type": "string",
            "format": "date-time",
            "example": "2024-12-24T18:00:00.000000Z"
          },
          "headline": {
            "nullable": true,
            "description": "Headline of the news article represented as text with HTML entity encoding but without HTML tags.",
            "type": "string",
            "example": "Lorem ipsum"
          },
          "summary": {
            "nullable": true,
            "description": "Textual summary of the body of the news article or `null` if no summary was provided by the news article distributor.",
            "type": "string",
            "example": "Lorem ipsum"
          },
          "types": {
            "nullable": false,
            "description": "Types of news article. See endpoint `/news/article/type/list` for possible values.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostNewsArticleListByInstrumentDataArticlesTypesItems"
            }
          },
          "language": {
            "nullable": false,
            "description": "Language of the news article. See endpoint `/basic/language/list` for possible values.",
            "type": "object",
            "properties": {
              "id": {
                "nullable": true,
                "description": "Identifier of the language.",
                "type": "number",
                "format": "id32",
                "example": 1
              }
            }
          },
          "distributor": {
            "nullable": false,
            "description": "Distributor of the news article. See endpoint `/news/distributor/list` for possible values.",
            "type": "object",
            "properties": {
              "id": {
                "nullable": true,
                "description": "Identifier of the distributor.",
                "type": "number",
                "format": "id32",
                "example": 1
              }
            }
          },
          "publisher": {
            "nullable": false,
            "description": "Publisher of the news article. See endpoint `/news/publisher/list` for possible values.",
            "type": "object",
            "properties": {
              "id": {
                "nullable": true,
                "description": "Identifier of the publisher.",
                "type": "number",
                "format": "id32",
                "example": 2
              }
            }
          },
          "categories": {
            "nullable": false,
            "description": "Categories related to the news article. See endpoint `/category/list` for possible values.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostNewsArticleListByInstrumentDataArticlesCategoriesItems"
            }
          },
          "chain": {
            "nullable": false,
            "description": "Article chain.",
            "type": "object",
            "properties": {
              "id": {
                "nullable": true,
                "description": "Identifier of the news article chain.",
                "type": "string",
                "format": "id64",
                "example": "3003"
              }
            }
          },
          "instruments": {
            "nullable": false,
            "description": "Set of stock instruments related to the article. The set is not updated in the course of corporate actions, e.g. when the related company obtains a new instrument after a spin-off.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostNewsArticleListByInstrumentDataArticlesInstrumentsItems"
            }
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostNewsArticleListDataCategoriesItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "description": "Identifier of the category.",
            "type": "number",
            "format": "id32",
            "example": 2
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostNewsArticleListByIndexDataIdentifiersItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "idNotation": {
            "nullable": true,
            "type": "string",
            "format": "id64",
            "description": "MDG identifier of the listing.",
            "example": "1532562"
          },
          "sourceIdentifier": {
            "nullable": true,
            "type": "string",
            "description": "Identifier used in the request.",
            "example": "FDS-US"
          },
          "status": {
            "nullable": false,
            "type": "object",
            "description": "Error status for the requested identifier.",
            "properties": {
              "code": {
                "nullable": true,
                "type": "string",
                "description": "Code of the error condition.\n| Value | Description |\n| --- | --- |\n| none | No error. |\n| parameter | The provided identifier does not refer to a valid listing level identifier. |\n| entitlement | Not entitled to see data for the identifier. |\n| identifierMapping | Unable to resolve the provided identifier. |\n\n",
                "example": "none",
                "enum": [
                  "none",
                  "parameter",
                  "entitlement",
                  "identifierMapping"
                ]
              },
              "identifier": {
                "nullable": true,
                "type": "string",
                "description": "Provided identifier.",
                "example": "FDS-US"
              },
              "details": {
                "nullable": true,
                "type": "string",
                "description": "A human-readable, unstructured explanation specific to this occurrence of the problem.",
                "example": "Lorem ipsum"
              },
              "encryptedDetails": {
                "nullable": true,
                "type": "string",
                "description": "Base64-encoded internal details about the error.",
                "example": "Lorem ipsum"
              }
            }
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "GetBasicRegionCountryGetDataSubdivisionsItems": {
        "type": "object",
        "nullable": false,
        "description": "Subdivisions of a country in unspecified order.",
        "properties": {
          "id": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Identifier of a country subdivision.",
            "example": 5
          },
          "name": {
            "nullable": true,
            "type": "string",
            "format": "localizedString",
            "description": "Name of the country subdivision.",
            "example": "Lorem ipsum"
          }
        }
      },
      "GetBasicRegionContinentGetDataCountriesItems": {
        "type": "object",
        "nullable": false,
        "description": "Countries of this continent.",
        "properties": {
          "id": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Identifier of a country.",
            "example": 3
          },
          "name": {
            "nullable": true,
            "type": "string",
            "format": "localizedString",
            "description": "Name of a country.",
            "example": "Lorem ipsum"
          }
        }
      },
      "PostNewsArticleListByChainDataArticlesItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "code": {
            "nullable": true,
            "description": "Identifier of the news article.",
            "type": "string",
            "example": "Lorem ipsum"
          },
          "time": {
            "nullable": true,
            "description": "Date and time of the news article.",
            "type": "string",
            "format": "date-time",
            "example": "2024-12-24T18:00:00.000000Z"
          },
          "headline": {
            "nullable": true,
            "description": "Headline of the news article represented as text with HTML entity encoding but without HTML tags.",
            "type": "string",
            "example": "Lorem ipsum"
          },
          "summary": {
            "nullable": true,
            "description": "Textual summary of the body of the news article or `null` if no summary was provided by the news article distributor.",
            "type": "string",
            "example": "Lorem ipsum"
          },
          "types": {
            "nullable": false,
            "description": "Types of news article. See endpoint `/news/article/type/list` for possible values.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostNewsArticleListByChainDataArticlesTypesItems"
            }
          },
          "language": {
            "nullable": false,
            "description": "Language of the news article. See endpoint `/basic/language/list` for possible values.",
            "type": "object",
            "properties": {
              "id": {
                "nullable": true,
                "description": "Identifier of the language.",
                "type": "number",
                "format": "id32",
                "example": 3
              }
            }
          },
          "categories": {
            "nullable": false,
            "description": "Categories related to the news article. See endpoint `/category/list` for possible values.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostNewsArticleListByChainDataArticlesCategoriesItems"
            }
          },
          "instruments": {
            "nullable": false,
            "description": "Set of stock instruments related to the article. The set is not updated in the course of corporate actions, e.g. when the related company obtains a new instrument after a spin-off.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostNewsArticleListByChainDataArticlesInstrumentsItems"
            }
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostNewsArticleListByIndexDataArticlesItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "code": {
            "nullable": true,
            "description": "Identifier of the news article.",
            "type": "string",
            "example": "Lorem ipsum"
          },
          "time": {
            "nullable": true,
            "description": "Date and time of the news article.",
            "type": "string",
            "format": "date-time",
            "example": "2024-01-01T00:00:00.000Z"
          },
          "headline": {
            "nullable": true,
            "description": "Headline of the news article represented as text with HTML entity encoding but without HTML tags.",
            "type": "string",
            "example": "Lorem ipsum"
          },
          "summary": {
            "nullable": true,
            "description": "Textual summary of the body of the news article or `null` if no summary was provided by the news article distributor.",
            "type": "string",
            "example": "Lorem ipsum"
          },
          "types": {
            "nullable": false,
            "description": "Types of news article. See endpoint `/news/article/type/list` for possible values.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostNewsArticleListByIndexDataArticlesTypesItems"
            }
          },
          "language": {
            "nullable": false,
            "description": "Language of the news article. See endpoint `/basic/language/list` for possible values.",
            "type": "object",
            "properties": {
              "id": {
                "nullable": true,
                "description": "Identifier of the language.",
                "type": "number",
                "format": "id32",
                "example": 2
              }
            }
          },
          "distributor": {
            "nullable": false,
            "description": "Distributor of the news article. See endpoint `/news/distributor/list` for possible values.",
            "type": "object",
            "properties": {
              "id": {
                "nullable": true,
                "description": "Identifier of the distributor.",
                "type": "number",
                "format": "id32",
                "example": 2
              }
            }
          },
          "publisher": {
            "nullable": false,
            "description": "Publisher of the news article. See endpoint `/news/publisher/list` for possible values.",
            "type": "object",
            "properties": {
              "id": {
                "nullable": true,
                "description": "Identifier of the publisher.",
                "type": "number",
                "format": "id32",
                "example": 1
              }
            }
          },
          "categories": {
            "nullable": false,
            "description": "Categories related to the news article. See endpoint `/category/list` for possible values.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostNewsArticleListByIndexDataArticlesCategoriesItems"
            }
          },
          "chain": {
            "nullable": false,
            "description": "Article chain.",
            "type": "object",
            "properties": {
              "id": {
                "nullable": true,
                "description": "Identifier of the news article chain.",
                "type": "string",
                "format": "id64",
                "example": "5005"
              }
            }
          },
          "instruments": {
            "nullable": false,
            "description": "Set of stock instruments related to the article. The set is not updated in the course of corporate actions, e.g. when the related company obtains a new instrument after a spin-off.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostNewsArticleListByIndexDataArticlesInstrumentsItems"
            }
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "GetCategoryListBySystemDataCategoriesItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Identifier of the category.",
            "example": 5
          },
          "code": {
            "nullable": true,
            "type": "string",
            "description": "Code commonly used for this category.",
            "example": "Lorem ipsum"
          },
          "name": {
            "nullable": true,
            "type": "string",
            "format": "localizedString",
            "description": "Name of the category.",
            "example": "Lorem ipsum"
          },
          "description": {
            "nullable": true,
            "type": "string",
            "format": "localizedString",
            "description": "Description of the category.",
            "example": "Lorem ipsum"
          },
          "active": {
            "nullable": true,
            "type": "boolean",
            "description": "Indicates whether this category is active.",
            "example": true
          },
          "level": {
            "nullable": false,
            "type": "object",
            "description": "Category level.",
            "properties": {
              "id": {
                "nullable": true,
                "type": "number",
                "format": "id32",
                "description": "Identifier of the category level.",
                "example": 4
              },
              "number": {
                "nullable": true,
                "type": "number",
                "format": "int32",
                "description": "Number of the category level starting with 1, indicating the distance to the root of the category hierarchy.",
                "example": -2
              }
            }
          },
          "parent": {
            "nullable": false,
            "type": "object",
            "description": "Parent category. The attributes of the parent category are `null` if this category is on the first level.",
            "properties": {
              "id": {
                "nullable": true,
                "type": "number",
                "format": "id32",
                "description": "Identifier of the category.",
                "example": 5
              }
            }
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostNewsArticleListDataTypesItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "description": "Identifier of the type of news article.",
            "type": "number",
            "format": "id32",
            "example": 3
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "GetCategoryListByLevelDataCategoriesItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Identifier of the category.",
            "example": 5
          },
          "code": {
            "nullable": true,
            "type": "string",
            "description": "Code commonly used for this category.",
            "example": "Lorem ipsum"
          },
          "name": {
            "nullable": true,
            "type": "string",
            "format": "localizedString",
            "description": "Name of the category.",
            "example": "Lorem ipsum"
          },
          "description": {
            "nullable": true,
            "type": "string",
            "format": "localizedString",
            "description": "Description of the category.",
            "example": "Lorem ipsum"
          },
          "active": {
            "nullable": true,
            "type": "boolean",
            "description": "Indicates whether this category is active.",
            "example": false
          },
          "parent": {
            "nullable": false,
            "type": "object",
            "description": "Parent category. The attributes of the parent category are `null` if this category is on the first level.",
            "properties": {
              "id": {
                "nullable": true,
                "type": "number",
                "format": "id32",
                "description": "Identifier of the category.",
                "example": 5
              },
              "name": {
                "nullable": true,
                "type": "string",
                "format": "localizedString",
                "description": "Name of the category.",
                "example": "Lorem ipsum"
              }
            }
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "GetBasicRegionGetDataNestedRegionsItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Identifier of a region.",
            "example": 4
          },
          "code": {
            "nullable": true,
            "type": "string",
            "description": "ISO 3166-1 alpha-2 code of the country. This attribute is set for each country, may be set for miscellaneous regions and is empty for regions of other types.",
            "example": "DE"
          },
          "name": {
            "nullable": true,
            "type": "string",
            "format": "localizedString",
            "description": "Name of the region.",
            "example": "Lorem ipsum"
          },
          "type": {
            "nullable": true,
            "type": "string",
            "description": "Type of the region.\n| Value | Description |\n| --- | --- |\n| continent | Regions that are considered to be a continent in the context of the Market Data Gateway. |\n| country | A region that represents a country that has been assigned an official ISO 3166-1 code. |\n| subdivision | A region that represents a subdivision of a country that has been assigned an official ISO 3166-2 code. |\n| misc | A miscellaneous region represents a region that is neither a continent, nor a country, nor a subdivision of a country. |\n| compound | A compound miscellaneous region consists of member regions which are uniquely and undoubtedly defined. |\n\n",
            "enum": [
              "continent",
              "country",
              "subdivision",
              "misc",
              "compound"
            ],
            "example": "subdivision"
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "GetCategoryPathGetDataCategoriesItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Identifier of the category.",
            "example": 2
          },
          "name": {
            "nullable": true,
            "type": "string",
            "format": "localizedString",
            "description": "Name of the category.",
            "example": "Lorem ipsum"
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "GetNewsArticleGetDataInstrumentsItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "description": "Identifier of the instrument.",
            "type": "string",
            "format": "id64",
            "example": "209485"
          },
          "fsym": {
            "nullable": false,
            "type": "object",
            "description": "Instrument-level FactSet identifier of the financial instrument used primarily in FactSet products other than the MDG.",
            "properties": {
              "security": {
                "nullable": false,
                "type": "object",
                "description": "Security-level identifier.",
                "properties": {
                  "permanentIdentifier": {
                    "nullable": true,
                    "description": "FactSet Permanent Identifier for an instrument. The format is six alpha numeric characters, excluding vowels, with an S suffix (XXXXXX-S).",
                    "type": "string",
                    "example": "DJC0PL-S"
                  }
                }
              }
            }
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "GetNewsArticleGetDataCategoriesItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "description": "Identifier of the category.",
            "type": "number",
            "format": "id32",
            "example": 4
          },
          "name": {
            "nullable": true,
            "description": "Name of the category.",
            "type": "string",
            "format": "localizedString",
            "example": "Lorem ipsum"
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "GetCategorySystemGetDataLevelsItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Identifier of the level.",
            "example": 2
          },
          "name": {
            "nullable": true,
            "type": "string",
            "format": "localizedString",
            "description": "Name of the level.",
            "example": "Lorem ipsum"
          },
          "number": {
            "nullable": true,
            "type": "number",
            "format": "int32",
            "description": "Number of the category level, starting with 1.",
            "example": 132
          },
          "hasLeafCategories": {
            "nullable": true,
            "type": "boolean",
            "description": "Indicates whether the category level has leaf categories.",
            "example": true
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "GetCategoryListDataCategoriesItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Identifier of the category.",
            "example": 5
          },
          "code": {
            "nullable": true,
            "type": "string",
            "description": "Code commonly used for this category.",
            "example": "Lorem ipsum"
          },
          "name": {
            "nullable": true,
            "type": "string",
            "format": "localizedString",
            "description": "Name of the category.",
            "example": "Lorem ipsum"
          },
          "description": {
            "nullable": true,
            "type": "string",
            "format": "localizedString",
            "description": "Description of the category.",
            "example": "Lorem ipsum"
          },
          "active": {
            "nullable": true,
            "type": "boolean",
            "description": "Indicates whether this category is active.",
            "example": false
          },
          "level": {
            "nullable": false,
            "type": "object",
            "description": "Category level.",
            "properties": {
              "id": {
                "nullable": true,
                "type": "number",
                "format": "id32",
                "description": "Identifier of the category level.",
                "example": 3
              },
              "name": {
                "nullable": true,
                "type": "string",
                "format": "localizedString",
                "description": "Name of the category level.",
                "example": "Lorem ipsum"
              },
              "number": {
                "nullable": true,
                "type": "number",
                "format": "int32",
                "description": "Number of the category level starting with 1, indicating the distance to the root of the category hierarchy.",
                "example": -2
              }
            }
          },
          "parent": {
            "nullable": false,
            "type": "object",
            "description": "Parent category. The attributes of the parent category are `null` if this category is on the first level.",
            "properties": {
              "id": {
                "nullable": true,
                "type": "number",
                "format": "id32",
                "description": "Identifier of the category.",
                "example": 1
              },
              "name": {
                "nullable": true,
                "type": "string",
                "format": "localizedString",
                "description": "Name of the category.",
                "example": "Lorem ipsum"
              },
              "level": {
                "nullable": false,
                "type": "object",
                "description": "Parent level.",
                "properties": {
                  "id": {
                    "nullable": true,
                    "type": "number",
                    "format": "id32",
                    "description": "Identifier of the category level.",
                    "example": 2
                  },
                  "name": {
                    "nullable": true,
                    "type": "string",
                    "format": "localizedString",
                    "description": "Name of the category level.",
                    "example": "Lorem ipsum"
                  }
                }
              }
            }
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "GetNewsArticleGetDataTypesItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "description": "Identifier of the type of news article.",
            "type": "number",
            "format": "id32",
            "example": 5
          },
          "name": {
            "nullable": true,
            "description": "Name of the news article type.",
            "type": "string",
            "format": "localizedString",
            "example": "Lorem ipsum"
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "GetNewsArticleGetDataMediaItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "url": {
            "nullable": true,
            "type": "string",
            "format": "url",
            "description": "URL of the media element. The URL is publicly available and hosted by either the publisher, the distributor, or FactSet.",
            "example": "https://developer.factset.com"
          },
          "mimeType": {
            "nullable": true,
            "description": "MIME type of the data of the media element.",
            "type": "string",
            "example": "Lorem ipsum"
          },
          "caption": {
            "nullable": true,
            "description": "Caption text that can be displayed with the media element. Empty if no caption is available for this media element.",
            "type": "string",
            "example": "Lorem ipsum"
          },
          "alternativeText": {
            "nullable": true,
            "description": "A short description of the media element that can be shown instead of the media element itself.",
            "type": "string",
            "example": "Lorem ipsum"
          },
          "width": {
            "nullable": true,
            "description": "Width of the media element in pixels if applicable.",
            "type": "number",
            "format": "int32",
            "example": 132
          },
          "height": {
            "nullable": true,
            "description": "Height of the media element in pixels if applicable.",
            "type": "number",
            "format": "int32",
            "example": 232
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "GetBasicValueUnitCurrencyFractionalListDataItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Identifier of the fractional currency, which is a value unit.",
            "example": 5
          },
          "code": {
            "nullable": true,
            "type": "string",
            "description": "Code of the fractional currency such as GBp (for British pence), USc (for U.S. cents), EUc for (Euro cent).",
            "example": "Lorem ipsum"
          },
          "name": {
            "nullable": true,
            "type": "string",
            "format": "localizedString",
            "description": "Name of the fractional currency.",
            "example": "Lorem ipsum"
          },
          "factor": {
            "nullable": true,
            "type": "number",
            "format": "real",
            "description": "Conversion factor between the fractional and its main currency. For example, the value 100 indicates that 100 US cents are equivalent to one US dollar.",
            "example": 4.04
          },
          "mainCurrency": {
            "nullable": false,
            "type": "object",
            "description": "Main currency corresponding to the fractional currency.",
            "properties": {
              "id": {
                "nullable": true,
                "type": "number",
                "format": "id32",
                "description": "Identifier of the main currency of the fractional currency.",
                "example": 4
              },
              "code": {
                "nullable": true,
                "type": "string",
                "description": "Code of the currency: If assigned, a code according to ISO 4217, otherwise a local code.",
                "example": "USD"
              },
              "isoCode": {
                "nullable": true,
                "type": "string",
                "description": "ISO 4217 code of the currency.",
                "example": "EUR"
              },
              "name": {
                "nullable": true,
                "type": "string",
                "format": "localizedString",
                "description": "Name of the main currency.",
                "example": "Lorem ipsum"
              },
              "active": {
                "nullable": true,
                "type": "boolean",
                "description": "Indicates whether the currency is active.",
                "example": false
              }
            }
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostBasicValueUnitCurrencyMainListDataItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Identifier of a currency.",
            "example": 1
          },
          "code": {
            "nullable": true,
            "type": "string",
            "description": "Code of the currency: If assigned, a code according to ISO 4217, otherwise a local code.",
            "example": "USD"
          },
          "isoCode": {
            "nullable": true,
            "type": "string",
            "description": "ISO 4217 code of the currency.",
            "example": "EUR"
          },
          "name": {
            "nullable": true,
            "type": "string",
            "format": "localizedString",
            "description": "Name of the currency.",
            "example": "Lorem ipsum"
          },
          "active": {
            "nullable": true,
            "type": "boolean",
            "description": "Indicates whether the currency is active.",
            "example": false
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "GetNewsPublisherListByDistributorDataItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Identifier of the publisher.",
            "example": 3
          },
          "name": {
            "nullable": true,
            "type": "string",
            "description": "Name of the publisher.",
            "example": "Lorem ipsum"
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "GetBasicValueUnitAlternativeListDataItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Identifier of an alternative unit.",
            "example": 3
          },
          "code": {
            "nullable": true,
            "type": "string",
            "description": "Code of the alternative unit.",
            "example": "Lorem ipsum"
          },
          "name": {
            "nullable": true,
            "type": "string",
            "format": "localizedString",
            "description": "Name of the alternative unit.",
            "example": "Lorem ipsum"
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostBasicBackgroundTextTypeListDataItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Identifier of the type.",
            "example": 2
          },
          "name": {
            "nullable": true,
            "type": "string",
            "description": "English name of the type.",
            "example": "Lorem ipsum"
          },
          "description": {
            "nullable": true,
            "type": "string",
            "description": "English description of the type.",
            "example": "Lorem ipsum"
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostBasicValueUnitCurrencyListDataItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Identifier of a currency.",
            "example": 1
          },
          "code": {
            "nullable": true,
            "type": "string",
            "description": "Code of the currency: If assigned, a code according to ISO 4217, otherwise a local code, for a main currency; a code such as GBp (for British pence) for a fractional currency.",
            "example": "EUR"
          },
          "isoCode": {
            "nullable": true,
            "type": "string",
            "description": "ISO 4217 code of the value unit. Empty if the ISO 4217 standard does not define a code for the currency.",
            "example": "EUR"
          },
          "name": {
            "nullable": true,
            "type": "string",
            "format": "localizedString",
            "description": "Name of the currency.",
            "example": "Lorem ipsum"
          },
          "type": {
            "nullable": true,
            "type": "string",
            "description": "Type of the currency.\n| Value | Description |\n| --- | --- |\n| main | Currency that is a main currency. |\n| fractional | Currency that is a fractional currency. |\n\n",
            "enum": [
              "main",
              "fractional"
            ],
            "example": "fractional"
          },
          "active": {
            "nullable": true,
            "type": "boolean",
            "description": "Indicates whether the currency is active.",
            "example": false
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostNewsArticleListByMediaKindDataItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "code": {
            "nullable": true,
            "description": "Identifier of the news article.",
            "type": "string",
            "example": "Lorem ipsum"
          },
          "time": {
            "nullable": true,
            "description": "Date and time of the news article.",
            "type": "string",
            "format": "date-time",
            "example": "2024-01-01T00:00:00.000Z"
          },
          "headline": {
            "nullable": true,
            "description": "Headline of the news article represented as text with HTML entity encoding but without HTML tags.",
            "type": "string",
            "example": "Lorem ipsum"
          },
          "summary": {
            "nullable": true,
            "description": "Textual summary of the body of the news article or `null` if no summary was provided by the news article distributor.",
            "type": "string",
            "example": "Lorem ipsum"
          },
          "types": {
            "nullable": false,
            "description": "Types of news article. See endpoint `/news/article/type/list` for possible values.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostNewsArticleListByMediaKindDataTypesItems"
            }
          },
          "language": {
            "nullable": false,
            "description": "Language of the news article. See endpoint `/basic/language/list` for possible values.",
            "type": "object",
            "properties": {
              "id": {
                "nullable": true,
                "description": "Identifier of the language.",
                "type": "number",
                "format": "id32",
                "example": 4
              }
            }
          },
          "distributor": {
            "nullable": false,
            "description": "Distributor of the news article. See endpoint `/news/distributor/list` for possible values.",
            "type": "object",
            "properties": {
              "id": {
                "nullable": true,
                "description": "Identifier of the distributor.",
                "type": "number",
                "format": "id32",
                "example": 4
              }
            }
          },
          "publisher": {
            "nullable": false,
            "description": "Publisher of the news article. See endpoint `/news/publisher/list` for possible values.",
            "type": "object",
            "properties": {
              "id": {
                "nullable": true,
                "description": "Identifier of the publisher.",
                "type": "number",
                "format": "id32",
                "example": 3
              }
            }
          },
          "categories": {
            "nullable": false,
            "description": "Categories related to the news article. See endpoint `/category/list` for possible values.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostNewsArticleListByMediaKindDataCategoriesItems"
            }
          },
          "chain": {
            "nullable": false,
            "description": "Article chain.",
            "type": "object",
            "properties": {
              "id": {
                "nullable": true,
                "description": "Identifier of the news article chain.",
                "type": "string",
                "format": "id64",
                "example": "1001"
              }
            }
          },
          "instruments": {
            "nullable": false,
            "description": "Set of stock instruments related to the article. The set is not updated in the course of corporate actions, e.g. when the related company obtains a new instrument after a spin-off.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostNewsArticleListByMediaKindDataInstrumentsItems"
            }
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostNewsPublisherSearchByNameDataItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Identifier of the publisher.",
            "example": 5
          },
          "name": {
            "nullable": true,
            "type": "string",
            "description": "Name of the publisher.",
            "example": "Lorem ipsum"
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "GetBasicRegionContinentListDataItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Identifier of a continent.",
            "example": 2
          },
          "name": {
            "nullable": true,
            "type": "string",
            "format": "localizedString",
            "description": "Name of the continent.",
            "example": "Lorem ipsum"
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostNewsArticleSearchByTextDataItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "code": {
            "nullable": true,
            "description": "Identifier of the news article.",
            "type": "string",
            "example": "Lorem ipsum"
          },
          "time": {
            "nullable": true,
            "description": "Date and time of the news article.",
            "type": "string",
            "format": "date-time",
            "example": "2024-12-24T18:00:00.000000Z"
          },
          "headline": {
            "nullable": true,
            "description": "Headline of the news article represented as text with HTML entity encoding but without HTML tags.",
            "type": "string",
            "example": "Lorem ipsum"
          },
          "summary": {
            "nullable": true,
            "description": "Textual summary of the body of the news article or `null` if no summary was provided by the news article distributor.",
            "type": "string",
            "example": "Lorem ipsum"
          },
          "types": {
            "nullable": false,
            "description": "Types of news article. See endpoint `/news/article/type/list` for possible values.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostNewsArticleSearchByTextDataTypesItems"
            }
          },
          "language": {
            "nullable": false,
            "description": "Language of the news article. See endpoint `/basic/language/list` for possible values.",
            "type": "object",
            "properties": {
              "id": {
                "nullable": true,
                "description": "Identifier of the language.",
                "type": "number",
                "format": "id32",
                "example": 2
              }
            }
          },
          "distributor": {
            "nullable": false,
            "description": "Distributor of the news article. See endpoint `/news/distributor/list` for possible values.",
            "type": "object",
            "properties": {
              "id": {
                "nullable": true,
                "description": "Identifier of the distributor.",
                "type": "number",
                "format": "id32",
                "example": 4
              }
            }
          },
          "publisher": {
            "nullable": false,
            "description": "Publisher of the news article. See endpoint `/news/publisher/list` for possible values.",
            "type": "object",
            "properties": {
              "id": {
                "nullable": true,
                "description": "Identifier of the publisher.",
                "type": "number",
                "format": "id32",
                "example": 5
              }
            }
          },
          "categories": {
            "nullable": false,
            "description": "Categories related to the news article. See endpoint `/category/list` for possible values.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostNewsArticleSearchByTextDataCategoriesItems"
            }
          },
          "chain": {
            "nullable": false,
            "description": "Article chain.",
            "type": "object",
            "properties": {
              "id": {
                "nullable": true,
                "description": "Identifier of the news article chain.",
                "type": "string",
                "format": "id64",
                "example": "3003"
              }
            }
          },
          "instruments": {
            "nullable": false,
            "description": "Set of stock instruments related to the article. The set is not updated in the course of corporate actions, e.g. when the related company obtains a new instrument after a spin-off.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostNewsArticleSearchByTextDataInstrumentsItems"
            }
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "GetBasicBenchmarkTypeListDataItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Identifier of a benchmark type.",
            "example": 3
          },
          "name": {
            "nullable": true,
            "type": "string",
            "format": "localizedString",
            "description": "Name of the benchmark type.",
            "example": "Lorem ipsum"
          },
          "description": {
            "nullable": true,
            "type": "string",
            "format": "localizedString",
            "description": "Description of the benchmark type.",
            "example": "Lorem ipsum"
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "GetBasicFrequencyTypeListDataItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Identifier of the type.",
            "example": 1
          },
          "name": {
            "nullable": true,
            "type": "string",
            "format": "localizedString",
            "description": "Name of the type.",
            "example": "Lorem ipsum"
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostBasicMicOperatingListDataItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Identifier of the operating MIC.",
            "example": 3
          },
          "isoCode": {
            "nullable": true,
            "type": "string",
            "description": "ISO 10383 code of the operating MIC.",
            "example": "Lorem ipsum"
          },
          "name": {
            "nullable": true,
            "type": "string",
            "description": "English name of the operating MIC.",
            "example": "Lorem ipsum"
          },
          "active": {
            "nullable": true,
            "type": "boolean",
            "description": "Indicates whether the operating MIC is active.",
            "example": false
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "GetBasicRegionCountryListDataItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Identifier of a country.",
            "example": 5
          },
          "code": {
            "nullable": true,
            "type": "string",
            "description": "ISO 3166-1 alpha-2 code of the country.",
            "example": "DE"
          },
          "name": {
            "nullable": true,
            "type": "string",
            "format": "localizedString",
            "description": "Name of the country.",
            "example": "Lorem ipsum"
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "GetCategoryInstrumentListDataItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "type": "string",
            "format": "id64",
            "description": "Identifier of the instrument.",
            "example": "209485"
          },
          "fsym": {
            "nullable": false,
            "type": "object",
            "description": "Instrument-level FactSet identifier of the financial instrument used primarily in FactSet products other than the MDG.",
            "properties": {
              "security": {
                "nullable": false,
                "type": "object",
                "description": "Security-level identifier.",
                "properties": {
                  "permanentIdentifier": {
                    "nullable": true,
                    "type": "string",
                    "description": "FactSet Permanent Identifier for an instrument. The format is six alpha numeric characters, excluding vowels, with an S suffix (XXXXXX-S).",
                    "example": "DJC0PL-S"
                  }
                }
              }
            }
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "GetCategorySystemTypeListDataItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Identifier of the category system type.",
            "example": 4
          },
          "name": {
            "nullable": true,
            "type": "string",
            "format": "localizedString",
            "description": "Name of the category system type.",
            "example": "Lorem ipsum"
          },
          "description": {
            "nullable": true,
            "type": "string",
            "format": "localizedString",
            "description": "Description of the category system type.",
            "example": "Lorem ipsum"
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "GetBasicMarketGroupListDataItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Identifier of the market group.",
            "example": 5
          },
          "name": {
            "nullable": true,
            "type": "string",
            "format": "localizedString",
            "description": "Name of the market group.",
            "example": "Lorem ipsum"
          },
          "shortName": {
            "nullable": true,
            "type": "string",
            "format": "localizedString",
            "description": "Short name of the market group.",
            "example": "Lorem ipsum"
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "GetBasicAssetClassListDataItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Identifier of an asset class.",
            "example": 5
          },
          "code": {
            "nullable": true,
            "type": "string",
            "description": "Code of the asset class.",
            "example": "Lorem ipsum"
          },
          "description": {
            "nullable": true,
            "type": "string",
            "description": "Description of the asset class in English.",
            "example": "Lorem ipsum"
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "GetBasicMarketTypeListDataItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Identifier of the market type.",
            "example": 5
          },
          "name": {
            "nullable": true,
            "type": "string",
            "format": "localizedString",
            "description": "Name of the market type.",
            "example": "Lorem ipsum"
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostBasicMediaTypeListDataItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "description": "Identifier of an Internet media type.",
            "type": "number",
            "format": "id32",
            "example": 3
          },
          "name": {
            "nullable": true,
            "description": "Name according to the Internet Assigned Numbers Authority.",
            "type": "string",
            "example": "Lorem ipsum"
          },
          "description": {
            "nullable": true,
            "description": "English description of the Internet media type.",
            "type": "string",
            "example": "Lorem ipsum"
          },
          "kind": {
            "nullable": false,
            "description": "Kind of media. See endpoint `/basic/media/kind/list` for possible values.",
            "type": "object",
            "properties": {
              "id": {
                "nullable": true,
                "description": "Identifier of the media kind.",
                "type": "number",
                "format": "id32",
                "example": 4
              },
              "name": {
                "nullable": true,
                "description": "English name of the media kind.",
                "type": "string",
                "example": "Lorem ipsum"
              }
            }
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostBasicValueUnitListDataItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Identifier of a value unit.",
            "example": 4
          },
          "code": {
            "nullable": true,
            "type": "string",
            "description": "Code of the value unit: If assigned, a code according to ISO 4217, otherwise a local code, for a main currency; a code such as GBp (for British pence) for a fractional currency; or a code such as PT (points) for non-currency value units.",
            "example": "USD"
          },
          "isoCode": {
            "nullable": true,
            "type": "string",
            "description": "ISO 4217 code of the value unit. Empty if the ISO 4217 standard does not define a code for the currency.",
            "example": "EUR"
          },
          "name": {
            "nullable": true,
            "type": "string",
            "format": "localizedString",
            "description": "Name of the value unit.",
            "example": "Lorem ipsum"
          },
          "type": {
            "nullable": true,
            "type": "string",
            "description": "Type of the value unit.\n| Value | Description |\n| --- | --- |\n| main | Main currency. |\n| fractional | Fractional currency. |\n| alternative | Alternative value unit. |\n\n",
            "enum": [
              "main",
              "fractional",
              "alternative"
            ],
            "example": "alternative"
          },
          "active": {
            "nullable": true,
            "type": "boolean",
            "description": "Indicates whether the currency is active.",
            "example": false
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "GetCategoryDatasetListDataItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Identifier of the dataset.",
            "example": 4
          },
          "name": {
            "nullable": true,
            "type": "string",
            "format": "localizedString",
            "description": "Name of the dataset.",
            "example": "Lorem ipsum"
          },
          "depth": {
            "nullable": true,
            "type": "number",
            "format": "int32",
            "description": "Number of levels covered by this dataset for the category system.",
            "example": -232
          },
          "system": {
            "nullable": false,
            "type": "object",
            "description": "Category system.",
            "properties": {
              "id": {
                "nullable": true,
                "type": "number",
                "format": "id32",
                "description": "Identifier of the category system.",
                "example": 3
              },
              "name": {
                "nullable": true,
                "type": "string",
                "format": "localizedString",
                "description": "Name of the category system.",
                "example": "Lorem ipsum"
              },
              "numberOfLevels": {
                "nullable": true,
                "type": "number",
                "format": "int32",
                "description": "Number of levels of the category system.",
                "example": 232
              },
              "firstLevelWithLeafCategories": {
                "nullable": true,
                "type": "number",
                "format": "int32",
                "description": "Number of the least detailed level of the category system that has leaf categories.",
                "example": 2
              }
            }
          },
          "delivery": {
            "nullable": false,
            "type": "object",
            "description": "Delivery which provides this category dataset. For possible values, see endpoint `/basic/delivery/list`.",
            "properties": {
              "id": {
                "nullable": true,
                "type": "number",
                "format": "id32",
                "description": "Identifier of the delivery.",
                "example": 2
              },
              "name": {
                "nullable": true,
                "type": "string",
                "description": "English name of the delivery.",
                "example": "Lorem ipsum"
              }
            }
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "GetNewsArticleTypeListDataItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Identifier of the news article type.",
            "example": 3
          },
          "name": {
            "nullable": true,
            "type": "string",
            "format": "localizedString",
            "description": "Name of the news article type.",
            "example": "Lorem ipsum"
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "GetNewsDistributorListDataItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Identifier of the distributor.",
            "example": 4
          },
          "name": {
            "nullable": true,
            "type": "string",
            "description": "Name of the distributor.",
            "example": "Lorem ipsum"
          },
          "delivery": {
            "nullable": false,
            "type": "object",
            "description": "Delivery of the distributor.",
            "properties": {
              "id": {
                "nullable": true,
                "type": "number",
                "format": "id32",
                "description": "Identifier of the delivery.",
                "example": 3
              },
              "name": {
                "nullable": true,
                "type": "string",
                "description": "Name of the delivery.",
                "example": "Lorem ipsum"
              }
            }
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostBasicDeliveryListDataItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Identifier of a delivery.",
            "example": 1
          },
          "name": {
            "nullable": true,
            "type": "string",
            "description": "English name of the delivery.",
            "example": "Lorem ipsum"
          },
          "description": {
            "nullable": true,
            "type": "string",
            "description": "English description of the delivery.",
            "example": "Lorem ipsum"
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "GetBasicMediaKindListDataItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Identifier of a media kind.",
            "example": 2
          },
          "name": {
            "nullable": true,
            "type": "string",
            "description": "English name of the media kind.",
            "example": "Lorem ipsum"
          },
          "description": {
            "nullable": true,
            "type": "string",
            "description": "English description of the media kind.",
            "example": "Lorem ipsum"
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostBasicTimezoneListDataItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Identifier of a timezone.",
            "example": 2
          },
          "name": {
            "nullable": true,
            "type": "string",
            "description": "Name according to the Internet Assigned Numbers Authority.",
            "example": "Lorem ipsum"
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "GetCategorySystemListDataItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Identifier of the category system.",
            "example": 1
          },
          "name": {
            "nullable": true,
            "type": "string",
            "format": "localizedString",
            "description": "Name of the category system.",
            "example": "Lorem ipsum"
          },
          "type": {
            "nullable": false,
            "description": "Type of the category system. See endpoint `/category/system/type/list` for possible values.",
            "type": "object",
            "properties": {
              "id": {
                "nullable": true,
                "type": "number",
                "format": "id32",
                "description": "Identifier of the type of the category system.",
                "example": 2
              },
              "name": {
                "nullable": true,
                "type": "string",
                "format": "localizedString",
                "description": "Name of the type of the category system.",
                "example": "Lorem ipsum"
              }
            }
          },
          "numberOfLevels": {
            "nullable": true,
            "type": "number",
            "format": "int32",
            "description": "Number of levels of the category system.",
            "example": -232
          },
          "firstLevelWithLeafCategories": {
            "nullable": true,
            "type": "number",
            "format": "int32",
            "description": "Number of the least detailed level of the category system that has leaf categories.",
            "example": 2
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "GetBasicLanguageListDataItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Identifier of a language.",
            "example": 5
          },
          "code": {
            "nullable": true,
            "type": "string",
            "description": "ISO 639-1 code of the language.",
            "example": "en"
          },
          "name": {
            "nullable": true,
            "type": "string",
            "format": "localizedString",
            "description": "Name of the language.",
            "example": "Lorem ipsum"
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "GetNewsPublisherListDataItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Identifier of the publisher.",
            "example": 2
          },
          "name": {
            "nullable": true,
            "type": "string",
            "description": "Name of the publisher.",
            "example": "Lorem ipsum"
          },
          "distributor": {
            "nullable": false,
            "type": "object",
            "description": "Distributor of the publisher.",
            "properties": {
              "id": {
                "nullable": true,
                "type": "number",
                "format": "id32",
                "description": "Identifier of the distributor.",
                "example": 2
              },
              "name": {
                "nullable": true,
                "type": "string",
                "description": "Name of the distributor.",
                "example": "Lorem ipsum"
              }
            }
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostBasicMarketListDataItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Identifier of the market.",
            "example": 2
          },
          "name": {
            "nullable": true,
            "type": "string",
            "format": "localizedString",
            "description": "Name of the market.",
            "example": "Lorem ipsum"
          },
          "shortName": {
            "nullable": true,
            "type": "string",
            "format": "localizedString",
            "description": "Short name of the market.",
            "example": "Lorem ipsum"
          },
          "active": {
            "nullable": true,
            "type": "boolean",
            "description": "Indicates whether the market exists.",
            "example": true
          },
          "country": {
            "nullable": false,
            "type": "object",
            "description": "Country of the market.",
            "properties": {
              "id": {
                "nullable": true,
                "type": "number",
                "format": "id32",
                "description": "Identifier of the country.",
                "example": 5
              },
              "name": {
                "nullable": true,
                "type": "string",
                "format": "localizedString",
                "description": "Name of the country.",
                "example": "Lorem ipsum"
              }
            }
          },
          "type": {
            "nullable": false,
            "type": "object",
            "description": "Type of the market.",
            "properties": {
              "id": {
                "nullable": true,
                "type": "number",
                "format": "id32",
                "description": "Identifier of the type.",
                "example": 5
              },
              "name": {
                "nullable": true,
                "type": "string",
                "format": "localizedString",
                "description": "Name of the type.",
                "example": "Lorem ipsum"
              }
            }
          },
          "group": {
            "nullable": false,
            "type": "object",
            "description": "Market group of the market.",
            "properties": {
              "id": {
                "nullable": true,
                "type": "number",
                "format": "id32",
                "description": "Identifier of the market group.",
                "example": 1
              },
              "name": {
                "nullable": true,
                "type": "string",
                "format": "localizedString",
                "description": "Name of the market group.",
                "example": "Lorem ipsum"
              }
            }
          },
          "timezone": {
            "nullable": false,
            "type": "object",
            "description": "Timezone of the market.",
            "properties": {
              "id": {
                "nullable": true,
                "type": "number",
                "format": "id32",
                "description": "Identifier of the timezone.",
                "example": 1
              },
              "name": {
                "nullable": true,
                "type": "string",
                "format": "localizedString",
                "description": "Name of the timezone.",
                "example": "Lorem ipsum"
              }
            }
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostNewsArticleListDataItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "code": {
            "nullable": true,
            "description": "Identifier of the news article.",
            "type": "string",
            "example": "Lorem ipsum"
          },
          "time": {
            "nullable": true,
            "description": "Date and time of the news article.",
            "type": "string",
            "format": "date-time",
            "example": "2024-01-01T00:00:00.000Z"
          },
          "headline": {
            "nullable": true,
            "description": "Headline of the news article represented as text with HTML entity encoding but without HTML tags.",
            "type": "string",
            "example": "Lorem ipsum"
          },
          "summary": {
            "nullable": true,
            "description": "Textual summary of the body of the news article or `null` if no summary was provided by the news article distributor.",
            "type": "string",
            "example": "Lorem ipsum"
          },
          "types": {
            "nullable": false,
            "description": "Types of news article. See endpoint `/news/article/type/list` for possible values.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostNewsArticleListDataTypesItems"
            }
          },
          "language": {
            "nullable": false,
            "description": "Language of the news article. See endpoint `/basic/language/list` for possible values.",
            "type": "object",
            "properties": {
              "id": {
                "nullable": true,
                "description": "Identifier of the language.",
                "type": "number",
                "format": "id32",
                "example": 2
              }
            }
          },
          "distributor": {
            "nullable": false,
            "description": "Distributor of the news article. See endpoint `/news/distributor/list` for possible values.",
            "type": "object",
            "properties": {
              "id": {
                "nullable": true,
                "description": "Identifier of the distributor.",
                "type": "number",
                "format": "id32",
                "example": 1
              }
            }
          },
          "publisher": {
            "nullable": false,
            "description": "Publisher of the news article. See endpoint `/news/publisher/list` for possible values.",
            "type": "object",
            "properties": {
              "id": {
                "nullable": true,
                "description": "Identifier of the publisher.",
                "type": "number",
                "format": "id32",
                "example": 4
              }
            }
          },
          "categories": {
            "nullable": false,
            "description": "Categories related to the news article. See endpoint `/category/list` for possible values.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostNewsArticleListDataCategoriesItems"
            }
          },
          "chain": {
            "nullable": false,
            "description": "Article chain.",
            "type": "object",
            "properties": {
              "id": {
                "nullable": true,
                "description": "Identifier of the news article chain.",
                "type": "string",
                "format": "id64",
                "example": "4004"
              }
            }
          },
          "instruments": {
            "nullable": false,
            "description": "Set of stock instruments related to the article. The set is not updated in the course of corporate actions, e.g. when the related company obtains a new instrument after a spin-off.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostNewsArticleListDataInstrumentsItems"
            }
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "GetBasicRegionListDataItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Identifier of a region.",
            "example": 5
          },
          "code": {
            "nullable": true,
            "type": "string",
            "description": "ISO 3166-1 alpha-2 code of the country. This attribute is set for each country, may be set for miscellaneous regions and is empty for regions of other types.",
            "example": "US"
          },
          "name": {
            "nullable": true,
            "type": "string",
            "format": "localizedString",
            "description": "Name of the region.",
            "example": "Lorem ipsum"
          },
          "type": {
            "nullable": true,
            "type": "string",
            "description": "Type of the region.\n| Value | Description |\n| --- | --- |\n| continent | Regions that are considered to be a continent in the context of the Market Data Gateway. |\n| country | A region that represents a country that has been assigned an official ISO 3166-1 code. |\n| subdivision | A region that represents a subdivision of a country that has been assigned an official ISO 3166-2 code. |\n| misc | A miscellaneous region represents a region that is neither a continent, nor a country, nor a subdivision of a country. |\n| compound | A compound miscellaneous region consists of member regions which are uniquely and undoubtedly defined. |\n\n",
            "enum": [
              "continent",
              "country",
              "subdivision",
              "misc",
              "compound"
            ],
            "example": "continent"
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostNewsArticleSearchByTextDataCriteriaItems": {
        "type": "object",
        "properties": {
          "selectionType": {
            "description": "Specify how the criteria should be applied to the search.\n| Value | Description |\n| --- | --- |\n| include | Articles covering the given criteria are included in the result. |\n| exclude | Articles covering the given criteria are excluded from the result. |\n\n",
            "type": "string",
            "default": "include",
            "enum": [
              "include",
              "exclude"
            ],
            "example": "include"
          },
          "range": {
            "type": "object",
            "format": "timeRange",
            "properties": {
              "start": {
                "type": "string",
                "format": "date-time",
                "description": "The starting point of the time range (inclusive), or `null` to indicate that the time range extends indefinitely into the past.",
                "example": "2024-12-24T18:00:00.000000Z"
              },
              "end": {
                "type": "string",
                "format": "date-time",
                "description": "The ending point of the time range (exclusive), or `null` to indicate that the time range extends indefinitely into the future.",
                "example": "2024-12-24T18:00:00.000000Z"
              }
            },
            "required": [
              "start",
              "end"
            ],
            "description": "Time range for matching the news article's date. At most one of the attributes `start` or `end` may be `null`."
          },
          "indices": {
            "type": "object",
            "description": "Set of index notations that each represent an index. Articles that cover at least one instrument contained in one of the specified indices are found.",
            "properties": {
              "ids": {
                "type": "array",
                "nullable": false,
                "items": {
                  "type": "string",
                  "format": "id64",
                  "example": "5005"
                },
                "minItems": 1,
                "maxItems": 500,
                "uniqueItems": true,
                "description": "Identifiers of the index notations."
              }
            }
          },
          "instruments": {
            "type": "object",
            "description": "Set of stock instruments related to the article. The set is not updated in the course of corporate actions, e.g. when the related company obtains a new instrument after a spin-off.",
            "properties": {
              "ids": {
                "type": "array",
                "nullable": false,
                "items": {
                  "type": "string",
                  "format": "id64",
                  "example": "5005"
                },
                "minItems": 1,
                "maxItems": 1000,
                "uniqueItems": true,
                "description": "Identifiers of the instruments."
              }
            }
          },
          "types": {
            "type": "object",
            "description": "Types of the news article. A news article is found if one or more of the specified news article types match. See endpoint `/news/article/type/list` for valid values.",
            "properties": {
              "ids": {
                "type": "array",
                "nullable": false,
                "items": {
                  "type": "number",
                  "format": "id32",
                  "example": 2
                },
                "minItems": 1,
                "maxItems": 100,
                "uniqueItems": true,
                "description": "Identifiers of the article types."
              }
            }
          },
          "categories": {
            "type": "object",
            "description": "Categories of the news article. A news article is found if one or more of the specified categories match. Use a category system of type news with endpoint /category/listBySystem for valid values.",
            "properties": {
              "ids": {
                "type": "array",
                "nullable": false,
                "items": {
                  "type": "number",
                  "format": "id32",
                  "example": 5
                },
                "minItems": 1,
                "maxItems": 100,
                "uniqueItems": true,
                "description": "Identifiers of the categories."
              }
            }
          },
          "regions": {
            "type": "object",
            "description": "Regions of the content of the news article. A news article is found if one or more of the specified regions match. See endpoint `/basic/region/list` for valid values.",
            "properties": {
              "ids": {
                "type": "array",
                "nullable": false,
                "items": {
                  "type": "number",
                  "format": "id32",
                  "example": 4
                },
                "minItems": 1,
                "maxItems": 100,
                "uniqueItems": true,
                "description": "Identifiers of the regions."
              }
            }
          },
          "distributor": {
            "type": "object",
            "description": "Distributors of the news article. A news article is found if one of the specified distributors matches. See endpoint `/news/distributor/list` for valid values.",
            "properties": {
              "ids": {
                "type": "array",
                "nullable": false,
                "items": {
                  "type": "number",
                  "format": "id32",
                  "example": 5
                },
                "minItems": 1,
                "maxItems": 100,
                "uniqueItems": true,
                "description": "Identifiers of the distributors."
              }
            }
          },
          "publisher": {
            "type": "object",
            "description": "Publishers of the news article. A news article is found if one of the specified publishers matches. See endpoint `/news/publishers/list` for valid values.",
            "properties": {
              "ids": {
                "type": "array",
                "nullable": false,
                "items": {
                  "type": "number",
                  "format": "id32",
                  "example": 2
                },
                "minItems": 1,
                "maxItems": 100,
                "uniqueItems": true,
                "description": "Identifiers of the publishers."
              }
            }
          },
          "language": {
            "type": "object",
            "description": "Languages of the news article. A news article is found if one of the specified languages matches. See endpoint `/basic/language/list` for valid values.",
            "properties": {
              "ids": {
                "type": "array",
                "nullable": false,
                "items": {
                  "type": "number",
                  "format": "id32",
                  "example": 3
                },
                "minItems": 1,
                "maxItems": 100,
                "uniqueItems": true,
                "description": "Identifiers of the languages."
              }
            }
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      }
    },
    "responses": {
      "GetBasicAssetClassList200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "nullable": false,
                  "items": {
                    "$ref": "#/components/schemas/GetBasicAssetClassListDataItems"
                  },
                  "description": "List of asset classes sorted ascending by identifier of the asset class."
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": [
                {
                  "id": 5,
                  "code": "Lorem ipsum",
                  "description": "Lorem ipsum"
                }
              ],
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "PostBasicBackgroundTextTypeList200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "nullable": false,
                  "items": {
                    "$ref": "#/components/schemas/PostBasicBackgroundTextTypeListDataItems"
                  },
                  "description": "List of background text types."
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": [
                {
                  "id": 2,
                  "name": "Lorem ipsum",
                  "description": "Lorem ipsum"
                }
              ],
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "GetBasicBenchmarkTypeList200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "List of benchmark types.",
                  "nullable": false,
                  "items": {
                    "$ref": "#/components/schemas/GetBasicBenchmarkTypeListDataItems"
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": [
                {
                  "id": 3,
                  "name": "Lorem ipsum",
                  "description": "Lorem ipsum"
                }
              ],
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "PostBasicDeliveryList200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "List of deliveries.",
                  "nullable": false,
                  "items": {
                    "$ref": "#/components/schemas/PostBasicDeliveryListDataItems"
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": [
                {
                  "id": 1,
                  "name": "Lorem ipsum",
                  "description": "Lorem ipsum"
                }
              ],
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "GetBasicFrequencyTypeList200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "List of frequency types.",
                  "nullable": false,
                  "items": {
                    "$ref": "#/components/schemas/GetBasicFrequencyTypeListDataItems"
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": [
                {
                  "id": 1,
                  "name": "Lorem ipsum"
                }
              ],
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "GetBasicLanguageGet200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "nullable": true,
                      "type": "string",
                      "description": "ISO 639-1 code of the language.",
                      "example": "en"
                    },
                    "name": {
                      "nullable": true,
                      "type": "string",
                      "format": "localizedString",
                      "description": "Name of the language.",
                      "example": "Lorem ipsum"
                    }
                  },
                  "description": "Details of a language.",
                  "nullable": false
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": {
                "code": "en",
                "name": "Lorem ipsum"
              },
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "GetBasicLanguageGetByCode200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "nullable": true,
                      "type": "number",
                      "format": "id32",
                      "description": "Identifier of a language.",
                      "example": 4
                    },
                    "name": {
                      "nullable": true,
                      "type": "string",
                      "format": "localizedString",
                      "description": "Name of the language.",
                      "example": "Lorem ipsum"
                    }
                  },
                  "description": "Details of a language.",
                  "nullable": false
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": {
                "id": 4,
                "name": "Lorem ipsum"
              },
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "GetBasicLanguageList200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "List of languages.",
                  "nullable": false,
                  "items": {
                    "$ref": "#/components/schemas/GetBasicLanguageListDataItems"
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": [
                {
                  "id": 5,
                  "code": "en",
                  "name": "Lorem ipsum"
                }
              ],
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "GetBasicMarketGet200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "nullable": true,
                      "type": "string",
                      "format": "localizedString",
                      "description": "Name of the market.",
                      "example": "Lorem ipsum"
                    },
                    "shortName": {
                      "nullable": true,
                      "type": "string",
                      "format": "localizedString",
                      "description": "Short name of the market.",
                      "example": "Lorem ipsum"
                    },
                    "active": {
                      "nullable": true,
                      "type": "boolean",
                      "description": "Indicates whether the market exists.",
                      "example": false
                    },
                    "country": {
                      "nullable": false,
                      "type": "object",
                      "description": "Country of the market.",
                      "properties": {
                        "id": {
                          "nullable": true,
                          "type": "number",
                          "format": "id32",
                          "description": "Identifier of the country.",
                          "example": 2
                        },
                        "name": {
                          "nullable": true,
                          "type": "string",
                          "format": "localizedString",
                          "description": "Name of the country.",
                          "example": "Lorem ipsum"
                        }
                      }
                    },
                    "type": {
                      "nullable": false,
                      "type": "object",
                      "description": "Type of the market.",
                      "properties": {
                        "id": {
                          "nullable": true,
                          "type": "number",
                          "format": "id32",
                          "description": "Identifier of the type.",
                          "example": 3
                        },
                        "name": {
                          "nullable": true,
                          "type": "string",
                          "format": "localizedString",
                          "description": "Name of the type.",
                          "example": "Lorem ipsum"
                        }
                      }
                    },
                    "group": {
                      "nullable": false,
                      "type": "object",
                      "description": "Market group of the market.",
                      "properties": {
                        "id": {
                          "nullable": true,
                          "type": "number",
                          "format": "id32",
                          "description": "Identifier of the market group.",
                          "example": 2
                        },
                        "name": {
                          "nullable": true,
                          "type": "string",
                          "format": "localizedString",
                          "description": "Name of the market group.",
                          "example": "Lorem ipsum"
                        }
                      }
                    },
                    "timezone": {
                      "nullable": false,
                      "type": "object",
                      "description": "Timezone of the market.",
                      "properties": {
                        "id": {
                          "nullable": true,
                          "type": "number",
                          "format": "id32",
                          "description": "Identifier of the timezone.",
                          "example": 3
                        },
                        "name": {
                          "nullable": true,
                          "type": "string",
                          "format": "localizedString",
                          "description": "Name of the timezone.",
                          "example": "Lorem ipsum"
                        }
                      }
                    }
                  },
                  "description": "Details of a market",
                  "nullable": false
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": {
                "name": "Lorem ipsum",
                "shortName": "Lorem ipsum",
                "active": false,
                "country": {
                  "id": 2,
                  "name": "Lorem ipsum"
                },
                "type": {
                  "id": 3,
                  "name": "Lorem ipsum"
                },
                "group": {
                  "id": 2,
                  "name": "Lorem ipsum"
                },
                "timezone": {
                  "id": 3,
                  "name": "Lorem ipsum"
                }
              },
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "PostBasicMarketList200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "List of markets.",
                  "nullable": false,
                  "items": {
                    "$ref": "#/components/schemas/PostBasicMarketListDataItems"
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/OffsetBasedPaginationOutputObjectWithoutTotal"
                    }
                  }
                }
              }
            },
            "example": {
              "data": [
                {
                  "id": 2,
                  "name": "Lorem ipsum",
                  "shortName": "Lorem ipsum",
                  "active": true,
                  "country": {
                    "id": 5,
                    "name": "Lorem ipsum"
                  },
                  "type": {
                    "id": 5,
                    "name": "Lorem ipsum"
                  },
                  "group": {
                    "id": 1,
                    "name": "Lorem ipsum"
                  },
                  "timezone": {
                    "id": 1,
                    "name": "Lorem ipsum"
                  }
                }
              ],
              "meta": {
                "status": {
                  "code": 200
                },
                "pagination": {
                  "hasNext": false
                }
              }
            }
          }
        }
      },
      "GetBasicMarketGroupList200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "List of market groups.",
                  "nullable": false,
                  "items": {
                    "$ref": "#/components/schemas/GetBasicMarketGroupListDataItems"
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": [
                {
                  "id": 5,
                  "name": "Lorem ipsum",
                  "shortName": "Lorem ipsum"
                }
              ],
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "GetBasicMarketTypeList200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "List of market types.",
                  "nullable": false,
                  "items": {
                    "$ref": "#/components/schemas/GetBasicMarketTypeListDataItems"
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": [
                {
                  "id": 5,
                  "name": "Lorem ipsum"
                }
              ],
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "GetBasicMediaKindList200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "List of media kinds.",
                  "nullable": false,
                  "items": {
                    "$ref": "#/components/schemas/GetBasicMediaKindListDataItems"
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": [
                {
                  "id": 2,
                  "name": "Lorem ipsum",
                  "description": "Lorem ipsum"
                }
              ],
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "PostBasicMediaTypeList200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "List of Internet media types.",
                  "nullable": false,
                  "items": {
                    "$ref": "#/components/schemas/PostBasicMediaTypeListDataItems"
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": [
                {
                  "id": 3,
                  "name": "Lorem ipsum",
                  "description": "Lorem ipsum",
                  "kind": {
                    "id": 4,
                    "name": "Lorem ipsum"
                  }
                }
              ],
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "PostBasicMicOperatingList200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "List of operating MICs.",
                  "nullable": false,
                  "items": {
                    "$ref": "#/components/schemas/PostBasicMicOperatingListDataItems"
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/OffsetBasedPaginationOutputObjectWithoutTotal"
                    }
                  }
                }
              }
            },
            "example": {
              "data": [
                {
                  "id": 3,
                  "isoCode": "Lorem ipsum",
                  "name": "Lorem ipsum",
                  "active": false
                }
              ],
              "meta": {
                "status": {
                  "code": 200
                },
                "pagination": {
                  "hasNext": false
                }
              }
            }
          }
        }
      },
      "GetBasicRegionGet200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "nullable": true,
                      "type": "string",
                      "description": "ISO 3166-1 alpha-2 code of the country. This attribute is set for each country, may be set for miscellaneous regions and is empty for regions of other types.",
                      "example": "US"
                    },
                    "name": {
                      "nullable": true,
                      "type": "string",
                      "format": "localizedString",
                      "description": "Name of the region.",
                      "example": "Lorem ipsum"
                    },
                    "type": {
                      "nullable": true,
                      "type": "string",
                      "description": "Type of the region.\n| Value | Description |\n| --- | --- |\n| continent | Regions that are considered to be a continent in the context of the Market Data Gateway. |\n| country | A region that represents a country that has been assigned an official ISO 3166-1 code. |\n| subdivision | A region that represents a subdivision of a country that has been assigned an official ISO 3166-2 code. |\n| misc | A miscellaneous region represents a region that is neither a continent, nor a country, nor a subdivision of a country. |\n| compound | A compound miscellaneous region consists of member regions which are uniquely and undoubtedly defined. |\n\n",
                      "enum": [
                        "continent",
                        "country",
                        "subdivision",
                        "misc",
                        "compound"
                      ],
                      "example": "country"
                    },
                    "nestedRegions": {
                      "nullable": false,
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GetBasicRegionGetDataNestedRegionsItems"
                      },
                      "description": "Nested regions of this region."
                    }
                  },
                  "description": "Details of a region.",
                  "nullable": false
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": {
                "code": "US",
                "name": "Lorem ipsum",
                "type": "country",
                "nestedRegions": [
                  {
                    "id": 4,
                    "code": "DE",
                    "name": "Lorem ipsum",
                    "type": "subdivision"
                  }
                ]
              },
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "GetBasicRegionList200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "List of regions.",
                  "nullable": false,
                  "items": {
                    "$ref": "#/components/schemas/GetBasicRegionListDataItems"
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": [
                {
                  "id": 5,
                  "code": "US",
                  "name": "Lorem ipsum",
                  "type": "continent"
                }
              ],
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "GetBasicRegionContinentGet200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "nullable": true,
                      "type": "string",
                      "format": "localizedString",
                      "description": "Name of the continent.",
                      "example": "Lorem ipsum"
                    },
                    "countries": {
                      "nullable": false,
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GetBasicRegionContinentGetDataCountriesItems"
                      }
                    }
                  },
                  "description": "Details for a continent.",
                  "nullable": false
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": {
                "name": "Lorem ipsum",
                "countries": [
                  {
                    "id": 3,
                    "name": "Lorem ipsum"
                  }
                ]
              },
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "GetBasicRegionContinentList200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "List of continents.",
                  "nullable": false,
                  "items": {
                    "$ref": "#/components/schemas/GetBasicRegionContinentListDataItems"
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": [
                {
                  "id": 2,
                  "name": "Lorem ipsum"
                }
              ],
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "GetBasicRegionCountryGet200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "nullable": true,
                      "type": "string",
                      "description": "ISO 3166-1 alpha-2 code of the country.",
                      "example": "US"
                    },
                    "name": {
                      "nullable": true,
                      "type": "string",
                      "format": "localizedString",
                      "description": "Name of the country.",
                      "example": "Lorem ipsum"
                    },
                    "subdivisions": {
                      "nullable": false,
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GetBasicRegionCountryGetDataSubdivisionsItems"
                      }
                    }
                  },
                  "description": "Details of a country.",
                  "nullable": false
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": {
                "code": "US",
                "name": "Lorem ipsum",
                "subdivisions": [
                  {
                    "id": 5,
                    "name": "Lorem ipsum"
                  }
                ]
              },
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "GetBasicRegionCountryGetByCode200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "nullable": true,
                      "type": "number",
                      "format": "id32",
                      "description": "Identifier of a country.",
                      "example": 2
                    },
                    "name": {
                      "nullable": true,
                      "type": "string",
                      "format": "localizedString",
                      "description": "Name of the country.",
                      "example": "Lorem ipsum"
                    },
                    "subdivisions": {
                      "nullable": false,
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GetBasicRegionCountryGetByCodeDataSubdivisionsItems"
                      }
                    }
                  },
                  "description": "Details of a country.",
                  "nullable": false
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": {
                "id": 2,
                "name": "Lorem ipsum",
                "subdivisions": [
                  {
                    "id": 2,
                    "name": "Lorem ipsum"
                  }
                ]
              },
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "GetBasicRegionCountryList200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "List of countries.",
                  "nullable": false,
                  "items": {
                    "$ref": "#/components/schemas/GetBasicRegionCountryListDataItems"
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": [
                {
                  "id": 5,
                  "code": "DE",
                  "name": "Lorem ipsum"
                }
              ],
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "GetBasicTimezoneGet200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "nullable": true,
                      "type": "number",
                      "format": "id32",
                      "description": "Identifier of a timezone.",
                      "example": 5
                    },
                    "name": {
                      "nullable": true,
                      "type": "string",
                      "description": "Name according to the Internet Assigned Numbers Authority.",
                      "example": "Lorem ipsum"
                    }
                  },
                  "description": "Details of a timezone.",
                  "nullable": false
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": {
                "id": 5,
                "name": "Lorem ipsum"
              },
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "GetBasicTimezoneGetByName200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "nullable": true,
                      "type": "number",
                      "format": "id32",
                      "description": "Identifier of a timezone.",
                      "example": 2
                    },
                    "name": {
                      "nullable": true,
                      "type": "string",
                      "description": "Name according to the Internet Assigned Numbers Authority.",
                      "example": "Lorem ipsum"
                    }
                  },
                  "description": "Details of a timezone.",
                  "nullable": false
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": {
                "id": 2,
                "name": "Lorem ipsum"
              },
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "PostBasicTimezoneList200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "List of timezones in unspecified order.",
                  "nullable": false,
                  "items": {
                    "$ref": "#/components/schemas/PostBasicTimezoneListDataItems"
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": [
                {
                  "id": 2,
                  "name": "Lorem ipsum"
                }
              ],
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "GetBasicValueUnitGet200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "nullable": true,
                      "type": "string",
                      "description": "Code of the value unit: If assigned, a code according to ISO 4217, otherwise a local code, for a main currency; a code such as GBp (for British pence) for a fractional currency; or a code such as PT (points) for non-currency value units.",
                      "example": "EUR"
                    },
                    "isoCode": {
                      "nullable": true,
                      "type": "string",
                      "description": "ISO 4217 code of the value unit. Empty if the ISO 4217 standard does not define a code for the currency.",
                      "example": "USD"
                    },
                    "name": {
                      "nullable": true,
                      "type": "string",
                      "format": "localizedString",
                      "description": "Name of the value unit.",
                      "example": "Lorem ipsum"
                    },
                    "type": {
                      "nullable": true,
                      "type": "string",
                      "description": "Type of the value unit.\n| Value | Description |\n| --- | --- |\n| main | Main currency. |\n| fractional | Fractional currency. |\n| alternative | Alternative value unit. |\n\n",
                      "enum": [
                        "main",
                        "fractional",
                        "alternative"
                      ],
                      "example": "main"
                    },
                    "active": {
                      "nullable": true,
                      "type": "boolean",
                      "description": "Indicates whether the value unit is active.",
                      "example": true
                    }
                  },
                  "description": "Details of a value unit.",
                  "nullable": false
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": {
                "code": "EUR",
                "isoCode": "USD",
                "name": "Lorem ipsum",
                "type": "main",
                "active": true
              },
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "PostBasicValueUnitList200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "List of value units.",
                  "nullable": false,
                  "items": {
                    "$ref": "#/components/schemas/PostBasicValueUnitListDataItems"
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": [
                {
                  "id": 4,
                  "code": "USD",
                  "isoCode": "EUR",
                  "name": "Lorem ipsum",
                  "type": "alternative",
                  "active": false
                }
              ],
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "GetBasicValueUnitAlternativeList200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "List of alternative units.",
                  "nullable": false,
                  "items": {
                    "$ref": "#/components/schemas/GetBasicValueUnitAlternativeListDataItems"
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": [
                {
                  "id": 3,
                  "code": "Lorem ipsum",
                  "name": "Lorem ipsum"
                }
              ],
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "PostBasicValueUnitCurrencyList200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "List of currencies.",
                  "nullable": false,
                  "items": {
                    "$ref": "#/components/schemas/PostBasicValueUnitCurrencyListDataItems"
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": [
                {
                  "id": 1,
                  "code": "EUR",
                  "isoCode": "EUR",
                  "name": "Lorem ipsum",
                  "type": "fractional",
                  "active": false
                }
              ],
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "GetBasicValueUnitCurrencyFractionalGet200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "nullable": true,
                      "type": "string",
                      "description": "Code of the fractional currency such as GBp (for British pence), USc (for U.S. cents), EUc for (Euro cent).",
                      "example": "Lorem ipsum"
                    },
                    "name": {
                      "nullable": true,
                      "type": "string",
                      "format": "localizedString",
                      "description": "Name of the fractional currency.",
                      "example": "Lorem ipsum"
                    },
                    "factor": {
                      "nullable": true,
                      "type": "number",
                      "format": "real",
                      "description": "Conversion factor between the fractional and its main currency. For example, the value 100 indicates that 100 US cents are equivalent to one US dollar.",
                      "example": 2.02
                    },
                    "mainCurrency": {
                      "nullable": false,
                      "type": "object",
                      "description": "Main currency corresponding to the fractional currency.",
                      "properties": {
                        "id": {
                          "nullable": true,
                          "type": "number",
                          "format": "id32",
                          "description": "Identifier of the main currency.",
                          "example": 2
                        },
                        "code": {
                          "nullable": true,
                          "type": "string",
                          "description": "Code of the currency: If assigned, a code according to ISO 4217, otherwise a local code.",
                          "example": "USD"
                        },
                        "isoCode": {
                          "nullable": true,
                          "type": "string",
                          "description": "ISO 4217 code of the currency.",
                          "example": "USD"
                        },
                        "name": {
                          "nullable": true,
                          "type": "string",
                          "format": "localizedString",
                          "description": "Name of the main currency.",
                          "example": "Lorem ipsum"
                        },
                        "active": {
                          "nullable": true,
                          "type": "boolean",
                          "description": "Indicates whether the currency is active.",
                          "example": false
                        }
                      }
                    }
                  },
                  "description": "Details of a fractional currency.",
                  "nullable": false
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": {
                "code": "Lorem ipsum",
                "name": "Lorem ipsum",
                "factor": 2.02,
                "mainCurrency": {
                  "id": 2,
                  "code": "USD",
                  "isoCode": "USD",
                  "name": "Lorem ipsum",
                  "active": false
                }
              },
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "GetBasicValueUnitCurrencyFractionalList200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "List of fractional currencies.",
                  "nullable": false,
                  "items": {
                    "$ref": "#/components/schemas/GetBasicValueUnitCurrencyFractionalListDataItems"
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": [
                {
                  "id": 5,
                  "code": "Lorem ipsum",
                  "name": "Lorem ipsum",
                  "factor": 4.04,
                  "mainCurrency": {
                    "id": 4,
                    "code": "USD",
                    "isoCode": "EUR",
                    "name": "Lorem ipsum",
                    "active": false
                  }
                }
              ],
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "PostBasicValueUnitCurrencyMainList200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "List of main currencies.",
                  "nullable": false,
                  "items": {
                    "$ref": "#/components/schemas/PostBasicValueUnitCurrencyMainListDataItems"
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": [
                {
                  "id": 1,
                  "code": "USD",
                  "isoCode": "EUR",
                  "name": "Lorem ipsum",
                  "active": false
                }
              ],
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "GetCategoryGet200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "nullable": true,
                      "type": "string",
                      "description": "Code commonly used for this category.",
                      "example": "Lorem ipsum"
                    },
                    "name": {
                      "nullable": true,
                      "type": "string",
                      "format": "localizedString",
                      "description": "Name of the category.",
                      "example": "Lorem ipsum"
                    },
                    "description": {
                      "nullable": true,
                      "type": "string",
                      "format": "localizedString",
                      "description": "Description of the category.",
                      "example": "Lorem ipsum"
                    },
                    "active": {
                      "nullable": true,
                      "type": "boolean",
                      "description": "Indicates whether this category is active.",
                      "example": true
                    },
                    "level": {
                      "nullable": false,
                      "type": "object",
                      "description": "Category level.",
                      "properties": {
                        "id": {
                          "nullable": true,
                          "type": "number",
                          "format": "id32",
                          "description": "Identifier of the category level.",
                          "example": 3
                        },
                        "name": {
                          "nullable": true,
                          "type": "string",
                          "format": "localizedString",
                          "description": "Name of the category level.",
                          "example": "Lorem ipsum"
                        },
                        "number": {
                          "nullable": true,
                          "type": "number",
                          "format": "int32",
                          "description": "Number of the category level starting with 1, indicating the distance to the root of the category hierarchy.",
                          "example": 2
                        }
                      }
                    },
                    "parent": {
                      "nullable": false,
                      "type": "object",
                      "description": "Parent category. The attributes of the parent category are `null` if this category is on the first level.",
                      "properties": {
                        "id": {
                          "nullable": true,
                          "type": "number",
                          "format": "id32",
                          "description": "Identifier of the category.",
                          "example": 3
                        },
                        "name": {
                          "nullable": true,
                          "type": "string",
                          "format": "localizedString",
                          "description": "Name of the category.",
                          "example": "Lorem ipsum"
                        },
                        "level": {
                          "nullable": false,
                          "type": "object",
                          "description": "Parent level.",
                          "properties": {
                            "id": {
                              "nullable": true,
                              "type": "number",
                              "format": "id32",
                              "description": "Identifier of the category level.",
                              "example": 2
                            },
                            "name": {
                              "nullable": true,
                              "type": "string",
                              "format": "localizedString",
                              "description": "Name of the category level.",
                              "example": "Lorem ipsum"
                            }
                          }
                        }
                      }
                    },
                    "system": {
                      "nullable": false,
                      "type": "object",
                      "description": "Category system.",
                      "properties": {
                        "id": {
                          "nullable": true,
                          "type": "number",
                          "format": "id32",
                          "description": "Identifier of the category system.",
                          "example": 5
                        },
                        "name": {
                          "nullable": true,
                          "type": "string",
                          "format": "localizedString",
                          "description": "Name of the category system.",
                          "example": "Lorem ipsum"
                        }
                      }
                    }
                  },
                  "description": "Details of the category.",
                  "nullable": false
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": {
                "code": "Lorem ipsum",
                "name": "Lorem ipsum",
                "description": "Lorem ipsum",
                "active": true,
                "level": {
                  "id": 3,
                  "name": "Lorem ipsum",
                  "number": 2
                },
                "parent": {
                  "id": 3,
                  "name": "Lorem ipsum",
                  "level": {
                    "id": 2,
                    "name": "Lorem ipsum"
                  }
                },
                "system": {
                  "id": 5,
                  "name": "Lorem ipsum"
                }
              },
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "GetCategoryList200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "system": {
                      "nullable": false,
                      "type": "object",
                      "description": "Category system.",
                      "properties": {
                        "id": {
                          "nullable": true,
                          "type": "number",
                          "format": "id32",
                          "description": "Identifier of the category system.",
                          "example": 2
                        },
                        "name": {
                          "nullable": true,
                          "type": "string",
                          "format": "localizedString",
                          "description": "Name of the category system.",
                          "example": "Lorem ipsum"
                        }
                      }
                    },
                    "categories": {
                      "nullable": false,
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GetCategoryListDataCategoriesItems"
                      },
                      "description": "List of categories."
                    }
                  },
                  "description": "List of categories.",
                  "nullable": false
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": {
                "system": {
                  "id": 2,
                  "name": "Lorem ipsum"
                },
                "categories": [
                  {
                    "id": 5,
                    "code": "Lorem ipsum",
                    "name": "Lorem ipsum",
                    "description": "Lorem ipsum",
                    "active": false,
                    "level": {
                      "id": 3,
                      "name": "Lorem ipsum",
                      "number": -2
                    },
                    "parent": {
                      "id": 1,
                      "name": "Lorem ipsum",
                      "level": {
                        "id": 2,
                        "name": "Lorem ipsum"
                      }
                    }
                  }
                ]
              },
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "GetCategoryListByLevel200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "system": {
                      "nullable": false,
                      "type": "object",
                      "description": "Category system.",
                      "properties": {
                        "id": {
                          "nullable": true,
                          "type": "number",
                          "format": "id32",
                          "description": "Identifier of the category system.",
                          "example": 4
                        },
                        "name": {
                          "nullable": true,
                          "type": "string",
                          "format": "localizedString",
                          "description": "Name of the category system.",
                          "example": "Lorem ipsum"
                        }
                      }
                    },
                    "parent": {
                      "nullable": false,
                      "type": "object",
                      "description": "Parent level. The attributes of the parent level are `null` if this category level is the first level.",
                      "properties": {
                        "id": {
                          "nullable": true,
                          "type": "number",
                          "format": "id32",
                          "description": "Identifier of the category level.",
                          "example": 1
                        },
                        "name": {
                          "nullable": true,
                          "type": "string",
                          "format": "localizedString",
                          "description": "Name of the category level.",
                          "example": "Lorem ipsum"
                        }
                      }
                    },
                    "categories": {
                      "nullable": false,
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GetCategoryListByLevelDataCategoriesItems"
                      },
                      "description": "List of categories."
                    }
                  },
                  "description": "List of the categories.",
                  "nullable": false
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/OffsetBasedPaginationOutputObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": {
                "system": {
                  "id": 4,
                  "name": "Lorem ipsum"
                },
                "parent": {
                  "id": 1,
                  "name": "Lorem ipsum"
                },
                "categories": [
                  {
                    "id": 5,
                    "code": "Lorem ipsum",
                    "name": "Lorem ipsum",
                    "description": "Lorem ipsum",
                    "active": false,
                    "parent": {
                      "id": 5,
                      "name": "Lorem ipsum"
                    }
                  }
                ]
              },
              "meta": {
                "status": {
                  "code": 200
                },
                "pagination": {
                  "total": 3,
                  "isEstimatedTotal": false
                }
              }
            }
          }
        }
      },
      "GetCategoryListBySystem200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "categories": {
                      "nullable": false,
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GetCategoryListBySystemDataCategoriesItems"
                      },
                      "description": "List of categories."
                    }
                  },
                  "description": "List of the categories.",
                  "nullable": false
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/OffsetBasedPaginationOutputObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": {
                "categories": [
                  {
                    "id": 5,
                    "code": "Lorem ipsum",
                    "name": "Lorem ipsum",
                    "description": "Lorem ipsum",
                    "active": true,
                    "level": {
                      "id": 4,
                      "number": -2
                    },
                    "parent": {
                      "id": 5
                    }
                  }
                ]
              },
              "meta": {
                "status": {
                  "code": 200
                },
                "pagination": {
                  "total": 3,
                  "isEstimatedTotal": false
                }
              }
            }
          }
        }
      },
      "GetCategoryDatasetList200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "List of category datasets.",
                  "nullable": false,
                  "items": {
                    "$ref": "#/components/schemas/GetCategoryDatasetListDataItems"
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": [
                {
                  "id": 4,
                  "name": "Lorem ipsum",
                  "depth": -232,
                  "system": {
                    "id": 3,
                    "name": "Lorem ipsum",
                    "numberOfLevels": 232,
                    "firstLevelWithLeafCategories": 2
                  },
                  "delivery": {
                    "id": 2,
                    "name": "Lorem ipsum"
                  }
                }
              ],
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "GetCategoryInstrumentList200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "nullable": false,
                  "items": {
                    "$ref": "#/components/schemas/GetCategoryInstrumentListDataItems"
                  },
                  "description": "List of instruments."
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/OffsetBasedPaginationOutputObject"
                    },
                    "partial": {
                      "$ref": "#/components/schemas/PartialOutputObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": [
                {
                  "id": "209485",
                  "fsym": {
                    "security": {
                      "permanentIdentifier": "DJC0PL-S"
                    }
                  }
                }
              ],
              "meta": {
                "status": {
                  "code": 200
                },
                "pagination": {
                  "total": 3,
                  "isEstimatedTotal": false
                },
                "partial": {
                  "isPartial": true
                }
              }
            }
          }
        }
      },
      "GetCategoryLevelGet200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "nullable": true,
                      "type": "string",
                      "format": "localizedString",
                      "description": "Name of the level.",
                      "example": "Lorem ipsum"
                    },
                    "number": {
                      "nullable": true,
                      "type": "number",
                      "format": "int32",
                      "description": "Number of the category level, starting with 1.",
                      "example": 232
                    },
                    "hasLeafCategories": {
                      "nullable": true,
                      "type": "boolean",
                      "description": "Indicates whether the category level has leaf categories.",
                      "example": false
                    },
                    "system": {
                      "nullable": false,
                      "type": "object",
                      "description": "Details of the system this level belongs to.",
                      "properties": {
                        "id": {
                          "nullable": true,
                          "type": "number",
                          "format": "id32",
                          "description": "Identifier of the category system.",
                          "example": 5
                        },
                        "name": {
                          "nullable": true,
                          "type": "string",
                          "format": "localizedString",
                          "description": "Name of the category system.",
                          "example": "Lorem ipsum"
                        }
                      }
                    }
                  },
                  "description": "Details of the category level.",
                  "nullable": false
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": {
                "name": "Lorem ipsum",
                "number": 232,
                "hasLeafCategories": false,
                "system": {
                  "id": 5,
                  "name": "Lorem ipsum"
                }
              },
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "GetCategoryPathGet200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "categories": {
                      "nullable": false,
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GetCategoryPathGetDataCategoriesItems"
                      },
                      "description": "List of categories covering the full path (without gaps) from the most coarse granularity to the level of the specified category."
                    }
                  },
                  "nullable": false,
                  "description": "Path to the category."
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": {
                "categories": [
                  {
                    "id": 2,
                    "name": "Lorem ipsum"
                  }
                ]
              },
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "GetCategorySystemGet200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "nullable": true,
                      "type": "number",
                      "format": "id32",
                      "description": "Identifier of the category system.",
                      "example": 2
                    },
                    "name": {
                      "nullable": true,
                      "type": "string",
                      "format": "localizedString",
                      "description": "Name of the category system.",
                      "example": "Lorem ipsum"
                    },
                    "type": {
                      "nullable": false,
                      "description": "Type of the category system. See endpoint `/category/system/type/list` for possible values.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "nullable": true,
                          "type": "number",
                          "format": "id32",
                          "description": "Identifier of the type of the category system.",
                          "example": 1
                        },
                        "name": {
                          "nullable": true,
                          "type": "string",
                          "format": "localizedString",
                          "description": "Name of the type of the category system.",
                          "example": "Lorem ipsum"
                        }
                      }
                    },
                    "numberOfLevels": {
                      "nullable": true,
                      "type": "number",
                      "format": "int32",
                      "description": "Number of levels of the category system.",
                      "example": -132
                    },
                    "firstLevelWithLeafCategories": {
                      "nullable": true,
                      "type": "number",
                      "format": "int32",
                      "description": "Number of the least detailed level of the category system that has leaf categories.",
                      "example": -132
                    },
                    "levels": {
                      "nullable": false,
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GetCategorySystemGetDataLevelsItems"
                      },
                      "description": "List of category levels ordered by the number of the level in ascending order."
                    }
                  },
                  "description": "Details of the category system.",
                  "nullable": false
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": {
                "id": 2,
                "name": "Lorem ipsum",
                "type": {
                  "id": 1,
                  "name": "Lorem ipsum"
                },
                "numberOfLevels": -132,
                "firstLevelWithLeafCategories": -132,
                "levels": [
                  {
                    "id": 2,
                    "name": "Lorem ipsum",
                    "number": 132,
                    "hasLeafCategories": true
                  }
                ]
              },
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "GetCategorySystemList200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "List of category systems.",
                  "nullable": false,
                  "items": {
                    "$ref": "#/components/schemas/GetCategorySystemListDataItems"
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": [
                {
                  "id": 1,
                  "name": "Lorem ipsum",
                  "type": {
                    "id": 2,
                    "name": "Lorem ipsum"
                  },
                  "numberOfLevels": -232,
                  "firstLevelWithLeafCategories": 2
                }
              ],
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "GetCategorySystemTypeList200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "List of category system types, sorted by ascending identifier value.",
                  "nullable": false,
                  "items": {
                    "$ref": "#/components/schemas/GetCategorySystemTypeListDataItems"
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": [
                {
                  "id": 4,
                  "name": "Lorem ipsum",
                  "description": "Lorem ipsum"
                }
              ],
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "GetNewsArticleGet200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "time": {
                      "nullable": true,
                      "description": "Date and time of the news article.",
                      "type": "string",
                      "format": "date-time",
                      "example": "2024-12-24T18:00:00.000000Z"
                    },
                    "headline": {
                      "nullable": true,
                      "description": "Headline of the news article represented as text with HTML entity encoding but without HTML tags.",
                      "type": "string",
                      "example": "Lorem ipsum"
                    },
                    "summary": {
                      "nullable": true,
                      "description": "Textual summary of the body of the news article or `null` if no summary was provided by the news article distributor.",
                      "type": "string",
                      "example": "Lorem ipsum"
                    },
                    "body": {
                      "nullable": true,
                      "description": "Text body of the news article.",
                      "type": "string",
                      "example": "Lorem ipsum"
                    },
                    "types": {
                      "nullable": false,
                      "description": "Types of news article. See endpoint `/news/article/type/list` for possible values.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GetNewsArticleGetDataTypesItems"
                      }
                    },
                    "language": {
                      "nullable": false,
                      "description": "Language of the news article. See endpoint `/basic/language/list` for possible values.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "nullable": true,
                          "description": "Identifier of the language.",
                          "type": "number",
                          "format": "id32",
                          "example": 2
                        },
                        "code": {
                          "nullable": true,
                          "description": "ISO 639-1 code of the language.",
                          "type": "string",
                          "example": "en"
                        }
                      }
                    },
                    "distributor": {
                      "nullable": false,
                      "description": "Distributor of the news article. See endpoint `/news/distributor/list` for possible values.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "nullable": true,
                          "description": "Identifier of the distributor.",
                          "type": "number",
                          "format": "id32",
                          "example": 3
                        },
                        "name": {
                          "nullable": true,
                          "description": "Name of the distributor.",
                          "type": "string",
                          "example": "Lorem ipsum"
                        }
                      }
                    },
                    "publisher": {
                      "nullable": false,
                      "description": "Publisher of the news article. See endpoint `/news/publisher/list` for possible values.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "nullable": true,
                          "description": "Identifier of the publisher.",
                          "type": "number",
                          "format": "id32",
                          "example": 1
                        },
                        "name": {
                          "nullable": true,
                          "description": "Name of the publisher.",
                          "type": "string",
                          "example": "Lorem ipsum"
                        }
                      }
                    },
                    "categories": {
                      "nullable": false,
                      "description": "Categories related to the news article. See endpoint `/category/list` for possible values.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GetNewsArticleGetDataCategoriesItems"
                      }
                    },
                    "instruments": {
                      "nullable": false,
                      "description": "Set of stock instruments related to the article. The set is not updated in the course of corporate actions, e.g. when the related company obtains a new instrument after a spin-off.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GetNewsArticleGetDataInstrumentsItems"
                      }
                    },
                    "media": {
                      "nullable": false,
                      "description": "List of media elements of the news article.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GetNewsArticleGetDataMediaItems"
                      }
                    }
                  },
                  "description": "Content of the news article.",
                  "nullable": false
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": {
                "time": "2024-12-24T18:00:00.000000Z",
                "headline": "Lorem ipsum",
                "summary": "Lorem ipsum",
                "body": "Lorem ipsum",
                "types": [
                  {
                    "id": 5,
                    "name": "Lorem ipsum"
                  }
                ],
                "language": {
                  "id": 2,
                  "code": "en"
                },
                "distributor": {
                  "id": 3,
                  "name": "Lorem ipsum"
                },
                "publisher": {
                  "id": 1,
                  "name": "Lorem ipsum"
                },
                "categories": [
                  {
                    "id": 4,
                    "name": "Lorem ipsum"
                  }
                ],
                "instruments": [
                  {
                    "id": "209485",
                    "fsym": {
                      "security": {
                        "permanentIdentifier": "DJC0PL-S"
                      }
                    }
                  }
                ],
                "media": [
                  {
                    "url": "https://developer.factset.com",
                    "mimeType": "Lorem ipsum",
                    "caption": "Lorem ipsum",
                    "alternativeText": "Lorem ipsum",
                    "width": 132,
                    "height": 232
                  }
                ]
              },
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "PostNewsArticleList200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "News articles that match the filter criteria ordered by descending article time.",
                  "nullable": false,
                  "items": {
                    "$ref": "#/components/schemas/PostNewsArticleListDataItems"
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/CursorBasedPaginationOutputObjectWithoutTotal"
                    }
                  }
                }
              }
            },
            "example": {
              "data": [
                {
                  "code": "Lorem ipsum",
                  "time": "2024-01-01T00:00:00.000Z",
                  "headline": "Lorem ipsum",
                  "summary": "Lorem ipsum",
                  "types": [
                    {
                      "id": 3
                    }
                  ],
                  "language": {
                    "id": 2
                  },
                  "distributor": {
                    "id": 1
                  },
                  "publisher": {
                    "id": 4
                  },
                  "categories": [
                    {
                      "id": 2
                    }
                  ],
                  "chain": {
                    "id": "4004"
                  },
                  "instruments": [
                    {
                      "id": "209485",
                      "fsym": {
                        "security": {
                          "permanentIdentifier": "DJC0PL-S"
                        }
                      }
                    }
                  ]
                }
              ],
              "meta": {
                "status": {
                  "code": 200
                },
                "pagination": {
                  "next": "Lorem ipsum",
                  "previous": "Lorem ipsum"
                }
              }
            }
          }
        }
      },
      "PostNewsArticleListByChain200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "distributor": {
                      "nullable": false,
                      "description": "Distributor of the news articles. See endpoint `/news/distributor/list` for possible values.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "nullable": true,
                          "description": "Identifier of the distributor.",
                          "type": "number",
                          "format": "id32",
                          "example": 3
                        }
                      }
                    },
                    "publisher": {
                      "nullable": false,
                      "description": "Publisher of the news article. See endpoint `/news/publisher/list` for possible values.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "nullable": true,
                          "description": "Identifier of the publisher.",
                          "type": "number",
                          "format": "id32",
                          "example": 4
                        }
                      }
                    },
                    "articles": {
                      "nullable": false,
                      "description": "News articles that match the filter criteria ordered by descending article time.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PostNewsArticleListByChainDataArticlesItems"
                      }
                    }
                  },
                  "description": "News articles, their publisher, and distributor as refrenced by the article chain.",
                  "nullable": false
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/CursorBasedPaginationOutputObjectWithoutTotal"
                    }
                  }
                }
              }
            },
            "example": {
              "data": {
                "distributor": {
                  "id": 3
                },
                "publisher": {
                  "id": 4
                },
                "articles": [
                  {
                    "code": "Lorem ipsum",
                    "time": "2024-12-24T18:00:00.000000Z",
                    "headline": "Lorem ipsum",
                    "summary": "Lorem ipsum",
                    "types": [
                      {
                        "id": 4
                      }
                    ],
                    "language": {
                      "id": 3
                    },
                    "categories": [
                      {
                        "id": 5
                      }
                    ],
                    "instruments": [
                      {
                        "id": "209485",
                        "fsym": {
                          "security": {
                            "permanentIdentifier": "DJC0PL-S"
                          }
                        }
                      }
                    ]
                  }
                ]
              },
              "meta": {
                "status": {
                  "code": 200
                },
                "pagination": {
                  "next": "Lorem ipsum",
                  "previous": "Lorem ipsum"
                }
              }
            }
          }
        }
      },
      "PostNewsArticleListByIndex200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "identifiers": {
                      "nullable": false,
                      "description": "List of identifiers that resolve to index notations, and their type.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PostNewsArticleListByIndexDataIdentifiersItems"
                      }
                    },
                    "articles": {
                      "nullable": false,
                      "description": "News articles that match the filter criteria ordered by descending article time.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PostNewsArticleListByIndexDataArticlesItems"
                      }
                    }
                  },
                  "description": "News articles for instruments that are constituents of the given indices.",
                  "nullable": false
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/CursorBasedPaginationOutputObjectWithoutTotal"
                    }
                  }
                }
              }
            },
            "example": {
              "data": {
                "identifiers": [
                  {
                    "idNotation": "1532562",
                    "sourceIdentifier": "FDS-US",
                    "status": {
                      "code": "none",
                      "identifier": "FDS-US",
                      "details": "Lorem ipsum",
                      "encryptedDetails": "Lorem ipsum"
                    }
                  }
                ],
                "articles": [
                  {
                    "code": "Lorem ipsum",
                    "time": "2024-01-01T00:00:00.000Z",
                    "headline": "Lorem ipsum",
                    "summary": "Lorem ipsum",
                    "types": [
                      {
                        "id": 5
                      }
                    ],
                    "language": {
                      "id": 2
                    },
                    "distributor": {
                      "id": 2
                    },
                    "publisher": {
                      "id": 1
                    },
                    "categories": [
                      {
                        "id": 5
                      }
                    ],
                    "chain": {
                      "id": "5005"
                    },
                    "instruments": [
                      {
                        "id": "209485",
                        "fsym": {
                          "security": {
                            "permanentIdentifier": "DJC0PL-S"
                          }
                        }
                      }
                    ]
                  }
                ]
              },
              "meta": {
                "status": {
                  "code": 200
                },
                "pagination": {
                  "next": "Lorem ipsum",
                  "previous": "Lorem ipsum"
                }
              }
            }
          }
        }
      },
      "PostNewsArticleListByInstrument200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "identifiers": {
                      "nullable": false,
                      "description": "List of identifiers.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PostNewsArticleListByInstrumentDataIdentifiersItems"
                      }
                    },
                    "articles": {
                      "nullable": false,
                      "description": "News articles that match the filter criteria ordered by descending article time.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PostNewsArticleListByInstrumentDataArticlesItems"
                      }
                    }
                  },
                  "description": "News articles for instruments.",
                  "nullable": false
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/CursorBasedPaginationOutputObjectWithoutTotal"
                    }
                  }
                }
              }
            },
            "example": {
              "data": {
                "identifiers": [
                  {
                    "idInstrument": "209485",
                    "sourceIdentifier": "FDS-US",
                    "status": {
                      "code": "none",
                      "identifier": "FDS-US",
                      "details": "Lorem ipsum",
                      "encryptedDetails": "Lorem ipsum"
                    }
                  }
                ],
                "articles": [
                  {
                    "code": "Lorem ipsum",
                    "time": "2024-12-24T18:00:00.000000Z",
                    "headline": "Lorem ipsum",
                    "summary": "Lorem ipsum",
                    "types": [
                      {
                        "id": 2
                      }
                    ],
                    "language": {
                      "id": 1
                    },
                    "distributor": {
                      "id": 1
                    },
                    "publisher": {
                      "id": 2
                    },
                    "categories": [
                      {
                        "id": 2
                      }
                    ],
                    "chain": {
                      "id": "3003"
                    },
                    "instruments": [
                      {
                        "id": "209485",
                        "fsym": {
                          "security": {
                            "permanentIdentifier": "DJC0PL-S"
                          }
                        }
                      }
                    ]
                  }
                ]
              },
              "meta": {
                "status": {
                  "code": 200
                },
                "pagination": {
                  "next": "Lorem ipsum",
                  "previous": "Lorem ipsum"
                }
              }
            }
          }
        }
      },
      "PostNewsArticleListByMediaKind200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "News articles that match the filter criteria ordered by descending article time.",
                  "nullable": false,
                  "items": {
                    "$ref": "#/components/schemas/PostNewsArticleListByMediaKindDataItems"
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/CursorBasedPaginationOutputObjectWithoutTotal"
                    }
                  }
                }
              }
            },
            "example": {
              "data": [
                {
                  "code": "Lorem ipsum",
                  "time": "2024-01-01T00:00:00.000Z",
                  "headline": "Lorem ipsum",
                  "summary": "Lorem ipsum",
                  "types": [
                    {
                      "id": 2
                    }
                  ],
                  "language": {
                    "id": 4
                  },
                  "distributor": {
                    "id": 4
                  },
                  "publisher": {
                    "id": 3
                  },
                  "categories": [
                    {
                      "id": 2
                    }
                  ],
                  "chain": {
                    "id": "1001"
                  },
                  "instruments": [
                    {
                      "id": "209485",
                      "fsym": {
                        "security": {
                          "permanentIdentifier": "DJC0PL-S"
                        }
                      }
                    }
                  ]
                }
              ],
              "meta": {
                "status": {
                  "code": 200
                },
                "pagination": {
                  "next": "Lorem ipsum",
                  "previous": "Lorem ipsum"
                }
              }
            }
          }
        }
      },
      "PostNewsArticleSearchByText200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "News articles that match the filter criteria ordered by descending article time.",
                  "nullable": false,
                  "items": {
                    "$ref": "#/components/schemas/PostNewsArticleSearchByTextDataItems"
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/CursorBasedPaginationOutputObjectWithoutTotal"
                    }
                  }
                }
              }
            },
            "example": {
              "data": [
                {
                  "code": "Lorem ipsum",
                  "time": "2024-12-24T18:00:00.000000Z",
                  "headline": "Lorem ipsum",
                  "summary": "Lorem ipsum",
                  "types": [
                    {
                      "id": 5
                    }
                  ],
                  "language": {
                    "id": 2
                  },
                  "distributor": {
                    "id": 4
                  },
                  "publisher": {
                    "id": 5
                  },
                  "categories": [
                    {
                      "id": 4
                    }
                  ],
                  "chain": {
                    "id": "3003"
                  },
                  "instruments": [
                    {
                      "id": "209485",
                      "fsym": {
                        "security": {
                          "permanentIdentifier": "DJC0PL-S"
                        }
                      }
                    }
                  ]
                }
              ],
              "meta": {
                "status": {
                  "code": 200
                },
                "pagination": {
                  "next": "Lorem ipsum",
                  "previous": "Lorem ipsum"
                }
              }
            }
          }
        }
      },
      "GetNewsArticleTypeGet200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "nullable": true,
                      "type": "string",
                      "format": "localizedString",
                      "description": "Name of the news article type.",
                      "example": "Lorem ipsum"
                    }
                  },
                  "description": "Details of a news article type.",
                  "nullable": false
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": {
                "name": "Lorem ipsum"
              },
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "GetNewsArticleTypeList200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "List of news article types, sorted by ascending identifier value.",
                  "nullable": false,
                  "items": {
                    "$ref": "#/components/schemas/GetNewsArticleTypeListDataItems"
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": [
                {
                  "id": 3,
                  "name": "Lorem ipsum"
                }
              ],
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "GetNewsDistributorGet200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "nullable": true,
                      "type": "string",
                      "description": "Name of the distributor.",
                      "example": "Lorem ipsum"
                    },
                    "delivery": {
                      "nullable": false,
                      "type": "object",
                      "description": "Delivery of the distributor.",
                      "properties": {
                        "id": {
                          "nullable": true,
                          "type": "number",
                          "format": "id32",
                          "description": "Identifier of the delivery.",
                          "example": 5
                        },
                        "name": {
                          "nullable": true,
                          "type": "string",
                          "description": "Name of the delivery.",
                          "example": "Lorem ipsum"
                        }
                      }
                    }
                  },
                  "description": "Details of the distributor.",
                  "nullable": false
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": {
                "name": "Lorem ipsum",
                "delivery": {
                  "id": 5,
                  "name": "Lorem ipsum"
                }
              },
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "GetNewsDistributorList200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "List of distributors.",
                  "nullable": false,
                  "items": {
                    "$ref": "#/components/schemas/GetNewsDistributorListDataItems"
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": [
                {
                  "id": 4,
                  "name": "Lorem ipsum",
                  "delivery": {
                    "id": 3,
                    "name": "Lorem ipsum"
                  }
                }
              ],
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "GetNewsPublisherGet200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "nullable": true,
                      "type": "string",
                      "description": "Name of the publisher.",
                      "example": "Lorem ipsum"
                    },
                    "distributor": {
                      "nullable": false,
                      "type": "object",
                      "description": "Distributor of the publisher.",
                      "properties": {
                        "id": {
                          "nullable": true,
                          "type": "number",
                          "format": "id32",
                          "description": "Identifier of the distributor.",
                          "example": 1
                        },
                        "name": {
                          "nullable": true,
                          "type": "string",
                          "description": "Name of the distributor.",
                          "example": "Lorem ipsum"
                        }
                      }
                    }
                  },
                  "description": "Details of the publisher.",
                  "nullable": false
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": {
                "name": "Lorem ipsum",
                "distributor": {
                  "id": 1,
                  "name": "Lorem ipsum"
                }
              },
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "GetNewsPublisherList200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "List of publishers.",
                  "nullable": false,
                  "items": {
                    "$ref": "#/components/schemas/GetNewsPublisherListDataItems"
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/OffsetBasedPaginationOutputObjectWithoutTotal"
                    }
                  }
                }
              }
            },
            "example": {
              "data": [
                {
                  "id": 2,
                  "name": "Lorem ipsum",
                  "distributor": {
                    "id": 2,
                    "name": "Lorem ipsum"
                  }
                }
              ],
              "meta": {
                "status": {
                  "code": 200
                },
                "pagination": {
                  "hasNext": false
                }
              }
            }
          }
        }
      },
      "GetNewsPublisherListByDistributor200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "List of publishers.",
                  "nullable": false,
                  "items": {
                    "$ref": "#/components/schemas/GetNewsPublisherListByDistributorDataItems"
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": [
                {
                  "id": 3,
                  "name": "Lorem ipsum"
                }
              ],
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "PostNewsPublisherSearchByName200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "List of publishers.",
                  "nullable": false,
                  "items": {
                    "$ref": "#/components/schemas/PostNewsPublisherSearchByNameDataItems"
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": [
                {
                  "id": 5,
                  "name": "Lorem ipsum"
                }
              ],
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      }
    },
    "parameters": {},
    "examples": {},
    "requestBodies": {},
    "headers": {},
    "securitySchemes": {
      "FactSetOAuth2": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://auth.factset.com/as/token.oauth2",
            "scopes": {}
          }
        }
      },
      "FactSetApiKey": {
        "type": "http",
        "scheme": "basic"
      }
    },
    "links": {},
    "callbacks": {}
  },
  "security": [
    {
      "FactSetApiKey": []
    },
    {
      "FactSetOAuth2": []
    }
  ],
  "tags": [
    {
      "name": "basic",
      "description": "basic endpoints"
    },
    {
      "name": "category",
      "description": "category endpoints"
    },
    {
      "name": "news",
      "description": "news endpoints"
    }
  ],
  "externalDocs": {
    "description": "API Documentation",
    "url": "https://developer.factset.com/api-catalog/"
  }
}