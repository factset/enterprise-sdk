{
  "openapi": "3.0.0",
  "info": {
    "version": "4.1.0",
    "title": "Real-Time Options API",
    "description": "The Options API provides detailed information for option contracts (“options”) and option classes. This API presents a consolidated data model\nthat gives access to options data of global options markets such as OPRA, Australia Exchange, Bovespa, CME Group, EUREX, Euronext, Hong Kong,\nICE Futures Europe / US, Montreal Exchange, and others.\n\nAn option class is a product group of options from the same exchange and with the same underlying. The API includes endpoints to retrieve fundamental\ndata for an option contract such as exercise right, exercise style, strike, maturity, open interest, underlying, etc. as well as risk measures of an\noption contract such as delta, omega, implied volatility, etc.\n\nOption chains are provided by the /by-class/list endpoint. The list of option contracts for an option class can be filtered by exercise right, exercise\nstyle, strike, maturity, open interest, delta, omega, implied volatility, etc.\n\nThe option screener allows you to search for option classes by using text search, root symbol, or ISIN plus additional criteria such as market,\nunderlying, currency, and category. Similar to other screener endpoints in e.g. the\n[Stocks API](https://developer.factset.com/api-catalog/stocks-api-digital-portals), the /value-ranges/get endpoint provides the possible values and\nvalue ranges plus the number of option contracts for an option class related to the option contracts per criteria such as exercise right, exercise style,\nstrike, maturity, open interest, delta, omega, implied volatility, etc.\n\nThe Options API for Digital Portals seamlessly integrates with the [Real-Time Quotes API](https://developer.factset.com/api-catalog/real-time-quotes-api)\nthat provides real-time, delayed, and end-of-day pricing data and basic security identifier cross-reference. For direct access to price histories for\ncharting, please refer to the [Real-Time Time Series API](https://developer.factset.com/api-catalog/real-time-time-series-api).\n",
    "contact": {
      "name": "FactSet Research Systems",
      "url": "https://developer.factset.com/contact",
      "email": "api@factset.com"
    },
    "license": {
      "name": "Apache License, Version 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "servers": [
    {
      "url": "https://api.factset.com/wealth/v4"
    }
  ],
  "paths": {
    "/option/get": {
      "get": {
        "tags": [
          "option"
        ],
        "operationId": "getOptionGet",
        "summary": "Fundamental data for an option contract.",
        "description": "Fundamental data for an option contract; any other instrument yields empty\n            values for option contract-specific attributes. Dates are interpreted in the time\n            zone of the exchange. Option contracts are exchange-specific; each option contract\n            instrument has exactly one notation.",
        "parameters": [
          {
            "name": "identifier",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[B-DF-HJ-NP-TV-Z0-9]{6}-[SLR]$|^[A-Z0-9.#&*+]{1,47}-[A-Z0-9]{2,4}$|^[0-9]{3,20}$|^[B-DF-HJ-NP-TV-Z0-9]{6}[0-9]$|^[A-Z]{2}[A-Z0-9]{9}[0-9]$|^[A-Z1-9][A-Z0-9]{5}$|^[0-9]{1,9}$|^[A-Z0-9]{8}[0-9]$",
              "maxLength": 50,
              "minLength": 3,
              "example": "FDS-US",
              "description": "Identifier to resolve."
            },
            "required": true,
            "description": "Identifier to resolve.",
            "example": "FDS-US"
          },
          {
            "name": "identifierType",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "tickerRegion",
              "description": "Type of the identifier.\n| Value | Description |\n| --- | --- |\n| idInstrument | MDG identifier of an instrument. |\n| idNotation | MDG identifier of a listing. |\n| fdsPermanentIdentifierSecurity | FactSet Permanent Identifier on security level. |\n| fdsPermanentIdentifierListing | FactSet Permanent Identifier on listing level. |\n| fdsPermanentIdentifierRegional | Regional FactSet Permanent Identifier. |\n| tickerExchange | FactSet market symbol of a listing. |\n| tickerRegion | Regional FactSet ticker symbol. |\n| sedol | SEDOL or IDII of a listing. |\n| isin | ISIN of an instrument. |\n| wkn | WKN of an instrument. |\n| valor | Valor number of an instrument. |\n| cusip | CUSIP or CINS identifier of an instrument |\n\n",
              "enum": [
                "idInstrument",
                "idNotation",
                "fdsPermanentIdentifierSecurity",
                "fdsPermanentIdentifierListing",
                "fdsPermanentIdentifierRegional",
                "tickerExchange",
                "tickerRegion",
                "sedol",
                "isin",
                "wkn",
                "valor",
                "cusip"
              ]
            },
            "required": true,
            "description": "Type of the identifier.\n| Value | Description |\n| --- | --- |\n| idInstrument | MDG identifier of an instrument. |\n| idNotation | MDG identifier of a listing. |\n| fdsPermanentIdentifierSecurity | FactSet Permanent Identifier on security level. |\n| fdsPermanentIdentifierListing | FactSet Permanent Identifier on listing level. |\n| fdsPermanentIdentifierRegional | Regional FactSet Permanent Identifier. |\n| tickerExchange | FactSet market symbol of a listing. |\n| tickerRegion | Regional FactSet ticker symbol. |\n| sedol | SEDOL or IDII of a listing. |\n| isin | ISIN of an instrument. |\n| wkn | WKN of an instrument. |\n| valor | Valor number of an instrument. |\n| cusip | CUSIP or CINS identifier of an instrument |\n\n",
            "example": "tickerRegion"
          },
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          },
          {
            "name": "metaLanguage",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "ISO 639-1 code of the language.",
              "maxLength": 2,
              "minLength": 2,
              "example": "de"
            },
            "description": "ISO 639-1 code of the language.",
            "example": "de"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetOptionGet200Response"
          }
        }
      }
    },
    "/option/by-class/list": {
      "post": {
        "tags": [
          "option"
        ],
        "operationId": "postOptionByClassList",
        "summary": "List of option contracts for an option class.",
        "description": "List of option contracts for an option class. The list can be filtered based on option contract-specific parameters. All identifiers used as parameters must be valid and entitled.",
        "requestBody": {
          "description": "Request Body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostOptionByClassListRequest"
              },
              "example": {
                "data": {
                  "class": {
                    "id": "2002"
                  },
                  "filter": {
                    "validation": {
                      "onlyActive": false,
                      "price": {
                        "quality": "DLY",
                        "latest": {
                          "availableOnly": false,
                          "minimumDate": "2024-01-01"
                        },
                        "previous": {
                          "availableOnly": false,
                          "minimumDate": "2024-12-24"
                        }
                      }
                    }
                  },
                  "contract": {
                    "excercise": {
                      "right": "call",
                      "style": "american"
                    },
                    "strikePrice": {
                      "minimum": {
                        "value": 3.03,
                        "inclusive": true
                      },
                      "maximum": {
                        "value": 5.05,
                        "inclusive": true
                      }
                    }
                  },
                  "lifeCycle": {
                    "maturity": {
                      "date": {
                        "start": "2024-01-01",
                        "end": "2024-12-24"
                      },
                      "interval": [
                        "monthly"
                      ]
                    },
                    "expiration": {
                      "month": 2,
                      "year": -2
                    }
                  },
                  "contractSize": {
                    "restrict": {
                      "values": [
                        4.04
                      ]
                    },
                    "exclude": {
                      "values": [
                        4.04
                      ]
                    }
                  },
                  "openInterest": {
                    "minimum": {
                      "value": 5.05,
                      "inclusive": true
                    },
                    "maximum": {
                      "value": 3.03,
                      "inclusive": true
                    }
                  },
                  "keyFigures": {
                    "moneyness": {
                      "minimum": {
                        "value": 5.05,
                        "inclusive": true
                      },
                      "maximum": {
                        "value": 3.1415,
                        "inclusive": true
                      }
                    },
                    "impliedVolatility": {
                      "minimum": {
                        "value": 0.4,
                        "inclusive": true
                      },
                      "maximum": {
                        "value": 0.1,
                        "inclusive": true
                      }
                    },
                    "omega": {
                      "minimum": {
                        "value": 4.04,
                        "inclusive": true
                      },
                      "maximum": {
                        "value": 4.04,
                        "inclusive": true
                      }
                    },
                    "leverage": {
                      "minimum": {
                        "value": 3.03,
                        "inclusive": true
                      },
                      "maximum": {
                        "value": 3.1415,
                        "inclusive": true
                      }
                    },
                    "delta": {
                      "minimum": {
                        "value": 4.04,
                        "inclusive": true
                      },
                      "maximum": {
                        "value": 5.05,
                        "inclusive": true
                      }
                    },
                    "thetaOneWeek": {
                      "minimum": {
                        "value": 3.03,
                        "inclusive": true
                      },
                      "maximum": {
                        "value": 5.05,
                        "inclusive": true
                      }
                    },
                    "vega": {
                      "minimum": {
                        "value": 4.04,
                        "inclusive": true
                      },
                      "maximum": {
                        "value": 4.04,
                        "inclusive": true
                      }
                    },
                    "gamma": {
                      "minimum": {
                        "value": 3.1415,
                        "inclusive": true
                      },
                      "maximum": {
                        "value": 5.05,
                        "inclusive": true
                      }
                    },
                    "rho": {
                      "minimum": {
                        "value": 1.01,
                        "inclusive": true
                      },
                      "maximum": {
                        "value": 4.04,
                        "inclusive": true
                      }
                    }
                  }
                },
                "meta": {
                  "attributes": [],
                  "language": "en",
                  "sort": [
                    "-keyFigures.impliedVolatility"
                  ],
                  "pagination": {
                    "offset": 0,
                    "limit": 20
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PostOptionByClassList200Response"
          }
        },
        "parameters": []
      }
    },
    "/option/by-class/value-ranges/get": {
      "post": {
        "tags": [
          "option"
        ],
        "operationId": "postOptionByClassValueRangesGet",
        "summary": "Possible values and value ranges for the parameters used in the endpoint `/option/by-class/list`.",
        "description": "The endpoint returns the possible values and value ranges for the parameters used in the endpoint `/option/by-class/list`. It allows to request the values and value ranges only for a restricted set of notations that match predefined parameters. If more than one notation of an instrument matches the parameters, and no market priority has been specified, only the notation with the highest trading volume, averaged over one month, is considered. The functionality may be used to pre-fill the values and value ranges of the parameters of the `/option/by-class/list` endpoint so that performing a search always leads to a non-empty list of notations. Lists of distinct values, e.g. identifiers, are sorted descending by the number of notations for each value.",
        "requestBody": {
          "description": "Request Body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostOptionByClassValueRangesGetRequest"
              },
              "example": {
                "data": {
                  "class": {
                    "id": "3003"
                  },
                  "filter": {
                    "validation": {
                      "onlyActive": false,
                      "price": {
                        "quality": "DLY",
                        "latest": {
                          "availableOnly": false,
                          "minimumDate": "2024-12-24"
                        },
                        "previous": {
                          "availableOnly": false,
                          "minimumDate": "2024-01-01"
                        }
                      }
                    }
                  },
                  "contract": {
                    "excercise": {
                      "right": "call",
                      "style": "american"
                    },
                    "strikePrice": {
                      "minimum": {
                        "value": 1.01,
                        "inclusive": true
                      },
                      "maximum": {
                        "value": 1.01,
                        "inclusive": true
                      }
                    }
                  },
                  "lifeCycle": {
                    "maturity": {
                      "date": {
                        "start": "2024-12-24",
                        "end": "2024-01-01"
                      },
                      "interval": [
                        "daily"
                      ]
                    },
                    "expiration": {
                      "month": 132,
                      "year": -132
                    }
                  },
                  "contractSize": {
                    "restrict": {
                      "values": [
                        3.1415
                      ]
                    },
                    "exclude": {
                      "values": [
                        2.02
                      ]
                    }
                  },
                  "openInterest": {
                    "minimum": {
                      "value": 2.02,
                      "inclusive": true
                    },
                    "maximum": {
                      "value": 3.03,
                      "inclusive": true
                    }
                  },
                  "keyFigures": {
                    "moneyness": {
                      "minimum": {
                        "value": 4.04,
                        "inclusive": true
                      },
                      "maximum": {
                        "value": 3.03,
                        "inclusive": true
                      }
                    },
                    "impliedVolatility": {
                      "minimum": {
                        "value": 0.2,
                        "inclusive": true
                      },
                      "maximum": {
                        "value": 0.2,
                        "inclusive": true
                      }
                    },
                    "omega": {
                      "minimum": {
                        "value": 5.05,
                        "inclusive": true
                      },
                      "maximum": {
                        "value": 3.03,
                        "inclusive": true
                      }
                    },
                    "leverage": {
                      "minimum": {
                        "value": 4.04,
                        "inclusive": true
                      },
                      "maximum": {
                        "value": 2.02,
                        "inclusive": true
                      }
                    },
                    "delta": {
                      "minimum": {
                        "value": 3.1415,
                        "inclusive": true
                      },
                      "maximum": {
                        "value": 4.04,
                        "inclusive": true
                      }
                    },
                    "thetaOneWeek": {
                      "minimum": {
                        "value": 2.02,
                        "inclusive": true
                      },
                      "maximum": {
                        "value": 2.02,
                        "inclusive": true
                      }
                    },
                    "vega": {
                      "minimum": {
                        "value": 3.03,
                        "inclusive": true
                      },
                      "maximum": {
                        "value": 1.01,
                        "inclusive": true
                      }
                    },
                    "gamma": {
                      "minimum": {
                        "value": 3.03,
                        "inclusive": true
                      },
                      "maximum": {
                        "value": 2.02,
                        "inclusive": true
                      }
                    },
                    "rho": {
                      "minimum": {
                        "value": 5.05,
                        "inclusive": true
                      },
                      "maximum": {
                        "value": 3.1415,
                        "inclusive": true
                      }
                    }
                  }
                },
                "meta": {
                  "attributes": []
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PostOptionByClassValueRangesGet200Response"
          }
        },
        "parameters": []
      }
    },
    "/option/class/screener/search": {
      "post": {
        "tags": [
          "option"
        ],
        "operationId": "postOptionClassScreenerSearch",
        "summary": "Screener for option classes based on option class-specific parameters.",
        "description": "Screener for option classes based on option class-specific parameters. An option class is defined by an exchange and includes all option contracts with the same reference data (e.g. underlying instrument). The result is limited to the 500 option classes with the most option contracts per class, that satisfy all the selected filters. All identifiers used as parameters must be valid and entitled.",
        "requestBody": {
          "description": "Request Body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostOptionClassScreenerSearchRequest"
              },
              "example": {
                "data": {
                  "text": {
                    "attributes": [
                      "allEntitled"
                    ],
                    "value": "FactSet"
                  },
                  "market": {
                    "restrict": {
                      "ids": [
                        5
                      ]
                    },
                    "exclude": {
                      "ids": [
                        1
                      ]
                    }
                  },
                  "underlying": {
                    "instrument": {
                      "id": "209485"
                    },
                    "notation": {
                      "id": "1532562"
                    }
                  },
                  "currency": {
                    "restrict": {
                      "ids": [
                        3
                      ]
                    },
                    "exclude": {
                      "ids": [
                        2
                      ]
                    }
                  },
                  "category": {
                    "restrict": {
                      "ids": [
                        1
                      ]
                    },
                    "exclude": {
                      "ids": [
                        4
                      ]
                    }
                  }
                },
                "meta": {
                  "attributes": [],
                  "language": "en",
                  "sort": [
                    "-category.name"
                  ]
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PostOptionClassScreenerSearch200Response"
          }
        },
        "parameters": []
      }
    },
    "/option/key-figures/get": {
      "get": {
        "tags": [
          "option"
        ],
        "operationId": "getOptionKeyFiguresGet",
        "summary": "Key figures of an option contract.",
        "description": "Key figures of an option contract.",
        "parameters": [
          {
            "name": "identifier",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[B-DF-HJ-NP-TV-Z0-9]{6}-[SLR]$|^[A-Z0-9.#&*+]{1,47}-[A-Z0-9]{2,4}$|^[0-9]{3,20}$|^[B-DF-HJ-NP-TV-Z0-9]{6}[0-9]$|^[A-Z]{2}[A-Z0-9]{9}[0-9]$|^[A-Z1-9][A-Z0-9]{5}$|^[0-9]{1,9}$|^[A-Z0-9]{8}[0-9]$",
              "maxLength": 50,
              "minLength": 3,
              "example": "FDS-US",
              "description": "Identifier to resolve."
            },
            "required": true,
            "description": "Identifier to resolve.",
            "example": "FDS-US"
          },
          {
            "name": "identifierType",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "tickerRegion",
              "description": "Type of the identifier. An instrument level identifier is resolved to a listing level identifier according to the configured listing selection rules.\n| Value | Description |\n| --- | --- |\n| idInstrument | MDG identifier of an instrument. |\n| idNotation | MDG identifier of a listing. |\n| fdsPermanentIdentifierSecurity | FactSet Permanent Identifier on security level. |\n| fdsPermanentIdentifierListing | FactSet Permanent Identifier on listing level. |\n| fdsPermanentIdentifierRegional | Regional FactSet Permanent Identifier, identifying the primary listing in the region. |\n| tickerExchange | FactSet market symbol of a listing. |\n| tickerRegion | Regional FactSet ticker symbol, identifying the primary listing in the region. |\n| sedol | SEDOL or IDII of a listing. |\n| isin | ISIN of an instrument. |\n| wkn | WKN of an instrument. |\n| valor | Valor number of an instrument. |\n| cusip | CUSIP or CINS identifier of an instrument |\n\n",
              "enum": [
                "idInstrument",
                "idNotation",
                "fdsPermanentIdentifierSecurity",
                "fdsPermanentIdentifierListing",
                "fdsPermanentIdentifierRegional",
                "tickerExchange",
                "tickerRegion",
                "sedol",
                "isin",
                "wkn",
                "valor",
                "cusip"
              ]
            },
            "required": true,
            "description": "Type of the identifier. An instrument level identifier is resolved to a listing level identifier according to the configured listing selection rules.\n| Value | Description |\n| --- | --- |\n| idInstrument | MDG identifier of an instrument. |\n| idNotation | MDG identifier of a listing. |\n| fdsPermanentIdentifierSecurity | FactSet Permanent Identifier on security level. |\n| fdsPermanentIdentifierListing | FactSet Permanent Identifier on listing level. |\n| fdsPermanentIdentifierRegional | Regional FactSet Permanent Identifier, identifying the primary listing in the region. |\n| tickerExchange | FactSet market symbol of a listing. |\n| tickerRegion | Regional FactSet ticker symbol, identifying the primary listing in the region. |\n| sedol | SEDOL or IDII of a listing. |\n| isin | ISIN of an instrument. |\n| wkn | WKN of an instrument. |\n| valor | Valor number of an instrument. |\n| cusip | CUSIP or CINS identifier of an instrument |\n\n",
            "example": "tickerRegion"
          },
          {
            "name": "_attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 100
              },
              "uniqueItems": true,
              "maxItems": 50
            },
            "style": "form",
            "explode": false,
            "description": "Limit the attributes returned in the response to the specified set."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetOptionKeyFiguresGet200Response"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AttributesMember": {
        "type": "array",
        "description": "Limit the attributes returned in the response to the specified set.",
        "items": {
          "type": "string",
          "maxLength": 100
        },
        "maxItems": 100,
        "uniqueItems": true,
        "example": []
      },
      "LanguageMember": {
        "type": "string",
        "description": "ISO 639-1 code of the language.",
        "maxLength": 2,
        "minLength": 2,
        "example": "en"
      },
      "StatusObject": {
        "type": "object",
        "properties": {
          "code": {
            "type": "number",
            "format": "int32",
            "description": "The HTTP status code of the response, mirroring the code from the Status-Line of the HTTP response message (see [RFC2616] section 6.1).",
            "example": 200
          }
        },
        "description": "The status member contains the status code of the response."
      },
      "OffsetBasedPaginationOutputObject": {
        "type": "object",
        "description": "Pagination attributes for the offset-based pagination strategy.",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of entries in the result set.",
            "nullable": true,
            "example": 3
          },
          "isEstimatedTotal": {
            "type": "boolean",
            "description": "Flag indicating that the value of \"total\" is estimated.",
            "nullable": true,
            "example": false
          }
        }
      },
      "PostOptionByClassListRequest": {
        "description": "Request Body",
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "The data member contains the request's primary data.",
            "properties": {
              "class": {
                "type": "object",
                "description": "A product group of options from the same exchange and with the same underlying.",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "id64",
                    "description": "Identifier of the option class.",
                    "example": "2002"
                  }
                },
                "required": [
                  "id"
                ]
              },
              "filter": {
                "type": "object",
                "description": "Criteria that filter the items in the response list; only items that match all of the criteria are returned.",
                "properties": {
                  "validation": {
                    "type": "object",
                    "description": "Validation parameters.",
                    "properties": {
                      "onlyActive": {
                        "type": "boolean",
                        "description": "If `true`, only active notations will be returned.",
                        "example": false
                      },
                      "price": {
                        "type": "object",
                        "description": "Price-related parameters.",
                        "properties": {
                          "quality": {
                            "type": "string",
                            "description": "Quality of the price.\n| Value | Description |\n| --- | --- |\n| DLY | Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes. |\n| EOD | End-of-day: prices updated once per day after the close of trading, possibly with an exchange-imposed delay of several hours or days. |\n\n",
                            "enum": [
                              "DLY",
                              "EOD"
                            ],
                            "example": "DLY"
                          },
                          "latest": {
                            "type": "object",
                            "description": "Parameters related to the presence and age of the most recent trade price.",
                            "properties": {
                              "availableOnly": {
                                "type": "boolean",
                                "description": "If `true`, only notations for which a trade price (even an outdated one) is available will be returned.",
                                "example": false
                              },
                              "minimumDate": {
                                "type": "string",
                                "format": "date",
                                "description": "Earliest admissible date of the most recent trade price.",
                                "example": "2024-01-01"
                              }
                            }
                          },
                          "previous": {
                            "type": "object",
                            "description": "Parameters related to the presence and age of a trade price from a preceding trading day.",
                            "properties": {
                              "availableOnly": {
                                "type": "boolean",
                                "description": "If `true`, only notations for which a trade price from a preceding trading day is available will be returned.",
                                "example": false
                              },
                              "minimumDate": {
                                "type": "string",
                                "format": "date",
                                "description": "Earliest admissible date of the trade price from a preceding trading day.",
                                "example": "2024-12-24"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "contract": {
                "type": "object",
                "description": "Parameters related to the option contract.",
                "properties": {
                  "excercise": {
                    "type": "object",
                    "description": "Parameters related to the exercise.",
                    "properties": {
                      "right": {
                        "type": "string",
                        "description": "Restricts the exercise right of the option.\n| Value | Description |\n| --- | --- |\n| put | A put option gives the owner the right, but not the obligation, to sell an asset at a specified price within a specific time period. |\n| call | A call option gives the owner the right, but not the obligation, to buy an asset at a specified price within a specific time period. |\n\n",
                        "enum": [
                          "put",
                          "call"
                        ],
                        "example": "call"
                      },
                      "style": {
                        "type": "string",
                        "description": "Restricts the exercise style of the option.\n| Value | Description |\n| --- | --- |\n| american | An American-style option can be exercised anytime during its life. |\n| european | A European-style option can be exercised at the end of its life. |\n\n",
                        "enum": [
                          "american",
                          "european"
                        ],
                        "example": "american"
                      }
                    }
                  },
                  "strikePrice": {
                    "description": "Value range of the strike price of the option.",
                    "type": "object",
                    "format": "realRange",
                    "properties": {
                      "minimum": {
                        "type": "object",
                        "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "real",
                            "description": "The minimum value.",
                            "example": 3.03
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Indicates whether the minimum value is included in the range or not.",
                            "default": true,
                            "example": true
                          }
                        },
                        "required": [
                          "value"
                        ]
                      },
                      "maximum": {
                        "type": "object",
                        "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "real",
                            "description": "The maximum value.",
                            "example": 5.05
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Indicates whether the maximum value is included in the range or not.",
                            "default": true,
                            "example": true
                          }
                        },
                        "required": [
                          "value"
                        ]
                      }
                    }
                  }
                }
              },
              "lifeCycle": {
                "type": "object",
                "description": "Parameters related to important dates.",
                "properties": {
                  "maturity": {
                    "type": "object",
                    "description": "Parameters related to the maturity.",
                    "properties": {
                      "date": {
                        "type": "object",
                        "format": "dateRange",
                        "properties": {
                          "start": {
                            "type": "string",
                            "format": "date",
                            "description": "The starting point of the date range (inclusive), or `null` to indicate that the date range extends indefinitely into the past.",
                            "example": "2024-01-01"
                          },
                          "end": {
                            "type": "string",
                            "format": "date",
                            "description": "The ending point of the date range (inclusive), or `null` to indicate that the date range extends indefinitely into the future.",
                            "example": "2024-12-24"
                          }
                        },
                        "required": [
                          "start",
                          "end"
                        ],
                        "description": "Date range of the maturity date."
                      },
                      "interval": {
                        "description": "Restricts the maturity interval of the option.\n| Value | Description |\n| --- | --- |\n| monthly | Monthly |\n| weekly | Weekly |\n| daily | Daily |\n| mixed | Mixed |\n\n",
                        "type": "array",
                        "nullable": false,
                        "items": {
                          "type": "string",
                          "enum": [
                            "monthly",
                            "weekly",
                            "daily",
                            "mixed"
                          ],
                          "example": "monthly"
                        },
                        "uniqueItems": true,
                        "maxItems": 4
                      }
                    }
                  },
                  "expiration": {
                    "type": "object",
                    "description": "Parameters related to the expiration month and year.",
                    "properties": {
                      "month": {
                        "type": "number",
                        "format": "int32",
                        "description": "Month of the option's expiration.",
                        "example": 2
                      },
                      "year": {
                        "type": "number",
                        "format": "int32",
                        "description": "Year of the option's expiration.",
                        "example": -2
                      }
                    }
                  }
                }
              },
              "contractSize": {
                "type": "object",
                "description": "Parameters related to the contract size of the option.",
                "properties": {
                  "restrict": {
                    "type": "object",
                    "description": "Specifies the contract sizes an option may have.",
                    "properties": {
                      "values": {
                        "description": "Set of contract sizes.",
                        "type": "array",
                        "nullable": false,
                        "items": {
                          "type": "number",
                          "format": "real",
                          "example": 4.04
                        },
                        "uniqueItems": true,
                        "maxItems": 5
                      }
                    }
                  },
                  "exclude": {
                    "type": "object",
                    "description": "Specifies the contract sizes an option may not have.",
                    "properties": {
                      "values": {
                        "description": "Set of contract sizes.",
                        "type": "array",
                        "nullable": false,
                        "items": {
                          "type": "number",
                          "format": "real",
                          "example": 4.04
                        },
                        "uniqueItems": true,
                        "maxItems": 5
                      }
                    }
                  }
                }
              },
              "openInterest": {
                "type": "object",
                "format": "realRange",
                "properties": {
                  "minimum": {
                    "type": "object",
                    "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                    "properties": {
                      "value": {
                        "type": "number",
                        "format": "real",
                        "description": "The minimum value.",
                        "example": 5.05
                      },
                      "inclusive": {
                        "type": "boolean",
                        "description": "Indicates whether the minimum value is included in the range or not.",
                        "default": true,
                        "example": true
                      }
                    },
                    "required": [
                      "value"
                    ]
                  },
                  "maximum": {
                    "type": "object",
                    "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                    "properties": {
                      "value": {
                        "type": "number",
                        "format": "real",
                        "description": "The maximum value.",
                        "example": 3.03
                      },
                      "inclusive": {
                        "type": "boolean",
                        "description": "Indicates whether the maximum value is included in the range or not.",
                        "default": true,
                        "example": true
                      }
                    },
                    "required": [
                      "value"
                    ]
                  }
                },
                "description": "Value range of the open positions."
              },
              "keyFigures": {
                "type": "object",
                "description": "Parameters related to the key figures.",
                "properties": {
                  "moneyness": {
                    "type": "object",
                    "format": "realRange",
                    "properties": {
                      "minimum": {
                        "type": "object",
                        "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "real",
                            "description": "The minimum value.",
                            "example": 5.05
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Indicates whether the minimum value is included in the range or not.",
                            "default": true,
                            "example": true
                          }
                        },
                        "required": [
                          "value"
                        ]
                      },
                      "maximum": {
                        "type": "object",
                        "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "real",
                            "description": "The maximum value.",
                            "example": 3.1415
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Indicates whether the maximum value is included in the range or not.",
                            "default": true,
                            "example": true
                          }
                        },
                        "required": [
                          "value"
                        ]
                      }
                    },
                    "description": "Value range of the ratio of the current underlying level to the strike of an option. For calls, it is current underlying level divided by the strike. For puts, it is strike divided by the current underlying level. It measures the degree to which an option is in-the-money (moneyness > 1) or out-of-the-money (moneyness < 1). If moneyness = 1, the option is at-the-money."
                  },
                  "impliedVolatility": {
                    "type": "object",
                    "format": "relativeValueRange",
                    "properties": {
                      "minimum": {
                        "type": "object",
                        "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "relativeValue",
                            "description": "The minimum value.",
                            "example": 0.4
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Indicates whether the minimum value is included in the range or not.",
                            "default": true,
                            "example": true
                          }
                        },
                        "required": [
                          "value"
                        ]
                      },
                      "maximum": {
                        "type": "object",
                        "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "relativeValue",
                            "description": "The maximum value.",
                            "example": 0.1
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Indicates whether the maximum value is included in the range or not.",
                            "default": true,
                            "example": true
                          }
                        },
                        "required": [
                          "value"
                        ]
                      }
                    },
                    "description": "Value range of the implied volatility. It represents the volatility of the underlying that justifies the ask price of the option, when used as a parameter in the option's pricing model (such as Black-Scholes). Its value is a result of the pricing process, thus it represents the annual volatility of the underlying expected by the market participants until maturity of the option."
                  },
                  "omega": {
                    "type": "object",
                    "format": "realRange",
                    "properties": {
                      "minimum": {
                        "type": "object",
                        "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "real",
                            "description": "The minimum value.",
                            "example": 4.04
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Indicates whether the minimum value is included in the range or not.",
                            "default": true,
                            "example": true
                          }
                        },
                        "required": [
                          "value"
                        ]
                      },
                      "maximum": {
                        "type": "object",
                        "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "real",
                            "description": "The maximum value.",
                            "example": 4.04
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Indicates whether the maximum value is included in the range or not.",
                            "default": true,
                            "example": true
                          }
                        },
                        "required": [
                          "value"
                        ]
                      }
                    },
                    "description": "Value range of the omega. It represents delta (see attribute delta) multiplied with the leverage (see attribute `leverage`), both calculated based on the ask price of the option. Omega indicates the elasticity of the option's price regarding the underlying level."
                  },
                  "leverage": {
                    "type": "object",
                    "format": "realRange",
                    "properties": {
                      "minimum": {
                        "type": "object",
                        "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "real",
                            "description": "The minimum value.",
                            "example": 3.03
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Indicates whether the minimum value is included in the range or not.",
                            "default": true,
                            "example": true
                          }
                        },
                        "required": [
                          "value"
                        ]
                      },
                      "maximum": {
                        "type": "object",
                        "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "real",
                            "description": "The maximum value.",
                            "example": 3.1415
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Indicates whether the maximum value is included in the range or not.",
                            "default": true,
                            "example": true
                          }
                        },
                        "required": [
                          "value"
                        ]
                      }
                    },
                    "description": "Value range of the leverage. It represents the ratio of the underlying level to the ask price of the option, adjusted for the currency cross rate."
                  },
                  "delta": {
                    "type": "object",
                    "format": "realRange",
                    "properties": {
                      "minimum": {
                        "type": "object",
                        "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "real",
                            "description": "The minimum value.",
                            "example": 4.04
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Indicates whether the minimum value is included in the range or not.",
                            "default": true,
                            "example": true
                          }
                        },
                        "required": [
                          "value"
                        ]
                      },
                      "maximum": {
                        "type": "object",
                        "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "real",
                            "description": "The maximum value.",
                            "example": 5.05
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Indicates whether the maximum value is included in the range or not.",
                            "default": true,
                            "example": true
                          }
                        },
                        "required": [
                          "value"
                        ]
                      }
                    },
                    "description": "Value range of the delta. It represents the first partial derivative of the function determining the option's theoretical price with respect to the underlying level, evaluated at the underlying level. Delta indicates the ratio of the absolute change of the price of an option for an indefinitely small absolute change in the underlying level, thus it represents the price sensitivity of the option relative to changes in the underlying level."
                  },
                  "thetaOneWeek": {
                    "type": "object",
                    "format": "realRange",
                    "properties": {
                      "minimum": {
                        "type": "object",
                        "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "real",
                            "description": "The minimum value.",
                            "example": 3.03
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Indicates whether the minimum value is included in the range or not.",
                            "default": true,
                            "example": true
                          }
                        },
                        "required": [
                          "value"
                        ]
                      },
                      "maximum": {
                        "type": "object",
                        "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "real",
                            "description": "The maximum value.",
                            "example": 5.05
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Indicates whether the maximum value is included in the range or not.",
                            "default": true,
                            "example": true
                          }
                        },
                        "required": [
                          "value"
                        ]
                      }
                    },
                    "description": "Value range of the weekly theta. It represents the first partial derivative of the function determining the option's theoretical price with respect to the residual term, evaluated at the current residual term and multiplied by 7/365. Weekly theta indicates the absolute change (decrease) of the price of an option for a reduction of the residual term by one week (seven calendar days), thus it represents the price sensitivity of the option relative to changes in the residual term."
                  },
                  "vega": {
                    "type": "object",
                    "format": "realRange",
                    "properties": {
                      "minimum": {
                        "type": "object",
                        "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "real",
                            "description": "The minimum value.",
                            "example": 4.04
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Indicates whether the minimum value is included in the range or not.",
                            "default": true,
                            "example": true
                          }
                        },
                        "required": [
                          "value"
                        ]
                      },
                      "maximum": {
                        "type": "object",
                        "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "real",
                            "description": "The maximum value.",
                            "example": 4.04
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Indicates whether the maximum value is included in the range or not.",
                            "default": true,
                            "example": true
                          }
                        },
                        "required": [
                          "value"
                        ]
                      }
                    },
                    "description": "Value range of the vega. It represents the first partial derivative of the function determining the option's theoretical price with respect to the implied volatility, evaluated at the current implied volatility. Vega indicates the ratio of the absolute change of the price of an option for an absolute change of the implied volatility, thus it represents the price sensitivity of the option relative to changes in the implied volatility."
                  },
                  "gamma": {
                    "type": "object",
                    "format": "realRange",
                    "properties": {
                      "minimum": {
                        "type": "object",
                        "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "real",
                            "description": "The minimum value.",
                            "example": 3.1415
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Indicates whether the minimum value is included in the range or not.",
                            "default": true,
                            "example": true
                          }
                        },
                        "required": [
                          "value"
                        ]
                      },
                      "maximum": {
                        "type": "object",
                        "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "real",
                            "description": "The maximum value.",
                            "example": 5.05
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Indicates whether the maximum value is included in the range or not.",
                            "default": true,
                            "example": true
                          }
                        },
                        "required": [
                          "value"
                        ]
                      }
                    },
                    "description": "Value range of the gamma. It represents the second partial derivative of the function determining the option's theoretical price with respect to the underlying level, evaluated at the current underlying level. Gamma indicates the rate of change of the option’s delta (see attribute `delta`) with respect to the underlying level."
                  },
                  "rho": {
                    "type": "object",
                    "format": "realRange",
                    "properties": {
                      "minimum": {
                        "type": "object",
                        "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "real",
                            "description": "The minimum value.",
                            "example": 1.01
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Indicates whether the minimum value is included in the range or not.",
                            "default": true,
                            "example": true
                          }
                        },
                        "required": [
                          "value"
                        ]
                      },
                      "maximum": {
                        "type": "object",
                        "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "real",
                            "description": "The maximum value.",
                            "example": 4.04
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Indicates whether the maximum value is included in the range or not.",
                            "default": true,
                            "example": true
                          }
                        },
                        "required": [
                          "value"
                        ]
                      }
                    },
                    "description": "Value range of the rho. It represents the first partial derivative of the function determining the option's theoretical price with respect to the risk-free interest rate, evaluated at the current risk-free interest rate. Rho indicates the ratio of the absolute change of the price of an option for an absolute change of the risk-free interest rate, thus it represents the price sensitivity of the option relative to changes in the risk-free interest rate. The key figure is shown in one basis point change."
                  }
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "The meta member contains the meta information of the request.",
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/AttributesMember"
              },
              "language": {
                "$ref": "#/components/schemas/LanguageMember"
              },
              "sort": {
                "description": "Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 10 (possibly prefixed) attribute name(s) is allowed.\n| Value |\n| --- |\n| instrument.normalizedSymbol |\n| -instrument.normalizedSymbol |\n| instrument.name |\n| -instrument.name |\n| instrument.exercise.right |\n| -instrument.exercise.right |\n| instrument.exercise.style |\n| -instrument.exercise.style |\n| instrument.strikePrice.level |\n| -instrument.strikePrice.level |\n| instrument.lifeCycle.maturity.date |\n| -instrument.lifeCycle.maturity.date |\n| instrument.lifeCycle.maturity.interval |\n| -instrument.lifeCycle.maturity.interval |\n| instrument.lifeCycle.expiration.month |\n| -instrument.lifeCycle.expiration.month |\n| instrument.lifeCycle.expiration.year |\n| -instrument.lifeCycle.expiration.year |\n| instrument.contractSize |\n| -instrument.contractSize |\n| openInterest |\n| -openInterest |\n| keyFigures.moneyness |\n| -keyFigures.moneyness |\n| keyFigures.impliedVolatility |\n| -keyFigures.impliedVolatility |\n| keyFigures.omega |\n| -keyFigures.omega |\n| keyFigures.leverage |\n| -keyFigures.leverage |\n| keyFigures.delta |\n| -keyFigures.delta |\n| keyFigures.thetaOneWeek |\n| -keyFigures.thetaOneWeek |\n| keyFigures.vega |\n| -keyFigures.vega |\n| keyFigures.gamma |\n| -keyFigures.gamma |\n| keyFigures.rho |\n| -keyFigures.rho |\n\n",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "instrument.normalizedSymbol",
                    "-instrument.normalizedSymbol",
                    "instrument.name",
                    "-instrument.name",
                    "instrument.exercise.right",
                    "-instrument.exercise.right",
                    "instrument.exercise.style",
                    "-instrument.exercise.style",
                    "instrument.strikePrice.level",
                    "-instrument.strikePrice.level",
                    "instrument.lifeCycle.maturity.date",
                    "-instrument.lifeCycle.maturity.date",
                    "instrument.lifeCycle.maturity.interval",
                    "-instrument.lifeCycle.maturity.interval",
                    "instrument.lifeCycle.expiration.month",
                    "-instrument.lifeCycle.expiration.month",
                    "instrument.lifeCycle.expiration.year",
                    "-instrument.lifeCycle.expiration.year",
                    "instrument.contractSize",
                    "-instrument.contractSize",
                    "openInterest",
                    "-openInterest",
                    "keyFigures.moneyness",
                    "-keyFigures.moneyness",
                    "keyFigures.impliedVolatility",
                    "-keyFigures.impliedVolatility",
                    "keyFigures.omega",
                    "-keyFigures.omega",
                    "keyFigures.leverage",
                    "-keyFigures.leverage",
                    "keyFigures.delta",
                    "-keyFigures.delta",
                    "keyFigures.thetaOneWeek",
                    "-keyFigures.thetaOneWeek",
                    "keyFigures.vega",
                    "-keyFigures.vega",
                    "keyFigures.gamma",
                    "-keyFigures.gamma",
                    "keyFigures.rho",
                    "-keyFigures.rho"
                  ],
                  "example": "-keyFigures.impliedVolatility"
                },
                "maxItems": 10,
                "uniqueItems": true,
                "default": [
                  "instrument.normalizedSymbol"
                ]
              },
              "pagination": {
                "type": "object",
                "description": "Pagination attributes for the offset-based pagination strategy.",
                "properties": {
                  "offset": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "exclusiveMinimum": false,
                    "default": 0,
                    "description": "Non-negative number of entries to skip, or 0 (default).",
                    "example": 0
                  },
                  "limit": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "exclusiveMinimum": false,
                    "maximum": 500,
                    "exclusiveMaximum": false,
                    "default": 20,
                    "description": "Non-negative maximum number of entries to return.",
                    "example": 20
                  }
                }
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "PostOptionByClassValueRangesGetRequest": {
        "description": "Request Body",
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "The data member contains the request's primary data.",
            "properties": {
              "class": {
                "type": "object",
                "description": "A product group of options from the same exchange and with the same underlying.",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "id64",
                    "description": "Identifier of the option class.",
                    "example": "3003"
                  }
                },
                "required": [
                  "id"
                ]
              },
              "filter": {
                "type": "object",
                "description": "Criteria that filter the items in the response list; only items that match all of the criteria are returned.",
                "properties": {
                  "validation": {
                    "type": "object",
                    "description": "Validation parameters.",
                    "properties": {
                      "onlyActive": {
                        "type": "boolean",
                        "description": "If `true`, only active notations will be returned.",
                        "example": false
                      },
                      "price": {
                        "type": "object",
                        "description": "Price-related parameters.",
                        "properties": {
                          "quality": {
                            "type": "string",
                            "description": "Quality of the price.\n| Value | Description |\n| --- | --- |\n| DLY | Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes. |\n| EOD | End-of-day: prices updated once per day after the close of trading, possibly with an exchange-imposed delay of several hours or days. |\n\n",
                            "enum": [
                              "DLY",
                              "EOD"
                            ],
                            "example": "DLY"
                          },
                          "latest": {
                            "type": "object",
                            "description": "Parameters related to the presence and age of the most recent trade price.",
                            "properties": {
                              "availableOnly": {
                                "type": "boolean",
                                "description": "If `true`, only notations for which a trade price (even an outdated one) is available will be returned.",
                                "example": false
                              },
                              "minimumDate": {
                                "type": "string",
                                "format": "date",
                                "description": "Earliest admissible date of the most recent trade price.",
                                "example": "2024-12-24"
                              }
                            }
                          },
                          "previous": {
                            "type": "object",
                            "description": "Parameters related to the presence and age of a trade price from a preceding trading day.",
                            "properties": {
                              "availableOnly": {
                                "type": "boolean",
                                "description": "If `true`, only notations for which a trade price from a preceding trading day is available will be returned.",
                                "example": false
                              },
                              "minimumDate": {
                                "type": "string",
                                "format": "date",
                                "description": "Earliest admissible date of the trade price from a preceding trading day.",
                                "example": "2024-01-01"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "contract": {
                "type": "object",
                "description": "Parameters related to the option contract.",
                "properties": {
                  "excercise": {
                    "type": "object",
                    "description": "Parameters related to the exercise.",
                    "properties": {
                      "right": {
                        "type": "string",
                        "description": "Restricts the exercise right of the option.\n| Value | Description |\n| --- | --- |\n| put | A put option gives the owner the right, but not the obligation, to sell an asset at a specified price within a specific time period. |\n| call | A call option gives the owner the right, but not the obligation, to buy an asset at a specified price within a specific time period. |\n\n",
                        "enum": [
                          "put",
                          "call"
                        ],
                        "example": "call"
                      },
                      "style": {
                        "type": "string",
                        "description": "Restricts the exercise style of the option.\n| Value | Description |\n| --- | --- |\n| american | An American-style option can be exercised anytime during its life. |\n| european | A European-style option can be exercised at the end of its life. |\n\n",
                        "enum": [
                          "american",
                          "european"
                        ],
                        "example": "american"
                      }
                    }
                  },
                  "strikePrice": {
                    "description": "Value range of the strike price of the option.",
                    "type": "object",
                    "format": "realRange",
                    "properties": {
                      "minimum": {
                        "type": "object",
                        "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "real",
                            "description": "The minimum value.",
                            "example": 1.01
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Indicates whether the minimum value is included in the range or not.",
                            "default": true,
                            "example": true
                          }
                        },
                        "required": [
                          "value"
                        ]
                      },
                      "maximum": {
                        "type": "object",
                        "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "real",
                            "description": "The maximum value.",
                            "example": 1.01
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Indicates whether the maximum value is included in the range or not.",
                            "default": true,
                            "example": true
                          }
                        },
                        "required": [
                          "value"
                        ]
                      }
                    }
                  }
                }
              },
              "lifeCycle": {
                "type": "object",
                "description": "Parameters related to important dates.",
                "properties": {
                  "maturity": {
                    "type": "object",
                    "description": "Parameters related to the maturity.",
                    "properties": {
                      "date": {
                        "type": "object",
                        "format": "dateRange",
                        "properties": {
                          "start": {
                            "type": "string",
                            "format": "date",
                            "description": "The starting point of the date range (inclusive), or `null` to indicate that the date range extends indefinitely into the past.",
                            "example": "2024-12-24"
                          },
                          "end": {
                            "type": "string",
                            "format": "date",
                            "description": "The ending point of the date range (inclusive), or `null` to indicate that the date range extends indefinitely into the future.",
                            "example": "2024-01-01"
                          }
                        },
                        "required": [
                          "start",
                          "end"
                        ],
                        "description": "Date range of the maturity date."
                      },
                      "interval": {
                        "description": "Restricts the maturity interval of the option.\n| Value | Description |\n| --- | --- |\n| monthly | Monthly |\n| weekly | Weekly |\n| daily | Daily |\n| mixed | Mixed |\n\n",
                        "type": "array",
                        "nullable": false,
                        "items": {
                          "type": "string",
                          "enum": [
                            "monthly",
                            "weekly",
                            "daily",
                            "mixed"
                          ],
                          "example": "daily"
                        },
                        "uniqueItems": true,
                        "maxItems": 4
                      }
                    }
                  },
                  "expiration": {
                    "type": "object",
                    "description": "Parameters related to the expiration month and year.",
                    "properties": {
                      "month": {
                        "type": "number",
                        "format": "int32",
                        "description": "Month of the option's expiration.",
                        "example": 132
                      },
                      "year": {
                        "type": "number",
                        "format": "int32",
                        "description": "Year of the option's expiration.",
                        "example": -132
                      }
                    }
                  }
                }
              },
              "contractSize": {
                "type": "object",
                "description": "Parameters related to the contract size of the option.",
                "properties": {
                  "restrict": {
                    "type": "object",
                    "description": "Specifies the contract sizes an option may have.",
                    "properties": {
                      "values": {
                        "description": "Set of contract sizes.",
                        "type": "array",
                        "nullable": false,
                        "items": {
                          "type": "number",
                          "format": "real",
                          "example": 3.1415
                        },
                        "uniqueItems": true,
                        "maxItems": 5
                      }
                    }
                  },
                  "exclude": {
                    "type": "object",
                    "description": "Specifies the contract sizes an option may not have.",
                    "properties": {
                      "values": {
                        "description": "Set of contract sizes.",
                        "type": "array",
                        "nullable": false,
                        "items": {
                          "type": "number",
                          "format": "real",
                          "example": 2.02
                        },
                        "uniqueItems": true,
                        "maxItems": 5
                      }
                    }
                  }
                }
              },
              "openInterest": {
                "type": "object",
                "format": "realRange",
                "properties": {
                  "minimum": {
                    "type": "object",
                    "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                    "properties": {
                      "value": {
                        "type": "number",
                        "format": "real",
                        "description": "The minimum value.",
                        "example": 2.02
                      },
                      "inclusive": {
                        "type": "boolean",
                        "description": "Indicates whether the minimum value is included in the range or not.",
                        "default": true,
                        "example": true
                      }
                    },
                    "required": [
                      "value"
                    ]
                  },
                  "maximum": {
                    "type": "object",
                    "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                    "properties": {
                      "value": {
                        "type": "number",
                        "format": "real",
                        "description": "The maximum value.",
                        "example": 3.03
                      },
                      "inclusive": {
                        "type": "boolean",
                        "description": "Indicates whether the maximum value is included in the range or not.",
                        "default": true,
                        "example": true
                      }
                    },
                    "required": [
                      "value"
                    ]
                  }
                },
                "description": "Value range of the open positions."
              },
              "keyFigures": {
                "type": "object",
                "description": "Parameters related to the key figures.",
                "properties": {
                  "moneyness": {
                    "type": "object",
                    "format": "realRange",
                    "properties": {
                      "minimum": {
                        "type": "object",
                        "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "real",
                            "description": "The minimum value.",
                            "example": 4.04
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Indicates whether the minimum value is included in the range or not.",
                            "default": true,
                            "example": true
                          }
                        },
                        "required": [
                          "value"
                        ]
                      },
                      "maximum": {
                        "type": "object",
                        "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "real",
                            "description": "The maximum value.",
                            "example": 3.03
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Indicates whether the maximum value is included in the range or not.",
                            "default": true,
                            "example": true
                          }
                        },
                        "required": [
                          "value"
                        ]
                      }
                    },
                    "description": "Value range of the ratio of the current underlying level to the strike of an option. For calls, it is current underlying level divided by the strike. For puts, it is strike divided by the current underlying level. It measures the degree to which an option is in-the-money (moneyness > 1) or out-of-the-money (moneyness < 1). If moneyness = 1, the option is at-the-money."
                  },
                  "impliedVolatility": {
                    "type": "object",
                    "format": "relativeValueRange",
                    "properties": {
                      "minimum": {
                        "type": "object",
                        "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "relativeValue",
                            "description": "The minimum value.",
                            "example": 0.2
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Indicates whether the minimum value is included in the range or not.",
                            "default": true,
                            "example": true
                          }
                        },
                        "required": [
                          "value"
                        ]
                      },
                      "maximum": {
                        "type": "object",
                        "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "relativeValue",
                            "description": "The maximum value.",
                            "example": 0.2
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Indicates whether the maximum value is included in the range or not.",
                            "default": true,
                            "example": true
                          }
                        },
                        "required": [
                          "value"
                        ]
                      }
                    },
                    "description": "Value range of the implied volatility. It represents the volatility of the underlying that justifies the ask price of the option, when used as a parameter in the option's pricing model (such as Black-Scholes). Its value is a result of the pricing process, thus it represents the annual volatility of the underlying expected by the market participants until maturity of the option."
                  },
                  "omega": {
                    "type": "object",
                    "format": "realRange",
                    "properties": {
                      "minimum": {
                        "type": "object",
                        "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "real",
                            "description": "The minimum value.",
                            "example": 5.05
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Indicates whether the minimum value is included in the range or not.",
                            "default": true,
                            "example": true
                          }
                        },
                        "required": [
                          "value"
                        ]
                      },
                      "maximum": {
                        "type": "object",
                        "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "real",
                            "description": "The maximum value.",
                            "example": 3.03
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Indicates whether the maximum value is included in the range or not.",
                            "default": true,
                            "example": true
                          }
                        },
                        "required": [
                          "value"
                        ]
                      }
                    },
                    "description": "Value range of the omega. It represents delta (see attribute delta) multiplied with the leverage (see attribute `leverage`), both calculated based on the ask price of the option. Omega indicates the elasticity of the option's price regarding the underlying level."
                  },
                  "leverage": {
                    "type": "object",
                    "format": "realRange",
                    "properties": {
                      "minimum": {
                        "type": "object",
                        "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "real",
                            "description": "The minimum value.",
                            "example": 4.04
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Indicates whether the minimum value is included in the range or not.",
                            "default": true,
                            "example": true
                          }
                        },
                        "required": [
                          "value"
                        ]
                      },
                      "maximum": {
                        "type": "object",
                        "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "real",
                            "description": "The maximum value.",
                            "example": 2.02
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Indicates whether the maximum value is included in the range or not.",
                            "default": true,
                            "example": true
                          }
                        },
                        "required": [
                          "value"
                        ]
                      }
                    },
                    "description": "Value range of the leverage. It represents the ratio of the underlying level to the ask price of the option, adjusted for the currency cross rate."
                  },
                  "delta": {
                    "type": "object",
                    "format": "realRange",
                    "properties": {
                      "minimum": {
                        "type": "object",
                        "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "real",
                            "description": "The minimum value.",
                            "example": 3.1415
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Indicates whether the minimum value is included in the range or not.",
                            "default": true,
                            "example": true
                          }
                        },
                        "required": [
                          "value"
                        ]
                      },
                      "maximum": {
                        "type": "object",
                        "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "real",
                            "description": "The maximum value.",
                            "example": 4.04
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Indicates whether the maximum value is included in the range or not.",
                            "default": true,
                            "example": true
                          }
                        },
                        "required": [
                          "value"
                        ]
                      }
                    },
                    "description": "Value range of the delta. It represents the first partial derivative of the function determining the option's theoretical price with respect to the underlying level, evaluated at the underlying level. Delta indicates the ratio of the absolute change of the price of an option for an indefinitely small absolute change in the underlying level, thus it represents the price sensitivity of the option relative to changes in the underlying level."
                  },
                  "thetaOneWeek": {
                    "type": "object",
                    "format": "realRange",
                    "properties": {
                      "minimum": {
                        "type": "object",
                        "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "real",
                            "description": "The minimum value.",
                            "example": 2.02
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Indicates whether the minimum value is included in the range or not.",
                            "default": true,
                            "example": true
                          }
                        },
                        "required": [
                          "value"
                        ]
                      },
                      "maximum": {
                        "type": "object",
                        "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "real",
                            "description": "The maximum value.",
                            "example": 2.02
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Indicates whether the maximum value is included in the range or not.",
                            "default": true,
                            "example": true
                          }
                        },
                        "required": [
                          "value"
                        ]
                      }
                    },
                    "description": "Value range of the weekly theta. It represents the first partial derivative of the function determining the option's theoretical price with respect to the residual term, evaluated at the current residual term and multiplied by 7/365. Weekly theta indicates the absolute change (decrease) of the price of an option for a reduction of the residual term by one week (seven calendar days), thus it represents the price sensitivity of the option relative to changes in the residual term."
                  },
                  "vega": {
                    "type": "object",
                    "format": "realRange",
                    "properties": {
                      "minimum": {
                        "type": "object",
                        "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "real",
                            "description": "The minimum value.",
                            "example": 3.03
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Indicates whether the minimum value is included in the range or not.",
                            "default": true,
                            "example": true
                          }
                        },
                        "required": [
                          "value"
                        ]
                      },
                      "maximum": {
                        "type": "object",
                        "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "real",
                            "description": "The maximum value.",
                            "example": 1.01
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Indicates whether the maximum value is included in the range or not.",
                            "default": true,
                            "example": true
                          }
                        },
                        "required": [
                          "value"
                        ]
                      }
                    },
                    "description": "Value range of the vega. It represents the first partial derivative of the function determining the option's theoretical price with respect to the implied volatility, evaluated at the current implied volatility. Vega indicates the ratio of the absolute change of the price of an option for an absolute change of the implied volatility, thus it represents the price sensitivity of the option relative to changes in the implied volatility."
                  },
                  "gamma": {
                    "type": "object",
                    "format": "realRange",
                    "properties": {
                      "minimum": {
                        "type": "object",
                        "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "real",
                            "description": "The minimum value.",
                            "example": 3.03
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Indicates whether the minimum value is included in the range or not.",
                            "default": true,
                            "example": true
                          }
                        },
                        "required": [
                          "value"
                        ]
                      },
                      "maximum": {
                        "type": "object",
                        "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "real",
                            "description": "The maximum value.",
                            "example": 2.02
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Indicates whether the maximum value is included in the range or not.",
                            "default": true,
                            "example": true
                          }
                        },
                        "required": [
                          "value"
                        ]
                      }
                    },
                    "description": "Value range of the gamma. It represents the second partial derivative of the function determining the option's theoretical price with respect to the underlying level, evaluated at the current underlying level. Gamma indicates the rate of change of the option’s delta (see attribute `delta`) with respect to the underlying level."
                  },
                  "rho": {
                    "type": "object",
                    "format": "realRange",
                    "properties": {
                      "minimum": {
                        "type": "object",
                        "description": "The minimum of the range, or `null` to indicate that there is no minimum.",
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "real",
                            "description": "The minimum value.",
                            "example": 5.05
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Indicates whether the minimum value is included in the range or not.",
                            "default": true,
                            "example": true
                          }
                        },
                        "required": [
                          "value"
                        ]
                      },
                      "maximum": {
                        "type": "object",
                        "description": "The maximum of the range, or `null` to indicate that there is no maximum.",
                        "properties": {
                          "value": {
                            "type": "number",
                            "format": "real",
                            "description": "The maximum value.",
                            "example": 3.1415
                          },
                          "inclusive": {
                            "type": "boolean",
                            "description": "Indicates whether the maximum value is included in the range or not.",
                            "default": true,
                            "example": true
                          }
                        },
                        "required": [
                          "value"
                        ]
                      }
                    },
                    "description": "Value range of the rho. It represents the first partial derivative of the function determining the option's theoretical price with respect to the risk-free interest rate, evaluated at the current risk-free interest rate. Rho indicates the ratio of the absolute change of the price of an option for an absolute change of the risk-free interest rate, thus it represents the price sensitivity of the option relative to changes in the risk-free interest rate. The key figure is shown in one basis point change."
                  }
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "The meta member contains the meta information of the request.",
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/AttributesMember"
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "PostOptionClassScreenerSearchRequest": {
        "description": "Request Body",
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "The data member contains the request's primary data.",
            "properties": {
              "text": {
                "type": "object",
                "description": "Text-related parameters.",
                "properties": {
                  "attributes": {
                    "description": "List of attributes to be searched in. The value `allEntitled` cannot appear with any other value.\n| Value | Description |\n| --- | --- |\n| allEntitled | Search within all entitled attributes. |\n| symbol | Symbol of the option class. Class symbols are unique on an exchange (market). The search is executed as an \"exact match\". |\n| ISIN | ISIN of the option class. The search is executed as an \"exact match\". |\n| name | Name of the option class. |\n\n",
                    "type": "array",
                    "nullable": false,
                    "items": {
                      "type": "string",
                      "enum": [
                        "allEntitled",
                        "symbol",
                        "ISIN",
                        "name"
                      ],
                      "example": "allEntitled"
                    },
                    "uniqueItems": true,
                    "maxItems": 2,
                    "default": [
                      "allEntitled"
                    ]
                  },
                  "value": {
                    "type": "string",
                    "pattern": "^[-!#-&(-+--/0-:=?-Za-z]*$",
                    "minLength": 2,
                    "maxLength": 100,
                    "description": "Text string to be searched for.",
                    "example": "FactSet"
                  }
                }
              },
              "market": {
                "type": "object",
                "description": "Market-related class selection. See endpoint `/basic/market/list` for valid values.",
                "properties": {
                  "restrict": {
                    "type": "object",
                    "description": "Specifies the markets from which an option class may originate.",
                    "properties": {
                      "ids": {
                        "description": "Set of market identifiers.",
                        "type": "array",
                        "nullable": false,
                        "items": {
                          "type": "number",
                          "format": "id32",
                          "example": 5
                        },
                        "maxItems": 10
                      }
                    }
                  },
                  "exclude": {
                    "type": "object",
                    "description": "Specifies the markets from which an option class may not originate.",
                    "properties": {
                      "ids": {
                        "description": "Set of market identifiers.",
                        "type": "array",
                        "nullable": false,
                        "items": {
                          "type": "number",
                          "format": "id32",
                          "example": 1
                        },
                        "maxItems": 10
                      }
                    }
                  }
                }
              },
              "underlying": {
                "type": "object",
                "description": "Underlying selection.",
                "properties": {
                  "instrument": {
                    "type": "object",
                    "description": "Instrument of the underlying.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "id64",
                        "description": "Identifier of the instrument.",
                        "example": "209485"
                      }
                    }
                  },
                  "notation": {
                    "type": "object",
                    "description": "Notation of the underlying.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "id64",
                        "description": "Identifier of the notation.",
                        "example": "1532562"
                      }
                    }
                  }
                }
              },
              "currency": {
                "type": "object",
                "description": "Currency-related class selection. See endpoint `/basic/value-unit/currency/list` for possible values.",
                "properties": {
                  "restrict": {
                    "type": "object",
                    "description": "Specifies the currencies an option class may have.",
                    "properties": {
                      "ids": {
                        "description": "Set of currency identifiers.",
                        "type": "array",
                        "nullable": false,
                        "items": {
                          "type": "number",
                          "format": "id32",
                          "example": 3
                        },
                        "maxItems": 10
                      }
                    }
                  },
                  "exclude": {
                    "type": "object",
                    "description": "Specifies the currencies an option class may not have.",
                    "properties": {
                      "ids": {
                        "description": "Set of currency identifiers.",
                        "type": "array",
                        "nullable": false,
                        "items": {
                          "type": "number",
                          "format": "id32",
                          "example": 2
                        },
                        "maxItems": 10
                      }
                    }
                  }
                }
              },
              "category": {
                "type": "object",
                "description": "Category-related class selection as defined by FactSet (see MDG category system 18).",
                "properties": {
                  "restrict": {
                    "type": "object",
                    "description": "Specifies the categories an option class may have.",
                    "properties": {
                      "ids": {
                        "description": "List of category identifiers.",
                        "type": "array",
                        "nullable": false,
                        "items": {
                          "type": "number",
                          "format": "id32",
                          "example": 1
                        },
                        "maxItems": 10
                      }
                    }
                  },
                  "exclude": {
                    "type": "object",
                    "description": "Specifies the categories an option class may not have.",
                    "properties": {
                      "ids": {
                        "description": "List of category identifiers.",
                        "type": "array",
                        "nullable": false,
                        "items": {
                          "type": "number",
                          "format": "id32",
                          "example": 4
                        },
                        "maxItems": 10
                      }
                    }
                  }
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "The meta member contains the meta information of the request.",
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/AttributesMember"
              },
              "language": {
                "$ref": "#/components/schemas/LanguageMember"
              },
              "sort": {
                "description": "Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 7 (possibly prefixed) attribute name(s) is allowed.\n| Value |\n| --- |\n| symbol |\n| -symbol |\n| isin |\n| -isin |\n| name |\n| -name |\n| market.name |\n| -market.name |\n| underlying.name |\n| -underlying.name |\n| currency.code |\n| -currency.code |\n| category.name |\n| -category.name |\n\n",
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "symbol",
                    "-symbol",
                    "isin",
                    "-isin",
                    "name",
                    "-name",
                    "market.name",
                    "-market.name",
                    "underlying.name",
                    "-underlying.name",
                    "currency.code",
                    "-currency.code",
                    "category.name",
                    "-category.name"
                  ],
                  "example": "-category.name"
                },
                "maxItems": 7,
                "uniqueItems": true,
                "default": [
                  "symbol"
                ]
              }
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "PostOptionByClassValueRangesGetDataLifeCycleMaturityIntervalItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "value": {
            "nullable": true,
            "type": "string",
            "description": "Attribute value.\n| Value | Description |\n| --- | --- |\n| monthly | Monthly |\n| weekly | Weekly |\n| daily | Daily |\n| mixed | Mixed |\n\n",
            "enum": [
              "monthly",
              "weekly",
              "daily",
              "mixed"
            ],
            "example": "daily"
          },
          "count": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Number of notations.",
            "example": 2
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostOptionByClassValueRangesGetDataLifeCycleExpirationMonthItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "value": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Attribute value.",
            "example": 1
          },
          "count": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Number of notations.",
            "example": 3
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostOptionByClassValueRangesGetDataLifeCycleExpirationYearItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "value": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Attribute value.",
            "example": 3
          },
          "count": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Number of notations.",
            "example": 3
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostOptionByClassValueRangesGetDataExerciseRightItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "value": {
            "nullable": true,
            "type": "string",
            "enum": [
              "put",
              "call"
            ],
            "description": "undefined\n| Value | Description |\n| --- | --- |\n| put | A put option gives the owner the right, but not the obligation, to sell an asset at a specified price within a specific time period. |\n| call | A call option gives the owner the right, but not the obligation, to buy an asset at a specified price within a specific time period. |\n\n",
            "example": "put"
          },
          "count": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Number of notations.",
            "example": 1
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostOptionByClassValueRangesGetDataExerciseStyleItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "value": {
            "nullable": true,
            "type": "string",
            "enum": [
              "american",
              "european"
            ],
            "description": "undefined\n| Value | Description |\n| --- | --- |\n| american | An American-style option can be exercised anytime during its life. |\n| european | A European-style option can be exercised at the end of its life. |\n\n",
            "example": "european"
          },
          "count": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Number of notations.",
            "example": 1
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostOptionByClassValueRangesGetDataContractSizeItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "value": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Attribute value.",
            "example": 5
          },
          "count": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Number of notations.",
            "example": 5
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "GetOptionGetDataTypeItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Identifier of the instrument type.",
            "example": 2
          },
          "name": {
            "nullable": true,
            "type": "string",
            "format": "localizedString",
            "description": "Name of the instrument type.",
            "example": "Lorem ipsum"
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostOptionByClassValueRangesGetDataItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "totalCount": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Number of notations that satisfy the request parameters, hence have been used to retrieve the possible values and value ranges.",
            "example": 4
          },
          "exercise": {
            "nullable": false,
            "type": "object",
            "description": "Values related to the exercise.",
            "properties": {
              "right": {
                "nullable": false,
                "description": "Exercise right.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PostOptionByClassValueRangesGetDataExerciseRightItems"
                }
              },
              "style": {
                "nullable": false,
                "description": "Exercise style.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PostOptionByClassValueRangesGetDataExerciseStyleItems"
                }
              }
            }
          },
          "strikePrice": {
            "nullable": false,
            "type": "object",
            "description": "Value range of the strike price.",
            "properties": {
              "minimum": {
                "nullable": true,
                "type": "number",
                "format": "real",
                "description": "Minimum value.",
                "example": 1.01
              },
              "maximum": {
                "nullable": true,
                "type": "number",
                "format": "real",
                "description": "Maximum value.",
                "example": 5.05
              }
            }
          },
          "lifeCycle": {
            "nullable": false,
            "type": "object",
            "description": "Values and value ranges related to important dates.",
            "properties": {
              "maturity": {
                "nullable": false,
                "type": "object",
                "description": "Ranges related to the maturity.",
                "properties": {
                  "date": {
                    "nullable": false,
                    "type": "object",
                    "description": "Date range of the maturity date.",
                    "properties": {
                      "minimum": {
                        "nullable": true,
                        "type": "string",
                        "format": "date",
                        "description": "Minimum date.",
                        "example": "2024-12-24"
                      },
                      "maximum": {
                        "nullable": true,
                        "type": "string",
                        "format": "date",
                        "description": "Maximum date.",
                        "example": "2024-01-01"
                      }
                    }
                  },
                  "interval": {
                    "nullable": false,
                    "description": "Values related to the maturity interval.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/PostOptionByClassValueRangesGetDataLifeCycleMaturityIntervalItems"
                    }
                  }
                }
              },
              "expiration": {
                "nullable": false,
                "type": "object",
                "description": "Values related to the expiration month and year.",
                "properties": {
                  "month": {
                    "nullable": false,
                    "description": "Expiration month.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/PostOptionByClassValueRangesGetDataLifeCycleExpirationMonthItems"
                    }
                  },
                  "year": {
                    "nullable": false,
                    "description": "Expiration year.",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/PostOptionByClassValueRangesGetDataLifeCycleExpirationYearItems"
                    }
                  }
                }
              }
            }
          },
          "contractSize": {
            "nullable": false,
            "description": "Values related to the contract size.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PostOptionByClassValueRangesGetDataContractSizeItems"
            }
          },
          "openInterest": {
            "nullable": false,
            "type": "object",
            "description": "Value range of the open positions.",
            "properties": {
              "minimum": {
                "nullable": true,
                "type": "number",
                "format": "real",
                "description": "Minimum value.",
                "example": 2.02
              },
              "maximum": {
                "nullable": true,
                "type": "number",
                "format": "real",
                "description": "Maximum value.",
                "example": 3.1415
              }
            }
          },
          "keyFigures": {
            "nullable": false,
            "type": "object",
            "description": "Value ranges related to the key figures.",
            "properties": {
              "moneyness": {
                "nullable": false,
                "type": "object",
                "description": "Value range of the moneyness.",
                "properties": {
                  "minimum": {
                    "nullable": true,
                    "type": "number",
                    "format": "real",
                    "description": "Minimum value.",
                    "example": 1.01
                  },
                  "maximum": {
                    "nullable": true,
                    "type": "number",
                    "format": "real",
                    "description": "Maximum value.",
                    "example": 3.1415
                  }
                }
              }
            }
          },
          "impliedVolatility": {
            "nullable": false,
            "type": "object",
            "description": "Value range of the implied volatility.",
            "properties": {
              "minimum": {
                "nullable": true,
                "type": "number",
                "format": "relativeValue",
                "description": "Minimum value.",
                "example": 0.5
              },
              "maximum": {
                "nullable": true,
                "type": "number",
                "format": "relativeValue",
                "description": "Maximum value.",
                "example": 0.4
              }
            }
          },
          "omega": {
            "nullable": false,
            "type": "object",
            "description": "Value range of the omega.",
            "properties": {
              "minimum": {
                "nullable": true,
                "type": "number",
                "format": "real",
                "description": "Minimum value.",
                "example": 1.01
              },
              "maximum": {
                "nullable": true,
                "type": "number",
                "format": "real",
                "description": "Maximum value.",
                "example": 4.04
              }
            }
          },
          "leverage": {
            "nullable": false,
            "type": "object",
            "description": "Value range of the leverage.",
            "properties": {
              "minimum": {
                "nullable": true,
                "type": "number",
                "format": "real",
                "description": "Minimum value.",
                "example": 3.03
              },
              "maximum": {
                "nullable": true,
                "type": "number",
                "format": "real",
                "description": "Maximum value.",
                "example": 3.1415
              }
            }
          },
          "delta": {
            "nullable": false,
            "type": "object",
            "description": "Value range of the delta.",
            "properties": {
              "minimum": {
                "nullable": true,
                "type": "number",
                "format": "real",
                "description": "Minimum value.",
                "example": 3.1415
              },
              "maximum": {
                "nullable": true,
                "type": "number",
                "format": "real",
                "description": "Maximum value.",
                "example": 3.1415
              }
            }
          },
          "thetaOneWeek": {
            "nullable": false,
            "type": "object",
            "description": "Value range of the weekly theta.",
            "properties": {
              "minimum": {
                "nullable": true,
                "type": "number",
                "format": "real",
                "description": "Minimum value.",
                "example": 5.05
              },
              "maximum": {
                "nullable": true,
                "type": "number",
                "format": "real",
                "description": "Maximum value.",
                "example": 3.1415
              }
            }
          },
          "vega": {
            "nullable": false,
            "type": "object",
            "description": "Value range of the vega.",
            "properties": {
              "minimum": {
                "nullable": true,
                "type": "number",
                "format": "real",
                "description": "Minimum value.",
                "example": 4.04
              },
              "maximum": {
                "nullable": true,
                "type": "number",
                "format": "real",
                "description": "Maximum value.",
                "example": 4.04
              }
            }
          },
          "gamma": {
            "nullable": false,
            "type": "object",
            "description": "Value range of the gamma.",
            "properties": {
              "minimum": {
                "nullable": true,
                "type": "number",
                "format": "real",
                "description": "Minimum value.",
                "example": 4.04
              },
              "maximum": {
                "nullable": true,
                "type": "number",
                "format": "real",
                "description": "Maximum value.",
                "example": 4.04
              }
            }
          },
          "rho": {
            "nullable": false,
            "type": "object",
            "description": "Value range of the rho.",
            "properties": {
              "minimum": {
                "nullable": true,
                "type": "number",
                "format": "real",
                "description": "Minimum value.",
                "example": 1.01
              },
              "maximum": {
                "nullable": true,
                "type": "number",
                "format": "real",
                "description": "Maximum value.",
                "example": 5.05
              }
            }
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostOptionClassScreenerSearchDataItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "type": "string",
            "format": "id64",
            "description": "Identifier of the option class.",
            "example": "2002"
          },
          "symbol": {
            "nullable": true,
            "type": "string",
            "description": "Symbol of the option class, as defined by its market.",
            "example": "FDS"
          },
          "isin": {
            "nullable": true,
            "type": "string",
            "description": "ISIN of the option class.",
            "example": "US3030751057"
          },
          "name": {
            "nullable": true,
            "type": "string",
            "description": "Name of the option class.",
            "example": "Lorem ipsum"
          },
          "market": {
            "nullable": false,
            "type": "object",
            "description": "Market of the option class.",
            "properties": {
              "id": {
                "nullable": true,
                "type": "number",
                "format": "id32",
                "description": "Identifier of the market.",
                "example": 4
              },
              "name": {
                "nullable": true,
                "type": "string",
                "format": "localizedString",
                "description": "Name of the market.",
                "example": "Lorem ipsum"
              }
            }
          },
          "underlying": {
            "nullable": false,
            "type": "object",
            "description": "Information regarding the underlying of the option class.",
            "properties": {
              "name": {
                "nullable": true,
                "type": "string",
                "description": "Name of the underlying, provided also if there is no notation for the underlying.",
                "example": "Lorem ipsum"
              },
              "notation": {
                "nullable": false,
                "type": "object",
                "description": "Notation of the underlying. If there is no notation for the underlying, the object is null.",
                "properties": {
                  "id": {
                    "nullable": true,
                    "type": "string",
                    "format": "id64",
                    "description": "Identifier of the notation.",
                    "example": "1532562"
                  },
                  "fsym": {
                    "nullable": false,
                    "type": "object",
                    "description": "Notation-level FactSet identifiers of the financial instrument used primarily in FactSet products other than the MDG.",
                    "properties": {
                      "listing": {
                        "nullable": false,
                        "type": "object",
                        "description": "Listing-level identifiers.",
                        "properties": {
                          "permanentIdentifier": {
                            "nullable": true,
                            "type": "string",
                            "description": "FactSet Permanent Identifier for a notation. The format is six alpha-numeric characters, excluding vowels, with an L suffix (XXXXXX-L).",
                            "example": "DJC0PL-S"
                          },
                          "tickerExchange": {
                            "nullable": true,
                            "type": "string",
                            "description": "FactSet market symbol of the notation, usually consisting of the ticker (e.g. \"DAI\" for Daimler AG) and the three-character code of the exchange on which the listing is traded (example: DAI-ETR).",
                            "example": "FDS-USA"
                          },
                          "isPrimary": {
                            "nullable": true,
                            "type": "boolean",
                            "description": "Indicates whether the notation is the primary notation among all notations within the same region (`true`) or not (`false`).",
                            "example": false
                          }
                        }
                      },
                      "regional": {
                        "nullable": false,
                        "type": "object",
                        "description": "Regional-level identifiers.",
                        "properties": {
                          "permanentIdentifier": {
                            "nullable": true,
                            "type": "string",
                            "description": "FactSet Permanent Identifier for a set of one or more notations of the same region with the same value unit. The format is six alpha-numeric characters, excluding vowels, with an R suffix (XXXXXX-R).",
                            "example": "DJC0PL-S"
                          },
                          "tickerRegion": {
                            "nullable": true,
                            "type": "string",
                            "description": "FactSet regional symbol of the notation, consisting of the ticker and the two-character code of the country or region where the listing is traded (example: DAI-DE).",
                            "example": "FDS-US"
                          },
                          "isPrimary": {
                            "nullable": true,
                            "type": "boolean",
                            "description": "Indicates whether the notation is in the primary region of the security (`true`) or not (`false`).",
                            "example": false
                          }
                        }
                      }
                    }
                  },
                  "instrument": {
                    "nullable": false,
                    "type": "object",
                    "description": "Instrument of the underlying.",
                    "properties": {
                      "id": {
                        "nullable": true,
                        "type": "string",
                        "format": "id64",
                        "description": "Identifier of the instrument.",
                        "example": "209485"
                      },
                      "isin": {
                        "nullable": true,
                        "type": "string",
                        "description": "The International Securities Identification Number (ISIN) of the instrument. The ISIN is a 12-character code of digits and upper-case letters that uniquely identifies an instrument.",
                        "example": "US3030751057"
                      },
                      "nsin": {
                        "nullable": false,
                        "type": "object",
                        "description": "NSIN data of the instrument.",
                        "properties": {
                          "wkn": {
                            "nullable": true,
                            "type": "string",
                            "description": "The WKN (Wertpapierkennnummer, German for Securities Identification Number) of the instrument. The WKN is a 6-character code of digits and upper-case letters that uniquely identifies an instrument.",
                            "example": "901629"
                          },
                          "valor": {
                            "nullable": true,
                            "type": "string",
                            "description": "The Valor number (German: Valorennummer) of the instrument. The Valor number is an integer number that uniquely identifies an instrument.",
                            "example": "1234567"
                          },
                          "cusip": {
                            "nullable": true,
                            "type": "string",
                            "description": "The CUSIP (Committee on Uniform Security Identification Procedures) or CINS (CUSIP International Numbering System) identifier of the instrument. These numbers are 9-character codes of digits and upper-case letters that uniquely identify an instrument.",
                            "example": "303075105"
                          }
                        }
                      },
                      "fsym": {
                        "nullable": false,
                        "type": "object",
                        "description": "Instrument-level FactSet identifier of the financial instrument used primarily in FactSet products other than the MDG.",
                        "properties": {
                          "security": {
                            "nullable": false,
                            "type": "object",
                            "description": "Security-level identifier.",
                            "properties": {
                              "permanentIdentifier": {
                                "nullable": true,
                                "type": "string",
                                "description": "FactSet Permanent Identifier for an instrument. The format is six alpha-numeric characters, excluding vowels, with an S suffix (XXXXXX-S).",
                                "example": "DJC0PL-S"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "currency": {
            "nullable": false,
            "type": "object",
            "description": "Main or fractional currency of the option class. See endpoint `/basic/value-unit/currency/list` for possible values.",
            "properties": {
              "id": {
                "nullable": true,
                "type": "number",
                "format": "id32",
                "description": "Identifier of the currency.",
                "example": 1
              },
              "code": {
                "nullable": true,
                "type": "string",
                "description": "Code of the currency.",
                "example": "Lorem ipsum"
              }
            }
          },
          "category": {
            "nullable": false,
            "type": "object",
            "description": "Category as defined by FactSet (see MDG category system 18).",
            "properties": {
              "id": {
                "nullable": true,
                "type": "number",
                "format": "id32",
                "description": "Identifier of the category.",
                "example": 3
              },
              "name": {
                "nullable": true,
                "type": "string",
                "format": "localizedString",
                "description": "Name of the category.",
                "example": "Lorem ipsum"
              }
            }
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostOptionByClassListDataItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "id": {
            "nullable": true,
            "type": "string",
            "format": "id64",
            "description": "Identifier of the notation.",
            "example": "1532562"
          },
          "instrument": {
            "nullable": false,
            "type": "object",
            "description": "instrument",
            "properties": {
              "id": {
                "nullable": true,
                "type": "string",
                "format": "id64",
                "description": "Identifier of the instrument.",
                "example": "209485"
              },
              "normalizedSymbol": {
                "nullable": true,
                "type": "string",
                "description": "Symbol of the option, as normalized by FactSet.",
                "example": "Lorem ipsum"
              },
              "name": {
                "nullable": true,
                "type": "string",
                "format": "localizedString",
                "description": "Name of the option.",
                "example": "Lorem ipsum"
              },
              "exercise": {
                "nullable": false,
                "type": "object",
                "description": "Exercise data of the instrument.",
                "properties": {
                  "right": {
                    "nullable": true,
                    "type": "string",
                    "description": "Exercise right of the option.\n| Value | Description |\n| --- | --- |\n| put | A put option gives the owner the right, but not the obligation, to sell an asset at a specified price within a specific time period. |\n| call | A call option gives the owner the right, but not the obligation, to buy an asset at a specified price within a specific time period. |\n\n",
                    "enum": [
                      "put",
                      "call"
                    ],
                    "example": "put"
                  },
                  "style": {
                    "nullable": true,
                    "type": "string",
                    "description": "Exercise style of the option.\n| Value | Description |\n| --- | --- |\n| american | An American-style option can be exercised anytime during its life. |\n| european | A European-style option can be exercised at the end of its life. |\n\n",
                    "enum": [
                      "american",
                      "european"
                    ],
                    "example": "american"
                  }
                }
              },
              "strikePrice": {
                "nullable": false,
                "type": "object",
                "description": "Price at which the holder of an option can buy (in the case of a call option) or sell (in the case of a put option) the underlying asset when the option is exercised. It is also known as the exercise price.",
                "properties": {
                  "level": {
                    "nullable": true,
                    "type": "number",
                    "format": "real",
                    "description": "Level of the strike price.",
                    "example": 5.05
                  },
                  "valueUnit": {
                    "nullable": false,
                    "type": "object",
                    "description": "Value unit of the strike price. See endpoint `/basic/value-unit/list` for possible values.",
                    "properties": {
                      "id": {
                        "nullable": true,
                        "type": "number",
                        "format": "id32",
                        "description": "Idenitifier of the value unit.",
                        "example": 5
                      },
                      "code": {
                        "nullable": true,
                        "type": "string",
                        "description": "Code of the value unit.",
                        "example": "Lorem ipsum"
                      }
                    }
                  }
                }
              },
              "lifeCycle": {
                "nullable": false,
                "type": "object",
                "description": "Important dates of the instrument.",
                "properties": {
                  "maturity": {
                    "nullable": false,
                    "type": "object",
                    "description": "Maturity data.",
                    "properties": {
                      "date": {
                        "nullable": true,
                        "type": "string",
                        "format": "date",
                        "description": "Date of the option's maturity.",
                        "example": "2024-01-01"
                      },
                      "interval": {
                        "nullable": true,
                        "type": "string",
                        "description": "Maturity interval of the option.\n| Value | Description |\n| --- | --- |\n| monthly | Monthly |\n| weekly | Weekly |\n| daily | Daily |\n| mixed | Mixed |\n\n",
                        "enum": [
                          "monthly",
                          "weekly",
                          "daily",
                          "mixed"
                        ],
                        "example": "monthly"
                      }
                    }
                  },
                  "expiration": {
                    "nullable": false,
                    "type": "object",
                    "description": "Expiration month and year, as defined by the market of the option, possibly different from the year and month of the maturity.",
                    "properties": {
                      "month": {
                        "nullable": true,
                        "type": "number",
                        "format": "id32",
                        "description": "Month of the option's expiration.",
                        "example": 5
                      },
                      "year": {
                        "nullable": true,
                        "type": "number",
                        "format": "id32",
                        "description": "Year of the option's expiration.",
                        "example": 3
                      }
                    }
                  }
                }
              },
              "contractSize": {
                "nullable": true,
                "type": "number",
                "format": "real",
                "description": "Quantity of the underlying asset represented by an option. For fixed income and index options it represents the value of one unit of the underlying instrument. For an underlying whose price unit is index points, this is the currency value of the contract per index point. For underlyings whose price unit is percent, this is the nominal value of the underlying.",
                "example": 1.01
              }
            }
          },
          "openInterest": {
            "nullable": true,
            "type": "number",
            "format": "id32",
            "description": "Open positions of the option.",
            "example": 3
          },
          "keyFigures": {
            "nullable": false,
            "type": "object",
            "description": "Key figures of an option contract.",
            "properties": {
              "moneyness": {
                "nullable": true,
                "type": "number",
                "format": "real",
                "description": "Ratio of the current underlying level to the strike of an option. For calls, it is current underlying level divided by the strike. For puts, it is strike divided by the current underlying level. It measures the degree to which an option is in-the-money (moneyness > 1) or out-of-the-money (moneyness < 1). If moneyness = 1, the option is at-the-money.",
                "example": 2.02
              },
              "impliedVolatility": {
                "nullable": true,
                "type": "number",
                "format": "relativeValue",
                "description": "Ask-based implied volatility. It represents the volatility of the underlying that justifies the ask price of the option, when used as a parameter in the option's pricing model (such as Black-Scholes). Its value is a result of the pricing process, thus it represents the annual volatility of the underlying expected by the market participants until maturity of the option.",
                "example": 0.4
              },
              "omega": {
                "nullable": true,
                "type": "number",
                "format": "real",
                "description": "Ask-based omega. It represents delta (see attribute delta) multiplied with the leverage (see attribute `leverage`), both calculated based on the ask price of the option. Omega indicates the elasticity of the option's price regarding the underlying level.",
                "example": 3.1415
              },
              "leverage": {
                "nullable": true,
                "type": "number",
                "format": "real",
                "description": "Ask-based leverage. It represents the ratio of the underlying level to the ask price of the option, adjusted for the currency cross rate.",
                "example": 5.05
              },
              "delta": {
                "nullable": true,
                "type": "number",
                "format": "real",
                "description": "Ask-based delta. It represents the first partial derivative of the function determining the option's theoretical price with respect to the underlying level, evaluated at the underlying level. Delta indicates the ratio of the absolute change of the price of an option for an indefinitely small absolute change in the underlying level, thus it represents the price sensitivity of the option relative to changes in the underlying level.",
                "example": 3.1415
              },
              "thetaOneWeek": {
                "nullable": true,
                "type": "number",
                "format": "real",
                "description": "Ask-based weekly theta. It represents the first partial derivative of the function determining the option's theoretical price with respect to the residual term, evaluated at the current residual term and multiplied by 7/365. Weekly theta indicates the absolute change (decrease) of the price of an option for a reduction of the residual term by one week (seven calendar days), thus it represents the price sensitivity of the option relative to changes in the residual term.",
                "example": 4.04
              },
              "vega": {
                "nullable": true,
                "type": "number",
                "format": "real",
                "description": "Ask-based vega. It represents the first partial derivative of the function determining the option's theoretical price with respect to the implied volatility, evaluated at the current implied volatility. Vega indicates the ratio of the absolute change of the price of an option for an absolute change of the implied volatility, thus it represents the price sensitivity of the option relative to changes in the implied volatility.",
                "example": 3.1415
              },
              "gamma": {
                "nullable": true,
                "type": "number",
                "format": "real",
                "description": "Ask-based gamma. It represents the second partial derivative of the function determining the option's theoretical price with respect to the underlying level, evaluated at the current underlying level. Gamma indicates the rate of change of the option's delta (see attribute `delta`) with respect to the underlying level.",
                "example": 5.05
              },
              "rho": {
                "nullable": true,
                "type": "number",
                "format": "real",
                "description": "Ask-based rho. It represents the first partial derivative of the function determining the option's theoretical price with respect to the risk-free interest rate, evaluated at the current risk-free interest rate. Rho indicates the ratio of the absolute change of the price of an option for an absolute change of the risk-free interest rate, thus it represents the price sensitivity of the option relative to changes in the risk-free interest rate. The key figure is shown in one basis point change.",
                "example": 4.04
              }
            }
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      }
    },
    "responses": {
      "GetOptionGet200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "idInstrument": {
                      "nullable": true,
                      "type": "string",
                      "format": "id64",
                      "description": "Identifier of the instrument.",
                      "example": "209485"
                    },
                    "sourceIdentifier": {
                      "nullable": true,
                      "type": "string",
                      "description": "Identifier used in the request.",
                      "example": "FDS-US"
                    },
                    "isin": {
                      "nullable": true,
                      "type": "string",
                      "description": "International Securities Identification Number of the option.",
                      "example": "US3030751057"
                    },
                    "normalizedSymbol": {
                      "nullable": true,
                      "type": "string",
                      "description": "Symbol of the option, as normalized by FactSet.",
                      "example": "Lorem ipsum"
                    },
                    "name": {
                      "nullable": true,
                      "type": "string",
                      "format": "localizedString",
                      "description": "Name of the option.",
                      "example": "Lorem ipsum"
                    },
                    "type": {
                      "nullable": false,
                      "description": "Instrument type as defined by FactSet. Instrument types are arranged in a hierarchy, with level 1 representing the most coarse granularity and further levels successively refining the granularity (see MDG category system 18).",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GetOptionGetDataTypeItems"
                      },
                      "uniqueItems": true
                    },
                    "market": {
                      "nullable": false,
                      "description": "Market of the option.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "nullable": true,
                          "type": "number",
                          "format": "id32",
                          "description": "Identifier of the market.",
                          "example": 3
                        },
                        "name": {
                          "nullable": true,
                          "type": "string",
                          "format": "localizedString",
                          "description": "Name of the market.",
                          "example": "Lorem ipsum"
                        }
                      }
                    },
                    "class": {
                      "nullable": false,
                      "description": "A product group of options from the same exchange and with the same underlying.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "nullable": true,
                          "type": "string",
                          "format": "id64",
                          "description": "Identifier of the option class.",
                          "example": "5005"
                        },
                        "isin": {
                          "nullable": true,
                          "type": "string",
                          "description": "ISIN of the option class.",
                          "example": "US3030751057"
                        },
                        "name": {
                          "nullable": true,
                          "type": "string",
                          "description": "Name of the option class.",
                          "example": "Lorem ipsum"
                        },
                        "symbol": {
                          "nullable": true,
                          "type": "string",
                          "description": "Symbol of the option class, as defined by its market.",
                          "example": "FDS"
                        }
                      }
                    },
                    "exercise": {
                      "nullable": false,
                      "description": "Exercise data of the instrument.",
                      "type": "object",
                      "properties": {
                        "right": {
                          "nullable": true,
                          "type": "string",
                          "description": "Exercise right of the option.\n| Value | Description |\n| --- | --- |\n| put | A put option gives the owner the right, but not the obligation, to sell an asset at a specified price within a specific time period. |\n| call | A call option gives the owner the right, but not the obligation, to buy an asset at a specified price within a specific time period. |\n\n",
                          "enum": [
                            "put",
                            "call"
                          ],
                          "example": "put"
                        },
                        "style": {
                          "nullable": true,
                          "type": "string",
                          "description": "Exercise style of the option.\n| Value | Description |\n| --- | --- |\n| american | An American-style option can be exercised anytime during its life. |\n| european | A European-style option can be exercised at the end of its life. |\n\n",
                          "enum": [
                            "american",
                            "european"
                          ],
                          "example": "european"
                        }
                      }
                    },
                    "strikePrice": {
                      "nullable": false,
                      "type": "object",
                      "description": "Price at which the holder of an option can buy (in the case of a call option)\n                 or sell (in the case of a put option) the underlying asset when the option is exercised.\n                 It is also known as the exercise price.",
                      "properties": {
                        "level": {
                          "nullable": true,
                          "type": "number",
                          "format": "real",
                          "description": "Level of the strike price.",
                          "example": 3.1415
                        },
                        "valueUnit": {
                          "nullable": false,
                          "type": "object",
                          "description": "Value unit of the strike price. See endpoint `/basic/value-unit/list` for possible values.",
                          "properties": {
                            "id": {
                              "nullable": true,
                              "type": "number",
                              "format": "id32",
                              "description": "Idenitifier of the value unit.",
                              "example": 2
                            },
                            "code": {
                              "nullable": true,
                              "type": "string",
                              "description": "Code of the value unit.",
                              "example": "Lorem ipsum"
                            }
                          }
                        }
                      }
                    },
                    "lifeCycle": {
                      "nullable": false,
                      "description": "Important dates of the instrument.",
                      "type": "object",
                      "properties": {
                        "maturity": {
                          "nullable": false,
                          "type": "object",
                          "description": "Maturity data.",
                          "properties": {
                            "date": {
                              "nullable": true,
                              "type": "string",
                              "format": "date",
                              "description": "Date of the option's maturity.",
                              "example": "2024-01-01"
                            },
                            "interval": {
                              "nullable": true,
                              "type": "string",
                              "description": "Maturity interval of the option.\n| Value | Description |\n| --- | --- |\n| monthly | Monthly |\n| weekly | Weekly |\n| daily | Daily |\n| mixed | Mixed |\n\n",
                              "enum": [
                                "monthly",
                                "weekly",
                                "daily",
                                "mixed"
                              ],
                              "example": "mixed"
                            }
                          }
                        },
                        "expiration": {
                          "nullable": false,
                          "description": "Expiration month and year, as defined by the market of the option, possibly different from the year and month of the maturity.",
                          "type": "object",
                          "properties": {
                            "month": {
                              "nullable": true,
                              "type": "number",
                              "format": "int32",
                              "description": "Month of the option's expiration.",
                              "example": -2
                            },
                            "year": {
                              "nullable": true,
                              "type": "number",
                              "format": "int32",
                              "description": "Year of the option's expiration.",
                              "example": -2
                            }
                          }
                        },
                        "endTradingPeriod": {
                          "nullable": true,
                          "type": "string",
                          "format": "date",
                          "description": "Date of the last trading day (inclusive).",
                          "example": "2024-12-24"
                        },
                        "delivery": {
                          "nullable": false,
                          "description": "Date on which the underlying asset or respectively the cash value of the underlying is finally settled.",
                          "type": "object",
                          "properties": {
                            "date": {
                              "nullable": true,
                              "type": "string",
                              "format": "date",
                              "description": "Date of the delivery day.",
                              "example": "2024-01-01"
                            }
                          }
                        }
                      }
                    },
                    "contractSize": {
                      "nullable": true,
                      "type": "number",
                      "format": "real",
                      "description": "Quantity of the underlying asset represented by an option. For fixed income and index options it represents the value of one unit of the underlying instrument. For an underlying whose price unit is index points, this is the currency value of the contract per index point. For underlyings whose price unit is percent, this is the nominal value of the underlying.",
                      "example": 1.01
                    },
                    "openInterest": {
                      "nullable": false,
                      "description": "Open positions of the option.",
                      "type": "object",
                      "properties": {
                        "volume": {
                          "nullable": true,
                          "type": "number",
                          "format": "int32",
                          "description": "Total number of open positions of the option, which are not yet closed or delivered.",
                          "example": -232
                        },
                        "time": {
                          "nullable": true,
                          "type": "string",
                          "format": "date-time",
                          "description": "Date and time on which the open positions of the option are determined.",
                          "example": "2024-01-01T00:00:00.000Z"
                        }
                      }
                    },
                    "tickSize": {
                      "nullable": true,
                      "type": "number",
                      "format": "real",
                      "description": "The minimum price movement of the option.",
                      "example": 3.1415
                    },
                    "settlement": {
                      "nullable": false,
                      "description": "Settlement details (type and EOD price).",
                      "type": "object",
                      "properties": {
                        "type": {
                          "nullable": true,
                          "type": "string",
                          "description": "Settlement type of the option.\n| Value | Description |\n| --- | --- |\n| cash | Transfer of a cash amount. |\n| physical | Physical delivery of the underlying asset. |\n\n",
                          "enum": [
                            "cash",
                            "physical"
                          ],
                          "example": "cash"
                        },
                        "price": {
                          "nullable": true,
                          "type": "number",
                          "format": "real",
                          "description": "Settlement price.",
                          "example": 3.03
                        },
                        "currency": {
                          "nullable": false,
                          "description": "Main or fractional currency of the settlement price. See endpoint `/basic/value-unit/currency/list` for possible values.",
                          "type": "object",
                          "properties": {
                            "id": {
                              "nullable": true,
                              "type": "number",
                              "format": "id32",
                              "description": "Identifier of the currency.",
                              "example": 2
                            },
                            "code": {
                              "nullable": true,
                              "type": "string",
                              "description": "Code of the currency.",
                              "example": "Lorem ipsum"
                            }
                          }
                        },
                        "time": {
                          "nullable": true,
                          "type": "string",
                          "format": "date-time",
                          "description": "Date and time.",
                          "example": "2024-12-24T18:00:00.000000Z"
                        }
                      }
                    },
                    "underlying": {
                      "nullable": false,
                      "description": "Information regarding the underlying of the option.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "nullable": true,
                          "type": "string",
                          "description": "Name of the underlying, provided also if there is no notation for the underlying.",
                          "example": "Lorem ipsum"
                        },
                        "notation": {
                          "nullable": false,
                          "description": "Notation of the underlying. If there is no notation for the underlying, the object is `null`.",
                          "type": "object",
                          "properties": {
                            "id": {
                              "nullable": true,
                              "type": "string",
                              "format": "id64",
                              "description": "Identifier of the notation.",
                              "example": "1532562"
                            },
                            "fsym": {
                              "nullable": false,
                              "description": "Notation-level FactSet identifiers of the financial instrument used primarily in FactSet products other than the MDG.",
                              "type": "object",
                              "properties": {
                                "listing": {
                                  "nullable": false,
                                  "description": "Listing-level identifiers.",
                                  "type": "object",
                                  "properties": {
                                    "permanentIdentifier": {
                                      "nullable": true,
                                      "type": "string",
                                      "description": "FactSet Permanent Identifier for a notation. The format is six alpha-numeric characters, excluding vowels, with an L suffix (XXXXXX-L).",
                                      "example": "DJC0PL-S"
                                    },
                                    "tickerExchange": {
                                      "nullable": true,
                                      "type": "string",
                                      "description": "FactSet market symbol of the notation, usually consisting of the ticker (e.g. \"DAI\" for Daimler AG) and the three-character code of the exchange on which the listing is traded (example: DAI-ETR).",
                                      "example": "FDS-USA"
                                    },
                                    "isPrimary": {
                                      "nullable": true,
                                      "type": "boolean",
                                      "description": "Indicates whether the notation is the primary notation among all notations within the same region (`true`) or not (`false`).",
                                      "example": true
                                    }
                                  }
                                },
                                "regional": {
                                  "nullable": false,
                                  "description": "Regional-level identifiers.",
                                  "type": "object",
                                  "properties": {
                                    "permanentIdentifier": {
                                      "nullable": true,
                                      "type": "string",
                                      "description": "FactSet Permanent Identifier for a set of one or more notations of the same region with the same value unit. The format is six alpha-numeric characters, excluding vowels, with an R suffix (XXXXXX-R).",
                                      "example": "DJC0PL-S"
                                    },
                                    "tickerRegion": {
                                      "nullable": true,
                                      "type": "string",
                                      "description": "FactSet regional symbol of the notation, consisting of the ticker and the two-character code of the country or region where the listing is traded (example: DAI-DE).",
                                      "example": "FDS-US"
                                    },
                                    "isPrimary": {
                                      "nullable": true,
                                      "type": "boolean",
                                      "description": "Indicates whether the notation is in the primary region of the security (`true`) or not (`false`).",
                                      "example": true
                                    }
                                  }
                                }
                              }
                            },
                            "instrument": {
                              "nullable": false,
                              "description": "Instrument of the underlying.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "nullable": true,
                                  "type": "string",
                                  "format": "id64",
                                  "description": "Identifier of the instrument.",
                                  "example": "209485"
                                },
                                "isin": {
                                  "nullable": true,
                                  "type": "string",
                                  "description": "The International Securities Identification Number (ISIN) of the instrument. The ISIN is a 12-character code of digits and upper-case letters that uniquely identifies an instrument.",
                                  "example": "US3030751057"
                                },
                                "nsin": {
                                  "nullable": false,
                                  "description": "NSIN data of the instrument.",
                                  "type": "object",
                                  "properties": {
                                    "wkn": {
                                      "nullable": true,
                                      "type": "string",
                                      "description": "The WKN (Wertpapierkennnummer, German for Securities Identification Number) of the instrument. The WKN is a 6-character code of digits and upper-case letters that uniquely identifies an instrument.",
                                      "example": "901629"
                                    },
                                    "valor": {
                                      "nullable": true,
                                      "type": "string",
                                      "description": "The Valor number (German: Valorennummer) of the instrument. The Valor number is an integer number that uniquely identifies an instrument.",
                                      "example": "1234567"
                                    },
                                    "cusip": {
                                      "nullable": true,
                                      "type": "string",
                                      "description": "The CUSIP (Committee on Uniform Security Identification Procedures) or CINS (CUSIP International Numbering System) identifier of the instrument. These numbers are 9-character codes of digits and upper-case letters that uniquely identify an instrument.",
                                      "example": "303075105"
                                    }
                                  }
                                },
                                "fsym": {
                                  "nullable": false,
                                  "description": "Instrument-level FactSet identifier of the financial instrument used primarily in FactSet products other than the MDG.",
                                  "type": "object",
                                  "properties": {
                                    "security": {
                                      "nullable": false,
                                      "description": "Security-level identifier.",
                                      "type": "object",
                                      "properties": {
                                        "permanentIdentifier": {
                                          "nullable": true,
                                          "description": "FactSet Permanent Identifier for an instrument. The format is six alpha-numeric characters, excluding vowels, with an S suffix (XXXXXX-S).",
                                          "type": "string",
                                          "example": "DJC0PL-S"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "Set of basic data for the option contract.",
                  "nullable": false
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": {
                "idInstrument": "209485",
                "sourceIdentifier": "FDS-US",
                "isin": "US3030751057",
                "normalizedSymbol": "Lorem ipsum",
                "name": "Lorem ipsum",
                "type": [
                  {
                    "id": 2,
                    "name": "Lorem ipsum"
                  }
                ],
                "market": {
                  "id": 3,
                  "name": "Lorem ipsum"
                },
                "class": {
                  "id": "5005",
                  "isin": "US3030751057",
                  "name": "Lorem ipsum",
                  "symbol": "FDS"
                },
                "exercise": {
                  "right": "put",
                  "style": "european"
                },
                "strikePrice": {
                  "level": 3.1415,
                  "valueUnit": {
                    "id": 2,
                    "code": "Lorem ipsum"
                  }
                },
                "lifeCycle": {
                  "maturity": {
                    "date": "2024-01-01",
                    "interval": "mixed"
                  },
                  "expiration": {
                    "month": -2,
                    "year": -2
                  },
                  "endTradingPeriod": "2024-12-24",
                  "delivery": {
                    "date": "2024-01-01"
                  }
                },
                "contractSize": 1.01,
                "openInterest": {
                  "volume": -232,
                  "time": "2024-01-01T00:00:00.000Z"
                },
                "tickSize": 3.1415,
                "settlement": {
                  "type": "cash",
                  "price": 3.03,
                  "currency": {
                    "id": 2,
                    "code": "Lorem ipsum"
                  },
                  "time": "2024-12-24T18:00:00.000000Z"
                },
                "underlying": {
                  "name": "Lorem ipsum",
                  "notation": {
                    "id": "1532562",
                    "fsym": {
                      "listing": {
                        "permanentIdentifier": "DJC0PL-S",
                        "tickerExchange": "FDS-USA",
                        "isPrimary": true
                      },
                      "regional": {
                        "permanentIdentifier": "DJC0PL-S",
                        "tickerRegion": "FDS-US",
                        "isPrimary": true
                      }
                    },
                    "instrument": {
                      "id": "209485",
                      "isin": "US3030751057",
                      "nsin": {
                        "wkn": "901629",
                        "valor": "1234567",
                        "cusip": "303075105"
                      },
                      "fsym": {
                        "security": {
                          "permanentIdentifier": "DJC0PL-S"
                        }
                      }
                    }
                  }
                }
              },
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "PostOptionByClassList200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "List of options.",
                  "nullable": false,
                  "items": {
                    "$ref": "#/components/schemas/PostOptionByClassListDataItems"
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/OffsetBasedPaginationOutputObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": [
                {
                  "id": "1532562",
                  "instrument": {
                    "id": "209485",
                    "normalizedSymbol": "Lorem ipsum",
                    "name": "Lorem ipsum",
                    "exercise": {
                      "right": "put",
                      "style": "american"
                    },
                    "strikePrice": {
                      "level": 5.05,
                      "valueUnit": {
                        "id": 5,
                        "code": "Lorem ipsum"
                      }
                    },
                    "lifeCycle": {
                      "maturity": {
                        "date": "2024-01-01",
                        "interval": "monthly"
                      },
                      "expiration": {
                        "month": 5,
                        "year": 3
                      }
                    },
                    "contractSize": 1.01
                  },
                  "openInterest": 3,
                  "keyFigures": {
                    "moneyness": 2.02,
                    "impliedVolatility": 0.4,
                    "omega": 3.1415,
                    "leverage": 5.05,
                    "delta": 3.1415,
                    "thetaOneWeek": 4.04,
                    "vega": 3.1415,
                    "gamma": 5.05,
                    "rho": 4.04
                  }
                }
              ],
              "meta": {
                "status": {
                  "code": 200
                },
                "pagination": {
                  "total": 3,
                  "isEstimatedTotal": false
                }
              }
            }
          }
        }
      },
      "PostOptionByClassValueRangesGet200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "Possible values and value ranges of the parameters.",
                  "nullable": false,
                  "items": {
                    "$ref": "#/components/schemas/PostOptionByClassValueRangesGetDataItems"
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": [
                {
                  "totalCount": 4,
                  "exercise": {
                    "right": [
                      {
                        "value": "put",
                        "count": 1
                      }
                    ],
                    "style": [
                      {
                        "value": "european",
                        "count": 1
                      }
                    ]
                  },
                  "strikePrice": {
                    "minimum": 1.01,
                    "maximum": 5.05
                  },
                  "lifeCycle": {
                    "maturity": {
                      "date": {
                        "minimum": "2024-12-24",
                        "maximum": "2024-01-01"
                      },
                      "interval": [
                        {
                          "value": "daily",
                          "count": 2
                        }
                      ]
                    },
                    "expiration": {
                      "month": [
                        {
                          "value": 1,
                          "count": 3
                        }
                      ],
                      "year": [
                        {
                          "value": 3,
                          "count": 3
                        }
                      ]
                    }
                  },
                  "contractSize": [
                    {
                      "value": 5,
                      "count": 5
                    }
                  ],
                  "openInterest": {
                    "minimum": 2.02,
                    "maximum": 3.1415
                  },
                  "keyFigures": {
                    "moneyness": {
                      "minimum": 1.01,
                      "maximum": 3.1415
                    }
                  },
                  "impliedVolatility": {
                    "minimum": 0.5,
                    "maximum": 0.4
                  },
                  "omega": {
                    "minimum": 1.01,
                    "maximum": 4.04
                  },
                  "leverage": {
                    "minimum": 3.03,
                    "maximum": 3.1415
                  },
                  "delta": {
                    "minimum": 3.1415,
                    "maximum": 3.1415
                  },
                  "thetaOneWeek": {
                    "minimum": 5.05,
                    "maximum": 3.1415
                  },
                  "vega": {
                    "minimum": 4.04,
                    "maximum": 4.04
                  },
                  "gamma": {
                    "minimum": 4.04,
                    "maximum": 4.04
                  },
                  "rho": {
                    "minimum": 1.01,
                    "maximum": 5.05
                  }
                }
              ],
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "PostOptionClassScreenerSearch200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "List of option classes. Default sorting is done by symbol ascending.",
                  "nullable": false,
                  "items": {
                    "$ref": "#/components/schemas/PostOptionClassScreenerSearchDataItems"
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": [
                {
                  "id": "2002",
                  "symbol": "FDS",
                  "isin": "US3030751057",
                  "name": "Lorem ipsum",
                  "market": {
                    "id": 4,
                    "name": "Lorem ipsum"
                  },
                  "underlying": {
                    "name": "Lorem ipsum",
                    "notation": {
                      "id": "1532562",
                      "fsym": {
                        "listing": {
                          "permanentIdentifier": "DJC0PL-S",
                          "tickerExchange": "FDS-USA",
                          "isPrimary": false
                        },
                        "regional": {
                          "permanentIdentifier": "DJC0PL-S",
                          "tickerRegion": "FDS-US",
                          "isPrimary": false
                        }
                      },
                      "instrument": {
                        "id": "209485",
                        "isin": "US3030751057",
                        "nsin": {
                          "wkn": "901629",
                          "valor": "1234567",
                          "cusip": "303075105"
                        },
                        "fsym": {
                          "security": {
                            "permanentIdentifier": "DJC0PL-S"
                          }
                        }
                      }
                    }
                  },
                  "currency": {
                    "id": 1,
                    "code": "Lorem ipsum"
                  },
                  "category": {
                    "id": 3,
                    "name": "Lorem ipsum"
                  }
                }
              ],
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "GetOptionKeyFiguresGet200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "idNotation": {
                      "nullable": true,
                      "type": "string",
                      "format": "id64",
                      "description": "Identifier of the notation.",
                      "example": "1532562"
                    },
                    "sourceIdentifier": {
                      "nullable": true,
                      "type": "string",
                      "description": "Identifier used in the request.",
                      "example": "FDS-US"
                    },
                    "prices": {
                      "nullable": false,
                      "type": "object",
                      "description": "Prices of the option as used for the calculation.",
                      "properties": {
                        "ask": {
                          "nullable": false,
                          "type": "object",
                          "description": "Ask price.",
                          "properties": {
                            "time": {
                              "nullable": true,
                              "type": "string",
                              "format": "date-time",
                              "description": "Date and time.",
                              "example": "2024-01-01T00:00:00.000Z"
                            },
                            "price": {
                              "nullable": true,
                              "type": "number",
                              "format": "real",
                              "description": "Price value.",
                              "example": 3.1415
                            }
                          }
                        }
                      }
                    },
                    "currency": {
                      "nullable": false,
                      "type": "object",
                      "description": "Main or fractional currency of the attributes expressed in absolute terms, unless specified otherwise. See endpoint `/basic/value-unit/currency/list` for possible values.",
                      "properties": {
                        "id": {
                          "nullable": true,
                          "type": "number",
                          "format": "id32",
                          "description": "Identifier of the currency.",
                          "example": 3
                        },
                        "code": {
                          "nullable": true,
                          "type": "string",
                          "description": "Code of the currency.",
                          "example": "Lorem ipsum"
                        }
                      }
                    },
                    "delta": {
                      "nullable": true,
                      "type": "number",
                      "format": "real",
                      "description": "Ask-based delta. It represents the first partial derivative of the function\n            determining the option's theoretical price with respect to the underlying level, evaluated\n            at the underlying level. Delta indicates the ratio of the absolute change of the\n            price of an option for an indefinitely small absolute change in the underlying\n            level, thus it represents the price sensitivity of the option relative to changes in\n            the underlying level.\n            ",
                      "example": 3.03
                    },
                    "omega": {
                      "nullable": true,
                      "type": "number",
                      "format": "real",
                      "description": "Ask-based omega. It represents delta (see attribute `delta`) multiplied with theleverage (see attribute `leverage`), both calculated based on the ask price of theoption. Omega indicates the elasticity of the option's price regarding the underlyinglevel.",
                      "example": 3.1415
                    },
                    "thetaOneWeek": {
                      "nullable": true,
                      "type": "number",
                      "format": "real",
                      "description": "Ask-based weekly theta. It represents the first partial derivative of the\n            function determining the option's theoretical price with respect to the residual term,\n            evaluated at the current residual term and multiplied by 7/365. Weekly theta indicates\n            the absolute change (decrease) of the price of an option for a reduction of the\n            residual term by one week (seven calendar days), thus it represents the price\n            sensitivity of the option relative to changes in the residual term.\n            ",
                      "example": 3.03
                    },
                    "vega": {
                      "nullable": true,
                      "type": "number",
                      "format": "real",
                      "description": "Ask-based vega. It represents the first partial derivative of the function\n            determining the option's theoretical price with respect to the implied volatility,\n            evaluated at the current implied volatility. Vega indicates the ratio of the absolute\n            change of the price of an option for an absolute change of the implied volatility,\n            thus it represents the price sensitivity of the option relative to changes in the\n            implied volatility.\n            ",
                      "example": 1.01
                    },
                    "gamma": {
                      "nullable": true,
                      "type": "number",
                      "format": "real",
                      "description": "Ask-based gamma. It represents the second partial derivative of the function determining the option's theoretical price with respect to the underlying level, evaluated at the current underlying level. Gamma indicates the rate of change of the option's delta (see attribute `delta`) with respect to the underlying level.",
                      "example": 1.01
                    },
                    "rho": {
                      "nullable": true,
                      "type": "number",
                      "format": "real",
                      "description": "Ask-based rho. It represents the first partial derivative of the function \n            determining the option's theoretical price with respect to the risk-free interest rate, \n            evaluated at the current risk-free interest rate. Rho indicates the ratio of the absolute \n            change of the price of an option for an absolute change of the risk-free interest rate, \n            thus it represents the price sensitivity of the option relative to changes in the risk-free \n            interest rate.The key figure is shown in one basis point change.",
                      "example": 5.05
                    },
                    "breakEven": {
                      "nullable": true,
                      "type": "number",
                      "format": "real",
                      "description": "Break even point based on the ask price. It represents the underlying level that has to be reached at maturity, such that no loss or profit occurs for the holder of the option. For the value unit, see attribute `currency`.",
                      "example": 3.1415
                    },
                    "theoreticalValue": {
                      "nullable": true,
                      "type": "number",
                      "format": "real",
                      "description": "Estimate for the value of an option according to the option's pricing model (such as Black-Scholes). The parameters for the pricing model (e.g. interest rate, dividend yield, currency cross-rate etc.) use the current market values. For the historic volatility of the underlying, the time span refers to the remaining term to maturity of the option. The historic volatility that is closest to the remaining term is chosen. For example, for a remaining term of 14 months, the 1-year volatility is used, whereas for 19 months, the 2-year volatility. Note that the theoretical value does not depend on the option's price, but the value is in the option's value unit, see attribute `currency`.",
                      "example": 3.1415
                    },
                    "impliedVolatility": {
                      "nullable": true,
                      "type": "number",
                      "format": "relativeValue",
                      "description": "Ask-based implied volatility. It represents the volatility of the underlying\n            that justifies the ask price of the option, when used as a parameter in the\n            option's pricing model (such as Black-Scholes). Its value is a result of the pricing\n            process, thus it represents the annual volatility of the underlying expected by the\n            market participants until maturity of the option.\n            ",
                      "example": 0.3
                    },
                    "intrinsicValue": {
                      "nullable": true,
                      "type": "number",
                      "format": "real",
                      "description": "Intrinsic value. It represents the difference between the underlying level and\n            the strike of the option, adjusted for the currency cross rate. If the difference\n            is negative, the intrinsic value is given as 0. The intrinsic value represents\n            the theoretical profit from an immediate exercise of the option.\n            ",
                      "example": 3.03
                    },
                    "leverage": {
                      "nullable": true,
                      "type": "number",
                      "format": "real",
                      "description": "Ask-based leverage. It represents the ratio of the underlying level to the ask\n            price of the option, adjusted for the currency cross rate.\n            ",
                      "example": 3.03
                    },
                    "moneyness": {
                      "nullable": true,
                      "type": "number",
                      "format": "real",
                      "description": "Ratio of the current underlying level to the strike of an option. For calls,\n            it is current underlying level divided by the strike. For puts, it is strike\n            divided by the current underlying level. It measures the degree to which an option is\n            in-the-money (moneyness > 1) or out-of-the-money (moneyness < 1). If moneyness = 1, the\n            option is at-the-money.\n            ",
                      "example": 2.02
                    },
                    "parity": {
                      "nullable": true,
                      "type": "number",
                      "format": "real",
                      "description": "Parity. It represents the difference between the underlying level and the\n            strike of the option, adjusted for the currency cross rate. Negative values are\n            possible. It is the gain or loss that would result from the immediate exercise of an\n            already present option and a simultaneously executed compensation transaction on the\n            spot markets.\n            ",
                      "example": 2.02
                    },
                    "timeValue": {
                      "nullable": true,
                      "type": "number",
                      "format": "real",
                      "description": "Ask-based time value. It represents the difference between the ask price ofthe option and its intrinsic value (see attribute `intrinsicValue`).",
                      "example": 1.01
                    }
                  },
                  "nullable": false
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": {
                "idNotation": "1532562",
                "sourceIdentifier": "FDS-US",
                "prices": {
                  "ask": {
                    "time": "2024-01-01T00:00:00.000Z",
                    "price": 3.1415
                  }
                },
                "currency": {
                  "id": 3,
                  "code": "Lorem ipsum"
                },
                "delta": 3.03,
                "omega": 3.1415,
                "thetaOneWeek": 3.03,
                "vega": 1.01,
                "gamma": 1.01,
                "rho": 5.05,
                "breakEven": 3.1415,
                "theoreticalValue": 3.1415,
                "impliedVolatility": 0.3,
                "intrinsicValue": 3.03,
                "leverage": 3.03,
                "moneyness": 2.02,
                "parity": 2.02,
                "timeValue": 1.01
              },
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      }
    },
    "parameters": {},
    "examples": {},
    "requestBodies": {},
    "headers": {},
    "securitySchemes": {
      "FactSetOAuth2": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://auth.factset.com/as/token.oauth2",
            "scopes": {}
          }
        }
      },
      "FactSetApiKey": {
        "type": "http",
        "scheme": "basic"
      }
    },
    "links": {},
    "callbacks": {}
  },
  "security": [
    {
      "FactSetApiKey": []
    },
    {
      "FactSetOAuth2": []
    }
  ],
  "tags": [
    {
      "name": "option",
      "description": "option endpoints"
    }
  ],
  "externalDocs": {
    "description": "API Documentation",
    "url": "https://developer.factset.com/api-catalog/"
  }
}