{
  "openapi": "3.0.1",
  "info": {
    "title": "dsotm API",
    "description": "Allow clients to send transactions data to FactSet.",
    "contact": {
      "name": "FactSet Research Systems",
      "url": "https://developer.factset.com/contact",
      "email": "api@factset.com"
    },
    "license": {
      "name": "Apache License, Version 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0"
    },
    "version": "1.9.0"
  },
  "servers": [
    {
      "url": "https://api.factset.com/analytics/dsotm/v1",
      "description": "Production Server"
    },
    {
      "url": "https://api-sandbox.factset.com/analytics/dsotm/v1",
      "description": "Sandbox Server"
    }
  ],
  "paths": {
    "/transactions": {
      "post": {
        "tags": [
          "DSOTM"
        ],
        "summary": "Push transactions data into FactSet.",
        "description": "This endpoint takes the transactions data and pushes them into FactSet.",
        "operationId": "sendTransactions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DsotmParametersRoot"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Expected response.",
            "headers": {
              "X-DataDirect-Request-Key": {
                "description": "FactSet’s request key header.",
                "schema": {
                  "type": "string",
                  "description": "FactSet’s request key header."
                }
              },
              "X-FactSet-Api-Request-Key": {
                "description": "Key to uniquely identify an Analytics API request. Only available after successful authentication.",
                "schema": {
                  "type": "string",
                  "description": "Key to uniquely identify an Analytics API request. Only available after successful authentication."
                }
              }
            }
          },
          "400": {
            "description": "Invalid POST body.",
            "headers": {
              "X-DataDirect-Request-Key": {
                "description": "FactSet’s request key header.",
                "schema": {
                  "type": "string",
                  "description": "FactSet’s request key header."
                }
              },
              "X-FactSet-Api-Request-Key": {
                "description": "Key to uniquely identify an Analytics API request. Only available after successful authentication.",
                "schema": {
                  "type": "string",
                  "description": "Key to uniquely identify an Analytics API request. Only available after successful authentication."
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientErrorResponse"
                },
                "examples": {
                  "404 - Path Not Found": {
                    "value": {
                      "errors": [
                        {
                          "id": "668BDDBB7D633388",
                          "code": "NotFound",
                          "title": "Failed to process request",
                          "detail": "Path not found"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Missing or invalid authentication.",
            "headers": {
              "X-DataDirect-Request-Key": {
                "description": "FactSet’s request key header.",
                "schema": {
                  "type": "string",
                  "description": "FactSet’s request key header."
                }
              },
              "X-FactSet-Api-Request-Key": {
                "description": "Key to uniquely identify an Analytics API request. Only available after successful authentication.",
                "schema": {
                  "type": "string",
                  "description": "Key to uniquely identify an Analytics API request. Only available after successful authentication."
                }
              }
            }
          },
          "403": {
            "description": "User is forbidden with current credentials",
            "headers": {
              "X-DataDirect-Request-Key": {
                "description": "FactSet’s request key header.",
                "schema": {
                  "type": "string",
                  "description": "FactSet’s request key header."
                }
              },
              "X-FactSet-Api-Request-Key": {
                "description": "Key to uniquely identify an Analytics API request. Only available after successful authentication.",
                "schema": {
                  "type": "string",
                  "description": "Key to uniquely identify an Analytics API request. Only available after successful authentication."
                }
              }
            }
          },
          "415": {
            "description": "Missing/Invalid Content-Type header. Header needs to be set to application/json.",
            "headers": {
              "X-DataDirect-Request-Key": {
                "description": "FactSet’s request key header.",
                "schema": {
                  "type": "string",
                  "description": "FactSet’s request key header."
                }
              },
              "X-FactSet-Api-Request-Key": {
                "description": "Key to uniquely identify an Analytics API request. Only available after successful authentication.",
                "schema": {
                  "type": "string",
                  "description": "Key to uniquely identify an Analytics API request. Only available after successful authentication."
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached. Retry the requests after waiting the time specified in the retry-after header.",
            "headers": {
              "X-DataDirect-Request-Key": {
                "description": "FactSet’s request key header.",
                "schema": {
                  "type": "string",
                  "description": "FactSet’s request key header."
                }
              },
              "X-FactSet-Api-Request-Key": {
                "description": "Key to uniquely identify an Analytics API request. Only available after successful authentication.",
                "schema": {
                  "type": "string",
                  "description": "Key to uniquely identify an Analytics API request. Only available after successful authentication."
                }
              }
            }
          },
          "500": {
            "description": "Server error. Log the X-DataDirectRequest-Key header to assist in troubleshooting.",
            "headers": {
              "X-DataDirect-Request-Key": {
                "description": "FactSet’s request key header.",
                "schema": {
                  "type": "string",
                  "description": "FactSet’s request key header."
                }
              },
              "X-FactSet-Api-Request-Key": {
                "description": "Key to uniquely identify an Analytics API request. Only available after successful authentication.",
                "schema": {
                  "type": "string",
                  "description": "Key to uniquely identify an Analytics API request. Only available after successful authentication."
                }
              }
            }
          },
          "503": {
            "description": "Request timed out.",
            "headers": {
              "X-DataDirect-Request-Key": {
                "description": "FactSet’s request key header.",
                "schema": {
                  "type": "string",
                  "description": "FactSet’s request key header."
                }
              },
              "X-FactSet-Api-Request-Key": {
                "description": "Key to uniquely identify an Analytics API request. Only available after successful authentication.",
                "schema": {
                  "type": "string",
                  "description": "Key to uniquely identify an Analytics API request. Only available after successful authentication."
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AdditionalField": {
        "required": [
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the ofdb field",
            "example": "description"
          },
          "type": {
            "enum": [
              "string",
              "double",
              "int"
            ],
            "type": "string",
            "description": "Data type of the ofdb field",
            "example": "string"
          },
          "value": {
            "type": "string",
            "description": "Value of the ofdb field",
            "nullable": true,
            "example": "Transaction Data For FDS-USA"
          }
        },
        "description": "Defines an ofdb field and value to be persisted"
      },
      "Order": {
        "required": [
          "account",
          "currency",
          "gross",
          "instrumentName",
          "orderDate",
          "quantity",
          "side",
          "symbol",
          "transactionId",
          "transactionStatus",
          "unitType"
        ],
        "type": "object",
        "properties": {
          "orderDate": {
            "type": "string",
            "description": "Order date which is in the format YYYY-MM-DD",
            "example": "2024-01-25"
          },
          "transactionId": {
            "maxLength": 252,
            "minLength": 0,
            "type": "string",
            "description": "Unique Id of the order",
            "example": "O_FDS_012424_113"
          },
          "orderId": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "description": "Id of the order as assigned by the OMS. If not specified then transactionId is used.",
            "nullable": true,
            "example": "O123"
          },
          "transactionStatus": {
            "enum": [
              "pendingApproval",
              "open",
              "placed",
              "partialFilled",
              "filled",
              "expired",
              "cancelled",
              "rejected",
              "booked"
            ],
            "type": "string",
            "description": "Status of the Order",
            "example": "pendingApproval"
          },
          "orderType": {
            "enum": [
              "market",
              "limit",
              "stopLimit",
              "stop"
            ],
            "type": "string",
            "description": "Order type indicating the price type of the Order",
            "example": "market"
          },
          "limitPrice": {
            "type": "number",
            "description": "Price related to limit and stopLimit order types",
            "format": "double",
            "nullable": true,
            "example": 420.25
          },
          "stopPrice": {
            "type": "number",
            "description": "Price related to stop and stopLimit order types",
            "format": "double",
            "nullable": true,
            "example": 421.25
          },
          "tif": {
            "enum": [
              "goodTilCancel",
              "goodTilDate",
              "day",
              "week",
              "atMarketOpen",
              "atMarketClose",
              "immediateOrCancel",
              "fillOrKill",
              "goodTilCrossing"
            ],
            "type": "string",
            "description": "Time In Force of the Order",
            "example": "goodTilCancel"
          },
          "tifDate": {
            "type": "string",
            "description": "Time In Force date for goodTilDate orders in YYYY-MM-DD format",
            "nullable": true,
            "example": "2024-02-21"
          },
          "settlementType": {
            "enum": [
              "regular",
              "cash",
              "nextDay",
              "tPlus2",
              "tPlus3",
              "tPlus4",
              "future",
              "whenIssued",
              "sellersOption",
              "tPlus5"
            ],
            "type": "string",
            "description": "Indicates order settlement period",
            "example": "regular"
          },
          "settlementDate": {
            "type": "string",
            "description": "Settlement date in YYYY-MM-DD format",
            "nullable": true,
            "example": "2024-03-11"
          },
          "fundTeam": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "description": "Fund Team Id of the Order",
            "nullable": true,
            "example": "T1"
          },
          "tradingTeam": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "description": "Trading Team Id of the Order",
            "nullable": true,
            "example": "T2"
          },
          "trader": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "description": "User Id of assigned trader.",
            "nullable": true,
            "example": "msmith"
          },
          "account": {
            "type": "string",
            "description": "Path of the account",
            "example": "Client:/folder1/testing.acct"
          },
          "symbol": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "description": "Symbol corresponding to the traded instrument",
            "example": "FDS-USA"
          },
          "instrumentName": {
            "maxLength": 252,
            "minLength": 0,
            "type": "string",
            "description": "Name or description of the traded instrument",
            "example": "FactSet Research Systems"
          },
          "side": {
            "enum": [
              "buy",
              "buyCover",
              "sell",
              "sellShort"
            ],
            "type": "string",
            "description": "Side of the order",
            "example": "buy"
          },
          "unitType": {
            "enum": [
              "quantity",
              "value"
            ],
            "type": "string",
            "description": "Unit type of the order. Indicates if the trade is driven by quantity or value",
            "example": "quantity"
          },
          "transactionLeaves": {
            "type": "number",
            "description": "Shares that have been ordered and not executed",
            "format": "double",
            "nullable": true,
            "example": 0.01
          },
          "quantity": {
            "type": "number",
            "description": "Quantity of the instrument traded",
            "format": "double",
            "example": 1000.01
          },
          "gross": {
            "type": "number",
            "description": "Cash value of the transaction",
            "format": "double",
            "example": 0.01
          },
          "price": {
            "type": "number",
            "description": "The transaction price",
            "format": "double",
            "nullable": true,
            "example": 420.25
          },
          "currency": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "The iso currency code of cash valued fields, Net Amount and Gross Amount",
            "example": "USD"
          },
          "complianceStatus": {
            "enum": [
              "unchecked",
              "pass",
              "fail",
              "warn"
            ],
            "type": "string",
            "description": "Compliance check status",
            "example": "unchecked"
          },
          "addedDateTime": {
            "type": "string",
            "description": "Date and time expressed in UTC when the transaction was first added in the format YYYY-MM-DDTHH:MM:SS.FFF",
            "nullable": true,
            "example": "2024-01-25T09:30:23.235"
          },
          "updatedDateTime": {
            "type": "string",
            "description": "Date and time expressed in UTC when the transaction was last updated in the format YYYY-MM-DDTHH:MM:SS.FFF",
            "nullable": true,
            "example": "2024-01-25T09:30:23.235"
          },
          "additionalFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalField"
            },
            "description": "List of additional fields which can be used for dynamically populating other ofdb fields",
            "nullable": true
          }
        },
        "description": "Order transaction attributes"
      },
      "Placement": {
        "required": [
          "account",
          "currency",
          "gross",
          "instrumentName",
          "placementDate",
          "quantity",
          "side",
          "symbol",
          "transactionId",
          "transactionStatus",
          "unitType"
        ],
        "type": "object",
        "properties": {
          "placementDate": {
            "type": "string",
            "description": "Placement date which is in the format YYYY-MM-DD",
            "example": "2024-01-25"
          },
          "transactionId": {
            "maxLength": 252,
            "minLength": 0,
            "type": "string",
            "description": "Unique Id of the placement",
            "example": "P123"
          },
          "parentId": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "description": "transactionId of the order which spawned this placement",
            "nullable": true,
            "example": "O_FDS_012424_113"
          },
          "orderId": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "description": "orderId of the order related to this placement",
            "nullable": true,
            "example": "O123"
          },
          "transactionStatus": {
            "enum": [
              "placed",
              "partialFilled",
              "filled",
              "expired",
              "cancelled",
              "rejected"
            ],
            "type": "string",
            "description": "Status of the Placement",
            "example": "placed"
          },
          "orderType": {
            "enum": [
              "market",
              "limit",
              "stopLimit",
              "stop"
            ],
            "type": "string",
            "description": "Order type indicating the price type of the Placement",
            "example": "market"
          },
          "limitPrice": {
            "type": "number",
            "description": "Price related to limit and stopLimit order types",
            "format": "double",
            "nullable": true,
            "example": 420.25
          },
          "stopPrice": {
            "type": "number",
            "description": "Price related to stop and stopLimit order types",
            "format": "double",
            "nullable": true,
            "example": 421.25
          },
          "tif": {
            "enum": [
              "goodTilCancel",
              "goodTilDate",
              "day",
              "week",
              "atMarketOpen",
              "atMarketClose",
              "immediateOrCancel",
              "fillOrKill",
              "goodTilCrossing"
            ],
            "type": "string",
            "description": "Time In Force of the Placement",
            "example": "goodTilCancel"
          },
          "tifDate": {
            "type": "string",
            "description": "Time In Force date for goodTilDate placements in YYYY-MM-DD format",
            "nullable": true,
            "example": "2024-02-21"
          },
          "settlementType": {
            "enum": [
              "regular",
              "cash",
              "nextDay",
              "tPlus2",
              "tPlus3",
              "tPlus4",
              "future",
              "whenIssued",
              "sellersOption",
              "tPlus5"
            ],
            "type": "string",
            "description": "Indicates placement settlement period",
            "example": "regular"
          },
          "settlementDate": {
            "type": "string",
            "description": "Settlement date in YYYY-MM-DD format",
            "nullable": true,
            "example": "2024-03-11"
          },
          "account": {
            "type": "string",
            "description": "Path of the account",
            "example": "Client:/folder1/testing.acct"
          },
          "symbol": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "description": "Symbol corresponding to the traded instrument",
            "example": "FDS-USA"
          },
          "instrumentName": {
            "maxLength": 252,
            "minLength": 0,
            "type": "string",
            "description": "Name or description of the traded instrument",
            "example": "FactSet Research Systems"
          },
          "side": {
            "enum": [
              "buy",
              "buyCover",
              "sell",
              "sellShort"
            ],
            "type": "string",
            "description": "Side of the order",
            "example": "buy"
          },
          "unitType": {
            "enum": [
              "quantity",
              "value"
            ],
            "type": "string",
            "description": "Unit type of the order. Indicates if the trade is driven by quantity or value",
            "example": "quantity"
          },
          "transactionLeaves": {
            "type": "number",
            "description": "Shares that have been ordered and not executed",
            "format": "double",
            "nullable": true,
            "example": 0.01
          },
          "quantity": {
            "type": "number",
            "description": "Quantity of the instrument traded",
            "format": "double",
            "example": 1000.01
          },
          "gross": {
            "type": "number",
            "description": "Cash value of the transaction",
            "format": "double",
            "example": 0.01
          },
          "price": {
            "type": "number",
            "description": "The transaction price",
            "format": "double",
            "nullable": true,
            "example": 420.25
          },
          "currency": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "The iso currency code of cash valued fields, Net Amount and Gross Amount",
            "example": "USD"
          },
          "complianceStatus": {
            "enum": [
              "unchecked",
              "pass",
              "fail",
              "warn"
            ],
            "type": "string",
            "description": "Compliance check status",
            "example": "unchecked"
          },
          "addedDateTime": {
            "type": "string",
            "description": "Date and time expressed in UTC when the transaction was first added in the format YYYY-MM-DDTHH:MM:SS.FFF",
            "nullable": true,
            "example": "2024-01-25T09:30:23.235"
          },
          "updatedDateTime": {
            "type": "string",
            "description": "Date and time expressed in UTC when the transaction was last updated in the format YYYY-MM-DDTHH:MM:SS.FFF",
            "nullable": true,
            "example": "2024-01-25T09:30:23.235"
          },
          "additionalFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalField"
            },
            "description": "List of additional fields which can be used for dynamically populating other ofdb fields",
            "nullable": true
          }
        },
        "description": "Placement transaction attributes"
      },
      "Execution": {
        "required": [
          "account",
          "currency",
          "gross",
          "instrumentName",
          "net",
          "quantity",
          "settlementCurrency",
          "settlementDate",
          "settlementValue",
          "side",
          "symbol",
          "tradeDate",
          "transactionId",
          "transactionStatus",
          "unitType"
        ],
        "type": "object",
        "properties": {
          "tradeDate": {
            "type": "string",
            "description": "Trade date which is in the format YYYY-MM-DD",
            "example": "2024-01-25"
          },
          "transactionId": {
            "maxLength": 252,
            "minLength": 0,
            "type": "string",
            "description": "Unique Id of the execution",
            "example": "E456"
          },
          "parentId": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "description": "transactionId of the placement which spawned this execution",
            "nullable": true,
            "example": "P123"
          },
          "orderId": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "description": "orderId of the order related to this execution",
            "nullable": true,
            "example": "O123"
          },
          "transactionStatus": {
            "enum": [
              "executed",
              "booked",
              "cancelled"
            ],
            "type": "string",
            "description": "Status of the Execution",
            "example": "executed"
          },
          "net": {
            "type": "number",
            "description": "Cash value of the transaction, net of brokerage costs",
            "format": "double",
            "example": 0.01
          },
          "settlementDate": {
            "type": "string",
            "description": "Settlement date in YYYY-MM-DD format",
            "example": "2024-03-11"
          },
          "settlementCurrency": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "The iso currency code of the Settlement Value",
            "example": "EUR"
          },
          "settlementValue": {
            "type": "number",
            "description": "Cash value of the transaction in settlement currency",
            "format": "double",
            "example": 0.01
          },
          "foreignExchangeRate": {
            "type": "number",
            "description": "FX rate to convert the net, gross fields to reporting currency",
            "format": "float",
            "nullable": true,
            "example": 1
          },
          "broker": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "description": "Execution broker id",
            "nullable": true,
            "example": "B1"
          },
          "custodian": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "description": "Execution custodian Id",
            "nullable": true,
            "example": "C1"
          },
          "accruedInterest": {
            "type": "number",
            "description": "Execution accrued interest",
            "format": "double",
            "nullable": true,
            "example": 0.01
          },
          "commission": {
            "type": "number",
            "description": "Execution commission value",
            "format": "double",
            "nullable": true,
            "example": 0.01
          },
          "clearingCommission": {
            "type": "number",
            "description": "Execution clearing commission value",
            "format": "double",
            "nullable": true,
            "example": 0.01
          },
          "localTax": {
            "type": "number",
            "description": "Execution local tax value",
            "format": "double",
            "nullable": true,
            "example": 0.01
          },
          "localFee": {
            "type": "number",
            "description": "Execution local fee value",
            "format": "double",
            "nullable": true,
            "example": 0.01
          },
          "brokerFee": {
            "type": "number",
            "description": "Execution broker fee value",
            "format": "double",
            "nullable": true,
            "example": 0.01
          },
          "exchangeFee": {
            "type": "number",
            "description": "Execution exchange fee value",
            "format": "double",
            "nullable": true,
            "example": 0.01
          },
          "miscellaneousFee": {
            "type": "number",
            "description": "Execution miscellaneous fee value",
            "format": "double",
            "nullable": true,
            "example": 0.01
          },
          "account": {
            "type": "string",
            "description": "Path of the account",
            "example": "Client:/folder1/testing.acct"
          },
          "symbol": {
            "maxLength": 32,
            "minLength": 0,
            "type": "string",
            "description": "Symbol corresponding to the traded instrument",
            "example": "FDS-USA"
          },
          "instrumentName": {
            "maxLength": 252,
            "minLength": 0,
            "type": "string",
            "description": "Name or description of the traded instrument",
            "example": "FactSet Research Systems"
          },
          "side": {
            "enum": [
              "buy",
              "buyCover",
              "sell",
              "sellShort"
            ],
            "type": "string",
            "description": "Side of the order",
            "example": "buy"
          },
          "unitType": {
            "enum": [
              "quantity",
              "value"
            ],
            "type": "string",
            "description": "Unit type of the order. Indicates if the trade is driven by quantity or value",
            "example": "quantity"
          },
          "transactionLeaves": {
            "type": "number",
            "description": "Shares that have been ordered and not executed",
            "format": "double",
            "nullable": true,
            "example": 0.01
          },
          "quantity": {
            "type": "number",
            "description": "Quantity of the instrument traded",
            "format": "double",
            "example": 1000.01
          },
          "gross": {
            "type": "number",
            "description": "Cash value of the transaction",
            "format": "double",
            "example": 0.01
          },
          "price": {
            "type": "number",
            "description": "The transaction price",
            "format": "double",
            "nullable": true,
            "example": 420.25
          },
          "currency": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "The iso currency code of cash valued fields, Net Amount and Gross Amount",
            "example": "USD"
          },
          "complianceStatus": {
            "enum": [
              "unchecked",
              "pass",
              "fail",
              "warn"
            ],
            "type": "string",
            "description": "Compliance check status",
            "example": "unchecked"
          },
          "addedDateTime": {
            "type": "string",
            "description": "Date and time expressed in UTC when the transaction was first added in the format YYYY-MM-DDTHH:MM:SS.FFF",
            "nullable": true,
            "example": "2024-01-25T09:30:23.235"
          },
          "updatedDateTime": {
            "type": "string",
            "description": "Date and time expressed in UTC when the transaction was last updated in the format YYYY-MM-DDTHH:MM:SS.FFF",
            "nullable": true,
            "example": "2024-01-25T09:30:23.235"
          },
          "additionalFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalField"
            },
            "description": "List of additional fields which can be used for dynamically populating other ofdb fields",
            "nullable": true
          }
        },
        "description": "Execution transaction attributes"
      },
      "DsotmParameters": {
        "type": "object",
        "properties": {
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Order"
            },
            "description": "List of orders",
            "nullable": true
          },
          "placements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Placement"
            },
            "description": "List of placements",
            "nullable": true
          },
          "executions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Execution"
            },
            "description": "List of executions",
            "nullable": true
          }
        },
        "description": "Container object for transaction records"
      },
      "DsotmParametersRoot": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DsotmParameters"
          }
        },
        "description": "Top-level data container object"
      },
      "ErrorSource": {
        "type": "object",
        "description": "Error Source",
        "properties": {
          "pointer": {
            "type": "string",
            "nullable": true,
            "description": "Pointer"
          },
          "parameter": {
            "type": "string",
            "nullable": true,
            "description": "parameter"
          }
        }
      },
      "Error": {
        "type": "object",
        "description": "Error",
        "properties": {
          "id": {
            "type": "string",
            "description": "`id` of the error.",
            "nullable": true
          },
          "code": {
            "type": "string",
            "description": "`code` of the error.",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "`title` of the error.",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "description": "Error detail.",
            "nullable": true
          },
          "source": {
            "$ref": "#/components/schemas/ErrorSource"
          }
        }
      },
      "ClientErrorResponse": {
        "type": "object",
        "description": "Client Error Response",
        "properties": {
          "errors": {
            "type": "array",
            "description": "`type` of the error",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "nullable": true
          }
        }
      }
    },
    "securitySchemes": {
      "FactSetOAuth2": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://auth.factset.com/as/token.oauth2",
            "scopes": {}
          }
        }
      },
      "FactSetApiKey": {
        "type": "http",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "FactSetApiKey": []
    },
    {
      "FactSetOAuth2": []
    }
  ],
  "tags": [
    {
      "name": "DSOTM",
      "description": "This endpoint is used to push transaction data into FactSet."
    }
  ],
  "externalDocs": {
    "description": "API Documentation",
    "url": "https://developer.factset.com/api-catalog/direct-streaming-transaction-messages-api"
  }
}