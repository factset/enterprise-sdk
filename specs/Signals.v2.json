{
  "openapi": "3.0.2",
  "info": {
    "title": "Signals API",
    "description": "Collection of endpoints for providing Signal Events, Definitions and Metadata",
    "version": "2.6.0",
    "contact": {
      "name": "FactSet Research Systems",
      "email": "api@factset.com",
      "url": "https://developer.factset.com/contact"
    },
    "license": {
      "name": "Apache License, Version 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "servers": [
    {
      "url": "https://api.factset.com/signals/v2",
      "description": "Production"
    }
  ],
  "tags": [
    {
      "name": "Events",
      "description": "Fetch signal events. Please note that FactSet Cognitive signals and signals contributed by third parties are excluded from the response for limited API access."
    },
    {
      "name": "Metadata",
      "description": "Fetch signal metadata"
    }
  ],
  "paths": {
    "/events/headlines": {
      "get": {
        "tags": [
          "Events"
        ],
        "x-factset-sdk-ignore": true,
        "operationId": "getEventHeadlines",
        "description": "Fetch Signals event headlines based on at least one of the following filtering parameters: `ids`, `portfolios`",
        "parameters": [
          {
            "$ref": "#/components/parameters/createdParam"
          },
          {
            "$ref": "#/components/parameters/updatedParam"
          },
          {
            "$ref": "#/components/parameters/signalIdsParam"
          },
          {
            "$ref": "#/components/parameters/idsParam"
          },
          {
            "$ref": "#/components/parameters/portfoliosParam"
          },
          {
            "$ref": "#/components/parameters/themesParam"
          },
          {
            "$ref": "#/components/parameters/categoriesParam"
          },
          {
            "$ref": "#/components/parameters/relevanceScoreParam"
          },
          {
            "$ref": "#/components/parameters/sortParam"
          },
          {
            "$ref": "#/components/parameters/resolveIdentifiersParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eventHeadlines"
                },
                "example": {
                  "data": [
                    {
                      "requestId": "AAPL-US",
                      "companyName": "Apple Inc.",
                      "signalId": "significantPriceChange",
                      "signalName": "10% Price Change",
                      "theme": "Prices",
                      "source": "FactSet",
                      "userRelevanceScore": 0.733,
                      "eventId": "f793221a-71d0-4979-a1a8-86e44770cd16",
                      "eventDate": "2024-08-16",
                      "summary": "On 16 Aug '24, Apple (AAPL-US) was up 17.4% YTD.",
                      "created": "2024-08-21T16:16:44.719Z"
                    },
                    {
                      "requestId": "MSFT-US",
                      "companyName": "Microsoft Corporation",
                      "signalId": "significantPriceChange",
                      "signalName": "10% Price Change",
                      "theme": "Prices",
                      "source": "FactSet",
                      "userRelevanceScore": 0.733,
                      "eventId": "4a21ee8f-9eea-466b-91ff-49946b18a500",
                      "eventDate": "2024-08-16",
                      "summary": "On 16 Aug '24, Microsoft (MSFT-US) was up 11.3% YTD.",
                      "created": "2024-08-21T16:16:51.595Z"
                    },
                    {
                      "requestId": "AMZN-US",
                      "companyName": "Amazon.com, Inc.",
                      "signalId": "significantPriceChange",
                      "signalName": "10% Price Change",
                      "theme": "Prices",
                      "source": "FactSet",
                      "userRelevanceScore": 0.733,
                      "eventId": "fbdcf03e-3225-44b2-9350-049b2730f118",
                      "eventDate": "2024-08-16",
                      "summary": "On 16 Aug '24, Amazon.com (AMZN-US) was up 16.5% YTD.",
                      "created": "2024-08-21T16:16:48.196Z"
                    },
                    {
                      "requestId": "GOOG-US",
                      "companyName": "Alphabet Inc. Class A",
                      "signalId": "significantPriceChange",
                      "signalName": "10% Price Change",
                      "theme": "Prices",
                      "source": "FactSet",
                      "userRelevanceScore": 0.733,
                      "eventId": "89a7c4b6-9eca-4a3c-97fa-40c9776fbd3d",
                      "eventDate": "2024-08-16",
                      "summary": "On 16 Aug '24, Alphabet (GOOGL-US) was up 16.7% YTD.",
                      "created": "2024-08-21T16:17:38.454Z"
                    },
                    {
                      "requestId": "GOOG-US",
                      "companyName": "Alphabet Inc. Class A",
                      "signalId": "debtMaturingBond",
                      "signalName": "Bonds Maturing in 24 Months",
                      "theme": "Debt Capital Structure",
                      "source": "FactSet",
                      "userRelevanceScore": 0.633,
                      "eventId": "d5151b23-c496-4010-afa7-856aa073afa9",
                      "eventDate": "2026-08-15",
                      "summary": "Alphabet (GOOGL-US) has one bond totaling USD 2,000.00 million that will be maturing in 24 months",
                      "created": "2024-08-15T07:09:22.778Z"
                    }
                  ],
                  "meta": {
                    "signalRequestId": "811920df-3029-4758-b54e-5096d29da831",
                    "sort": [
                      "-userRelevanceScore",
                      "-eventDate"
                    ],
                    "idResolutions": {
                      "tickerRegion": {
                        "FDS-US": "FDS-US",
                        "AMZN-US": "AMZN-US",
                        "MSFT-US": "MSFT-US",
                        "AAPL-US": "AAPL-US",
                        "GOOG-US": "GOOG-US"
                      },
                      "regionalPermId": {
                        "FDS-US": "SQFMK3-R",
                        "AMZN-US": "MCNYYL-R",
                        "MSFT-US": "P8R3C2-R",
                        "AAPL-US": "MH33D6-R",
                        "GOOG-US": "WFJYTJ-R"
                      }
                    },
                    "dateRange": {
                      "created": {
                        "gte": "2024-08-15T00:00:00.000Z",
                        "lte": "2024-08-22T21:21:22.804Z"
                      },
                      "updated": {
                        "gte": "2024-08-15T00:00:00.000Z",
                        "lte": "2024-08-22T21:21:22.804Z"
                      }
                    },
                    "pagination": {
                      "total": 5,
                      "isEstimatedTotal": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "example": {
                  "message": "A parameter in the request has an invalid value or a required parameter is missing.",
                  "errors": [
                    {
                      "id": "b0faf2e1-a7b2-43b0-acd7-3f04ad3c1a33",
                      "code": "parameterError",
                      "title": "Required param 'exampleParam' was not provided",
                      "detail": "A parameter in the request has an invalid value or a required parameter is missing."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "API Rate Limit Exceeded",
            "headers": {
              "Api-Version": {
                "$ref": "#/components/headers/Api-Version"
              },
              "Api-Supported-Versions": {
                "$ref": "#/components/headers/Api-Supported-Versions"
              },
              "RateLimit-Limit": {
                "$ref": "#/components/headers/RateLimit-Limit"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/RateLimit-Remaining"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/RateLimit-Reset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rateLimitResponse"
                },
                "example": {
                  "message": "API rate limit exceeded"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "example": {
                  "message": "An error occurred while processing the request.",
                  "errors": [
                    {
                      "code": "genericServerError",
                      "detail": "An error occurred while processing the request.",
                      "id": "b0faf2e1-a7b2-43b0-acd7-3f04ad3c1a33",
                      "title": "An unexpected error happened."
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Events"
        ],
        "operationId": "postEventHeadlines",
        "description": "Fetch Signals event headlines based on the filtering criteria for up to 1000 identifiers and at least one of the following filtering parameters: `ids`, `portfolios`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/eventRequestBody"
              },
              "example": {
                "created": {
                  "gt": "2021-01-01T00:00:00Z",
                  "gte": "2021-01-01T00:00:00Z",
                  "lt": "2021-01-01T00:00:00Z",
                  "lte": "2021-01-01T00:00:00Z"
                },
                "updated": {
                  "gt": "2021-01-01T00:00:00Z",
                  "gte": "2021-01-01T00:00:00Z",
                  "lt": "2021-01-01T00:00:00Z",
                  "lte": "2021-01-01T00:00:00Z"
                },
                "signalIds": "dilutionTrigger,freeCashFlow",
                "ids": "FDS-US,AMZN-US",
                "portfolios": "testPortfolio.ofdb",
                "themes": "testTheme",
                "categories": "testCategory",
                "userRelevanceScore": {
                  "gt": 0,
                  "gte": 0,
                  "lt": 0,
                  "lte": 0
                },
                "sort": "-userRelevanceScore",
                "resolveIdentifiers": true,
                "propertyFilter": {
                  "portfolioUniqueId": "abc-xyz-def"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eventHeadlines"
                },
                "example": {
                  "data": [
                    {
                      "requestId": "AAPL-US",
                      "companyName": "Apple Inc.",
                      "signalId": "significantPriceChange",
                      "signalName": "10% Price Change",
                      "theme": "Prices",
                      "source": "FactSet",
                      "userRelevanceScore": 0.733,
                      "eventId": "f793221a-71d0-4979-a1a8-86e44770cd16",
                      "eventDate": "2024-08-16",
                      "summary": "On 16 Aug '24, Apple (AAPL-US) was up 17.4% YTD.",
                      "created": "2024-08-21T16:16:44.719Z"
                    },
                    {
                      "requestId": "MSFT-US",
                      "companyName": "Microsoft Corporation",
                      "signalId": "significantPriceChange",
                      "signalName": "10% Price Change",
                      "theme": "Prices",
                      "source": "FactSet",
                      "userRelevanceScore": 0.733,
                      "eventId": "4a21ee8f-9eea-466b-91ff-49946b18a500",
                      "eventDate": "2024-08-16",
                      "summary": "On 16 Aug '24, Microsoft (MSFT-US) was up 11.3% YTD.",
                      "created": "2024-08-21T16:16:51.595Z"
                    },
                    {
                      "requestId": "AMZN-US",
                      "companyName": "Amazon.com, Inc.",
                      "signalId": "significantPriceChange",
                      "signalName": "10% Price Change",
                      "theme": "Prices",
                      "source": "FactSet",
                      "userRelevanceScore": 0.733,
                      "eventId": "fbdcf03e-3225-44b2-9350-049b2730f118",
                      "eventDate": "2024-08-16",
                      "summary": "On 16 Aug '24, Amazon.com (AMZN-US) was up 16.5% YTD.",
                      "created": "2024-08-21T16:16:48.196Z"
                    },
                    {
                      "requestId": "GOOG-US",
                      "companyName": "Alphabet Inc. Class A",
                      "signalId": "significantPriceChange",
                      "signalName": "10% Price Change",
                      "theme": "Prices",
                      "source": "FactSet",
                      "userRelevanceScore": 0.733,
                      "eventId": "89a7c4b6-9eca-4a3c-97fa-40c9776fbd3d",
                      "eventDate": "2024-08-16",
                      "summary": "On 16 Aug '24, Alphabet (GOOGL-US) was up 16.7% YTD.",
                      "created": "2024-08-21T16:17:38.454Z"
                    },
                    {
                      "requestId": "GOOG-US",
                      "companyName": "Alphabet Inc. Class A",
                      "signalId": "debtMaturingBond",
                      "signalName": "Bonds Maturing in 24 Months",
                      "theme": "Debt Capital Structure",
                      "source": "FactSet",
                      "userRelevanceScore": 0.633,
                      "eventId": "d5151b23-c496-4010-afa7-856aa073afa9",
                      "eventDate": "2026-08-15",
                      "summary": "Alphabet (GOOGL-US) has one bond totaling USD 2,000.00 million that will be maturing in 24 months",
                      "created": "2024-08-15T07:09:22.778Z"
                    }
                  ],
                  "meta": {
                    "signalRequestId": "811920df-3029-4758-b54e-5096d29da831",
                    "sort": [
                      "-userRelevanceScore",
                      "-eventDate"
                    ],
                    "idResolutions": {
                      "tickerRegion": {
                        "FDS-US": "FDS-US",
                        "AMZN-US": "AMZN-US",
                        "MSFT-US": "MSFT-US",
                        "AAPL-US": "AAPL-US",
                        "GOOG-US": "GOOG-US"
                      },
                      "regionalPermId": {
                        "FDS-US": "SQFMK3-R",
                        "AMZN-US": "MCNYYL-R",
                        "MSFT-US": "P8R3C2-R",
                        "AAPL-US": "MH33D6-R",
                        "GOOG-US": "WFJYTJ-R"
                      }
                    },
                    "dateRange": {
                      "created": {
                        "gte": "2024-08-15T00:00:00.000Z",
                        "lte": "2024-08-22T21:21:22.804Z"
                      },
                      "updated": {
                        "gte": "2024-08-15T00:00:00.000Z",
                        "lte": "2024-08-22T21:21:22.804Z"
                      }
                    },
                    "pagination": {
                      "total": 5,
                      "isEstimatedTotal": false
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "API Rate Limit Exceeded",
            "headers": {
              "Api-Version": {
                "$ref": "#/components/headers/Api-Version"
              },
              "Api-Supported-Versions": {
                "$ref": "#/components/headers/Api-Supported-Versions"
              },
              "RateLimit-Limit": {
                "$ref": "#/components/headers/RateLimit-Limit"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/RateLimit-Remaining"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/RateLimit-Reset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rateLimitResponse"
                },
                "example": {
                  "message": "API rate limit exceeded"
                }
              }
            }
          }
        }
      }
    },
    "/events/details": {
      "get": {
        "tags": [
          "Events"
        ],
        "x-factset-sdk-ignore": true,
        "operationId": "getEventDetails",
        "description": "Fetch Signals event headlines plus all additional event details based on at least one of the following filtering parameters: `ids`, `portfolios`",
        "parameters": [
          {
            "$ref": "#/components/parameters/createdParam"
          },
          {
            "$ref": "#/components/parameters/updatedParam"
          },
          {
            "$ref": "#/components/parameters/signalIdsParam"
          },
          {
            "$ref": "#/components/parameters/idsParam"
          },
          {
            "$ref": "#/components/parameters/portfoliosParam"
          },
          {
            "$ref": "#/components/parameters/themesParam"
          },
          {
            "$ref": "#/components/parameters/categoriesParam"
          },
          {
            "$ref": "#/components/parameters/relevanceScoreParam"
          },
          {
            "$ref": "#/components/parameters/sortParam"
          },
          {
            "$ref": "#/components/parameters/resolveIdentifiersParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eventDetails"
                },
                "example": {
                  "data": [
                    {
                      "requestId": "MSFT-US",
                      "companyName": "Microsoft Corporation",
                      "signalId": "significantPriceChange",
                      "signalName": "10% Price Change",
                      "theme": "Prices",
                      "source": "FactSet",
                      "userRelevanceScore": 0.733,
                      "eventId": "4a21ee8f-9eea-466b-91ff-49946b18a500",
                      "eventDate": "2024-08-16",
                      "summary": "On 16 Aug '24, Microsoft (MSFT-US) was up 11.3% YTD.",
                      "created": "2024-08-21T16:16:51.595Z",
                      "updated": "2024-08-21T16:16:51.595Z",
                      "details": {
                        "price": 418.47,
                        "priceDate": "2024-08-16",
                        "priceCurrency": "USD",
                        "1MoPriceChange": -6.90737,
                        "3MoPriceChange": -0.598586,
                        "eventIndicator": "Positive",
                        "ytdPriceChange": 11.2834,
                        "1WeekPriceChange": 2.86621,
                        "52WeekPriceChange": 30.6086,
                        "significantPriceScope": "YTD"
                      }
                    },
                    {
                      "requestId": "AMZN-US",
                      "companyName": "Amazon.com, Inc.",
                      "signalId": "significantPriceChange",
                      "signalName": "10% Price Change",
                      "theme": "Prices",
                      "source": "FactSet",
                      "userRelevanceScore": 0.733,
                      "eventId": "fbdcf03e-3225-44b2-9350-049b2730f118",
                      "eventDate": "2024-08-16",
                      "summary": "On 16 Aug '24, Amazon.com (AMZN-US) was up 16.5% YTD.",
                      "created": "2024-08-21T16:16:48.196Z",
                      "updated": "2024-08-21T16:16:48.196Z",
                      "details": {
                        "price": 177.06,
                        "priceDate": "2024-08-16",
                        "priceCurrency": "USD",
                        "1MoPriceChange": -8.26858,
                        "3MoPriceChange": -3.57785,
                        "eventIndicator": "Positive",
                        "ytdPriceChange": 16.5328,
                        "1WeekPriceChange": 6.15108,
                        "52WeekPriceChange": 31.0876,
                        "significantPriceScope": "YTD"
                      }
                    }
                  ],
                  "meta": {
                    "signalRequestId": "2b8a6969-af32-4878-8124-758715b19baa",
                    "sort": [
                      "-userRelevanceScore"
                    ],
                    "idResolutions": {
                      "tickerRegion": {
                        "MSFT-US": "MSFT-US",
                        "AMZN-US": "AMZN-US"
                      },
                      "regionalPermId": {
                        "MSFT-US": "P8R3C2-R",
                        "AMZN-US": "MCNYYL-R"
                      }
                    },
                    "dateRange": {
                      "created": {
                        "gte": "2024-08-15T00:00:00.000Z",
                        "lte": "2024-08-22T21:40:50.444Z"
                      },
                      "updated": {
                        "gte": "2024-08-15T00:00:00.000Z",
                        "lte": "2024-08-22T21:40:50.444Z"
                      }
                    },
                    "pagination": {
                      "total": 2,
                      "isEstimatedTotal": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "example": {
                  "message": "A parameter in the request has an invalid value or a required parameter is missing.",
                  "errors": [
                    {
                      "id": "b0faf2e1-a7b2-43b0-acd7-3f04ad3c1a33",
                      "code": "parameterError",
                      "title": "Required param 'exampleParam' was not provided",
                      "detail": "A parameter in the request has an invalid value or a required parameter is missing."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "API Rate Limit Exceeded",
            "headers": {
              "Api-Version": {
                "$ref": "#/components/headers/Api-Version"
              },
              "Api-Supported-Versions": {
                "$ref": "#/components/headers/Api-Supported-Versions"
              },
              "RateLimit-Limit": {
                "$ref": "#/components/headers/RateLimit-Limit"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/RateLimit-Remaining"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/RateLimit-Reset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rateLimitResponse"
                },
                "example": {
                  "message": "API rate limit exceeded"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "example": {
                  "message": "An error occurred while processing the request.",
                  "errors": [
                    {
                      "code": "genericServerError",
                      "detail": "An error occurred while processing the request.",
                      "id": "b0faf2e1-a7b2-43b0-acd7-3f04ad3c1a33",
                      "title": "An unexpected error happened."
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Events"
        ],
        "operationId": "postEventDetails",
        "description": "Fetch Signals event headlines plus all additional event details for up to 1000 identifiers and at least one of the following filtering parameters: `ids`, `portfolios`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/eventRequestBody"
              },
              "example": {
                "created": {
                  "gt": "2021-01-01T00:00:00Z",
                  "gte": "2021-01-01T00:00:00Z",
                  "lt": "2021-01-01T00:00:00Z",
                  "lte": "2021-01-01T00:00:00Z"
                },
                "updated": {
                  "gt": "2021-01-01T00:00:00Z",
                  "gte": "2021-01-01T00:00:00Z",
                  "lt": "2021-01-01T00:00:00Z",
                  "lte": "2021-01-01T00:00:00Z"
                },
                "signalIds": "dilutionTrigger,freeCashFlow",
                "ids": "FDS-US,AMZN-US",
                "portfolios": "testPortfolio.ofdb",
                "themes": "testTheme",
                "categories": "testCategory",
                "userRelevanceScore": {
                  "gt": 0,
                  "gte": 0,
                  "lt": 0,
                  "lte": 0
                },
                "sort": "-userRelevanceScore",
                "resolveIdentifiers": true,
                "propertyFilter": {
                  "portfolioUniqueId": "abc-xyz-def"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eventDetails"
                },
                "example": {
                  "data": [
                    {
                      "requestId": "MSFT-US",
                      "companyName": "Microsoft Corporation",
                      "signalId": "significantPriceChange",
                      "signalName": "10% Price Change",
                      "theme": "Prices",
                      "source": "FactSet",
                      "userRelevanceScore": 0.733,
                      "eventId": "4a21ee8f-9eea-466b-91ff-49946b18a500",
                      "eventDate": "2024-08-16",
                      "summary": "On 16 Aug '24, Microsoft (MSFT-US) was up 11.3% YTD.",
                      "created": "2024-08-21T16:16:51.595Z",
                      "updated": "2024-08-21T16:16:51.595Z",
                      "details": {
                        "price": 418.47,
                        "priceDate": "2024-08-16",
                        "priceCurrency": "USD",
                        "1MoPriceChange": -6.90737,
                        "3MoPriceChange": -0.598586,
                        "eventIndicator": "Positive",
                        "ytdPriceChange": 11.2834,
                        "1WeekPriceChange": 2.86621,
                        "52WeekPriceChange": 30.6086,
                        "significantPriceScope": "YTD"
                      }
                    },
                    {
                      "requestId": "AMZN-US",
                      "companyName": "Amazon.com, Inc.",
                      "signalId": "significantPriceChange",
                      "signalName": "10% Price Change",
                      "theme": "Prices",
                      "source": "FactSet",
                      "userRelevanceScore": 0.733,
                      "eventId": "fbdcf03e-3225-44b2-9350-049b2730f118",
                      "eventDate": "2024-08-16",
                      "summary": "On 16 Aug '24, Amazon.com (AMZN-US) was up 16.5% YTD.",
                      "created": "2024-08-21T16:16:48.196Z",
                      "updated": "2024-08-21T16:16:48.196Z",
                      "details": {
                        "price": 177.06,
                        "priceDate": "2024-08-16",
                        "priceCurrency": "USD",
                        "1MoPriceChange": -8.26858,
                        "3MoPriceChange": -3.57785,
                        "eventIndicator": "Positive",
                        "ytdPriceChange": 16.5328,
                        "1WeekPriceChange": 6.15108,
                        "52WeekPriceChange": 31.0876,
                        "significantPriceScope": "YTD"
                      }
                    }
                  ],
                  "meta": {
                    "signalRequestId": "2b8a6969-af32-4878-8124-758715b19baa",
                    "sort": [
                      "-userRelevanceScore"
                    ],
                    "idResolutions": {
                      "tickerRegion": {
                        "MSFT-US": "MSFT-US",
                        "AMZN-US": "AMZN-US"
                      },
                      "regionalPermId": {
                        "MSFT-US": "P8R3C2-R",
                        "AMZN-US": "MCNYYL-R"
                      }
                    },
                    "dateRange": {
                      "created": {
                        "gte": "2024-08-15T00:00:00.000Z",
                        "lte": "2024-08-22T21:40:50.444Z"
                      },
                      "updated": {
                        "gte": "2024-08-15T00:00:00.000Z",
                        "lte": "2024-08-22T21:40:50.444Z"
                      }
                    },
                    "pagination": {
                      "total": 2,
                      "isEstimatedTotal": false
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "API Rate Limit Exceeded",
            "headers": {
              "Api-Version": {
                "$ref": "#/components/headers/Api-Version"
              },
              "Api-Supported-Versions": {
                "$ref": "#/components/headers/Api-Supported-Versions"
              },
              "RateLimit-Limit": {
                "$ref": "#/components/headers/RateLimit-Limit"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/RateLimit-Remaining"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/RateLimit-Reset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rateLimitResponse"
                },
                "example": {
                  "message": "API rate limit exceeded"
                }
              }
            }
          }
        }
      }
    },
    "/events/details/{eventId}": {
      "get": {
        "tags": [
          "Events"
        ],
        "operationId": "getEventDetailById",
        "description": "Fetch Signals event headlines plus all additional event details for a single requested Signal event",
        "parameters": [
          {
            "$ref": "#/components/parameters/eventIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eventDetail"
                },
                "example": {
                  "data": {
                    "requestId": "000Q07-E",
                    "companyName": "Microsoft Corporation",
                    "signalId": "significantPriceChange",
                    "signalName": "10% Price Change",
                    "theme": "Prices",
                    "source": "FactSet",
                    "userRelevanceScore": 0.733,
                    "eventId": "4a21ee8f-9eea-466b-91ff-49946b18a500",
                    "eventDate": "2024-08-16",
                    "summary": "On 16 Aug '24, Microsoft (MSFT-US) was up 11.3% YTD.",
                    "created": "2024-08-21T16:16:51.595Z",
                    "updated": "2024-08-21T16:16:51.595Z",
                    "details": {
                      "price": 418.47,
                      "priceDate": "2024-08-16",
                      "priceCurrency": "USD",
                      "1MoPriceChange": -6.90737,
                      "3MoPriceChange": -0.598586,
                      "eventIndicator": "Positive",
                      "ytdPriceChange": 11.2834,
                      "1WeekPriceChange": 2.86621,
                      "52WeekPriceChange": 30.6086,
                      "significantPriceScope": "YTD"
                    }
                  },
                  "meta": {
                    "signalRequestId": "5a8384b2-3851-4490-bd41-ef8a196dba6e",
                    "idResolutions": {
                      "tickerRegion": {
                        "000Q07-E": "MSFT-US"
                      },
                      "regionalPermId": {
                        "000Q07-E": "P8R3C2-R"
                      }
                    },
                    "pagination": {
                      "total": 0,
                      "isEstimatedTotal": false
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "example": {
                  "message": "Could not find event with id f1f8627e-dea5-4457-aa64-e4c278e22626",
                  "errors": [
                    {
                      "id": "aa03dc88-4806-4ea7-b075-58c2e28657cf",
                      "code": "notFound",
                      "title": "The requested resource is not available.",
                      "detail": "Could not find event with id f1f8627e-dea5-4457-aa64-e4c278e22626"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "API Rate Limit Exceeded",
            "headers": {
              "Api-Version": {
                "$ref": "#/components/headers/Api-Version"
              },
              "Api-Supported-Versions": {
                "$ref": "#/components/headers/Api-Supported-Versions"
              },
              "RateLimit-Limit": {
                "$ref": "#/components/headers/RateLimit-Limit"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/RateLimit-Remaining"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/RateLimit-Reset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rateLimitResponse"
                },
                "example": {
                  "message": "API rate limit exceeded"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "example": {
                  "message": "An error occurred while processing the request.",
                  "errors": [
                    {
                      "code": "genericServerError",
                      "detail": "An error occurred while processing the request.",
                      "id": "b0faf2e1-a7b2-43b0-acd7-3f04ad3c1a33",
                      "title": "An unexpected error happened."
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/events/adaptive-cards": {
      "get": {
        "tags": [
          "Events"
        ],
        "x-factset-sdk-ignore": true,
        "operationId": "getEventAdaptiveCards",
        "description": "Fetch Microsoft's Adaptive Cards, which includes headlines and event details data plus hyperlinks to FactSet reports, based on at least one of the following filtering parameters: `ids`, `portfolios`",
        "parameters": [
          {
            "$ref": "#/components/parameters/createdParam"
          },
          {
            "$ref": "#/components/parameters/updatedParam"
          },
          {
            "$ref": "#/components/parameters/signalIdsParam"
          },
          {
            "$ref": "#/components/parameters/idsParam"
          },
          {
            "$ref": "#/components/parameters/portfoliosParam"
          },
          {
            "$ref": "#/components/parameters/themesParam"
          },
          {
            "$ref": "#/components/parameters/categoriesParam"
          },
          {
            "$ref": "#/components/parameters/relevanceScoreParam"
          },
          {
            "$ref": "#/components/parameters/sortParam"
          },
          {
            "$ref": "#/components/parameters/resolveIdentifiersParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eventAdaptiveCards"
                },
                "example": {
                  "data": [
                    {
                      "requestId": "GOOG-US",
                      "signalId": "debtMaturingBond",
                      "adaptiveCard": {
                        "type": "AdaptiveCard",
                        "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
                        "version": "1.0",
                        "body": [
                          {
                            "text": "Alphabet (GOOGL-US) has one bond totaling USD 2,000.00 million that will be maturing in 24 months",
                            "type": "TextBlock",
                            "wrap": true,
                            "size": "Default",
                            "weight": "Bolder",
                            "fds": {
                              "fdsStyle": "text-4"
                            }
                          },
                          {
                            "type": "Container",
                            "items": [
                              {
                                "type": "Container",
                                "separator": true,
                                "items": [
                                  {
                                    "type": "ColumnSet",
                                    "columns": [
                                      {
                                        "type": "Column",
                                        "width": "stretch",
                                        "items": [
                                          {
                                            "type": "Container",
                                            "items": [
                                              {
                                                "text": "Bond ID",
                                                "type": "TextBlock",
                                                "wrap": true,
                                                "weight": "Bolder",
                                                "fds": {
                                                  "weight": "Default",
                                                  "color": "Light"
                                                }
                                              },
                                              {
                                                "text": "US02079KAC18",
                                                "type": "TextBlock",
                                                "wrap": true,
                                                "spacing": "None"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "Column",
                                        "width": "stretch",
                                        "items": [
                                          {
                                            "type": "Container",
                                            "items": [
                                              {
                                                "text": "Maturity Date",
                                                "type": "TextBlock",
                                                "wrap": true,
                                                "weight": "Bolder",
                                                "fds": {
                                                  "weight": "Default",
                                                  "color": "Light"
                                                }
                                              },
                                              {
                                                "text": "15 Aug '26",
                                                "type": "TextBlock",
                                                "wrap": true,
                                                "spacing": "None"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "Column",
                                        "width": "stretch",
                                        "items": [
                                          {
                                            "type": "Container",
                                            "items": [
                                              {
                                                "text": "Amount",
                                                "type": "TextBlock",
                                                "wrap": true,
                                                "weight": "Bolder",
                                                "fds": {
                                                  "weight": "Default",
                                                  "color": "Light"
                                                }
                                              },
                                              {
                                                "text": "USD 2,000 Million",
                                                "type": "TextBlock",
                                                "wrap": true,
                                                "spacing": "None"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "text": "[Security Overview](https://my.apps.factset.com/navigator/company-security/security-overview/US02079KAC18)",
                                    "type": "TextBlock",
                                    "wrap": true,
                                    "size": "Default",
                                    "weight": "Default",
                                    "fds": {
                                      "fdsStyle": "text-1"
                                    }
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "text": "Source: FactSet",
                            "type": "TextBlock",
                            "wrap": true,
                            "size": "Small",
                            "weight": "Default",
                            "fds": {
                              "fdsStyle": "text-20",
                              "color": "Light"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "requestId": "GOOG-US",
                      "signalId": "debtMaturingBond",
                      "adaptiveCard": {
                        "type": "AdaptiveCard",
                        "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
                        "version": "1.0",
                        "body": [
                          {
                            "text": "Alphabet (GOOGL-US) has two bond totaling USD 2,000.00 million that will be maturing in 24 months",
                            "type": "TextBlock",
                            "wrap": true,
                            "size": "Default",
                            "weight": "Bolder",
                            "fds": {
                              "fdsStyle": "text-4"
                            }
                          },
                          {
                            "type": "Container",
                            "items": [
                              {
                                "type": "Container",
                                "separator": true,
                                "items": [
                                  {
                                    "type": "ColumnSet",
                                    "columns": [
                                      {
                                        "type": "Column",
                                        "width": "stretch",
                                        "items": [
                                          {
                                            "type": "Container",
                                            "items": [
                                              {
                                                "text": "Bond ID",
                                                "type": "TextBlock",
                                                "wrap": true,
                                                "weight": "Bolder",
                                                "fds": {
                                                  "weight": "Default",
                                                  "color": "Light"
                                                }
                                              },
                                              {
                                                "text": "US02079KAC18",
                                                "type": "TextBlock",
                                                "wrap": true,
                                                "spacing": "None"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "Column",
                                        "width": "stretch",
                                        "items": [
                                          {
                                            "type": "Container",
                                            "items": [
                                              {
                                                "text": "Maturity Date",
                                                "type": "TextBlock",
                                                "wrap": true,
                                                "weight": "Bolder",
                                                "fds": {
                                                  "weight": "Default",
                                                  "color": "Light"
                                                }
                                              },
                                              {
                                                "text": "15 Aug '26",
                                                "type": "TextBlock",
                                                "wrap": true,
                                                "spacing": "None"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "Column",
                                        "width": "stretch",
                                        "items": [
                                          {
                                            "type": "Container",
                                            "items": [
                                              {
                                                "text": "Amount",
                                                "type": "TextBlock",
                                                "wrap": true,
                                                "weight": "Bolder",
                                                "fds": {
                                                  "weight": "Default",
                                                  "color": "Light"
                                                }
                                              },
                                              {
                                                "text": "USD 2,000 Million",
                                                "type": "TextBlock",
                                                "wrap": true,
                                                "spacing": "None"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "text": "[Security Overview](https://my.apps.factset.com/navigator/company-security/security-overview/US02079KAC18)",
                                    "type": "TextBlock",
                                    "wrap": true,
                                    "size": "Default",
                                    "weight": "Default",
                                    "fds": {
                                      "fdsStyle": "text-1"
                                    }
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "text": "Source: FactSet",
                            "type": "TextBlock",
                            "wrap": true,
                            "size": "Small",
                            "weight": "Default",
                            "fds": {
                              "fdsStyle": "text-20",
                              "color": "Light"
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "meta": {
                    "signalRequestId": "81024cf7-8b40-4845-ab98-ece81b091f1e",
                    "sort": [
                      "-userRelevanceScore"
                    ],
                    "idResolutions": {
                      "tickerRegion": {
                        "GOOG-US": "GOOG-US"
                      },
                      "regionalPermId": {
                        "GOOG-US": "WFJYTJ-R"
                      }
                    },
                    "dateRange": {
                      "created": {
                        "gte": "2024-08-15T00:00:00.000Z",
                        "lte": "2024-08-22T22:10:58.294Z"
                      },
                      "updated": {
                        "gte": "2024-08-15T00:00:00.000Z",
                        "lte": "2024-08-22T22:10:58.294Z"
                      }
                    },
                    "pagination": {
                      "total": 4,
                      "isEstimatedTotal": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "example": {
                  "message": "A parameter in the request has an invalid value or a required parameter is missing.",
                  "errors": [
                    {
                      "id": "b0faf2e1-a7b2-43b0-acd7-3f04ad3c1a33",
                      "code": "parameterError",
                      "title": "Required param 'exampleParam' was not provided",
                      "detail": "A parameter in the request has an invalid value or a required parameter is missing."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "API Rate Limit Exceeded",
            "headers": {
              "Api-Version": {
                "$ref": "#/components/headers/Api-Version"
              },
              "Api-Supported-Versions": {
                "$ref": "#/components/headers/Api-Supported-Versions"
              },
              "RateLimit-Limit": {
                "$ref": "#/components/headers/RateLimit-Limit"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/RateLimit-Remaining"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/RateLimit-Reset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rateLimitResponse"
                },
                "example": {
                  "message": "API rate limit exceeded"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "example": {
                  "message": "An error occurred while processing the request.",
                  "errors": [
                    {
                      "code": "genericServerError",
                      "detail": "An error occurred while processing the request.",
                      "id": "b0faf2e1-a7b2-43b0-acd7-3f04ad3c1a33",
                      "title": "An unexpected error happened."
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Events"
        ],
        "operationId": "postEventAdaptiveCards",
        "description": "Fetch Microsoft's Adaptive Cards, which includes headlines and event details data plus hyperlinks to FactSet reports, based on at least one of the following filtering parameters: `ids`, `portfolios`",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/eventRequestBody"
              },
              "example": {
                "created": {
                  "gt": "2021-01-01T00:00:00Z",
                  "gte": "2021-01-01T00:00:00Z",
                  "lt": "2021-01-01T00:00:00Z",
                  "lte": "2021-01-01T00:00:00Z"
                },
                "updated": {
                  "gt": "2021-01-01T00:00:00Z",
                  "gte": "2021-01-01T00:00:00Z",
                  "lt": "2021-01-01T00:00:00Z",
                  "lte": "2021-01-01T00:00:00Z"
                },
                "signalIds": "dilutionTrigger,freeCashFlow",
                "ids": "FDS-US,AMZN-US",
                "portfolios": "testPortfolio.ofdb",
                "themes": "testTheme",
                "categories": "testCategory",
                "userRelevanceScore": {
                  "gt": 0,
                  "gte": 0,
                  "lt": 0,
                  "lte": 0
                },
                "sort": "-userRelevanceScore",
                "resolveIdentifiers": true,
                "propertyFilter": {
                  "portfolioUniqueId": "abc-xyz-def"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eventAdaptiveCards"
                },
                "example": {
                  "data": [
                    {
                      "requestId": "GOOG-US",
                      "signalId": "debtMaturingBond",
                      "adaptiveCard": {
                        "type": "AdaptiveCard",
                        "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
                        "version": "1.0",
                        "body": [
                          {
                            "text": "Alphabet (GOOGL-US) has one bond totaling USD 2,000.00 million that will be maturing in 24 months",
                            "type": "TextBlock",
                            "wrap": true,
                            "size": "Default",
                            "weight": "Bolder",
                            "fds": {
                              "fdsStyle": "text-4"
                            }
                          },
                          {
                            "type": "Container",
                            "items": [
                              {
                                "type": "Container",
                                "separator": true,
                                "items": [
                                  {
                                    "type": "ColumnSet",
                                    "columns": [
                                      {
                                        "type": "Column",
                                        "width": "stretch",
                                        "items": [
                                          {
                                            "type": "Container",
                                            "items": [
                                              {
                                                "text": "Bond ID",
                                                "type": "TextBlock",
                                                "wrap": true,
                                                "weight": "Bolder",
                                                "fds": {
                                                  "weight": "Default",
                                                  "color": "Light"
                                                }
                                              },
                                              {
                                                "text": "US02079KAC18",
                                                "type": "TextBlock",
                                                "wrap": true,
                                                "spacing": "None"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "Column",
                                        "width": "stretch",
                                        "items": [
                                          {
                                            "type": "Container",
                                            "items": [
                                              {
                                                "text": "Maturity Date",
                                                "type": "TextBlock",
                                                "wrap": true,
                                                "weight": "Bolder",
                                                "fds": {
                                                  "weight": "Default",
                                                  "color": "Light"
                                                }
                                              },
                                              {
                                                "text": "15 Aug '26",
                                                "type": "TextBlock",
                                                "wrap": true,
                                                "spacing": "None"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "Column",
                                        "width": "stretch",
                                        "items": [
                                          {
                                            "type": "Container",
                                            "items": [
                                              {
                                                "text": "Amount",
                                                "type": "TextBlock",
                                                "wrap": true,
                                                "weight": "Bolder",
                                                "fds": {
                                                  "weight": "Default",
                                                  "color": "Light"
                                                }
                                              },
                                              {
                                                "text": "USD 2,000 Million",
                                                "type": "TextBlock",
                                                "wrap": true,
                                                "spacing": "None"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "text": "[Security Overview](https://my.apps.factset.com/navigator/company-security/security-overview/US02079KAC18)",
                                    "type": "TextBlock",
                                    "wrap": true,
                                    "size": "Default",
                                    "weight": "Default",
                                    "fds": {
                                      "fdsStyle": "text-1"
                                    }
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "text": "Source: FactSet",
                            "type": "TextBlock",
                            "wrap": true,
                            "size": "Small",
                            "weight": "Default",
                            "fds": {
                              "fdsStyle": "text-20",
                              "color": "Light"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "requestId": "GOOG-US",
                      "signalId": "debtMaturingBond",
                      "adaptiveCard": {
                        "type": "AdaptiveCard",
                        "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
                        "version": "1.0",
                        "body": [
                          {
                            "text": "Alphabet (GOOGL-US) has two bond totaling USD 2,000.00 million that will be maturing in 24 months",
                            "type": "TextBlock",
                            "wrap": true,
                            "size": "Default",
                            "weight": "Bolder",
                            "fds": {
                              "fdsStyle": "text-4"
                            }
                          },
                          {
                            "type": "Container",
                            "items": [
                              {
                                "type": "Container",
                                "separator": true,
                                "items": [
                                  {
                                    "type": "ColumnSet",
                                    "columns": [
                                      {
                                        "type": "Column",
                                        "width": "stretch",
                                        "items": [
                                          {
                                            "type": "Container",
                                            "items": [
                                              {
                                                "text": "Bond ID",
                                                "type": "TextBlock",
                                                "wrap": true,
                                                "weight": "Bolder",
                                                "fds": {
                                                  "weight": "Default",
                                                  "color": "Light"
                                                }
                                              },
                                              {
                                                "text": "US02079KAC18",
                                                "type": "TextBlock",
                                                "wrap": true,
                                                "spacing": "None"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "Column",
                                        "width": "stretch",
                                        "items": [
                                          {
                                            "type": "Container",
                                            "items": [
                                              {
                                                "text": "Maturity Date",
                                                "type": "TextBlock",
                                                "wrap": true,
                                                "weight": "Bolder",
                                                "fds": {
                                                  "weight": "Default",
                                                  "color": "Light"
                                                }
                                              },
                                              {
                                                "text": "15 Aug '26",
                                                "type": "TextBlock",
                                                "wrap": true,
                                                "spacing": "None"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "Column",
                                        "width": "stretch",
                                        "items": [
                                          {
                                            "type": "Container",
                                            "items": [
                                              {
                                                "text": "Amount",
                                                "type": "TextBlock",
                                                "wrap": true,
                                                "weight": "Bolder",
                                                "fds": {
                                                  "weight": "Default",
                                                  "color": "Light"
                                                }
                                              },
                                              {
                                                "text": "USD 2,000 Million",
                                                "type": "TextBlock",
                                                "wrap": true,
                                                "spacing": "None"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "text": "[Security Overview](https://my.apps.factset.com/navigator/company-security/security-overview/US02079KAC18)",
                                    "type": "TextBlock",
                                    "wrap": true,
                                    "size": "Default",
                                    "weight": "Default",
                                    "fds": {
                                      "fdsStyle": "text-1"
                                    }
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "text": "Source: FactSet",
                            "type": "TextBlock",
                            "wrap": true,
                            "size": "Small",
                            "weight": "Default",
                            "fds": {
                              "fdsStyle": "text-20",
                              "color": "Light"
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "meta": {
                    "signalRequestId": "81024cf7-8b40-4845-ab98-ece81b091f1e",
                    "sort": [
                      "-userRelevanceScore"
                    ],
                    "idResolutions": {
                      "tickerRegion": {
                        "GOOG-US": "GOOG-US"
                      },
                      "regionalPermId": {
                        "GOOG-US": "WFJYTJ-R"
                      }
                    },
                    "dateRange": {
                      "created": {
                        "gte": "2024-08-15T00:00:00.000Z",
                        "lte": "2024-08-22T22:10:58.294Z"
                      },
                      "updated": {
                        "gte": "2024-08-15T00:00:00.000Z",
                        "lte": "2024-08-22T22:10:58.294Z"
                      }
                    },
                    "pagination": {
                      "total": 4,
                      "isEstimatedTotal": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "example": {
                  "message": "A parameter in the request has an invalid value or a required parameter is missing.",
                  "errors": [
                    {
                      "id": "b0faf2e1-a7b2-43b0-acd7-3f04ad3c1a33",
                      "code": "parameterError",
                      "title": "Required param 'exampleParam' was not provided",
                      "detail": "A parameter in the request has an invalid value or a required parameter is missing."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "API Rate Limit Exceeded",
            "headers": {
              "Api-Version": {
                "$ref": "#/components/headers/Api-Version"
              },
              "Api-Supported-Versions": {
                "$ref": "#/components/headers/Api-Supported-Versions"
              },
              "RateLimit-Limit": {
                "$ref": "#/components/headers/RateLimit-Limit"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/RateLimit-Remaining"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/RateLimit-Reset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rateLimitResponse"
                },
                "example": {
                  "message": "API rate limit exceeded"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "example": {
                  "message": "An error occurred while processing the request.",
                  "errors": [
                    {
                      "code": "genericServerError",
                      "detail": "An error occurred while processing the request.",
                      "id": "b0faf2e1-a7b2-43b0-acd7-3f04ad3c1a33",
                      "title": "An unexpected error happened."
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/events/adaptive-cards/{eventId}": {
      "get": {
        "tags": [
          "Events"
        ],
        "operationId": "getEventAdaptiveCardById",
        "description": "Fetch Microsoft's Adaptive Cards, which includes headlines and event details data plus hyperlinks to FactSet reports, for a single requested Signal event",
        "parameters": [
          {
            "$ref": "#/components/parameters/eventIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eventAdaptiveCard"
                },
                "example": {
                  "data": {
                    "requestId": "0FPWZZ-E",
                    "signalId": "debtMaturingBond",
                    "adaptiveCard": {
                      "type": "AdaptiveCard",
                      "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
                      "version": "1.0",
                      "body": [
                        {
                          "text": "Alphabet (GOOGL-US) has one bond totaling USD 2,000.00 million that will be maturing in 24 months",
                          "type": "TextBlock",
                          "wrap": true,
                          "size": "Default",
                          "weight": "Bolder",
                          "fds": {
                            "fdsStyle": "text-4"
                          }
                        },
                        {
                          "type": "Container",
                          "items": [
                            {
                              "type": "Container",
                              "separator": true,
                              "items": [
                                {
                                  "type": "ColumnSet",
                                  "columns": [
                                    {
                                      "type": "Column",
                                      "width": "stretch",
                                      "items": [
                                        {
                                          "type": "Container",
                                          "items": [
                                            {
                                              "text": "Bond ID",
                                              "type": "TextBlock",
                                              "wrap": true,
                                              "weight": "Bolder",
                                              "fds": {
                                                "weight": "Default",
                                                "color": "Light"
                                              }
                                            },
                                            {
                                              "text": "US02079KAC18",
                                              "type": "TextBlock",
                                              "wrap": true,
                                              "spacing": "None"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Column",
                                      "width": "stretch",
                                      "items": [
                                        {
                                          "type": "Container",
                                          "items": [
                                            {
                                              "text": "Maturity Date",
                                              "type": "TextBlock",
                                              "wrap": true,
                                              "weight": "Bolder",
                                              "fds": {
                                                "weight": "Default",
                                                "color": "Light"
                                              }
                                            },
                                            {
                                              "text": "15 Aug '26",
                                              "type": "TextBlock",
                                              "wrap": true,
                                              "spacing": "None"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Column",
                                      "width": "stretch",
                                      "items": [
                                        {
                                          "type": "Container",
                                          "items": [
                                            {
                                              "text": "Amount",
                                              "type": "TextBlock",
                                              "wrap": true,
                                              "weight": "Bolder",
                                              "fds": {
                                                "weight": "Default",
                                                "color": "Light"
                                              }
                                            },
                                            {
                                              "text": "USD 2,000 Million",
                                              "type": "TextBlock",
                                              "wrap": true,
                                              "spacing": "None"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "text": "[Security Overview](https://my.apps.factset.com/navigator/company-security/security-overview/US02079KAC18)",
                                  "type": "TextBlock",
                                  "wrap": true,
                                  "size": "Default",
                                  "weight": "Default",
                                  "fds": {
                                    "fdsStyle": "text-1"
                                  }
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "text": "Source: FactSet",
                          "type": "TextBlock",
                          "wrap": true,
                          "size": "Small",
                          "weight": "Default",
                          "fds": {
                            "fdsStyle": "text-20",
                            "color": "Light"
                          }
                        }
                      ]
                    }
                  },
                  "meta": {
                    "signalRequestId": "bdf8dcee-fe26-40bf-bb24-f878d0393174",
                    "idResolutions": {
                      "tickerRegion": {
                        "0FPWZZ-E": "GOOGL-US"
                      },
                      "regionalPermId": {
                        "0FPWZZ-E": "HTM0LK-R"
                      }
                    },
                    "pagination": {
                      "total": 0,
                      "isEstimatedTotal": false
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "example": {
                  "message": "Could not find event with id f1f8627e-dea5-4457-aa64-e4c278e22626",
                  "errors": [
                    {
                      "id": "aa03dc88-4806-4ea7-b075-58c2e28657cf",
                      "code": "notFound",
                      "title": "The requested resource is not available.",
                      "detail": "Could not find event with id f1f8627e-dea5-4457-aa64-e4c278e22626"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "API Rate Limit Exceeded",
            "headers": {
              "Api-Version": {
                "$ref": "#/components/headers/Api-Version"
              },
              "Api-Supported-Versions": {
                "$ref": "#/components/headers/Api-Supported-Versions"
              },
              "RateLimit-Limit": {
                "$ref": "#/components/headers/RateLimit-Limit"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/RateLimit-Remaining"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/RateLimit-Reset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rateLimitResponse"
                },
                "example": {
                  "message": "API rate limit exceeded"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "example": {
                  "message": "An error occurred while processing the request.",
                  "errors": [
                    {
                      "code": "genericServerError",
                      "detail": "An error occurred while processing the request.",
                      "id": "b0faf2e1-a7b2-43b0-acd7-3f04ad3c1a33",
                      "title": "An unexpected error happened."
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/events/entities": {
      "get": {
        "tags": [
          "Events"
        ],
        "x-factset-sdk-ignore": true,
        "operationId": "getEventEntities",
        "description": "Fetch FactSet entity IDs for events that match the filtering criteria",
        "parameters": [
          {
            "$ref": "#/components/parameters/createdParam"
          },
          {
            "$ref": "#/components/parameters/updatedParam"
          },
          {
            "$ref": "#/components/parameters/signalIdsParam"
          },
          {
            "$ref": "#/components/parameters/themesParam"
          },
          {
            "$ref": "#/components/parameters/categoriesParam"
          },
          {
            "$ref": "#/components/parameters/relevanceScoreParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eventsEntities"
                },
                "example": {
                  "data": [
                    "002FF1-E",
                    "000CNJ-E",
                    "001HHK-E",
                    "002W5H-E",
                    "003DJY-E",
                    "003B1C-E",
                    "0FPWZZ-E",
                    "06S9GH-E",
                    "0801VG-E",
                    "009RJM-E",
                    "06KNS6-E"
                  ],
                  "meta": {
                    "signalRequestId": "4e36db2d-54cb-4604-b425-170f8f2bc7e3",
                    "dateRange": {
                      "created": {
                        "gte": "2024-08-15T00:00:00.000Z",
                        "lte": "2024-08-22T22:14:58.764Z"
                      },
                      "updated": {
                        "gte": "2024-08-15T00:00:00.000Z",
                        "lte": "2024-08-22T22:14:58.764Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "example": {
                  "message": "A parameter in the request has an invalid value or a required parameter is missing.",
                  "errors": [
                    {
                      "id": "b0faf2e1-a7b2-43b0-acd7-3f04ad3c1a33",
                      "code": "parameterError",
                      "title": "Required param 'exampleParam' was not provided",
                      "detail": "A parameter in the request has an invalid value or a required parameter is missing."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "API Rate Limit Exceeded",
            "headers": {
              "Api-Version": {
                "$ref": "#/components/headers/Api-Version"
              },
              "Api-Supported-Versions": {
                "$ref": "#/components/headers/Api-Supported-Versions"
              },
              "RateLimit-Limit": {
                "$ref": "#/components/headers/RateLimit-Limit"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/RateLimit-Remaining"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/RateLimit-Reset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rateLimitResponse"
                },
                "example": {
                  "message": "API rate limit exceeded"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "example": {
                  "message": "An error occurred while processing the request.",
                  "errors": [
                    {
                      "code": "genericServerError",
                      "detail": "An error occurred while processing the request.",
                      "id": "b0faf2e1-a7b2-43b0-acd7-3f04ad3c1a33",
                      "title": "An unexpected error happened."
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Events"
        ],
        "operationId": "postEventEntities",
        "description": "Fetch FactSet entity IDs for events that match the filtering criteria",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/eventsEntitiesPost"
              },
              "example": {
                "created": {
                  "gt": "2021-01-01T00:00:00Z",
                  "gte": "2021-01-01T00:00:00Z",
                  "lt": "2021-01-01T00:00:00Z",
                  "lte": "2021-01-01T00:00:00Z"
                },
                "updated": {
                  "gt": "2021-01-01T00:00:00Z",
                  "gte": "2021-01-01T00:00:00Z",
                  "lt": "2021-01-01T00:00:00Z",
                  "lte": "2021-01-01T00:00:00Z"
                },
                "signalIds": "dilutionTrigger,freeCashFlow",
                "themes": "testTheme",
                "categories": "testCategory",
                "userRelevanceScore": {
                  "gt": 0,
                  "gte": 0,
                  "lt": 0,
                  "lte": 0
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eventsEntities"
                },
                "example": {
                  "data": [
                    "002FF1-E",
                    "000CNJ-E",
                    "001HHK-E",
                    "002W5H-E",
                    "003DJY-E",
                    "003B1C-E",
                    "0FPWZZ-E",
                    "06S9GH-E",
                    "0801VG-E",
                    "009RJM-E",
                    "06KNS6-E"
                  ],
                  "meta": {
                    "signalRequestId": "4e36db2d-54cb-4604-b425-170f8f2bc7e3",
                    "dateRange": {
                      "created": {
                        "gte": "2024-08-15T00:00:00.000Z",
                        "lte": "2024-08-22T22:14:58.764Z"
                      },
                      "updated": {
                        "gte": "2024-08-15T00:00:00.000Z",
                        "lte": "2024-08-22T22:14:58.764Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "example": {
                  "message": "A parameter in the request has an invalid value or a required parameter is missing.",
                  "errors": [
                    {
                      "id": "b0faf2e1-a7b2-43b0-acd7-3f04ad3c1a33",
                      "code": "parameterError",
                      "title": "Required param 'exampleParam' was not provided",
                      "detail": "A parameter in the request has an invalid value or a required parameter is missing."
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "API Rate Limit Exceeded",
            "headers": {
              "Api-Version": {
                "$ref": "#/components/headers/Api-Version"
              },
              "Api-Supported-Versions": {
                "$ref": "#/components/headers/Api-Supported-Versions"
              },
              "RateLimit-Limit": {
                "$ref": "#/components/headers/RateLimit-Limit"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/RateLimit-Remaining"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/RateLimit-Reset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rateLimitResponse"
                },
                "example": {
                  "message": "API rate limit exceeded"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "example": {
                  "message": "An error occurred while processing the request.",
                  "errors": [
                    {
                      "code": "genericServerError",
                      "detail": "An error occurred while processing the request.",
                      "id": "b0faf2e1-a7b2-43b0-acd7-3f04ad3c1a33",
                      "title": "An unexpected error happened."
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/data-dictionary": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "operationId": "getDataDictionary",
        "description": "Fetch a list of all active signals",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/signalMetaData"
                },
                "example": {
                  "data": [
                    {
                      "id": "debtMaturingBond",
                      "name": "Bonds Maturing in 24 Months",
                      "description": "The company has bonds maturing in 24 months, the Signal does not include Finance companies (RBICS 30)."
                    },
                    {
                      "id": "testSignal",
                      "name": "Test Signal",
                      "description": "Signal description"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "API Rate Limit Exceeded",
            "headers": {
              "Api-Version": {
                "$ref": "#/components/headers/Api-Version"
              },
              "Api-Supported-Versions": {
                "$ref": "#/components/headers/Api-Supported-Versions"
              },
              "RateLimit-Limit": {
                "$ref": "#/components/headers/RateLimit-Limit"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/RateLimit-Remaining"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/RateLimit-Reset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rateLimitResponse"
                },
                "example": {
                  "message": "API rate limit exceeded"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "example": {
                  "message": "An error occurred while processing the request.",
                  "errors": [
                    {
                      "code": "genericServerError",
                      "detail": "An error occurred while processing the request.",
                      "id": "b0faf2e1-a7b2-43b0-acd7-3f04ad3c1a33",
                      "title": "An unexpected error happened."
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/data-dictionary/{signalId}": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "operationId": "getDataDictionaryById",
        "description": "Fetch the metadata and contract for the requested signal",
        "parameters": [
          {
            "$ref": "#/components/parameters/signalIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/signalDefinition"
                },
                "example": {
                  "data": {
                    "signalId": "debtMaturingBond",
                    "description": "The company has bonds maturing in 24 months, the Signal does not include Finance companies (RBICS 30).",
                    "theme": "debtCapitalStructure",
                    "categories": [
                      "credit",
                      "capitalStructure",
                      "debt"
                    ],
                    "contract": {
                      "fields": {
                        "summary": {
                          "description": "Detail message regarding bond maturity",
                          "type": "string"
                        },
                        "eventDate": {
                          "description": "Event date for bond maturity - YYYY-MM-DD",
                          "type": "date"
                        },
                        "shortDetailMessage": {
                          "description": "Short detail message regarding bond maturity",
                          "type": "string",
                          "optional": true
                        },
                        "bondId": {
                          "description": "Bond ID - ISIN else 9-digit CUSIP",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "version": "1.0"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "example": {
                  "message": "Could not find event with id f1f8627e-dea5-4457-aa64-e4c278e22626",
                  "errors": [
                    {
                      "id": "aa03dc88-4806-4ea7-b075-58c2e28657cf",
                      "code": "notFound",
                      "title": "The requested resource is not available.",
                      "detail": "Could not find event with id f1f8627e-dea5-4457-aa64-e4c278e22626"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "API Rate Limit Exceeded",
            "headers": {
              "Api-Version": {
                "$ref": "#/components/headers/Api-Version"
              },
              "Api-Supported-Versions": {
                "$ref": "#/components/headers/Api-Supported-Versions"
              },
              "RateLimit-Limit": {
                "$ref": "#/components/headers/RateLimit-Limit"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/RateLimit-Remaining"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/RateLimit-Reset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rateLimitResponse"
                },
                "example": {
                  "message": "API rate limit exceeded"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "example": {
                  "message": "An error occurred while processing the request.",
                  "errors": [
                    {
                      "code": "genericServerError",
                      "detail": "An error occurred while processing the request.",
                      "id": "b0faf2e1-a7b2-43b0-acd7-3f04ad3c1a33",
                      "title": "An unexpected error happened."
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/themes": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "operationId": "getThemes",
        "description": "Fetch a list of available signal themes",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/signalMetaData"
                },
                "example": {
                  "data": [
                    {
                      "id": "estimates",
                      "name": "Estimates",
                      "description": "Derived from comprehensive consensus- and detail-level estimates and statistics from investment banks and research firms, including segment estimates and company-issued guidance and actuals, as well as commodities and sector-specific data"
                    },
                    {
                      "id": "prices",
                      "name": "Prices",
                      "description": "Derived mainly from pricing and related data (trading volume, price impact and history, etc.)"
                    },
                    {
                      "id": "fundamentals",
                      "name": "Fundamentals",
                      "description": "Derived mainly from historical financial statement content, annual and interim/quarterly data, calculated ratios, and per share data"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "API Rate Limit Exceeded",
            "headers": {
              "Api-Version": {
                "$ref": "#/components/headers/Api-Version"
              },
              "Api-Supported-Versions": {
                "$ref": "#/components/headers/Api-Supported-Versions"
              },
              "RateLimit-Limit": {
                "$ref": "#/components/headers/RateLimit-Limit"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/RateLimit-Remaining"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/RateLimit-Reset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rateLimitResponse"
                },
                "example": {
                  "message": "API rate limit exceeded"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "example": {
                  "message": "An error occurred while processing the request.",
                  "errors": [
                    {
                      "code": "genericServerError",
                      "detail": "An error occurred while processing the request.",
                      "id": "b0faf2e1-a7b2-43b0-acd7-3f04ad3c1a33",
                      "title": "An unexpected error happened."
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/categories": {
      "get": {
        "tags": [
          "Metadata"
        ],
        "operationId": "getCategories",
        "description": "Fetch a list of available signal categories",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/signalMetaData"
                },
                "example": {
                  "data": [
                    {
                      "id": "fundamentals",
                      "name": "fundamentals",
                      "description": "Relevant change in data reported by the company"
                    },
                    {
                      "id": "price",
                      "name": "price",
                      "description": "Events related to the stock price"
                    },
                    {
                      "id": "estimates",
                      "name": "estimates",
                      "description": "Meaningful changes to the estimate profile of a company"
                    },
                    {
                      "id": "debt",
                      "name": "debt",
                      "description": "Awareness of a company's bond exposure and obligations"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "API Rate Limit Exceeded",
            "headers": {
              "Api-Version": {
                "$ref": "#/components/headers/Api-Version"
              },
              "Api-Supported-Versions": {
                "$ref": "#/components/headers/Api-Supported-Versions"
              },
              "RateLimit-Limit": {
                "$ref": "#/components/headers/RateLimit-Limit"
              },
              "RateLimit-Remaining": {
                "$ref": "#/components/headers/RateLimit-Remaining"
              },
              "RateLimit-Reset": {
                "$ref": "#/components/headers/RateLimit-Reset"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rateLimitResponse"
                },
                "example": {
                  "message": "API rate limit exceeded"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                },
                "example": {
                  "message": "An error occurred while processing the request.",
                  "errors": [
                    {
                      "code": "genericServerError",
                      "detail": "An error occurred while processing the request.",
                      "id": "b0faf2e1-a7b2-43b0-acd7-3f04ad3c1a33",
                      "title": "An unexpected error happened."
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "examples": {
      "lowerBound": {
        "value": {
          "gt": "2022-01-01T00:00:00.000Z"
        }
      },
      "upperBound": {
        "value": {
          "lt": "2022-01-02T00:00:00.000Z"
        }
      },
      "bothBounds": {
        "value": {
          "gt": "2022-01-01T00:00:00.000Z",
          "lt": "2022-01-02T00:00:00.000Z"
        }
      }
    },
    "parameters": {
      "createdParam": {
        "name": "created",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/DateTimeInterval"
        },
        "style": "deepObject",
        "explode": true,
        "description": "A date/time (UTC) interval for filtering signal events based on their creation date. Defaults to NOW - 7 days if omitted. Users with limited access can only provide the default or a smaller date window.",
        "examples": {
          "default": {
            "value": {}
          },
          "lowerBound": {
            "$ref": "#/components/examples/lowerBound"
          },
          "upperBound": {
            "$ref": "#/components/examples/upperBound"
          },
          "bothBounds": {
            "$ref": "#/components/examples/bothBounds"
          }
        }
      },
      "updatedParam": {
        "name": "updated",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/DateTimeInterval"
        },
        "style": "deepObject",
        "explode": true,
        "description": "A date/time (UTC) interval for filtering signal events based on their last updated date. Defaults to NOW - 7 days if omitted. Users with limited access can only provide the default or a smaller date window.",
        "examples": {
          "default": {
            "value": {}
          },
          "lowerBound": {
            "$ref": "#/components/examples/lowerBound"
          },
          "upperBound": {
            "$ref": "#/components/examples/upperBound"
          },
          "bothBounds": {
            "$ref": "#/components/examples/bothBounds"
          }
        }
      },
      "signalIdsParam": {
        "name": "signalIds",
        "in": "query",
        "description": "Comma delimited string of signalIds",
        "schema": {
          "type": "string"
        },
        "example": "dilutionTrigger,freeCashFlow"
      },
      "idsParam": {
        "name": "ids",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "description": "Comma delimited string of identifiers. An identifier can be a ticker, FactSet entity id, CUSIP or ISIN. You must provide a list of identifiers either via a ids or a portfolios parameter. If both are provided, only ids filter is used. Users with limited access can use only the ids filter and provide at most 10 ids.",
        "example": "FDS-US,AMZN-US"
      },
      "portfoliosParam": {
        "name": "portfolios",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "description": "Name of a portfolio file stored by FactSet. If the portfolio contains more than 1,000 ids, only the first 1,000 ids are processed (e.g. client:techstocks.ofdb). Please note that using this parameter requires full subscription to Signals API."
      },
      "themesParam": {
        "name": "themes",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "description": "Comma delimited string of theme ids. Full list of signal themes can be viewed at /themes."
      },
      "categoriesParam": {
        "name": "categories",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "description": "Comma delimited string of category ids. Full list of signal categories can be viewed at /categories."
      },
      "relevanceScoreParam": {
        "name": "userRelevanceScore",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/RelevanceScoreRange"
        },
        "style": "deepObject",
        "explode": true,
        "description": "A range for filtering signal events based on their relevancy score.",
        "examples": {
          "lowerBound": {
            "value": {
              "gte": 0
            }
          },
          "upperBound": {
            "value": {
              "lt": 1
            }
          },
          "bothBounds": {
            "value": {
              "gt": 0,
              "lt": 1
            }
          }
        }
      },
      "eventIdParam": {
        "name": "eventId",
        "in": "path",
        "required": true,
        "description": "The UUID of the event to return.",
        "schema": {
          "type": "string",
          "format": "uuid",
          "minimum": 1
        }
      },
      "signalIdParam": {
        "name": "signalId",
        "in": "path",
        "required": true,
        "description": "A single signalId.",
        "schema": {
          "type": "string"
        },
        "example": "dilutionTrigger"
      },
      "sortParam": {
        "name": "sort",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "description": "Comma delimited string of sortable attributes. The sort order for each sort attribute is ascending unless it is prefixed with a minus sign, in which case it is descending. If sort is not provided, the default sort applied is -userRelevanceScore (userRelevanceScore in descending order).",
        "example": "-userRelevanceScore,-eventDate"
      },
      "resolveIdentifiersParam": {
        "name": "resolveIdentifiers",
        "in": "query",
        "schema": {
          "type": "boolean"
        },
        "description": "The api will return resolved identifiers in the meta section of the response by default (true). If the parameter is false, the api will not attempt to resolve the identifiers.",
        "example": true
      }
    },
    "schemas": {
      "errorResponse": {
        "description": "The response returned for an unsuccessful request",
        "type": "object",
        "required": [
          "message"
        ],
        "properties": {
          "message": {
            "type": "string",
            "description": "A short description of the error.",
            "example": "There was an error processing your request. Please try again later."
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorItem"
            },
            "description": "Optional list of errors. e.g. Validation errors for multiple parameters"
          }
        }
      },
      "rateLimitResponse": {
        "title": "Rate Limit Error Object",
        "description": "Error returned if any of the user's rate limit have been reached.",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Detail about the rate limit error.",
            "example": "API rate limit exceeded"
          }
        }
      },
      "errorItem": {
        "description": "Details about an unsuccessful request",
        "type": "object",
        "required": [
          "id",
          "code",
          "title"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier for the error object",
            "format": "uuid"
          },
          "code": {
            "type": "string",
            "description": "Error type",
            "example": "parameterError"
          },
          "title": {
            "type": "string",
            "description": "Condition that caused the error",
            "example": "Invalid type/value"
          },
          "detail": {
            "type": "string",
            "description": "A short description of the error.",
            "example": "Value must be a valid UTC date/time that conforms to ISO 8601 format"
          },
          "source": {
            "type": "object",
            "properties": {
              "parameter": {
                "description": "The source of the error",
                "type": "string"
              }
            }
          }
        }
      },
      "eventMeta": {
        "type": "object",
        "required": [
          "signalRequestId",
          "idResolutions"
        ],
        "properties": {
          "signalRequestId": {
            "type": "string",
            "format": "uuid"
          },
          "idResolutions": {
            "$ref": "#/components/schemas/idResolutionsMeta"
          }
        }
      },
      "eventsMeta": {
        "type": "object",
        "required": [
          "signalRequestId",
          "idResolutions",
          "dateRange"
        ],
        "properties": {
          "signalRequestId": {
            "type": "string",
            "format": "uuid"
          },
          "sort": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "total": {
                "type": "integer"
              },
              "isEstimatedTotal": {
                "type": "boolean"
              }
            }
          },
          "idResolutions": {
            "$ref": "#/components/schemas/idResolutionsMeta"
          },
          "dateRange": {
            "type": "object",
            "properties": {
              "created": {
                "$ref": "#/components/schemas/DateTimeInterval"
              },
              "updated": {
                "$ref": "#/components/schemas/DateTimeInterval"
              }
            }
          }
        }
      },
      "idResolutionsMeta": {
        "description": "Details about resolved identifiers",
        "type": "object",
        "properties": {
          "tickerRegion": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            }
          },
          "regionalPermId": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            }
          }
        }
      },
      "screenMeta": {
        "type": "object",
        "required": [
          "signalRequestId",
          "dateRange"
        ],
        "properties": {
          "signalRequestId": {
            "type": "string",
            "format": "uuid"
          },
          "dateRange": {
            "type": "object",
            "properties": {
              "created": {
                "$ref": "#/components/schemas/DateTimeInterval"
              },
              "updated": {
                "$ref": "#/components/schemas/DateTimeInterval"
              }
            }
          },
          "partial": {
            "type": "object",
            "required": [
              "isPartial",
              "reason"
            ],
            "properties": {
              "isPartial": {
                "type": "boolean",
                "description": "Indicates that some of the matching entities are missing in the response."
              },
              "reason": {
                "type": "string",
                "description": "Describes why the response was sent with an incomplete list of entities."
              }
            }
          }
        }
      },
      "eventHeadlineDataItem": {
        "description": "Return object that includes details about an event headline",
        "type": "object",
        "required": [
          "requestId",
          "signalId",
          "signalName",
          "theme",
          "source",
          "eventId",
          "eventDate",
          "summary",
          "userRelevanceScore"
        ],
        "properties": {
          "requestId": {
            "type": "string",
            "description": "The id that was requested. This can be a ticker, cusip or factset entity id."
          },
          "companyName": {
            "type": "string",
            "description": "Name of the company reported in signal. Omitted if null."
          },
          "signalId": {
            "type": "string",
            "description": "Signal Id for this event. e.g. dilutionTrigger"
          },
          "signalName": {
            "type": "string",
            "description": "Signal Name for this event. e.g. dilutionTrigger"
          },
          "theme": {
            "type": "string",
            "description": "Theme name of the signal for this event. e.g. Debt Capital Structure"
          },
          "source": {
            "type": "string",
            "description": "Primary data provider for the signal this event belongs to. e.g. FactSet, Bitvore"
          },
          "eventId": {
            "type": "string",
            "format": "uuid",
            "description": "A unique id for this event."
          },
          "eventDate": {
            "type": "string",
            "format": "date",
            "description": "The UTC date/time of the event in ISO 8601 format."
          },
          "summary": {
            "type": "string",
            "description": "One sentence summary of the event."
          },
          "userRelevanceScore": {
            "type": "number",
            "format": "float",
            "description": "Relevancy score of this event for the requesting user on a scale of 0 to 1. Higher value indicates more relevancy."
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "Date/Time in UTC the event was first recorded in our data store.",
            "example": "2021-04-26T06:39:40.094Z"
          }
        }
      },
      "eventDetailDataItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/eventHeadlineDataItem"
          },
          {
            "type": "object",
            "required": [
              "created",
              "updated",
              "details"
            ],
            "properties": {
              "created": {
                "type": "string",
                "format": "date-time",
                "description": "Date/Time in UTC the event was first recorded in our data store.",
                "example": "2021-04-26T06:39:40.094Z"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "description": "Date/Time in UTC the event was last updated.",
                "example": "2021-04-26T06:39:40.094Z"
              },
              "details": {
                "type": "object",
                "description": "Signal specific event properties.",
                "additionalProperties": true
              }
            }
          }
        ]
      },
      "eventAdaptiveDataItem": {
        "type": "object",
        "required": [
          "requestId",
          "signalId",
          "adaptiveCard"
        ],
        "properties": {
          "requestId": {
            "type": "string",
            "description": "The id that was requested, ticker, cusip, factset entity id etc.",
            "example": "FDS-US"
          },
          "signalId": {
            "type": "string",
            "description": "Signal Id for this event.",
            "example": "dilutionTrigger"
          },
          "adaptiveCard": {
            "type": "object",
            "description": "A JSON object that's compliant with MS adaptive card schema.",
            "additionalProperties": true
          }
        }
      },
      "eventHeadlines": {
        "type": "object",
        "required": [
          "data",
          "meta"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/eventHeadlineDataItem"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/eventsMeta"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorItem"
            }
          }
        }
      },
      "eventDetail": {
        "description": "Signals event headlines plus all additional event details",
        "type": "object",
        "required": [
          "data",
          "meta"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/eventDetailDataItem"
          },
          "meta": {
            "$ref": "#/components/schemas/eventMeta"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorItem"
            }
          }
        }
      },
      "eventDetails": {
        "description": "Multiple Signals event headlines plus all additional event details",
        "type": "object",
        "required": [
          "data",
          "meta"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/eventDetailDataItem"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/eventMeta"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorItem"
            }
          }
        }
      },
      "eventAdaptiveCard": {
        "description": "Returns Microsoft's Adaptive Cards, which includes headlines and event details data plus hyperlinks to FactSet reports",
        "type": "object",
        "required": [
          "data",
          "meta"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/eventAdaptiveDataItem"
          },
          "meta": {
            "$ref": "#/components/schemas/eventMeta"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorItem"
            }
          }
        }
      },
      "eventAdaptiveCards": {
        "description": "Returns multiple Microsoft's Adaptive Cards, which includes headlines and event details data plus hyperlinks to FactSet reports",
        "type": "object",
        "required": [
          "data",
          "meta"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/eventAdaptiveDataItem"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/eventMeta"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorItem"
            }
          }
        }
      },
      "eventRequestBody": {
        "description": "The POST request's body containing the request criterion",
        "type": "object",
        "properties": {
          "created": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DateTimeInterval"
              }
            ],
            "description": "A date/time (UTC) interval for filtering signal events based on their creation date. Defaults to NOW - 7 days if omitted. Users with limited access can only provide the default or a smaller date window."
          },
          "updated": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DateTimeInterval"
              }
            ],
            "description": "A date/time (UTC) interval for filtering signal events based on their last updated date. Defaults to NOW - 7 days if omitted. Users with limited access can only provide the default or a smaller date window."
          },
          "signalIds": {
            "type": "string",
            "description": "Comma delimited string of signalIds",
            "example": "dilutionTrigger,freeCashFlow"
          },
          "ids": {
            "type": "string",
            "description": "Comma delimited string of identifiers. An identifier can be a ticker, FactSet entity id, CUSIP or ISIN. You must provide a list of identifiers either via a ids or a portfolios parameter. If both are provided, only ids filter is used. Users with limited access can use only the ids filter and provide at most 10 ids.",
            "example": "FDS-US,AMZN-US"
          },
          "portfolios": {
            "type": "string",
            "description": "Name of a portfolio file stored by FactSet. If the portfolio contains more than 1,000 ids, only the first 1,000 ids are processed (e.g. client:techstocks.ofdb). Please note that using this parameter requires full subscription to Signals API."
          },
          "themes": {
            "type": "string",
            "description": "Comma delimited string of theme ids. Full list of signal themes can be viewed at /themes."
          },
          "categories": {
            "type": "string",
            "description": "Comma delimited string of category ids. Full list of signal categories can be viewed at /categories."
          },
          "userRelevanceScore": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RelevanceScoreRange"
              }
            ],
            "description": "A range for filtering signal events based on their relevancy score."
          },
          "sort": {
            "type": "string",
            "description": "Comma delimited string of sortable attributes. The sort order for each sort attribute is ascending unless it is prefixed with a minus sign, in which case it is descending."
          },
          "resolveIdentifiers": {
            "type": "boolean",
            "description": "The api will return resolved identifiers in the meta section of the response by default (true). If the parameter is false, the api will not attempt to resolve the identifiers."
          }
        }
      },
      "eventsEntities": {
        "description": "Contains list of entities that matches the request criterion",
        "type": "object",
        "required": [
          "data",
          "meta"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "The FactSet entity ID of a company with an event",
              "example": "0016YD-E"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/screenMeta"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorItem"
            }
          }
        }
      },
      "eventsEntitiesPost": {
        "description": "Contains list of entities that matches the request criterion",
        "type": "object",
        "properties": {
          "created": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DateTimeInterval"
              }
            ],
            "description": "A date/time (UTC) interval for filtering signal events based on their creation date. Defaults to NOW - 7 days if omitted. Users with limited access can only provide the default or a smaller date window."
          },
          "updated": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DateTimeInterval"
              }
            ],
            "description": "A date/time (UTC) interval for filtering signal events based on their last updated date. Defaults to NOW - 7 days if omitted. Users with limited access can only provide the default or a smaller date window."
          },
          "signalIds": {
            "type": "string",
            "description": "Comma delimited string of signalIds",
            "example": "dilutionTrigger,freeCashFlow"
          },
          "themes": {
            "type": "string",
            "description": "Comma delimited string of theme ids. Full list of signal themes can be viewed at /themes."
          },
          "categories": {
            "type": "string",
            "description": "Comma delimited string of category ids. Full list of signal categories can be viewed at /categories."
          },
          "userRelevanceScore": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RelevanceScoreRange"
              }
            ],
            "description": "A range for filtering signal events based on their relevancy score."
          }
        }
      },
      "signalMetaData": {
        "description": "Metadata about a signal",
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "name",
                "description"
              ],
              "properties": {
                "id": {
                  "description": "UUID of a signal",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the signal",
                  "type": "string"
                },
                "description": {
                  "description": "A description of the signal",
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "signalDefinition": {
        "description": "Detailed information about a given signal",
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "signalId",
              "theme",
              "categories",
              "contract"
            ],
            "properties": {
              "signalId": {
                "description": "UUID of a signal",
                "type": "string"
              },
              "theme": {
                "description": "Theme chosen for the signal request",
                "type": "string"
              },
              "categories": {
                "description": "Categories chosen for the signal request",
                "type": "array",
                "items": {
                  "description": "List of categories chosen",
                  "type": "string"
                }
              },
              "contract": {
                "$ref": "#/components/schemas/contract"
              }
            }
          }
        }
      },
      "contract": {
        "description": "Provides details on a given contract",
        "type": "object",
        "required": [
          "fields",
          "version"
        ],
        "properties": {
          "fields": {
            "$ref": "#/components/schemas/contractFields"
          },
          "version": {
            "description": "Contract version number",
            "type": "string"
          }
        }
      },
      "contractFields": {
        "description": "List of required fields at the top level of each signal",
        "type": "object",
        "required": [
          "summary",
          "eventDate"
        ],
        "properties": {
          "summary": {
            "type": "object",
            "properties": {
              "description": {
                "description": "Description of the event summary",
                "type": "string"
              },
              "type": {
                "description": "Type of the summary",
                "type": "string"
              }
            }
          },
          "eventDate": {
            "type": "object",
            "properties": {
              "description": {
                "description": "Description of the event date",
                "type": "string"
              },
              "type": {
                "description": "Type of the event date",
                "type": "string"
              }
            }
          },
          "additionalProperties": {
            "$ref": "#/components/schemas/contractProperty"
          }
        }
      },
      "contractProperty": {
        "description": "Includes properties that describes each fields in a signal",
        "type": "object",
        "required": [
          "description",
          "type"
        ],
        "properties": {
          "description": {
            "description": "Description of the contract property",
            "type": "string"
          },
          "type": {
            "description": "Type of the contract property",
            "type": "string"
          },
          "optional": {
            "description": "Boolean value representing if the contract property is optional",
            "type": "boolean"
          },
          "items": {
            "type": "object",
            "description": "Information about list of items if type is array",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "description": "Type of the elements contained in the list",
                "type": "string"
              }
            }
          }
        }
      },
      "DateTime": {
        "type": "string",
        "format": "date-time",
        "description": "A date/time string in ISO 8601 format.",
        "example": "2021-01-01T00:00:00Z"
      },
      "RelevanceScoreRange": {
        "type": "object",
        "description": "Represents a valid range for user relevancy score for signal events. The upper bound of the range is represented by the attribute **gt** or **gte**. The lower bound of the range is presented by **lt** or **lte** The range can contain either of the bounds or both. e.g. { \"gt\": 0.4, \"lt\": 0.8 }\n",
        "minProperties": 1,
        "properties": {
          "gt": {
            "type": "number",
            "format": "float",
            "description": "A date/time string in ISO 8601 format. gt stands for greater than"
          },
          "gte": {
            "type": "number",
            "format": "float",
            "description": "A date/time string in ISO 8601 format. gte stands for greater than or equal to"
          },
          "lt": {
            "type": "number",
            "format": "float",
            "description": "A date/time string in ISO 8601 format. lt stands for less than"
          },
          "lte": {
            "type": "number",
            "format": "float",
            "description": "A date/time string in ISO 8601 format. lte stands for less than or equal to"
          }
        }
      },
      "DateTimeInterval": {
        "type": "object",
        "description": "Represents a valid date/time (UTC) interval. The upper bound of the interval is represented by the attribute **gt** or **gte**. The lower bound of the interval is presented by **lt** or **lte** The interval can contain either of the bounds or both. e.g. { \"gt\": \"2021-05-01T00:00:00.000Z\", \"lt\": \"2021-05-08T00:00:00.000Z\" }\n",
        "minProperties": 1,
        "properties": {
          "gt": {
            "$ref": "#/components/schemas/DateTime"
          },
          "gte": {
            "$ref": "#/components/schemas/DateTime"
          },
          "lt": {
            "$ref": "#/components/schemas/DateTime"
          },
          "lte": {
            "$ref": "#/components/schemas/DateTime"
          }
        }
      }
    },
    "headers": {
      "Api-Version": {
        "description": "Full semantic version of the API.",
        "schema": {
          "type": "string",
          "example": "1.0.0"
        }
      },
      "Api-Supported-Versions": {
        "description": "Comma-separated list of supported major versions.",
        "schema": {
          "type": "string",
          "example": "1"
        }
      },
      "RateLimit-Limit": {
        "description": "Total number of requests allowed in a specific time window. The time window is two seconds for regular API users and one week for limited access users.",
        "schema": {
          "type": "integer",
          "example": 5
        }
      },
      "RateLimit-Remaining": {
        "description": "Remaining number of requests in the current time window.",
        "schema": {
          "type": "integer",
          "example": 4
        }
      },
      "RateLimit-Reset": {
        "description": "Time remaining (in seconds) until the quota is reset.",
        "schema": {
          "type": "integer",
          "example": 1000
        }
      }
    },
    "securitySchemes": {
      "FactSetOAuth2": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://auth.factset.com/as/token.oauth2",
            "scopes": {}
          }
        }
      },
      "FactSetApiKey": {
        "type": "http",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "FactSetApiKey": []
    },
    {
      "FactSetOAuth2": []
    }
  ],
  "externalDocs": {
    "description": "API Documentation",
    "url": "https://developer.factset.com/api-catalog/signals-api"
  }
}