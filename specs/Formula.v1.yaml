openapi: 3.0.0
info:
  version: 1.13.0
  title: FactSet Formula API
  contact:
    name: FactSet Research Systems
    email: api@factset.com
    url: https://developer.factset.com/contact
  license:
    name: Apache License, Version 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  description: >

    **FactSet Formula API**


    FactSet's Formula API is a modern, flexible, formula-based API that enables
    users to access FactSet's wide range of financial data and content. The API
    offers two endpoints, one optimized for time-series analysis and one
    designed for cross-sectional analysis, providing users a simplified
    interface into FactSet's expansive offering. By providing two endpoints, it
    allows for the optimization of user workflows, while reducing complexity.


    Leverage the power and flexibility of the Formula API to -
      * Pull data from across most content sets that a user has access to in a single request
      * Include business logic and mathematical operations in request
      * Submit a dynamic universe in both endpoints
      * Return the fsymId to easily combine with other FactSet content / products
      * Set the trading calendar
      * Define custom display names

    **Formula API Request Builder**


    The Formula API Request Builder provides users everything they need to form
    a Formula API request. In the Request Builder, you can select identifiers,
    build a universe expression, select FQL or Screening formulas, easily apply
    business logic and mathematical functions to the FQL or Screening formulas,
    specify optional parameters, and construct a GET or POST request. The
    Request Builder eliminates the need to have previous FQL and Screening
    knowledge and allows you to quickly find your desired data items and form
    the request.


    The Formula API Request Builder can be accessed by navigating to
    [https://developer.factset.com/formula-api-request-builder](https://developer.factset.com/formula-api-request-builder)
    and logging in using your FactSet.net ID. When using the Request Builder to
    construct requests for the one of the Formula API's endpoints, be sure to
    toggle to the correct endpoint at the top of the page.


    **How to Check the Health and Availability of the Formula API**


    Please use the below endpoint to check the health and availability of the
    Formula API. You must be authorized for this API to use the Health endpoint.


    [https://api.factset.com/formula-api/health](https://api.factset.com/formula-api/health)


    **How to Programmatically Download API Specification File**


    You can download the FactSet Formula API Specification File in .yaml. using
    the "Download Spec" button to the right of the version number. This
    specification can then be used for Codegen to create your own SDKs.
externalDocs:
  description: API Documentation
  url: https://developer.factset.com/api-catalog/formula-api
servers:
  - description: Production
    url: https://api.factset.com/formula-api/v1
security:
  - FactSetApiKey: []
  - FactSetOAuth2: []
tags:
  - name: Time-Series
  - name: Cross-Sectional
  - name: Batch Processing
x-factset-sdk-has-main-example: true
paths:
  /time-series:
    get:
      x-factset-sdk-ignore: true
      summary: >-
        Retrieve data items (FQL formulas) for a list of identifiers or defined
        universe.
      description: >
        The `/time-series` endpoint is closely aligned with FactSet's powerful
        data retrieval language **FactSet Query Language (FQL)** which is
        optimized for time-series analysis. FQL can also perform sophisticated
        statistical, mathematical, logical, and other complex operations on the
        data.

          This endpoint has a unique **TIMESERIES** data object that pairs the requested data with FactSet provided dates. This helps reduce the need for additional data requests and reduces the work required by users.

        The `/time-series` endpoint supports Long Running asynchronous requests
        up to **30 minutes** via the `batch` parameter. *This feature is
        available to Individual Users subscribed to the Performance Package and
        Performance Package Plus Performance Tiers and all Production Users. If
        you are unsure which Performance Tier you are subscribed to or you would
        like to gain access to the batch capabilities, please contact your
        FactSet Account Team or "Report Issue" above and our support teams can
        assist.*
      tags:
        - Time-Series
      operationId: getTimeSeriesData
      parameters:
        - $ref: '#/components/parameters/ids'
        - $ref: '#/components/parameters/symbolType'
        - $ref: '#/components/parameters/universe'
        - $ref: '#/components/parameters/universeType_time_series'
        - $ref: '#/components/parameters/universeExclusion'
        - $ref: '#/components/parameters/formulas_time_series'
        - $ref: '#/components/parameters/calendar_time_series'
        - $ref: '#/components/parameters/fsymId_time_series'
        - $ref: '#/components/parameters/displayName_time_series'
        - $ref: '#/components/parameters/flatten_time_series'
        - $ref: '#/components/parameters/dates_time_series'
        - $ref: '#/components/parameters/batch'
      responses:
        '200':
          description: >-
            Gets an array of `Response Objects` for a list of IDs and FQL
            formulas.
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
            X-RateLimit-Limit-second:
              $ref: '#/components/headers/X-RateLimit-Limit-second'
            X-RateLimit-Remaining-second:
              $ref: '#/components/headers/X-RateLimit-Remaining-second'
            X-RateLimit-Limit-day:
              $ref: '#/components/headers/X-RateLimit-Limit-day'
            X-RateLimit-Remaining-day:
              $ref: '#/components/headers/X-RateLimit-Remaining-day'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeSeriesResponse'
              examples:
                Single Id and Single Data Item:
                  $ref: '#/components/examples/time-series-singleId-singleItem'
                Single Id and Single Data Item with fsymId=Y:
                  $ref: '#/components/examples/time-series-singleId-singleItem-fsymId'
                Multiple Ids and Multiple Data Items with SEVENDAY Calendar:
                  $ref: '#/components/examples/time-series-multipleId-multipleItem'
                Multiple Ids and Multiple Data Items with flatten=Y:
                  $ref: >-
                    #/components/examples/time-series-multipleId-multipleItem-flatten
                Multiple Ids and Multiple Calculated Data Items:
                  $ref: >-
                    #/components/examples/time-series-multipleId-multipleCalculatedItem
                Small Universe and Single Data Item:
                  $ref: '#/components/examples/time-series-smallUniv-singleItem'
                Debt Universe and Multiple Data Items:
                  $ref: '#/components/examples/time-series-debtUniv-multipleItem'
        '202':
          description: Batch request has been accepted.
          headers:
            Location:
              description: URL to poll for status of batch request.
              schema:
                type: string
                example: >-
                  https://api.factset.com/formula-api/v1/batch-status?id=d5ec1564-08d4-11ef-bdfc-9e836b3b5a9a
            X-FactSet-Api-Units-Limit:
              $ref: '#/components/headers/X-FactSet-Api-Units-Limit'
            X-FactSet-Api-Units-Remaining:
              $ref: '#/components/headers/X-FactSet-Api-Units-Remaining'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
              examples:
                Batch Request Accepted:
                  $ref: '#/components/examples/BatchStatusAcceptedResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '406':
          $ref: '#/components/responses/406'
        '408':
          $ref: '#/components/responses/408'
        '413':
          $ref: '#/components/responses/413'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
      x-factset-different-success-responses: true
    post:
      x-factset-sdk-main-example: true
      summary: >-
        Retrieve data items (FQL formulas) for a list of identifiers or defined
        universe.
      description: >
        The `/time-series` endpoint is closely aligned with FactSet's powerful
        data retrieval language **FactSet Query Language (FQL)** which is
        optimized for time-series analysis. FQL can also perform sophisticated
        statistical, mathematical, logical, and other complex operations on the
        data.

          This endpoint has a unique **TIMESERIES** data object that pairs the requested data with FactSet provided dates. This helps reduce the need for additional data requests and reduces the work required by users.

        The `/time-series` endpoint supports Long Running asynchronous requests
        up to **30 minutes** via the `batch` parameter. *This feature is
        available to Individual Users subscribed to the Performance Package and
        Performance Package Plus Performance Tiers and all Production Users. If
        you are unsure which Performance Tier you are subscribed to or you would
        like to gain access to the batch capabilities, please contact your
        FactSet Account Team or "Report Issue" above and our support teams can
        assist.*
      tags:
        - Time-Series
      operationId: getTimeSeriesDataForList
      responses:
        '200':
          description: >-
            Gets an array of `Response Objects` for a list of IDs and FQL
            formulas.
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
            X-RateLimit-Limit-second:
              $ref: '#/components/headers/X-RateLimit-Limit-second'
            X-RateLimit-Remaining-second:
              $ref: '#/components/headers/X-RateLimit-Remaining-second'
            X-RateLimit-Limit-day:
              $ref: '#/components/headers/X-RateLimit-Limit-day'
            X-RateLimit-Remaining-day:
              $ref: '#/components/headers/X-RateLimit-Remaining-day'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeSeriesResponse'
              examples:
                Single Id and Single Data Item:
                  $ref: '#/components/examples/time-series-singleId-singleItem'
                Single Id and Single Data Item with fsymId=Y:
                  $ref: '#/components/examples/time-series-singleId-singleItem-fsymId'
                Multiple Ids and Multiple Data Items with SEVENDAY Calendar:
                  $ref: '#/components/examples/time-series-multipleId-multipleItem'
                Multiple Ids and Multiple Data Items with flatten=Y:
                  $ref: >-
                    #/components/examples/time-series-multipleId-multipleItem-flatten
                Multiple Ids and Multiple Calculated Data Items:
                  $ref: >-
                    #/components/examples/time-series-multipleId-multipleCalculatedItem
                Small Universe and Single Data Item:
                  $ref: '#/components/examples/time-series-smallUniv-singleItem'
                Debt Universe and Multiple Data Items:
                  $ref: '#/components/examples/time-series-debtUniv-multipleItem'
        '202':
          description: Batch request has been accepted.
          headers:
            Location:
              description: URL to poll for status of batch request.
              schema:
                type: string
                example: >-
                  https://api.factset.com/formula-api/v1/batch-status?id=d5ec1564-08d4-11ef-bdfc-9e836b3b5a9a
            X-FactSet-Api-Units-Limit:
              $ref: '#/components/headers/X-FactSet-Api-Units-Limit'
            X-FactSet-Api-Units-Remaining:
              $ref: '#/components/headers/X-FactSet-Api-Units-Remaining'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
              examples:
                Batch Request Accepted:
                  $ref: '#/components/examples/BatchStatusAcceptedResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '406':
          $ref: '#/components/responses/406'
        '408':
          $ref: '#/components/responses/408'
        '413':
          $ref: '#/components/responses/413'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
      requestBody:
        $ref: '#/components/requestBodies/time-series-postBody'
      x-factset-different-success-responses: true
  /cross-sectional:
    get:
      x-factset-sdk-ignore: true
      summary: >-
        Retrieve data items (Screening formulas) for a list of identifiers or
        defined universe.
      description: >
        The `/cross-sectional` endpoint is closely aligned with FactSet's
        powerful data retrieval **Screening language** which is optimized for
        analysis of data items at single point in time for different entities
        and is extremely efficient for large universes.



        The `/cross-sectional` endpoint supports Long Running asynchronous
        requests up to **30 minutes** via the `batch` parameter. *This feature
        is available to Individual Users subscribed to the Performance Package
        and Performance Package Plus Performance Tiers and all Production Users.
        If you are unsure which Performance Tier you are subscribed to or you
        would like to gain access to the batch capabilities, please contact your
        FactSet Account Team or "Report Issue" above and our support teams can
        assist.*


        ***


        ### Iterated Cross-Sectional Functionality



        This endpoint supports the ability to automatically iterate through
        different cross sections over time. The **Iterated Cross-Sectional
        Functionality (ICSF)** expands the Cross-Sectional endpoint to support
        retrieving data items for *multiple dates*, allowing users to take
        advantage of the Screening engine's efficiency even when history is
        required. 



        Use the parameters `startDate`, `endDate`, and `frequency` in the
        Cross-Sectional endpoint to provide your desired dates. Specify "0" in
        date argument of the Screening formulas provided in the formulas
        parameter and/or the universe parameter. Lastly, the Iterated
        Cross-Sectional Functionality is required to run as a `batch` request.
        Therefore, the batch parameter must be set to "Y". 



        Access to backtesting and batch functionality is required to leverage
        the Iterated Cross-Sectional Functionality. 


        **When to use ICSF:**


        The ICSF can offer better performance than Time-Series requests when the
        date range is relatively small, and so it is recommended to use ICSF if
        the number of IDs requested is greater than the number of dates. If the
        number of dates is greater than the number of IDs in the request, it is
        recommended to use Time-Series.


        *Note: This is a general rule of thumb and performance may vary
        depending on the formulas in use.*
      tags:
        - Cross-Sectional
      operationId: getCrossSectionalData
      parameters:
        - $ref: '#/components/parameters/ids'
        - $ref: '#/components/parameters/symbolType'
        - $ref: '#/components/parameters/universe'
        - $ref: '#/components/parameters/universeType_cross_sectional'
        - $ref: '#/components/parameters/universeExclusion'
        - $ref: '#/components/parameters/formulas_cross_sectional'
        - $ref: '#/components/parameters/backTestDate'
        - $ref: '#/components/parameters/calendar_cross_sectional'
        - $ref: '#/components/parameters/fsymId_cross_sectional'
        - $ref: '#/components/parameters/displayName_cross_sectional'
        - $ref: '#/components/parameters/flatten_cross_sectional'
        - $ref: '#/components/parameters/batch'
        - $ref: '#/components/parameters/startDate'
        - $ref: '#/components/parameters/endDate'
        - $ref: '#/components/parameters/frequency'
      responses:
        '200':
          description: >-
            Gets an array of `Response Objects` for a list of IDs and Screening
            formulas.
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
            X-RateLimit-Limit-second:
              $ref: '#/components/headers/X-RateLimit-Limit-second'
            X-RateLimit-Remaining-second:
              $ref: '#/components/headers/X-RateLimit-Remaining-second'
            X-RateLimit-Limit-day:
              $ref: '#/components/headers/X-RateLimit-Limit-day'
            X-RateLimit-Remaining-day:
              $ref: '#/components/headers/X-RateLimit-Remaining-day'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrossSectionalResponse'
              examples:
                Single Equity Id and Single Equity Data Item:
                  $ref: '#/components/examples/cross-sectional-singleId-singleItem'
                Single Equity Id and Single Equity Data Item with fsymId=Y:
                  $ref: >-
                    #/components/examples/cross-sectional-singleId-singleItem-fsymId
                Multiple Equity Ids and Multiple Equity Data Items:
                  $ref: >-
                    #/components/examples/cross-sectional-multipleId-multipleItem
                Multiple Equity Ids and Multiple Equity Data Items with flatten=Y:
                  $ref: >-
                    #/components/examples/cross-sectional-multipleId-multipleItem-flatten
                Multiple Equity Ids and Multiple Calculated Equity Data Items:
                  $ref: >-
                    #/components/examples/cross-sectional-multipleId-multipleCalculatedItem
                Multiple Fixed Income Ids and Multiple Fixed Income Data Items:
                  $ref: >-
                    #/components/examples/cross-sectional-multipleFixedIncomeId-multipleItem
                Small Equity Universe and Single Equity Data Item:
                  $ref: '#/components/examples/cross-sectional-smallUniv-singleItem'
                Debt Universe and Multiple Debt Data Items:
                  $ref: '#/components/examples/cross-sectional-debtUniv-multipleItem'
                Single ID and Multiple dates using ICSF with flatten = N:
                  $ref: >-
                    #/components/examples/cross-sectional-ICSF-singleItem-nonflatten
                Multiple IDs and Multiple dates using ICSF with flatten = Y:
                  $ref: >-
                    #/components/examples/cross-sectional-ICSF-multipleItem-Flatten
        '202':
          description: Batch request has been accepted.
          headers:
            Location:
              description: URL to poll for status of batch request.
              schema:
                type: string
                example: >-
                  https://api.factset.com/formula-api/v1/batch-status?id=d5ec1564-08d4-11ef-bdfc-9e836b3b5a9a
            X-FactSet-Api-Units-Limit:
              $ref: '#/components/headers/X-FactSet-Api-Units-Limit'
            X-FactSet-Api-Units-Remaining:
              $ref: '#/components/headers/X-FactSet-Api-Units-Remaining'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
              examples:
                Batch Request Accepted:
                  $ref: '#/components/examples/BatchStatusAcceptedResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '406':
          $ref: '#/components/responses/406'
        '408':
          $ref: '#/components/responses/408'
        '413':
          $ref: '#/components/responses/413'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
      x-factset-different-success-responses: true
    post:
      summary: >-
        Retrieve data items (Screening formulas) for a list of identifiers or
        defined universe.
      description: >
        The `/cross-sectional` endpoint is closely aligned with FactSet's
        powerful data retrieval **Screening language** which is optimized for
        analysis of data items at single point in time for different entities
        and is extremely efficient for large universes.



        The `/cross-sectional` endpoint supports Long Running asynchronous
        requests up to **30 minutes** via the `batch` parameter. *This feature
        is available to Individual Users subscribed to the Performance Package
        and Performance Package Plus Performance Tiers and all Production Users.
        If you are unsure which Performance Tier you are subscribed to or you
        would like to gain access to the batch capabilities, please contact your
        FactSet Account Team or "Report Issue" above and our support teams can
        assist.*


        ***


        ### Iterated Cross-Sectional Functionality



        This endpoint supports the ability to automatically iterate through
        different cross sections over time. The **Iterated Cross-Sectional
        Functionality (ICSF)** expands the Cross-Sectional endpoint to support
        retrieving data items for *multiple dates*, allowing users to take
        advantage of the Screening engine's efficiency even when history is
        required. 



        Use the parameters `startDate`, `endDate`, and `frequency` in the
        Cross-Sectional endpoint to provide your desired dates. Specify "0" in
        date argument of the Screening formulas provided in the formulas
        parameter and/or the universe parameter. Lastly, the Iterated
        Cross-Sectional Functionality is required to run as a `batch` request.
        Therefore, the batch parameter must be set to "Y". 



        Access to backtesting and batch functionality is required to leverage
        the Iterated Cross-Sectional Functionality. 


        **When to use ICSF:**


        The ICSF can offer better performance than Time-Series requests when the
        date range is relatively small, and so it is recommended to use ICSF if
        the number of IDs requested is greater than the number of dates. If the
        number of dates is greater than the number of IDs in the request, it is
        recommended to use Time-Series. 


        *Note: This is a general rule of thumb and performance may vary
        depending on the formulas in use.*
      tags:
        - Cross-Sectional
      operationId: getCrossSectionalDataForList
      responses:
        '200':
          description: >-
            Gets an array of `Response Objects` for a list of IDs and Screening
            formulas.
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
            X-RateLimit-Limit-second:
              $ref: '#/components/headers/X-RateLimit-Limit-second'
            X-RateLimit-Remaining-second:
              $ref: '#/components/headers/X-RateLimit-Remaining-second'
            X-RateLimit-Limit-day:
              $ref: '#/components/headers/X-RateLimit-Limit-day'
            X-RateLimit-Remaining-day:
              $ref: '#/components/headers/X-RateLimit-Remaining-day'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrossSectionalResponse'
              examples:
                Single Equity Id and Single Equity Data Item:
                  $ref: '#/components/examples/cross-sectional-singleId-singleItem'
                Single Equity Id and Single Equity Data Item with fsymId=Y:
                  $ref: >-
                    #/components/examples/cross-sectional-singleId-singleItem-fsymId
                Multiple Equity Ids and Multiple Equity Data Items:
                  $ref: >-
                    #/components/examples/cross-sectional-multipleId-multipleItem
                Multiple Equity Ids and Multiple Equity Data Items with flatten=Y:
                  $ref: >-
                    #/components/examples/cross-sectional-multipleId-multipleItem-flatten
                Multiple Equity Ids and Multiple Calculated Equity Data Items:
                  $ref: >-
                    #/components/examples/cross-sectional-multipleId-multipleCalculatedItem
                Multiple Fixed Income Ids and Multiple Fixed Income Data Items:
                  $ref: >-
                    #/components/examples/cross-sectional-multipleFixedIncomeId-multipleItem
                Small Equity Universe and Single Equity Data Item:
                  $ref: '#/components/examples/cross-sectional-smallUniv-singleItem'
                Debt Universe and Multiple Debt Data Items:
                  $ref: '#/components/examples/cross-sectional-debtUniv-multipleItem'
                Single ID and Multiple dates using ICSF with flatten = N:
                  $ref: >-
                    #/components/examples/cross-sectional-ICSF-singleItem-nonflatten
                Multiple IDs and Multiple dates using ICSF with flatten = Y:
                  $ref: >-
                    #/components/examples/cross-sectional-ICSF-multipleItem-Flatten
        '202':
          description: Batch request has been accepted.
          headers:
            Location:
              description: URL to poll for status of batch request.
              schema:
                type: string
                example: >-
                  https://api.factset.com/formula-api/v1/batch-status?id=d5ec1564-08d4-11ef-bdfc-9e836b3b5a9a
            X-FactSet-Api-Units-Limit:
              $ref: '#/components/headers/X-FactSet-Api-Units-Limit'
            X-FactSet-Api-Units-Remaining:
              $ref: '#/components/headers/X-FactSet-Api-Units-Remaining'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
              examples:
                Batch Request Accepted:
                  $ref: '#/components/examples/BatchStatusAcceptedResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '406':
          $ref: '#/components/responses/406'
        '408':
          $ref: '#/components/responses/408'
        '413':
          $ref: '#/components/responses/413'
        '415':
          $ref: '#/components/responses/415'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
      requestBody:
        $ref: '#/components/requestBodies/cross-sectional-postBody'
      x-factset-different-success-responses: true
  /batch-status:
    get:
      summary: Returns the status for a Batch Request
      description: >
        Return the status for the underlying batch request that is specified by
        the id.

          The Formula API supports Long Running asynchronous requests up to **30 minutes** via the `batch` parameter for both the `/time-series` and `/cross-sectional` endpoint.

          *This feature is available to Individual Users subscribed to the Performance Package and Performance Package Plus Performance Tiers and all Production Users. If you are unsure which Performance Tier you are subscribed to or you would like to gain access to the batch capabilities, please contact your FactSet Account Team or "Report Issue" above and our support teams can assist.*
      tags:
        - Batch Processing
      operationId: getBatchStatus
      parameters:
        - $ref: '#/components/parameters/batchId'
      responses:
        '201':
          description: Batch Request has been completed and the response has been created.
          headers:
            Location:
              description: URL to pick up results of batch request.
              schema:
                type: string
                example: >-
                  https://api.factset.com/formula-api/v1/batch-result?id=d5ec1564-08d4-11ef-bdfc-9e836b3b5a9a
            X-FactSet-Api-Units-Limit:
              $ref: '#/components/headers/X-FactSet-Api-Units-Limit'
            X-FactSet-Api-Units-Remaining:
              $ref: '#/components/headers/X-FactSet-Api-Units-Remaining'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
              examples:
                Batch Status Done:
                  $ref: '#/components/examples/BatchStatusDoneResponse'
        '202':
          description: Batch Request has not finished and the result has NOT been created.
          headers:
            Location:
              description: URL to poll for status of batch request.
              schema:
                type: string
                example: >-
                  https://api.factset.com/formula-api/v1/batch-status?id=d5ec1564-08d4-11ef-bdfc-9e836b3b5a9a
            X-FactSet-Api-Units-Limit:
              $ref: '#/components/headers/X-FactSet-Api-Units-Limit'
            X-FactSet-Api-Units-Remaining:
              $ref: '#/components/headers/X-FactSet-Api-Units-Remaining'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
              examples:
                Batch Status Queued:
                  $ref: '#/components/examples/BatchStatusQueuedResponse'
                Batch Status Executing:
                  $ref: '#/components/examples/BatchStatusExecutingResponse'
                Batch Status Failed - Timeout:
                  $ref: '#/components/examples/BatchStatusFailedResponseTimeout'
                Batch Status Failed - Memory Limit:
                  $ref: '#/components/examples/BatchStatusFailedResponseMemoryLimit'
                Batch Status Failed - Other:
                  $ref: '#/components/examples/BatchStatusFailedResponseOther'
                Batch Status Canceled:
                  $ref: '#/components/examples/BatchStatusCanceled'
        '404':
          description: Not Found
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              example:
                id: 5EFCCA8940CAEB6E
                code: batchRequestNotFound
                title: The Batch Request was not found. It has probably expired.
                timeStamp: '2019-11-01 11:09:41.918'
      deprecated: false
    post:
      x-factset-sdk-ignore: true
      summary: Returns the status for a Batch Request
      description: >
        Return the status for the underlying batch request that is specified by
        the id.

          The Formula API supports Long Running asynchronous requests up to **30 minutes** via the `batch` parameter for both the `/time-series` and `/cross-sectional` endpoint.

          *This feature is available to Individual Users subscribed to the Performance Package and Performance Package Plus Performance Tiers and all Production Users. If you are unsure which Performance Tier you are subscribed to or you would like to gain access to the batch capabilities, please contact your FactSet Account Team or "Report Issue" above and our support teams can assist.*
      tags:
        - Batch Processing
      operationId: getBatchStatusWithPost
      responses:
        '201':
          description: Batch Request has been completed and the response has been created.
          headers:
            Location:
              description: URL to pick up results of batch request.
              schema:
                type: string
                example: >-
                  https://api.factset.com/formula-api/v1/batch-result?id=d5ec1564-08d4-11ef-bdfc-9e836b3b5a9a
            X-FactSet-Api-Units-Limit:
              $ref: '#/components/headers/X-FactSet-Api-Units-Limit'
            X-FactSet-Api-Units-Remaining:
              $ref: '#/components/headers/X-FactSet-Api-Units-Remaining'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
              examples:
                Batch Status Done:
                  $ref: '#/components/examples/BatchStatusDoneResponse'
        '202':
          description: Batch Request has not finished and the result has NOT been created.
          headers:
            Location:
              description: URL to poll for status of batch request.
              schema:
                type: string
                example: >-
                  https://api.factset.com/formula-api/v1/batch-status?id=d5ec1564-08d4-11ef-bdfc-9e836b3b5a9a
            X-FactSet-Api-Units-Limit:
              $ref: '#/components/headers/X-FactSet-Api-Units-Limit'
            X-FactSet-Api-Units-Remaining:
              $ref: '#/components/headers/X-FactSet-Api-Units-Remaining'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
              examples:
                Batch Status Queued:
                  $ref: '#/components/examples/BatchStatusQueuedResponse'
                Batch Status Executing:
                  $ref: '#/components/examples/BatchStatusExecutingResponse'
                Batch Status Failed - Timeout:
                  $ref: '#/components/examples/BatchStatusFailedResponseTimeout'
                Batch Status Failed - Memory Limit:
                  $ref: '#/components/examples/BatchStatusFailedResponseMemoryLimit'
                Batch Status Failed - Other:
                  $ref: '#/components/examples/BatchStatusFailedResponseOther'
                Batch Status Canceled:
                  $ref: '#/components/examples/BatchStatusCanceled'
        '404':
          description: Not Found
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              example:
                id: 5EFCCA8940CAEB6E
                code: batchRequestNotFound
                title: The Batch Request was not found. It has probably expired.
                timeStamp: '2019-11-01 11:09:41.918'
      deprecated: false
      requestBody:
        $ref: '#/components/requestBodies/batch-status-postBody'
  /batch-result:
    get:
      summary: Returns the response for a Batch Request
      description: >
        Returns the response data for the underlying batch request that is
        specified by the id.

          The Formula API supports Long Running asynchronous requests up to **30 minutes** via the `batch` parameter for both the `/time-series` and `/cross-sectional` endpoint. All batch requests expire within 48 hours of completion.

          *This feature is available to Individual Users subscribed to the Performance Package and Performance Package Plus Performance Tiers and all Production Users. If you are unsure which Performance Tier you are subscribed to or you would like to gain access to the batch capabilities, please contact your FactSet Account Team or "Report Issue" above and our support teams can assist.*
      tags:
        - Batch Processing
      operationId: getBatchData
      parameters:
        - $ref: '#/components/parameters/batchId'
      responses:
        '200':
          description: >-
            Request Response Object when batch request has completed and
            response is created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDataResponse'
              examples:
                Time-Series Single Id and Single Data Item:
                  $ref: '#/components/examples/time-series-singleId-singleItem'
                Cross-Sectional Single Id and Single Data Item:
                  $ref: '#/components/examples/cross-sectional-singleId-singleItem'
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
            X-RateLimit-Limit-second:
              $ref: '#/components/headers/X-RateLimit-Limit-second'
            X-RateLimit-Remaining-second:
              $ref: '#/components/headers/X-RateLimit-Remaining-second'
            X-RateLimit-Limit-day:
              $ref: '#/components/headers/X-RateLimit-Limit-day'
            X-RateLimit-Remaining-day:
              $ref: '#/components/headers/X-RateLimit-Remaining-day'
            X-FactSet-Api-Units-Limit:
              $ref: '#/components/headers/X-FactSet-Api-Units-Limit'
            X-FactSet-Api-Units-Remaining:
              $ref: '#/components/headers/X-FactSet-Api-Units-Remaining'
        '202':
          description: Batch Request has not finished and the result has NOT been created.
          headers:
            Location:
              description: URL to poll for status of batch request.
              schema:
                type: string
                example: >-
                  https://api.factset.com/formula-api/v1/batch-status?id=d5ec1564-08d4-11ef-bdfc-9e836b3b5a9a
            X-FactSet-Api-Units-Limit:
              $ref: '#/components/headers/X-FactSet-Api-Units-Limit'
            X-FactSet-Api-Units-Remaining:
              $ref: '#/components/headers/X-FactSet-Api-Units-Remaining'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
              examples:
                Batch Request Queued:
                  $ref: '#/components/examples/BatchResultQueuedResponse'
                Batch Request Executing:
                  $ref: '#/components/examples/BatchResultExecutingResponse'
        '404':
          description: Not Found
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              example:
                id: 5EFCCA8940CAEB6E
                code: batchRequestNotFound
                title: The Batch Request was not found. It has probably expired.
                timeStamp: '2019-11-01 11:09:41.918'
      deprecated: false
      x-factset-different-success-responses: true
    post:
      summary: Returns the response for a Batch Request
      description: >
        Returns the response data for the underlying batch request that is
        specified by the id.

          The Formula API supports Long Running asynchronous requests up to **30 minutes** via the `batch` parameter for both the `/time-series` and `/cross-sectional` endpoint. All batch requests expire within 48 hours of completion.

          *This feature is available to Individual Users subscribed to the Performance Package and Performance Package Plus Performance Tiers and all Production Users. If you are unsure which Performance Tier you are subscribed to or you would like to gain access to the batch capabilities, please contact your FactSet Account Team or "Report Issue" above and our support teams can assist.*
      tags:
        - Batch Processing
      operationId: getBatchDataWithPost
      responses:
        '200':
          description: >-
            Request Response Object when batch request has completed and
            response is created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDataResponse'
              examples:
                Time-Series Single Id and Single Data Item:
                  $ref: '#/components/examples/time-series-singleId-singleItem'
                Cross-Sectional Single Id and Single Data Item:
                  $ref: '#/components/examples/cross-sectional-singleId-singleItem'
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
            X-RateLimit-Limit-second:
              $ref: '#/components/headers/X-RateLimit-Limit-second'
            X-RateLimit-Remaining-second:
              $ref: '#/components/headers/X-RateLimit-Remaining-second'
            X-RateLimit-Limit-day:
              $ref: '#/components/headers/X-RateLimit-Limit-day'
            X-RateLimit-Remaining-day:
              $ref: '#/components/headers/X-RateLimit-Remaining-day'
            X-FactSet-Api-Units-Limit:
              $ref: '#/components/headers/X-FactSet-Api-Units-Limit'
            X-FactSet-Api-Units-Remaining:
              $ref: '#/components/headers/X-FactSet-Api-Units-Remaining'
        '202':
          description: Batch Request has not finished and the result has NOT been created.
          headers:
            Location:
              description: URL to poll for status of batch request.
              schema:
                type: string
                example: >-
                  https://api.factset.com/formula-api/v1/batch-status?id=d5ec1564-08d4-11ef-bdfc-9e836b3b5a9a
            X-FactSet-Api-Units-Limit:
              $ref: '#/components/headers/X-FactSet-Api-Units-Limit'
            X-FactSet-Api-Units-Remaining:
              $ref: '#/components/headers/X-FactSet-Api-Units-Remaining'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
              examples:
                Batch Request Queued:
                  $ref: '#/components/examples/BatchResultQueuedResponse'
                Batch Request Executing:
                  $ref: '#/components/examples/BatchResultExecutingResponse'
        '404':
          description: Not Found
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              example:
                id: 5EFCCA8940CAEB6E
                code: batchRequestNotFound
                title: The Batch Request was not found. It has probably expired.
                timeStamp: '2019-11-01 11:09:41.918'
      deprecated: false
      requestBody:
        $ref: '#/components/requestBodies/batch-result-postBody'
      x-factset-different-success-responses: true
  /batch-list:
    get:
      summary: Returns a list of all available Batch Requests submitted by a user
      description: >
        Return a list of all batch requests submitted by a user that have not
        yet expired. The `/batch-list` endpoint will return the batch `id`,
        `status`, `error`, and `expiration` for all ongoing or unexpired batch
        requests. All batch requests expire within 48 hours of completion. 

          *This feature is available to Individual Users subscribed to the Performance Package and Performance Package Plus Performance Tiers and all Production Users. If you are unsure which Performance Tier you are subscribed to or you would like to gain access to the batch capabilities, please contact your FactSet Account Team or "Report Issue" above and our support teams can assist.*
      tags:
        - Batch Processing
      operationId: getBatchList
      responses:
        '200':
          description: Batch List Example
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
            X-RateLimit-Limit-second:
              $ref: '#/components/headers/X-RateLimit-Limit-second'
            X-RateLimit-Remaining-second:
              $ref: '#/components/headers/X-RateLimit-Remaining-second'
            X-RateLimit-Limit-day:
              $ref: '#/components/headers/X-RateLimit-Limit-day'
            X-RateLimit-Remaining-day:
              $ref: '#/components/headers/X-RateLimit-Remaining-day'
            X-FactSet-Api-Units-Limit:
              $ref: '#/components/headers/X-FactSet-Api-Units-Limit'
            X-FactSet-Api-Units-Remaining:
              $ref: '#/components/headers/X-FactSet-Api-Units-Remaining'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchListResponse'
              examples:
                Batch List Response:
                  $ref: '#/components/examples/BatchListResult'
                Batch List Empty:
                  $ref: '#/components/examples/BatchListEmpty'
  /batch-cancel:
    delete:
      summary: Cancels individual ongoing Batch Request
      description: >
        Cancel individual batch requests that are specified by the id via the
        `/batch-cancel` endpoint. The batch request cannot be canceled if it has
        already completed processing or if it has failed. Canceling a batch
        request releases a concurrency slot, allowing users to initiate a new
        batch request immediately.

          *This feature is available to Individual Users subscribed to the Performance Package and Performance Package Plus Performance Tiers and all Production Users. If you are unsure which Performance Tier you are subscribed to or you would like to gain access to the batch capabilities, please contact your FactSet Account Team or "Report Issue" above and our support teams can assist.*
      tags:
        - Batch Processing
      operationId: cancelBatchJob
      parameters:
        - $ref: '#/components/parameters/batchId'
      responses:
        '204':
          description: No Content. The Batch Request has been canceled successfully.
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
            X-FactSet-Api-Units-Limit:
              $ref: '#/components/headers/X-FactSet-Api-Units-Limit'
            X-FactSet-Api-Units-Remaining:
              $ref: '#/components/headers/X-FactSet-Api-Units-Remaining'
        '404':
          description: Not Found
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              example:
                id: 5EFCCA8940CAEB6E
                code: batchRequestNotFound
                title: The Batch Request was not found. It has probably expired.
                timeStamp: '2019-11-01T11:09:41.918Z'
        '409':
          description: Batch Request cannot be cancelled.
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetail'
              example:
                id: 66620293292EC1C3
                code: BatchCancelDenied
                title: >-
                  The batch request cannot be canceled because it has either
                  already completed, failed, or been previously canceled.
                timestamp: '2024-06-06T18:40:19.669Z'
      deprecated: false
components:
  securitySchemes:
    FactSetOAuth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://auth.factset.com/as/token.oauth2
          scopes: {}
    FactSetApiKey:
      type: http
      scheme: basic
  parameters:
    ids:
      name: ids
      description: >
        List of entity identifiers. This request value is sent back in the
        response as the field *requestId*. By default, accepted symbol types
        include Market Tickers, SEDOLs, ISINs, CUSIPs, or FactSet Permanent Ids.
        Use the `symbolType` parameter to submit other supported third-party
        identifier types.


        The `ids` and `universe` parameters provide two different ways to
        specify the identifiers for which you want data retrieved. Please enter
        either the `ids` or `universe` parameter.
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
          example: FDS-US
      explode: false
      examples:
        singleId:
          summary: Single id
          value:
            - IBM
        multipleIds:
          summary: Multiple ids
          value:
            - IBM
            - AAPL
            - MSFT
    symbolType:
      name: symbolType
      in: query
      description: >
        Specify the type of symbols submitted in the `ids` parameter. This is
        only required when submitting ids that are not supported by default. 

        <br/><br/>

        Available symbol types -

        <br/>

        * DEFAULT - Accepted symbol types include Market Tickers, SEDOLs, ISINs,
        CUSIPs, or FactSet Permanent Ids.

        <br/>

        * BLOOMBERG - Accepted symbol types include Bloomberg Tickers and
        Bloomberg FIGIs. 
          * When submitting Bloomberg symbols, the Bloomberg symbol is translated to a FactSet Permanent Identifier which is then used to retrieve the requested FQL and Screening formulas. The Bloomberg symbol submitted will be returned in the response in the field *requestId*. To see the FactSet Permanent Identifer that the Bloomberg symbol resolved to, use the `fsymId` parameter in addition to the `symbolType` parameter.
          * Bloomberg symbols can not be submitted with other symbol types. 
        <br/>

        Bloomberg Symbol Resolution is included with the Individual User
        subscription. Users with a Production User subscription require
        additional access to submit Bloomberg symbols. If you would like to gain
        access to Bloomberg Symbol Resolution, please contact your FactSet
        Account Team or "Report Issue" above and our support teams can assist.
      required: false
      schema:
        type: string
        nullable: true
        enum:
          - DEFAULT
          - BLOOMBERG
          - null
        default: DEFAULT
        example: DEFAULT
      explode: false
    universe:
      name: universe
      description: |
        Screening expression to limit the universe

        Please enter either the `ids` or `universe` parameter.
      in: query
      required: false
      schema:
        type: string
      explode: false
      examples:
        noUniverse:
          summary: '---'
          value: ''
        oneCriteria:
          summary: Equity Universe - S&P 500 Constituents
          value: FG_CONSTITUENTS(SP50,0,CLOSE)
        twoCriteria:
          summary: Equity Universe -  S&P 500 Constituents with Price < 10 USD
          value: (FG_CONSTITUENTS(SP50,0,CLOSE) AND P_PRICE(0,USD)<10)=1
        debtUniverse:
          summary: Debt Universe - Starbucks Debt
          description: >
            The issuer name and amount out for all debt instruments for the
            Starbucks Corporation


            To calculate fixed income universe, `universeType` must be set to
            **DEBT**.
          value: EQUITY(P_SYMBOL)='SBUX-US'
    universeType_time_series:
      name: universeType
      in: query
      description: >
        Specify the universe type to calculate the `universe` in.


        Find documentation below on how to build a screen for each universe type
        -

        * Equity Screen - [Online Assistant Page
        20606](https://my.apps.factset.com/oa/pages/20606)


        * Debt Screen - [Online Assistant Page
        20888](https://my.apps.factset.com/oa/pages/20888)


        * Fund Screen - [Online Assistant Page
        21384](https://my.apps.factset.com/oa/pages/21384)


        This parameter may only be used in conjunction with the `universe`
        parameter.
      required: false
      schema:
        type: string
        enum:
          - EQUITY
          - DEBT
          - FUND
        default: EQUITY
        example: EQUITY
      explode: false
    universeType_cross_sectional:
      name: universeType
      in: query
      description: >
        Specify the universe type to calculate the `universe` in.


        Find documentation below on how to build a screen for each universe type
        -

        * Equity Screen - [Online Assistant Page
        20606](https://my.apps.factset.com/oa/pages/20606)


        * Debt Screen - [Online Assistant Page
        20888](https://my.apps.factset.com/oa/pages/20888)


        * Fund Screen - [Online Assistant Page
        21384](https://my.apps.factset.com/oa/pages/21384)
      required: false
      schema:
        type: string
        enum:
          - EQUITY
          - DEBT
          - FUND
        default: EQUITY
        example: EQUITY
      explode: false
    formulas_time_series:
      name: formulas
      description: List of FQL formulas
      in: query
      required: true
      schema:
        type: array
        items:
          type: string
          example: P_PRICE(0,-2,D)
      explode: false
      examples:
        singleItem:
          summary: Single Data Item
          value:
            - P_PRICE(0)
        multipleItems:
          summary: Multiple Data Items
          value:
            - P_PRICE(0,-2,D)
            - FG_COMPANY_NAME
            - FF_SEGMENT_RPT_LABELS(ANN_R,0,-1AY,,,,BUS,"SEG")
            - FF_SEGMENT_RPT_DATA(ANN_R,0,-1AY,,,"SALES",,BUS,"SEG")
        multipleItemsFlatten:
          summary: Multiple TIMESERIES Data Items
          value:
            - P_PRICE_OPEN(0,-2,D)
            - P_PRICE(0,-2,D)
            - FG_COMPANY_NAME
        debtDataItems:
          summary: Multiple Debt Data Items
          value:
            - FI_NAME(ISSR)
            - FI_AMOUNT_OUT(AMT,0,USD)
        calculatedDataItems:
          summary: Multiple Calculated Data Items
          description: >
            These data items showcase the ability to include logic, mathematical
            operations, and other functions in the request itself.


            The first data item using the division operator to calculate a P/E
            ratio from the last trading day of the company's most recent fiscal
            year.


            The second data item uses the addition operator to calculate
            percentage of revenue exposure in the US and Japan for the same date
            as the first data item. Note that due to URI defintion of the plus
            sign, the **+** symbol must be URL percent encoded as **%2B** in GET
            requests. This means you should use **%2B** in place of the symbol
            **+** in the request.


            The third data item uses the average function (**AVG**) and the
            **IF** function to indicate whether the average daily price change
            over the company's most recent fiscal year is postive or negative.


            You can find more information about the different functions you can
            use in FQL at the following Online Assistant pages -

            * Mathematical Operators - [Online Assistant Page
            10600](https://my.apps.factset.com/oa/pages/10600)

            * Logical Functions - [Online Assistant Page
            11485](https://my.apps.factset.com/oa/pages/1485)

            * Categorical List of All Functions - [Online Assistant Page
            1411](https://my.apps.factset.com/oa/pages/1411)
          value:
            - P_PRICE(0Y)/FF_EPS(ANN_R,0Y)
            - >-
              FF_GEOREV_COUNTRY_PCT("840",ANN,0,,,RF)%2BFF_GEOREV_COUNTRY_PCT("392",ANN,0,,,RF)
            - IF(AVG(P_PRICE_CHANGE(0Y,-1Y,D,USD))>0,"POSITIVE","NEGATIVE")
    formulas_cross_sectional:
      name: formulas
      description: List of Screening formulas
      in: query
      required: true
      schema:
        type: array
        items:
          type: string
      explode: false
      examples:
        singleItem:
          summary: Single Equity Data Item
          value:
            - P_PRICE(0)
        multipleItems:
          summary: Multiple Equity Data Items
          value:
            - FF_SALES(ANN_R,0)
            - PROPER_NAME(0,SECURITY,NAME)
            - P_PRICE(0)
            - FF_ASSETS(ANN_R,0)
        calculatedItems:
          summary: Multiple Calculated Data Items
          description: >
            These data items showcase the ability to include logic, mathematical
            operations, and other functions in the request itself.


            The first data item using the division operator to calculate a P/E
            ratio from the last trading day of the company's most recent fiscal
            year.


            The second data item uses the addition operator to calculate
            percentage of revenue exposure in the US and Japan for the same date
            as the first data item. Note that due to URI defintion of the plus
            sign, the **+** symbol must be URL percent encoded as **%2B** in GET
            requests. This means you should use **%2B** in place of the symbol
            **+** in the request.


            The third data item uses the **IF** function and greater than
            operator (**>**) to indicate whether the latest fiscal year's sales
            were higher or lower than the previous year's sales.


            You can find more information about the different functions you can
            use in FQL at the following Online Assistant pages -

            * Mathematical Operators - [Online Assistant Page
            10600](https://my.apps.factset.com/oa/pages/10600)

            * Logical Functions - [Online Assistant Page
            11485](https://my.apps.factset.com/oa/pages/1485)

            * Categorical List of All Functions - [Online Assistant Page
            1411](https://my.apps.factset.com/oa/pages/1411)
          value:
            - P_PRICE(0Y)/FF_EPS(ANN_R,0Y)
            - >-
              FF_GEOREV_COUNTRY_PCT(840,ANN,0,RF)%2BFF_GEOREV_COUNTRY_PCT(392,ANN,0,RF)
            - IF(FF_SALES(ANN_R,0)>FF_SALES(ANN_R,-1),"HIGHER","LOWER")
        multipleFixedIncomeItems:
          summary: Multiple Fixed Income Data Items
          description: >
            To retrieve fixed income data, `universeType` must be set to
            **DEBT**.
          value:
            - FI_NAME(ISSR)
            - FI_AMOUNT_OUT(AMT,0,USD)
    backTestDate:
      name: backTestDate
      description: >
        Specify the backtest date either in **YYYY-MM-DD**, **YYYYMMDD** or
        **MM/DD/YYYY** format.


        To learn more about backtesting, please visit [Online Assistant Page
        20610](https://my.apps.factset.com/oa/pages/20610#backtest). User must
        have access to backtesting functionality.
      in: query
      required: false
      schema:
        type: string
        example: '2020-06-01'
      explode: false
    calendar_time_series:
      name: calendar
      in: query
      schema:
        type: string
      description: >-
        Calendar of data returned. The default value is FIVEDAY which displays
        Monday through Friday, regardless of whether there were trading
        holidays.
      required: false
      examples:
        fiveday:
          summary: FIVEDAY
          description: >-
            Displays Monday through Friday, regardless of whether there were
            trading holidays. This is the default for `calendar`.
          value: FIVEDAY
        sevenday:
          summary: SEVENDAY
          description: Displays Monday through Sunday.
          value: SEVENDAY
        local:
          summary: LOCAL
          description: >-
            Uses the local trading calendar for each security. Local exchange
            holidays will be skipped.
          value: LOCAL
        region:
          summary: Region Specific
          description: >-
            The calendar of a specific region. The example shown here 'NAY' is
            for the UNITED STATES calendar. You can find the calendar codes for
            regions on [Online Assistant Page
            16610](https://my.apps.factset.com/oa/pages/16610#country).
          value: NAY
    calendar_cross_sectional:
      name: calendar
      in: query
      schema:
        type: string
      description: >-
        Calendar of data returned. The default value is FIVEDAY which displays
        Monday through Friday, regardless of whether there were trading
        holidays.
      required: false
      examples:
        fiveday:
          summary: FIVEDAY
          description: >-
            Displays Monday through Friday, regardless of whether there were
            trading holidays. This is the default for `calendar`.
          value: FIVEDAY
        sevenday:
          summary: SEVENDAY
          description: Displays Monday through Sunday.
          value: SEVENDAY
        region:
          summary: Region Specific
          description: >-
            The calendar of a specific region. The example shown here 'NAY' is
            for the UNITED STATES calendar. You can find the calendar codes for
            regions on [Online Assistant Page
            16610](https://my.apps.factset.com/oa/pages/16610#country).
          value: NAY
    fsymId_time_series:
      name: fsymId
      description: >
        Specify **Y** for the `fsymId` parameter to return the **fsymId**
        (FactSet Default Permanent Identifier) of the `requestId`, in addition
        to the **requestId** field, in each response object. The default value
        for the `fsymId` parameter is **N**.


        The **fsymId** field returned is the FactSet Default Permanent
        Identifier for the `requestId`. For all supported `requestId` symbol
        types, the `fsymId` parameter will return the Regional Level PermId '-R'
        which identifies the security's best regional security data series per
        currency. Currently, the fsymId parameter only supports equities.
        Accepted `requestId` symbol types include all FactSet Permanent
        Identifiers types, CUSIP, SEDOL, ISIN, and Tickers. Further
        documentation can be found at this [Online Assistant
        attachment](https://oa.apps.factset.com/cms/oaAttachment/64c3213a-f415-4c27-a336-92c73a72deed/24881).
      in: query
      required: false
      schema:
        type: string
        nullable: true
        enum:
          - 'Y'
          - 'N'
          - null
        default: 'N'
        example: 'N'
      explode: false
    fsymId_cross_sectional:
      name: fsymId
      description: >
        Specify **Y** for `fsymId` to return an additional response object
        containing the data

        item **fsymId** which will contain the fsymIds of the requestIds. This
        is in addition to the

        response object containing the data item **requestId**. The default
        value for `fsymId`

        is **N**.


        The **fsymId** field returned is the FactSet Default Permanent
        Identifier for the `requestId`. For all supported `requestId` symbol
        types, the `fsymId` parameter will return the Regional Level PermId '-R'
        which identifies the security's best regional security data series per
        currency. Currently, the fsymId parameter only supports equities.
        Accepted `requestId` symbol types include all FactSet Permanent
        Identifiers types, CUSIP, SEDOL, ISIN, and Tickers. Further
        documentation can be found at this [Online Assistant
        attachment](https://oa.apps.factset.com/cms/oaAttachment/64c3213a-f415-4c27-a336-92c73a72deed/24881).
      in: query
      required: false
      schema:
        type: string
        nullable: true
        enum:
          - 'Y'
          - 'N'
          - null
        default: 'N'
        example: 'N'
      explode: false
    displayName_time_series:
      name: displayName
      description: >
        Define display names for the formulas inputted. Enter the list of
        display names in the same order as the formulas inputted. An additional
        field **displayName** will be returned in the data object for a formula.


        If the number of display names does not match the number of formulas
        provided, an error will be returned.


        To define the display name for a subset of the formulas, leave a blank
        in the position of the formula that won't be renamed. For example - If
        three formulas are inputted, to define display names only for the first
        and third formula, enter *displayName=FORMULA_1,,FORMULA_3*. The
        **displayName** field will still be included in that formula, but will
        contain the formula as inputted.
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
          example: PRICE
      explode: false
      examples:
        noNames:
          value: []
          summary: '---'
        singleItem:
          summary: Single Data Item
          value:
            - PRICE
        multipleItems:
          summary: Multiple Data Items
          value:
            - PRICE
            - COMPANY NAME
            - BUSINESS SEGMENT
            - SALES SEGMENT
    displayName_cross_sectional:
      name: displayName
      description: >
        Define display names for the formulas inputted. Enter the list of
        display names in the same order as the formulas inputted. An additional
        field **displayName** will be returned in the data object for a formula.


        If the number of display names does not match the number of formulas
        provided, an error will be returned.


        To define the display name for a subset of the formulas, leave a blank
        in the position of the formula that won't be renamed. For example - If
        three formulas are inputted, to define display names only for the first
        and third formula, enter *displayName=FORMULA_1,,FORMULA_3*. The
        **displayName** field will still be included in that formula, but will
        contain the formula as inputted.
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
          example: PRICE
      explode: false
      examples:
        noNames:
          value: []
          summary: '---'
        singleItem:
          summary: Single Data Item
          value:
            - PRICE
        multipleItems:
          summary: Multiple Data Items
          value:
            - SALES
            - COMPANY NAME
            - PRICE
            - ASSETS
    flatten_time_series:
      name: flatten
      description: >
        Specify **Y** for `flatten` to return a flat, table-like JSON response
        model instead of the standard nested JSON response model. This option is
        provided for easier data processing and visualization. The default value
        for `flatten` is **N**.


        See the **Time-Series Result Object Flattened** schema for more detail
        on the response structure for flattened output.
      in: query
      required: false
      schema:
        type: string
        nullable: true
        enum:
          - 'Y'
          - 'N'
          - null
        default: 'N'
        example: 'N'
      explode: false
    flatten_cross_sectional:
      name: flatten
      description: >
        Specify **Y** for `flatten` to return a flat, table-like JSON response
        model instead of the standard nested JSON response model. This option is
        provided for easier data processing and visualization. The default value
        for `flatten` is **N**.


        See the **Cross-Sectional Result Object Flattened** schema for more
        detail on the response structure for flattened output.
      in: query
      required: false
      schema:
        type: string
        nullable: true
        enum:
          - 'Y'
          - 'N'
          - null
        default: 'N'
        example: 'N'
      explode: false
    dates_time_series:
      name: dates
      description: >
        Specify **N** for the `dates` parameter to suppress the **dates** of the
        response. The default value for the `dates` parameter is **Y**. Setting
        the parameter to **Y** will only return dates if the formula has a date
        value associated with it.


        In the non-flattened response model, setting dates to **N** will remove
        the "dates" array from the TIMESERIES objectType, meaning that the
        results will be returned as an ARRAY objectType.


        In the flattened response mode, setting dates to **N** will remove the
        "dates" attribute from the response objects. The flatten parameter first
        attempts to flatten the response by dates. Removing the dates can make
        it easier to align multiple data items when the date definition differs
        from the desired alignment.
      in: query
      required: false
      schema:
        type: string
        nullable: true
        enum:
          - 'Y'
          - 'N'
          - null
        default: 'Y'
        example: 'Y'
      explode: false
    batch:
      name: batch
      in: query
      description: >
        Enables the ability to asynchronously "batch" the request,  supporting a
        long-running request up to **30 minutes**. Upon requesting batch=Y, the
        service will respond back with an HTTP Status Code of 202.


        Individual users are allowed 5 concurrent Batch Requests, while
        Production users are allowed 10 concurrent Batch Requests.

        *This feature is available to Individual Users subscribed to the
        Performance Package and Performance Package Plus Performance Tiers and
        all Production Users. If you are unsure which Performance Tier you are
        subscribed to or you would like to gain access to the batch
        capabilities, please contact your FactSet Account Team or "Report Issue"
        above and our support teams can assist.*


        Once a batch request is submitted, use `/batch-status` to see if the job
        has completed. Once completed, retrieve the results of the request via
        `/batch-result`. See the endpoints listed under *Batch Processing* for
        more information.
      schema:
        type: string
        nullable: true
        enum:
          - 'Y'
          - 'N'
          - null
        default: 'N'
    batchId:
      name: id
      in: query
      description: Batch Request identifier.
      schema:
        type: string
        format: uuid
        example: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c
      required: true
      allowEmptyValue: false
    startDate:
      name: startDate
      description: >-
        Specify the start date for running the Iterated Cross Sectional
        Functionality request either in **YYYY-MM-DD**, **YYYYMMDD** or
        **MM/DD/YYYY** format.

        User must have access to backtesting functionality.
      in: query
      required: false
      schema:
        type: string
        example: '2020-05-01'
      explode: false
    endDate:
      name: endDate
      description: >-
        Specify the end date for running the Iterated Cross Sectional
        Functionality request either in **YYYY-MM-DD**, **YYYYMMDD** or
        **MM/DD/YYYY** format.

        User must have access to backtesting functionality.
      in: query
      required: false
      schema:
        type: string
        example: '2020-05-31'
      explode: false
    frequency:
      name: frequency
      description: >-
        Specify the frequency for running the Iterated Cross Sectional
        Functionality request. The following frequencies are supported **D**,
        **W**, **M**, **AM**, **CQ**, **AY**, or **CY**.

        To learn more about frequency, please visit [Online Assistant Page
        1964](https://my.apps.factset.com/oa/pages/1964#frequency). User must
        have access to backtesting functionality.
      in: query
      required: false
      schema:
        type: string
      explode: false
      examples:
        noFrequency:
          value: ''
          summary: '---'
        D:
          summary: Daily
          description: Displays data on a daily basis.
          value: D
        W:
          summary: Weekly
          description: >-
            Displays data weekly, based on the last day of the completed trading
            week (usually Friday).
          value: W
        M:
          summary: Monthly
          description: Displays data monthly, based on the last trading day of the month.
          value: M
        AM:
          summary: Monthly-Actual
          description: >-
            Displays data monthly, based on the start date (e.g., if the start
            date is June 16th, data is displayed for June 16th, May 16th, April
            16th, etc.).
          value: AM
        CQ:
          summary: Quarterly-Calendar
          description: >-
            Displays data quarterly based on the last trading day of the
            calendar quarter (March, June, September, or December).
          value: CQ
        AY:
          summary: Yearly-Actual
          description: >-
            Displays data annually, based on the start date (e.g, if the start
            date is October 31, 2019, data is displayed for October 31, 2019,
            October 31, 2018, October 31, 2017, etc.).
          value: AY
        CY:
          summary: Yearly-Calendar
          description: >-
            Displays data annually based on the last trading day of the calendar
            year.
          value: CY
    universeExclusion:
      name: universeExclusion
      description: >
        Specify the security types you would like to exclude from your *EQUITY*
        `universe` expression. The supported exclusion values are `INACTIVE`,
        `SECONDARY`, and `NONEQUITY`. You can specify more than one exclusion
        criteria within a request. For GET requests, each exclusion should be
        separated by a comma, and for POST requests, they should be supplied in
        an array. More information about each exclusion can be found below: 

        <br/><br/>

        * Exclude Inactive Securities (`INACTIVE`): Omits securities that have
        ceased trading due to circumstances such as bankruptcy and M&A activity

        <br/>

        * Exclude Secondary Listings (`SECONDARY`): Omits securities linked to a
        primarily listing (e.g., ADRs, GDRs)

        <br/>

        * Exclude Non-Equity Securities (`NONEQUITY`): Omits securities
        including indices, market statistics, mutual funds, and exchange-traded
        funds (ETFs); preferred stock is excluded on a case-by-case basis

        <br/>

        Find more documentation on Universe Exclusion logic on [Online Assistant
        Page 20606](https://my.apps.factset.com/oa/pages/20606) under
        'Understanding Criteria Options'.

        <br/><br/>

        This parameter may only be used in conjunction with the `universe`
        parameter and the `universeType` set to EQUITY. Using this parameter
        with a `universeType` other than EQUITY will result in error.
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
          enum:
            - INACTIVE
            - SECONDARY
            - NONEQUITY
        nullable: true
      examples:
        noExclusion:
          summary: '---'
          value: []
        singleItem:
          summary: Single Security Exclusion
          value:
            - INACTIVE
        multipleItems:
          summary: Multiple Security Exclusions
          value:
            - INACTIVE
            - SECONDARY
            - NONEQUITY
  schemas:
    TimeSeriesRequest:
      title: Time-Series Request Body
      description: '`/time-series` Request Body'
      type: object
      properties:
        data:
          type: object
          properties:
            ids:
              title: ids
              description: >
                Array of entity identifiers.


                The `ids` and `universe` parameters provide two different ways
                to specify the identifiers for which you want data retrieved.
                Please enter either the `ids` or `universe` parameter.
              type: array
              items:
                type: string
              example:
                - FDS-US
                - IBM-US
                - XOM-US
            symbolType:
              title: symbolType
              type: string
              description: >
                Specify the type of symbols submitted in the `ids` parameter.
                This is only required when submitting ids that are not supported
                by default. 

                <br/>

                Available symbol types -

                * DEFAULT - Accepted symbol types include Market Tickers,
                SEDOLs, ISINs, CUSIPs, or FactSet Permanent Ids.


                * BLOOMBERG - Accepted symbol types include Bloomberg Tickers
                and Bloomberg FIGIs. 
                  * When submitting Bloomberg symbols, the Bloomberg symbol is translated to a FactSet Permanent Identifier which is then used to retrieve the requested FQL and Screening formulas. The Bloomberg symbol submitted will be returned in the response in the field *requestId*. To see the FactSet Permanent Identifer that the Bloomberg symbol resolved to, use the `fsymId` parameter in addition to the `
                  ` parameter.
                  * Bloomberg symbols can not be submitted with other symbol types. 
                <br/>

                Bloomberg Symbol Resolution is included with the Individual User
                subscription. Users with a Production User subscription require
                additional access to submit Bloomberg symbols. If you would like
                to gain access to Bloomberg Symbol Resolution, please contact
                your FactSet Account Team or "Report Issue" above and our
                support teams can assist.
            universe:
              title: universe
              description: |
                Screening expression to limit the universe

                Please enter either the `ids` or `universe` parameter.
              type: string
              example: FG_CONSTITUENTS(SP50,0,CLOSE)
            universeType:
              title: universeType
              description: >
                Specify the universe type to calculate the `universe` in.


                Find documentation below on how to build a screen for each
                universe type -

                * Equity Screen - [Online Assistant Page
                20606](https://my.apps.factset.com/oa/pages/20606)


                * Debt Screen - [Online Assistant Page
                20888](https://my.apps.factset.com/oa/pages/20888)


                * Fund Screen - [Online Assistant Page
                21384](https://my.apps.factset.com/oa/pages/21384)


                This parameter may only be used in conjunction with the
                `universe` parameter.
              type: string
              example: DEBT
              default: EQUITY
              enum:
                - EQUITY
                - DEBT
                - FUND
            universeExclusion:
              title: universeExclusion
              description: >
                Specify the security types you would like to exclude from your
                *EQUITY* `universe` expression. The supported exclusion values
                are `INACTIVE`, `SECONDARY`, and `NONEQUITY`. You can specify
                more than one exclusion criteria within a request. For GET
                requests, each exclusion should be separated by a comma and for
                POST requests, they should be supplied in an array. More
                information about each exclusion can be found below: 


                * Exclude Inactive Securities (`INACTIVE`): Omits securities
                that have ceased trading due to circumstances such as bankruptcy
                and M&A activity


                * Exclude Secondary Listings (`SECONDARY`): Omits securities
                linked to a primarily listing (e.g., ADRs, GDRs)


                * Exclude Non-Equity Securities (`NONEQUITY`): Omits securities
                including indices, market statistics, mutual funds, and
                exchange-traded funds (ETFs); preferred stock is excluded on a
                case-by-case basis


                Find more documentation on Universe Exclusion logic on [Online
                Assistant Page
                20606](https://my.apps.factset.com/oa/pages/20606) under
                'Understanding Criteria Options'.


                This parameter may only be used in conjunction with the
                `universe` parameter and the `universeType` set to EQUITY. Using
                this parameter with a `universeType` other than EQUITY will
                result in error.
              type: array
              items:
                type: string
                example: INACTIVE
                enum:
                  - INACTIVE
                  - SECONDARY
                  - NONEQUITY
            formulas:
              title: FQL formulas
              description: Array of FQL formulas
              type: array
              items:
                type: string
              example:
                - P_PRICE(0,-2,D)
                - FG_COMPANY_NAME
            calendar:
              title: Calendar Setting
              description: >-
                Calendar of data returned. The default value is FIVEDAY which
                displays Monday through Friday, regardless of whether there were
                trading holidays.
              type: string
              example: SEVENDAY
              default: FIVEDAY
            fsymId:
              title: fsymId
              description: >
                Specify **Y** for the `fsymId` parameter to return the
                **fsymId** (FactSet Default Permanent Identifier) of the
                `requestId`, in addition to the **requestId** field, in each
                response object. The default value for the `fsymId` parameter is
                **N**.


                The **fsymId** field returned is the FactSet Default Permanent
                Identifier for the `requestId`. For all supported `requestId`
                symbol types, the `fsymId` parameter will return the Regional
                Level PermId '-R' which identifies the security's best regional
                security data series per currency. Currently, the fsymId
                parameter only supports equities. Accepted `requestId` symbol
                types include all FactSet Permanent Identifiers types, CUSIP,
                SEDOL, ISIN, and Tickers. Further documentation can be found at
                this [Online Assistant
                attachment](https://oa.apps.factset.com/cms/oaAttachment/64c3213a-f415-4c27-a336-92c73a72deed/24881).
              type: string
              example: 'Y'
              default: 'N'
              enum:
                - 'Y'
                - 'N'
            displayName:
              title: displayName
              description: >
                Define display names for the formulas inputted. Enter the list
                of display names in the same order as the formulas inputted. An
                additional field **displayName** will be returned in the data
                object for a formula.


                If the number of display names does not match the number of
                formulas provided, an error will be returned.


                To define the display name for a subset of the formulas, leave a
                blank in the position of the formula that won't be renamed. For
                example - If three formulas are inputted, to define display
                names only for the first and third formula, enter
                *displayName=FORMULA_1,,FORMULA_3*. The **displayName** field
                will still be included in that formula, but will contain the
                formula as inputted.
              type: array
              items:
                type: string
              example:
                - PRICE
                - COMPANY_NAME
            flatten:
              title: flatten
              description: >
                Specify **Y** for `flatten` to return a flat, table-like JSON
                response model instead of the standard nested JSON response
                model. This option is provided for easier data processing and
                visualization. The default value for `flatten` is **N**.


                See the **Time-Series Result Object Flattened** schema for more
                detail on the response structure for flattened output.
              type: string
              example: 'Y'
              default: 'N'
              enum:
                - 'Y'
                - 'N'
            dates:
              title: dates
              description: >
                Specify **N** for the `dates` parameter to suppress the
                **dates** of the response. The default value for the `dates`
                parameter is **Y**.


                In the non-flattened response model, setting dates to **N** will
                remove the "dates" array from the TIMESERIES objectType, meaning
                that the results will be returned as an ARRAY objectType.


                In the flattened response mode, setting dates to **N** will
                remove the "dates" attribute from the response objects. The
                flatten parameter first attempts to flatten the response by
                dates. Removing the dates can make it easier to align multiple
                data items when the date definition differs from the desired
                alignment.
              type: string
              example: 'N'
              default: 'Y'
              enum:
                - 'Y'
                - 'N'
            batch:
              title: batch
              description: >
                Enables the ability to asynchronously "batch" the request,
                supporting a long-running request up to **30 minutes**. Upon
                requesting "batch": "Y", the service will respond back with an
                HTTP Status Code of 202.


                Individual users are allowed 5 concurrent Batch Requests, while
                Production users are allowed 10 concurrent Batch Requests.


                *This feature is available to Individual Users subscribed to the
                Performance Package and Performance Package Plus Performance
                Tiers and all Production Users. If you are unsure which
                Performance Tier you are subscribed to or you would like to gain
                access to the batch capabilities, please contact your FactSet
                Account Team or "Report Issue" above and our support teams can
                assist.*


                Once a batch request is submitted, use `/batch-status` to see if
                the job has completed. Once completed, retrieve the results of
                the request via `/batch-result`. See the endpoints listed under
                *Batch Processing* for more information.
              type: string
              example: 'Y'
              default: 'N'
              enum:
                - 'Y'
                - 'N'
          required:
            - formulas
      required:
        - data
    TimeSeriesResponseObjectItems:
      title: Time-Series Response Object
      anyOf:
        - $ref: '#/components/schemas/TimeSeriesResultObjectNonflattened'
        - $ref: '#/components/schemas/UnifiedResultObjectFlattened'
    TimeSeriesResponse:
      title: Time-Series Response
      type: object
      properties:
        data:
          description: Array of Time-Series `Response Objects`
          type: array
          items:
            $ref: '#/components/schemas/TimeSeriesResponseObjectItems'
        meta:
          type: object
    TimeSeriesResultObjectNonflattened:
      title: Time-Series Non-Flattened Response Object
      anyOf:
        - $ref: '#/components/schemas/TimeSeriesResultObjectNonflattenedScalar'
        - $ref: '#/components/schemas/TimeSeriesResultObjectNonflattenedArray'
        - $ref: '#/components/schemas/TimeSeriesResultObjectNonflattenedMatrix'
        - $ref: >-
            #/components/schemas/TimeSeriesResultObjectNonflattenedTimeseriesObject
      discriminator:
        propertyName: objectType
        mapping:
          SCALAR: '#/components/schemas/TimeSeriesResultObjectNonflattenedScalar'
          ARRAY: '#/components/schemas/TimeSeriesResultObjectNonflattenedArray'
          MATRIX: '#/components/schemas/TimeSeriesResultObjectNonflattenedMatrix'
          TIMESERIES: >-
            #/components/schemas/TimeSeriesResultObjectNonflattenedTimeseriesObject
    TimeSeriesResultObjectNonflattenedScalar:
      title: Time-Series Non-Flattened Response Object with SCALAR Result Attribute
      type: object
      properties:
        result:
          $ref: '#/components/schemas/TimeSeriesScalarValue'
      allOf:
        - $ref: '#/components/schemas/TimeSeriesResultObjectNonflattenedBase'
    TimeSeriesResultObjectNonflattenedArray:
      title: Time-Series Non-Flattened Response Object with ARRAY Result Attribute
      description: >-
        The `result` attribute in the Time-Series Non-Flattened Response Object
        will be an ARRAY.
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/TimeSeriesScalarValue'
      allOf:
        - $ref: '#/components/schemas/TimeSeriesResultObjectNonflattenedBase'
    TimeSeriesResultObjectNonflattenedMatrix:
      title: Time-Series Non-Flattened Response Object with MATRIX Result Attribute
      description: >-
        The `result` attribute in the Time-Series Non-Flattened Response Object
        will be a MATRIX, which will be represented as an array of arrays. Each
        array can be thought of as a row in the matrix.
      type: object
      properties:
        result:
          type: array
          items:
            type: array
            items:
              $ref: '#/components/schemas/TimeSeriesScalarValue'
      allOf:
        - $ref: '#/components/schemas/TimeSeriesResultObjectNonflattenedBase'
    TimeSeriesResultObjectNonflattenedTimeseriesObject:
      title: >-
        Time-Series Non-Flattened Response Object with TIMESERIES Result
        Attribute
      type: object
      properties:
        result:
          $ref: '#/components/schemas/TimeSeriesTimeseriesObject'
      allOf:
        - $ref: '#/components/schemas/TimeSeriesResultObjectNonflattenedBase'
    TimeSeriesResultObjectNonflattenedBase:
      title: Time-Series Non-Flattened Base Response Object
      description: >-
        An object returning the results for a single identifier and formula.
        This is the base of the response object. The result attribute depends on
        the formula requested. Response objects with the various result
        attribute types are outlined in separate schemas.
      type: object
      properties:
        error:
          description: >
            Indicates that there was an error in the execution of the FQL
            Formula.

            * Zero - success

            * Non-zero - failure
          type: integer
          example: 1
        errorMessage:
          description: >-
            If error is non-zero, errorMessage will display the FQL formula
            error.
          type: string
          nullable: true
          example: |
            parse error, unexpected ','
        formula:
          description: FQL formula requested.
          type: string
          example: P_PRICE(0,-1,D)
        displayName:
          description: Display Name.
          type: string
          nullable: true
          example: PRICE
        requestId:
          description: Identifier requested.
          type: string
          example: IBM-US
        fsymId:
          description: >
            The **fsymId** field returned is the FactSet Default Permanent
            Identifier for the `requestId`. For all supported `requestId` symbol
            types, the `fsymId` parameter will return the Regional Level PermId
            '-R' which identifies the security's best regional security data
            series per currency. Currently, the fsymId parameter only supports
            equities. Accepted `requestId` symbol types include all FactSet
            Permanent Identifiers types, CUSIP, SEDOL, ISIN, and Tickers.
            Further documentation can be found at this [Online Assistant
            attachment](https://oa.apps.factset.com/cms/oaAttachment/64c3213a-f415-4c27-a336-92c73a72deed/24881).
            Included only if the `fsymId` parameter is set to Y.
          type: string
          nullable: true
          example: SJY281-R
        dataType:
          description: Type of data returned in `result`
          example: STRING
          type: string
          nullable: true
          enum:
            - STRING
            - INTEGER
            - DOUBLE
            - null
        objectType:
          description: Type of object returned in `result`
          type: string
          example: ARRAY
          enum:
            - SCALAR
            - ARRAY
            - MATRIX
            - TIMESERIES
      required:
        - error
        - formula
        - requestId
        - result
        - dataType
        - objectType
    TimeSeriesScalarValue:
      title: Time-Series SCALAR Result
      description: >-
        The `result` attribute in the Time-Series Non-Flattened Response Object
        will be a SCALAR.
      oneOf:
        - type: string
          example: International Business Machines Corporation
        - type: number
          format: double
          example: 354.98
        - type: integer
          nullable: true
          example: 4
      nullable: true
    TimeSeriesTimeseriesObject:
      title: Time-Series TIMESERIES Result
      description: >-
        The `result` attribute in the Time-Series Non-Flattened Response Object
        will be a TIMESERIES object. A TIMESERIES object has a values attribute
        and a dates attribute that contain arrays of equal length so that the
        values and dates can be align to form a time series.
      type: object
      properties:
        values:
          title: values
          type: array
          description: >-
            Representing the data returned from the requested FQL formula for
            the requestId
          items:
            $ref: '#/components/schemas/TimeSeriesScalarValue'
          example:
            - 124.92
            - 124.22
            - 122.44
        dates:
          title: dates
          type: array
          description: >-
            Representing the dates corresponding the requested FQL formula for
            the requestId
          items:
            type: string
            format: date
            nullable: true
          example:
            - '2020-09-17'
            - '2020-09-16'
            - '2020-09-15'
    CrossSectionalRequest:
      title: Cross-Sectional Request Body
      description: '`/cross-sectional` Request Body'
      type: object
      properties:
        data:
          type: object
          properties:
            ids:
              title: ids
              description: >
                Array of entity identifiers.


                The `ids` and `universe` parameters provide two different ways
                to specify

                the identifiers for which you want data retrieved. Please enter
                either the

                `ids` or `universe` parameter.
              type: array
              items:
                type: string
              example:
                - FDS-US
                - IBM-US
                - XOM-US
            symbolType:
              title: symbolType
              type: string
              description: >
                Specify the type of symbols submitted in the `ids` parameter.
                This is only required when submitting ids that are not supported
                by default. 


                Available symbol types -

                * DEFAULT - Accepted symbol types include Market Tickers,
                SEDOLs, ISINs, CUSIPs, or FactSet Permanent Ids.


                * BLOOMBERG - Accepted symbol types include Bloomberg Tickers
                and Bloomberg FIGIs. 
                  * When submitting Bloomberg symbols, the Bloomberg symbol is translated to a FactSet Permanent Identifier which is then used to retrieve the requested FQL and Screening formulas. The Bloomberg symbol submitted will be returned in the response in the field *requestId*. To see the FactSet Permanent Identifer that the Bloomberg symbol resolved to, use the `fsymId` parameter in addition to the `symbolType` parameter.
                  * Bloomberg symbols can not be submitted with other symbol types. 
                  
                Bloomberg Symbol Resolution is included with the Individual User
                subscription. Users with a Production User subscription require
                additional access to submit Bloomberg symbols. If you would like
                to gain access to Bloomberg Symbol Resolution, please contact
                your FactSet Account Team or "Report Issue" above and our
                support teams can assist.
            universe:
              title: universe
              description: |
                Screening expression to limit the universe

                Please enter either the `ids` or `universe` parameter.
              type: string
              example: FG_CONSTITUENTS(SP50,0,CLOSE)
            universeType:
              title: universeType
              description: >
                Specify the universe type to calculate the `universe` in.


                Find documentation below on how to build a screen for each
                universe type -
                  * Equity Screen - [Online Assistant Page 20606](https://my.apps.factset.com/oa/pages/20606)

                  * Debt Screen - [Online Assistant Page 20888](https://my.apps.factset.com/oa/pages/20888)

                  * Fund Screen - [Online Assistant Page 21384](https://my.apps.factset.com/oa/pages/21384)
              type: string
              default: EQUITY
              example: DEBT
              enum:
                - EQUITY
                - DEBT
                - FUND
            universeExclusion:
              title: universeExclusion
              description: >
                Specify the security types you would like to exclude from your
                *EQUITY* `universe` expression. The supported exclusion values
                are `INACTIVE`, `SECONDARY`, and `NONEQUITY`. You can specify
                more than one exclusion criteria within a request. For GET
                requests, each exclusion should be separated by a comma and for
                POST requests, they should be supplied in an array. More
                information about each exclusion can be found below: 


                * Exclude Inactive Securities (`INACTIVE`): Omits securities
                that have ceased trading due to circumstances such as bankruptcy
                and M&A activity


                * Exclude Secondary Listings (`SECONDARY`): Omits securities
                linked to a primarily listing (e.g., ADRs, GDRs)


                * Exclude Non-Equity Securities (`NONEQUITY`): Omits securities
                including indices, market statistics, mutual funds, and
                exchange-traded funds (ETFs); preferred stock is excluded on a
                case-by-case basis


                Find more documentation on Universe Exclusion logic on [Online
                Assistant Page
                20606](https://my.apps.factset.com/oa/pages/20606) under
                'Understanding Criteria Options'.


                This parameter may only be used in conjunction with the
                `universe` parameter and the `universeType` set to EQUITY. Using
                this parameter with a `universeType` other than EQUITY will
                result in error.
              type: array
              items:
                type: string
                example: INACTIVE
                enum:
                  - INACTIVE
                  - SECONDARY
                  - NONEQUITY
            formulas:
              title: Screening formulas
              description: Array of Screening formulas
              type: array
              items:
                type: string
              example:
                - P_PRICE(0)
                - FG_COMPANY_NAME
            backTestDate:
              title: backTestDate
              description: >
                Specify the backtest date either in **YYYY-MM-DD**, **YYYYMMDD**
                or **MM/DD/YYYY** format.


                To learn more about backtesting, please visit [Online Assistant
                Page
                20610](https://my.apps.factset.com/oa/pages/20610#backtest).
                User must have access to backtesting functionality.
              type: string
              example: '2020-06-01'
            calendar:
              title: Calendar Setting
              description: Calendar of data returned.
              type: string
              example: SEVENDAY
              default: FIVEDAY
            fsymId:
              title: fsymId
              description: >
                Specify **Y** for `fsymId` to return an additional response
                object for the data item fsymId which will contain the fsymIds
                of the requestIds, in addition to the response object containing
                the data item requestId. The default value for `fsymId` is
                **N**.


                The **fsymId** field returned is the FactSet Default Permanent
                Identifier for the `requestId`. For all supported `requestId`
                symbol types, the `fsymId` parameter will return the Regional
                Level PermId '-R' which identifies the security's best regional
                security data series per currency. Currently, the fsymId
                parameter only supports equities. Accepted `requestId` symbol
                types include all FactSet Permanent Identifiers types, CUSIP,
                SEDOL, ISIN, and Tickers. Further documentation can be found at
                this [Online Assistant
                attachment](https://oa.apps.factset.com/cms/oaAttachment/64c3213a-f415-4c27-a336-92c73a72deed/24881).
              type: string
              example: 'Y'
              default: 'N'
              enum:
                - 'Y'
                - 'N'
            displayName:
              title: displayName
              description: >
                Define display names for the formulas inputted. Enter the list
                of display names in the same order as the formulas inputted. An
                additional field **displayName** will be returned in the data
                object for a formula.


                If the number of display names does not match the number of
                formulas provided, an error will be returned.


                To define the display name for a subset of the formulas, leave a
                blank in the position of the formula that won't be renamed. For
                example - If three formulas are inputted, to define display
                names only for the first and third formula, enter
                *displayName=FORMULA_1,,FORMULA_3*. The **displayName** field
                will still be included in that formula, but will contain the
                formula as inputted.
              type: array
              items:
                type: string
              example:
                - PRICE
                - COMPANY_NAME
            flatten:
              title: flatten
              description: >
                Specify **Y** for `flatten` to return a flat, table-like JSON
                response model instead of the standard nested JSON response
                model. This option is provided for easier data processing and
                visualization. The default value for `flatten` is **N**.


                See the **Cross-Sectional Result Object Flattened** schema for
                more detail on the response structure for flattened output.
              type: string
              example: 'Y'
              default: 'N'
              enum:
                - 'Y'
                - 'N'
            batch:
              title: batch
              description: >
                Enables the ability to asynchronously "batch" the request,
                supporting a long-running request up to 30 minutes. Upon
                requesting "batch": "Y", the service will respond back with an
                HTTP Status Code of 202.


                Individual users are allowed 5 concurrent Batch Requests, while
                Production users are allowed 10 concurrent Batch Requests.


                *This feature is available to Individual Users subscribed to the
                Performance Package and Performance Package Plus Performance
                Tiers and all Production Users. If you are unsure which
                Performance Tier you are subscribed to or you would like to gain
                access to the batch capabilities, please contact your FactSet
                Account Team or "Report Issue" above and our support teams can
                assist.*


                Once a batch request is submitted, use `/batch-status` to see if
                the job has completed. Once completed, retrieve the results of
                the request via `/batch-result`. See the endpoints listed under
                *Batch Processing* for more information.
              type: string
              example: 'Y'
              default: 'N'
              enum:
                - 'Y'
                - 'N'
            startDate:
              title: startDate
              description: >
                Specify the start date for running the Iterated Cross Sectional
                Functionality request either in **YYYY-MM-DD**, **YYYYMMDD** or
                **MM/DD/YYYY** format.
              type: string
              example: '2020-05-01'
            endDate:
              title: endDate
              description: >
                Specify the end date for running the Iterated Cross Sectional
                Functionality request either in **YYYY-MM-DD**, **YYYYMMDD** or
                **MM/DD/YYYY** format.
              type: string
              example: '2020-05-31'
            frequency:
              title: frequency
              description: >
                Specify the frequency for running the Iterated Cross Sectional
                Functionality request. The following frequencies are supported
                **D**, **W**, **M**, **AM**, **CQ**, **AY**, or **CY**.


                To learn more about frequency, please visit [Online Assistant
                Page 1964](https://my.apps.factset.com/oa/pages/1964#frequency).
                User must have access to backtesting functionality.
              type: string
              example: AM
              enum:
                - D
                - W
                - M
                - AM
                - CQ
                - AY
                - CY
          required:
            - formulas
      required:
        - data
    CrossSectionalResponseObjectItems:
      title: Cross-Sectional Response Object
      oneOf:
        - $ref: '#/components/schemas/CrossSectionalResultObjectNonflattened'
        - $ref: '#/components/schemas/UnifiedResultObjectFlattened'
    CrossSectionalResponse:
      title: Cross-Sectional Response
      type: object
      properties:
        data:
          description: Array of Cross-Sectional `Response Objects`
          type: array
          items:
            $ref: '#/components/schemas/CrossSectionalResponseObjectItems'
        meta:
          type: object
    CrossSectionalResultObjectNonflattenedResultAttribute:
      title: Result Attribute in Cross-Sectional Non-Flattened Response Object
      description: An array containing the values for the data item
      example:
        - IBM
        - FDS
        - AAPL
        - MSFT
      oneOf:
        - type: string
          nullable: true
          description: Array of strings
          example: International Business Machines Corporation
        - type: number
          description: Array of doubles
          format: double
          example: 345.5
        - type: integer
          description: Array of integers
          example: 6
      nullable: true
    CrossSectionalResultObjectNonflattened:
      title: Cross-Sectional Non-Flattened Response Object
      description: An object returning the results for a single formula.
      type: object
      properties:
        universe:
          description: >-
            If `universe` is submitted instead of `ids`, then the universe
            attribute will display the universe expression requested.
          type: string
          example: (FG_CONSTITUENTS(SP50,0,CLOSE) AND P_PRICE(0,USD)<10)=1
        dataItemName:
          description: >-
            Name of data item (requestId, requested Screening formula, or
            fsymId)
          type: string
          example: P_PRICE(0)
        displayName:
          description: Display Name.
          type: string
          nullable: true
          example: PRICE
        result:
          type: array
          items:
            $ref: >-
              #/components/schemas/CrossSectionalResultObjectNonflattenedResultAttribute
        dataType:
          description: Data type of the data item
          example: STRING
          type: string
          enum:
            - STRING
            - INTEGER
            - DOUBLE
        error:
          description: |
            Data item error indicator.
             * Zero - success
             * Non-zero - failure
          type: integer
          example: 1
        errorMessage:
          description: >-
            If error is non-zero, errorMessage will display the Screening
            formula error.
          type: string
          nullable: true
          example: |
            Error parsing formula arguments
        warnings:
          description: >-
            Screening formula warnings. This attribute is only displayed if
            warnings are generated in the execution of the Screening formula.
          type: array
          items:
            $ref: '#/components/schemas/WarningsObject'
      required:
        - dataItemName
        - error
        - result
        - dataType
    WarningsObject:
      type: object
      properties:
        description:
          description: Human readable message explaining the warning
          example: >-
            The formula encountered division by zero in some records, which may
            lead to inaccurate results.
          type: string
          nullable: true
        effect:
          description: Human readable message explaining the effect on the `result`
          example: >-
            Due to the division by zero encountered in some records, the
            affected results may display as null.
          type: string
          nullable: true
    UnifiedResultObjectFlattenedAddl:
      title: >-
        Key-Value Pair for Time-Series or Cross-Sectional Flattened Response
        Object
      description: >
        The Key in the Key-Value pair will be the formula. If the `displayName`
        parameter is used, then the Key will be displayName specified for that
        formula. The Value in the Key-Value pair will be the result of the
        formula for that "row".
      example: '"P_PRICE(0)": 142.32'
      oneOf:
        - type: string
          example: Price
        - type: number
          format: double
          example: 120.4
        - type: integer
          nullable: true
          example: 1
      nullable: true
    UnifiedResultObjectFlattened:
      title: Unified Flattened Result Object
      description: >

        Data model returned when the parameter **flatten=Y** is used in the
        request. This flattened, simplified JSON data returned from
        **flatten=Y** can be conceptualized as a table (rows and columns) where
        each data object in the result is a row in the table and the field names
        are the column names.


        There will be one data object for each request containing the request,
        fsymId if requested, and Key-Value pairs for each data item (formula).


        ---


        Formulas that have associated dates (TIMESERIES objectType in the
        standard **flatten=N** response model) will result in a data object for
        each date for each requestId.


        **flatten=N TIMESERIES Representation**

        ```json

        [
          {
            "requestId": "id",
            "formula": "formulaName1",
            "result": {
                "values": [a,b],
                "dates": [DATE1,DATE2]
              },
            "objectType": "TIMESERIES",
            "dataType": "DOUBLE"
          },
          {
            "requestId": "id",
            "formula": "formulaName2",
            "result": {
                "values": [c,d],
                "dates": [DATE2,DATE3]
              },
            "objectType": "TIMESERIES",
            "dataType": "DOUBLE"
          }
        ]

        ```


        **flatten=Y TIMESERIES Representation**

        ```json

        [
          {
            "requestId": "id",
            "formulaName1": a,
            "formulaName2": null,
            "date": DATE1
          },
          {
            "requestId": "id",
            "formulaName1": b,
            "formulaName2": c,
            "date": DATE2
          },
          {
            "requestId": "id",
            "formulaName1": null,
            "formulaName2": d,
            "date": DATE3
          }
        ]

        ```

        ---


        Formulas that result in an array (no associated dates, ARRAY objectType
        in the standard **flatten=N** response model) can be thought of as a
        column in a table. Each element in the array will be in a separate data
        object. The first element of the array starts in the first data object
        for that requestId and then then the second element of the array in the
        second data object for that requestId and so on (regardless of dates
        from other formulas).


        **flatten=N ARRAY Representation**

        ```json

        [
          {
            "requestId": "id",
            "formula": "formulaName",
            "result": [a,b,c],
            "objectType": "ARRAY",
            "dataType": "DOUBLE"
          }
        ]

        ```


        **flatten=Y ARRAY Representation**

        ```json

        [
          {
            "requestId": "id",
            "formulaName": a,
          },
          {
            "requestId": "id",
            "formulaName": b,
          },
          {
            "requestId": "id",
            "formulaName": c,
          }
        ]

        ```

        ---

        Scalar data items (SCALAR objectType in the standard **flatten=N**
        response model) will be repeated in each data object for the requestId.


        **flatten=N SCALAR Representation**

        ```json

        [
          {
            "requestId": "id",
            "formula": "formulaName",
            "result": a,
            "objectType": "ARRAY",
            "dataType": "DOUBLE"
          }
        ]

        ```


        **flatten=Y SCALAR Representation**

        ```json

        [
          {
            "requestId": "id",
            "formulaName": a,
          }
        ]

        ```

        ---

        Formulas that result in a matrix (2 dimensional array, MATRIX objectType
        in the standard **flatten=N** response model) can be thought of as
        returning a table where each array in the array of arrays is a row in
        the table. This can be extended to the flattened result structure where
        each data object is a row in a table.  The formula will have as many
        attributes (appended by [n]) as number of columns in the matrix result.


        **flatten=N MATRIX Representation**

        ```json

        [
          {
            "requestId": "id"
            "formula": "formulaName",
            "result": [
                [a,b,c],
                [d,e,f]
              ],
            "objectType": "MATRIX",
            "dataType": "DOUBLE"
          }
        ]

        ```


        **flatten=Y MATRIX Representation**

        ```json

        [
          {
            "requestId": "id"
            "formulaName[0]": a,
            "formulaName[1]": b,
            "formulaName[2]": c
          },
          {
            "requestId": "id"
            "formulaName[0]": d,
            "formulaName[1]": e,
            "formulaName[2]": f
          }
        ]

        ```

        ---
      type: object
      properties:
        requestId:
          description: Identifier requested.
          type: string
          example: IBM-US
        fsymId:
          description: >
            The **fsymId** field returned is the FactSet Default Permanent
            Identifier for the `requestId`. For all supported `requestId` symbol
            types, the `fsymId` parameter will return the Regional Level PermId
            '-R' which identifies the security's best regional security data
            series per currency. Currently, the fsymId parameter only supports
            equities. Accepted `requestId` symbol types include all FactSet
            Permanent Identifiers types, CUSIP, SEDOL, ISIN, and Tickers.
            Further documentation can be found at this [Online Assistant
            attachment](https://oa.apps.factset.com/cms/oaAttachment/64c3213a-f415-4c27-a336-92c73a72deed/24881).
            Included only if the `fsymId` parameter is set to Y.
          type: string
          nullable: true
          example: SJY281-R
        date:
          description: Date associated with FQL formula.
          type: string
          nullable: true
          format: date
          example: '2021-10-18'
      additionalProperties:
        $ref: '#/components/schemas/UnifiedResultObjectFlattenedAddl'
      required:
        - requestId
    ErrorDetail:
      title: Error Object
      description: |
        `Error Object` is the response returned for an unsuccessful request.
      type: object
      properties:
        meta:
          type: object
        errors:
          type: array
          description: An array containing errors
          items:
            $ref: '#/components/schemas/ErrorObject'
    ErrorObject:
      type: object
      properties:
        id:
          description: Unique identifier for the request. Also known as the chain id.
          type: string
          example: 5EFCCA8940CAEA6B
          nullable: true
        code:
          description: Textual error code
          type: string
          example: notAuthenticated
          nullable: true
        title:
          description: A short, human-readable summary of the problem
          type: string
          example: >-
            There were either no, invalid, or expired credentials present in the
            request.
          nullable: true
        timestamp:
          description: timestamp in YYYY-MM-DDTHH:MM:SS.SSSZ
          type: string
          format: date-time
          example: '2020-08-01T11:09:41.918Z'
          nullable: true
    BatchDataRequest:
      title: Batch Data Request
      type: object
      required:
        - data
      properties:
        data:
          type: object
          properties:
            id:
              type: string
              format: uuid
              example: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c
              description: Batch Request identifier.
    BatchStatusResponse:
      title: Batch Status Response
      type: object
      properties:
        data:
          $ref: '#/components/schemas/BatchStatus'
    BatchStatus:
      title: Batch Status
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: the id of batch request.
          example: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c
        startTime:
          type: string
          example: '2024-09-03T09:02:15.171462Z'
          nullable: true
          format: date-time
          description: >-
            Time when the batch request is started. This is in UTC Time Zone.
            The date-time format is expressed as [YYYY-MM-DD]T[HH:MM:SS],
            following ISO 8601.
        endTime:
          type: string
          example: '2024-09-03T09:02:19.529317Z'
          nullable: true
          format: date-time
          description: >-
            Time when the batch request is ended. This is in UTC Time Zone. The
            date-time format is expressed as [YYYY-MM-DD]T[HH:MM:SS], following
            ISO 8601.
        status:
          type: string
          enum:
            - QUEUED
            - EXECUTING
            - DONE
            - FAILED
            - CANCELED
          example: QUEUED
        error:
          type: string
          nullable: true
          example: The parameter 'formulas' is required and may not be empty.
          description: Error message.
    BatchDataResponse:
      title: Batch Data Response
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/BatchData'
    BatchData:
      title: Batch Data
      description: >
        The schema for the batched result is determined by the endpoint you used
        with the _batch_ parameter.

        Please see the schema for that endpoint for the definition.
      type: object
      oneOf:
        - $ref: '#/components/schemas/CrossSectionalResultObjectNonflattened'
        - $ref: '#/components/schemas/TimeSeriesResultObjectNonflattened'
        - $ref: '#/components/schemas/UnifiedResultObjectFlattened'
    BatchListResponse:
      type: object
      properties:
        meta:
          nullable: true
          type: object
          properties:
            message:
              type: string
              example: >-
                You have no ongoing batch requests or all existing requests have
                expired.
        data:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/BatchList'
    BatchList:
      title: Batch Lists
      type: object
      properties:
        id:
          type: string
          example: cdc42135-a9b8-4fd8-9d69-73cea0c23105
          format: uuid
          description: the id of batch request.
        status:
          type: string
          example: EXECUTING
          enum:
            - QUEUED
            - EXECUTING
            - DONE
            - FAILED
            - CANCELED
        error:
          type: string
          nullable: true
          example: The expression entered for the universe parameter is invalid.
          description: Error message.
        expiration:
          type: string
          nullable: true
          format: date-time
          description: >-
            Time when the batch request will expire, which is 48 hours after the
            batch is complete. This is in UTC Time Zone. The date-time format is
            expressed as [YYYY-MM-DD]T[HH:MM:SS], following ISO 8601.
          example: '2024-09-03T09:02:15.529317Z'
  responses:
    '400':
      description: Bad Request
      headers:
        api-version:
          $ref: '#/components/headers/api-version'
        api-supported-versions:
          $ref: '#/components/headers/api-supported-versions'
        api-deprecated-versions:
          $ref: '#/components/headers/api-deprecated-versions'
        chain-id:
          $ref: '#/components/headers/chain-id'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorDetail'
          examples:
            parameterError - Missing Formulas:
              value:
                id: 5EFCCA8940CAEB6E
                code: parameterError
                title: The parameter 'formulas' is required and may not be empty.
                timeStamp: '2019-11-01 11:09:41.918'
            parameterError - Ids and Universe:
              description: >-
                The `ids` or `universe` parameter must be included. Including
                `ids` and `universe` parameters in the same request is not
                allowed.
              value:
                id: 5EFCCA8940CAEB6E
                code: parameterError
                title: Please enter either the ids or universe parameter.
                timeStamp: '2019-11-01 11:09:41.918'
            parameterError - Invalid displayName Input:
              value:
                id: 5EFCCA8940CAEB6E
                code: parameterError
                title: >-
                  The length of the list provided for the displayName parameter
                  must be equal to the number of formulas requested.
                timeStamp: '2019-11-01 11:09:41.918'
            parameterError - Invalid Universe Expression:
              value:
                id: 66CF777535CFB202
                code: parameterError
                title: >-
                  The expression entered for the universe parameter is invalid.
                  Unknown expression: {invalid expression}
                timeStamp: '2019-11-01 11:09:41.918'
            requestBodyInvalid:
              value:
                id: 5EFCCA8940CAEB6E
                code: requestBodyInvalid
                title: The request body could not be read.
                timeStamp: '2019-11-01 11:09:41.918'
            invalidCharacter:
              value:
                id: 5EFCCA8940CAEB6E
                code: invalidCharacter
                title: >-
                  The request contains an invalid character. Allowed characters
                  are Unicode code points in the ranges [0x09-0x0a],[0x0d],
                  [0x20-0x7e], [0x85], [0xa0-0xd7ff], [0xe000-0xfffd], and
                  [0x10000-0x10ffff].
                timeStamp: '2019-11-01 11:09:41.918'
    '401':
      description: Missing or invalid authentication.
      headers:
        api-version:
          $ref: '#/components/headers/api-version'
        api-supported-versions:
          $ref: '#/components/headers/api-supported-versions'
        api-deprecated-versions:
          $ref: '#/components/headers/api-deprecated-versions'
        chain-id:
          $ref: '#/components/headers/chain-id'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorDetail'
    '403':
      description: >-
        Not Authorized. This error will will occur if the user lacks the
        required permissions or if the API request is made from an IP address
        not specified in the API Key configuration.
      headers:
        api-version:
          $ref: '#/components/headers/api-version'
        api-supported-versions:
          $ref: '#/components/headers/api-supported-versions'
        api-deprecated-versions:
          $ref: '#/components/headers/api-deprecated-versions'
        chain-id:
          $ref: '#/components/headers/chain-id'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorDetail'
          example:
            id: 5EFCCA8940CAEB6E
            code: Unauthorized
            title: USERNAME-SERIAL does not have permission to use /v1/{endpoint}
            timeStamp: '2019-11-01 11:09:41.918'
    '404':
      description: Endpoint Not Found
      headers:
        api-version:
          $ref: '#/components/headers/api-version'
        api-supported-versions:
          $ref: '#/components/headers/api-supported-versions'
        api-deprecated-versions:
          $ref: '#/components/headers/api-deprecated-versions'
        chain-id:
          $ref: '#/components/headers/chain-id'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorDetail'
          example:
            id: 5EFCCA8940CAEB6E
            code: endpointNotFound
            title: '''/formula-api/v1/{invalid endpoint}'' is not a valid endpoint.'
            timeStamp: '2019-11-01 11:09:41.918'
    '405':
      description: Method Not Allowed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorDetail'
          example:
            id: 5EFCCA8940CAEB6E
            code: methodNotAllowed
            title: >-
              The HTTP method {unsupported method} is not allowed. Please
              resubmit the request using the HTTP methods GET or POST.
            timeStamp: '2019-11-01 11:09:41.918'
    '406':
      description: Bad Accept Header
      headers:
        api-version:
          $ref: '#/components/headers/api-version'
        api-supported-versions:
          $ref: '#/components/headers/api-supported-versions'
        api-deprecated-versions:
          $ref: '#/components/headers/api-deprecated-versions'
        chain-id:
          $ref: '#/components/headers/chain-id'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorDetail'
          example:
            id: 5EFCCA8940CAEB6E
            code: badAccept
            title: >-
              Accept: {unsupported Accept header} is not supported. The Accept
              header must include application/json.
            timeStamp: '2019-11-01 11:09:41.918'
    '408':
      description: >-
        Request Timeout. This error may be returned if it takes more than 29
        seconds for the request to process or if a batch request takes more than
        30 minutes to process.
      headers:
        api-version:
          $ref: '#/components/headers/api-version'
        api-supported-versions:
          $ref: '#/components/headers/api-supported-versions'
        api-deprecated-versions:
          $ref: '#/components/headers/api-deprecated-versions'
        chain-id:
          $ref: '#/components/headers/chain-id'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorDetail'
          example:
            id: 5EFCCA8940CAEB6E
            code: requestTimeout
            title: The request took too long. Try again with a smaller request.
            timeStamp: '2019-11-01 11:09:41.918'
    '413':
      description: >-
        Content Too Large. This error may be returned if the request payload
        size is too large to be processed in the alloted amount of time.
      headers:
        api-version:
          $ref: '#/components/headers/api-version'
        api-supported-versions:
          $ref: '#/components/headers/api-supported-versions'
        api-deprecated-versions:
          $ref: '#/components/headers/api-deprecated-versions'
        chain-id:
          $ref: '#/components/headers/chain-id'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorDetail'
          example:
            id: 64EA0B1B0B592002
            code: ContentTooLarge
            title: >-
              The request is too large. Please reduce the payload size or
              leverage batching to ensure successful processing.
            timeStamp: '2019-11-01 11:09:41.918'
    '415':
      description: Bad Content-Type Header
      headers:
        api-version:
          $ref: '#/components/headers/api-version'
        api-supported-versions:
          $ref: '#/components/headers/api-supported-versions'
        api-deprecated-versions:
          $ref: '#/components/headers/api-deprecated-versions'
        chain-id:
          $ref: '#/components/headers/chain-id'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorDetail'
          example:
            id: 5EFCCA8940CAEB6E
            code: badContentType
            title: >-
              Content-Type: {unsupported Content-Type} is not supported. The
              Content-Type header must include application/json
            timeStamp: '2019-11-01 11:09:41.918'
    '429':
      description: Rate Limits Exceeded
      headers:
        api-version:
          $ref: '#/components/headers/api-version'
        api-supported-versions:
          $ref: '#/components/headers/api-supported-versions'
        api-deprecated-versions:
          $ref: '#/components/headers/api-deprecated-versions'
        chain-id:
          $ref: '#/components/headers/chain-id'
        X-RateLimit-Limit-second:
          $ref: '#/components/headers/X-RateLimit-Limit-second'
        X-RateLimit-Remaining-second:
          $ref: '#/components/headers/X-RateLimit-Remaining-second'
        X-RateLimit-Limit-day:
          $ref: '#/components/headers/X-RateLimit-Limit-day'
        X-RateLimit-Remaining-day:
          $ref: '#/components/headers/X-RateLimit-Remaining-day'
        Retry-After:
          $ref: '#/components/headers/Retry-After'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorDetail'
          example:
            id: 5EFCCA8940CAEB6E
            code: toomanyrequests
            title: Rate limit is exceeded
            timeStamp: '2019-11-01 11:09:41.918'
    '500':
      description: Generic Server Error
      headers:
        api-version:
          $ref: '#/components/headers/api-version'
        api-supported-versions:
          $ref: '#/components/headers/api-supported-versions'
        api-deprecated-versions:
          $ref: '#/components/headers/api-deprecated-versions'
        chain-id:
          $ref: '#/components/headers/chain-id'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorDetail'
          example:
            id: 5EFCCA8940CAEB6E
            code: genericServerError
            title: An unexpected error happened.
            timeStamp: '2019-11-01 11:09:41.918'
    '501':
      description: Not Implemented
      headers:
        api-version:
          $ref: '#/components/headers/api-version'
        api-supported-versions:
          $ref: '#/components/headers/api-supported-versions'
        api-deprecated-versions:
          $ref: '#/components/headers/api-deprecated-versions'
        chain-id:
          $ref: '#/components/headers/chain-id'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorDetail'
          example:
            id: 5EFCCA8940CAEB6E
            code: notImplemented
            title: >-
              The requested endpoint or functionality has not been implemented
              yet.
            timeStamp: '2019-11-01 11:09:41.918'
    '503':
      description: Service Temporarily Unavailable
      headers:
        api-version:
          $ref: '#/components/headers/api-version'
        api-supported-versions:
          $ref: '#/components/headers/api-supported-versions'
        api-deprecated-versions:
          $ref: '#/components/headers/api-deprecated-versions'
        chain-id:
          $ref: '#/components/headers/chain-id'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorDetail'
          example:
            id: 5EFCCA8940CAEB6E
            code: serviceTemporarilyUnavailable
            title: >-
              Will be sent in case the requested service is currently overloaded
              or can't temporarily handle the request for some other reason.
              Clients are expected to retry the request.
            timeStamp: '2019-11-01 11:09:41.918'
  examples:
    time-series-singleId-singleItem:
      summary: Single Id and Single Data Item
      description: |
        `time-series` Request for Single Price Record for IBM
      value:
        data:
          - error: 0
            formula: P_PRICE(0)
            requestId: IBM
            result:
              values:
                - 120.77
              dates:
                - '2020-07-09'
            dataType: DOUBLE
            objectType: TIMESERIES
        meta: {}
    time-series-singleId-singleItem-fsymId:
      summary: Single Id and Single Data Item with fsymId=Y
      description: >
        `time-series` Request for Single Price Record for IBM and the fsymId for
        IBM
      value:
        data:
          - error: 0
            formula: P_PRICE(0)
            requestId: IBM
            fsymId: SJY281-R
            result:
              values:
                - 120.77
              dates:
                - '2020-07-09'
            dataType: DOUBLE
            objectType: TIMESERIES
        meta: {}
    time-series-multipleId-multipleItem:
      summary: Mutiple Ids and Multiple Data Items with SEVENDAY Calendar
      description: >
        `time-series` Request for last 3 days of Price, the Company Name, the
        last 2 years of Business Segment Data and Business Segment Labels for
        IBM, AAPL, and MSFT using a SEVENDAY trading calendar
      value:
        data:
          - error: 0
            formula: P_PRICE(0,-2D,D)
            requestId: IBM
            result:
              dates:
                - '2021-01-18'
                - '2021-01-17'
                - '2021-01-16'
              values:
                - 128.39
                - 128.39
                - 128.39
            dataType: DOUBLE
            objectType: TIMESERIES
          - error: 0
            formula: FG_COMPANY_NAME
            requestId: IBM
            result: International Business Machines Corporation
            dataType: STRING
            objectType: SCALAR
          - error: 0
            formula: FF_SEGMENT_RPT_LABELS(ANN_R,0,-1AY,,,,BUS,"SEG")
            requestId: IBM
            result:
              - ''
              - Global Technology Services
              - Cloud & Cognitive Software
              - Global Business Services
              - Systems
              - Global Financing
              - Other
            dataType: STRING
            objectType: ARRAY
          - error: 0
            formula: FF_SEGMENT_RPT_DATA(ANN_R,0,-1AY,,,"SALES",,BUS,"SEG")
            requestId: IBM
            result:
              - 20191231
              - 20181231
              - 27361
              - 29146
              - 23200
              - 22209
              - 16634
              - 16595
              - 7604
              - 8034
              - 1400
              - 1590
              - 948
              - 2017
            dataType: DOUBLE
            objectType: MATRIX
          - error: 0
            formula: P_PRICE(0,-2D,D)
            requestId: AAPL
            result:
              dates:
                - '2021-01-18'
                - '2021-01-17'
                - '2021-01-16'
              values:
                - 127.14
                - 127.14
                - 127.14
            dataType: DOUBLE
            objectType: TIMESERIES
          - error: 0
            formula: FG_COMPANY_NAME
            requestId: AAPL
            result: Apple Inc.
            dataType: STRING
            objectType: SCALAR
          - error: 0
            formula: FF_SEGMENT_RPT_LABELS(ANN_R,0,-1AY,,,,BUS,"SEG")
            requestId: AAPL
            result:
              - ''
              - iPhone
              - Services
              - Wearables, Home & Accessories
              - Mac
              - iPad
            dataType: STRING
            objectType: ARRAY
          - error: 0
            formula: FF_SEGMENT_RPT_DATA(ANN_R,0,-1AY,,,"SALES",,BUS,"SEG")
            requestId: AAPL
            result:
              - 20200930
              - 20190930
              - 137781
              - 142381
              - 53768
              - 46291
              - 30620
              - 24482
              - 28622
              - 25740
              - 23724
              - 21280
            dataType: DOUBLE
            objectType: MATRIX
          - error: 0
            formula: P_PRICE(0,-2D,D)
            requestId: MSFT
            result:
              dates:
                - '2021-01-18'
                - '2021-01-17'
                - '2021-01-16'
              values:
                - 212.65
                - 212.65
                - 212.65
            dataType: DOUBLE
            objectType: TIMESERIES
          - error: 0
            formula: FG_COMPANY_NAME
            requestId: MSFT
            result: Microsoft Corporation
            dataType: STRING
            objectType: SCALAR
          - error: 0
            formula: FF_SEGMENT_RPT_LABELS(ANN_R,0,-1AY,,,,BUS,"SEG")
            requestId: MSFT
            result:
              - ''
              - Intelligent Cloud
              - More Personal Computing
              - Productivity & Business Processes
            dataType: STRING
            objectType: ARRAY
          - error: 0
            formula: FF_SEGMENT_RPT_DATA(ANN_R,0,-1AY,,,"SALES",,BUS,"SEG")
            requestId: MSFT
            result:
              - 20200630
              - 20190630
              - 48366
              - 38985
              - 48251
              - 45698
              - 46398
              - 41160
            dataType: DOUBLE
            objectType: MATRIX
        meta: {}
    time-series-multipleId-multipleItem-flatten:
      summary: Mutiple Ids and Multiple Data Items with flatten=Y
      description: >
        `time-series` Request for Flattened Response Model for the last 3 days
        of Price Open, Price Close, and the Company Name for IBM, AAPL, and MSFT
      value:
        data:
          - requestId: IBM
            P_PRICE_OPEN(0,-2,D): 134.57
            date: '2021-04-08'
            P_PRICE(0,-2,D): 135.12
            FG_COMPANY_NAME: International Business Machines Corporation
          - requestId: IBM
            P_PRICE_OPEN(0,-2,D): 133.84
            date: '2021-04-07'
            P_PRICE(0,-2,D): 134.93
            FG_COMPANY_NAME: International Business Machines Corporation
          - requestId: IBM
            P_PRICE_OPEN(0,-2,D): 135.58
            date: '2021-04-06'
            P_PRICE(0,-2,D): 134.22
            FG_COMPANY_NAME: International Business Machines Corporation
          - requestId: AAPL
            P_PRICE_OPEN(0,-2,D): 128.95
            date: '2021-04-08'
            P_PRICE(0,-2,D): 130.36
            FG_COMPANY_NAME: Apple Inc.
          - requestId: AAPL
            P_PRICE_OPEN(0,-2,D): 125.83
            date: '2021-04-07'
            P_PRICE(0,-2,D): 127.9
            FG_COMPANY_NAME: Apple Inc.
          - requestId: AAPL
            P_PRICE_OPEN(0,-2,D): 126.5
            date: '2021-04-06'
            P_PRICE(0,-2,D): 126.21
            FG_COMPANY_NAME: Apple Inc.
          - requestId: MSFT
            P_PRICE_OPEN(0,-2,D): 252.77
            date: '2021-04-08'
            P_PRICE(0,-2,D): 253.25
            FG_COMPANY_NAME: Microsoft Corporation
          - requestId: MSFT
            P_PRICE_OPEN(0,-2,D): 247.81
            date: '2021-04-07'
            P_PRICE(0,-2,D): 249.9
            FG_COMPANY_NAME: Microsoft Corporation
          - requestId: MSFT
            P_PRICE_OPEN(0,-2,D): 247.61
            date: '2021-04-06'
            P_PRICE(0,-2,D): 247.86
            FG_COMPANY_NAME: Microsoft Corporation
    time-series-multipleId-multipleCalculatedItem:
      summary: Mutiple Ids and Multiple Calculated Data Items
      description: >
        `time-series` Request to retrieve your own P/E ratio calculation from
        the last trading day of the company's most recent fiscal year, the
        percentage of revenue exposure in the US and Japan for the same date as
        the first data item, and indicator of whether the average daily price
        change over the company's most recent fiscal year was postive or
        negative for IBM,FDS, and MSFT.
      value:
        data:
          - error: 0
            formula: P_PRICE(0Y)/FF_EPS(ANN_R,0Y)
            requestId: IBM
            result: 12.6893365646774
            dataType: DOUBLE
            objectType: SCALAR
          - error: 0
            formula: >-
              FF_GEOREV_COUNTRY_PCT("840",ANN,0,,,RF)+FF_GEOREV_COUNTRY_PCT("392",ANN,0,,,RF)
            requestId: IBM
            result: 48.0589
            dataType: DOUBLE
            objectType: SCALAR
          - error: 0
            formula: IF(AVG(P_PRICE_CHANGE(0Y,-1Y,D,USD))>0,"POSITIVE","NEGATIVE")
            requestId: IBM
            result: POSITIVE
            dataType: STRING
            objectType: SCALAR
          - error: 0
            formula: P_PRICE(0Y)/FF_EPS(ANN_R,0Y)
            requestId: AAPL
            result: 35.3575135861269
            dataType: DOUBLE
            objectType: SCALAR
          - error: 0
            formula: >-
              FF_GEOREV_COUNTRY_PCT("840",ANN,0,,,RF)+FF_GEOREV_COUNTRY_PCT("392",ANN,0,,,RF)
            requestId: AAPL
            result: 47.580278
            dataType: DOUBLE
            objectType: SCALAR
          - error: 0
            formula: IF(AVG(P_PRICE_CHANGE(0Y,-1Y,D,USD))>0,"POSITIVE","NEGATIVE")
            requestId: AAPL
            result: POSITIVE
            dataType: STRING
            objectType: SCALAR
          - error: 0
            formula: P_PRICE(0Y)/FF_EPS(ANN_R,0Y)
            requestId: MSFT
            result: 35.3101414071311
            dataType: DOUBLE
            objectType: SCALAR
          - error: 0
            formula: >-
              FF_GEOREV_COUNTRY_PCT("840",ANN,0,,,RF)+FF_GEOREV_COUNTRY_PCT("392",ANN,0,,,RF)
            requestId: MSFT
            result: 54.971108
            dataType: DOUBLE
            objectType: SCALAR
          - error: 0
            formula: IF(AVG(P_PRICE_CHANGE(0Y,-1Y,D,USD))>0,"POSITIVE","NEGATIVE")
            requestId: MSFT
            result: POSITIVE
            dataType: STRING
            objectType: SCALAR
        meta: {}
    time-series-smallUniv-singleItem:
      summary: Small Universe and Single Data Item
      description: >-
        `time-series` Request for the last 4 quarters of sales for each S&P 500
        constituent with a price less than 10 USD
      value:
        data:
          - error: 0
            formula: FF_SALES(QTR_R,0,-3,FQ)
            requestId: 25179M10
            result:
              values:
                - 162
                - 1266
                - 1705
                - 1720
              dates:
                - '2020-06-30'
                - '2020-03-31'
                - '2019-12-31'
                - '2019-09-30'
            dataType: DOUBLE
            objectType: TIMESERIES
          - error: 0
            formula: FF_SALES(QTR_R,0,-3,FQ)
            requestId: '56584910'
            result:
              values:
                - 490
                - 1024
                - 1233
                - 1249
              dates:
                - '2020-06-30'
                - '2020-03-31'
                - '2019-12-31'
                - '2019-09-30'
            dataType: DOUBLE
            objectType: TIMESERIES
          - error: 0
            formula: FF_SALES(QTR_R,0,-3,FQ)
            requestId: '63707110'
            result:
              values:
                - 1496
                - 1883
                - 2281
                - 2126
              dates:
                - '2020-06-30'
                - '2020-03-31'
                - '2019-12-31'
                - '2019-09-30'
            dataType: DOUBLE
            objectType: TIMESERIES
          - error: 0
            formula: FF_SALES(QTR_R,0,-3,FQ)
            requestId: '36960410'
            result:
              values:
                - 17830
                - 21066
                - 26159
                - 23493
              dates:
                - '2020-06-30'
                - '2020-03-31'
                - '2019-12-31'
                - '2019-09-30'
            dataType: DOUBLE
            objectType: TIMESERIES
          - error: 0
            formula: FF_SALES(QTR_R,0,-3,FQ)
            requestId: '44615010'
            result:
              values:
                - 1265
                - 1187
                - 1364
                - 1372
              dates:
                - '2020-06-30'
                - '2020-03-31'
                - '2019-12-31'
                - '2019-09-30'
            dataType: DOUBLE
            objectType: TIMESERIES
          - error: 0
            formula: FF_SALES(QTR_R,0,-3,FQ)
            requestId: '34537086'
            result:
              values:
                - 19371
                - 34320
                - 39715
                - 36990
              dates:
                - '2020-06-30'
                - '2020-03-31'
                - '2019-12-31'
                - '2019-09-30'
            dataType: DOUBLE
            objectType: TIMESERIES
          - error: 0
            formula: FF_SALES(QTR_R,0,-3,FQ)
            requestId: '03741110'
            result:
              values:
                - 752
                - 1344
                - 1625
                - 1438
              dates:
                - '2020-06-30'
                - '2020-03-31'
                - '2019-12-31'
                - '2019-09-30'
            dataType: DOUBLE
            objectType: TIMESERIES
          - error: 0
            formula: FF_SALES(QTR_R,0,-3,FQ)
            requestId: 42824C10
            result:
              values:
                - 6793
                - 5961
                - 6923
                - 7150
              dates:
                - '2020-07-31'
                - '2020-04-30'
                - '2020-01-31'
                - '2019-10-31'
            dataType: DOUBLE
            objectType: TIMESERIES
          - error: 0
            formula: FF_SALES(QTR_R,0,-3,FQ)
            requestId: G8711010
            result:
              values:
                - 3170.1000000379
                - 3140.30000000431
                - 3739.10000004292
                - 3335.7000000242
              dates:
                - '2020-06-30'
                - '2020-03-31'
                - '2019-12-31'
                - '2019-09-30'
            dataType: DOUBLE
            objectType: TIMESERIES
        meta: {}
    time-series-debtUniv-multipleItem:
      summary: Debt Universe and Multiple Debt Data Items
      description: >
        `time-series` Request for the issuer name and amount out for all debt
        instruments for the Starbucks Corporation
      value:
        data:
          - error: 0
            formula: FI_NAME(ISSR)
            requestId: 855244AD
            result: Starbucks Corporation
            dataType: STRING
            objectType: SCALAR
          - error: 0
            formula: FI_AMOUNT_OUT(AMT,0)
            requestId: 855244AD
            result: 750
            dataType: DOUBLE
            objectType: SCALAR
          - error: 0
            formula: FI_NAME(ISSR)
            requestId: 855244AG
            result: Starbucks Corporation
            dataType: STRING
            objectType: SCALAR
          - error: 0
            formula: FI_AMOUNT_OUT(AMT,0)
            requestId: 855244AG
            result: 500
            dataType: DOUBLE
            objectType: SCALAR
          - error: 0
            formula: FI_NAME(ISSR)
            requestId: 855244AH
            result: Starbucks Corporation
            dataType: STRING
            objectType: SCALAR
          - error: 0
            formula: FI_AMOUNT_OUT(AMT,0)
            requestId: 855244AH
            result: 350
            dataType: DOUBLE
            objectType: SCALAR
          - error: 0
            formula: FI_NAME(ISSR)
            requestId: 855244AJ
            result: Starbucks Corporation
            dataType: STRING
            objectType: SCALAR
          - error: 0
            formula: FI_AMOUNT_OUT(AMT,0)
            requestId: 855244AJ
            result: 750
            dataType: DOUBLE
            objectType: SCALAR
          - error: 0
            formula: FI_NAME(ISSR)
            requestId: 855244AK
            result: Starbucks Corporation
            dataType: STRING
            objectType: SCALAR
          - error: 0
            formula: FI_AMOUNT_OUT(AMT,0)
            requestId: 855244AK
            result: 500
            dataType: DOUBLE
            objectType: SCALAR
          - error: 0
            formula: FI_NAME(ISSR)
            requestId: 855244AM
            result: Starbucks Corporation
            dataType: STRING
            objectType: SCALAR
          - error: 0
            formula: FI_AMOUNT_OUT(AMT,0)
            requestId: 855244AM
            result: 500
            dataType: DOUBLE
            objectType: SCALAR
          - error: 0
            formula: FI_NAME(ISSR)
            requestId: 855244AN
            result: Starbucks Corporation
            dataType: STRING
            objectType: SCALAR
          - error: 0
            formula: FI_AMOUNT_OUT(AMT,0)
            requestId: 855244AN
            result: 1000
            dataType: DOUBLE
            objectType: SCALAR
          - error: 0
            formula: FI_NAME(ISSR)
            requestId: 855244AP
            result: Starbucks Corporation
            dataType: STRING
            objectType: SCALAR
          - error: 0
            formula: FI_AMOUNT_OUT(AMT,0)
            requestId: 855244AP
            result: 600
            dataType: DOUBLE
            objectType: SCALAR
          - error: 0
            formula: FI_NAME(ISSR)
            requestId: 855244AQ
            result: Starbucks Corporation
            dataType: STRING
            objectType: SCALAR
          - error: 0
            formula: FI_AMOUNT_OUT(AMT,0)
            requestId: 855244AQ
            result: 1250
            dataType: DOUBLE
            objectType: SCALAR
          - error: 0
            formula: FI_NAME(ISSR)
            requestId: 855244AR
            result: Starbucks Corporation
            dataType: STRING
            objectType: SCALAR
          - error: 0
            formula: FI_AMOUNT_OUT(AMT,0)
            requestId: 855244AR
            result: 750
            dataType: DOUBLE
            objectType: SCALAR
          - error: 0
            formula: FI_NAME(ISSR)
            requestId: 855244AS
            result: Starbucks Corporation
            dataType: STRING
            objectType: SCALAR
          - error: 0
            formula: FI_AMOUNT_OUT(AMT,0)
            requestId: 855244AS
            result: 1000
            dataType: DOUBLE
            objectType: SCALAR
          - error: 0
            formula: FI_NAME(ISSR)
            requestId: 855244AT
            result: Starbucks Corporation
            dataType: STRING
            objectType: SCALAR
          - error: 0
            formula: FI_AMOUNT_OUT(AMT,0)
            requestId: 855244AT
            result: 1000
            dataType: DOUBLE
            objectType: SCALAR
          - error: 0
            formula: FI_NAME(ISSR)
            requestId: 855244AU
            result: Starbucks Corporation
            dataType: STRING
            objectType: SCALAR
          - error: 0
            formula: FI_AMOUNT_OUT(AMT,0)
            requestId: 855244AU
            result: 1000
            dataType: DOUBLE
            objectType: SCALAR
          - error: 0
            formula: FI_NAME(ISSR)
            requestId: 855244AV
            result: Starbucks Corporation
            dataType: STRING
            objectType: SCALAR
          - error: 0
            formula: FI_AMOUNT_OUT(AMT,0)
            requestId: 855244AV
            result: 500
            dataType: DOUBLE
            objectType: SCALAR
          - error: 0
            formula: FI_NAME(ISSR)
            requestId: 855244AW
            result: Starbucks Corporation
            dataType: STRING
            objectType: SCALAR
          - error: 0
            formula: FI_AMOUNT_OUT(AMT,0)
            requestId: 855244AW
            result: 750
            dataType: DOUBLE
            objectType: SCALAR
          - error: 0
            formula: FI_NAME(ISSR)
            requestId: 855244AX
            result: Starbucks Corporation
            dataType: STRING
            objectType: SCALAR
          - error: 0
            formula: FI_AMOUNT_OUT(AMT,0)
            requestId: 855244AX
            result: 500
            dataType: DOUBLE
            objectType: SCALAR
          - error: 0
            formula: FI_NAME(ISSR)
            requestId: 855244AY
            result: Starbucks Corporation
            dataType: STRING
            objectType: SCALAR
          - error: 0
            formula: FI_AMOUNT_OUT(AMT,0)
            requestId: 855244AY
            result: 500
            dataType: DOUBLE
            objectType: SCALAR
          - error: 0
            formula: FI_NAME(ISSR)
            requestId: 855244AZ
            result: Starbucks Corporation
            dataType: STRING
            objectType: SCALAR
          - error: 0
            formula: FI_AMOUNT_OUT(AMT,0)
            requestId: 855244AZ
            result: 1250
            dataType: DOUBLE
            objectType: SCALAR
          - error: 0
            formula: FI_NAME(ISSR)
            requestId: 855244BA
            result: Starbucks Corporation
            dataType: STRING
            objectType: SCALAR
          - error: 0
            formula: FI_AMOUNT_OUT(AMT,0)
            requestId: 855244BA
            result: 1250
            dataType: DOUBLE
            objectType: SCALAR
          - error: 0
            formula: FI_NAME(ISSR)
            requestId: U8547PAA
            result: Starbucks Corporation
            dataType: STRING
            objectType: SCALAR
          - error: 0
            formula: FI_AMOUNT_OUT(AMT,0)
            requestId: U8547PAA
            result: 85000
            dataType: DOUBLE
            objectType: SCALAR
          - error: 0
            formula: FI_NAME(ISSR)
            requestId: FDS01U70
            result: Starbucks Corporation
            dataType: STRING
            objectType: SCALAR
          - error: 0
            formula: FI_AMOUNT_OUT(AMT,0)
            requestId: FDS01U70
            result: 0
            dataType: DOUBLE
            objectType: SCALAR
          - error: 0
            formula: FI_NAME(ISSR)
            requestId: FDS02JIW
            result: Starbucks Corporation
            dataType: STRING
            objectType: SCALAR
          - error: 0
            formula: FI_AMOUNT_OUT(AMT,0)
            requestId: FDS02JIW
            result: 0
            dataType: DOUBLE
            objectType: SCALAR
          - error: 0
            formula: FI_NAME(ISSR)
            requestId: FDS0F9W5
            result: Starbucks Corporation
            dataType: STRING
            objectType: SCALAR
          - error: 0
            formula: FI_AMOUNT_OUT(AMT,0)
            requestId: FDS0F9W5
            result: 0
            dataType: DOUBLE
            objectType: SCALAR
          - error: 0
            formula: FI_NAME(ISSR)
            requestId: FDS0QANF
            result: Starbucks Corporation
            dataType: STRING
            objectType: SCALAR
          - error: 0
            formula: FI_AMOUNT_OUT(AMT,0)
            requestId: FDS0QANF
            result: 0
            dataType: DOUBLE
            objectType: SCALAR
          - error: 0
            formula: FI_NAME(ISSR)
            requestId: FDS1B17O
            result: Starbucks Corporation
            dataType: STRING
            objectType: SCALAR
          - error: 0
            formula: FI_AMOUNT_OUT(AMT,0)
            requestId: FDS1B17O
            result: 0
            dataType: DOUBLE
            objectType: SCALAR
          - error: 0
            formula: FI_NAME(ISSR)
            requestId: FDSA82FD
            result: Starbucks Corporation
            dataType: STRING
            objectType: SCALAR
          - error: 0
            formula: FI_AMOUNT_OUT(AMT,0)
            requestId: FDSA82FD
            result: 0
            dataType: DOUBLE
            objectType: SCALAR
          - error: 0
            formula: FI_NAME(ISSR)
            requestId: FDSB0FB5
            result: Starbucks Corporation
            dataType: STRING
            objectType: SCALAR
          - error: 0
            formula: FI_AMOUNT_OUT(AMT,0)
            requestId: FDSB0FB5
            result: 0
            dataType: DOUBLE
            objectType: SCALAR
          - error: 0
            formula: FI_NAME(ISSR)
            requestId: 855244AA
            result: Starbucks Corporation
            dataType: STRING
            objectType: SCALAR
          - error: 0
            formula: FI_AMOUNT_OUT(AMT,0)
            requestId: 855244AA
            result: 0
            dataType: DOUBLE
            objectType: SCALAR
          - error: 0
            formula: FI_NAME(ISSR)
            requestId: 855244AB
            result: Starbucks Corporation
            dataType: STRING
            objectType: SCALAR
          - error: 0
            formula: FI_AMOUNT_OUT(AMT,0)
            requestId: 855244AB
            result: 0
            dataType: DOUBLE
            objectType: SCALAR
          - error: 0
            formula: FI_NAME(ISSR)
            requestId: 855244AC
            result: Starbucks Corporation
            dataType: STRING
            objectType: SCALAR
          - error: 0
            formula: FI_AMOUNT_OUT(AMT,0)
            requestId: 855244AC
            result: 0
            dataType: DOUBLE
            objectType: SCALAR
          - error: 0
            formula: FI_NAME(ISSR)
            requestId: 855244AE
            result: Starbucks Corporation
            dataType: STRING
            objectType: SCALAR
          - error: 0
            formula: FI_AMOUNT_OUT(AMT,0)
            requestId: 855244AE
            result: 0
            dataType: DOUBLE
            objectType: SCALAR
          - error: 0
            formula: FI_NAME(ISSR)
            requestId: 855244AF
            result: Starbucks Corporation
            dataType: STRING
            objectType: SCALAR
          - error: 0
            formula: FI_AMOUNT_OUT(AMT,0)
            requestId: 855244AF
            result: 0
            dataType: DOUBLE
            objectType: SCALAR
          - error: 0
            formula: FI_NAME(ISSR)
            requestId: 855244AL
            result: Starbucks Corporation
            dataType: STRING
            objectType: SCALAR
          - error: 0
            formula: FI_AMOUNT_OUT(AMT,0)
            requestId: 855244AL
            result: 0
            dataType: DOUBLE
            objectType: SCALAR
          - error: 0
            formula: FI_NAME(ISSR)
            requestId: FDS0QARA
            result: Starbucks Corporation
            dataType: STRING
            objectType: SCALAR
          - error: 0
            formula: FI_AMOUNT_OUT(AMT,0)
            requestId: FDS0QARA
            result: 0
            dataType: DOUBLE
            objectType: SCALAR
          - error: 0
            formula: FI_NAME(ISSR)
            requestId: FDS0VUVD
            result: Starbucks Corporation
            dataType: STRING
            objectType: SCALAR
          - error: 0
            formula: FI_AMOUNT_OUT(AMT,0)
            requestId: FDS0VUVD
            result: 0
            dataType: DOUBLE
            objectType: SCALAR
        meta: {}
    cross-sectional-singleId-singleItem:
      summary: Single Equity Id and Single Equity Data Item
      description: |
        `cross-sectional` Request for Single Price Record for IBM
      value:
        data:
          - dataItemName: requestId
            result:
              - IBM
            dataType: STRING
            error: 0
          - dataItemName: P_PRICE(0)
            result:
              - 120.77
            dataType: DOUBLE
            error: 0
        meta: {}
    cross-sectional-singleId-singleItem-fsymId:
      summary: Single Equity Id and Single Equity Data Item with fsymId=Y
      description: >
        `cross-sectional` Request for Single Price Record for IBM and the fsymId
        for IBM
      value:
        data:
          - dataItemName: requestId
            result:
              - IBM
            dataType: STRING
            error: 0
          - dataItemName: P_PRICE(0)
            result:
              - 120.77
            dataType: DOUBLE
            error: 0
          - dataItemName: fsymId
            result:
              - SJY281-R
            dataType: STRING
            error: 0
        meta: {}
    cross-sectional-multipleId-multipleItem:
      summary: Mutiple Equity Ids and Multiple Equity Data Items
      description: >
        `cross-sectional` Request for last fiscal year's sales, the name of the
        company, the price for the last completed trading day, and last fiscal
        year's total assets for the requested 7 identifiers
      value:
        data:
          - dataItemName: requestId
            result:
              - IBM
              - FDS
              - GE
              - GOOG
              - AAPL
              - MSFT
              - TSLA
            dataType: STRING
            error: 0
          - dataItemName: FF_SALES(ANN_R,0)
            result:
              - 77147
              - 1494.111
              - 95055
              - 161402
              - 259968
              - 143015
              - 24578
            dataType: DOUBLE
            error: 0
          - dataItemName: PROPER_NAME(0,SECURITY,NAME)
            result:
              - International Business Machines Corporation
              - FactSet Research Systems Inc.
              - General Electric Company
              - Alphabet Inc. Class C
              - Apple Inc.
              - Microsoft Corporation
              - Tesla Inc
            dataType: STRING
            error: 0
          - dataItemName: P_PRICE(0)
            result:
              - 125.52
              - 333.93
              - 7.29
              - 1534.61
              - 115.98
              - 214.22
              - 430.83
            dataType: DOUBLE
            error: 0
          - dataItemName: FF_ASSETS(ANN_R,0)
            result:
              - 152186
              - 2083.388
              - 274090
              - 275909
              - 338516
              - 301311
              - 34309
            dataType: DOUBLE
            error: 0
        meta: {}
    cross-sectional-multipleId-multipleItem-flatten:
      summary: Mutiple Equity Ids and Multiple Equity Data Items with flatten=Y
      description: >
        `cross-sectional` Request for last fiscal year's sales, the name of the
        company, the price for the last completed trading day, and last fiscal
        year's total assets for the requested 7 identifiers
      value:
        data:
          - requestId: IBM
            FF_SALES(ANN_R,0): 73620
            PROPER_NAME(0,SECURITY,NAME): International Business Machines Corporation
            P_PRICE(0): 134.93
            FF_ASSETS(ANN_R,0): 155971
          - requestId: FDS
            FF_SALES(ANN_R,0): 1494.111
            PROPER_NAME(0,SECURITY,NAME): FactSet Research Systems Inc.
            P_PRICE(0): 309.36
            FF_ASSETS(ANN_R,0): 2083.388
          - requestId: GE
            FF_SALES(ANN_R,0): 79893
            PROPER_NAME(0,SECURITY,NAME): General Electric Company
            P_PRICE(0): 13.39
            FF_ASSETS(ANN_R,0): 255050
          - requestId: GOOG
            FF_SALES(ANN_R,0): 182350
            PROPER_NAME(0,SECURITY,NAME): Alphabet Inc. Class C
            P_PRICE(0): 2249.68
            FF_ASSETS(ANN_R,0): 319616
          - requestId: AAPL
            FF_SALES(ANN_R,0): 274150
            PROPER_NAME(0,SECURITY,NAME): Apple Inc.
            P_PRICE(0): 127.9
            FF_ASSETS(ANN_R,0): 323888
          - requestId: MSFT
            FF_SALES(ANN_R,0): 143015
            PROPER_NAME(0,SECURITY,NAME): Microsoft Corporation
            P_PRICE(0): 249.9
            FF_ASSETS(ANN_R,0): 301311
          - requestId: TSLA
            FF_SALES(ANN_R,0): 31536
            PROPER_NAME(0,SECURITY,NAME): Tesla Inc
            P_PRICE(0): 670.97
            FF_ASSETS(ANN_R,0): 52148
    cross-sectional-multipleId-multipleCalculatedItem:
      summary: Mutiple Ids and Multiple Calculated Equity Data Items
      description: >
        `cross-sectional` Request for to retrieve your own P/E ratio calculation
        from the last trading day of the company's most recent fiscal year, the
        percentage of revenue exposure in the US and Japan for the same date as
        the first data item, and indicator of indicate whether the latest fiscal
        year's sales were higher or lower than the previous year's sales for
        IBM, FDS, GE, GOOG, AAPL, MSFT, and TSLA
      value:
        data:
          - dataItemName: requestId
            result:
              - IBM
              - FDS
              - GE
              - GOOG
              - AAPL
              - MSFT
              - TSLA
            dataType: STRING
            error: 0
          - dataItemName: P_PRICE(0Y)/FF_EPS(ANN_R,0Y)
            result:
              - 12.3145
              - 33.9323
              - -388.737
              - 38.3806
              - 40.3096
              - 38.9243
              - -873.152
            dataType: DOUBLE
            error: 0
          - dataItemName: >-
              FF_GEOREV_COUNTRY_PCT(840,ANN,0,RF)+FF_GEOREV_COUNTRY_PCT(392,ANN,0,RF)
            result:
              - 48.0589
              - 60.992432
              - 46.614087
              - 49.366951
              - 47.580278
              - 54.971108
              - 54.065827
            dataType: DOUBLE
            error: 0
          - dataItemName: IF(FF_SALES(ANN_R,0)>FF_SALES(ANN_R,-1),"HIGHER","LOWER")
            result:
              - LOWER
              - HIGHER
              - LOWER
              - HIGHER
              - HIGHER
              - HIGHER
              - HIGHER
            dataType: STRING
            error: 0
        meta: {}
    cross-sectional-multipleFixedIncomeId-multipleItem:
      summary: Mutiple Fixed Income Ids and Multiple Fixed Income Data Items
      description: >
        `cross-sectional` Request for the name of the issuer and the amount
        outstanding for the requested 2 fixed income identifiers
      value:
        data:
          - dataItemName: requestId
            result:
              - U88803AB
              - 00138GAC
            dataType: STRING
            error: 0
          - dataItemName: FI_NAME(ISSR)
            result:
              - 21st Century Fox America, Inc.
              - AIG Life Holdings, Inc.
            dataType: STRING
            error: 0
          - dataItemName: FI_AMOUNT_OUT(AMT,0,USD)
            result:
              - 0.2,
              - 212
            dataType: DOUBLE
            error: 0
        meta: {}
    cross-sectional-smallUniv-singleItem:
      summary: Small Equity Universe and Single Equity Data Item
      description: >
        `cross-sectional` Request for the company name for each S&P 500
        constituent with a price less than 10 USD
      value:
        data:
          - universe: (FG_CONSTITUENTS(SP50,0,CLOSE) AND P_PRICE(0,USD)<10)=1
            dataItemName: requestId
            result:
              - '56584910'
              - '63707110'
              - '36960410'
              - '44615010'
              - '34537086'
              - '03741110'
              - 42824C10
              - G8711010
            dataType: STRING
            error: 0
          - dataItemName: FG_COMPANY_NAME
            result:
              - Marathon Oil Corporation
              - National Oilwell Varco, Inc.
              - General Electric Company
              - Huntington Bancshares Incorporated
              - Ford Motor Company
              - Apache Corporation
              - Hewlett Packard Enterprise Co.
              - TechnipFMC Plc
            dataType: STRING
            error: 0
        meta: {}
    cross-sectional-debtUniv-multipleItem:
      summary: Debt Universe and Multiple Debt Data Items
      description: >
        `cross-sectional` Request for the issuer name and amount out for all
        debt instruments for the Starbucks Corporation
      value:
        data:
          - dataItemName: requestId
            result:
              - 855244AD
              - 855244AG
              - 855244AH
              - 855244AJ
              - 855244AK
              - 855244AM
              - 855244AN
              - 855244AP
              - 855244AQ
              - 855244AR
              - 855244AS
              - 855244AT
              - 855244AU
              - 855244AV
              - 855244AW
              - 855244AX
              - 855244AY
              - 855244AZ
              - 855244BA
              - U8547PAA
              - FDS01U70
              - FDS02JIW
              - FDS0F9W5
              - FDS0QANF
              - FDS1B17O
              - FDSA82FD
              - FDSB0FB5
              - 855244AA
              - 855244AB
              - 855244AC
              - 855244AE
              - 855244AF
              - 855244AL
              - FDS0QARA
              - FDS0VUVD
            dataType: STRING
            universe: EQUITY(P_SYMBOL)="SBUX-US"
            error: 0
          - dataItemName: FI_NAME(ISSR)
            result:
              - Starbucks Corporation
              - Starbucks Corporation
              - Starbucks Corporation
              - Starbucks Corporation
              - Starbucks Corporation
              - Starbucks Corporation
              - Starbucks Corporation
              - Starbucks Corporation
              - Starbucks Corporation
              - Starbucks Corporation
              - Starbucks Corporation
              - Starbucks Corporation
              - Starbucks Corporation
              - Starbucks Corporation
              - Starbucks Corporation
              - Starbucks Corporation
              - Starbucks Corporation
              - Starbucks Corporation
              - Starbucks Corporation
              - Starbucks Corporation
              - Starbucks Corporation
              - Starbucks Corporation
              - Starbucks Corporation
              - Starbucks Corporation
              - Starbucks Corporation
              - Starbucks Corporation
              - Starbucks Corporation
              - Starbucks Corporation
              - Starbucks Corporation
              - Starbucks Corporation
              - Starbucks Corporation
              - Starbucks Corporation
              - Starbucks Corporation
              - Starbucks Corporation
              - Starbucks Corporation
            dataType: STRING
            error: 0
          - dataItemName: FI_AMOUNT_OUT(AMT,0,USD)
            result:
              - 750
              - 500
              - 350
              - 750
              - 500
              - 500
              - 1000
              - 600
              - 1250
              - 750
              - 1000
              - 1000
              - 1000
              - 500
              - 750
              - 500
              - 500
              - 1250
              - 1250
              - 815.699808132134
              - null
              - null
              - null
              - null
              - null
              - null
              - null
              - 0
              - 0
              - 0
              - 0
              - 0
              - 0
              - null
              - null
            dataType: DOUBLE
            error: 0
        meta: {}
    cross-sectional-ICSF-singleItem-nonflatten:
      summary: Single ID and Multiple Dates using ICSF with flatten = N
      description: >
        `Iterated Cross-Sectional Functionality` Request for the monthly price
        of Netflix Inc. for the year of 2022.
      value:
        data:
          - dataItemName: requestId
            result:
              - NFLX-USA
              - NFLX-USA
              - NFLX-USA
              - NFLX-USA
              - NFLX-USA
              - NFLX-USA
              - NFLX-USA
              - NFLX-USA
              - NFLX-USA
              - NFLX-USA
              - NFLX-USA
              - NFLX-USA
            dataType: STRING
            error: 0
          - dataItemName: P_PRICE(0)
            result:
              - 427.14
              - 394.52
              - 374.59
              - 190.36
              - 197.44
              - 174.87
              - 224.9
              - 223.56
              - 235.44
              - 291.88
              - 305.53
              - 294.88
            dataType: DOUBLE
            error: 0
          - dataItemName: PROPER_NAME
            result:
              - Netflix, Inc.
              - Netflix, Inc.
              - Netflix, Inc.
              - Netflix, Inc.
              - Netflix, Inc.
              - Netflix, Inc.
              - Netflix, Inc.
              - Netflix, Inc.
              - Netflix, Inc.
              - Netflix, Inc.
              - Netflix, Inc.
              - Netflix, Inc.
            dataType: STRING
            error: 0
          - dataItemName: date
            result:
              - '2022-01-31'
              - '2022-02-28'
              - '2022-03-31'
              - '2022-04-29'
              - '2022-05-31'
              - '2022-06-30'
              - '2022-07-29'
              - '2022-08-31'
              - '2022-09-30'
              - '2022-10-31'
              - '2022-11-30'
              - '2022-12-30'
            dataType: STRING
            error: 0
        meta: {}
    cross-sectional-ICSF-multipleItem-Flatten:
      summary: Multiple IDs and Multiple Dates using ICSF with flatten = Y
      description: >
        `Iterated Cross-Sectional Functionality` Request for the weekly sales of
        Netflix Inc., Walt Disney Company, and Warner Bros. Discovery Inc. for
        the month of March 2020.
      value:
        data:
          - requestId: NFLX-USA
            date: '2020-02-28'
            FF_SALES(ANN_R,0): 20156.447
          - requestId: DIS-USA
            date: '2020-02-28'
            FF_SALES(ANN_R,0): 69422
          - requestId: WBD-USA
            date: '2020-02-28'
            FF_SALES(ANN_R,0): 11133
          - requestId: NFLX-USA
            date: '2020-03-06'
            FF_SALES(ANN_R,0): 20156.447
          - requestId: DIS-USA
            date: '2020-03-06'
            FF_SALES(ANN_R,0): 69422
          - requestId: WBD-USA
            date: '2020-03-06'
            FF_SALES(ANN_R,0): 11133
          - requestId: NFLX-USA
            date: '2020-03-13'
            FF_SALES(ANN_R,0): 20156.447
          - requestId: DIS-USA
            date: '2020-03-13'
            FF_SALES(ANN_R,0): 69422
          - requestId: WBD-USA
            date: '2020-03-13'
            FF_SALES(ANN_R,0): 11133
          - requestId: NFLX-USA
            date: '2020-03-20'
            FF_SALES(ANN_R,0): 20156.447
          - requestId: DIS-USA
            date: '2020-03-20'
            FF_SALES(ANN_R,0): 69422
          - requestId: WBD-USA
            date: '2020-03-20'
            FF_SALES(ANN_R,0): 11133
          - requestId: NFLX-USA
            date: '2020-03-27'
            FF_SALES(ANN_R,0): 20156.447
          - requestId: DIS-USA
            date: '2020-03-27'
            FF_SALES(ANN_R,0): 69422
          - requestId: WBD-USA
            date: '2020-03-27'
            FF_SALES(ANN_R,0): 11133
    BatchStatusAcceptedResponse:
      description: Batch Status Accepted Response
      value:
        data:
          id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c
          status: QUEUED
          startTime: '2021-06-29T18:34:52.168Z'
          endTime: null
          error: null
    BatchStatusQueuedResponse:
      description: Batch Status Queued Response
      value:
        data:
          id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c
          status: QUEUED
          startTime: '2021-06-29T18:34:52.168Z'
          endTime: null
          error: null
    BatchStatusExecutingResponse:
      description: Batch Status Executing Response
      value:
        data:
          id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c
          status: EXECUTING
          startTime: '2021-06-29T18:34:52.168Z'
          endTime: null
          error: null
    BatchResultQueuedResponse:
      description: Batch Result Queued Response
      value:
        errors:
          id: 618AC9B50DE76980
          code: Accepted
          title: >-
            Please check the status endpoint until the batch request has a
            status of DONE and then retrieve the results from the results
            endpoint.
          timestamp: '2022-01-18 18:29:59.189'
    BatchResultExecutingResponse:
      description: Batch Result Executing Response
      value:
        errors:
          id: 618AC9B50DE76980
          code: Accepted
          title: >-
            Please check the status endpoint until the batch request has a
            status of DONE and then retrieve the results from the results
            endpoint.
          timestamp: '2022-01-18 18:29:59.189'
    BatchStatusDoneResponse:
      description: Batch Status Done Response
      value:
        data:
          id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c
          status: DONE
          startTime: '2021-06-29T18:34:52.168Z'
          endTime: '2021-06-29T18:34:55.402Z'
          error: null
    BatchStatusFailedResponseTimeout:
      description: >-
        Batch Status Failed Response - Timeout. The example response shows the
        result of checking the status of a batch request that took longer than
        30 minutes to calculate and timed out.
      value:
        data:
          id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c
          status: FAILED
          startTime: '2021-06-29T18:34:52.168Z'
          endTime: '2021-06-29T18:44:55.402Z'
          error: timeout
    BatchStatusFailedResponseMemoryLimit:
      description: >-
        Batch Status Failed Response - MemoryLimit. The example response shows
        the result of checking the status of a batch request that exceeded the
        memory limit.
      value:
        data:
          id: 0a0452e2-3937-441d-b376-f2733a938587
          status: FAILED
          startTime: '2023-09-15T00:07:46.501947Z'
          endTime: '2023-09-15T00:08:53.936218Z'
          error: The request size is too large. Try again with a smaller request.
    BatchStatusFailedResponseOther:
      description: >-
        Batch Status Failed Response - Other. The example response shows the
        result of checking the status of a batch request that failed
        unexpectedly. If you encounter this error, please contact FactSet
        support.
      value:
        data:
          id: 43839790-a64e-452a-b8f0-fc26117bd9f4
          status: FAILED
          startTime: '2023-09-20T13:37:13.653411Z'
          endTime: '2023-09-20T13:38:25.841134Z'
          error: Something went wrong. Contact FactSet for support.
    BatchStatusCanceled:
      description: >-
        Batch Status Canceled Response. The example response shows the result of
        checking the status of a batch request that was canceled via the
        `/batch-cancel` endpoint.
      value:
        data:
          id: 43839790-a64e-452a-b8f0-fc26117bd9f4
          status: CANCELED
          startTime: '2023-09-20T13:37:13.653411Z'
          endTime: null
          error: null
    BatchListResult:
      summary: Batch List Result
      value:
        data:
          - id: a0cd26f2-2297-11ef-b504-0ed91d9085a9
            status: EXECUTING
            error: null
            expiration: null
          - id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c
            status: DONE
            error: null
            expiration: '2024-06-05T17:26:50.532480Z'
          - id: e6d72de6-2346-11ef-8d19-424d4eeb11bc
            status: FAILED
            error: The expression entered for the universe parameter is invalid.
            expiration: '2024-06-06T14:21:29.974713Z'
    BatchListEmpty:
      summary: Batch List Empty
      value:
        meta:
          message: >-
            You have no ongoing batch requests or all exisitng requests have
            expired.
        data: null
  requestBodies:
    time-series-postBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TimeSeriesRequest'
          examples:
            time-series-singleId-singleItem:
              summary: |
                Single Id and Single formula
              value:
                data:
                  ids:
                    - IBM
                  formulas:
                    - P_PRICE(0)
            time-series-singleId-singleItem-fsymId:
              summary: |
                Single Id and Single Data Item with fsymId=Y
              value:
                data:
                  ids:
                    - IBM
                  formulas:
                    - P_PRICE(0)
                  fsymId: 'Y'
            time-series-multipleId-mulipleItem:
              summary: |
                Multiple Ids and Multiple Data Items with SEVENDAY Calendar
              value:
                data:
                  ids:
                    - IBM
                    - AAPL
                    - MSFT
                  formulas:
                    - P_PRICE(0,-2D,D)
                    - FG_COMPANY_NAME
                    - FF_SEGMENT_RPT_LABELS(ANN_R,0,-1AY,,,,BUS,"SEG")
                    - FF_SEGMENT_RPT_DATA(ANN_R,0,-1AY,,,"SALES",,BUS,"SEG")
                  calendar: SEVENDAY
            time-series-multipleItemsFlatten:
              summary: |
                Multiple Ids and Multiple Data Items with flatten=Y
              value:
                data:
                  ids:
                    - IBM
                    - AAPL
                    - MSFT
                  formulas:
                    - P_PRICE_OPEN(0,-2,D)
                    - P_PRICE(0,-2,D)
                    - FG_COMPANY_NAME
                  flatten: 'Y'
            time-series-multipleId-mulipleCalculatedItem:
              summary: |
                Multiple Ids and Multiple Calculated Data Items
              description: >
                The first data item using the division operator to calculate a
                P/E ratio from the last trading day of the company's most recent
                fiscal year.


                The second data item uses the addition operator to calculate
                percentage of revenue exposure in the US and Japan for the same
                date as the first data item.


                The third data item uses the average function (**AVG**) and the
                **IF** function to indicate whether the average daily price
                change over the company's most recent fiscal year was postive or
                negative.


                You can find more information about the different functions you
                can use in FQL at the following Online Assistant pages -

                * Mathematical Operators - [Online Assistant Page
                10600](https://my.apps.factset.com/oa/pages/10600)

                * Logical Functions - [Online Assistant Page
                11485](https://my.apps.factset.com/oa/pages/1485)

                * Categorical List of All Functions - [Online Assistant Page
                1411](https://my.apps.factset.com/oa/pages/1411)
              value:
                data:
                  ids:
                    - IBM
                    - AAPL
                    - MSFT
                  formulas:
                    - P_PRICE(0Y)/FF_EPS(ANN_R,0Y)
                    - >-
                      FF_GEOREV_COUNTRY_PCT("840",ANN,0,,,RF)+FF_GEOREV_COUNTRY_PCT("392",ANN,0,,,RF)
                    - >-
                      IF(AVG(P_PRICE_CHANGE(0Y,-1Y,D,USD))>0,"POSITIVE","NEGATIVE")
            time-series-smallUniv-singleItem:
              summary: |
                Small Universe and Single Data Item
              value:
                data:
                  universe: (FG_CONSTITUENTS(SP50,0,CLOSE) AND P_PRICE(0,USD)<10)=1
                  formulas:
                    - FF_SALES(QTR_R,0,-3,FQ)
            time-series-debtUniv-multipleItem:
              summary: |
                Debt Universe and Multiple Debt Data Items
              value:
                data:
                  universe: EQUITY(P_SYMBOL)='SBUX-US'
                  universeType: DEBT
                  formulas:
                    - FI_NAME(ISSR)
                    - FI_AMOUNT_OUT(AMT,0,USD)
            time-series-batch:
              summary: >
                Batch Request for Multiple Ids and Multiple Data Items with
                SEVENDAY Calendar
              value:
                data:
                  ids:
                    - IBM
                    - AAPL
                    - MSFT
                  formulas:
                    - P_PRICE(0,-2D,D)
                    - FG_COMPANY_NAME
                    - FF_SEGMENT_RPT_LABELS(ANN_R,0,-1AY,,,,BUS,"SEG")
                    - FF_SEGMENT_RPT_DATA(ANN_R,0,-1AY,,,"SALES",,BUS,"SEG")
                  calendar: SEVENDAY
                  batch: 'Y'
    cross-sectional-postBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CrossSectionalRequest'
          examples:
            cross-sectional-singleId-singleItem:
              summary: Single Equity Id and Single Equity Data Item
              value:
                data:
                  ids:
                    - IBM
                  formulas:
                    - P_PRICE(0)
            cross-sectional-singleId-singleItem-fsymId:
              summary: Single Equity Id and Single Equity Data Item with fsymId=Y
              value:
                data:
                  ids:
                    - IBM
                  formulas:
                    - P_PRICE(0)
                  fsymId: 'Y'
            cross-sectional-multipleId-mulipleItem:
              summary: >-
                Multiple Equity Ids and Multiple Equity Data Items with SEVENDAY
                Calendar
              value:
                data:
                  ids:
                    - IBM
                    - FDS
                    - GE
                    - GOOG
                    - AAPL
                    - MSFT
                    - TSLA
                  formulas:
                    - FF_SALES(ANN_R,0)
                    - PROPER_NAME(0,SECURITY,NAME)
                    - P_PRICE(0)
                    - FF_ASSETS(ANN_R,0)
                  calendar: SEVENDAY
            cross-sectional-multipleId-mulipleItem-flatten:
              summary: >-
                Multiple Equity Ids and Multiple Equity Data Items with
                flatten=Y
              value:
                data:
                  ids:
                    - IBM
                    - FDS
                    - GE
                    - GOOG
                    - AAPL
                    - MSFT
                    - TSLA
                  formulas:
                    - FF_SALES(ANN_R,0)
                    - PROPER_NAME(0,SECURITY,NAME)
                    - P_PRICE(0)
                    - FF_ASSETS(ANN_R,0)
                  flatten: 'Y'
            cross-sectional-multipleId-mulipleCalculatedItem:
              summary: Multiple Ids and Multiple Calculated Data Items
              description: >
                The first data item using the division operator to calculate a
                P/E ratio from the last trading day of the company's most recent
                fiscal year.


                The second data item uses the addition operator to calculate
                percentage of revenue exposure in the US and Japan for the same
                date as the first data item.


                The third data item uses the **IF** function and greater than
                operator (**>**) to indicate whether the latest fiscal year's
                sales were higher or lower than the previous year's sales.


                You can find more information about the different functions you
                can use in FQL at the following Online Assistant pages -

                * Mathematical Operators - [Online Assistant Page
                10600](https://my.apps.factset.com/oa/pages/10600)

                * Logical Functions - [Online Assistant Page
                11485](https://my.apps.factset.com/oa/pages/1485)

                * Categorical List of All Functions - [Online Assistant Page
                1411](https://my.apps.factset.com/oa/pages/1411)
              value:
                data:
                  ids:
                    - IBM
                    - FDS
                    - GE
                    - GOOG
                    - AAPL
                    - MSFT
                    - TSLA
                  formulas:
                    - P_PRICE(0Y)/FF_EPS(ANN_R,0Y)
                    - >-
                      FF_GEOREV_COUNTRY_PCT(840,ANN,0,RF)%2BFF_GEOREV_COUNTRY_PCT(392,ANN,0,RF)
                    - IF(FF_SALES(ANN_R,0)>FF_SALES(ANN_R,-1),"HIGHER","LOWER")
            cross-sectional-multipleFixedIncomeId-mulipleItem:
              summary: Multiple Fixed Income Ids and Multiple Fixed Data Items
              value:
                data:
                  ids:
                    - U88803AB
                    - 00138GAC
                  formulas:
                    - FI_NAME(ISSR)
                    - FI_AMOUNT_OUT(AMT,0,USD)
            cross-sectional-smallUniv-singleItem:
              summary: Small Equity Universe and Single Equity Data Item
              value:
                data:
                  universe: (FG_CONSTITUENTS(SP50,0,CLOSE) AND P_PRICE(0,USD)<10)=1
                  formulas:
                    - P_PRICE(0)
            cross-sectional-debtUniv-multipleItem:
              summary: Debt Universe and Multiple Debt Data Items
              value:
                data:
                  universe: EQUITY(P_SYMBOL)='SBUX-US'
                  universeType: DEBT
                  formulas:
                    - FI_NAME(ISSR)
                    - FI_AMOUNT_OUT(AMT,0,USD)
            cross-sectional-ICSF-singleItem-nonflatten:
              summary: Single ID and Multiple Dates using ICSF with flatten = N
              value:
                data:
                  ids:
                    - NFLX-USA
                  formulas:
                    - PROPER_NAME
                    - P_PRICE(0)
                  startDate: 01/01/2022
                  endDate: 12/31/2022
                  frequency: M
                  batch: 'Y'
                  flatten: 'N'
            cross-sectional-ICSF-multipleItem-Flatten:
              summary: Multiple IDs and Multiple Dates using ICSF with flatten = Y
              value:
                data:
                  ids:
                    - NFLX-USA
                    - DIS-USA
                    - WBD-USA
                  formulas:
                    - FF_SALES(ANN_R,0)
                  startDate: 03/01/2020
                  endDate: 03/31/2020
                  frequency: W
                  batch: 'Y'
                  flatten: 'Y'
            cross-sectional-batch:
              summary: >-
                Batch Request for Multiple Equity Ids and Multiple Equity Data
                Items with SEVENDAY Calendar
              value:
                data:
                  ids:
                    - IBM
                    - FDS
                    - GE
                    - GOOG
                    - AAPL
                    - MSFT
                    - TSLA
                  formulas:
                    - FF_SALES(ANN_R,0)
                    - PROPER_NAME(0,SECURITY,NAME)
                    - P_PRICE(0)
                    - FF_ASSETS(ANN_R,0)
                  calendar: SEVENDAY
                  batch: 'Y'
    batch-status-postBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BatchDataRequest'
          examples:
            BatchStatusRequest:
              summary: Batch Status Request
              value:
                data:
                  id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c
    batch-result-postBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BatchDataRequest'
          examples:
            BatchDataRequest:
              summary: Batch Result Request
              value:
                data:
                  id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c
  headers:
    api-version:
      description: the full semantic version of the API.
      schema:
        type: string
        example: 1.0.0
    api-supported-versions:
      description: the comma-separated list of supported major versions.
      schema:
        type: string
        example: '1'
    api-deprecated-versions:
      description: the comma-separated list of deprecated major versions.
      schema:
        type: string
        example: 1,2
    chain-id:
      description: Unique identifier for the request. Also known as the chain id.
      schema:
        type: string
        example: 5EFCCA8940CAEA6B
    X-RateLimit-Limit-second:
      description: Number of allowed requests per second.
      schema:
        type: integer
        example: 5
    X-RateLimit-Remaining-second:
      description: Number of requests currently available in second.
      schema:
        type: integer
        example: 4
    X-RateLimit-Limit-day:
      description: Number of allowed requests per day.
      schema:
        type: integer
        example: 1000
    X-RateLimit-Remaining-day:
      description: Number of requests currently available in day.
      schema:
        type: integer
        example: 854
    Retry-After:
      description: >-
        Number of seconds the service is expected to be unavailable to the
        client. This header will be present on 429 errors.
      schema:
        type: integer
        example: 62
    X-FactSet-Api-Units-Limit:
      description: Maximum number of concurrent batch requests that a user can execute.
      schema:
        type: integer
        example: 10
    X-FactSet-Api-Units-Remaining:
      description: Number of remaining concurrent batch requests that can be executed.
      schema:
        type: integer
        example: 3
