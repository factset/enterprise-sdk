{
  "openapi": "3.0.0",
  "info": {
    "version": "4.0.0",
    "title": "Real-Time Time Series API",
    "description": "Time series data, end-of-day or intraday, tick-by-tick or subsampled. Additional vendor-specific endpoints provide a modified interface\nfor seamless integration with the ChartIQ chart library.\n\nThis API is focused on high-performance applications that are\n\n* serving millions of end-users,\n* accessible by client browsers via the internet,\n* integrated into complex infrastructures such as existing frontend frameworks or authentication services.\n\nThis API has been designed for direct use by client web applications and feature extreme low latency:\nThe average response time across all endpoints is 30 ms whereas 99% of all requests are answered in close to under 300ms.\n\nSee the [Real-Time Quotes API for Digital Portals](https://developer.factset.com/api-catalog/real-time-quotes-api) for access to detailed\nprice information.\n",
    "contact": {
      "name": "FactSet Research Systems",
      "url": "https://developer.factset.com/contact",
      "email": "api@factset.com"
    },
    "license": {
      "name": "Apache License, Version 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "servers": [
    {
      "url": "https://api.factset.com/wealth/v4"
    }
  ],
  "paths": {
    "/vendor/chart-iq/time-series/eod/list": {
      "post": {
        "tags": [
          "vendor"
        ],
        "operationId": "postVendorChartIqTimeSeriesEodList",
        "summary": "End-of-day time series data for a notation.",
        "description": "End-of-day time series data for a notation. The resulting time series is always adjusted for currency changes.<br><br>Pagination to a previous page is not supported and `pagination.previous` is always `null`.",
        "requestBody": {
          "description": "Request Body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostVendorChartIQTimeSeriesEodListRequest"
              },
              "example": {
                "data": {
                  "identifier": {
                    "value": "FDS-US",
                    "type": "tickerRegion"
                  },
                  "type": "trade",
                  "quality": "DLY",
                  "range": {
                    "start": "2024-12-24",
                    "end": "2024-01-01"
                  },
                  "newestFirst": true,
                  "adjustments": {
                    "payout": true,
                    "split": true
                  }
                },
                "meta": {
                  "attributes": [],
                  "pagination": {
                    "cursor": "Lorem ipsum",
                    "limit": 20
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PostVendorChartIQTimeSeriesEodList200Response"
          }
        },
        "parameters": []
      }
    },
    "/vendor/chart-iq/time-series/eod/subsample/get": {
      "post": {
        "tags": [
          "vendor"
        ],
        "operationId": "postVendorChartIqTimeSeriesEodSubsampleGet",
        "summary": "Single subsample end-of-day data for a notation.",
        "description": "Single subsample end-of-day data for a notation. The sample is always adjusted for currency changes. The subsample may exceed the entitled date range, but will be based only on days that are in the entitled range.",
        "requestBody": {
          "description": "Request Body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostVendorChartIQTimeSeriesEodSubsampleGetRequest"
              },
              "example": {
                "data": {
                  "identifier": {
                    "value": "FDS-US",
                    "type": "tickerRegion"
                  },
                  "type": "trade",
                  "quality": "DLY",
                  "interval": {
                    "start": "2024-01-01",
                    "end": "2024-01-01"
                  },
                  "adjustments": {
                    "payout": true,
                    "split": true
                  }
                },
                "meta": {
                  "attributes": []
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PostVendorChartIQTimeSeriesEodSubsampleGet200Response"
          }
        },
        "parameters": []
      }
    },
    "/vendor/chart-iq/time-series/eod/subsample/list": {
      "post": {
        "tags": [
          "vendor"
        ],
        "operationId": "postVendorChartIqTimeSeriesEodSubsampleList",
        "summary": "Subsampled end-of-day time series data for a notation.",
        "description": "Subsampled end-of-day time series data for a notation. The resulting time series is always adjusted for currency changes. If a subsample's date range is not entirely within the maximally entitled date range, the subsample is excluded from the response.<br><br>Pagination to a previous page is not supported and `pagination.previous` is always `null`.",
        "requestBody": {
          "description": "Request Body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostVendorChartIQTimeSeriesEodSubsampleListRequest"
              },
              "example": {
                "data": {
                  "identifier": {
                    "value": "FDS-US",
                    "type": "tickerRegion"
                  },
                  "type": "trade",
                  "quality": "DLY",
                  "intervalSelection": {
                    "intervals": [
                      "2024-01-01",
                      "2024-02-01"
                    ],
                    "samples": {
                      "end": "2024-01-01",
                      "number": 2999,
                      "granularity": "1w"
                    }
                  },
                  "newestFirst": true,
                  "adjustments": {
                    "payout": true,
                    "split": true
                  }
                },
                "meta": {
                  "attributes": [],
                  "pagination": {
                    "cursor": "Lorem ipsum",
                    "limit": 20
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PostVendorChartIQTimeSeriesEodSubsampleList200Response"
          }
        },
        "parameters": []
      }
    },
    "/vendor/chart-iq/time-series/intraday/subsample/get": {
      "post": {
        "tags": [
          "vendor"
        ],
        "operationId": "postVendorChartIqTimeSeriesIntradaySubsampleGet",
        "summary": "Single subsample intraday data for a notation.",
        "description": "Single subsample intraday data for a notation. The subsample may exceed the entitled time range, but will be based only on ticks that are in the entitled range.",
        "requestBody": {
          "description": "Request Body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostVendorChartIQTimeSeriesIntradaySubsampleGetRequest"
              },
              "example": {
                "data": {
                  "identifier": {
                    "value": "FDS-US",
                    "type": "tickerRegion"
                  },
                  "type": "trade",
                  "quality": "DLY",
                  "from": "2024-12-24T18:00:00.000000Z",
                  "granularity": "1h",
                  "adjustments": {
                    "split": true
                  }
                },
                "meta": {
                  "attributes": []
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PostVendorChartIQTimeSeriesIntradaySubsampleGet200Response"
          }
        },
        "parameters": []
      }
    },
    "/vendor/chart-iq/time-series/intraday/subsample/list": {
      "post": {
        "tags": [
          "vendor"
        ],
        "operationId": "postVendorChartIqTimeSeriesIntradaySubsampleList",
        "summary": "Subsampled intraday time series data for a notation.",
        "description": "Subsampled intraday time series data for a notation. If a subsample's time range is not entirely within the maximally entitled time range, the subsample is excluded from the response.<br><br>Pagination to a previous page is not supported and `pagination.previous` is always `null`.",
        "requestBody": {
          "description": "Request Body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostVendorChartIQTimeSeriesIntradaySubsampleListRequest"
              },
              "example": {
                "data": {
                  "identifier": {
                    "value": "FDS-US",
                    "type": "tickerRegion"
                  },
                  "type": "trade",
                  "quality": "DLY",
                  "range": {
                    "start": "2024-01-01T00:00:00.000Z",
                    "end": "2024-12-24T18:00:00.000000Z"
                  },
                  "granularity": "1h",
                  "newestFirst": false,
                  "adjustments": {
                    "split": true
                  }
                },
                "meta": {
                  "attributes": [],
                  "pagination": {
                    "cursor": "Lorem ipsum",
                    "limit": 20
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PostVendorChartIQTimeSeriesIntradaySubsampleList200Response"
          }
        },
        "parameters": []
      }
    },
    "/prices/time-series/eod/list": {
      "post": {
        "tags": [
          "prices"
        ],
        "operationId": "postPricesTimeSeriesEodList",
        "summary": "End-of-day time series data for a notation.",
        "description": "End-of-day time series data for a notation. The resulting time series is always adjusted for currency changes.<br><br>Pagination to a previous page is not supported and `pagination.previous` is always `null`.",
        "requestBody": {
          "description": "Request Body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostPricesTimeSeriesEodListRequest"
              },
              "example": {
                "data": {
                  "identifier": {
                    "value": "FDS-US",
                    "type": "tickerRegion"
                  },
                  "type": "trade",
                  "quality": "DLY",
                  "range": {
                    "start": "2024-01-01",
                    "end": "2024-01-01"
                  },
                  "newestFirst": false,
                  "adjustments": {
                    "payout": true,
                    "split": true
                  }
                },
                "meta": {
                  "attributes": [],
                  "pagination": {
                    "cursor": "Lorem ipsum",
                    "limit": 20
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PostPricesTimeSeriesEodList200Response"
          }
        },
        "parameters": []
      }
    },
    "/prices/time-series/eod/subsample/get": {
      "post": {
        "tags": [
          "prices"
        ],
        "operationId": "postPricesTimeSeriesEodSubsampleGet",
        "summary": "Single subsample end-of-day data for a notation.",
        "description": "Single subsample end-of-day data for a notation. The sample is always adjusted for currency changes. The subsample may exceed the entitled date range, but will be based only on days that are in the entitled range.",
        "requestBody": {
          "description": "Request Body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostPricesTimeSeriesEodSubsampleGetRequest"
              },
              "example": {
                "data": {
                  "identifier": {
                    "value": "FDS-US",
                    "type": "tickerRegion"
                  },
                  "type": "trade",
                  "quality": "DLY",
                  "interval": {
                    "start": "2024-12-24",
                    "end": "2024-12-24"
                  },
                  "adjustments": {
                    "payout": true,
                    "split": true
                  }
                },
                "meta": {
                  "attributes": []
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PostPricesTimeSeriesEodSubsampleGet200Response"
          }
        },
        "parameters": []
      }
    },
    "/prices/time-series/eod/subsample/list": {
      "post": {
        "tags": [
          "prices"
        ],
        "operationId": "postPricesTimeSeriesEodSubsampleList",
        "summary": "Subsampled end-of-day time series data for a notation.",
        "description": "Subsampled end-of-day time series data for a notation. The resulting time series is always adjusted for currency changes. If a subsample's date range is not entirely within the maximally entitled date range, the subsample is excluded from the response.<br><br>Pagination to a previous page is not supported and `pagination.previous` is always `null`.",
        "requestBody": {
          "description": "Request Body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostPricesTimeSeriesEodSubsampleListRequest"
              },
              "example": {
                "data": {
                  "identifier": {
                    "value": "FDS-US",
                    "type": "tickerRegion"
                  },
                  "type": "trade",
                  "quality": "DLY",
                  "intervalSelection": {
                    "intervals": [
                      "2024-01-01",
                      "2024-02-01"
                    ],
                    "samples": {
                      "end": "2024-12-24",
                      "number": 8068,
                      "granularity": "1w"
                    }
                  },
                  "newestFirst": true,
                  "adjustments": {
                    "payout": false,
                    "split": true
                  }
                },
                "meta": {
                  "attributes": [],
                  "pagination": {
                    "cursor": "Lorem ipsum",
                    "limit": 20
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PostPricesTimeSeriesEodSubsampleList200Response"
          }
        },
        "parameters": []
      }
    },
    "/prices/time-series/intraday/list": {
      "post": {
        "tags": [
          "prices"
        ],
        "operationId": "postPricesTimeSeriesIntradayList",
        "summary": "Intraday time series data for a notation.",
        "description": "Intraday time series data for a notation.<br><br>Pagination to a previous page is not supported and `pagination.previous` is always `null`.",
        "requestBody": {
          "description": "Request Body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostPricesTimeSeriesIntradayListRequest"
              },
              "example": {
                "data": {
                  "identifier": {
                    "value": "FDS-US",
                    "type": "tickerRegion"
                  },
                  "type": "trade",
                  "quality": "DLY",
                  "range": {
                    "start": "2024-01-01T00:00:00.000Z",
                    "end": "2024-12-24T18:00:00.000000Z"
                  },
                  "newestFirst": true,
                  "applyTickCorrections": "none",
                  "includeVolumeOnlyTicks": true,
                  "adjustments": {
                    "split": true
                  }
                },
                "meta": {
                  "attributes": [],
                  "pagination": {
                    "cursor": "Lorem ipsum",
                    "limit": 20
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PostPricesTimeSeriesIntradayList200Response"
          }
        },
        "parameters": []
      }
    },
    "/prices/time-series/intraday/subsample/get": {
      "post": {
        "tags": [
          "prices"
        ],
        "operationId": "postPricesTimeSeriesIntradaySubsampleGet",
        "summary": "Single subsample intraday data for a notation.",
        "description": "Single subsample intraday data for a notation. The subsample may exceed the entitled time range, but will be based only on ticks that are in the entitled range.",
        "requestBody": {
          "description": "Request Body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostPricesTimeSeriesIntradaySubsampleGetRequest"
              },
              "example": {
                "data": {
                  "identifier": {
                    "value": "FDS-US",
                    "type": "tickerRegion"
                  },
                  "type": "trade",
                  "quality": "DLY",
                  "from": "2024-01-01T00:00:00.000Z",
                  "granularity": "1h",
                  "adjustments": {
                    "split": true
                  }
                },
                "meta": {
                  "attributes": []
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PostPricesTimeSeriesIntradaySubsampleGet200Response"
          }
        },
        "parameters": []
      }
    },
    "/prices/time-series/intraday/subsample/list": {
      "post": {
        "tags": [
          "prices"
        ],
        "operationId": "postPricesTimeSeriesIntradaySubsampleList",
        "summary": "Subsampled intraday time series data for a notation.",
        "description": "Subsampled intraday time series data for a notation. If a subsample's time range is not entirely within the maximally entitled time range, the subsample is excluded from the response.<br><br>Pagination to a previous page is not supported and `pagination.previous` is always `null`.",
        "requestBody": {
          "description": "Request Body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostPricesTimeSeriesIntradaySubsampleListRequest"
              },
              "example": {
                "data": {
                  "identifier": {
                    "value": "FDS-US",
                    "type": "tickerRegion"
                  },
                  "type": "trade",
                  "quality": "DLY",
                  "range": {
                    "start": "2024-12-24T18:00:00.000000Z",
                    "end": "2024-01-01T00:00:00.000Z"
                  },
                  "alignRange": true,
                  "granularity": "1h",
                  "newestFirst": false,
                  "adjustments": {
                    "split": true
                  }
                },
                "meta": {
                  "attributes": [],
                  "pagination": {
                    "cursor": "Lorem ipsum",
                    "limit": 20
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/PostPricesTimeSeriesIntradaySubsampleList200Response"
          }
        },
        "parameters": []
      }
    }
  },
  "components": {
    "schemas": {
      "AttributesMember": {
        "type": "array",
        "description": "Limit the attributes returned in the response to the specified set.",
        "items": {
          "type": "string",
          "maxLength": 100
        },
        "maxItems": 100,
        "uniqueItems": true,
        "example": []
      },
      "StatusObject": {
        "type": "object",
        "properties": {
          "code": {
            "type": "number",
            "format": "int32",
            "description": "The HTTP status code of the response, mirroring the code from the Status-Line of the HTTP response message (see [RFC2616] section 6.1).",
            "example": 200
          }
        },
        "description": "The status member contains the status code of the response.",
        "required": [
          "code"
        ]
      },
      "CursorBasedPaginationOutputObjectWithoutTotal": {
        "type": "object",
        "description": "Pagination attributes for the cursor-based pagination strategy; a total element count is not supported.",
        "properties": {
          "next": {
            "type": "string",
            "description": "The next cursor position to use in the parameter `pagination.cursor` for an endpoint that supports cursor-based pagination, otherwise `null`.",
            "example": "Lorem ipsum"
          },
          "previous": {
            "type": "string",
            "description": "The previous cursor position to use in the parameter `pagination.cursor` for an endpoint that supports cursor-based pagination. If a previous cursor position is not supported or available, `previous` is `null`.",
            "example": "Lorem ipsum"
          }
        },
        "required": [
          "next",
          "previous"
        ]
      },
      "PostVendorChartIQTimeSeriesEodListRequest": {
        "description": "Request Body",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "The data member contains the request's primary data.",
            "properties": {
              "identifier": {
                "type": "object",
                "description": "Identifier and type.",
                "properties": {
                  "value": {
                    "type": "string",
                    "pattern": "^[B-DF-HJ-NP-TV-Z0-9]{6}-[SLR]$|^[A-Z0-9.#&*+]{1,47}-[A-Z0-9]{2,4}$|^[0-9]{3,20}$|^[B-DF-HJ-NP-TV-Z0-9]{6}[0-9]$|^[A-Z]{2}[A-Z0-9]{9}[0-9]$|^[A-Z1-9][A-Z0-9]{5}$|^[0-9]{1,9}$|^[A-Z0-9]{8}[0-9]$",
                    "maxLength": 50,
                    "minLength": 3,
                    "description": "Identifier to resolve.",
                    "example": "FDS-US"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of the identifier. An instrument level identifier is resolved to a listing level identifier according to the configured listing selection rules.\n| Value | Description |\n| --- | --- |\n| idInstrument | MDG identifier of an instrument. |\n| idNotation | MDG identifier of a listing. |\n| fdsPermanentIdentifierSecurity | FactSet Permanent Identifier on security level. |\n| fdsPermanentIdentifierListing | FactSet Permanent Identifier on listing level. |\n| fdsPermanentIdentifierRegional | Regional FactSet Permanent Identifier, identifying the primary listing in the region. |\n| tickerExchange | FactSet market symbol of a listing. |\n| tickerRegion | Regional FactSet ticker symbol, identifying the primary listing in the region. |\n| sedol | SEDOL or IDII of a listing. |\n| isin | ISIN of an instrument. |\n| wkn | WKN of an instrument. |\n| valor | Valor number of an instrument. |\n| cusip | CUSIP or CINS identifier of an instrument |\n\n",
                    "enum": [
                      "idInstrument",
                      "idNotation",
                      "fdsPermanentIdentifierSecurity",
                      "fdsPermanentIdentifierListing",
                      "fdsPermanentIdentifierRegional",
                      "tickerExchange",
                      "tickerRegion",
                      "sedol",
                      "isin",
                      "wkn",
                      "valor",
                      "cusip"
                    ],
                    "example": "tickerRegion"
                  }
                },
                "required": [
                  "value",
                  "type"
                ]
              },
              "type": {
                "type": "string",
                "description": "Type of the price as configured for the customer.\n| Value | Description |\n| --- | --- |\n| trade | Trade price (ordinary, auction, pre or post-trading). |\n| bid | Bid price. |\n| ask | Ask price. |\n| yield | Yield price. |\n| estimate | Estimated price. |\n\n",
                "default": "trade",
                "enum": [
                  "trade",
                  "bid",
                  "ask",
                  "yield",
                  "estimate"
                ],
                "example": "trade"
              },
              "quality": {
                "type": "string",
                "description": "Quality of the price.\n| Value | Description |\n| --- | --- |\n| DLY | Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes. |\n| EOD | End-of-day: prices updated once per day after the close of trading, possibly with an exchange-imposed delay of several hours or days. |\n| BST | Best: choose the price quality with the least delay, as entitled for the client. |\n\n",
                "default": "DLY",
                "enum": [
                  "DLY",
                  "EOD",
                  "BST"
                ],
                "example": "DLY"
              },
              "range": {
                "type": "object",
                "format": "dateRange",
                "properties": {
                  "start": {
                    "type": "string",
                    "format": "date",
                    "description": "The starting point of the date range (inclusive).",
                    "example": "2024-12-24"
                  },
                  "end": {
                    "type": "string",
                    "format": "date",
                    "description": "The ending point of the date range (exclusive).",
                    "example": "2024-01-01"
                  }
                },
                "required": [
                  "start",
                  "end"
                ],
                "description": "Date range for the time series. A valid date range is between 1900-01-01 and the day after the current day."
              },
              "newestFirst": {
                "type": "boolean",
                "default": false,
                "description": "Deliver the chronological last part of the requested data first.",
                "example": true
              },
              "adjustments": {
                "type": "object",
                "description": "Adjustments values returned.",
                "properties": {
                  "payout": {
                    "type": "boolean",
                    "default": false,
                    "description": "Adjustments are applied for corporate action effects due to dividends, payouts, or other cash disbursements.",
                    "example": true
                  },
                  "split": {
                    "type": "boolean",
                    "default": true,
                    "description": "Adjustments are applied for corporate action effects due to the notation having a split, a reverse split, or a similar factor-based corporate action.",
                    "example": true
                  }
                }
              }
            },
            "required": [
              "identifier",
              "range"
            ]
          },
          "meta": {
            "type": "object",
            "description": "The meta member contains the meta information of the request.",
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/AttributesMember"
              },
              "pagination": {
                "type": "object",
                "description": "Pagination attributes for the cursor-based pagination strategy.",
                "properties": {
                  "cursor": {
                    "type": "string",
                    "maxLength": 50,
                    "description": "Starting point as returned in the attributes `pagination.next` or `pagination.previous` by a prior invocation of this endpoint, or undefined (default).",
                    "example": "Lorem ipsum"
                  },
                  "limit": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "exclusiveMinimum": false,
                    "maximum": 5000,
                    "exclusiveMaximum": false,
                    "default": 20,
                    "description": "Non-negative maximum number of entries to return.",
                    "example": 20
                  }
                }
              }
            }
          }
        }
      },
      "PostVendorChartIQTimeSeriesEodSubsampleGetRequest": {
        "description": "Request Body",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "The data member contains the request's primary data.",
            "properties": {
              "identifier": {
                "type": "object",
                "description": "Identifier and type.",
                "properties": {
                  "value": {
                    "type": "string",
                    "pattern": "^[B-DF-HJ-NP-TV-Z0-9]{6}-[SLR]$|^[A-Z0-9.#&*+]{1,47}-[A-Z0-9]{2,4}$|^[0-9]{3,20}$|^[B-DF-HJ-NP-TV-Z0-9]{6}[0-9]$|^[A-Z]{2}[A-Z0-9]{9}[0-9]$|^[A-Z1-9][A-Z0-9]{5}$|^[0-9]{1,9}$|^[A-Z0-9]{8}[0-9]$",
                    "maxLength": 50,
                    "minLength": 3,
                    "description": "Identifier to resolve.",
                    "example": "FDS-US"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of the identifier. An instrument level identifier is resolved to a listing level identifier according to the configured listing selection rules.\n| Value | Description |\n| --- | --- |\n| idInstrument | MDG identifier of an instrument. |\n| idNotation | MDG identifier of a listing. |\n| fdsPermanentIdentifierSecurity | FactSet Permanent Identifier on security level. |\n| fdsPermanentIdentifierListing | FactSet Permanent Identifier on listing level. |\n| fdsPermanentIdentifierRegional | Regional FactSet Permanent Identifier, identifying the primary listing in the region. |\n| tickerExchange | FactSet market symbol of a listing. |\n| tickerRegion | Regional FactSet ticker symbol, identifying the primary listing in the region. |\n| sedol | SEDOL or IDII of a listing. |\n| isin | ISIN of an instrument. |\n| wkn | WKN of an instrument. |\n| valor | Valor number of an instrument. |\n| cusip | CUSIP or CINS identifier of an instrument |\n\n",
                    "enum": [
                      "idInstrument",
                      "idNotation",
                      "fdsPermanentIdentifierSecurity",
                      "fdsPermanentIdentifierListing",
                      "fdsPermanentIdentifierRegional",
                      "tickerExchange",
                      "tickerRegion",
                      "sedol",
                      "isin",
                      "wkn",
                      "valor",
                      "cusip"
                    ],
                    "example": "tickerRegion"
                  }
                },
                "required": [
                  "value",
                  "type"
                ]
              },
              "type": {
                "type": "string",
                "description": "Type of the price as configured for the customer.\n| Value | Description |\n| --- | --- |\n| trade | Trade price (ordinary, auction, pre or post-trading). |\n| bid | Bid price. |\n| ask | Ask price. |\n| yield | Yield price. |\n| estimate | Estimated price. |\n\n",
                "default": "trade",
                "enum": [
                  "trade",
                  "bid",
                  "ask",
                  "yield",
                  "estimate"
                ],
                "example": "trade"
              },
              "quality": {
                "type": "string",
                "description": "Quality of the price.\n| Value | Description |\n| --- | --- |\n| DLY | Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes. |\n| EOD | End-of-day: prices updated once per day after the close of trading, possibly with an exchange-imposed delay of several hours or days. |\n| BST | Best: choose the price quality with the least delay, as entitled for the client. |\n\n",
                "default": "DLY",
                "enum": [
                  "DLY",
                  "EOD",
                  "BST"
                ],
                "example": "DLY"
              },
              "interval": {
                "type": "object",
                "format": "dateRange",
                "properties": {
                  "start": {
                    "type": "string",
                    "format": "date",
                    "description": "The starting point of the interval (inclusive). ",
                    "example": "2024-01-01"
                  },
                  "end": {
                    "type": "string",
                    "format": "date",
                    "description": "The ending point of the interval (exclusive).",
                    "example": "2024-01-01"
                  }
                },
                "required": [
                  "start",
                  "end"
                ],
                "description": "Non-empty interval of days specifying a single subsample period. The starting point `start` of the single subsample is usually the attribute `range.end` of a previously received `/vendor/chartIQ/timeSeries/eod/subsample/list` request. A valid range is between 1900-01-01 and a day that is less than or equal to the maximum allowed day determined from the delay period (if any). The ending point `end` may exceed the maximally entitled date range."
              },
              "adjustments": {
                "type": "object",
                "description": "Adjustments values returned.",
                "properties": {
                  "payout": {
                    "type": "boolean",
                    "default": false,
                    "description": "Adjustments are applied for corporate action effects due to dividends, payouts, or other cash disbursements.",
                    "example": true
                  },
                  "split": {
                    "type": "boolean",
                    "default": true,
                    "description": "Adjustments are applied for corporate action effects due to the notation having a split, a reverse split, or a similar factor-based corporate action.",
                    "example": true
                  }
                }
              }
            },
            "required": [
              "identifier",
              "interval"
            ]
          },
          "meta": {
            "type": "object",
            "description": "The meta member contains the meta information of the request.",
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/AttributesMember"
              }
            }
          }
        }
      },
      "PostVendorChartIQTimeSeriesEodSubsampleListRequest": {
        "description": "Request Body",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "The data member contains the request's primary data.",
            "properties": {
              "identifier": {
                "type": "object",
                "description": "Identifier and type.",
                "properties": {
                  "value": {
                    "type": "string",
                    "pattern": "^[B-DF-HJ-NP-TV-Z0-9]{6}-[SLR]$|^[A-Z0-9.#&*+]{1,47}-[A-Z0-9]{2,4}$|^[0-9]{3,20}$|^[B-DF-HJ-NP-TV-Z0-9]{6}[0-9]$|^[A-Z]{2}[A-Z0-9]{9}[0-9]$|^[A-Z1-9][A-Z0-9]{5}$|^[0-9]{1,9}$|^[A-Z0-9]{8}[0-9]$",
                    "maxLength": 50,
                    "minLength": 3,
                    "description": "Identifier to resolve.",
                    "example": "FDS-US"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of the identifier. An instrument level identifier is resolved to a listing level identifier according to the configured listing selection rules.\n| Value | Description |\n| --- | --- |\n| idInstrument | MDG identifier of an instrument. |\n| idNotation | MDG identifier of a listing. |\n| fdsPermanentIdentifierSecurity | FactSet Permanent Identifier on security level. |\n| fdsPermanentIdentifierListing | FactSet Permanent Identifier on listing level. |\n| fdsPermanentIdentifierRegional | Regional FactSet Permanent Identifier, identifying the primary listing in the region. |\n| tickerExchange | FactSet market symbol of a listing. |\n| tickerRegion | Regional FactSet ticker symbol, identifying the primary listing in the region. |\n| sedol | SEDOL or IDII of a listing. |\n| isin | ISIN of an instrument. |\n| wkn | WKN of an instrument. |\n| valor | Valor number of an instrument. |\n| cusip | CUSIP or CINS identifier of an instrument |\n\n",
                    "enum": [
                      "idInstrument",
                      "idNotation",
                      "fdsPermanentIdentifierSecurity",
                      "fdsPermanentIdentifierListing",
                      "fdsPermanentIdentifierRegional",
                      "tickerExchange",
                      "tickerRegion",
                      "sedol",
                      "isin",
                      "wkn",
                      "valor",
                      "cusip"
                    ],
                    "example": "tickerRegion"
                  }
                },
                "required": [
                  "value",
                  "type"
                ]
              },
              "type": {
                "type": "string",
                "description": "Type of the price as configured for the customer.\n| Value | Description |\n| --- | --- |\n| trade | Trade price (ordinary, auction, pre or post-trading). |\n| bid | Bid price. |\n| ask | Ask price. |\n| yield | Yield price. |\n| estimate | Estimated price. |\n\n",
                "default": "trade",
                "enum": [
                  "trade",
                  "bid",
                  "ask",
                  "yield",
                  "estimate"
                ],
                "example": "trade"
              },
              "quality": {
                "type": "string",
                "description": "Quality of the price.\n| Value | Description |\n| --- | --- |\n| DLY | Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes. |\n| EOD | End-of-day: prices updated once per day after the close of trading, possibly with an exchange-imposed delay of several hours or days. |\n| BST | Best: choose the price quality with the least delay, as entitled for the client. |\n\n",
                "default": "DLY",
                "enum": [
                  "DLY",
                  "EOD",
                  "BST"
                ],
                "example": "DLY"
              },
              "intervalSelection": {
                "type": "object",
                "description": "Select the intervals from which the subsamples are to be created.",
                "properties": {
                  "intervals": {
                    "type": "array",
                    "nullable": false,
                    "items": {
                      "type": "string",
                      "format": "date",
                      "example": "2024-12-24"
                    },
                    "minItems": 2,
                    "maxItems": 600,
                    "description": "Non-empty intervals of days to consider for the request. The array contains a list of at least two days in increasing order. Each pair of adjacent entries day_n and day_(n+1) specifies a half-open interval, that is a range of days d where day_n <= d < day_(n+1). A subsample is computed for each interval. The valid range of intervals is between 1900-01-01 and the day after the current day.",
                    "example": [
                      "2024-01-01",
                      "2024-02-01"
                    ]
                  },
                  "samples": {
                    "type": "object",
                    "description": "Subsample granularity and number of samples suitable for end-of-day data.",
                    "properties": {
                      "end": {
                        "type": "string",
                        "format": "date",
                        "description": "Date of the end point of the subsamples (exclusive). `end` is limited to the day after the current day.",
                        "example": "2024-01-01"
                      },
                      "number": {
                        "type": "number",
                        "format": "int32",
                        "minimum": 1,
                        "exclusiveMinimum": false,
                        "maximum": 10000,
                        "exclusiveMaximum": false,
                        "description": "Number of subsamples returned. The product of `number` and `granularity` must not extend further into the past than 1900-01-01.",
                        "example": 2999
                      },
                      "granularity": {
                        "type": "string",
                        "description": "Subsample granularities suitable for end-of-day data.\n| Value | Description |\n| --- | --- |\n| 1d | Each subsample interval encompasses 1 day. |\n| 1w | Each subsample interval encompasses 1 week. |\n| 1m | Each subsample interval encompasses 1 month. |\n| 3m | Each subsample interval encompasses 3 month. |\n| 6m | Each subsample interval encompasses 6 month. |\n| 1y | Each subsample interval encompasses 1 year. |\n\n",
                        "default": "1w",
                        "enum": [
                          "1d",
                          "1w",
                          "1m",
                          "3m",
                          "6m",
                          "1y"
                        ],
                        "example": "1w"
                      }
                    },
                    "required": [
                      "end",
                      "number"
                    ]
                  }
                }
              },
              "newestFirst": {
                "type": "boolean",
                "default": false,
                "description": "Deliver the chronological last part of the requested data first.",
                "example": true
              },
              "adjustments": {
                "type": "object",
                "description": "Adjustments values returned.",
                "properties": {
                  "payout": {
                    "type": "boolean",
                    "default": false,
                    "description": "Adjustments are applied for corporate action effects due to dividends, payouts, or other cash disbursements.",
                    "example": true
                  },
                  "split": {
                    "type": "boolean",
                    "default": true,
                    "description": "Adjustments are applied for corporate action effects due to the notation having a split, a reverse split, or a similar factor-based corporate action.",
                    "example": true
                  }
                }
              }
            },
            "required": [
              "identifier",
              "intervalSelection"
            ]
          },
          "meta": {
            "type": "object",
            "description": "The meta member contains the meta information of the request.",
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/AttributesMember"
              },
              "pagination": {
                "type": "object",
                "description": "Pagination attributes for the cursor-based pagination strategy.",
                "properties": {
                  "cursor": {
                    "type": "string",
                    "maxLength": 50,
                    "description": "Starting point as returned in the attributes `pagination.next` or `pagination.previous` by a prior invocation of this endpoint, or undefined (default).",
                    "example": "Lorem ipsum"
                  },
                  "limit": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "exclusiveMinimum": false,
                    "maximum": 5000,
                    "exclusiveMaximum": false,
                    "default": 20,
                    "description": "Non-negative maximum number of entries to return.",
                    "example": 20
                  }
                }
              }
            }
          }
        }
      },
      "PostVendorChartIQTimeSeriesIntradaySubsampleGetRequest": {
        "description": "Request Body",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "The data member contains the request's primary data.",
            "properties": {
              "identifier": {
                "type": "object",
                "description": "Identifier and type.",
                "properties": {
                  "value": {
                    "type": "string",
                    "pattern": "^[B-DF-HJ-NP-TV-Z0-9]{6}-[SLR]$|^[A-Z0-9.#&*+]{1,47}-[A-Z0-9]{2,4}$|^[0-9]{3,20}$|^[B-DF-HJ-NP-TV-Z0-9]{6}[0-9]$|^[A-Z]{2}[A-Z0-9]{9}[0-9]$|^[A-Z1-9][A-Z0-9]{5}$|^[0-9]{1,9}$|^[A-Z0-9]{8}[0-9]$",
                    "maxLength": 50,
                    "minLength": 3,
                    "description": "Identifier to resolve.",
                    "example": "FDS-US"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of the identifier. An instrument level identifier is resolved to a listing level identifier according to the configured listing selection rules.\n| Value | Description |\n| --- | --- |\n| idInstrument | MDG identifier of an instrument. |\n| idNotation | MDG identifier of a listing. |\n| fdsPermanentIdentifierSecurity | FactSet Permanent Identifier on security level. |\n| fdsPermanentIdentifierListing | FactSet Permanent Identifier on listing level. |\n| fdsPermanentIdentifierRegional | Regional FactSet Permanent Identifier, identifying the primary listing in the region. |\n| tickerExchange | FactSet market symbol of a listing. |\n| tickerRegion | Regional FactSet ticker symbol, identifying the primary listing in the region. |\n| sedol | SEDOL or IDII of a listing. |\n| isin | ISIN of an instrument. |\n| wkn | WKN of an instrument. |\n| valor | Valor number of an instrument. |\n| cusip | CUSIP or CINS identifier of an instrument |\n\n",
                    "enum": [
                      "idInstrument",
                      "idNotation",
                      "fdsPermanentIdentifierSecurity",
                      "fdsPermanentIdentifierListing",
                      "fdsPermanentIdentifierRegional",
                      "tickerExchange",
                      "tickerRegion",
                      "sedol",
                      "isin",
                      "wkn",
                      "valor",
                      "cusip"
                    ],
                    "example": "tickerRegion"
                  }
                },
                "required": [
                  "value",
                  "type"
                ]
              },
              "type": {
                "type": "string",
                "description": "Type of the price as configured for the customer.\n| Value | Description |\n| --- | --- |\n| trade | Trade price (ordinary, auction, pre or post-trading). |\n| bid | Bid price. |\n| ask | Ask price. |\n| yield | Yield price. |\n\n",
                "default": "trade",
                "enum": [
                  "trade",
                  "bid",
                  "ask",
                  "yield"
                ],
                "example": "trade"
              },
              "quality": {
                "type": "string",
                "description": "Quality of the price.\n| Value | Description |\n| --- | --- |\n| RLT | Real-time: intraday prices with minimal technical processing delays. |\n| DLY | Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes. |\n| BST | Best: choose the price quality with the least delay, as entitled for the client. |\n\n",
                "default": "DLY",
                "enum": [
                  "RLT",
                  "DLY",
                  "BST"
                ],
                "example": "DLY"
              },
              "from": {
                "type": "string",
                "format": "date-time",
                "description": "Date and time of the start point of the subsample (inclusive). `from` must be aligned to `granularity`. That is, the numerical value is an integral multiple of the time span value represented by `granularity`. The data accessible in the past is limited to a few weeks at most. Values in the future are not allowed.",
                "example": "2024-12-24T18:00:00.000000Z"
              },
              "granularity": {
                "type": "string",
                "description": "Subsample granularities suitable for intraday data.\n| Value | Description |\n| --- | --- |\n| 1s | Each subsample interval encompasses 1 second. |\n| 5s | Each subsample interval encompasses 5 seconds. |\n| 10s | Each subsample interval encompasses 10 seconds. |\n| 30s | Each subsample interval encompasses 30 seconds. |\n| 1m | Each subsample interval encompasses 1 minute. |\n| 5m | Each subsample interval encompasses 5 minutes. |\n| 10m | Each subsample interval encompasses 10 minutes. |\n| 15m | Each subsample interval encompasses 15 minutes. |\n| 30m | Each subsample interval encompasses 30 minutes. |\n| 1h | Each subsample interval encompasses 1 hour. |\n\n",
                "default": "1h",
                "enum": [
                  "1s",
                  "5s",
                  "10s",
                  "30s",
                  "1m",
                  "5m",
                  "10m",
                  "15m",
                  "30m",
                  "1h"
                ],
                "example": "1h"
              },
              "adjustments": {
                "type": "object",
                "description": "Adjustments values returned.",
                "properties": {
                  "split": {
                    "type": "boolean",
                    "default": true,
                    "description": "Adjustments are applied for corporate action effects due to the notation having a split, a reverse split, or a similar factor-based corporate action.",
                    "example": true
                  }
                }
              }
            },
            "required": [
              "identifier",
              "from"
            ]
          },
          "meta": {
            "type": "object",
            "description": "The meta member contains the meta information of the request.",
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/AttributesMember"
              }
            }
          }
        }
      },
      "PostVendorChartIQTimeSeriesIntradaySubsampleListRequest": {
        "description": "Request Body",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "The data member contains the request's primary data.",
            "properties": {
              "identifier": {
                "type": "object",
                "description": "Identifier and type.",
                "properties": {
                  "value": {
                    "type": "string",
                    "pattern": "^[B-DF-HJ-NP-TV-Z0-9]{6}-[SLR]$|^[A-Z0-9.#&*+]{1,47}-[A-Z0-9]{2,4}$|^[0-9]{3,20}$|^[B-DF-HJ-NP-TV-Z0-9]{6}[0-9]$|^[A-Z]{2}[A-Z0-9]{9}[0-9]$|^[A-Z1-9][A-Z0-9]{5}$|^[0-9]{1,9}$|^[A-Z0-9]{8}[0-9]$",
                    "maxLength": 50,
                    "minLength": 3,
                    "description": "Identifier to resolve.",
                    "example": "FDS-US"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of the identifier. An instrument level identifier is resolved to a listing level identifier according to the configured listing selection rules.\n| Value | Description |\n| --- | --- |\n| idInstrument | MDG identifier of an instrument. |\n| idNotation | MDG identifier of a listing. |\n| fdsPermanentIdentifierSecurity | FactSet Permanent Identifier on security level. |\n| fdsPermanentIdentifierListing | FactSet Permanent Identifier on listing level. |\n| fdsPermanentIdentifierRegional | Regional FactSet Permanent Identifier, identifying the primary listing in the region. |\n| tickerExchange | FactSet market symbol of a listing. |\n| tickerRegion | Regional FactSet ticker symbol, identifying the primary listing in the region. |\n| sedol | SEDOL or IDII of a listing. |\n| isin | ISIN of an instrument. |\n| wkn | WKN of an instrument. |\n| valor | Valor number of an instrument. |\n| cusip | CUSIP or CINS identifier of an instrument |\n\n",
                    "enum": [
                      "idInstrument",
                      "idNotation",
                      "fdsPermanentIdentifierSecurity",
                      "fdsPermanentIdentifierListing",
                      "fdsPermanentIdentifierRegional",
                      "tickerExchange",
                      "tickerRegion",
                      "sedol",
                      "isin",
                      "wkn",
                      "valor",
                      "cusip"
                    ],
                    "example": "tickerRegion"
                  }
                },
                "required": [
                  "value",
                  "type"
                ]
              },
              "type": {
                "type": "string",
                "description": "Type of the price as configured for the customer.\n| Value | Description |\n| --- | --- |\n| trade | Trade price (ordinary, auction, pre or post-trading). |\n| bid | Bid price. |\n| ask | Ask price. |\n| yield | Yield price. |\n\n",
                "default": "trade",
                "enum": [
                  "trade",
                  "bid",
                  "ask",
                  "yield"
                ],
                "example": "trade"
              },
              "quality": {
                "type": "string",
                "description": "Quality of the price.\n| Value | Description |\n| --- | --- |\n| RLT | Real-time: intraday prices with minimal technical processing delays. |\n| DLY | Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes. |\n| BST | Best: choose the price quality with the least delay, as entitled for the client. |\n\n",
                "default": "DLY",
                "enum": [
                  "RLT",
                  "DLY",
                  "BST"
                ],
                "example": "DLY"
              },
              "range": {
                "type": "object",
                "format": "timeRange",
                "properties": {
                  "start": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The starting point of the time range (inclusive). The data accessible in the past is limited to a few weeks at most.",
                    "example": "2024-01-01T00:00:00.000Z"
                  },
                  "end": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The ending point of the time range (exclusive). Values in the future are not allowed.",
                    "example": "2024-12-24T18:00:00.000000Z"
                  }
                },
                "required": [
                  "start",
                  "end"
                ],
                "description": "Date and time range for the time series. The `start` and `end` boundaries must be aligned to `granularity`. That is, the numerical value is an integral multiple of the time span value represented by `granularity`."
              },
              "granularity": {
                "type": "string",
                "description": "Subsample granularities suitable for intraday data.\n| Value | Description |\n| --- | --- |\n| 1s | Each subsample interval encompasses 1 second. |\n| 5s | Each subsample interval encompasses 5 seconds. |\n| 10s | Each subsample interval encompasses 10 seconds. |\n| 30s | Each subsample interval encompasses 30 seconds. |\n| 1m | Each subsample interval encompasses 1 minute. |\n| 5m | Each subsample interval encompasses 5 minutes. |\n| 10m | Each subsample interval encompasses 10 minutes. |\n| 15m | Each subsample interval encompasses 15 minutes. |\n| 30m | Each subsample interval encompasses 30 minutes. |\n| 1h | Each subsample interval encompasses 1 hour. |\n\n",
                "default": "1h",
                "enum": [
                  "1s",
                  "5s",
                  "10s",
                  "30s",
                  "1m",
                  "5m",
                  "10m",
                  "15m",
                  "30m",
                  "1h"
                ],
                "example": "1h"
              },
              "newestFirst": {
                "type": "boolean",
                "default": false,
                "description": "Deliver the chronological last part of the requested data first.",
                "example": false
              },
              "adjustments": {
                "type": "object",
                "description": "Adjustments values returned.",
                "properties": {
                  "split": {
                    "type": "boolean",
                    "default": true,
                    "description": "Adjustments are applied for corporate action effects due to the notation having a split, a reverse split, or a similar factor-based corporate action.",
                    "example": true
                  }
                }
              }
            },
            "required": [
              "identifier",
              "range"
            ]
          },
          "meta": {
            "type": "object",
            "description": "The meta member contains the meta information of the request.",
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/AttributesMember"
              },
              "pagination": {
                "type": "object",
                "description": "Pagination attributes for the cursor-based pagination strategy.",
                "properties": {
                  "cursor": {
                    "type": "string",
                    "maxLength": 50,
                    "description": "Starting point as returned in the attributes `pagination.next` or `pagination.previous` by a prior invocation of this endpoint, or undefined (default).",
                    "example": "Lorem ipsum"
                  },
                  "limit": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "exclusiveMinimum": false,
                    "maximum": 5000,
                    "exclusiveMaximum": false,
                    "default": 20,
                    "description": "Non-negative maximum number of entries to return.",
                    "example": 20
                  }
                }
              }
            }
          }
        }
      },
      "PostPricesTimeSeriesEodListRequest": {
        "description": "Request Body",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "The data member contains the request's primary data.",
            "properties": {
              "identifier": {
                "type": "object",
                "description": "Identifier and type.",
                "properties": {
                  "value": {
                    "type": "string",
                    "pattern": "^[B-DF-HJ-NP-TV-Z0-9]{6}-[SLR]$|^[A-Z0-9.#&*+]{1,47}-[A-Z0-9]{2,4}$|^[0-9]{3,20}$|^[B-DF-HJ-NP-TV-Z0-9]{6}[0-9]$|^[A-Z]{2}[A-Z0-9]{9}[0-9]$|^[A-Z1-9][A-Z0-9]{5}$|^[0-9]{1,9}$|^[A-Z0-9]{8}[0-9]$",
                    "maxLength": 50,
                    "minLength": 3,
                    "description": "Identifier to resolve.",
                    "example": "FDS-US"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of the identifier. An instrument level identifier is resolved to a listing level identifier according to the configured listing selection rules.\n| Value | Description |\n| --- | --- |\n| idInstrument | MDG identifier of an instrument. |\n| idNotation | MDG identifier of a listing. |\n| fdsPermanentIdentifierSecurity | FactSet Permanent Identifier on security level. |\n| fdsPermanentIdentifierListing | FactSet Permanent Identifier on listing level. |\n| fdsPermanentIdentifierRegional | Regional FactSet Permanent Identifier, identifying the primary listing in the region. |\n| tickerExchange | FactSet market symbol of a listing. |\n| tickerRegion | Regional FactSet ticker symbol, identifying the primary listing in the region. |\n| sedol | SEDOL or IDII of a listing. |\n| isin | ISIN of an instrument. |\n| wkn | WKN of an instrument. |\n| valor | Valor number of an instrument. |\n| cusip | CUSIP or CINS identifier of an instrument |\n\n",
                    "enum": [
                      "idInstrument",
                      "idNotation",
                      "fdsPermanentIdentifierSecurity",
                      "fdsPermanentIdentifierListing",
                      "fdsPermanentIdentifierRegional",
                      "tickerExchange",
                      "tickerRegion",
                      "sedol",
                      "isin",
                      "wkn",
                      "valor",
                      "cusip"
                    ],
                    "example": "tickerRegion"
                  }
                },
                "required": [
                  "value",
                  "type"
                ]
              },
              "type": {
                "type": "string",
                "description": "Type of the price as configured for the customer.\n| Value | Description |\n| --- | --- |\n| trade | Trade price (ordinary, auction, pre or post-trading). |\n| bid | Bid price. |\n| ask | Ask price. |\n| yield | Yield price. |\n| estimate | Estimated price. |\n\n",
                "default": "trade",
                "enum": [
                  "trade",
                  "bid",
                  "ask",
                  "yield",
                  "estimate"
                ],
                "example": "trade"
              },
              "quality": {
                "type": "string",
                "description": "Quality of the price.\n| Value | Description |\n| --- | --- |\n| DLY | Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes. |\n| EOD | End-of-day: prices updated once per day after the close of trading, possibly with an exchange-imposed delay of several hours or days. |\n| BST | Best: choose the price quality with the least delay, as entitled for the client. |\n\n",
                "default": "DLY",
                "enum": [
                  "DLY",
                  "EOD",
                  "BST"
                ],
                "example": "DLY"
              },
              "range": {
                "type": "object",
                "format": "dateRange",
                "properties": {
                  "start": {
                    "type": "string",
                    "format": "date",
                    "description": "The starting point of the date range (inclusive).",
                    "example": "2024-01-01"
                  },
                  "end": {
                    "type": "string",
                    "format": "date",
                    "description": "The ending point of the date range (exclusive).",
                    "example": "2024-01-01"
                  }
                },
                "required": [
                  "start",
                  "end"
                ],
                "description": "Date range for the time series. A valid date range is between 1900-01-01 and the day after the current day."
              },
              "newestFirst": {
                "type": "boolean",
                "default": false,
                "description": "Deliver the chronological last part of the requested data first.",
                "example": false
              },
              "adjustments": {
                "type": "object",
                "description": "Adjustments values returned.",
                "properties": {
                  "payout": {
                    "type": "boolean",
                    "default": false,
                    "description": "Adjustments are applied for corporate action effects due to dividends, payouts, or other cash disbursements.",
                    "example": true
                  },
                  "split": {
                    "type": "boolean",
                    "default": true,
                    "description": "Adjustments are applied for corporate action effects due to the notation having a split, a reverse split, or a similar factor-based corporate action.",
                    "example": true
                  }
                }
              }
            },
            "required": [
              "identifier",
              "range"
            ]
          },
          "meta": {
            "type": "object",
            "description": "The meta member contains the meta information of the request.",
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/AttributesMember"
              },
              "pagination": {
                "type": "object",
                "description": "Pagination attributes for the cursor-based pagination strategy.",
                "properties": {
                  "cursor": {
                    "type": "string",
                    "maxLength": 50,
                    "description": "Starting point as returned in the attributes `pagination.next` or `pagination.previous` by a prior invocation of this endpoint, or undefined (default).",
                    "example": "Lorem ipsum"
                  },
                  "limit": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "exclusiveMinimum": false,
                    "maximum": 5000,
                    "exclusiveMaximum": false,
                    "default": 20,
                    "description": "Non-negative maximum number of entries to return.",
                    "example": 20
                  }
                }
              }
            }
          }
        }
      },
      "PostPricesTimeSeriesEodSubsampleGetRequest": {
        "description": "Request Body",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "The data member contains the request's primary data.",
            "properties": {
              "identifier": {
                "type": "object",
                "description": "Identifier and type.",
                "properties": {
                  "value": {
                    "type": "string",
                    "pattern": "^[B-DF-HJ-NP-TV-Z0-9]{6}-[SLR]$|^[A-Z0-9.#&*+]{1,47}-[A-Z0-9]{2,4}$|^[0-9]{3,20}$|^[B-DF-HJ-NP-TV-Z0-9]{6}[0-9]$|^[A-Z]{2}[A-Z0-9]{9}[0-9]$|^[A-Z1-9][A-Z0-9]{5}$|^[0-9]{1,9}$|^[A-Z0-9]{8}[0-9]$",
                    "maxLength": 50,
                    "minLength": 3,
                    "description": "Identifier to resolve.",
                    "example": "FDS-US"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of the identifier. An instrument level identifier is resolved to a listing level identifier according to the configured listing selection rules.\n| Value | Description |\n| --- | --- |\n| idInstrument | MDG identifier of an instrument. |\n| idNotation | MDG identifier of a listing. |\n| fdsPermanentIdentifierSecurity | FactSet Permanent Identifier on security level. |\n| fdsPermanentIdentifierListing | FactSet Permanent Identifier on listing level. |\n| fdsPermanentIdentifierRegional | Regional FactSet Permanent Identifier, identifying the primary listing in the region. |\n| tickerExchange | FactSet market symbol of a listing. |\n| tickerRegion | Regional FactSet ticker symbol, identifying the primary listing in the region. |\n| sedol | SEDOL or IDII of a listing. |\n| isin | ISIN of an instrument. |\n| wkn | WKN of an instrument. |\n| valor | Valor number of an instrument. |\n| cusip | CUSIP or CINS identifier of an instrument |\n\n",
                    "enum": [
                      "idInstrument",
                      "idNotation",
                      "fdsPermanentIdentifierSecurity",
                      "fdsPermanentIdentifierListing",
                      "fdsPermanentIdentifierRegional",
                      "tickerExchange",
                      "tickerRegion",
                      "sedol",
                      "isin",
                      "wkn",
                      "valor",
                      "cusip"
                    ],
                    "example": "tickerRegion"
                  }
                },
                "required": [
                  "value",
                  "type"
                ]
              },
              "type": {
                "type": "string",
                "description": "Type of the price as configured for the customer.\n| Value | Description |\n| --- | --- |\n| trade | Trade price (ordinary, auction, pre or post-trading). |\n| bid | Bid price. |\n| ask | Ask price. |\n| yield | Yield price. |\n| estimate | Estimated price. |\n\n",
                "default": "trade",
                "enum": [
                  "trade",
                  "bid",
                  "ask",
                  "yield",
                  "estimate"
                ],
                "example": "trade"
              },
              "quality": {
                "type": "string",
                "description": "Quality of the price.\n| Value | Description |\n| --- | --- |\n| DLY | Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes. |\n| EOD | End-of-day: prices updated once per day after the close of trading, possibly with an exchange-imposed delay of several hours or days. |\n| BST | Best: choose the price quality with the least delay, as entitled for the client. |\n\n",
                "default": "DLY",
                "enum": [
                  "DLY",
                  "EOD",
                  "BST"
                ],
                "example": "DLY"
              },
              "interval": {
                "type": "object",
                "format": "dateRange",
                "properties": {
                  "start": {
                    "type": "string",
                    "format": "date",
                    "description": "The starting point of the interval (inclusive). ",
                    "example": "2024-12-24"
                  },
                  "end": {
                    "type": "string",
                    "format": "date",
                    "description": "The ending point of the interval (exclusive).",
                    "example": "2024-12-24"
                  }
                },
                "required": [
                  "start",
                  "end"
                ],
                "description": "Non-empty interval of days specifying a single subsample period. The starting point `start` of the single subsample is usually the attribute `range.end` of a previously received `/prices/timeSeries/eod/subsample/list` request. A valid range is between 1900-01-01 and a day that is less than or equal to the maximum allowed day determined from the delay period (if any). The ending point `end` may exceed the maximally entitled date range."
              },
              "adjustments": {
                "type": "object",
                "description": "Adjustments values returned.",
                "properties": {
                  "payout": {
                    "type": "boolean",
                    "default": false,
                    "description": "Adjustments are applied for corporate action effects due to dividends, payouts, or other cash disbursements.",
                    "example": true
                  },
                  "split": {
                    "type": "boolean",
                    "default": true,
                    "description": "Adjustments are applied for corporate action effects due to the notation having a split, a reverse split, or a similar factor-based corporate action.",
                    "example": true
                  }
                }
              }
            },
            "required": [
              "identifier",
              "interval"
            ]
          },
          "meta": {
            "type": "object",
            "description": "The meta member contains the meta information of the request.",
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/AttributesMember"
              }
            }
          }
        }
      },
      "PostPricesTimeSeriesEodSubsampleListRequest": {
        "description": "Request Body",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "The data member contains the request's primary data.",
            "properties": {
              "identifier": {
                "type": "object",
                "description": "Identifier and type.",
                "properties": {
                  "value": {
                    "type": "string",
                    "pattern": "^[B-DF-HJ-NP-TV-Z0-9]{6}-[SLR]$|^[A-Z0-9.#&*+]{1,47}-[A-Z0-9]{2,4}$|^[0-9]{3,20}$|^[B-DF-HJ-NP-TV-Z0-9]{6}[0-9]$|^[A-Z]{2}[A-Z0-9]{9}[0-9]$|^[A-Z1-9][A-Z0-9]{5}$|^[0-9]{1,9}$|^[A-Z0-9]{8}[0-9]$",
                    "maxLength": 50,
                    "minLength": 3,
                    "description": "Identifier to resolve.",
                    "example": "FDS-US"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of the identifier. An instrument level identifier is resolved to a listing level identifier according to the configured listing selection rules.\n| Value | Description |\n| --- | --- |\n| idInstrument | MDG identifier of an instrument. |\n| idNotation | MDG identifier of a listing. |\n| fdsPermanentIdentifierSecurity | FactSet Permanent Identifier on security level. |\n| fdsPermanentIdentifierListing | FactSet Permanent Identifier on listing level. |\n| fdsPermanentIdentifierRegional | Regional FactSet Permanent Identifier, identifying the primary listing in the region. |\n| tickerExchange | FactSet market symbol of a listing. |\n| tickerRegion | Regional FactSet ticker symbol, identifying the primary listing in the region. |\n| sedol | SEDOL or IDII of a listing. |\n| isin | ISIN of an instrument. |\n| wkn | WKN of an instrument. |\n| valor | Valor number of an instrument. |\n| cusip | CUSIP or CINS identifier of an instrument |\n\n",
                    "enum": [
                      "idInstrument",
                      "idNotation",
                      "fdsPermanentIdentifierSecurity",
                      "fdsPermanentIdentifierListing",
                      "fdsPermanentIdentifierRegional",
                      "tickerExchange",
                      "tickerRegion",
                      "sedol",
                      "isin",
                      "wkn",
                      "valor",
                      "cusip"
                    ],
                    "example": "tickerRegion"
                  }
                },
                "required": [
                  "value",
                  "type"
                ]
              },
              "type": {
                "type": "string",
                "description": "Type of the price as configured for the customer.\n| Value | Description |\n| --- | --- |\n| trade | Trade price (ordinary, auction, pre or post-trading). |\n| bid | Bid price. |\n| ask | Ask price. |\n| yield | Yield price. |\n| estimate | Estimated price. |\n\n",
                "default": "trade",
                "enum": [
                  "trade",
                  "bid",
                  "ask",
                  "yield",
                  "estimate"
                ],
                "example": "trade"
              },
              "quality": {
                "type": "string",
                "description": "Quality of the price.\n| Value | Description |\n| --- | --- |\n| DLY | Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes. |\n| EOD | End-of-day: prices updated once per day after the close of trading, possibly with an exchange-imposed delay of several hours or days. |\n| BST | Best: choose the price quality with the least delay, as entitled for the client. |\n\n",
                "default": "DLY",
                "enum": [
                  "DLY",
                  "EOD",
                  "BST"
                ],
                "example": "DLY"
              },
              "intervalSelection": {
                "type": "object",
                "description": "Select the intervals from which the subsamples are to be created.",
                "properties": {
                  "intervals": {
                    "type": "array",
                    "nullable": false,
                    "items": {
                      "type": "string",
                      "format": "date",
                      "example": "2024-01-01"
                    },
                    "minItems": 2,
                    "maxItems": 600,
                    "description": "Non-empty intervals of days to consider for the request. The array contains a list of at least two days in increasing order. Each pair of adjacent entries day_n and day_(n+1) specifies a half-open interval, that is a range of days d where day_n <= d < day_(n+1). A subsample is computed for each interval. The valid range of intervals is between 1900-01-01 and the day after the current day.",
                    "example": [
                      "2024-01-01",
                      "2024-02-01"
                    ]
                  },
                  "samples": {
                    "type": "object",
                    "description": "Subsample granularity and number of samples suitable for end-of-day data.",
                    "properties": {
                      "end": {
                        "type": "string",
                        "format": "date",
                        "description": "Date of the end point of the subsamples (exclusive). `end` is limited to the day after the current day.",
                        "example": "2024-12-24"
                      },
                      "number": {
                        "type": "number",
                        "format": "int32",
                        "minimum": 1,
                        "exclusiveMinimum": false,
                        "maximum": 10000,
                        "exclusiveMaximum": false,
                        "description": "Number of subsamples returned. The product of `number` and `granularity` must not extend further into the past than 1900-01-01.",
                        "example": 8068
                      },
                      "granularity": {
                        "type": "string",
                        "description": "Subsample granularities suitable for end-of-day data.\n| Value | Description |\n| --- | --- |\n| 1d | Each subsample interval encompasses 1 day. |\n| 1w | Each subsample interval encompasses 1 week. |\n| 1m | Each subsample interval encompasses 1 month. |\n| 3m | Each subsample interval encompasses 3 month. |\n| 6m | Each subsample interval encompasses 6 month. |\n| 1y | Each subsample interval encompasses 1 year. |\n\n",
                        "default": "1w",
                        "enum": [
                          "1d",
                          "1w",
                          "1m",
                          "3m",
                          "6m",
                          "1y"
                        ],
                        "example": "1w"
                      }
                    },
                    "required": [
                      "end",
                      "number"
                    ]
                  }
                }
              },
              "newestFirst": {
                "type": "boolean",
                "default": false,
                "description": "Deliver the chronological last part of the requested data first.",
                "example": true
              },
              "adjustments": {
                "type": "object",
                "description": "Adjustments values returned.",
                "properties": {
                  "payout": {
                    "type": "boolean",
                    "default": false,
                    "description": "Adjustments are applied for corporate action effects due to dividends, payouts, or other cash disbursements.",
                    "example": false
                  },
                  "split": {
                    "type": "boolean",
                    "default": true,
                    "description": "Adjustments are applied for corporate action effects due to the notation having a split, a reverse split, or a similar factor-based corporate action.",
                    "example": true
                  }
                }
              }
            },
            "required": [
              "identifier",
              "intervalSelection"
            ]
          },
          "meta": {
            "type": "object",
            "description": "The meta member contains the meta information of the request.",
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/AttributesMember"
              },
              "pagination": {
                "type": "object",
                "description": "Pagination attributes for the cursor-based pagination strategy.",
                "properties": {
                  "cursor": {
                    "type": "string",
                    "maxLength": 50,
                    "description": "Starting point as returned in the attributes `pagination.next` or `pagination.previous` by a prior invocation of this endpoint, or undefined (default).",
                    "example": "Lorem ipsum"
                  },
                  "limit": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "exclusiveMinimum": false,
                    "maximum": 5000,
                    "exclusiveMaximum": false,
                    "default": 20,
                    "description": "Non-negative maximum number of entries to return.",
                    "example": 20
                  }
                }
              }
            }
          }
        }
      },
      "PostPricesTimeSeriesIntradayListRequest": {
        "description": "Request Body",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "The data member contains the request's primary data.",
            "properties": {
              "identifier": {
                "type": "object",
                "description": "Identifier and type.",
                "properties": {
                  "value": {
                    "type": "string",
                    "pattern": "^[B-DF-HJ-NP-TV-Z0-9]{6}-[SLR]$|^[A-Z0-9.#&*+]{1,47}-[A-Z0-9]{2,4}$|^[0-9]{3,20}$|^[B-DF-HJ-NP-TV-Z0-9]{6}[0-9]$|^[A-Z]{2}[A-Z0-9]{9}[0-9]$|^[A-Z1-9][A-Z0-9]{5}$|^[0-9]{1,9}$|^[A-Z0-9]{8}[0-9]$",
                    "maxLength": 50,
                    "minLength": 3,
                    "description": "Identifier to resolve.",
                    "example": "FDS-US"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of the identifier. An instrument level identifier is resolved to a listing level identifier according to the configured listing selection rules.\n| Value | Description |\n| --- | --- |\n| idInstrument | MDG identifier of an instrument. |\n| idNotation | MDG identifier of a listing. |\n| fdsPermanentIdentifierSecurity | FactSet Permanent Identifier on security level. |\n| fdsPermanentIdentifierListing | FactSet Permanent Identifier on listing level. |\n| fdsPermanentIdentifierRegional | Regional FactSet Permanent Identifier, identifying the primary listing in the region. |\n| tickerExchange | FactSet market symbol of a listing. |\n| tickerRegion | Regional FactSet ticker symbol, identifying the primary listing in the region. |\n| sedol | SEDOL or IDII of a listing. |\n| isin | ISIN of an instrument. |\n| wkn | WKN of an instrument. |\n| valor | Valor number of an instrument. |\n| cusip | CUSIP or CINS identifier of an instrument |\n\n",
                    "enum": [
                      "idInstrument",
                      "idNotation",
                      "fdsPermanentIdentifierSecurity",
                      "fdsPermanentIdentifierListing",
                      "fdsPermanentIdentifierRegional",
                      "tickerExchange",
                      "tickerRegion",
                      "sedol",
                      "isin",
                      "wkn",
                      "valor",
                      "cusip"
                    ],
                    "example": "tickerRegion"
                  }
                },
                "required": [
                  "value",
                  "type"
                ]
              },
              "type": {
                "type": "string",
                "description": "Type of the price as configured for the customer.\n| Value | Description |\n| --- | --- |\n| trade | Trade price (ordinary, auction, pre or post-trading). |\n| bid | Bid price. |\n| ask | Ask price. |\n| yield | Yield price. |\n\n",
                "default": "trade",
                "enum": [
                  "trade",
                  "bid",
                  "ask",
                  "yield"
                ],
                "example": "trade"
              },
              "quality": {
                "type": "string",
                "description": "Quality of the price.\n| Value | Description |\n| --- | --- |\n| RLT | Real-time: intraday prices with minimal technical processing delays. |\n| DLY | Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes. |\n| BST | Best: choose the price quality with the least delay, as entitled for the client. |\n\n",
                "default": "DLY",
                "enum": [
                  "RLT",
                  "DLY",
                  "BST"
                ],
                "example": "DLY"
              },
              "range": {
                "type": "object",
                "format": "timeRange",
                "properties": {
                  "start": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The starting point of the time range (inclusive). The data accessible in the past is limited to a few weeks at most.",
                    "example": "2024-01-01T00:00:00.000Z"
                  },
                  "end": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The ending point of the time range (exclusive). Values in the future are not allowed.",
                    "example": "2024-12-24T18:00:00.000000Z"
                  }
                },
                "required": [
                  "start",
                  "end"
                ],
                "description": "Date and time range for the time series."
              },
              "newestFirst": {
                "type": "boolean",
                "default": false,
                "description": "Deliver the chronological last part of the requested data first.",
                "example": true
              },
              "applyTickCorrections": {
                "type": "string",
                "description": "This attribute represents the choice whether to apply insert, update, and delete corrections for individual ticks sent by the exchange or devised by FactSet Digital Solutions GmbH.\n\n If the exchange or FactSet Digital Solutions GmbH decides to correct data, a correction instruction tick is sent shortly (usually on the same trading day) after dissemination of the corresponding original tick (if any). The correction instruction is then applied, yielding a corrected view. For \"insert\" corrections, there is no original tick, and the corrected view contains the inserted tick. For \"update\" corrections, the corrected view contains the updated original tick. For \"delete\" corrections, the original tick is removed from the corrected view.\n| Value | Description |\n| --- | --- |\n| none | Select original tick data without applying any corrections. |\n| all | Select corrected view. |\n\n",
                "default": "none",
                "enum": [
                  "none",
                  "all"
                ],
                "example": "none"
              },
              "includeVolumeOnlyTicks": {
                "type": "boolean",
                "default": false,
                "description": "Include ticks that contain a volume without a price.",
                "example": true
              },
              "adjustments": {
                "type": "object",
                "description": "Adjustments values returned.",
                "properties": {
                  "split": {
                    "type": "boolean",
                    "default": true,
                    "description": "Adjustments are applied for corporate action effects due to the notation having a split, a reverse split, or a similar factor-based corporate action.",
                    "example": true
                  }
                }
              }
            },
            "required": [
              "identifier",
              "range"
            ]
          },
          "meta": {
            "type": "object",
            "description": "The meta member contains the meta information of the request.",
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/AttributesMember"
              },
              "pagination": {
                "type": "object",
                "description": "Pagination attributes for the cursor-based pagination strategy.",
                "properties": {
                  "cursor": {
                    "type": "string",
                    "maxLength": 50,
                    "description": "Starting point as returned in the attributes `pagination.next` or `pagination.previous` by a prior invocation of this endpoint, or undefined (default).",
                    "example": "Lorem ipsum"
                  },
                  "limit": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "exclusiveMinimum": false,
                    "maximum": 500,
                    "exclusiveMaximum": false,
                    "default": 20,
                    "description": "Non-negative maximum number of entries to return.",
                    "example": 20
                  }
                }
              }
            }
          }
        }
      },
      "PostPricesTimeSeriesIntradaySubsampleGetRequest": {
        "description": "Request Body",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "The data member contains the request's primary data.",
            "properties": {
              "identifier": {
                "type": "object",
                "description": "Identifier and type.",
                "properties": {
                  "value": {
                    "type": "string",
                    "pattern": "^[B-DF-HJ-NP-TV-Z0-9]{6}-[SLR]$|^[A-Z0-9.#&*+]{1,47}-[A-Z0-9]{2,4}$|^[0-9]{3,20}$|^[B-DF-HJ-NP-TV-Z0-9]{6}[0-9]$|^[A-Z]{2}[A-Z0-9]{9}[0-9]$|^[A-Z1-9][A-Z0-9]{5}$|^[0-9]{1,9}$|^[A-Z0-9]{8}[0-9]$",
                    "maxLength": 50,
                    "minLength": 3,
                    "description": "Identifier to resolve.",
                    "example": "FDS-US"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of the identifier. An instrument level identifier is resolved to a listing level identifier according to the configured listing selection rules.\n| Value | Description |\n| --- | --- |\n| idInstrument | MDG identifier of an instrument. |\n| idNotation | MDG identifier of a listing. |\n| fdsPermanentIdentifierSecurity | FactSet Permanent Identifier on security level. |\n| fdsPermanentIdentifierListing | FactSet Permanent Identifier on listing level. |\n| fdsPermanentIdentifierRegional | Regional FactSet Permanent Identifier, identifying the primary listing in the region. |\n| tickerExchange | FactSet market symbol of a listing. |\n| tickerRegion | Regional FactSet ticker symbol, identifying the primary listing in the region. |\n| sedol | SEDOL or IDII of a listing. |\n| isin | ISIN of an instrument. |\n| wkn | WKN of an instrument. |\n| valor | Valor number of an instrument. |\n| cusip | CUSIP or CINS identifier of an instrument |\n\n",
                    "enum": [
                      "idInstrument",
                      "idNotation",
                      "fdsPermanentIdentifierSecurity",
                      "fdsPermanentIdentifierListing",
                      "fdsPermanentIdentifierRegional",
                      "tickerExchange",
                      "tickerRegion",
                      "sedol",
                      "isin",
                      "wkn",
                      "valor",
                      "cusip"
                    ],
                    "example": "tickerRegion"
                  }
                },
                "required": [
                  "value",
                  "type"
                ]
              },
              "type": {
                "type": "string",
                "description": "Type of the price as configured for the customer.\n| Value | Description |\n| --- | --- |\n| trade | Trade price (ordinary, auction, pre or post-trading). |\n| bid | Bid price. |\n| ask | Ask price. |\n| yield | Yield price. |\n\n",
                "default": "trade",
                "enum": [
                  "trade",
                  "bid",
                  "ask",
                  "yield"
                ],
                "example": "trade"
              },
              "quality": {
                "type": "string",
                "description": "Quality of the price.\n| Value | Description |\n| --- | --- |\n| RLT | Real-time: intraday prices with minimal technical processing delays. |\n| DLY | Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes. |\n| BST | Best: choose the price quality with the least delay, as entitled for the client. |\n\n",
                "default": "DLY",
                "enum": [
                  "RLT",
                  "DLY",
                  "BST"
                ],
                "example": "DLY"
              },
              "from": {
                "type": "string",
                "format": "date-time",
                "description": "Date and time of the start point of the subsample (inclusive). `from` must be aligned to `granularity`. That is, the numerical value is an integral multiple of the time span value represented by `granularity`. The data accessible in the past is limited to a few weeks at most. Values in the future are not allowed.",
                "example": "2024-01-01T00:00:00.000Z"
              },
              "granularity": {
                "type": "string",
                "description": "Subsample granularities suitable for intraday data.\n| Value | Description |\n| --- | --- |\n| 1s | Each subsample interval encompasses 1 second. |\n| 5s | Each subsample interval encompasses 5 seconds. |\n| 10s | Each subsample interval encompasses 10 seconds. |\n| 30s | Each subsample interval encompasses 30 seconds. |\n| 1m | Each subsample interval encompasses 1 minute. |\n| 5m | Each subsample interval encompasses 5 minutes. |\n| 10m | Each subsample interval encompasses 10 minutes. |\n| 15m | Each subsample interval encompasses 15 minutes. |\n| 30m | Each subsample interval encompasses 30 minutes. |\n| 1h | Each subsample interval encompasses 1 hour. |\n\n",
                "default": "1h",
                "enum": [
                  "1s",
                  "5s",
                  "10s",
                  "30s",
                  "1m",
                  "5m",
                  "10m",
                  "15m",
                  "30m",
                  "1h"
                ],
                "example": "1h"
              },
              "adjustments": {
                "type": "object",
                "description": "Adjustments values returned.",
                "properties": {
                  "split": {
                    "type": "boolean",
                    "default": true,
                    "description": "Adjustments are applied for corporate action effects due to the notation having a split, a reverse split, or a similar factor-based corporate action.",
                    "example": true
                  }
                }
              }
            },
            "required": [
              "identifier",
              "from"
            ]
          },
          "meta": {
            "type": "object",
            "description": "The meta member contains the meta information of the request.",
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/AttributesMember"
              }
            }
          }
        }
      },
      "PostPricesTimeSeriesIntradaySubsampleListRequest": {
        "description": "Request Body",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "The data member contains the request's primary data.",
            "properties": {
              "identifier": {
                "type": "object",
                "description": "Identifier and type.",
                "properties": {
                  "value": {
                    "type": "string",
                    "pattern": "^[B-DF-HJ-NP-TV-Z0-9]{6}-[SLR]$|^[A-Z0-9.#&*+]{1,47}-[A-Z0-9]{2,4}$|^[0-9]{3,20}$|^[B-DF-HJ-NP-TV-Z0-9]{6}[0-9]$|^[A-Z]{2}[A-Z0-9]{9}[0-9]$|^[A-Z1-9][A-Z0-9]{5}$|^[0-9]{1,9}$|^[A-Z0-9]{8}[0-9]$",
                    "maxLength": 50,
                    "minLength": 3,
                    "description": "Identifier to resolve.",
                    "example": "FDS-US"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of the identifier. An instrument level identifier is resolved to a listing level identifier according to the configured listing selection rules.\n| Value | Description |\n| --- | --- |\n| idInstrument | MDG identifier of an instrument. |\n| idNotation | MDG identifier of a listing. |\n| fdsPermanentIdentifierSecurity | FactSet Permanent Identifier on security level. |\n| fdsPermanentIdentifierListing | FactSet Permanent Identifier on listing level. |\n| fdsPermanentIdentifierRegional | Regional FactSet Permanent Identifier, identifying the primary listing in the region. |\n| tickerExchange | FactSet market symbol of a listing. |\n| tickerRegion | Regional FactSet ticker symbol, identifying the primary listing in the region. |\n| sedol | SEDOL or IDII of a listing. |\n| isin | ISIN of an instrument. |\n| wkn | WKN of an instrument. |\n| valor | Valor number of an instrument. |\n| cusip | CUSIP or CINS identifier of an instrument |\n\n",
                    "enum": [
                      "idInstrument",
                      "idNotation",
                      "fdsPermanentIdentifierSecurity",
                      "fdsPermanentIdentifierListing",
                      "fdsPermanentIdentifierRegional",
                      "tickerExchange",
                      "tickerRegion",
                      "sedol",
                      "isin",
                      "wkn",
                      "valor",
                      "cusip"
                    ],
                    "example": "tickerRegion"
                  }
                },
                "required": [
                  "value",
                  "type"
                ]
              },
              "type": {
                "type": "string",
                "description": "Type of the price as configured for the customer.\n| Value | Description |\n| --- | --- |\n| trade | Trade price (ordinary, auction, pre or post-trading). |\n| bid | Bid price. |\n| ask | Ask price. |\n| yield | Yield price. |\n\n",
                "default": "trade",
                "enum": [
                  "trade",
                  "bid",
                  "ask",
                  "yield"
                ],
                "example": "trade"
              },
              "quality": {
                "type": "string",
                "description": "Quality of the price.\n| Value | Description |\n| --- | --- |\n| RLT | Real-time: intraday prices with minimal technical processing delays. |\n| DLY | Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes. |\n| BST | Best: choose the price quality with the least delay, as entitled for the client. |\n\n",
                "default": "DLY",
                "enum": [
                  "RLT",
                  "DLY",
                  "BST"
                ],
                "example": "DLY"
              },
              "range": {
                "type": "object",
                "format": "timeRange",
                "properties": {
                  "start": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The starting point of the time range (inclusive). The data accessible in the past is limited to a few weeks at most.",
                    "example": "2024-12-24T18:00:00.000000Z"
                  },
                  "end": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The ending point of the time range (exclusive). Values in the future are not allowed.",
                    "example": "2024-01-01T00:00:00.000Z"
                  }
                },
                "required": [
                  "start",
                  "end"
                ],
                "description": "Date and time range for the time series. The `start` and `end` boundaries must be aligned to `granularity`. That is, the numerical value is an integral multiple of the time span value represented by `granularity`."
              },
              "alignRange": {
                "type": "boolean",
                "default": false,
                "description": "If set to `true`, the start and end of the range are truncated so that they are aligned to the selected `granularity`.",
                "example": true
              },
              "granularity": {
                "type": "string",
                "description": "Subsample granularities suitable for intraday data.\n| Value | Description |\n| --- | --- |\n| 1s | Each subsample interval encompasses 1 second. |\n| 5s | Each subsample interval encompasses 5 seconds. |\n| 10s | Each subsample interval encompasses 10 seconds. |\n| 30s | Each subsample interval encompasses 30 seconds. |\n| 1m | Each subsample interval encompasses 1 minute. |\n| 5m | Each subsample interval encompasses 5 minutes. |\n| 10m | Each subsample interval encompasses 10 minutes. |\n| 15m | Each subsample interval encompasses 15 minutes. |\n| 30m | Each subsample interval encompasses 30 minutes. |\n| 1h | Each subsample interval encompasses 1 hour. |\n\n",
                "default": "1h",
                "enum": [
                  "1s",
                  "5s",
                  "10s",
                  "30s",
                  "1m",
                  "5m",
                  "10m",
                  "15m",
                  "30m",
                  "1h"
                ],
                "example": "1h"
              },
              "newestFirst": {
                "type": "boolean",
                "default": false,
                "description": "Deliver the chronological last part of the requested data first.",
                "example": false
              },
              "adjustments": {
                "type": "object",
                "description": "Adjustments values returned.",
                "properties": {
                  "split": {
                    "type": "boolean",
                    "default": true,
                    "description": "Adjustments are applied for corporate action effects due to the notation having a split, a reverse split, or a similar factor-based corporate action.",
                    "example": true
                  }
                }
              }
            },
            "required": [
              "identifier",
              "range"
            ]
          },
          "meta": {
            "type": "object",
            "description": "The meta member contains the meta information of the request.",
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/AttributesMember"
              },
              "pagination": {
                "type": "object",
                "description": "Pagination attributes for the cursor-based pagination strategy.",
                "properties": {
                  "cursor": {
                    "type": "string",
                    "maxLength": 50,
                    "description": "Starting point as returned in the attributes `pagination.next` or `pagination.previous` by a prior invocation of this endpoint, or undefined (default).",
                    "example": "Lorem ipsum"
                  },
                  "limit": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "exclusiveMinimum": false,
                    "maximum": 5000,
                    "exclusiveMaximum": false,
                    "default": 20,
                    "description": "Non-negative maximum number of entries to return.",
                    "example": 20
                  }
                }
              }
            }
          }
        }
      },
      "PostPricesTimeSeriesIntradaySubsampleListDataSubsamplesItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "time": {
            "nullable": true,
            "type": "string",
            "format": "date-time",
            "description": "Date and time of the start of the subsample.",
            "example": "2024-01-01T00:00:00.000Z"
          },
          "first": {
            "nullable": true,
            "type": "number",
            "format": "real",
            "description": "First price of the subsample.",
            "example": 3.03
          },
          "last": {
            "nullable": true,
            "type": "number",
            "format": "real",
            "description": "Last price of the subsample.",
            "example": 4.04
          },
          "low": {
            "nullable": true,
            "type": "number",
            "format": "real",
            "description": "Lowest price of the subsample.",
            "example": 5.05
          },
          "high": {
            "nullable": true,
            "type": "number",
            "format": "real",
            "description": "Highest price of the subsample.",
            "example": 5.05
          },
          "tradingVolume": {
            "nullable": true,
            "type": "number",
            "format": "real",
            "description": "Accumulated number of units (e.g. shares) traded of the subsample. If the requested type of the price is ask, bid, or yield, the value is empty.",
            "example": 1.01
          },
          "tradingValue": {
            "nullable": true,
            "type": "number",
            "format": "real",
            "description": "Accumulated monetary equivalent (cash value) of the subsample. If the requested type of the price is ask, bid, or yield, the value is empty. See attribute `currency` in endpoint `/prices/get` for its unit.",
            "example": 4.04
          },
          "volumeWeightedAveragePrice": {
            "nullable": true,
            "type": "number",
            "format": "real",
            "description": "The volume-weighted average price (VWAP) of the subsample. See attribute currency in endpoint `/prices/get` for its unit.",
            "example": 2.02
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostPricesTimeSeriesEodSubsampleListDataSubsamplesItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "date": {
            "nullable": true,
            "type": "string",
            "format": "date",
            "description": "Date of the start of the subsample.",
            "example": "2024-12-24"
          },
          "first": {
            "nullable": true,
            "type": "number",
            "format": "real",
            "description": "First price of the subsample.",
            "example": 1.01
          },
          "last": {
            "nullable": true,
            "type": "number",
            "format": "real",
            "description": "Last price of the subsample.",
            "example": 4.04
          },
          "low": {
            "nullable": true,
            "type": "number",
            "format": "real",
            "description": "Lowest price of the subsample.",
            "example": 1.01
          },
          "high": {
            "nullable": true,
            "type": "number",
            "format": "real",
            "description": "Highest price of the subsample.",
            "example": 3.1415
          },
          "tradingVolume": {
            "nullable": true,
            "type": "number",
            "format": "real",
            "description": "Accumulated number of units (e.g. shares) traded of the subsample. If the requested type of the price is ask, bid, or yield, the value is empty.",
            "example": 3.03
          },
          "tradingValue": {
            "nullable": true,
            "type": "number",
            "format": "real",
            "description": "Accumulated monetary equivalent (cash value) of the subsample. If the requested type of the price is ask, bid, or yield, the value is empty. See attribute `currency` in endpoint `/prices/get` for its unit.",
            "example": 5.05
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostPricesTimeSeriesIntradayListDataPricesItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "time": {
            "nullable": true,
            "type": "string",
            "format": "date-time",
            "description": "Date and time.",
            "example": "2024-12-24T18:00:00.000000Z"
          },
          "tickId": {
            "nullable": true,
            "type": "number",
            "format": "real",
            "description": "Intraday tick identifier created by a feed handler, unique within a trading day.",
            "example": 3.1415
          },
          "price": {
            "nullable": true,
            "type": "number",
            "format": "real",
            "description": "Price value. See attribute `valueUnit` in endpoint `/prices/get` for its unit, except for price type yield, where the `valueUnit` is always `percent` (id=258).",
            "example": 3.1415
          },
          "quoteCondition": {
            "nullable": true,
            "type": "string",
            "description": "Quote condition. Possible values depend on the values delivered by the supplier of the price information.",
            "example": "Lorem ipsum"
          },
          "tradingVolume": {
            "nullable": true,
            "type": "number",
            "format": "real",
            "description": "Number of units (e.g. shares) traded, offered (price type ask), solicited (price type bid), or empty (price type yield).",
            "example": 4.04
          },
          "tradingValue": {
            "nullable": true,
            "type": "number",
            "format": "real",
            "description": "Monetary equivalent (cash value) of the trade. See attribute `currency` in endpoint `/prices/get` for its unit. Empty for price type yield.",
            "example": 2.02
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      },
      "PostPricesTimeSeriesEodListDataPricesItems": {
        "type": "object",
        "nullable": false,
        "properties": {
          "date": {
            "nullable": true,
            "type": "string",
            "format": "date",
            "description": "Date.",
            "example": "2024-01-01"
          },
          "first": {
            "nullable": true,
            "type": "number",
            "format": "real",
            "description": "First price.",
            "example": 3.03
          },
          "last": {
            "nullable": true,
            "type": "number",
            "format": "real",
            "description": "Last price.",
            "example": 2.02
          },
          "low": {
            "nullable": true,
            "type": "number",
            "format": "real",
            "description": "Lowest price.",
            "example": 3.03
          },
          "high": {
            "nullable": true,
            "type": "number",
            "format": "real",
            "description": "Highest price.",
            "example": 2.02
          },
          "tradingVolume": {
            "nullable": true,
            "type": "number",
            "format": "real",
            "description": "Number of units (e.g. shares) traded (price type trade and estimate), offered (price type ask), solicited (price type bid), or empty (price type yield).",
            "example": 2.02
          },
          "tradingValue": {
            "nullable": true,
            "type": "number",
            "format": "real",
            "description": "Monetary equivalent (cash value) of the trade. See attribute `currency` in endpoint `/prices/get` for its unit. Empty for price type yield.",
            "example": 5.05
          }
        },
        "description": "A list of objects. For semantical context see the description of the parent array."
      }
    },
    "responses": {
      "PostVendorChartIQTimeSeriesEodList200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "idNotation": {
                      "nullable": true,
                      "type": "string",
                      "format": "id64",
                      "description": "MDG identifier of the listing.",
                      "example": "1532562"
                    },
                    "sourceIdentifier": {
                      "nullable": true,
                      "type": "string",
                      "description": "Identifier used in the request.",
                      "example": "FDS-US"
                    },
                    "range": {
                      "nullable": true,
                      "type": "object",
                      "format": "dateRange",
                      "properties": {
                        "start": {
                          "nullable": true,
                          "type": "string",
                          "format": "date",
                          "description": "The starting point of the date range (inclusive).",
                          "example": "2024-01-01"
                        },
                        "end": {
                          "nullable": true,
                          "type": "string",
                          "format": "date",
                          "description": "The ending point of the date range (exclusive).",
                          "example": "2024-01-01"
                        }
                      },
                      "required": [
                        "start",
                        "end"
                      ],
                      "description": "Date range for the returned time series."
                    },
                    "quality": {
                      "nullable": true,
                      "type": "string",
                      "description": "Quality of the price.\n| Value | Description |\n| --- | --- |\n| DLY | Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes. |\n| EOD | End-of-day: prices updated once per day after the close of trading, possibly with an exchange-imposed delay of several hours or days. |\n\n",
                      "enum": [
                        "DLY",
                        "EOD"
                      ],
                      "example": "EOD"
                    },
                    "prices": {
                      "nullable": false,
                      "type": "array",
                      "items": {
                        "nullable": false,
                        "type": "array",
                        "items": {
                          "type": "number",
                          "format": "real",
                          "description": "",
                          "example": 2.02
                        },
                        "description": ""
                      },
                      "description": "Time series of prices as an array of arrays. One record is represented as an array and consists of a timestamp, four price values, and the trading volume. For the unit of the price values, see attribute `valueUnit` in endpoint `/prices/get`, except for price type yield, where the `valueUnit` is always `percent` (id=258). The order is as follows: timestamp seconds since epoch in UTC; first price; highest price; lowest price; last price; number of units (e.g. shares) traded (price type trade and estimate), offered (price type ask), solicited (price type bid), or empty (price type yield)."
                    }
                  },
                  "description": "Time series data for the notation.",
                  "nullable": false
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/CursorBasedPaginationOutputObjectWithoutTotal"
                    }
                  }
                }
              }
            },
            "example": {
              "data": {
                "idNotation": "1532562",
                "sourceIdentifier": "FDS-US",
                "range": {
                  "start": "2024-01-01",
                  "end": "2024-01-01"
                },
                "quality": "EOD",
                "prices": [
                  [
                    2.02
                  ]
                ]
              },
              "meta": {
                "status": {
                  "code": 200
                },
                "pagination": {
                  "next": "Lorem ipsum",
                  "previous": "Lorem ipsum"
                }
              }
            }
          }
        }
      },
      "PostVendorChartIQTimeSeriesEodSubsampleGet200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "idNotation": {
                      "nullable": true,
                      "type": "string",
                      "format": "id64",
                      "description": "MDG identifier of the listing.",
                      "example": "1532562"
                    },
                    "sourceIdentifier": {
                      "nullable": true,
                      "type": "string",
                      "description": "Identifier used in the request.",
                      "example": "FDS-US"
                    },
                    "quality": {
                      "nullable": true,
                      "type": "string",
                      "description": "Quality of the price.\n| Value | Description |\n| --- | --- |\n| DLY | Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes. |\n| EOD | End-of-day: prices updated once per day after the close of trading, possibly with an exchange-imposed delay of several hours or days. |\n\n",
                      "enum": [
                        "DLY",
                        "EOD"
                      ],
                      "example": "EOD"
                    },
                    "subsample": {
                      "nullable": false,
                      "type": "array",
                      "items": {
                        "type": "number",
                        "format": "real",
                        "description": "",
                        "example": 2.02
                      },
                      "description": "Single summary record. The record consists of a timestamp, four price values, and the trading volume. For the unit of the price values, see attribute `valueUnit` in endpoint `/prices/get`, except for price type yield, where the `valueUnit` is always `percent` (id=258). The order is as follows: timestamp of the start of the subsample (seconds since epoch in UTC); first price of the subsample; highest price of the subsample; lowest price of the subsample; last price of the subsample; accumulated number of units (e.g. shares) traded of the subsample. If the requested type of the price is ask, bid, or yield, the accumulated number of units is empty."
                    }
                  },
                  "description": "Subsample data for the notation.",
                  "nullable": false
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": {
                "idNotation": "1532562",
                "sourceIdentifier": "FDS-US",
                "quality": "EOD",
                "subsample": [
                  2.02
                ]
              },
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "PostVendorChartIQTimeSeriesEodSubsampleList200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "idNotation": {
                      "nullable": true,
                      "type": "string",
                      "format": "id64",
                      "description": "MDG identifier of the listing.",
                      "example": "1532562"
                    },
                    "sourceIdentifier": {
                      "nullable": true,
                      "type": "string",
                      "description": "Identifier used in the request.",
                      "example": "FDS-US"
                    },
                    "range": {
                      "nullable": true,
                      "type": "object",
                      "format": "dateRange",
                      "properties": {
                        "start": {
                          "nullable": true,
                          "type": "string",
                          "format": "date",
                          "description": "The starting point of the date range (inclusive).",
                          "example": "2024-12-24"
                        },
                        "end": {
                          "nullable": true,
                          "type": "string",
                          "format": "date",
                          "description": "The ending point of the date range (exclusive).",
                          "example": "2024-01-01"
                        }
                      },
                      "required": [
                        "start",
                        "end"
                      ],
                      "description": "Date range for the returned time series."
                    },
                    "quality": {
                      "nullable": true,
                      "type": "string",
                      "description": "Quality of the price.\n| Value | Description |\n| --- | --- |\n| DLY | Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes. |\n| EOD | End-of-day: prices updated once per day after the close of trading, possibly with an exchange-imposed delay of several hours or days. |\n\n",
                      "enum": [
                        "DLY",
                        "EOD"
                      ],
                      "example": "EOD"
                    },
                    "subsamples": {
                      "nullable": false,
                      "type": "array",
                      "items": {
                        "nullable": false,
                        "type": "array",
                        "items": {
                          "type": "number",
                          "format": "real",
                          "description": "",
                          "example": 5.05
                        },
                        "description": ""
                      },
                      "description": "List of summary records as an array of arrays. One record is represented as an array and consists of a timestamp, four price values, and the trading volume. For the unit of the price values, see attribute `valueUnit` in endpoint `/prices/get`, except for price type yield, where the `valueUnit` is always `percent` (id=258). The order is as follows: timestamp of the start of the subsample (seconds since epoch in UTC); first price of the subsample; highest price of the subsample; lowest price of the subsample; last price of the subsample; accumulated number of units (e.g. shares) traded of the subsample. If the requested type of the price is ask, bid, or yield, the accumulated number of units is empty."
                    }
                  },
                  "description": "Subsampled time series data for the notation.",
                  "nullable": false
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/CursorBasedPaginationOutputObjectWithoutTotal"
                    }
                  }
                }
              }
            },
            "example": {
              "data": {
                "idNotation": "1532562",
                "sourceIdentifier": "FDS-US",
                "range": {
                  "start": "2024-12-24",
                  "end": "2024-01-01"
                },
                "quality": "EOD",
                "subsamples": [
                  [
                    5.05
                  ]
                ]
              },
              "meta": {
                "status": {
                  "code": 200
                },
                "pagination": {
                  "next": "Lorem ipsum",
                  "previous": "Lorem ipsum"
                }
              }
            }
          }
        }
      },
      "PostVendorChartIQTimeSeriesIntradaySubsampleGet200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "idNotation": {
                      "nullable": true,
                      "type": "string",
                      "format": "id64",
                      "description": "MDG identifier of the listing.",
                      "example": "1532562"
                    },
                    "sourceIdentifier": {
                      "nullable": true,
                      "type": "string",
                      "description": "Identifier used in the request.",
                      "example": "FDS-US"
                    },
                    "quality": {
                      "nullable": true,
                      "type": "string",
                      "description": "Quality of the price.\n| Value | Description |\n| --- | --- |\n| RLT | Real-time: intraday prices with minimal technical processing delays. |\n| DLY | Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes. |\n\n",
                      "enum": [
                        "RLT",
                        "DLY"
                      ],
                      "example": "RLT"
                    },
                    "subsample": {
                      "nullable": false,
                      "type": "array",
                      "items": {
                        "type": "number",
                        "format": "real",
                        "description": "",
                        "example": 3.1415
                      },
                      "description": "Single summary record. The record consists of a timestamp, four price values, and the trading volume. For the unit of the price values, see attribute `valueUnit` in endpoint `/prices/get`, except for price type yield, where the `valueUnit` is always `percent` (id=258). The order is as follows: timestamp of the start of the subsample (seconds since epoch in UTC); first price of the subsample; highest price of the subsample; lowest price of the subsample; last price of the subsample; accumulated number of units (e.g. shares) traded of the subsample. If the requested type of the price is ask, bid, or yield, the accumulated number of units is empty."
                    }
                  },
                  "description": "Subsample data for the notation.",
                  "nullable": false
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": {
                "idNotation": "1532562",
                "sourceIdentifier": "FDS-US",
                "quality": "RLT",
                "subsample": [
                  3.1415
                ]
              },
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "PostVendorChartIQTimeSeriesIntradaySubsampleList200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "idNotation": {
                      "nullable": true,
                      "type": "string",
                      "format": "id64",
                      "description": "MDG identifier of the listing.",
                      "example": "1532562"
                    },
                    "sourceIdentifier": {
                      "nullable": true,
                      "type": "string",
                      "description": "Identifier used in the request.",
                      "example": "FDS-US"
                    },
                    "range": {
                      "nullable": true,
                      "type": "object",
                      "format": "timeRange",
                      "properties": {
                        "start": {
                          "nullable": true,
                          "type": "string",
                          "format": "date-time",
                          "description": "The starting point of the time range (inclusive).",
                          "example": "2024-01-01T00:00:00.000Z"
                        },
                        "end": {
                          "nullable": true,
                          "type": "string",
                          "format": "date-time",
                          "description": "The ending point of the time range (exclusive).",
                          "example": "2024-12-24T18:00:00.000000Z"
                        }
                      },
                      "required": [
                        "start",
                        "end"
                      ],
                      "description": "Time range for the returned time series."
                    },
                    "quality": {
                      "nullable": true,
                      "type": "string",
                      "description": "Quality of the price.\n| Value | Description |\n| --- | --- |\n| RLT | Real-time: intraday prices with minimal technical processing delays. |\n| DLY | Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes. |\n\n",
                      "enum": [
                        "RLT",
                        "DLY"
                      ],
                      "example": "RLT"
                    },
                    "subsamples": {
                      "nullable": false,
                      "type": "array",
                      "items": {
                        "nullable": false,
                        "type": "array",
                        "items": {
                          "type": "number",
                          "format": "real",
                          "description": "",
                          "example": 3.1415
                        },
                        "description": ""
                      },
                      "description": "List of summary records as an array of arrays. One record is represented as an array and consists of a timestamp, four price values, and the trading volume. For the unit of the price values, see attribute `valueUnit` in endpoint `/prices/get`, except for price type yield, where the `valueUnit` is always `percent` (id=258). The order is as follows: timestamp of the start of the subsample (seconds since epoch in UTC); first price of the subsample; highest price of the subsample; lowest price of the subsample; last price of the subsample; accumulated number of units (e.g. shares) traded of the subsample. If the requested type of the price is ask, bid, or yield, the accumulated number of units is empty."
                    }
                  },
                  "description": "Subsampled time series data for the notation.",
                  "nullable": false
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/CursorBasedPaginationOutputObjectWithoutTotal"
                    }
                  }
                }
              }
            },
            "example": {
              "data": {
                "idNotation": "1532562",
                "sourceIdentifier": "FDS-US",
                "range": {
                  "start": "2024-01-01T00:00:00.000Z",
                  "end": "2024-12-24T18:00:00.000000Z"
                },
                "quality": "RLT",
                "subsamples": [
                  [
                    3.1415
                  ]
                ]
              },
              "meta": {
                "status": {
                  "code": 200
                },
                "pagination": {
                  "next": "Lorem ipsum",
                  "previous": "Lorem ipsum"
                }
              }
            }
          }
        }
      },
      "PostPricesTimeSeriesEodList200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "idNotation": {
                      "nullable": true,
                      "type": "string",
                      "format": "id64",
                      "description": "MDG identifier of the listing.",
                      "example": "1532562"
                    },
                    "sourceIdentifier": {
                      "nullable": true,
                      "type": "string",
                      "description": "Identifier used in the request.",
                      "example": "FDS-US"
                    },
                    "range": {
                      "nullable": true,
                      "type": "object",
                      "format": "dateRange",
                      "properties": {
                        "start": {
                          "nullable": true,
                          "type": "string",
                          "format": "date",
                          "description": "The starting point of the date range (inclusive).",
                          "example": "2024-12-24"
                        },
                        "end": {
                          "nullable": true,
                          "type": "string",
                          "format": "date",
                          "description": "The ending point of the date range (exclusive).",
                          "example": "2024-12-24"
                        }
                      },
                      "required": [
                        "start",
                        "end"
                      ],
                      "description": "Date range for the returned time series."
                    },
                    "quality": {
                      "nullable": true,
                      "type": "string",
                      "description": "Quality of the price.\n| Value | Description |\n| --- | --- |\n| DLY | Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes. |\n| EOD | End-of-day: prices updated once per day after the close of trading, possibly with an exchange-imposed delay of several hours or days. |\n\n",
                      "enum": [
                        "DLY",
                        "EOD"
                      ],
                      "example": "EOD"
                    },
                    "prices": {
                      "nullable": false,
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PostPricesTimeSeriesEodListDataPricesItems"
                      },
                      "description": "Time series of prices. For the attributes first, last, low, high, see attribute `valueUnit` in endpoint `/prices/get` for their unit, except for price type yield, where the `valueUnit` is always `percent` (id=258)."
                    }
                  },
                  "description": "Time series data for the notation.",
                  "nullable": false
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/CursorBasedPaginationOutputObjectWithoutTotal"
                    }
                  }
                }
              }
            },
            "example": {
              "data": {
                "idNotation": "1532562",
                "sourceIdentifier": "FDS-US",
                "range": {
                  "start": "2024-12-24",
                  "end": "2024-12-24"
                },
                "quality": "EOD",
                "prices": [
                  {
                    "date": "2024-01-01",
                    "first": 3.03,
                    "last": 2.02,
                    "low": 3.03,
                    "high": 2.02,
                    "tradingVolume": 2.02,
                    "tradingValue": 5.05
                  }
                ]
              },
              "meta": {
                "status": {
                  "code": 200
                },
                "pagination": {
                  "next": "Lorem ipsum",
                  "previous": "Lorem ipsum"
                }
              }
            }
          }
        }
      },
      "PostPricesTimeSeriesEodSubsampleGet200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "idNotation": {
                      "nullable": true,
                      "type": "string",
                      "format": "id64",
                      "description": "MDG identifier of the listing.",
                      "example": "1532562"
                    },
                    "sourceIdentifier": {
                      "nullable": true,
                      "type": "string",
                      "description": "Identifier used in the request.",
                      "example": "FDS-US"
                    },
                    "quality": {
                      "nullable": true,
                      "type": "string",
                      "description": "Quality of the price.\n| Value | Description |\n| --- | --- |\n| DLY | Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes. |\n| EOD | End-of-day: prices updated once per day after the close of trading, possibly with an exchange-imposed delay of several hours or days. |\n\n",
                      "enum": [
                        "DLY",
                        "EOD"
                      ],
                      "example": "EOD"
                    },
                    "subsample": {
                      "nullable": false,
                      "type": "object",
                      "description": "Single summary record. For the attributes first, last, low, high, see attribute `valueUnit` in endpoint `/prices/get` for their unit, except for price type yield, where the `valueUnit` is always `percent` (id=258).",
                      "properties": {
                        "date": {
                          "nullable": true,
                          "type": "string",
                          "format": "date",
                          "description": "Date of the start of the subsample.",
                          "example": "2024-01-01"
                        },
                        "first": {
                          "nullable": true,
                          "type": "number",
                          "format": "real",
                          "description": "First price of the subsample.",
                          "example": 1.01
                        },
                        "last": {
                          "nullable": true,
                          "type": "number",
                          "format": "real",
                          "description": "Last price of the subsample.",
                          "example": 4.04
                        },
                        "low": {
                          "nullable": true,
                          "type": "number",
                          "format": "real",
                          "description": "Lowest price of the subsample.",
                          "example": 2.02
                        },
                        "high": {
                          "nullable": true,
                          "type": "number",
                          "format": "real",
                          "description": "Highest price of the subsample.",
                          "example": 3.1415
                        },
                        "tradingVolume": {
                          "nullable": true,
                          "type": "number",
                          "format": "real",
                          "description": "Accumulated number of units (e.g. shares) traded of the subsample. If the requested type of the price is ask, bid, or yield, the value is empty.",
                          "example": 1.01
                        },
                        "tradingValue": {
                          "nullable": true,
                          "type": "number",
                          "format": "real",
                          "description": "Accumulated monetary equivalent (cash value) of the subsample. If the requested type of the price is ask, bid, or yield, the value is empty. See attribute `currency` in endpoint `/prices/get` for its unit.",
                          "example": 5.05
                        }
                      }
                    }
                  },
                  "description": "Subsample data for the notation.",
                  "nullable": false
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": {
                "idNotation": "1532562",
                "sourceIdentifier": "FDS-US",
                "quality": "EOD",
                "subsample": {
                  "date": "2024-01-01",
                  "first": 1.01,
                  "last": 4.04,
                  "low": 2.02,
                  "high": 3.1415,
                  "tradingVolume": 1.01,
                  "tradingValue": 5.05
                }
              },
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "PostPricesTimeSeriesEodSubsampleList200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "idNotation": {
                      "nullable": true,
                      "type": "string",
                      "format": "id64",
                      "description": "MDG identifier of the listing.",
                      "example": "1532562"
                    },
                    "sourceIdentifier": {
                      "nullable": true,
                      "type": "string",
                      "description": "Identifier used in the request.",
                      "example": "FDS-US"
                    },
                    "range": {
                      "nullable": true,
                      "type": "object",
                      "format": "dateRange",
                      "properties": {
                        "start": {
                          "nullable": true,
                          "type": "string",
                          "format": "date",
                          "description": "The starting point of the date range (inclusive).",
                          "example": "2024-01-01"
                        },
                        "end": {
                          "nullable": true,
                          "type": "string",
                          "format": "date",
                          "description": "The ending point of the date range (exclusive).",
                          "example": "2024-01-01"
                        }
                      },
                      "required": [
                        "start",
                        "end"
                      ],
                      "description": "Date range for the returned time series."
                    },
                    "quality": {
                      "nullable": true,
                      "type": "string",
                      "description": "Quality of the price.\n| Value | Description |\n| --- | --- |\n| DLY | Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes. |\n| EOD | End-of-day: prices updated once per day after the close of trading, possibly with an exchange-imposed delay of several hours or days. |\n\n",
                      "enum": [
                        "DLY",
                        "EOD"
                      ],
                      "example": "EOD"
                    },
                    "subsamples": {
                      "nullable": false,
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PostPricesTimeSeriesEodSubsampleListDataSubsamplesItems"
                      },
                      "description": "List of summary records. For the attributes first, last, low, high, see attribute `valueUnit` in endpoint `/prices/get` for their unit, except for price type yield, where the `valueUnit` is always `percent` (id=258)."
                    }
                  },
                  "description": "Subsampled time series data for the notation.",
                  "nullable": false
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/CursorBasedPaginationOutputObjectWithoutTotal"
                    }
                  }
                }
              }
            },
            "example": {
              "data": {
                "idNotation": "1532562",
                "sourceIdentifier": "FDS-US",
                "range": {
                  "start": "2024-01-01",
                  "end": "2024-01-01"
                },
                "quality": "EOD",
                "subsamples": [
                  {
                    "date": "2024-12-24",
                    "first": 1.01,
                    "last": 4.04,
                    "low": 1.01,
                    "high": 3.1415,
                    "tradingVolume": 3.03,
                    "tradingValue": 5.05
                  }
                ]
              },
              "meta": {
                "status": {
                  "code": 200
                },
                "pagination": {
                  "next": "Lorem ipsum",
                  "previous": "Lorem ipsum"
                }
              }
            }
          }
        }
      },
      "PostPricesTimeSeriesIntradayList200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "idNotation": {
                      "nullable": true,
                      "type": "string",
                      "format": "id64",
                      "description": "MDG identifier of the listing.",
                      "example": "1532562"
                    },
                    "sourceIdentifier": {
                      "nullable": true,
                      "type": "string",
                      "description": "Identifier used in the request.",
                      "example": "FDS-US"
                    },
                    "range": {
                      "nullable": true,
                      "type": "object",
                      "format": "timeRange",
                      "properties": {
                        "start": {
                          "nullable": true,
                          "type": "string",
                          "format": "date-time",
                          "description": "The starting point of the time range (inclusive).",
                          "example": "2024-12-24T18:00:00.000000Z"
                        },
                        "end": {
                          "nullable": true,
                          "type": "string",
                          "format": "date-time",
                          "description": "The ending point of the time range (exclusive).",
                          "example": "2024-01-01T00:00:00.000Z"
                        }
                      },
                      "required": [
                        "start",
                        "end"
                      ],
                      "description": "Time range for the returned time series."
                    },
                    "quality": {
                      "nullable": true,
                      "type": "string",
                      "description": "Quality of the price.\n| Value | Description |\n| --- | --- |\n| RLT | Real-time: intraday prices with minimal technical processing delays. |\n| DLY | Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes. |\n\n",
                      "enum": [
                        "RLT",
                        "DLY"
                      ],
                      "example": "DLY"
                    },
                    "prices": {
                      "nullable": false,
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PostPricesTimeSeriesIntradayListDataPricesItems"
                      },
                      "description": "Time series of prices."
                    }
                  },
                  "description": "Time series data for the notation.",
                  "nullable": false
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/CursorBasedPaginationOutputObjectWithoutTotal"
                    }
                  }
                }
              }
            },
            "example": {
              "data": {
                "idNotation": "1532562",
                "sourceIdentifier": "FDS-US",
                "range": {
                  "start": "2024-12-24T18:00:00.000000Z",
                  "end": "2024-01-01T00:00:00.000Z"
                },
                "quality": "DLY",
                "prices": [
                  {
                    "time": "2024-12-24T18:00:00.000000Z",
                    "tickId": 3.1415,
                    "price": 3.1415,
                    "quoteCondition": "Lorem ipsum",
                    "tradingVolume": 4.04,
                    "tradingValue": 2.02
                  }
                ]
              },
              "meta": {
                "status": {
                  "code": 200
                },
                "pagination": {
                  "next": "Lorem ipsum",
                  "previous": "Lorem ipsum"
                }
              }
            }
          }
        }
      },
      "PostPricesTimeSeriesIntradaySubsampleGet200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "idNotation": {
                      "nullable": true,
                      "type": "string",
                      "format": "id64",
                      "description": "MDG identifier of the listing.",
                      "example": "1532562"
                    },
                    "sourceIdentifier": {
                      "nullable": true,
                      "type": "string",
                      "description": "Identifier used in the request.",
                      "example": "FDS-US"
                    },
                    "quality": {
                      "nullable": true,
                      "type": "string",
                      "description": "Quality of the price.\n| Value | Description |\n| --- | --- |\n| RLT | Real-time: intraday prices with minimal technical processing delays. |\n| DLY | Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes. |\n\n",
                      "enum": [
                        "RLT",
                        "DLY"
                      ],
                      "example": "DLY"
                    },
                    "subsample": {
                      "nullable": false,
                      "type": "object",
                      "description": "Single summary record. For the attributes first, last, low, high, see attribute `valueUnit` in endpoint `/prices/get` for their unit, except for price type yield, where the `valueUnit` is always `percent` (id=258).",
                      "properties": {
                        "time": {
                          "nullable": true,
                          "type": "string",
                          "format": "date-time",
                          "description": "Date and time of the start of the subsample.",
                          "example": "2024-01-01T00:00:00.000Z"
                        },
                        "first": {
                          "nullable": true,
                          "type": "number",
                          "format": "real",
                          "description": "First price of the subsample.",
                          "example": 4.04
                        },
                        "last": {
                          "nullable": true,
                          "type": "number",
                          "format": "real",
                          "description": "Last price of the subsample.",
                          "example": 4.04
                        },
                        "low": {
                          "nullable": true,
                          "type": "number",
                          "format": "real",
                          "description": "Lowest price of the subsample.",
                          "example": 1.01
                        },
                        "high": {
                          "nullable": true,
                          "type": "number",
                          "format": "real",
                          "description": "Highest price of the subsample.",
                          "example": 5.05
                        },
                        "tradingVolume": {
                          "nullable": true,
                          "type": "number",
                          "format": "real",
                          "description": "Accumulated number of units (e.g. shares) traded of the subsample. If the requested type of the price is ask, bid, or yield, the value is empty.",
                          "example": 5.05
                        },
                        "tradingValue": {
                          "nullable": true,
                          "type": "number",
                          "format": "real",
                          "description": "Accumulated monetary equivalent (cash value) of the subsample. If the requested type of the price is ask, bid, or yield, the value is empty. See attribute `currency` in endpoint `/prices/get` for its unit.",
                          "example": 3.03
                        }
                      }
                    }
                  },
                  "description": "Subsample data for the notation.",
                  "nullable": false
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    }
                  }
                }
              }
            },
            "example": {
              "data": {
                "idNotation": "1532562",
                "sourceIdentifier": "FDS-US",
                "quality": "DLY",
                "subsample": {
                  "time": "2024-01-01T00:00:00.000Z",
                  "first": 4.04,
                  "last": 4.04,
                  "low": 1.01,
                  "high": 5.05,
                  "tradingVolume": 5.05,
                  "tradingValue": 3.03
                }
              },
              "meta": {
                "status": {
                  "code": 200
                }
              }
            }
          }
        }
      },
      "PostPricesTimeSeriesIntradaySubsampleList200Response": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "idNotation": {
                      "nullable": true,
                      "type": "string",
                      "format": "id64",
                      "description": "MDG identifier of the listing.",
                      "example": "1532562"
                    },
                    "sourceIdentifier": {
                      "nullable": true,
                      "type": "string",
                      "description": "Identifier used in the request.",
                      "example": "FDS-US"
                    },
                    "range": {
                      "nullable": true,
                      "type": "object",
                      "format": "timeRange",
                      "properties": {
                        "start": {
                          "nullable": true,
                          "type": "string",
                          "format": "date-time",
                          "description": "The starting point of the time range (inclusive).",
                          "example": "2024-12-24T18:00:00.000000Z"
                        },
                        "end": {
                          "nullable": true,
                          "type": "string",
                          "format": "date-time",
                          "description": "The ending point of the time range (exclusive).",
                          "example": "2024-12-24T18:00:00.000000Z"
                        }
                      },
                      "required": [
                        "start",
                        "end"
                      ],
                      "description": "Time range for the returned time series."
                    },
                    "quality": {
                      "nullable": true,
                      "type": "string",
                      "description": "Quality of the price.\n| Value | Description |\n| --- | --- |\n| RLT | Real-time: intraday prices with minimal technical processing delays. |\n| DLY | Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes. |\n\n",
                      "enum": [
                        "RLT",
                        "DLY"
                      ],
                      "example": "DLY"
                    },
                    "volumeWeightedAveragePrice": {
                      "nullable": true,
                      "type": "number",
                      "format": "real",
                      "description": "The volume-weighted average price (VWAP) for the returned time series. See attribute currency in endpoint `/prices/get` for its unit.",
                      "example": 1.01
                    },
                    "subsamples": {
                      "nullable": false,
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PostPricesTimeSeriesIntradaySubsampleListDataSubsamplesItems"
                      },
                      "description": "List of summary records. For the attributes first, last, low, high, see attribute `valueUnit` in endpoint `/prices/get` for their unit, except for price type yield, where the `valueUnit` is always `percent` (id=258)."
                    }
                  },
                  "description": "Subsampled time series data for the notation.",
                  "nullable": false
                },
                "meta": {
                  "type": "object",
                  "description": "The meta member contains the meta information of the response.",
                  "properties": {
                    "status": {
                      "$ref": "#/components/schemas/StatusObject"
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/CursorBasedPaginationOutputObjectWithoutTotal"
                    }
                  }
                }
              }
            },
            "example": {
              "data": {
                "idNotation": "1532562",
                "sourceIdentifier": "FDS-US",
                "range": {
                  "start": "2024-12-24T18:00:00.000000Z",
                  "end": "2024-12-24T18:00:00.000000Z"
                },
                "quality": "DLY",
                "volumeWeightedAveragePrice": 1.01,
                "subsamples": [
                  {
                    "time": "2024-01-01T00:00:00.000Z",
                    "first": 3.03,
                    "last": 4.04,
                    "low": 5.05,
                    "high": 5.05,
                    "tradingVolume": 1.01,
                    "tradingValue": 4.04,
                    "volumeWeightedAveragePrice": 2.02
                  }
                ]
              },
              "meta": {
                "status": {
                  "code": 200
                },
                "pagination": {
                  "next": "Lorem ipsum",
                  "previous": "Lorem ipsum"
                }
              }
            }
          }
        }
      }
    },
    "parameters": {},
    "examples": {},
    "requestBodies": {},
    "headers": {},
    "securitySchemes": {
      "FactSetOAuth2": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://auth.factset.com/as/token.oauth2",
            "scopes": {}
          }
        }
      },
      "FactSetApiKey": {
        "type": "http",
        "scheme": "basic"
      }
    },
    "links": {},
    "callbacks": {}
  },
  "security": [
    {
      "FactSetApiKey": []
    },
    {
      "FactSetOAuth2": []
    }
  ],
  "tags": [
    {
      "name": "prices",
      "description": "prices endpoints"
    },
    {
      "name": "vendor",
      "description": "vendor endpoints"
    }
  ],
  "externalDocs": {
    "description": "API Documentation",
    "url": "https://developer.factset.com/api-catalog/"
  }
}