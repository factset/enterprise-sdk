/**
 * VRS API documentation
 * Documentation on all available end points in the VRSAPI
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RecordSetFieldValues model module.
 * @module model/RecordSetFieldValues
 */
class RecordSetFieldValues {
    /**
     * Constructs a new <code>RecordSetFieldValues</code>.
     * Field value and associated metadata for the record set field.
     * @alias module:model/RecordSetFieldValues
     */
    constructor() { 
        
        RecordSetFieldValues.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RecordSetFieldValues</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RecordSetFieldValues} obj Optional instance to populate.
     * @return {module:model/RecordSetFieldValues} The populated <code>RecordSetFieldValues</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RecordSetFieldValues();

            if (data.hasOwnProperty('fieldId')) {
                obj['fieldId'] = ApiClient.convertToType(data['fieldId'], 'Number');
            }
            if (data.hasOwnProperty('fieldType')) {
                obj['fieldType'] = ApiClient.convertToType(data['fieldType'], 'String');
            }
            if (data.hasOwnProperty('fieldValue')) {
                obj['fieldValue'] = ApiClient.convertToType(data['fieldValue'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Unique identifier for the field.
 * @member {Number} fieldId
 */
RecordSetFieldValues.prototype['fieldId'] = undefined;

/**
 * The type of the field indicating the kind of data it holds.
 * @member {module:model/RecordSetFieldValues.FieldTypeEnum} fieldType
 */
RecordSetFieldValues.prototype['fieldType'] = undefined;

/**
 * The value assigned to the field.
 * @member {String} fieldValue
 */
RecordSetFieldValues.prototype['fieldValue'] = undefined;





/**
 * Allowed values for the <code>fieldType</code> property.
 * @enum {String}
 * @readonly
 */
RecordSetFieldValues['FieldTypeEnum'] = {

    /**
     * value: "BOOLEAN"
     * @const
     */
    "BOOLEAN": "BOOLEAN",

    /**
     * value: "COLOUR"
     * @const
     */
    "COLOUR": "COLOUR",

    /**
     * value: "DATETIME"
     * @const
     */
    "DATETIME": "DATETIME",

    /**
     * value: "DECIMAL"
     * @const
     */
    "DECIMAL": "DECIMAL",

    /**
     * value: "FONT"
     * @const
     */
    "FONT": "FONT",

    /**
     * value: "FONTSIZE"
     * @const
     */
    "FONTSIZE": "FONTSIZE",

    /**
     * value: "HTML"
     * @const
     */
    "HTML": "HTML",

    /**
     * value: "INTEGER"
     * @const
     */
    "INTEGER": "INTEGER",

    /**
     * value: "TEXT"
     * @const
     */
    "TEXT": "TEXT"
};



export default RecordSetFieldValues;

