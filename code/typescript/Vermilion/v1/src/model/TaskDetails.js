/**
 * VRS API documentation
 * Documentation on all available end points in the VRSAPI
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TaskDetails model module.
 * @module model/TaskDetails
 */
class TaskDetails {
    /**
     * Constructs a new <code>TaskDetails</code>.
     * Contains all details about the task.
     * @alias module:model/TaskDetails
     */
    constructor() { 
        
        TaskDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TaskDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TaskDetails} obj Optional instance to populate.
     * @return {module:model/TaskDetails} The populated <code>TaskDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TaskDetails();

            if (data.hasOwnProperty('lastUpdatedBy')) {
                obj['lastUpdatedBy'] = ApiClient.convertToType(data['lastUpdatedBy'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('taskType')) {
                obj['taskType'] = ApiClient.convertToType(data['taskType'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('expectedStartDate')) {
                obj['expectedStartDate'] = ApiClient.convertToType(data['expectedStartDate'], 'String');
            }
            if (data.hasOwnProperty('expectedEndDate')) {
                obj['expectedEndDate'] = ApiClient.convertToType(data['expectedEndDate'], 'String');
            }
            if (data.hasOwnProperty('actualStartDate')) {
                obj['actualStartDate'] = ApiClient.convertToType(data['actualStartDate'], 'String');
            }
            if (data.hasOwnProperty('notes')) {
                obj['notes'] = ApiClient.convertToType(data['notes'], 'String');
            }
            if (data.hasOwnProperty('immediate')) {
                obj['immediate'] = ApiClient.convertToType(data['immediate'], 'Boolean');
            }
            if (data.hasOwnProperty('reason')) {
                obj['reason'] = ApiClient.convertToType(data['reason'], 'String');
            }
            if (data.hasOwnProperty('outputFormat')) {
                obj['outputFormat'] = ApiClient.convertToType(data['outputFormat'], 'String');
            }
            if (data.hasOwnProperty('scheduleName')) {
                obj['scheduleName'] = ApiClient.convertToType(data['scheduleName'], 'String');
            }
            if (data.hasOwnProperty('mandatoryTaskApproveNotes')) {
                obj['mandatoryTaskApproveNotes'] = ApiClient.convertToType(data['mandatoryTaskApproveNotes'], 'Boolean');
            }
            if (data.hasOwnProperty('lastUpdated')) {
                obj['lastUpdated'] = ApiClient.convertToType(data['lastUpdated'], 'String');
            }
            if (data.hasOwnProperty('role')) {
                obj['role'] = ApiClient.convertToType(data['role'], 'String');
            }
            if (data.hasOwnProperty('action')) {
                obj['action'] = ApiClient.convertToType(data['action'], 'Boolean');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = ApiClient.convertToType(data['user'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Indicates the username of the person who last updated task
 * @member {String} lastUpdatedBy
 */
TaskDetails.prototype['lastUpdatedBy'] = undefined;

/**
 * Task description.
 * @member {String} description
 */
TaskDetails.prototype['description'] = undefined;

/**
 * Type of the task.
 * @member {module:model/TaskDetails.TaskTypeEnum} taskType
 */
TaskDetails.prototype['taskType'] = undefined;

/**
 * Status of the task.
 * @member {module:model/TaskDetails.StatusEnum} status
 */
TaskDetails.prototype['status'] = undefined;

/**
 * Expected start date of the task.
 * @member {String} expectedStartDate
 */
TaskDetails.prototype['expectedStartDate'] = undefined;

/**
 * Expected end date of the task.
 * @member {String} expectedEndDate
 */
TaskDetails.prototype['expectedEndDate'] = undefined;

/**
 * Actual start date of the task.
 * @member {String} actualStartDate
 */
TaskDetails.prototype['actualStartDate'] = undefined;

/**
 * Notes for the task.
 * @member {String} notes
 */
TaskDetails.prototype['notes'] = undefined;

/**
 * Boolean flag to indicate whether the task is an immediate task.
 * @member {Boolean} immediate
 */
TaskDetails.prototype['immediate'] = undefined;

/**
 * Reason for the task action.
 * @member {String} reason
 */
TaskDetails.prototype['reason'] = undefined;

/**
 * Output Format for thet task.
 * @member {String} outputFormat
 */
TaskDetails.prototype['outputFormat'] = undefined;

/**
 * Name of the schedule to which this task belongs to.
 * @member {String} scheduleName
 */
TaskDetails.prototype['scheduleName'] = undefined;

/**
 * The flag if task approve notes are mandatory for the task
 * @member {Boolean} mandatoryTaskApproveNotes
 */
TaskDetails.prototype['mandatoryTaskApproveNotes'] = undefined;

/**
 * The timestamp of the most recent update in epoch format for a specific task
 * @member {String} lastUpdated
 */
TaskDetails.prototype['lastUpdated'] = undefined;

/**
 * Role associated with the task.
 * @member {String} role
 */
TaskDetails.prototype['role'] = undefined;

/**
 * Indicates if a task is actionable by the user.
 * @member {Boolean} action
 */
TaskDetails.prototype['action'] = undefined;

/**
 * User associated with the task.
 * @member {String} user
 */
TaskDetails.prototype['user'] = undefined;





/**
 * Allowed values for the <code>taskType</code> property.
 * @enum {String}
 * @readonly
 */
TaskDetails['TaskTypeEnum'] = {

    /**
     * value: "WAIT_FOR_DATA"
     * @const
     */
    "WAIT_FOR_DATA": "WAIT_FOR_DATA",

    /**
     * value: "CUSTOM_DATA"
     * @const
     */
    "CUSTOM_DATA": "CUSTOM_DATA",

    /**
     * value: "CREATE_MANUAL_DATA"
     * @const
     */
    "CREATE_MANUAL_DATA": "CREATE_MANUAL_DATA",

    /**
     * value: "CREATE_FILTERED_DATA"
     * @const
     */
    "CREATE_FILTERED_DATA": "CREATE_FILTERED_DATA",

    /**
     * value: "GET_DATA"
     * @const
     */
    "GET_DATA": "GET_DATA",

    /**
     * value: "GENERATE_PREVIEW"
     * @const
     */
    "GENERATE_PREVIEW": "GENERATE_PREVIEW",

    /**
     * value: "SIGNOFF_DATA"
     * @const
     */
    "SIGNOFF_DATA": "SIGNOFF_DATA",

    /**
     * value: "CUSTOM_GENERATE"
     * @const
     */
    "CUSTOM_GENERATE": "CUSTOM_GENERATE",

    /**
     * value: "GENERATE_REPORT"
     * @const
     */
    "GENERATE_REPORT": "GENERATE_REPORT",

    /**
     * value: "SIGNOFF_REPORT"
     * @const
     */
    "SIGNOFF_REPORT": "SIGNOFF_REPORT",

    /**
     * value: "CUSTOM_DELIVERY"
     * @const
     */
    "CUSTOM_DELIVERY": "CUSTOM_DELIVERY",

    /**
     * value: "EMAIL_REPORT"
     * @const
     */
    "EMAIL_REPORT": "EMAIL_REPORT",

    /**
     * value: "POST_REPORT"
     * @const
     */
    "POST_REPORT": "POST_REPORT",

    /**
     * value: "FTP_REPORT"
     * @const
     */
    "FTP_REPORT": "FTP_REPORT",

    /**
     * value: "CUSTOM_OTHER"
     * @const
     */
    "CUSTOM_OTHER": "CUSTOM_OTHER",

    /**
     * value: "COPY_REPORT_FILE"
     * @const
     */
    "COPY_REPORT_FILE": "COPY_REPORT_FILE",

    /**
     * value: "PACKAGE_REPORTS"
     * @const
     */
    "PACKAGE_REPORTS": "PACKAGE_REPORTS"
};


/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
TaskDetails['StatusEnum'] = {

    /**
     * value: "COMPLETED"
     * @const
     */
    "COMPLETED": "COMPLETED",

    /**
     * value: "IN_PROGRESS"
     * @const
     */
    "IN_PROGRESS": "IN_PROGRESS",

    /**
     * value: "AWAITING_CORRECTION"
     * @const
     */
    "AWAITING_CORRECTION": "AWAITING_CORRECTION",

    /**
     * value: "PENDING"
     * @const
     */
    "PENDING": "PENDING",

    /**
     * value: "SKIPPED"
     * @const
     */
    "SKIPPED": "SKIPPED",

    /**
     * value: "FAILED_REJECTED"
     * @const
     */
    "FAILED_REJECTED": "FAILED_REJECTED"
};



export default TaskDetails;

