/**
 * VRS API documentation
 * Documentation on all available end points in the VRSAPI
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ScheduleAPIDTOAllOf from './ScheduleAPIDTOAllOf';
import ScheduleData from './ScheduleData';

/**
 * The ScheduleAPIDTO model module.
 * @module model/ScheduleAPIDTO
 */
class ScheduleAPIDTO {
    /**
     * Constructs a new <code>ScheduleAPIDTO</code>.
     * Schedule along with an extra property to indicate the task generation log warning(s)/error(s)
     * @alias module:model/ScheduleAPIDTO
     * @implements module:model/ScheduleData
     * @implements module:model/ScheduleAPIDTOAllOf
     */
    constructor() { 
        ScheduleData.initialize(this);ScheduleAPIDTOAllOf.initialize(this);
        ScheduleAPIDTO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ScheduleAPIDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ScheduleAPIDTO} obj Optional instance to populate.
     * @return {module:model/ScheduleAPIDTO} The populated <code>ScheduleAPIDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ScheduleAPIDTO();
            ScheduleData.constructFromObject(data, obj);
            ScheduleAPIDTOAllOf.constructFromObject(data, obj);

            if (data.hasOwnProperty('scheduleId')) {
                obj['scheduleId'] = ApiClient.convertToType(data['scheduleId'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('definitionName')) {
                obj['definitionName'] = ApiClient.convertToType(data['definitionName'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('scheduleGroup')) {
                obj['scheduleGroup'] = ApiClient.convertToType(data['scheduleGroup'], 'String');
            }
            if (data.hasOwnProperty('reportDate')) {
                obj['reportDate'] = ApiClient.convertToType(data['reportDate'], 'String');
            }
            if (data.hasOwnProperty('noOfTasks')) {
                obj['noOfTasks'] = ApiClient.convertToType(data['noOfTasks'], 'Number');
            }
            if (data.hasOwnProperty('businessCalendar')) {
                obj['businessCalendar'] = ApiClient.convertToType(data['businessCalendar'], 'String');
            }
            if (data.hasOwnProperty('owner')) {
                obj['owner'] = ApiClient.convertToType(data['owner'], 'String');
            }
            if (data.hasOwnProperty('notes')) {
                obj['notes'] = ApiClient.convertToType(data['notes'], 'String');
            }
            if (data.hasOwnProperty('finishDate')) {
                obj['finishDate'] = ApiClient.convertToType(data['finishDate'], 'String');
            }
            if (data.hasOwnProperty('startDate')) {
                obj['startDate'] = ApiClient.convertToType(data['startDate'], 'String');
            }
            if (data.hasOwnProperty('lastUpdatedBy')) {
                obj['lastUpdatedBy'] = ApiClient.convertToType(data['lastUpdatedBy'], 'String');
            }
            if (data.hasOwnProperty('lastUpdated')) {
                obj['lastUpdated'] = ApiClient.convertToType(data['lastUpdated'], 'String');
            }
            if (data.hasOwnProperty('hasTaskGenIssues')) {
                obj['hasTaskGenIssues'] = ApiClient.convertToType(data['hasTaskGenIssues'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * Unique identifier of the Schedule.
 * @member {Number} scheduleId
 */
ScheduleAPIDTO.prototype['scheduleId'] = undefined;

/**
 * Name of the Schedule.
 * @member {String} name
 */
ScheduleAPIDTO.prototype['name'] = undefined;

/**
 * Name of Schedule Definition from which the Schedule has been generated.
 * @member {String} definitionName
 */
ScheduleAPIDTO.prototype['definitionName'] = undefined;

/**
 * Status of the Schedule.
 * @member {module:model/ScheduleAPIDTO.StatusEnum} status
 */
ScheduleAPIDTO.prototype['status'] = undefined;

/**
 * Group of the Schedule.
 * @member {String} scheduleGroup
 */
ScheduleAPIDTO.prototype['scheduleGroup'] = undefined;

/**
 * The timestamp of the report date in epoch format for a specific Schedule
 * @member {String} reportDate
 */
ScheduleAPIDTO.prototype['reportDate'] = undefined;

/**
 * No of tasks generated for the Schedule
 * @member {Number} noOfTasks
 */
ScheduleAPIDTO.prototype['noOfTasks'] = undefined;

/**
 * Name of Business Calender used in the Schedule
 * @member {String} businessCalendar
 */
ScheduleAPIDTO.prototype['businessCalendar'] = undefined;

/**
 * Owner role used in the Schedule
 * @member {String} owner
 */
ScheduleAPIDTO.prototype['owner'] = undefined;

/**
 * Notes of the Schedule
 * @member {String} notes
 */
ScheduleAPIDTO.prototype['notes'] = undefined;

/**
 * The timestamp of the Finish Date in epoch format of the Schedule
 * @member {String} finishDate
 */
ScheduleAPIDTO.prototype['finishDate'] = undefined;

/**
 * The timestamp of the Start Date in epoch format of the Schedule
 * @member {String} startDate
 */
ScheduleAPIDTO.prototype['startDate'] = undefined;

/**
 * Indicates the username of the person who last updated Schedule
 * @member {String} lastUpdatedBy
 */
ScheduleAPIDTO.prototype['lastUpdatedBy'] = undefined;

/**
 * The timestamp of the most recent update in epoch format for a specific Schedule
 * @member {String} lastUpdated
 */
ScheduleAPIDTO.prototype['lastUpdated'] = undefined;

/**
 * A flag that specifies if task generation has warning or error logs.
 * @member {Boolean} hasTaskGenIssues
 */
ScheduleAPIDTO.prototype['hasTaskGenIssues'] = undefined;


// Implement ScheduleData interface:
/**
 * Unique identifier of the Schedule.
 * @member {Number} scheduleId
 */
ScheduleData.prototype['scheduleId'] = undefined;
/**
 * Name of the Schedule.
 * @member {String} name
 */
ScheduleData.prototype['name'] = undefined;
/**
 * Name of Schedule Definition from which the Schedule has been generated.
 * @member {String} definitionName
 */
ScheduleData.prototype['definitionName'] = undefined;
/**
 * Status of the Schedule.
 * @member {module:model/ScheduleData.StatusEnum} status
 */
ScheduleData.prototype['status'] = undefined;
/**
 * Group of the Schedule.
 * @member {String} scheduleGroup
 */
ScheduleData.prototype['scheduleGroup'] = undefined;
/**
 * The timestamp of the report date in epoch format for a specific Schedule
 * @member {String} reportDate
 */
ScheduleData.prototype['reportDate'] = undefined;
/**
 * No of tasks generated for the Schedule
 * @member {Number} noOfTasks
 */
ScheduleData.prototype['noOfTasks'] = undefined;
/**
 * Name of Business Calender used in the Schedule
 * @member {String} businessCalendar
 */
ScheduleData.prototype['businessCalendar'] = undefined;
/**
 * Owner role used in the Schedule
 * @member {String} owner
 */
ScheduleData.prototype['owner'] = undefined;
/**
 * Notes of the Schedule
 * @member {String} notes
 */
ScheduleData.prototype['notes'] = undefined;
/**
 * The timestamp of the Finish Date in epoch format of the Schedule
 * @member {String} finishDate
 */
ScheduleData.prototype['finishDate'] = undefined;
/**
 * The timestamp of the Start Date in epoch format of the Schedule
 * @member {String} startDate
 */
ScheduleData.prototype['startDate'] = undefined;
/**
 * Indicates the username of the person who last updated Schedule
 * @member {String} lastUpdatedBy
 */
ScheduleData.prototype['lastUpdatedBy'] = undefined;
/**
 * The timestamp of the most recent update in epoch format for a specific Schedule
 * @member {String} lastUpdated
 */
ScheduleData.prototype['lastUpdated'] = undefined;
// Implement ScheduleAPIDTOAllOf interface:
/**
 * A flag that specifies if task generation has warning or error logs.
 * @member {Boolean} hasTaskGenIssues
 */
ScheduleAPIDTOAllOf.prototype['hasTaskGenIssues'] = undefined;



/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
ScheduleAPIDTO['StatusEnum'] = {

    /**
     * value: "INITIALISED"
     * @const
     */
    "INITIALISED": "INITIALISED",

    /**
     * value: "RUNNING"
     * @const
     */
    "RUNNING": "RUNNING",

    /**
     * value: "CANCELLED"
     * @const
     */
    "CANCELLED": "CANCELLED",

    /**
     * value: "SUSPENDED"
     * @const
     */
    "SUSPENDED": "SUSPENDED",

    /**
     * value: "FINISHED"
     * @const
     */
    "FINISHED": "FINISHED",

    /**
     * value: "CLOSED"
     * @const
     */
    "CLOSED": "CLOSED",

    /**
     * value: "GENERATING_TASKS"
     * @const
     */
    "GENERATING_TASKS": "GENERATING_TASKS"
};



export default ScheduleAPIDTO;

