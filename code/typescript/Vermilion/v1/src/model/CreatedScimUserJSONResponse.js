/**
 * VRS API documentation
 * Documentation on all available end points in the VRSAPI
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreatedScimUserJSONResponseMeta from './CreatedScimUserJSONResponseMeta';
import ScimEmail from './ScimEmail';
import ScimPhone from './ScimPhone';
import ScimPhoto from './ScimPhoto';
import ScimUserName from './ScimUserName';
import Tenancy from './Tenancy';

/**
 * The CreatedScimUserJSONResponse model module.
 * @module model/CreatedScimUserJSONResponse
 */
class CreatedScimUserJSONResponse {
    /**
     * Constructs a new <code>CreatedScimUserJSONResponse</code>.
     * Response object for creating a new SCIM user, containing core identity details, contact information, and account settings.
     * @alias module:model/CreatedScimUserJSONResponse
     */
    constructor() { 
        
        CreatedScimUserJSONResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreatedScimUserJSONResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreatedScimUserJSONResponse} obj Optional instance to populate.
     * @return {module:model/CreatedScimUserJSONResponse} The populated <code>CreatedScimUserJSONResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreatedScimUserJSONResponse();

            if (data.hasOwnProperty('schemas')) {
                obj['schemas'] = ApiClient.convertToType(data['schemas'], ['String']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('userName')) {
                obj['userName'] = ApiClient.convertToType(data['userName'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ScimUserName.constructFromObject(data['name']);
            }
            if (data.hasOwnProperty('userType')) {
                obj['userType'] = ApiClient.convertToType(data['userType'], 'String');
            }
            if (data.hasOwnProperty('preferredLanguage')) {
                obj['preferredLanguage'] = ApiClient.convertToType(data['preferredLanguage'], 'String');
            }
            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
            }
            if (data.hasOwnProperty('authenticatedUserName')) {
                obj['authenticatedUserName'] = ApiClient.convertToType(data['authenticatedUserName'], 'String');
            }
            if (data.hasOwnProperty('tenant')) {
                obj['tenant'] = ApiClient.convertToType(data['tenant'], 'String');
            }
            if (data.hasOwnProperty('phoneNumbers')) {
                obj['phoneNumbers'] = ApiClient.convertToType(data['phoneNumbers'], [ScimPhone]);
            }
            if (data.hasOwnProperty('emails')) {
                obj['emails'] = ApiClient.convertToType(data['emails'], [ScimEmail]);
            }
            if (data.hasOwnProperty('tenancies')) {
                obj['tenancies'] = ApiClient.convertToType(data['tenancies'], [Tenancy]);
            }
            if (data.hasOwnProperty('photos')) {
                obj['photos'] = ApiClient.convertToType(data['photos'], [ScimPhoto]);
            }
            if (data.hasOwnProperty('domainCode')) {
                obj['domainCode'] = ApiClient.convertToType(data['domainCode'], 'String');
            }
            if (data.hasOwnProperty('isAdministrator')) {
                obj['isAdministrator'] = ApiClient.convertToType(data['isAdministrator'], 'Boolean');
            }
            if (data.hasOwnProperty('meta')) {
                obj['meta'] = CreatedScimUserJSONResponseMeta.constructFromObject(data['meta']);
            }
        }
        return obj;
    }


}

/**
 * Array listing the schema URIs associated with the user resource.
 * @member {Array.<String>} schemas
 */
CreatedScimUserJSONResponse.prototype['schemas'] = undefined;

/**
 * Unique identifier for the newly created user.
 * @member {String} id
 */
CreatedScimUserJSONResponse.prototype['id'] = undefined;

/**
 * Username used for identifying and logging in the user.
 * @member {String} userName
 */
CreatedScimUserJSONResponse.prototype['userName'] = undefined;

/**
 * @member {module:model/ScimUserName} name
 */
CreatedScimUserJSONResponse.prototype['name'] = undefined;

/**
 * Type of user.
 * @member {String} userType
 */
CreatedScimUserJSONResponse.prototype['userType'] = undefined;

/**
 * User's preferred language.
 * @member {String} preferredLanguage
 */
CreatedScimUserJSONResponse.prototype['preferredLanguage'] = undefined;

/**
 * Indicates if the user's account is currently active.
 * @member {Boolean} active
 */
CreatedScimUserJSONResponse.prototype['active'] = undefined;

/**
 * Authenticated username used by SSO login.
 * @member {String} authenticatedUserName
 */
CreatedScimUserJSONResponse.prototype['authenticatedUserName'] = undefined;

/**
 * Tenancy code in which the user was created.
 * @member {String} tenant
 */
CreatedScimUserJSONResponse.prototype['tenant'] = undefined;

/**
 * Array of phone numbers for the user, each with a type and value.
 * @member {Array.<module:model/ScimPhone>} phoneNumbers
 */
CreatedScimUserJSONResponse.prototype['phoneNumbers'] = undefined;

/**
 * Array of email addresses linked to the user account.
 * @member {Array.<module:model/ScimEmail>} emails
 */
CreatedScimUserJSONResponse.prototype['emails'] = undefined;

/**
 * List of tenancies the user is associated with.
 * @member {Array.<module:model/Tenancy>} tenancies
 */
CreatedScimUserJSONResponse.prototype['tenancies'] = undefined;

/**
 * Array of URLs to the user's profile photos or avatars.
 * @member {Array.<module:model/ScimPhoto>} photos
 */
CreatedScimUserJSONResponse.prototype['photos'] = undefined;

/**
 * Domain code representing the user's domain.
 * @member {String} domainCode
 */
CreatedScimUserJSONResponse.prototype['domainCode'] = undefined;

/**
 * Flag indicating if the user has admin privileges.
 * @member {Boolean} isAdministrator
 */
CreatedScimUserJSONResponse.prototype['isAdministrator'] = undefined;

/**
 * @member {module:model/CreatedScimUserJSONResponseMeta} meta
 */
CreatedScimUserJSONResponse.prototype['meta'] = undefined;






export default CreatedScimUserJSONResponse;

