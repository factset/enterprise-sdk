/**
 * VRS API documentation
 * Documentation on all available end points in the VRSAPI
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TaskHistoryObject model module.
 * @module model/TaskHistoryObject
 */
class TaskHistoryObject {
    /**
     * Constructs a new <code>TaskHistoryObject</code>.
     * Details of an individual task history event.
     * @alias module:model/TaskHistoryObject
     */
    constructor() { 
        
        TaskHistoryObject.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TaskHistoryObject</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TaskHistoryObject} obj Optional instance to populate.
     * @return {module:model/TaskHistoryObject} The populated <code>TaskHistoryObject</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TaskHistoryObject();

            if (data.hasOwnProperty('taskType')) {
                obj['taskType'] = ApiClient.convertToType(data['taskType'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('dateAndTime')) {
                obj['dateAndTime'] = ApiClient.convertToType(data['dateAndTime'], 'String');
            }
            if (data.hasOwnProperty('actionType')) {
                obj['actionType'] = ApiClient.convertToType(data['actionType'], 'String');
            }
            if (data.hasOwnProperty('notes')) {
                obj['notes'] = ApiClient.convertToType(data['notes'], 'String');
            }
            if (data.hasOwnProperty('reasonCode')) {
                obj['reasonCode'] = ApiClient.convertToType(data['reasonCode'], 'String');
            }
            if (data.hasOwnProperty('details')) {
                obj['details'] = ApiClient.convertToType(data['details'], 'String');
            }
        }
        return obj;
    }


}

/**
 * The task type of the task.
 * @member {String} taskType
 */
TaskHistoryObject.prototype['taskType'] = undefined;

/**
 * A description of the task.
 * @member {String} description
 */
TaskHistoryObject.prototype['description'] = undefined;

/**
 * The timestamp of the task history event in epoch format
 * @member {String} dateAndTime
 */
TaskHistoryObject.prototype['dateAndTime'] = undefined;

/**
 * The action type of the task history event.
 * @member {String} actionType
 */
TaskHistoryObject.prototype['actionType'] = undefined;

/**
 * The notes associated with the task history event.
 * @member {String} notes
 */
TaskHistoryObject.prototype['notes'] = undefined;

/**
 * The reason code associated with the task history event.
 * @member {String} reasonCode
 */
TaskHistoryObject.prototype['reasonCode'] = undefined;

/**
 * The details associated with the action of the task history event.
 * @member {String} details
 */
TaskHistoryObject.prototype['details'] = undefined;






export default TaskHistoryObject;

