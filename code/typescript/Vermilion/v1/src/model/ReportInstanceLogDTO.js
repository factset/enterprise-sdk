/**
 * VRS API documentation
 * Documentation on all available end points in the VRSAPI
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ReportInstanceLogDTO model module.
 * @module model/ReportInstanceLogDTO
 */
class ReportInstanceLogDTO {
    /**
     * Constructs a new <code>ReportInstanceLogDTO</code>.
     * Report Generation log details.
     * @alias module:model/ReportInstanceLogDTO
     */
    constructor() { 
        
        ReportInstanceLogDTO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReportInstanceLogDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReportInstanceLogDTO} obj Optional instance to populate.
     * @return {module:model/ReportInstanceLogDTO} The populated <code>ReportInstanceLogDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReportInstanceLogDTO();

            if (data.hasOwnProperty('sequenceNumber')) {
                obj['sequenceNumber'] = ApiClient.convertToType(data['sequenceNumber'], 'Number');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('updateDate')) {
                obj['updateDate'] = ApiClient.convertToType(data['updateDate'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Sequential number of the log entry.
 * @member {Number} sequenceNumber
 */
ReportInstanceLogDTO.prototype['sequenceNumber'] = undefined;

/**
 * Detailed message describing the log event or error.
 * @member {String} message
 */
ReportInstanceLogDTO.prototype['message'] = undefined;

/**
 * Indicates the type of log entry, either a general log or an error.
 * @member {module:model/ReportInstanceLogDTO.TypeEnum} type
 */
ReportInstanceLogDTO.prototype['type'] = undefined;

/**
 * The date and time of the last update for this log entry.
 * @member {String} updateDate
 */
ReportInstanceLogDTO.prototype['updateDate'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
ReportInstanceLogDTO['TypeEnum'] = {

    /**
     * value: "LOG"
     * @const
     */
    "LOG": "LOG",

    /**
     * value: "ERROR"
     * @const
     */
    "ERROR": "ERROR"
};



export default ReportInstanceLogDTO;

