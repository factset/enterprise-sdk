/**
 * FactSet Symbology API
 * The FactSet Symbology API provides symbol resolution services, allowing clients to translate market identifiers into various symbology types such as, FactSet Permanent Identifiers, CUSIP, ISIN, SEDOL, Tickers, and Bloomberg FIGIs. <p>Factset's Symbology API sits at the center of its hub-and-spoke data model, enabling you to quickly harmonize the expanding catalog of Content APIs. Translate market IDs into CUSIP, SEDOL, ISIN, Tickers as of a point in time or for the entire history of the requested id allowing Data Management workflows to normalize ids over time.</p> 
 *
 * The version of the OpenAPI document: 2.1.3
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IsinHistoryTranslationRequest model module.
 * @module model/IsinHistoryTranslationRequest
 */
class IsinHistoryTranslationRequest {
    /**
     * Constructs a new <code>IsinHistoryTranslationRequest</code>.
     * Request object for ISIN History endpoint.
     * @alias module:model/IsinHistoryTranslationRequest
     * @param ids {Array.<String>} Requested market securities or entities. Accepted identifiers include all FactSet Permanent Identifiers types, CUSIP, SEDOL, ISIN, and Tickers. This request value is sent back in the response as, `requestId'.
     */
    constructor(ids) { 
        
        IsinHistoryTranslationRequest.initialize(this, ids);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, ids) { 
        obj['ids'] = ids;
    }

    /**
     * Constructs a <code>IsinHistoryTranslationRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IsinHistoryTranslationRequest} obj Optional instance to populate.
     * @return {module:model/IsinHistoryTranslationRequest} The populated <code>IsinHistoryTranslationRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IsinHistoryTranslationRequest();

            if (data.hasOwnProperty('ids')) {
                obj['ids'] = ApiClient.convertToType(data['ids'], ['String']);
            }
            if (data.hasOwnProperty('asOfDate')) {
                obj['asOfDate'] = ApiClient.convertToType(data['asOfDate'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Requested market securities or entities. Accepted identifiers include all FactSet Permanent Identifiers types, CUSIP, SEDOL, ISIN, and Tickers. This request value is sent back in the response as, `requestId'.
 * @member {Array.<String>} ids
 */
IsinHistoryTranslationRequest.prototype['ids'] = undefined;

/**
 * As-Of date for historical symbol request in YYYY-MM-DD format.
 * @member {String} asOfDate
 */
IsinHistoryTranslationRequest.prototype['asOfDate'] = undefined;






export default IsinHistoryTranslationRequest;

