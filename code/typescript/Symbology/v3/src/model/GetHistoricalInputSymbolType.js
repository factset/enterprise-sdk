/**
 * FactSet Symbology API
 * The FactSet Symbology API provides symbol resolution services, allowing clients to translate market identifiers into various symbology types such as, FactSet Permanent Identifiers, CUSIP, ISIN, SEDOL, Tickers, and LEIs. <p>Factset's Symbology API sits at the center of its hub-and-spoke data model, enabling you to quickly harmonize the expanding catalog of Content APIs.</p><p>This API is rate-limited to 10 requests per second and 10 concurrent requests per user.</p> 
 *
 * The version of the OpenAPI document: 3.4.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
/**
* Enum class GetHistoricalInputSymbolType.
* @enum {}
* @readonly
*/
export default class GetHistoricalInputSymbolType {
    
        /**
         * value: "BIC"
         * @const
         */
        "BIC" = "BIC";

    
        /**
         * value: "CIK"
         * @const
         */
        "CIK" = "CIK";

    
        /**
         * value: "CRD"
         * @const
         */
        "CRD" = "CRD";

    
        /**
         * value: "EIN"
         * @const
         */
        "EIN" = "EIN";

    
        /**
         * value: "FITCH"
         * @const
         */
        "FITCH" = "FITCH";

    
        /**
         * value: "LEI"
         * @const
         */
        "LEI" = "LEI";

    
        /**
         * value: "MD"
         * @const
         */
        "MD" = "MD";

    
        /**
         * value: "SPR"
         * @const
         */
        "SPR" = "SPR";

    
        /**
         * value: "VALOREN"
         * @const
         */
        "VALOREN" = "VALOREN";

    
        /**
         * value: "WKN"
         * @const
         */
        "WKN" = "WKN";

    
        /**
         * value: "UKCH"
         * @const
         */
        "UKCH" = "UKCH";

    
        /**
         * value: "RSSD"
         * @const
         */
        "RSSD" = "RSSD";

    
        /**
         * value: "SEDOL"
         * @const
         */
        "SEDOL" = "SEDOL";

    
        /**
         * value: "CUSIP"
         * @const
         */
        "CUSIP" = "CUSIP";

    
        /**
         * value: "fsymEntityId"
         * @const
         */
        "fsymEntityId" = "fsymEntityId";

    
        /**
         * value: "fsymSecurityId"
         * @const
         */
        "fsymSecurityId" = "fsymSecurityId";

    
        /**
         * value: "fsymRegionalId"
         * @const
         */
        "fsymRegionalId" = "fsymRegionalId";

    
        /**
         * value: "fsymListingId"
         * @const
         */
        "fsymListingId" = "fsymListingId";

    
        /**
         * value: "ISIN"
         * @const
         */
        "ISIN" = "ISIN";

    
        /**
         * value: "tickerExchange"
         * @const
         */
        "tickerExchange" = "tickerExchange";

    
        /**
         * value: "tickerRegion"
         * @const
         */
        "tickerRegion" = "tickerRegion";

    
        /**
         * value: "bloombergFigi"
         * @const
         */
        "bloombergFigi" = "bloombergFigi";

    
        /**
         * value: "bloombergTicker"
         * @const
         */
        "bloombergTicker" = "bloombergTicker";

    
        /**
         * value: "GVKEY"
         * @const
         */
        "GVKEY" = "GVKEY";

    
        /**
         * value: "GVKEY & IID"
         * @const
         */
        "GVKEY &amp; IID" = "GVKEY & IID";

    
        /**
         * value: "JCN"
         * @const
         */
        "JCN" = "JCN";

    
        /**
         * value: "LoanX"
         * @const
         */
        "LoanX" = "LoanX";

    
        /**
         * value: "MarkitRed"
         * @const
         */
        "MarkitRed" = "MarkitRed";

    

    /**
    * Returns a <code>GetHistoricalInputSymbolType</code> enum value from a Javascript object name.
    * @param {Object} data The plain JavaScript object containing the name of the enum value.
    * @return {module:model/GetHistoricalInputSymbolType} The enum <code>GetHistoricalInputSymbolType</code> value.
    */
    static constructFromObject(object) {
        return object;
    }
}

