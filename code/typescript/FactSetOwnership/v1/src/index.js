/**
 * FactSet Ownership API
 * FactSet's Fund Ownership API gives access to both **Holdings**, **Holders**, and **Transactions** data.<p> Factset's Holdings endpoints gives access to all the underlying securities and their position details held within a given fund. Fund Types supported include Open-End Mutual Funds, Closed-end Mutual Funds, and Exchange Traded Funds. Security Holders information retrieves all \"holder types\" and their positions across institutions, funds, insiders, and stakeholders. FactSet also provides extensive insider and institutional transactions data for multiple countries including the United States, China, and Canada.</p><p>The FactSet Ownership and Mutual Funds database collects global equity ownership data for approximately 50,000 institutions, 60,000 unique Mutual Fund portfolios, and 400,000 Insider/Stakeholders from around 110 countries. For more details review our [Data Collection](https://my.apps.factset.com/oa/cms/oaAttachment/87e162be-f2d1-4f40-a85b-bfb1b020d270/20079) methodology. </p> 
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from './ApiClient';
import AssetType from './model/AssetType';
import ErrorResponse from './model/ErrorResponse';
import ErrorResponseSubErrors from './model/ErrorResponseSubErrors';
import Frequency from './model/Frequency';
import FundHolding from './model/FundHolding';
import FundHoldingsRequest from './model/FundHoldingsRequest';
import FundHoldingsResponse from './model/FundHoldingsResponse';
import HolderType from './model/HolderType';
import InsiderTransactions from './model/InsiderTransactions';
import InsiderTransactionsRequest from './model/InsiderTransactionsRequest';
import InsiderTransactionsRequestData from './model/InsiderTransactionsRequestData';
import InsiderTransactionsResponse from './model/InsiderTransactionsResponse';
import InstitutionalTransactions from './model/InstitutionalTransactions';
import InstitutionalTransactionsRequest from './model/InstitutionalTransactionsRequest';
import InstitutionalTransactionsRequestData from './model/InstitutionalTransactionsRequestData';
import InstitutionalTransactionsResponse from './model/InstitutionalTransactionsResponse';
import PeriodOfMeasure from './model/PeriodOfMeasure';
import RowExclusion from './model/RowExclusion';
import SecurityHolders from './model/SecurityHolders';
import SecurityHoldersRequest from './model/SecurityHoldersRequest';
import SecurityHoldersResponse from './model/SecurityHoldersResponse';
import TopNHolders from './model/TopNHolders';
import TransactionType from './model/TransactionType';

import FundHoldingsApi from './api/FundHoldingsApi';
import SecurityHoldersApi from './api/SecurityHoldersApi';
import TransactionsApi from './api/TransactionsApi';


/**
* FactSet Ownership client library for JavaScript.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var factsetownership = require('index'); // See note below*.
* var xxxSvc = new factsetownership.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new factsetownership.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new factsetownership.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new factsetownership.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AssetType model constructor.
     * @property {module:model/AssetType}
     */
    AssetType,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The ErrorResponseSubErrors model constructor.
     * @property {module:model/ErrorResponseSubErrors}
     */
    ErrorResponseSubErrors,

    /**
     * The Frequency model constructor.
     * @property {module:model/Frequency}
     */
    Frequency,

    /**
     * The FundHolding model constructor.
     * @property {module:model/FundHolding}
     */
    FundHolding,

    /**
     * The FundHoldingsRequest model constructor.
     * @property {module:model/FundHoldingsRequest}
     */
    FundHoldingsRequest,

    /**
     * The FundHoldingsResponse model constructor.
     * @property {module:model/FundHoldingsResponse}
     */
    FundHoldingsResponse,

    /**
     * The HolderType model constructor.
     * @property {module:model/HolderType}
     */
    HolderType,

    /**
     * The InsiderTransactions model constructor.
     * @property {module:model/InsiderTransactions}
     */
    InsiderTransactions,

    /**
     * The InsiderTransactionsRequest model constructor.
     * @property {module:model/InsiderTransactionsRequest}
     */
    InsiderTransactionsRequest,

    /**
     * The InsiderTransactionsRequestData model constructor.
     * @property {module:model/InsiderTransactionsRequestData}
     */
    InsiderTransactionsRequestData,

    /**
     * The InsiderTransactionsResponse model constructor.
     * @property {module:model/InsiderTransactionsResponse}
     */
    InsiderTransactionsResponse,

    /**
     * The InstitutionalTransactions model constructor.
     * @property {module:model/InstitutionalTransactions}
     */
    InstitutionalTransactions,

    /**
     * The InstitutionalTransactionsRequest model constructor.
     * @property {module:model/InstitutionalTransactionsRequest}
     */
    InstitutionalTransactionsRequest,

    /**
     * The InstitutionalTransactionsRequestData model constructor.
     * @property {module:model/InstitutionalTransactionsRequestData}
     */
    InstitutionalTransactionsRequestData,

    /**
     * The InstitutionalTransactionsResponse model constructor.
     * @property {module:model/InstitutionalTransactionsResponse}
     */
    InstitutionalTransactionsResponse,

    /**
     * The PeriodOfMeasure model constructor.
     * @property {module:model/PeriodOfMeasure}
     */
    PeriodOfMeasure,

    /**
     * The RowExclusion model constructor.
     * @property {module:model/RowExclusion}
     */
    RowExclusion,

    /**
     * The SecurityHolders model constructor.
     * @property {module:model/SecurityHolders}
     */
    SecurityHolders,

    /**
     * The SecurityHoldersRequest model constructor.
     * @property {module:model/SecurityHoldersRequest}
     */
    SecurityHoldersRequest,

    /**
     * The SecurityHoldersResponse model constructor.
     * @property {module:model/SecurityHoldersResponse}
     */
    SecurityHoldersResponse,

    /**
     * The TopNHolders model constructor.
     * @property {module:model/TopNHolders}
     */
    TopNHolders,

    /**
     * The TransactionType model constructor.
     * @property {module:model/TransactionType}
     */
    TransactionType,

    /**
    * The FundHoldingsApi service constructor.
    * @property {module:api/FundHoldingsApi}
    */
    FundHoldingsApi,

    /**
    * The SecurityHoldersApi service constructor.
    * @property {module:api/SecurityHoldersApi}
    */
    SecurityHoldersApi,

    /**
    * The TransactionsApi service constructor.
    * @property {module:api/TransactionsApi}
    */
    TransactionsApi,

};
