/**
 * FactSet Ownership API
 * FactSet's Fund Ownership API gives access to both **Holdings**, **Holders**, and **Transactions** data.<p> Factset's Holdings endpoints gives access to all the underlying securities and their position details held within a given fund. Fund Types supported include Open-End Mutual Funds, Closed-end Mutual Funds, and Exchange Traded Funds. Security Holders information retrieves all \"holder types\" and their positions across institutions, funds, insiders, and stakeholders. FactSet also provides extensive insider and institutional transactions data for multiple countries including the United States, China, and Canada.</p><p>The FactSet Ownership and Mutual Funds database collects global equity ownership data for approximately 50,000 institutions, 60,000 unique Mutual Fund portfolios, and 400,000 Insider/Stakeholders from around 110 countries. For more details review our [Data Collection](https://my.apps.factset.com/oa/cms/oaAttachment/87e162be-f2d1-4f40-a85b-bfb1b020d270/20079) methodology. </p> 
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import InsiderTransactionsRequest from '../model/InsiderTransactionsRequest';
import InsiderTransactionsResponse from '../model/InsiderTransactionsResponse';
import InstitutionalTransactionsRequest from '../model/InstitutionalTransactionsRequest';
import InstitutionalTransactionsResponse from '../model/InstitutionalTransactionsResponse';

/**
* Transactions service.
* @module api/TransactionsApi
*/
export default class TransactionsApi {

    /**
    * Constructs a new TransactionsApi. 
    * @alias module:api/TransactionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Get insider transactions details for a list of requested identifiers.
     * Gets insider transaction details for a list of requested identifiers. 
     * @param {Array.<String>} ids Requested list of security identifiers. <p>***ids limit** =  10 per request*</p  >.
     * @param {Date} startDate The start date requested for a given date range in **YYYY-MM-DD** format. Future dates (T+1) are not accepted in this endpoint. 
     * @param {Date} endDate The end date requested for a given date range in **YYYY-MM-DD** format. Future dates (T+1) are not accepted in this endpoint. 
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.transactionType Controls the Transaction Type of the data returned. By default, the service will return All Transaction Types.   * **A** = All Transaction Types - returns all available transaction types.   * **P** = Open Market Purchases - shares on the open market.   * **S** =  Open Market Sales - selling shares on the open market.   * **PS** = Open Market Purchases & Sales - buying and selling shares on the open market.   * **O** = Options Exercised - executing stock options to acquire shares.   * **M** = Other Transactions - any other types of equity-related actions not covered above.  (default to 'A')
     * @param {module:model/String} opts.rowExclusion Controls the exlcusion of specific transaction rows from the data returned. By default, the service will exclude Derivative and Blank Transaction Types.   * **DB** =  Derivative and Blank Transaction Types - excludes both derivative and blank transaction types.   * **B** = Blank Transaction Types - excludes only blank transaction types.   * **N** =   None - includes all transaction types without exclusion.  (default to 'DB')
     * @param {String} opts.currency Currency code for adjusting prices. Default is Local. For a list of currency ISO codes, visit [Online Assistant Page 1470](https://oa.apps.factset.com/pages/1470). (default to 'LOCAL')
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InsiderTransactionsResponse} and HTTP response
     */
    getOwnershipInsiderTransactionsWithHttpInfo(ids, startDate, endDate, opts) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'ids' is set
      if (ids === undefined || ids === null) {
        throw new Error("Missing the required parameter 'ids' when calling getOwnershipInsiderTransactions");
      }
      // verify the required parameter 'startDate' is set
      if (startDate === undefined || startDate === null) {
        throw new Error("Missing the required parameter 'startDate' when calling getOwnershipInsiderTransactions");
      }
      // verify the required parameter 'endDate' is set
      if (endDate === undefined || endDate === null) {
        throw new Error("Missing the required parameter 'endDate' when calling getOwnershipInsiderTransactions");
      }

      let pathParams = {
      };
      let queryParams = {
        'ids': this.apiClient.buildCollectionParam(ids, 'csv'),
        'startDate': startDate,
        'endDate': endDate,
        'transactionType': opts['transactionType'],
        'rowExclusion': opts['rowExclusion'],
        'currency': opts['currency']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = [];
      let accepts = ['application/json'];


      let returnType = InsiderTransactionsResponse;

      return this.apiClient.callApi(
        '/factset-ownership/v1/transactions/insider', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Get insider transactions details for a list of requested identifiers.
     * Gets insider transaction details for a list of requested identifiers. 
     * @param {Array.<String>} ids Requested list of security identifiers. <p>***ids limit** =  10 per request*</p  >.
     * @param {Date} startDate The start date requested for a given date range in **YYYY-MM-DD** format. Future dates (T+1) are not accepted in this endpoint. 
     * @param {Date} endDate The end date requested for a given date range in **YYYY-MM-DD** format. Future dates (T+1) are not accepted in this endpoint. 
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.transactionType Controls the Transaction Type of the data returned. By default, the service will return All Transaction Types.   * **A** = All Transaction Types - returns all available transaction types.   * **P** = Open Market Purchases - shares on the open market.   * **S** =  Open Market Sales - selling shares on the open market.   * **PS** = Open Market Purchases & Sales - buying and selling shares on the open market.   * **O** = Options Exercised - executing stock options to acquire shares.   * **M** = Other Transactions - any other types of equity-related actions not covered above.  (default to 'A')
     * @param {module:model/String} opts.rowExclusion Controls the exlcusion of specific transaction rows from the data returned. By default, the service will exclude Derivative and Blank Transaction Types.   * **DB** =  Derivative and Blank Transaction Types - excludes both derivative and blank transaction types.   * **B** = Blank Transaction Types - excludes only blank transaction types.   * **N** =   None - includes all transaction types without exclusion.  (default to 'DB')
     * @param {String} opts.currency Currency code for adjusting prices. Default is Local. For a list of currency ISO codes, visit [Online Assistant Page 1470](https://oa.apps.factset.com/pages/1470). (default to 'LOCAL')
     * @return { Promise.< module:model/InsiderTransactionsResponse > } a Promise, with data of type {@link module:model/InsiderTransactionsResponse }
     */
    getOwnershipInsiderTransactions(ids, startDate, endDate, opts) {
      return this.getOwnershipInsiderTransactionsWithHttpInfo(ids, startDate, endDate, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Get institutional transaction details for a list of requested identifiers.
     * Get institutional transaction details for a list of requested identifiers. 
     * @param {Array.<String>} ids Requested list of security identifiers. <p>***ids limit** =  10 per request*</p  >.
     * @param {Date} startDate The start date requested for a given date range in **YYYY-MM-DD** format. Future dates (T+1) are not accepted in this endpoint. 
     * @param {Date} endDate The end date requested for a given date range in **YYYY-MM-DD** format. Future dates (T+1) are not accepted in this endpoint. 
     * @param {Object} opts Optional parameters
     * @param {String} opts.currency Currency code for adjusting prices. Default is Local. For a list of currency ISO codes, visit [Online Assistant Page 1470](https://oa.apps.factset.com/pages/1470). (default to 'LOCAL')
     * @param {module:model/String} opts.frequency Controls the display frequency of the data returned.   * **M** = Monthly, based on the last trading day of the month.   * **MTD** = Month-to-date   * **CQ** = Quarterly based on the last trading day of the calendar quarter (March, June, September, or December).   * **CQTD** =  Calendar quarter-to-date   * **CY** = Calendar Annual, based on the last trading day of the calendar year.   * **CYTD** = Calendar Year-to-date.  (default to 'M')
     * @param {module:model/String} opts.topNHolders Specifies the number of top holders whose data is returned.   * **ALL** = All holders   * **5** = Top 5 Institutional Holders   * **10** = Top 10 Institutional Holders   * **25** = Top 25 Institutional Holders   * **50** = Top 50 Institutional Holders   * **100** = Top 100 Institutional Holders  (default to '25')
     * @param {module:model/String} opts.holderType Controls the Holder Type of the data returned. By default, the service will return Institutional Holders. Requesting All Holders is not currently supported. Only a single Holder Type is allowed per request.   * **F** = Institutions   * **M** = Mutual Funds   * **S** =  Insiders/Stakeholders   * **FS** = Institutions/Insiders   * **B** = Beneficial Owners  (default to 'F')
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InstitutionalTransactionsResponse} and HTTP response
     */
    getOwnershipInstitutionalTransactionsWithHttpInfo(ids, startDate, endDate, opts) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'ids' is set
      if (ids === undefined || ids === null) {
        throw new Error("Missing the required parameter 'ids' when calling getOwnershipInstitutionalTransactions");
      }
      // verify the required parameter 'startDate' is set
      if (startDate === undefined || startDate === null) {
        throw new Error("Missing the required parameter 'startDate' when calling getOwnershipInstitutionalTransactions");
      }
      // verify the required parameter 'endDate' is set
      if (endDate === undefined || endDate === null) {
        throw new Error("Missing the required parameter 'endDate' when calling getOwnershipInstitutionalTransactions");
      }

      let pathParams = {
      };
      let queryParams = {
        'ids': this.apiClient.buildCollectionParam(ids, 'csv'),
        'startDate': startDate,
        'endDate': endDate,
        'currency': opts['currency'],
        'frequency': opts['frequency'],
        'topNHolders': opts['topNHolders'],
        'holderType': opts['holderType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = [];
      let accepts = ['application/json'];


      let returnType = InstitutionalTransactionsResponse;

      return this.apiClient.callApi(
        '/factset-ownership/v1/transactions/institutional', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Get institutional transaction details for a list of requested identifiers.
     * Get institutional transaction details for a list of requested identifiers. 
     * @param {Array.<String>} ids Requested list of security identifiers. <p>***ids limit** =  10 per request*</p  >.
     * @param {Date} startDate The start date requested for a given date range in **YYYY-MM-DD** format. Future dates (T+1) are not accepted in this endpoint. 
     * @param {Date} endDate The end date requested for a given date range in **YYYY-MM-DD** format. Future dates (T+1) are not accepted in this endpoint. 
     * @param {Object} opts Optional parameters
     * @param {String} opts.currency Currency code for adjusting prices. Default is Local. For a list of currency ISO codes, visit [Online Assistant Page 1470](https://oa.apps.factset.com/pages/1470). (default to 'LOCAL')
     * @param {module:model/String} opts.frequency Controls the display frequency of the data returned.   * **M** = Monthly, based on the last trading day of the month.   * **MTD** = Month-to-date   * **CQ** = Quarterly based on the last trading day of the calendar quarter (March, June, September, or December).   * **CQTD** =  Calendar quarter-to-date   * **CY** = Calendar Annual, based on the last trading day of the calendar year.   * **CYTD** = Calendar Year-to-date.  (default to 'M')
     * @param {module:model/String} opts.topNHolders Specifies the number of top holders whose data is returned.   * **ALL** = All holders   * **5** = Top 5 Institutional Holders   * **10** = Top 10 Institutional Holders   * **25** = Top 25 Institutional Holders   * **50** = Top 50 Institutional Holders   * **100** = Top 100 Institutional Holders  (default to '25')
     * @param {module:model/String} opts.holderType Controls the Holder Type of the data returned. By default, the service will return Institutional Holders. Requesting All Holders is not currently supported. Only a single Holder Type is allowed per request.   * **F** = Institutions   * **M** = Mutual Funds   * **S** =  Insiders/Stakeholders   * **FS** = Institutions/Insiders   * **B** = Beneficial Owners  (default to 'F')
     * @return { Promise.< module:model/InstitutionalTransactionsResponse > } a Promise, with data of type {@link module:model/InstitutionalTransactionsResponse }
     */
    getOwnershipInstitutionalTransactions(ids, startDate, endDate, opts) {
      return this.getOwnershipInstitutionalTransactionsWithHttpInfo(ids, startDate, endDate, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Get insider transactions details for a list of requested identifiers.
     * Gets insider transaction details for a list of requested identifiers.
     * @param {module:model/InsiderTransactionsRequest} insiderTransactionsRequest Requesting Insider Transaction Details
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InsiderTransactionsResponse} and HTTP response
     */
    postOwnershipInsiderTransactionsWithHttpInfo(insiderTransactionsRequest) {
      let postBody = insiderTransactionsRequest;
      // verify the required parameter 'insiderTransactionsRequest' is set
      if (insiderTransactionsRequest === undefined || insiderTransactionsRequest === null) {
        throw new Error("Missing the required parameter 'insiderTransactionsRequest' when calling postOwnershipInsiderTransactions");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];


      let returnType = InsiderTransactionsResponse;

      return this.apiClient.callApi(
        '/factset-ownership/v1/transactions/insider', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Get insider transactions details for a list of requested identifiers.
     * Gets insider transaction details for a list of requested identifiers.
     * @param {module:model/InsiderTransactionsRequest} insiderTransactionsRequest Requesting Insider Transaction Details
     * @return { Promise.< module:model/InsiderTransactionsResponse > } a Promise, with data of type {@link module:model/InsiderTransactionsResponse }
     */
    postOwnershipInsiderTransactions(insiderTransactionsRequest) {
      return this.postOwnershipInsiderTransactionsWithHttpInfo(insiderTransactionsRequest)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Gets institutional transaction details for a list of requested identifiers.
     * Gets institutional transaction details for a list of requested identifiers.
     * @param {module:model/InstitutionalTransactionsRequest} institutionalTransactionsRequest Requesting Institutional Transaction Details
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InstitutionalTransactionsResponse} and HTTP response
     */
    postOwnershipInstituionalTransactionsWithHttpInfo(institutionalTransactionsRequest) {
      let postBody = institutionalTransactionsRequest;
      // verify the required parameter 'institutionalTransactionsRequest' is set
      if (institutionalTransactionsRequest === undefined || institutionalTransactionsRequest === null) {
        throw new Error("Missing the required parameter 'institutionalTransactionsRequest' when calling postOwnershipInstituionalTransactions");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];


      let returnType = InstitutionalTransactionsResponse;

      return this.apiClient.callApi(
        '/factset-ownership/v1/transactions/institutional', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Gets institutional transaction details for a list of requested identifiers.
     * Gets institutional transaction details for a list of requested identifiers.
     * @param {module:model/InstitutionalTransactionsRequest} institutionalTransactionsRequest Requesting Institutional Transaction Details
     * @return { Promise.< module:model/InstitutionalTransactionsResponse > } a Promise, with data of type {@link module:model/InstitutionalTransactionsResponse }
     */
    postOwnershipInstituionalTransactions(institutionalTransactionsRequest) {
      return this.postOwnershipInstituionalTransactionsWithHttpInfo(institutionalTransactionsRequest)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}





