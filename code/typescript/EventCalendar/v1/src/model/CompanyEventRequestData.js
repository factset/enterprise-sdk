/**
 * Event Calendar API
 * Retrieves events for companies
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CompanyEventRequestDataDateTime from './CompanyEventRequestDataDateTime';
import CompanyEventRequestDataUniverse from './CompanyEventRequestDataUniverse';

/**
 * The CompanyEventRequestData model module.
 * @module model/CompanyEventRequestData
 */
class CompanyEventRequestData {
    /**
     * Constructs a new <code>CompanyEventRequestData</code>.
     * @alias module:model/CompanyEventRequestData
     */
    constructor() { 
        
        CompanyEventRequestData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CompanyEventRequestData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CompanyEventRequestData} obj Optional instance to populate.
     * @return {module:model/CompanyEventRequestData} The populated <code>CompanyEventRequestData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CompanyEventRequestData();

            if (data.hasOwnProperty('dateTime')) {
                obj['dateTime'] = CompanyEventRequestDataDateTime.constructFromObject(data['dateTime']);
            }
            if (data.hasOwnProperty('universe')) {
                obj['universe'] = CompanyEventRequestDataUniverse.constructFromObject(data['universe']);
            }
            if (data.hasOwnProperty('eventTypes')) {
                obj['eventTypes'] = ApiClient.convertToType(data['eventTypes'], ['String']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/CompanyEventRequestDataDateTime} dateTime
 */
CompanyEventRequestData.prototype['dateTime'] = undefined;

/**
 * @member {module:model/CompanyEventRequestDataUniverse} universe
 */
CompanyEventRequestData.prototype['universe'] = undefined;

/**
 * The type of events returned in the response
 * @member {Array.<module:model/CompanyEventRequestData.EventTypesEnum>} eventTypes
 */
CompanyEventRequestData.prototype['eventTypes'] = undefined;





/**
 * Allowed values for the <code>eventTypes</code> property.
 * @enum {String}
 * @readonly
 */
CompanyEventRequestData['EventTypesEnum'] = {

    /**
     * value: "Earnings"
     * @const
     */
    "Earnings": "Earnings",

    /**
     * value: "SalesRevenueCall"
     * @const
     */
    "SalesRevenueCall": "SalesRevenueCall",

    /**
     * value: "GuidanceCall"
     * @const
     */
    "GuidanceCall": "GuidanceCall",

    /**
     * value: "AnalystsInvestorsMeeting"
     * @const
     */
    "AnalystsInvestorsMeeting": "AnalystsInvestorsMeeting",

    /**
     * value: "ShareholdersMeeting"
     * @const
     */
    "ShareholdersMeeting": "ShareholdersMeeting",

    /**
     * value: "SpecialSituation"
     * @const
     */
    "SpecialSituation": "SpecialSituation",

    /**
     * value: "Conference"
     * @const
     */
    "Conference": "Conference",

    /**
     * value: "ConfirmedEarningsRelease"
     * @const
     */
    "ConfirmedEarningsRelease": "ConfirmedEarningsRelease",

    /**
     * value: "ProjectedEarningsRelease"
     * @const
     */
    "ProjectedEarningsRelease": "ProjectedEarningsRelease",

    /**
     * value: "SalesRevenueRelease"
     * @const
     */
    "SalesRevenueRelease": "SalesRevenueRelease",

    /**
     * value: "Split"
     * @const
     */
    "Split": "Split",

    /**
     * value: "Dividend"
     * @const
     */
    "Dividend": "Dividend"
};



export default CompanyEventRequestData;

