/**
 * Open:FactSet Marketplace API
 * This API provides read-only access to marketplace products and partners.
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Error model module.
 * @module model/Error
 */
class Error {
    /**
     * Constructs a new <code>Error</code>.
     * Error object
     * @alias module:model/Error
     * @param id {String} Error UUID
     * @param title {String} Error message
     * @param code {String} Error code
     */
    constructor(id, title, code) { 
        
        Error.initialize(this, id, title, code);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, title, code) { 
        obj['id'] = id;
        obj['title'] = title;
        obj['code'] = code;
    }

    /**
     * Constructs a <code>Error</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Error} obj Optional instance to populate.
     * @return {module:model/Error} The populated <code>Error</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Error();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('detail')) {
                obj['detail'] = ApiClient.convertToType(data['detail'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Error UUID
 * @member {String} id
 */
Error.prototype['id'] = undefined;

/**
 * Error message
 * @member {String} title
 */
Error.prototype['title'] = undefined;

/**
 * Error code
 * @member {String} code
 */
Error.prototype['code'] = undefined;

/**
 * Error detail
 * @member {String} detail
 */
Error.prototype['detail'] = undefined;






export default Error;

