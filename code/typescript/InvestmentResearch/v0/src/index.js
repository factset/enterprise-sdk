/**
 * Investment Research API
 *  The Investment Research API provides a comprehensive set of functionalities for searching and retrieving research reports and documents from various contributors.  This API is designed to expose document search and document retrieval functionality. A document search will allow a request to query FactSet document databases based on certain search criteria specified in the request.  FactSet collects research reports and models from brokers, independent research providers, market research firms, rating agencies, and other publishers of research. These documents are processed and made available to clients within about two minutes of receipt.  FactSet delivers this content through two main products:  **FactSet Research Connect** – real-time research for investment managers entitled by the contributors to access the content.  **FactSet Aftermarket Research** – delayed research for investment bankers permitted by contributors to purchase the research.  The meta endpoints namely time-zones, categories, research-contributors, research-analysts, security-types and asset-types provide comprehensive lists of data that is used in the research endpoints.    
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from './ApiClient';
import AssetResponse from './model/AssetResponse';
import AssetTypesResponse from './model/AssetTypesResponse';
import CategoriesResponse from './model/CategoriesResponse';
import CategoriesResponseObject from './model/CategoriesResponseObject';
import CountRequest from './model/CountRequest';
import CountRequestBody from './model/CountRequestBody';
import CountResponse from './model/CountResponse';
import CountResponseObject from './model/CountResponseObject';
import Document from './model/Document';
import ErrorExample from './model/ErrorExample';
import ErrorResponse from './model/ErrorResponse';
import InvalidIdErrorObject from './model/InvalidIdErrorObject';
import InvestmentResearchResponse from './model/InvestmentResearchResponse';
import InvestmentResearchResponseItems from './model/InvestmentResearchResponseItems';
import InvestmentResearchResponseMeta from './model/InvestmentResearchResponseMeta';
import InvestmentResearchResponseMetaPagination from './model/InvestmentResearchResponseMetaPagination';
import ResearchAnalystResponse from './model/ResearchAnalystResponse';
import ResearchAnalystResponseObject from './model/ResearchAnalystResponseObject';
import ResearchContributorResponse from './model/ResearchContributorResponse';
import ResearchContributorResponseObject from './model/ResearchContributorResponseObject';
import SearchRequest from './model/SearchRequest';
import SearchRequestBody from './model/SearchRequestBody';
import SearchRequestMeta from './model/SearchRequestMeta';
import SearchRequestMetaPagination from './model/SearchRequestMetaPagination';
import SecurityResponse from './model/SecurityResponse';
import SecurityTypesResponse from './model/SecurityTypesResponse';
import TimeZoneResponse from './model/TimeZoneResponse';
import TimeZonesResponse from './model/TimeZonesResponse';

import MetaApi from './api/MetaApi';
import ResearchApi from './api/ResearchApi';


/**
* Investment Research client library for JavaScript.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var investmentresearch = require('index'); // See note below*.
* var xxxSvc = new investmentresearch.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new investmentresearch.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new investmentresearch.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new investmentresearch.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AssetResponse model constructor.
     * @property {module:model/AssetResponse}
     */
    AssetResponse,

    /**
     * The AssetTypesResponse model constructor.
     * @property {module:model/AssetTypesResponse}
     */
    AssetTypesResponse,

    /**
     * The CategoriesResponse model constructor.
     * @property {module:model/CategoriesResponse}
     */
    CategoriesResponse,

    /**
     * The CategoriesResponseObject model constructor.
     * @property {module:model/CategoriesResponseObject}
     */
    CategoriesResponseObject,

    /**
     * The CountRequest model constructor.
     * @property {module:model/CountRequest}
     */
    CountRequest,

    /**
     * The CountRequestBody model constructor.
     * @property {module:model/CountRequestBody}
     */
    CountRequestBody,

    /**
     * The CountResponse model constructor.
     * @property {module:model/CountResponse}
     */
    CountResponse,

    /**
     * The CountResponseObject model constructor.
     * @property {module:model/CountResponseObject}
     */
    CountResponseObject,

    /**
     * The Document model constructor.
     * @property {module:model/Document}
     */
    Document,

    /**
     * The ErrorExample model constructor.
     * @property {module:model/ErrorExample}
     */
    ErrorExample,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The InvalidIdErrorObject model constructor.
     * @property {module:model/InvalidIdErrorObject}
     */
    InvalidIdErrorObject,

    /**
     * The InvestmentResearchResponse model constructor.
     * @property {module:model/InvestmentResearchResponse}
     */
    InvestmentResearchResponse,

    /**
     * The InvestmentResearchResponseItems model constructor.
     * @property {module:model/InvestmentResearchResponseItems}
     */
    InvestmentResearchResponseItems,

    /**
     * The InvestmentResearchResponseMeta model constructor.
     * @property {module:model/InvestmentResearchResponseMeta}
     */
    InvestmentResearchResponseMeta,

    /**
     * The InvestmentResearchResponseMetaPagination model constructor.
     * @property {module:model/InvestmentResearchResponseMetaPagination}
     */
    InvestmentResearchResponseMetaPagination,

    /**
     * The ResearchAnalystResponse model constructor.
     * @property {module:model/ResearchAnalystResponse}
     */
    ResearchAnalystResponse,

    /**
     * The ResearchAnalystResponseObject model constructor.
     * @property {module:model/ResearchAnalystResponseObject}
     */
    ResearchAnalystResponseObject,

    /**
     * The ResearchContributorResponse model constructor.
     * @property {module:model/ResearchContributorResponse}
     */
    ResearchContributorResponse,

    /**
     * The ResearchContributorResponseObject model constructor.
     * @property {module:model/ResearchContributorResponseObject}
     */
    ResearchContributorResponseObject,

    /**
     * The SearchRequest model constructor.
     * @property {module:model/SearchRequest}
     */
    SearchRequest,

    /**
     * The SearchRequestBody model constructor.
     * @property {module:model/SearchRequestBody}
     */
    SearchRequestBody,

    /**
     * The SearchRequestMeta model constructor.
     * @property {module:model/SearchRequestMeta}
     */
    SearchRequestMeta,

    /**
     * The SearchRequestMetaPagination model constructor.
     * @property {module:model/SearchRequestMetaPagination}
     */
    SearchRequestMetaPagination,

    /**
     * The SecurityResponse model constructor.
     * @property {module:model/SecurityResponse}
     */
    SecurityResponse,

    /**
     * The SecurityTypesResponse model constructor.
     * @property {module:model/SecurityTypesResponse}
     */
    SecurityTypesResponse,

    /**
     * The TimeZoneResponse model constructor.
     * @property {module:model/TimeZoneResponse}
     */
    TimeZoneResponse,

    /**
     * The TimeZonesResponse model constructor.
     * @property {module:model/TimeZonesResponse}
     */
    TimeZonesResponse,

    /**
    * The MetaApi service constructor.
    * @property {module:api/MetaApi}
    */
    MetaApi,

    /**
    * The ResearchApi service constructor.
    * @property {module:api/ResearchApi}
    */
    ResearchApi,

};
