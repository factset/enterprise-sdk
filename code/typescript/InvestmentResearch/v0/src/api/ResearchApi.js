/**
 * Investment Research API
 *  The Investment Research API provides a comprehensive set of functionalities for searching and retrieving research reports and documents from various contributors.  This API is designed to expose document search and document retrieval functionality. A document search will allow a request to query FactSet document databases based on certain search criteria specified in the request.  FactSet collects research reports and models from brokers, independent research providers, market research firms, rating agencies, and other publishers of research. These documents are processed and made available to clients within about two minutes of receipt.  FactSet delivers this content through two main products:  **FactSet Research Connect** – real-time research for investment managers entitled by the contributors to access the content.  **FactSet Aftermarket Research** – delayed research for investment bankers permitted by contributors to purchase the research.  The meta endpoints namely time-zones, categories, research-contributors, research-analysts, security-types and asset-types provide comprehensive lists of data that is used in the research endpoints.    
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CountRequest from '../model/CountRequest';
import CountResponse from '../model/CountResponse';
import ErrorResponse from '../model/ErrorResponse';
import InvestmentResearchResponse from '../model/InvestmentResearchResponse';
import SearchRequest from '../model/SearchRequest';

/**
* Research service.
* @module api/ResearchApi
*/
export default class ResearchApi {

    /**
    * Constructs a new ResearchApi. 
    * @alias module:api/ResearchApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Returns the count of documents for specified source.
     * Returns the count of documents along with other response fields.
     * @param {module:model/CountRequest} countRequest 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/CountResponse} and HTTP response
     */
    getCountWithHttpInfo(countRequest) {
      let postBody = countRequest;
      // verify the required parameter 'countRequest' is set
      if (countRequest === undefined || countRequest === null) {
        throw new Error("Missing the required parameter 'countRequest' when calling getCount");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];


      let returnType = CountResponse;

      return this.apiClient.callApi(
        '/count', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Returns the count of documents for specified source.
     * Returns the count of documents along with other response fields.
     * @param {module:model/CountRequest} countRequest 
     * @return { Promise.< module:model/CountResponse > } a Promise, with data of type {@link module:model/CountResponse }
     */
    getCount(countRequest) {
      return this.getCountWithHttpInfo(countRequest)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Retrieve investment research documents and related metadata within FactSet coverage.
     * The /search endpoint returns the details about research documents, including headline, source, contributors, analyst information, categories, document links, relevant IDs and publication date.
     * @param {module:model/SearchRequest} searchRequest 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InvestmentResearchResponse} and HTTP response
     */
    getInvestmentResearchDataWithHttpInfo(searchRequest) {
      let postBody = searchRequest;
      // verify the required parameter 'searchRequest' is set
      if (searchRequest === undefined || searchRequest === null) {
        throw new Error("Missing the required parameter 'searchRequest' when calling getInvestmentResearchData");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];


      let returnType = InvestmentResearchResponse;

      return this.apiClient.callApi(
        '/search', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Retrieve investment research documents and related metadata within FactSet coverage.
     * The /search endpoint returns the details about research documents, including headline, source, contributors, analyst information, categories, document links, relevant IDs and publication date.
     * @param {module:model/SearchRequest} searchRequest 
     * @return { Promise.< module:model/InvestmentResearchResponse > } a Promise, with data of type {@link module:model/InvestmentResearchResponse }
     */
    getInvestmentResearchData(searchRequest) {
      return this.getInvestmentResearchDataWithHttpInfo(searchRequest)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}





