/**
 * FactSet Private Markets API
 * FactSet Private Markets API encompasses Private Company Financials data to start. Private Company firmographics can be found in the FactSet Entity API. The future plans of this service will include additional Private Markets data, such as Private Equity/Venture Capital.<p><b>Rate limit is set to 10 requests per second</b>.</p> 
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from './ApiClient';
import EntityMatch from './model/EntityMatch';
import EntityMatchRequest from './model/EntityMatchRequest';
import EntityMatchRequestInput from './model/EntityMatchRequestInput';
import EntityMatchesResponse from './model/EntityMatchesResponse';
import ErrorResponse from './model/ErrorResponse';
import ErrorResponseSubErrors from './model/ErrorResponseSubErrors';
import Field from './model/Field';
import FieldsResponse from './model/FieldsResponse';
import Financials from './model/Financials';
import FinancialsRequest from './model/FinancialsRequest';
import FinancialsResponse from './model/FinancialsResponse';
import NonPeriodic from './model/NonPeriodic';
import NonPeriodicRequest from './model/NonPeriodicRequest';
import NonPeriodicResponse from './model/NonPeriodicResponse';

import DataItemsApi from './api/DataItemsApi';
import FinancialsApi from './api/FinancialsApi';
import NonPeriodicApi from './api/NonPeriodicApi';
import UniverseApi from './api/UniverseApi';


/**
* FactSet Private Markets client library for JavaScript.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var factsetprivatemarkets = require('index'); // See note below*.
* var xxxSvc = new factsetprivatemarkets.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new factsetprivatemarkets.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new factsetprivatemarkets.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new factsetprivatemarkets.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The EntityMatch model constructor.
     * @property {module:model/EntityMatch}
     */
    EntityMatch,

    /**
     * The EntityMatchRequest model constructor.
     * @property {module:model/EntityMatchRequest}
     */
    EntityMatchRequest,

    /**
     * The EntityMatchRequestInput model constructor.
     * @property {module:model/EntityMatchRequestInput}
     */
    EntityMatchRequestInput,

    /**
     * The EntityMatchesResponse model constructor.
     * @property {module:model/EntityMatchesResponse}
     */
    EntityMatchesResponse,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The ErrorResponseSubErrors model constructor.
     * @property {module:model/ErrorResponseSubErrors}
     */
    ErrorResponseSubErrors,

    /**
     * The Field model constructor.
     * @property {module:model/Field}
     */
    Field,

    /**
     * The FieldsResponse model constructor.
     * @property {module:model/FieldsResponse}
     */
    FieldsResponse,

    /**
     * The Financials model constructor.
     * @property {module:model/Financials}
     */
    Financials,

    /**
     * The FinancialsRequest model constructor.
     * @property {module:model/FinancialsRequest}
     */
    FinancialsRequest,

    /**
     * The FinancialsResponse model constructor.
     * @property {module:model/FinancialsResponse}
     */
    FinancialsResponse,

    /**
     * The NonPeriodic model constructor.
     * @property {module:model/NonPeriodic}
     */
    NonPeriodic,

    /**
     * The NonPeriodicRequest model constructor.
     * @property {module:model/NonPeriodicRequest}
     */
    NonPeriodicRequest,

    /**
     * The NonPeriodicResponse model constructor.
     * @property {module:model/NonPeriodicResponse}
     */
    NonPeriodicResponse,

    /**
    * The DataItemsApi service constructor.
    * @property {module:api/DataItemsApi}
    */
    DataItemsApi,

    /**
    * The FinancialsApi service constructor.
    * @property {module:api/FinancialsApi}
    */
    FinancialsApi,

    /**
    * The NonPeriodicApi service constructor.
    * @property {module:api/NonPeriodicApi}
    */
    NonPeriodicApi,

    /**
    * The UniverseApi service constructor.
    * @property {module:api/UniverseApi}
    */
    UniverseApi,

};
