/**
 * Publisher API
 * Allow clients to fetch Publisher Analytics through APIs.
 *
 * The version of the OpenAPI document: 2
 * Contact: analytics.api.support@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PACalculationParameters from './PACalculationParameters';
import PubCalculationParameters from './PubCalculationParameters';
import SPARCalculationParameters from './SPARCalculationParameters';
import VaultCalculationParameters from './VaultCalculationParameters';

/**
 * The Calculation model module.
 * @module model/Calculation
 */
class Calculation {
    /**
     * Constructs a new <code>Calculation</code>.
     * @alias module:model/Calculation
     */
    constructor() { 
        
        Calculation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Calculation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Calculation} obj Optional instance to populate.
     * @return {module:model/Calculation} The populated <code>Calculation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Calculation();

            if (data.hasOwnProperty('pa')) {
                obj['pa'] = ApiClient.convertToType(data['pa'], {'String': PACalculationParameters});
            }
            if (data.hasOwnProperty('spar')) {
                obj['spar'] = ApiClient.convertToType(data['spar'], {'String': SPARCalculationParameters});
            }
            if (data.hasOwnProperty('vault')) {
                obj['vault'] = ApiClient.convertToType(data['vault'], {'String': VaultCalculationParameters});
            }
            if (data.hasOwnProperty('pub')) {
                obj['pub'] = ApiClient.convertToType(data['pub'], {'String': PubCalculationParameters});
            }
        }
        return obj;
    }


}

/**
 * List of PA calculation parameters.
 * @member {Object.<String, module:model/PACalculationParameters>} pa
 */
Calculation.prototype['pa'] = undefined;

/**
 * List of SPAR calculation parameters.
 * @member {Object.<String, module:model/SPARCalculationParameters>} spar
 */
Calculation.prototype['spar'] = undefined;

/**
 * List of Vault calculation parameters.
 * @member {Object.<String, module:model/VaultCalculationParameters>} vault
 */
Calculation.prototype['vault'] = undefined;

/**
 * List of Publisher calculation parameters.
 * @member {Object.<String, module:model/PubCalculationParameters>} pub
 */
Calculation.prototype['pub'] = undefined;






export default Calculation;

