/**
 * Tick History
 * Tick History provides dynamic access to historical tick data for a specific security for specific dates or date range.
 *
 * The version of the OpenAPI document: 2.4.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ErrorObject from './ErrorObject';

/**
 * The StatusOne model module.
 * @module model/StatusOne
 */
class StatusOne {
    /**
     * Constructs a new <code>StatusOne</code>.
     * request-files
     * @alias module:model/StatusOne
     */
    constructor() { 
        
        StatusOne.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StatusOne</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StatusOne} obj Optional instance to populate.
     * @return {module:model/StatusOne} The populated <code>StatusOne</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StatusOne();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('error')) {
                obj['error'] = ErrorObject.constructFromObject(data['error']);
            }
        }
        return obj;
    }


}

/**
 * a unique identification for the query requested
 * @member {String} id
 */
StatusOne.prototype['id'] = undefined;

/**
 * The status of the query
 * @member {module:model/StatusOne.StatusEnum} status
 */
StatusOne.prototype['status'] = undefined;

/**
 * @member {module:model/ErrorObject} error
 */
StatusOne.prototype['error'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
StatusOne['StatusEnum'] = {

    /**
     * value: "queued"
     * @const
     */
    "queued": "queued",

    /**
     * value: "executing"
     * @const
     */
    "executing": "executing",

    /**
     * value: "created"
     * @const
     */
    "created": "created",

    /**
     * value: "failed"
     * @const
     */
    "failed": "failed",

    /**
     * value: "cancelled"
     * @const
     */
    "cancelled": "cancelled"
};



export default StatusOne;

