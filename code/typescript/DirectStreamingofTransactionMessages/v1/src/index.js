/**
 * dsotm API
 * Allow clients to send transactions data to FactSet.
 *
 * The version of the OpenAPI document: 1.9.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from './ApiClient';
import AdditionalField from './model/AdditionalField';
import ClientErrorResponse from './model/ClientErrorResponse';
import DsotmParameters from './model/DsotmParameters';
import DsotmParametersRoot from './model/DsotmParametersRoot';
import Error from './model/Error';
import ErrorSource from './model/ErrorSource';
import Execution from './model/Execution';
import Order from './model/Order';
import Placement from './model/Placement';

import DSOTMApi from './api/DSOTMApi';


/**
* Direct Streaming of Transaction Messages client library for JavaScript.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var directstreamingoftransactionmessages = require('index'); // See note below*.
* var xxxSvc = new directstreamingoftransactionmessages.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new directstreamingoftransactionmessages.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new directstreamingoftransactionmessages.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new directstreamingoftransactionmessages.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AdditionalField model constructor.
     * @property {module:model/AdditionalField}
     */
    AdditionalField,

    /**
     * The ClientErrorResponse model constructor.
     * @property {module:model/ClientErrorResponse}
     */
    ClientErrorResponse,

    /**
     * The DsotmParameters model constructor.
     * @property {module:model/DsotmParameters}
     */
    DsotmParameters,

    /**
     * The DsotmParametersRoot model constructor.
     * @property {module:model/DsotmParametersRoot}
     */
    DsotmParametersRoot,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The ErrorSource model constructor.
     * @property {module:model/ErrorSource}
     */
    ErrorSource,

    /**
     * The Execution model constructor.
     * @property {module:model/Execution}
     */
    Execution,

    /**
     * The Order model constructor.
     * @property {module:model/Order}
     */
    Order,

    /**
     * The Placement model constructor.
     * @property {module:model/Placement}
     */
    Placement,

    /**
    * The DSOTMApi service constructor.
    * @property {module:api/DSOTMApi}
    */
    DSOTMApi,

};
