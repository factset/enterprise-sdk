/**
 * FactSet People API
 * The FactSet People API exposes FactSet data for individuals and their jobs.<p>This API is rate-limited to 10 requests per second and 10 concurrent requests per user.</p> 
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import PeopleProfilesRequest from '../model/PeopleProfilesRequest';
import PeopleProfilesResponse from '../model/PeopleProfilesResponse';

/**
* Profiles service.
* @module api/ProfilesApi
*/
export default class ProfilesApi {

    /**
    * Constructs a new ProfilesApi. 
    * @alias module:api/ProfilesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Return information about the person with the specified entity ID.
     * Returns a summary of basic information about the person referenced by the entityId specified in the URI. 
     * @param {Array.<String>} ids List of FactSet Person Entity identifier.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/PeopleProfilesResponse} and HTTP response
     */
    getPeopleProfilesWithHttpInfo(ids) {
      let postBody = null;
      // verify the required parameter 'ids' is set
      if (ids === undefined || ids === null) {
        throw new Error("Missing the required parameter 'ids' when calling getPeopleProfiles");
      }

      let pathParams = {
      };
      let queryParams = {
        'ids': this.apiClient.buildCollectionParam(ids, 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = [];
      let accepts = ['application/json'];


      let returnType = PeopleProfilesResponse;

      return this.apiClient.callApi(
        '/factset-people/v1/profiles', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Return information about the person with the specified entity ID.
     * Returns a summary of basic information about the person referenced by the entityId specified in the URI. 
     * @param {Array.<String>} ids List of FactSet Person Entity identifier.
     * @return { Promise.< module:model/PeopleProfilesResponse > } a Promise, with data of type {@link module:model/PeopleProfilesResponse }
     */
    getPeopleProfiles(ids) {
      return this.getPeopleProfilesWithHttpInfo(ids)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Returns profile information for a large list of people.
     * @param {module:model/PeopleProfilesRequest} peopleProfilesRequest 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/PeopleProfilesResponse} and HTTP response
     */
    getPeopleProfilesForListWithHttpInfo(peopleProfilesRequest) {
      let postBody = peopleProfilesRequest;
      // verify the required parameter 'peopleProfilesRequest' is set
      if (peopleProfilesRequest === undefined || peopleProfilesRequest === null) {
        throw new Error("Missing the required parameter 'peopleProfilesRequest' when calling getPeopleProfilesForList");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];


      let returnType = PeopleProfilesResponse;

      return this.apiClient.callApi(
        '/factset-people/v1/profiles', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Returns profile information for a large list of people.
     * @param {module:model/PeopleProfilesRequest} peopleProfilesRequest 
     * @return { Promise.< module:model/PeopleProfilesResponse > } a Promise, with data of type {@link module:model/PeopleProfilesResponse }
     */
    getPeopleProfilesForList(peopleProfilesRequest) {
      return this.getPeopleProfilesForListWithHttpInfo(peopleProfilesRequest)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}





