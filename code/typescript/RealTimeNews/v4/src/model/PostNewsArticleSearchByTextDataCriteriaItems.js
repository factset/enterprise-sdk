/**
 * Real-Time News API
 * Consume FactSetâ€™s StreetAccount news and 3rd party content through an API that seamlessly integrates with [quotes](https://developer.factset.com/api-catalog/real-time-quotes-api), [time series](https://developer.factset.com/api-catalog/real-time-time-series-api), [watchlists](https://developer.factset.com/api-catalog/watchlist-api-digital-portals), and other Functional APIs.  Search for news articles from various news distributors and publishers. Incorporate a multitude of search parameters such as region, category, source, article type and provider-specific meta data, to easily filter out the noise.  All search and list endpoints can be subscribed to receive streamed updates.  News providers include:  * APA * AWP  * Businesswire * Cercle Finance * Direkt News SE * Dow Jones News * dpa * dpa-AFX  * EUWAX * GlobenewsWire * Kauppalehti * MT Newswires * MoneyAM * newsaktuell * OMX * PR Newswire  * Ritzau Finans * StreetAccount News * TDN News        See the [Real-Time Quotes API](https://developer.factset.com/api-catalog/real-time-quotes-api) for access to detailed price and performance information, plus basic support for security identifier cross-reference. 
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PostNewsArticleListByInstrumentRequestDataFilterRange from './PostNewsArticleListByInstrumentRequestDataFilterRange';
import PostNewsArticleSearchByTextDataCriteriaItemsCategories from './PostNewsArticleSearchByTextDataCriteriaItemsCategories';
import PostNewsArticleSearchByTextDataCriteriaItemsDistributor from './PostNewsArticleSearchByTextDataCriteriaItemsDistributor';
import PostNewsArticleSearchByTextDataCriteriaItemsIndices from './PostNewsArticleSearchByTextDataCriteriaItemsIndices';
import PostNewsArticleSearchByTextDataCriteriaItemsInstruments from './PostNewsArticleSearchByTextDataCriteriaItemsInstruments';
import PostNewsArticleSearchByTextDataCriteriaItemsLanguage from './PostNewsArticleSearchByTextDataCriteriaItemsLanguage';
import PostNewsArticleSearchByTextDataCriteriaItemsPublisher from './PostNewsArticleSearchByTextDataCriteriaItemsPublisher';
import PostNewsArticleSearchByTextDataCriteriaItemsRegions from './PostNewsArticleSearchByTextDataCriteriaItemsRegions';
import PostNewsArticleSearchByTextDataCriteriaItemsTypes from './PostNewsArticleSearchByTextDataCriteriaItemsTypes';

/**
 * The PostNewsArticleSearchByTextDataCriteriaItems model module.
 * @module model/PostNewsArticleSearchByTextDataCriteriaItems
 */
class PostNewsArticleSearchByTextDataCriteriaItems {
    /**
     * Constructs a new <code>PostNewsArticleSearchByTextDataCriteriaItems</code>.
     * A list of objects. For semantical context see the description of the parent array.
     * @alias module:model/PostNewsArticleSearchByTextDataCriteriaItems
     */
    constructor() { 
        
        PostNewsArticleSearchByTextDataCriteriaItems.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PostNewsArticleSearchByTextDataCriteriaItems</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PostNewsArticleSearchByTextDataCriteriaItems} obj Optional instance to populate.
     * @return {module:model/PostNewsArticleSearchByTextDataCriteriaItems} The populated <code>PostNewsArticleSearchByTextDataCriteriaItems</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PostNewsArticleSearchByTextDataCriteriaItems();

            if (data.hasOwnProperty('selectionType')) {
                obj['selectionType'] = ApiClient.convertToType(data['selectionType'], 'String');
            }
            if (data.hasOwnProperty('range')) {
                obj['range'] = PostNewsArticleListByInstrumentRequestDataFilterRange.constructFromObject(data['range']);
            }
            if (data.hasOwnProperty('indices')) {
                obj['indices'] = PostNewsArticleSearchByTextDataCriteriaItemsIndices.constructFromObject(data['indices']);
            }
            if (data.hasOwnProperty('instruments')) {
                obj['instruments'] = PostNewsArticleSearchByTextDataCriteriaItemsInstruments.constructFromObject(data['instruments']);
            }
            if (data.hasOwnProperty('types')) {
                obj['types'] = PostNewsArticleSearchByTextDataCriteriaItemsTypes.constructFromObject(data['types']);
            }
            if (data.hasOwnProperty('categories')) {
                obj['categories'] = PostNewsArticleSearchByTextDataCriteriaItemsCategories.constructFromObject(data['categories']);
            }
            if (data.hasOwnProperty('regions')) {
                obj['regions'] = PostNewsArticleSearchByTextDataCriteriaItemsRegions.constructFromObject(data['regions']);
            }
            if (data.hasOwnProperty('distributor')) {
                obj['distributor'] = PostNewsArticleSearchByTextDataCriteriaItemsDistributor.constructFromObject(data['distributor']);
            }
            if (data.hasOwnProperty('publisher')) {
                obj['publisher'] = PostNewsArticleSearchByTextDataCriteriaItemsPublisher.constructFromObject(data['publisher']);
            }
            if (data.hasOwnProperty('language')) {
                obj['language'] = PostNewsArticleSearchByTextDataCriteriaItemsLanguage.constructFromObject(data['language']);
            }
        }
        return obj;
    }


}

/**
 * Specify how the criteria should be applied to the search. | Value | Description | | --- | --- | | include | Articles covering the given criteria are included in the result. | | exclude | Articles covering the given criteria are excluded from the result. |  
 * @member {module:model/PostNewsArticleSearchByTextDataCriteriaItems.SelectionTypeEnum} selectionType
 * @default 'include'
 */
PostNewsArticleSearchByTextDataCriteriaItems.prototype['selectionType'] = 'include';

/**
 * @member {module:model/PostNewsArticleListByInstrumentRequestDataFilterRange} range
 */
PostNewsArticleSearchByTextDataCriteriaItems.prototype['range'] = undefined;

/**
 * @member {module:model/PostNewsArticleSearchByTextDataCriteriaItemsIndices} indices
 */
PostNewsArticleSearchByTextDataCriteriaItems.prototype['indices'] = undefined;

/**
 * @member {module:model/PostNewsArticleSearchByTextDataCriteriaItemsInstruments} instruments
 */
PostNewsArticleSearchByTextDataCriteriaItems.prototype['instruments'] = undefined;

/**
 * @member {module:model/PostNewsArticleSearchByTextDataCriteriaItemsTypes} types
 */
PostNewsArticleSearchByTextDataCriteriaItems.prototype['types'] = undefined;

/**
 * @member {module:model/PostNewsArticleSearchByTextDataCriteriaItemsCategories} categories
 */
PostNewsArticleSearchByTextDataCriteriaItems.prototype['categories'] = undefined;

/**
 * @member {module:model/PostNewsArticleSearchByTextDataCriteriaItemsRegions} regions
 */
PostNewsArticleSearchByTextDataCriteriaItems.prototype['regions'] = undefined;

/**
 * @member {module:model/PostNewsArticleSearchByTextDataCriteriaItemsDistributor} distributor
 */
PostNewsArticleSearchByTextDataCriteriaItems.prototype['distributor'] = undefined;

/**
 * @member {module:model/PostNewsArticleSearchByTextDataCriteriaItemsPublisher} publisher
 */
PostNewsArticleSearchByTextDataCriteriaItems.prototype['publisher'] = undefined;

/**
 * @member {module:model/PostNewsArticleSearchByTextDataCriteriaItemsLanguage} language
 */
PostNewsArticleSearchByTextDataCriteriaItems.prototype['language'] = undefined;





/**
 * Allowed values for the <code>selectionType</code> property.
 * @enum {String}
 * @readonly
 */
PostNewsArticleSearchByTextDataCriteriaItems['SelectionTypeEnum'] = {

    /**
     * value: "include"
     * @const
     */
    "include": "include",

    /**
     * value: "exclude"
     * @const
     */
    "exclude": "exclude"
};



export default PostNewsArticleSearchByTextDataCriteriaItems;

