/**
 * Real-Time News API
 * Consume FactSetâ€™s StreetAccount news and 3rd party content through an API that seamlessly integrates with [quotes](https://developer.factset.com/api-catalog/real-time-quotes-api), [time series](https://developer.factset.com/api-catalog/real-time-time-series-api), [watchlists](https://developer.factset.com/api-catalog/watchlist-api-digital-portals), and other Functional APIs.  Search for news articles from various news distributors and publishers. Incorporate a multitude of search parameters such as region, category, source, article type and provider-specific meta data, to easily filter out the noise.  All search and list endpoints can be subscribed to receive streamed updates.  News providers include:  * APA * AWP  * Businesswire * Cercle Finance * Direkt News SE * Dow Jones News * dpa * dpa-AFX  * EUWAX * GlobenewsWire * Kauppalehti * MT Newswires * MoneyAM * newsaktuell * OMX * PR Newswire  * Ritzau Finans * StreetAccount News * TDN News        See the [Real-Time Quotes API](https://developer.factset.com/api-catalog/real-time-quotes-api) for access to detailed price and performance information, plus basic support for security identifier cross-reference. 
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PostNewsArticleSearchByTextRequestDataTextCriteria model module.
 * @module model/PostNewsArticleSearchByTextRequestDataTextCriteria
 */
class PostNewsArticleSearchByTextRequestDataTextCriteria {
    /**
     * Constructs a new <code>PostNewsArticleSearchByTextRequestDataTextCriteria</code>.
     * @alias module:model/PostNewsArticleSearchByTextRequestDataTextCriteria
     */
    constructor() { 
        
        PostNewsArticleSearchByTextRequestDataTextCriteria.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PostNewsArticleSearchByTextRequestDataTextCriteria</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PostNewsArticleSearchByTextRequestDataTextCriteria} obj Optional instance to populate.
     * @return {module:model/PostNewsArticleSearchByTextRequestDataTextCriteria} The populated <code>PostNewsArticleSearchByTextRequestDataTextCriteria</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PostNewsArticleSearchByTextRequestDataTextCriteria();

            if (data.hasOwnProperty('selectionType')) {
                obj['selectionType'] = ApiClient.convertToType(data['selectionType'], 'String');
            }
            if (data.hasOwnProperty('phrases')) {
                obj['phrases'] = ApiClient.convertToType(data['phrases'], ['String']);
            }
            if (data.hasOwnProperty('minimumMatchScore')) {
                obj['minimumMatchScore'] = ApiClient.convertToType(data['minimumMatchScore'], 'Number');
            }
            if (data.hasOwnProperty('scope')) {
                obj['scope'] = ApiClient.convertToType(data['scope'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Specify how the criteria should be applied to the search. | Value | Description | | --- | --- | | include | Articles covering the given criteria are included in the result. | | exclude | Articles covering the given criteria are excluded from the result. |  
 * @member {module:model/PostNewsArticleSearchByTextRequestDataTextCriteria.SelectionTypeEnum} selectionType
 * @default 'include'
 */
PostNewsArticleSearchByTextRequestDataTextCriteria.prototype['selectionType'] = 'include';

/**
 * Phrases to be used in the criteria.
 * @member {Array.<String>} phrases
 */
PostNewsArticleSearchByTextRequestDataTextCriteria.prototype['phrases'] = undefined;

/**
 * Minimum match score for words in the news article.
 * @member {Number} minimumMatchScore
 * @default 0.7
 */
PostNewsArticleSearchByTextRequestDataTextCriteria.prototype['minimumMatchScore'] = 0.7;

/**
 * Restrict fulltext search to specific scope. | Value | Description | | --- | --- | | headline | Headline of the news article. | | body | Text body of the news article. | | all | Search in both headline and body. |  
 * @member {module:model/PostNewsArticleSearchByTextRequestDataTextCriteria.ScopeEnum} scope
 * @default 'all'
 */
PostNewsArticleSearchByTextRequestDataTextCriteria.prototype['scope'] = 'all';





/**
 * Allowed values for the <code>selectionType</code> property.
 * @enum {String}
 * @readonly
 */
PostNewsArticleSearchByTextRequestDataTextCriteria['SelectionTypeEnum'] = {

    /**
     * value: "include"
     * @const
     */
    "include": "include",

    /**
     * value: "exclude"
     * @const
     */
    "exclude": "exclude"
};


/**
 * Allowed values for the <code>scope</code> property.
 * @enum {String}
 * @readonly
 */
PostNewsArticleSearchByTextRequestDataTextCriteria['ScopeEnum'] = {

    /**
     * value: "headline"
     * @const
     */
    "headline": "headline",

    /**
     * value: "body"
     * @const
     */
    "body": "body",

    /**
     * value: "all"
     * @const
     */
    "all": "all"
};



export default PostNewsArticleSearchByTextRequestDataTextCriteria;

