/**
 * Real-Time News API
 * Consume FactSetâ€™s StreetAccount news and 3rd party content through an API that seamlessly integrates with [quotes](https://developer.factset.com/api-catalog/real-time-quotes-api), [time series](https://developer.factset.com/api-catalog/real-time-time-series-api), [watchlists](https://developer.factset.com/api-catalog/watchlist-api-digital-portals), and other Functional APIs.  Search for news articles from various news distributors and publishers. Incorporate a multitude of search parameters such as region, category, source, article type and provider-specific meta data, to easily filter out the noise.  All search and list endpoints can be subscribed to receive streamed updates.  News providers include:  * APA * AWP  * Businesswire * Cercle Finance * Direkt News SE * Dow Jones News * dpa * dpa-AFX  * EUWAX * GlobenewsWire * Kauppalehti * MT Newswires * MoneyAM * newsaktuell * OMX * PR Newswire  * Ritzau Finans * StreetAccount News * TDN News        See the [Real-Time Quotes API](https://developer.factset.com/api-catalog/real-time-quotes-api) for access to detailed price and performance information, plus basic support for security identifier cross-reference. 
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PostNewsArticleListByInstrumentRequestDataIdentifier model module.
 * @module model/PostNewsArticleListByInstrumentRequestDataIdentifier
 */
class PostNewsArticleListByInstrumentRequestDataIdentifier {
    /**
     * Constructs a new <code>PostNewsArticleListByInstrumentRequestDataIdentifier</code>.
     * Set of identifiers and their type.
     * @alias module:model/PostNewsArticleListByInstrumentRequestDataIdentifier
     * @param values {Array.<String>} Set of identifiers to resolve.
     * @param type {module:model/PostNewsArticleListByInstrumentRequestDataIdentifier.TypeEnum} Type of the identifier. | Value | Description | | --- | --- | | idInstrument | MDG identifier of an instrument. | | idNotation | MDG identifier of a listing. | | fdsPermanentIdentifierSecurity | FactSet Permanent Identifier on security level. | | fdsPermanentIdentifierListing | FactSet Permanent Identifier on listing level. | | fdsPermanentIdentifierRegional | Regional FactSet Permanent Identifier. | | tickerExchange | FactSet market symbol of a listing. | | tickerRegion | Regional FactSet ticker symbol. | | sedol | SEDOL or IDII of a listing. | | isin | ISIN of an instrument. | | wkn | WKN of an instrument. | | valor | Valor number of an instrument. | | cusip | CUSIP or CINS identifier of an instrument |  
     */
    constructor(values, type) { 
        
        PostNewsArticleListByInstrumentRequestDataIdentifier.initialize(this, values, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, values, type) { 
        obj['values'] = values;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>PostNewsArticleListByInstrumentRequestDataIdentifier</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PostNewsArticleListByInstrumentRequestDataIdentifier} obj Optional instance to populate.
     * @return {module:model/PostNewsArticleListByInstrumentRequestDataIdentifier} The populated <code>PostNewsArticleListByInstrumentRequestDataIdentifier</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PostNewsArticleListByInstrumentRequestDataIdentifier();

            if (data.hasOwnProperty('values')) {
                obj['values'] = ApiClient.convertToType(data['values'], ['String']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Set of identifiers to resolve.
 * @member {Array.<String>} values
 */
PostNewsArticleListByInstrumentRequestDataIdentifier.prototype['values'] = undefined;

/**
 * Type of the identifier. | Value | Description | | --- | --- | | idInstrument | MDG identifier of an instrument. | | idNotation | MDG identifier of a listing. | | fdsPermanentIdentifierSecurity | FactSet Permanent Identifier on security level. | | fdsPermanentIdentifierListing | FactSet Permanent Identifier on listing level. | | fdsPermanentIdentifierRegional | Regional FactSet Permanent Identifier. | | tickerExchange | FactSet market symbol of a listing. | | tickerRegion | Regional FactSet ticker symbol. | | sedol | SEDOL or IDII of a listing. | | isin | ISIN of an instrument. | | wkn | WKN of an instrument. | | valor | Valor number of an instrument. | | cusip | CUSIP or CINS identifier of an instrument |  
 * @member {module:model/PostNewsArticleListByInstrumentRequestDataIdentifier.TypeEnum} type
 */
PostNewsArticleListByInstrumentRequestDataIdentifier.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
PostNewsArticleListByInstrumentRequestDataIdentifier['TypeEnum'] = {

    /**
     * value: "idInstrument"
     * @const
     */
    "idInstrument": "idInstrument",

    /**
     * value: "idNotation"
     * @const
     */
    "idNotation": "idNotation",

    /**
     * value: "fdsPermanentIdentifierSecurity"
     * @const
     */
    "fdsPermanentIdentifierSecurity": "fdsPermanentIdentifierSecurity",

    /**
     * value: "fdsPermanentIdentifierListing"
     * @const
     */
    "fdsPermanentIdentifierListing": "fdsPermanentIdentifierListing",

    /**
     * value: "fdsPermanentIdentifierRegional"
     * @const
     */
    "fdsPermanentIdentifierRegional": "fdsPermanentIdentifierRegional",

    /**
     * value: "tickerExchange"
     * @const
     */
    "tickerExchange": "tickerExchange",

    /**
     * value: "tickerRegion"
     * @const
     */
    "tickerRegion": "tickerRegion",

    /**
     * value: "sedol"
     * @const
     */
    "sedol": "sedol",

    /**
     * value: "isin"
     * @const
     */
    "isin": "isin",

    /**
     * value: "wkn"
     * @const
     */
    "wkn": "wkn",

    /**
     * value: "valor"
     * @const
     */
    "valor": "valor",

    /**
     * value: "cusip"
     * @const
     */
    "cusip": "cusip"
};



export default PostNewsArticleListByInstrumentRequestDataIdentifier;

