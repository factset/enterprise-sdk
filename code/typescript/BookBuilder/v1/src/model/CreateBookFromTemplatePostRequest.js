/**
 * BookBuilder
 * The BookBuilder API is a powerful tool that combines detailed reports for companies of interest. Save time by using a single source of knowledge instead of relying on multiple APIs to create a presentation ready PDF, also known as a Public Information Book(PIB). </br></br> Consistently create books with the same content/reports for different companies by defining templates with the set of reports saved for re-use. Or, use templates that are created by FactSet for quick use. </br></br> With our powerful API endpoints, you can get the information on companies of interest quickly where and when you need it. </br></br> 
 *
 * The version of the OpenAPI document: 1.13.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateBookFromTemplatePostRequest model module.
 * @module model/CreateBookFromTemplatePostRequest
 */
class CreateBookFromTemplatePostRequest {
    /**
     * Constructs a new <code>CreateBookFromTemplatePostRequest</code>.
     * It is a request body to allow users to input ticker and template id.
     * @alias module:model/CreateBookFromTemplatePostRequest
     */
    constructor() { 
        
        CreateBookFromTemplatePostRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateBookFromTemplatePostRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateBookFromTemplatePostRequest} obj Optional instance to populate.
     * @return {module:model/CreateBookFromTemplatePostRequest} The populated <code>CreateBookFromTemplatePostRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateBookFromTemplatePostRequest();

            if (data.hasOwnProperty('ticker')) {
                obj['ticker'] = ApiClient.convertToType(data['ticker'], 'String');
            }
            if (data.hasOwnProperty('template_id')) {
                obj['template_id'] = ApiClient.convertToType(data['template_id'], 'String');
            }
        }
        return obj;
    }


}

/**
 * ticker
 * @member {String} ticker
 */
CreateBookFromTemplatePostRequest.prototype['ticker'] = undefined;

/**
 * Template ID
 * @member {String} template_id
 */
CreateBookFromTemplatePostRequest.prototype['template_id'] = undefined;






export default CreateBookFromTemplatePostRequest;

