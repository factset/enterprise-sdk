/**
 * Portfolio Reporting Batcher
 * The Portfolio Reporting Batcher (PRB) API allows clients to systematically leverage functionalities of the PRB application.
 *
 * The version of the OpenAPI document: 0.5.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PrbStatus from './PrbStatus';
import Status from './Status';

/**
 * The RunsForJob model module.
 * @module model/RunsForJob
 */
class RunsForJob {
    /**
     * Constructs a new <code>RunsForJob</code>.
     * Provides full details of when the job has been run
     * @alias module:model/RunsForJob
     */
    constructor() { 
        
        RunsForJob.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RunsForJob</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RunsForJob} obj Optional instance to populate.
     * @return {module:model/RunsForJob} The populated <code>RunsForJob</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RunsForJob();

            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'Date');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('isApiTriggered')) {
                obj['isApiTriggered'] = ApiClient.convertToType(data['isApiTriggered'], 'Boolean');
            }
            if (data.hasOwnProperty('prbStatus')) {
                obj['prbStatus'] = PrbStatus.constructFromObject(data['prbStatus']);
            }
            if (data.hasOwnProperty('runDuration')) {
                obj['runDuration'] = ApiClient.convertToType(data['runDuration'], 'Number');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'Date');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = Status.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('statusDescription')) {
                obj['statusDescription'] = ApiClient.convertToType(data['statusDescription'], 'String');
            }
            if (data.hasOwnProperty('submitTime')) {
                obj['submitTime'] = ApiClient.convertToType(data['submitTime'], 'Date');
            }
        }
        return obj;
    }


}

/**
 * The date and time the job was finished processing
 * @member {Date} endTime
 */
RunsForJob.prototype['endTime'] = undefined;

/**
 * The ID of the run
 * @member {String} id
 */
RunsForJob.prototype['id'] = undefined;

/**
 * Indicates whether the job was triggered via the PRB API
 * @member {Boolean} isApiTriggered
 */
RunsForJob.prototype['isApiTriggered'] = undefined;

/**
 * @member {module:model/PrbStatus} prbStatus
 */
RunsForJob.prototype['prbStatus'] = undefined;

/**
 * Number of seconds between startTime and endTime
 * @member {Number} runDuration
 */
RunsForJob.prototype['runDuration'] = undefined;

/**
 * The date and time the job started running after being submitted and potentially waiting in any queue
 * @member {Date} startTime
 */
RunsForJob.prototype['startTime'] = undefined;

/**
 * @member {module:model/Status} status
 */
RunsForJob.prototype['status'] = undefined;

/**
 * Further details on the job's status
 * @member {String} statusDescription
 */
RunsForJob.prototype['statusDescription'] = undefined;

/**
 * The date and time the job was submitted
 * @member {Date} submitTime
 */
RunsForJob.prototype['submitTime'] = undefined;






export default RunsForJob;

