/**
 * Portfolio Reporting Batcher
 * The Portfolio Reporting Batcher (PRB) API allows clients to systematically leverage functionalities of the PRB application.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import JobTypes from './JobTypes';
import Status from './Status';

/**
 * The JobListResponseRoot model module.
 * @module model/JobListResponseRoot
 */
class JobListResponseRoot {
    /**
     * Constructs a new <code>JobListResponseRoot</code>.
     * Available details of a PRB job, please note limited details are available if the job has not been run before, please see the examples
     * @alias module:model/JobListResponseRoot
     */
    constructor() { 
        
        JobListResponseRoot.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>JobListResponseRoot</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobListResponseRoot} obj Optional instance to populate.
     * @return {module:model/JobListResponseRoot} The populated <code>JobListResponseRoot</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobListResponseRoot();

            if (data.hasOwnProperty('runId')) {
                obj['runId'] = ApiClient.convertToType(data['runId'], 'String');
            }
            if (data.hasOwnProperty('isApiTriggered')) {
                obj['isApiTriggered'] = ApiClient.convertToType(data['isApiTriggered'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('serialNumber')) {
                obj['serialNumber'] = ApiClient.convertToType(data['serialNumber'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = Status.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = JobTypes.constructFromObject(data['type']);
            }
        }
        return obj;
    }


}

/**
 * Latest run ID for the job
 * @member {String} runId
 */
JobListResponseRoot.prototype['runId'] = undefined;

/**
 * Indicates if the latest run was triggered by this API
 * @member {Boolean} isApiTriggered
 */
JobListResponseRoot.prototype['isApiTriggered'] = undefined;

/**
 * The name of the job
 * @member {String} name
 */
JobListResponseRoot.prototype['name'] = undefined;

/**
 * The FactSet serial number which identifies the person or account the job is assigned to
 * @member {String} serialNumber
 */
JobListResponseRoot.prototype['serialNumber'] = undefined;

/**
 * @member {module:model/Status} status
 */
JobListResponseRoot.prototype['status'] = undefined;

/**
 * @member {module:model/JobTypes} type
 */
JobListResponseRoot.prototype['type'] = undefined;






export default JobListResponseRoot;

