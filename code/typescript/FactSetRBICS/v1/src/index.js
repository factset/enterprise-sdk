/**
 * FactSet RIBCS
 * FactSet Revere Business Industry Classification System (RBICS) is a comprehensive structured taxonomy to classify companies by what they primarily do. It delivers a granular view for investors by classifying companies using a bottom-up approach according to the products and services they provide. By combining this approach with a top-level grouping based on companies' behavior similarities and stock co-movement, FactSet RBICS delivers unprecedented precision for 1,400+ sector groups.  RBICS Focus is a six level classification which highlights the companys main business. It is based on the company business line/s that stand for majority of a the revenue that the company generates. Updated monthly. For more details, visit [Online Assitant Page #20710](https://oa.apps.factset.com/pages/20710).<p><b>Rate limit is set to 40 requests per second</b>.</p> 
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from './ApiClient';
import EntityFocus from './model/EntityFocus';
import EntityFocusRequest from './model/EntityFocusRequest';
import EntityFocusResponse from './model/EntityFocusResponse';
import ErrorResponse from './model/ErrorResponse';
import ErrorResponseSubErrors from './model/ErrorResponseSubErrors';
import Structure from './model/Structure';
import StructureRequest from './model/StructureRequest';
import StructureResponse from './model/StructureResponse';

import EntityFocusApi from './api/EntityFocusApi';
import StructureApi from './api/StructureApi';


/**
* FactSet RBICS client library for JavaScript.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var factsetrbics = require('index'); // See note below*.
* var xxxSvc = new factsetrbics.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new factsetrbics.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new factsetrbics.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new factsetrbics.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The EntityFocus model constructor.
     * @property {module:model/EntityFocus}
     */
    EntityFocus,

    /**
     * The EntityFocusRequest model constructor.
     * @property {module:model/EntityFocusRequest}
     */
    EntityFocusRequest,

    /**
     * The EntityFocusResponse model constructor.
     * @property {module:model/EntityFocusResponse}
     */
    EntityFocusResponse,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The ErrorResponseSubErrors model constructor.
     * @property {module:model/ErrorResponseSubErrors}
     */
    ErrorResponseSubErrors,

    /**
     * The Structure model constructor.
     * @property {module:model/Structure}
     */
    Structure,

    /**
     * The StructureRequest model constructor.
     * @property {module:model/StructureRequest}
     */
    StructureRequest,

    /**
     * The StructureResponse model constructor.
     * @property {module:model/StructureResponse}
     */
    StructureResponse,

    /**
    * The EntityFocusApi service constructor.
    * @property {module:api/EntityFocusApi}
    */
    EntityFocusApi,

    /**
    * The StructureApi service constructor.
    * @property {module:api/StructureApi}
    */
    StructureApi,

};
