/**
 * Quant API
 * Allow clients to fetch Analytics through APIs.
 *
 * The version of the OpenAPI document: 3.12.1
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The QuantFormula model module.
 * @module model/QuantFormula
 */
class QuantFormula {
    /**
     * Constructs a new <code>QuantFormula</code>.
     * @alias module:model/QuantFormula
     * @param source {module:model/QuantFormula.SourceEnum} 
     */
    constructor(source) { 
        
        QuantFormula.initialize(this, source);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, source) { 
        obj['source'] = source;
    }

    /**
     * Constructs a <code>QuantFormula</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QuantFormula} obj Optional instance to populate.
     * @return {module:model/QuantFormula} The populated <code>QuantFormula</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QuantFormula();

            if (data.hasOwnProperty('source')) {
                obj['source'] = ApiClient.convertToType(data['source'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/QuantFormula.SourceEnum} source
 */
QuantFormula.prototype['source'] = undefined;





/**
 * Allowed values for the <code>source</code> property.
 * @enum {String}
 * @readonly
 */
QuantFormula['SourceEnum'] = {

    /**
     * value: "ScreeningExpression"
     * @const
     */
    "ScreeningExpression": "ScreeningExpression",

    /**
     * value: "FqlExpression"
     * @const
     */
    "FqlExpression": "FqlExpression",

    /**
     * value: "UniversalScreenParameter"
     * @const
     */
    "UniversalScreenParameter": "UniversalScreenParameter",

    /**
     * value: "AllUniversalScreenParameters"
     * @const
     */
    "AllUniversalScreenParameters": "AllUniversalScreenParameters"
};



export default QuantFormula;

