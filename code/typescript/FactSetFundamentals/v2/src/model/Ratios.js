/**
 * FactSet Fundamentals API
 * Gain access to current, comprehensive, and comparative information on securities in worldwide developed and emerging markets. Composed of annual and interim/quarterly data, detailed historical financial statement content, per-share data, and calculated ratios, FactSet Fundamentals provides you with the information you need for a global investment perspective.<p>This API is rate-limited to 10 requests per second and 10 concurrent requests per user.</p> 
 *
 * The version of the OpenAPI document: 2.4.1
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Ratios model module.
 * @module model/Ratios
 */
class Ratios {
    /**
     * Constructs a new <code>Ratios</code>.
     * @alias module:model/Ratios
     */
    constructor() { 
        
        Ratios.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Ratios</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Ratios} obj Optional instance to populate.
     * @return {module:model/Ratios} The populated <code>Ratios</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Ratios();

            if (data.hasOwnProperty('assetTurnoverRatio')) {
                obj['assetTurnoverRatio'] = ApiClient.convertToType(data['assetTurnoverRatio'], 'Number');
            }
            if (data.hasOwnProperty('currentRatio')) {
                obj['currentRatio'] = ApiClient.convertToType(data['currentRatio'], 'Number');
            }
            if (data.hasOwnProperty('quickRatio')) {
                obj['quickRatio'] = ApiClient.convertToType(data['quickRatio'], 'Number');
            }
            if (data.hasOwnProperty('ebitMargin')) {
                obj['ebitMargin'] = ApiClient.convertToType(data['ebitMargin'], 'Number');
            }
            if (data.hasOwnProperty('ebitdaMargin')) {
                obj['ebitdaMargin'] = ApiClient.convertToType(data['ebitdaMargin'], 'Number');
            }
            if (data.hasOwnProperty('grossMargin')) {
                obj['grossMargin'] = ApiClient.convertToType(data['grossMargin'], 'Number');
            }
            if (data.hasOwnProperty('inventoryTurnover')) {
                obj['inventoryTurnover'] = ApiClient.convertToType(data['inventoryTurnover'], 'Number');
            }
            if (data.hasOwnProperty('longTermDebtToEquity')) {
                obj['longTermDebtToEquity'] = ApiClient.convertToType(data['longTermDebtToEquity'], 'Number');
            }
            if (data.hasOwnProperty('payoutRatio')) {
                obj['payoutRatio'] = ApiClient.convertToType(data['payoutRatio'], 'Number');
            }
            if (data.hasOwnProperty('pretaxMargin')) {
                obj['pretaxMargin'] = ApiClient.convertToType(data['pretaxMargin'], 'Number');
            }
            if (data.hasOwnProperty('priceToBookRatio')) {
                obj['priceToBookRatio'] = ApiClient.convertToType(data['priceToBookRatio'], 'Number');
            }
            if (data.hasOwnProperty('priceToCashFlowRatio')) {
                obj['priceToCashFlowRatio'] = ApiClient.convertToType(data['priceToCashFlowRatio'], 'Number');
            }
            if (data.hasOwnProperty('priceToEarningsRatio')) {
                obj['priceToEarningsRatio'] = ApiClient.convertToType(data['priceToEarningsRatio'], 'Number');
            }
            if (data.hasOwnProperty('priceToSalesRatio')) {
                obj['priceToSalesRatio'] = ApiClient.convertToType(data['priceToSalesRatio'], 'Number');
            }
            if (data.hasOwnProperty('returnOnAssets')) {
                obj['returnOnAssets'] = ApiClient.convertToType(data['returnOnAssets'], 'Number');
            }
            if (data.hasOwnProperty('returnOnEquity')) {
                obj['returnOnEquity'] = ApiClient.convertToType(data['returnOnEquity'], 'Number');
            }
            if (data.hasOwnProperty('returnOnInvestedCapital')) {
                obj['returnOnInvestedCapital'] = ApiClient.convertToType(data['returnOnInvestedCapital'], 'Number');
            }
            if (data.hasOwnProperty('totalDebtToEquity')) {
                obj['totalDebtToEquity'] = ApiClient.convertToType(data['totalDebtToEquity'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * The asset turnover ratio measures the value of a company's sales or revenues relative to the value of its assets
 * @member {Number} assetTurnoverRatio
 */
Ratios.prototype['assetTurnoverRatio'] = undefined;

/**
 * The current ratio is a liquidity ratio that measures a company's ability to pay short-term and long-term obligations. The ratio is calculated by comparing current assets to current liabilities
 * @member {Number} currentRatio
 */
Ratios.prototype['currentRatio'] = undefined;

/**
 * The quick ratio measures the dollar amount of liquid assets available with the company against the dollar amount of its current liabilities
 * @member {Number} quickRatio
 */
Ratios.prototype['quickRatio'] = undefined;

/**
 * EBIT margin is an assessment of a firm's operating profitability as a percentage of its total revenue. It is equal to earnings before interest and tax (EBIT) divided by total revenue
 * @member {Number} ebitMargin
 */
Ratios.prototype['ebitMargin'] = undefined;

/**
 * EBITDA margin is an assessment of a firm's operating profitability as a percentage of its total revenue. It is equal to earnings before interest, tax, depreciation and amortization (EBITDA) divided by total revenue
 * @member {Number} ebitdaMargin
 */
Ratios.prototype['ebitdaMargin'] = undefined;

/**
 * Gross profit margin is the proportion of money left over from revenues after accounting for the cost of goods sold, calculated by dividing gross profit by revenues.
 * @member {Number} grossMargin
 */
Ratios.prototype['grossMargin'] = undefined;

/**
 * Inventory turnover is a ratio showing how many times a company has sold and replaced inventory during a given period
 * @member {Number} inventoryTurnover
 */
Ratios.prototype['inventoryTurnover'] = undefined;

/**
 * Long-term debt consists of loans and financial obligations lasting over one year. The Debt/Equity (D/E) Ratio is calculated by dividing a company’s total liabilities lasting over one year by its shareholder equity
 * @member {Number} longTermDebtToEquity
 */
Ratios.prototype['longTermDebtToEquity'] = undefined;

/**
 * The dividend payout ratio is the ratio of the total amount of dividends paid out to shareholders relative to the net income of the company
 * @member {Number} payoutRatio
 */
Ratios.prototype['payoutRatio'] = undefined;

/**
 * The pretax margin is the ratio of a company's pre-tax earnings to its total sales
 * @member {Number} pretaxMargin
 */
Ratios.prototype['pretaxMargin'] = undefined;

/**
 * Companies use the price-to-book ratio to compare a firm's market to book value by dividing price per share by book value per share (BVPS) .
 * @member {Number} priceToBookRatio
 */
Ratios.prototype['priceToBookRatio'] = undefined;

/**
 * The price-to-cash flow ratio is a stock valuation indicator or multiple that measures the value of a stock’s price relative to its operating cash flow per share.
 * @member {Number} priceToCashFlowRatio
 */
Ratios.prototype['priceToCashFlowRatio'] = undefined;

/**
 * The price-to-earnings ratio (P/E ratio) is the ratio for valuing a company that measures its current share price relative to its per-share earnings
 * @member {Number} priceToEarningsRatio
 */
Ratios.prototype['priceToEarningsRatio'] = undefined;

/**
 * The price-to-sales ratio (P/S ratio) is a valuation ratio that compares a company’s stock price to its revenues
 * @member {Number} priceToSalesRatio
 */
Ratios.prototype['priceToSalesRatio'] = undefined;

/**
 * Return on net assets (RONA) is a measure of financial performance calculated as net income divided by the sum of fixed assets and net working capital
 * @member {Number} returnOnAssets
 */
Ratios.prototype['returnOnAssets'] = undefined;

/**
 * Return on equity (ROE) is a measure of financial performance calculated as net income divided by shareholders' equity
 * @member {Number} returnOnEquity
 */
Ratios.prototype['returnOnEquity'] = undefined;

/**
 * Return on Investment (ROI) measures how well an investment is performing
 * @member {Number} returnOnInvestedCapital
 */
Ratios.prototype['returnOnInvestedCapital'] = undefined;

/**
 * The Debt/Equity (D/E) Ratio is calculated by dividing a company’s total liabilities by its shareholder equity
 * @member {Number} totalDebtToEquity
 */
Ratios.prototype['totalDebtToEquity'] = undefined;






export default Ratios;

