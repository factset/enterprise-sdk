/**
 * FactSet Fundamentals API
 * Gain access to current, comprehensive, and comparative information on securities in worldwide developed and emerging markets. In addition to the latest reported data, this API provides Point-in-Time (PIT) views to access fundamentals data as it was known on any given date. Composed of annual and interim/quarterly data, detailed historical financial statement content, per-share data, and calculated ratios, FactSet Fundamentals provides you with the information you need for a global investment perspective.<p>This API is rate-limited to 10 requests per second and 10 concurrent requests per user.</p> 
 *
 * The version of the OpenAPI document: 2.5.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PeriodInfo model module.
 * @module model/PeriodInfo
 */
class PeriodInfo {
    /**
     * Constructs a new <code>PeriodInfo</code>.
     * Detailed information about a single fiscal period for a security, including its Point-in-Time validity.
     * @alias module:model/PeriodInfo
     */
    constructor() { 
        
        PeriodInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PeriodInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PeriodInfo} obj Optional instance to populate.
     * @return {module:model/PeriodInfo} The populated <code>PeriodInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PeriodInfo();

            if (data.hasOwnProperty('requestId')) {
                obj['requestId'] = ApiClient.convertToType(data['requestId'], 'String');
            }
            if (data.hasOwnProperty('fsymId')) {
                obj['fsymId'] = ApiClient.convertToType(data['fsymId'], 'String');
            }
            if (data.hasOwnProperty('fiscalInterimNumber')) {
                obj['fiscalInterimNumber'] = ApiClient.convertToType(data['fiscalInterimNumber'], 'Number');
            }
            if (data.hasOwnProperty('periodicity')) {
                obj['periodicity'] = ApiClient.convertToType(data['periodicity'], 'String');
            }
            if (data.hasOwnProperty('fiscalDate')) {
                obj['fiscalDate'] = ApiClient.convertToType(data['fiscalDate'], 'Date');
            }
            if (data.hasOwnProperty('fyeChange')) {
                obj['fyeChange'] = ApiClient.convertToType(data['fyeChange'], 'Boolean');
            }
            if (data.hasOwnProperty('pitStart')) {
                obj['pitStart'] = ApiClient.convertToType(data['pitStart'], 'Date');
            }
            if (data.hasOwnProperty('pitEnd')) {
                obj['pitEnd'] = ApiClient.convertToType(data['pitEnd'], 'Date');
            }
        }
        return obj;
    }


}

/**
 * The identifier provided in the input request that corresponds to this period information.
 * @member {String} requestId
 */
PeriodInfo.prototype['requestId'] = undefined;

/**
 * FactSet Regional Security Identifier representing the specific data series for the requested `requestId`.
 * @member {String} fsymId
 */
PeriodInfo.prototype['fsymId'] = undefined;

/**
 * The sequential number of the interim period within the fiscal year (e.g., 1 for Q1, 2 for Q2).
 * @member {Number} fiscalInterimNumber
 */
PeriodInfo.prototype['fiscalInterimNumber'] = undefined;

/**
 * Periodicity code for this fiscal period (e.g., `QTR`, `ANN`).
 * @member {String} periodicity
 */
PeriodInfo.prototype['periodicity'] = undefined;

/**
 * The specific date used for reporting the period end, which may occasionally differ slightly from the period's actual calendar end date (YYYY-MM-DD).
 * @member {Date} fiscalDate
 */
PeriodInfo.prototype['fiscalDate'] = undefined;

/**
 * Flag indicating if a Fiscal Year End (FYE) change occurred during or impacted this specific period (`true` if changed, `false` otherwise).
 * @member {Boolean} fyeChange
 */
PeriodInfo.prototype['fyeChange'] = undefined;

/**
 * The UTC timestamp for when the fiscal period information was first published and became available.
 * @member {Date} pitStart
 */
PeriodInfo.prototype['pitStart'] = undefined;

/**
 * The UTC timestamp for when this version of the fiscal period information was superseded by a newer version. A `null` value indicates that this is the latest available version.
 * @member {Date} pitEnd
 */
PeriodInfo.prototype['pitEnd'] = undefined;






export default PeriodInfo;

