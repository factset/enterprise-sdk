/**
 * FactSet Fundamentals API
 * Gain access to current, comprehensive, and comparative information on securities in worldwide developed and emerging markets. Composed of annual and interim/quarterly data, detailed historical financial statement content, per-share data, and calculated ratios, FactSet Fundamentals provides you with the information you need for a global investment perspective.<p>This API is rate-limited to 10 requests per second and 10 concurrent requests per user.</p> 
 *
 * The version of the OpenAPI document: 2.4.1
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BatchErrorObject from './BatchErrorObject';

/**
 * The BatchStatus model module.
 * @module model/BatchStatus
 */
class BatchStatus {
    /**
     * Constructs a new <code>BatchStatus</code>.
     * @alias module:model/BatchStatus
     */
    constructor() { 
        
        BatchStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BatchStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BatchStatus} obj Optional instance to populate.
     * @return {module:model/BatchStatus} The populated <code>BatchStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BatchStatus();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'Date');
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'Date');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('error')) {
                obj['error'] = BatchErrorObject.constructFromObject(data['error']);
            }
        }
        return obj;
    }


}

/**
 * the id of batch request.
 * @member {String} id
 */
BatchStatus.prototype['id'] = undefined;

/**
 * Time when the batch request is started. This is in Eastern Time Zone. The date-time format is expressed as [YYYY-MM-DD]T[HH:MM:SSS], following ISO 8601.
 * @member {Date} startTime
 */
BatchStatus.prototype['startTime'] = undefined;

/**
 * Time when the batch request is ended. This is in Eastern Time Zone. The date-time format is expressed as [YYYY-MM-DD]T[HH:MM:SSS], following ISO 8601.
 * @member {Date} endTime
 */
BatchStatus.prototype['endTime'] = undefined;

/**
 * @member {module:model/BatchStatus.StatusEnum} status
 */
BatchStatus.prototype['status'] = undefined;

/**
 * @member {module:model/BatchErrorObject} error
 */
BatchStatus.prototype['error'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
BatchStatus['StatusEnum'] = {

    /**
     * value: "queued"
     * @const
     */
    "queued": "queued",

    /**
     * value: "executing"
     * @const
     */
    "executing": "executing",

    /**
     * value: "created"
     * @const
     */
    "created": "created",

    /**
     * value: "failed"
     * @const
     */
    "failed": "failed"
};



export default BatchStatus;

