/**
 * Real-Time Time Series API
 * Time series data, end-of-day or intraday, tick-by-tick or subsampled. Additional vendor-specific endpoints provide a modified interface for seamless integration with the ChartIQ chart library.  This API is focused on high-performance applications that are  * serving millions of end-users, * accessible by client browsers via the internet, * integrated into complex infrastructures such as existing frontend frameworks or authentication services.  This API has been designed for direct use by client web applications and feature extreme low latency: The average response time across all endpoints is 30 ms whereas 99% of all requests are answered in close to under 300ms.  See the [Real-Time Quotes API for Digital Portals](https://developer.factset.com/api-catalog/real-time-quotes-api) for access to detailed price information. 
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import InlineResponse200 from '../model/InlineResponse200';
import InlineResponse2001 from '../model/InlineResponse2001';
import InlineResponse2002 from '../model/InlineResponse2002';
import InlineResponse2003 from '../model/InlineResponse2003';
import InlineResponse2004 from '../model/InlineResponse2004';
import PostVendorChartIQTimeSeriesEodListRequest from '../model/PostVendorChartIQTimeSeriesEodListRequest';
import PostVendorChartIQTimeSeriesEodSubsampleGetRequest from '../model/PostVendorChartIQTimeSeriesEodSubsampleGetRequest';
import PostVendorChartIQTimeSeriesEodSubsampleListRequest from '../model/PostVendorChartIQTimeSeriesEodSubsampleListRequest';
import PostVendorChartIQTimeSeriesIntradaySubsampleGetRequest from '../model/PostVendorChartIQTimeSeriesIntradaySubsampleGetRequest';
import PostVendorChartIQTimeSeriesIntradaySubsampleListRequest from '../model/PostVendorChartIQTimeSeriesIntradaySubsampleListRequest';

/**
* Vendor service.
* @module api/VendorApi
*/
export default class VendorApi {

    /**
    * Constructs a new VendorApi. 
    * @alias module:api/VendorApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * End-of-day time series data for a notation.
     * End-of-day time series data for a notation. The resulting time series is always adjusted for currency changes.<br><br>Pagination to a previous page is not supported and `pagination.previous` is always `null`.
     * @param {module:model/PostVendorChartIQTimeSeriesEodListRequest} postVendorChartIQTimeSeriesEodListRequest Request Body
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InlineResponse200} and HTTP response
     */
    postVendorChartIqTimeSeriesEodListWithHttpInfo(postVendorChartIQTimeSeriesEodListRequest) {
      let postBody = postVendorChartIQTimeSeriesEodListRequest;
      // verify the required parameter 'postVendorChartIQTimeSeriesEodListRequest' is set
      if (postVendorChartIQTimeSeriesEodListRequest === undefined || postVendorChartIQTimeSeriesEodListRequest === null) {
        throw new Error("Missing the required parameter 'postVendorChartIQTimeSeriesEodListRequest' when calling postVendorChartIqTimeSeriesEodList");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];


      let returnType = InlineResponse200;

      return this.apiClient.callApi(
        '/vendor/chart-iq/time-series/eod/list', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * End-of-day time series data for a notation.
     * End-of-day time series data for a notation. The resulting time series is always adjusted for currency changes.<br><br>Pagination to a previous page is not supported and `pagination.previous` is always `null`.
     * @param {module:model/PostVendorChartIQTimeSeriesEodListRequest} postVendorChartIQTimeSeriesEodListRequest Request Body
     * @return { Promise.< module:model/InlineResponse200 > } a Promise, with data of type {@link module:model/InlineResponse200 }
     */
    postVendorChartIqTimeSeriesEodList(postVendorChartIQTimeSeriesEodListRequest) {
      return this.postVendorChartIqTimeSeriesEodListWithHttpInfo(postVendorChartIQTimeSeriesEodListRequest)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Single subsample end-of-day data for a notation.
     * Single subsample end-of-day data for a notation. The sample is always adjusted for currency changes. The subsample may exceed the entitled date range, but will be based only on days that are in the entitled range.
     * @param {module:model/PostVendorChartIQTimeSeriesEodSubsampleGetRequest} postVendorChartIQTimeSeriesEodSubsampleGetRequest Request Body
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InlineResponse2001} and HTTP response
     */
    postVendorChartIqTimeSeriesEodSubsampleGetWithHttpInfo(postVendorChartIQTimeSeriesEodSubsampleGetRequest) {
      let postBody = postVendorChartIQTimeSeriesEodSubsampleGetRequest;
      // verify the required parameter 'postVendorChartIQTimeSeriesEodSubsampleGetRequest' is set
      if (postVendorChartIQTimeSeriesEodSubsampleGetRequest === undefined || postVendorChartIQTimeSeriesEodSubsampleGetRequest === null) {
        throw new Error("Missing the required parameter 'postVendorChartIQTimeSeriesEodSubsampleGetRequest' when calling postVendorChartIqTimeSeriesEodSubsampleGet");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];


      let returnType = InlineResponse2001;

      return this.apiClient.callApi(
        '/vendor/chart-iq/time-series/eod/subsample/get', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Single subsample end-of-day data for a notation.
     * Single subsample end-of-day data for a notation. The sample is always adjusted for currency changes. The subsample may exceed the entitled date range, but will be based only on days that are in the entitled range.
     * @param {module:model/PostVendorChartIQTimeSeriesEodSubsampleGetRequest} postVendorChartIQTimeSeriesEodSubsampleGetRequest Request Body
     * @return { Promise.< module:model/InlineResponse2001 > } a Promise, with data of type {@link module:model/InlineResponse2001 }
     */
    postVendorChartIqTimeSeriesEodSubsampleGet(postVendorChartIQTimeSeriesEodSubsampleGetRequest) {
      return this.postVendorChartIqTimeSeriesEodSubsampleGetWithHttpInfo(postVendorChartIQTimeSeriesEodSubsampleGetRequest)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Subsampled end-of-day time series data for a notation.
     * Subsampled end-of-day time series data for a notation. The resulting time series is always adjusted for currency changes. If a subsample's date range is not entirely within the maximally entitled date range, the subsample is excluded from the response.<br><br>Pagination to a previous page is not supported and `pagination.previous` is always `null`.
     * @param {module:model/PostVendorChartIQTimeSeriesEodSubsampleListRequest} postVendorChartIQTimeSeriesEodSubsampleListRequest Request Body
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InlineResponse2002} and HTTP response
     */
    postVendorChartIqTimeSeriesEodSubsampleListWithHttpInfo(postVendorChartIQTimeSeriesEodSubsampleListRequest) {
      let postBody = postVendorChartIQTimeSeriesEodSubsampleListRequest;
      // verify the required parameter 'postVendorChartIQTimeSeriesEodSubsampleListRequest' is set
      if (postVendorChartIQTimeSeriesEodSubsampleListRequest === undefined || postVendorChartIQTimeSeriesEodSubsampleListRequest === null) {
        throw new Error("Missing the required parameter 'postVendorChartIQTimeSeriesEodSubsampleListRequest' when calling postVendorChartIqTimeSeriesEodSubsampleList");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];


      let returnType = InlineResponse2002;

      return this.apiClient.callApi(
        '/vendor/chart-iq/time-series/eod/subsample/list', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Subsampled end-of-day time series data for a notation.
     * Subsampled end-of-day time series data for a notation. The resulting time series is always adjusted for currency changes. If a subsample's date range is not entirely within the maximally entitled date range, the subsample is excluded from the response.<br><br>Pagination to a previous page is not supported and `pagination.previous` is always `null`.
     * @param {module:model/PostVendorChartIQTimeSeriesEodSubsampleListRequest} postVendorChartIQTimeSeriesEodSubsampleListRequest Request Body
     * @return { Promise.< module:model/InlineResponse2002 > } a Promise, with data of type {@link module:model/InlineResponse2002 }
     */
    postVendorChartIqTimeSeriesEodSubsampleList(postVendorChartIQTimeSeriesEodSubsampleListRequest) {
      return this.postVendorChartIqTimeSeriesEodSubsampleListWithHttpInfo(postVendorChartIQTimeSeriesEodSubsampleListRequest)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Single subsample intraday data for a notation.
     * Single subsample intraday data for a notation. The subsample may exceed the entitled time range, but will be based only on ticks that are in the entitled range.
     * @param {module:model/PostVendorChartIQTimeSeriesIntradaySubsampleGetRequest} postVendorChartIQTimeSeriesIntradaySubsampleGetRequest Request Body
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InlineResponse2003} and HTTP response
     */
    postVendorChartIqTimeSeriesIntradaySubsampleGetWithHttpInfo(postVendorChartIQTimeSeriesIntradaySubsampleGetRequest) {
      let postBody = postVendorChartIQTimeSeriesIntradaySubsampleGetRequest;
      // verify the required parameter 'postVendorChartIQTimeSeriesIntradaySubsampleGetRequest' is set
      if (postVendorChartIQTimeSeriesIntradaySubsampleGetRequest === undefined || postVendorChartIQTimeSeriesIntradaySubsampleGetRequest === null) {
        throw new Error("Missing the required parameter 'postVendorChartIQTimeSeriesIntradaySubsampleGetRequest' when calling postVendorChartIqTimeSeriesIntradaySubsampleGet");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];


      let returnType = InlineResponse2003;

      return this.apiClient.callApi(
        '/vendor/chart-iq/time-series/intraday/subsample/get', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Single subsample intraday data for a notation.
     * Single subsample intraday data for a notation. The subsample may exceed the entitled time range, but will be based only on ticks that are in the entitled range.
     * @param {module:model/PostVendorChartIQTimeSeriesIntradaySubsampleGetRequest} postVendorChartIQTimeSeriesIntradaySubsampleGetRequest Request Body
     * @return { Promise.< module:model/InlineResponse2003 > } a Promise, with data of type {@link module:model/InlineResponse2003 }
     */
    postVendorChartIqTimeSeriesIntradaySubsampleGet(postVendorChartIQTimeSeriesIntradaySubsampleGetRequest) {
      return this.postVendorChartIqTimeSeriesIntradaySubsampleGetWithHttpInfo(postVendorChartIQTimeSeriesIntradaySubsampleGetRequest)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Subsampled intraday time series data for a notation.
     * Subsampled intraday time series data for a notation. If a subsample's time range is not entirely within the maximally entitled time range, the subsample is excluded from the response.<br><br>Pagination to a previous page is not supported and `pagination.previous` is always `null`.
     * @param {module:model/PostVendorChartIQTimeSeriesIntradaySubsampleListRequest} postVendorChartIQTimeSeriesIntradaySubsampleListRequest Request Body
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InlineResponse2004} and HTTP response
     */
    postVendorChartIqTimeSeriesIntradaySubsampleListWithHttpInfo(postVendorChartIQTimeSeriesIntradaySubsampleListRequest) {
      let postBody = postVendorChartIQTimeSeriesIntradaySubsampleListRequest;
      // verify the required parameter 'postVendorChartIQTimeSeriesIntradaySubsampleListRequest' is set
      if (postVendorChartIQTimeSeriesIntradaySubsampleListRequest === undefined || postVendorChartIQTimeSeriesIntradaySubsampleListRequest === null) {
        throw new Error("Missing the required parameter 'postVendorChartIQTimeSeriesIntradaySubsampleListRequest' when calling postVendorChartIqTimeSeriesIntradaySubsampleList");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];


      let returnType = InlineResponse2004;

      return this.apiClient.callApi(
        '/vendor/chart-iq/time-series/intraday/subsample/list', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Subsampled intraday time series data for a notation.
     * Subsampled intraday time series data for a notation. If a subsample's time range is not entirely within the maximally entitled time range, the subsample is excluded from the response.<br><br>Pagination to a previous page is not supported and `pagination.previous` is always `null`.
     * @param {module:model/PostVendorChartIQTimeSeriesIntradaySubsampleListRequest} postVendorChartIQTimeSeriesIntradaySubsampleListRequest Request Body
     * @return { Promise.< module:model/InlineResponse2004 > } a Promise, with data of type {@link module:model/InlineResponse2004 }
     */
    postVendorChartIqTimeSeriesIntradaySubsampleList(postVendorChartIQTimeSeriesIntradaySubsampleListRequest) {
      return this.postVendorChartIqTimeSeriesIntradaySubsampleListWithHttpInfo(postVendorChartIQTimeSeriesIntradaySubsampleListRequest)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}





