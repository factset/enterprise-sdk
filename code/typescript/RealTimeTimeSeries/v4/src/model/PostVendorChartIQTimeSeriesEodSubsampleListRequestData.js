/**
 * Real-Time Time Series API
 * Time series data, end-of-day or intraday, tick-by-tick or subsampled. Additional vendor-specific endpoints provide a modified interface for seamless integration with the ChartIQ chart library.  This API is focused on high-performance applications that are  * serving millions of end-users, * accessible by client browsers via the internet, * integrated into complex infrastructures such as existing frontend frameworks or authentication services.  This API has been designed for direct use by client web applications and feature extreme low latency: The average response time across all endpoints is 30 ms whereas 99% of all requests are answered in close to under 300ms.  See the [Real-Time Quotes API for Digital Portals](https://developer.factset.com/api-catalog/real-time-quotes-api) for access to detailed price information. 
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PostVendorChartIQTimeSeriesEodListRequestDataAdjustments from './PostVendorChartIQTimeSeriesEodListRequestDataAdjustments';
import PostVendorChartIQTimeSeriesEodListRequestDataIdentifier from './PostVendorChartIQTimeSeriesEodListRequestDataIdentifier';
import PostVendorChartIQTimeSeriesEodSubsampleListRequestDataIntervalSelection from './PostVendorChartIQTimeSeriesEodSubsampleListRequestDataIntervalSelection';

/**
 * The PostVendorChartIQTimeSeriesEodSubsampleListRequestData model module.
 * @module model/PostVendorChartIQTimeSeriesEodSubsampleListRequestData
 */
class PostVendorChartIQTimeSeriesEodSubsampleListRequestData {
    /**
     * Constructs a new <code>PostVendorChartIQTimeSeriesEodSubsampleListRequestData</code>.
     * The data member contains the request&#39;s primary data.
     * @alias module:model/PostVendorChartIQTimeSeriesEodSubsampleListRequestData
     * @param identifier {module:model/PostVendorChartIQTimeSeriesEodListRequestDataIdentifier} 
     * @param intervalSelection {module:model/PostVendorChartIQTimeSeriesEodSubsampleListRequestDataIntervalSelection} 
     */
    constructor(identifier, intervalSelection) { 
        
        PostVendorChartIQTimeSeriesEodSubsampleListRequestData.initialize(this, identifier, intervalSelection);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, identifier, intervalSelection) { 
        obj['identifier'] = identifier;
        obj['intervalSelection'] = intervalSelection;
    }

    /**
     * Constructs a <code>PostVendorChartIQTimeSeriesEodSubsampleListRequestData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PostVendorChartIQTimeSeriesEodSubsampleListRequestData} obj Optional instance to populate.
     * @return {module:model/PostVendorChartIQTimeSeriesEodSubsampleListRequestData} The populated <code>PostVendorChartIQTimeSeriesEodSubsampleListRequestData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PostVendorChartIQTimeSeriesEodSubsampleListRequestData();

            if (data.hasOwnProperty('identifier')) {
                obj['identifier'] = PostVendorChartIQTimeSeriesEodListRequestDataIdentifier.constructFromObject(data['identifier']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('quality')) {
                obj['quality'] = ApiClient.convertToType(data['quality'], 'String');
            }
            if (data.hasOwnProperty('intervalSelection')) {
                obj['intervalSelection'] = PostVendorChartIQTimeSeriesEodSubsampleListRequestDataIntervalSelection.constructFromObject(data['intervalSelection']);
            }
            if (data.hasOwnProperty('newestFirst')) {
                obj['newestFirst'] = ApiClient.convertToType(data['newestFirst'], 'Boolean');
            }
            if (data.hasOwnProperty('adjustments')) {
                obj['adjustments'] = PostVendorChartIQTimeSeriesEodListRequestDataAdjustments.constructFromObject(data['adjustments']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/PostVendorChartIQTimeSeriesEodListRequestDataIdentifier} identifier
 */
PostVendorChartIQTimeSeriesEodSubsampleListRequestData.prototype['identifier'] = undefined;

/**
 * Type of the price as configured for the customer. | Value | Description | | --- | --- | | trade | Trade price (ordinary, auction, pre or post-trading). | | bid | Bid price. | | ask | Ask price. | | yield | Yield price. | | estimate | Estimated price. |  
 * @member {module:model/PostVendorChartIQTimeSeriesEodSubsampleListRequestData.TypeEnum} type
 * @default 'trade'
 */
PostVendorChartIQTimeSeriesEodSubsampleListRequestData.prototype['type'] = 'trade';

/**
 * Quality of the price. | Value | Description | | --- | --- | | DLY | Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes. | | EOD | End-of-day: prices updated once per day after the close of trading, possibly with an exchange-imposed delay of several hours or days. | | BST | Best: choose the price quality with the least delay, as entitled for the client. |  
 * @member {module:model/PostVendorChartIQTimeSeriesEodSubsampleListRequestData.QualityEnum} quality
 * @default 'DLY'
 */
PostVendorChartIQTimeSeriesEodSubsampleListRequestData.prototype['quality'] = 'DLY';

/**
 * @member {module:model/PostVendorChartIQTimeSeriesEodSubsampleListRequestDataIntervalSelection} intervalSelection
 */
PostVendorChartIQTimeSeriesEodSubsampleListRequestData.prototype['intervalSelection'] = undefined;

/**
 * Deliver the chronological last part of the requested data first.
 * @member {Boolean} newestFirst
 * @default false
 */
PostVendorChartIQTimeSeriesEodSubsampleListRequestData.prototype['newestFirst'] = false;

/**
 * @member {module:model/PostVendorChartIQTimeSeriesEodListRequestDataAdjustments} adjustments
 */
PostVendorChartIQTimeSeriesEodSubsampleListRequestData.prototype['adjustments'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
PostVendorChartIQTimeSeriesEodSubsampleListRequestData['TypeEnum'] = {

    /**
     * value: "trade"
     * @const
     */
    "trade": "trade",

    /**
     * value: "bid"
     * @const
     */
    "bid": "bid",

    /**
     * value: "ask"
     * @const
     */
    "ask": "ask",

    /**
     * value: "yield"
     * @const
     */
    "yield": "yield",

    /**
     * value: "estimate"
     * @const
     */
    "estimate": "estimate"
};


/**
 * Allowed values for the <code>quality</code> property.
 * @enum {String}
 * @readonly
 */
PostVendorChartIQTimeSeriesEodSubsampleListRequestData['QualityEnum'] = {

    /**
     * value: "DLY"
     * @const
     */
    "DLY": "DLY",

    /**
     * value: "EOD"
     * @const
     */
    "EOD": "EOD",

    /**
     * value: "BST"
     * @const
     */
    "BST": "BST"
};



export default PostVendorChartIQTimeSeriesEodSubsampleListRequestData;

