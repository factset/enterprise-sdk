/**
 * Security Explanation API
 * Allow clients to use Security Explanation through APIs.
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BrokerResearchSummary model module.
 * @module model/BrokerResearchSummary
 */
class BrokerResearchSummary {
    /**
     * Constructs a new <code>BrokerResearchSummary</code>.
     * Broker research summary configuration object.
     * @alias module:model/BrokerResearchSummary
     */
    constructor() { 
        
        BrokerResearchSummary.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BrokerResearchSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BrokerResearchSummary} obj Optional instance to populate.
     * @return {module:model/BrokerResearchSummary} The populated <code>BrokerResearchSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BrokerResearchSummary();

            if (data.hasOwnProperty('style')) {
                obj['style'] = ApiClient.convertToType(data['style'], 'String');
            }
            if (data.hasOwnProperty('brokerIds')) {
                obj['brokerIds'] = ApiClient.convertToType(data['brokerIds'], ['Number']);
            }
        }
        return obj;
    }


}

/**
 * Include summarized broker research notes on the company, or just the footnote, or none. Only available for Broker Research users
 * @member {module:model/BrokerResearchSummary.StyleEnum} style
 * @default 'none'
 */
BrokerResearchSummary.prototype['style'] = 'none';

/**
 * List of broker IDs covering the company to receive individual research summaries for each over the specified period.Summaries are presented separately by broker, not combined.
 * @member {Array.<Number>} brokerIds
 */
BrokerResearchSummary.prototype['brokerIds'] = undefined;





/**
 * Allowed values for the <code>style</code> property.
 * @enum {String}
 * @readonly
 */
BrokerResearchSummary['StyleEnum'] = {

    /**
     * value: "none"
     * @const
     */
    "none": "none",

    /**
     * value: "summary"
     * @const
     */
    "summary": "summary",

    /**
     * value: "footnote"
     * @const
     */
    "footnote": "footnote"
};



export default BrokerResearchSummary;

