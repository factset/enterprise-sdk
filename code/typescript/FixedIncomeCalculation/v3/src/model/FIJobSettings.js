/**
 * FI API
 * Allow clients to fetch Analytics through APIs.
 *
 * The version of the OpenAPI document: 3.13.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FIAttributionForJobSettings from './FIAttributionForJobSettings';
import FIBankLoans from './FIBankLoans';
import FIMarketEnvironment from './FIMarketEnvironment';
import FIMunicipalBondsForJobSettings from './FIMunicipalBondsForJobSettings';
import FIStructuredProductsForJobSettings from './FIStructuredProductsForJobSettings';

/**
 * The FIJobSettings model module.
 * @module model/FIJobSettings
 */
class FIJobSettings {
    /**
     * Constructs a new <code>FIJobSettings</code>.
     * @alias module:model/FIJobSettings
     * @param asOfDate {String} As of date
     */
    constructor(asOfDate) { 
        
        FIJobSettings.initialize(this, asOfDate);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, asOfDate) { 
        obj['asOfDate'] = asOfDate;
    }

    /**
     * Constructs a <code>FIJobSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FIJobSettings} obj Optional instance to populate.
     * @return {module:model/FIJobSettings} The populated <code>FIJobSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FIJobSettings();

            if (data.hasOwnProperty('asOfDate')) {
                obj['asOfDate'] = ApiClient.convertToType(data['asOfDate'], 'String');
            }
            if (data.hasOwnProperty('partialDurationMonths')) {
                obj['partialDurationMonths'] = ApiClient.convertToType(data['partialDurationMonths'], ['Number']);
            }
            if (data.hasOwnProperty('callMethod')) {
                obj['callMethod'] = ApiClient.convertToType(data['callMethod'], 'String');
            }
            if (data.hasOwnProperty('settlement')) {
                obj['settlement'] = ApiClient.convertToType(data['settlement'], 'String');
            }
            if (data.hasOwnProperty('calcFromMethod')) {
                obj['calcFromMethod'] = ApiClient.convertToType(data['calcFromMethod'], 'String');
            }
            if (data.hasOwnProperty('bankLoans')) {
                obj['bankLoans'] = FIBankLoans.constructFromObject(data['bankLoans']);
            }
            if (data.hasOwnProperty('municipalBonds')) {
                obj['municipalBonds'] = FIMunicipalBondsForJobSettings.constructFromObject(data['municipalBonds']);
            }
            if (data.hasOwnProperty('marketEnvironment')) {
                obj['marketEnvironment'] = FIMarketEnvironment.constructFromObject(data['marketEnvironment']);
            }
            if (data.hasOwnProperty('structuredProducts')) {
                obj['structuredProducts'] = FIStructuredProductsForJobSettings.constructFromObject(data['structuredProducts']);
            }
            if (data.hasOwnProperty('attribution')) {
                obj['attribution'] = FIAttributionForJobSettings.constructFromObject(data['attribution']);
            }
        }
        return obj;
    }


}

/**
 * As of date
 * @member {String} asOfDate
 */
FIJobSettings.prototype['asOfDate'] = undefined;

/**
 * Partial duration months
 * @member {Array.<Number>} partialDurationMonths
 */
FIJobSettings.prototype['partialDurationMonths'] = undefined;

/**
 * Call Method
 * @member {module:model/FIJobSettings.CallMethodEnum} callMethod
 */
FIJobSettings.prototype['callMethod'] = undefined;

/**
 * Settlement Date
 * @member {String} settlement
 */
FIJobSettings.prototype['settlement'] = undefined;

/**
 * Calculation Method.  Methods : Active Spread, Actual Spread, Actual Spread To Worst Call, OAS, Price, Yield, Yield To No Call, Act/Act Yield To No Call, Bond Equivalent Yield,  Yield To Worst Call, Discount Yield, Discount Margin, Implied Volatility, Bullet Spread, Bullet Spread To Worst Call, Pricing Matrix
 * @member {String} calcFromMethod
 */
FIJobSettings.prototype['calcFromMethod'] = undefined;

/**
 * @member {module:model/FIBankLoans} bankLoans
 */
FIJobSettings.prototype['bankLoans'] = undefined;

/**
 * @member {module:model/FIMunicipalBondsForJobSettings} municipalBonds
 */
FIJobSettings.prototype['municipalBonds'] = undefined;

/**
 * @member {module:model/FIMarketEnvironment} marketEnvironment
 */
FIJobSettings.prototype['marketEnvironment'] = undefined;

/**
 * @member {module:model/FIStructuredProductsForJobSettings} structuredProducts
 */
FIJobSettings.prototype['structuredProducts'] = undefined;

/**
 * @member {module:model/FIAttributionForJobSettings} attribution
 */
FIJobSettings.prototype['attribution'] = undefined;





/**
 * Allowed values for the <code>callMethod</code> property.
 * @enum {String}
 * @readonly
 */
FIJobSettings['CallMethodEnum'] = {

    /**
     * value: "No Call"
     * @const
     */
    "No Call": "No Call",

    /**
     * value: "Intrinsic Value"
     * @const
     */
    "Intrinsic Value": "Intrinsic Value",

    /**
     * value: "First Call"
     * @const
     */
    "First Call": "First Call",

    /**
     * value: "First Par"
     * @const
     */
    "First Par": "First Par"
};



export default FIJobSettings;

