/**
 * PA Engine API
 * Allow clients to fetch Analytics through APIs.
 *
 * The version of the OpenAPI document: 3.16.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Metadata from './Metadata';

/**
 * The Section model module.
 * @module model/Section
 */
class Section {
    /**
     * Constructs a new <code>Section</code>.
     * @alias module:model/Section
     */
    constructor() { 
        
        Section.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Section</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Section} obj Optional instance to populate.
     * @return {module:model/Section} The populated <code>Section</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Section();

            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = Metadata.constructFromObject(data['metadata']);
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('content')) {
                obj['content'] = ApiClient.convertToType(data['content'], 'String');
            }
            if (data.hasOwnProperty('subSections')) {
                obj['subSections'] = ApiClient.convertToType(data['subSections'], [Section]);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/Metadata} metadata
 */
Section.prototype['metadata'] = undefined;

/**
 * Commentary title
 * @member {String} title
 */
Section.prototype['title'] = undefined;

/**
 * Generated commentary content
 * @member {String} content
 */
Section.prototype['content'] = undefined;

/**
 * Generated commentary subsections
 * @member {Array.<module:model/Section>} subSections
 */
Section.prototype['subSections'] = undefined;






export default Section;

