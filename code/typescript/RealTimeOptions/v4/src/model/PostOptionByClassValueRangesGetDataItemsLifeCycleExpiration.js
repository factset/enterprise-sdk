/**
 * Real-Time Options API
 * The Options API provides detailed information for option contracts (“options”) and option classes. This API presents a consolidated data model that gives access to options data of global options markets such as OPRA, Australia Exchange, Bovespa, CME Group, EUREX, Euronext, Hong Kong, ICE Futures Europe / US, Montreal Exchange, and others.  An option class is a product group of options from the same exchange and with the same underlying. The API includes endpoints to retrieve fundamental data for an option contract such as exercise right, exercise style, strike, maturity, open interest, underlying, etc. as well as risk measures of an option contract such as delta, omega, implied volatility, etc.  Option chains are provided by the /by-class/list endpoint. The list of option contracts for an option class can be filtered by exercise right, exercise style, strike, maturity, open interest, delta, omega, implied volatility, etc.  The option screener allows you to search for option classes by using text search, root symbol, or ISIN plus additional criteria such as market, underlying, currency, and category. Similar to other screener endpoints in e.g. the [Stocks API](https://developer.factset.com/api-catalog/stocks-api-digital-portals), the /value-ranges/get endpoint provides the possible values and value ranges plus the number of option contracts for an option class related to the option contracts per criteria such as exercise right, exercise style, strike, maturity, open interest, delta, omega, implied volatility, etc.  The Options API for Digital Portals seamlessly integrates with the [Real-Time Quotes API](https://developer.factset.com/api-catalog/real-time-quotes-api) that provides real-time, delayed, and end-of-day pricing data and basic security identifier cross-reference. For direct access to price histories for charting, please refer to the [Real-Time Time Series API](https://developer.factset.com/api-catalog/real-time-time-series-api). 
 *
 * The version of the OpenAPI document: 4.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PostOptionByClassValueRangesGetDataLifeCycleExpirationMonthItems from './PostOptionByClassValueRangesGetDataLifeCycleExpirationMonthItems';
import PostOptionByClassValueRangesGetDataLifeCycleExpirationYearItems from './PostOptionByClassValueRangesGetDataLifeCycleExpirationYearItems';

/**
 * The PostOptionByClassValueRangesGetDataItemsLifeCycleExpiration model module.
 * @module model/PostOptionByClassValueRangesGetDataItemsLifeCycleExpiration
 */
class PostOptionByClassValueRangesGetDataItemsLifeCycleExpiration {
    /**
     * Constructs a new <code>PostOptionByClassValueRangesGetDataItemsLifeCycleExpiration</code>.
     * Values related to the expiration month and year.
     * @alias module:model/PostOptionByClassValueRangesGetDataItemsLifeCycleExpiration
     */
    constructor() { 
        
        PostOptionByClassValueRangesGetDataItemsLifeCycleExpiration.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PostOptionByClassValueRangesGetDataItemsLifeCycleExpiration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PostOptionByClassValueRangesGetDataItemsLifeCycleExpiration} obj Optional instance to populate.
     * @return {module:model/PostOptionByClassValueRangesGetDataItemsLifeCycleExpiration} The populated <code>PostOptionByClassValueRangesGetDataItemsLifeCycleExpiration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PostOptionByClassValueRangesGetDataItemsLifeCycleExpiration();

            if (data.hasOwnProperty('month')) {
                obj['month'] = ApiClient.convertToType(data['month'], [PostOptionByClassValueRangesGetDataLifeCycleExpirationMonthItems]);
            }
            if (data.hasOwnProperty('year')) {
                obj['year'] = ApiClient.convertToType(data['year'], [PostOptionByClassValueRangesGetDataLifeCycleExpirationYearItems]);
            }
        }
        return obj;
    }


}

/**
 * Expiration month.
 * @member {Array.<module:model/PostOptionByClassValueRangesGetDataLifeCycleExpirationMonthItems>} month
 */
PostOptionByClassValueRangesGetDataItemsLifeCycleExpiration.prototype['month'] = undefined;

/**
 * Expiration year.
 * @member {Array.<module:model/PostOptionByClassValueRangesGetDataLifeCycleExpirationYearItems>} year
 */
PostOptionByClassValueRangesGetDataItemsLifeCycleExpiration.prototype['year'] = undefined;






export default PostOptionByClassValueRangesGetDataItemsLifeCycleExpiration;

