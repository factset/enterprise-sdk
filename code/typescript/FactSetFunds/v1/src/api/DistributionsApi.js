/**
 * FactSet Funds API
 * FactSet Mutual Funds data offers over 50 fund- and share class-specific data points for mutual funds listed in the United States. <p>FactSet Mutual Funds Reference provides fund-specific reference information as well as FactSet's proprietary classification system. It includes but is not limited to the following coverage    * Fund descriptions    * A seven-tier classification system   * Leverage information   * Fees and expenses    * Portfolio managers       FactSet Mutual Funds Time Series provides quantitative data items on a historical basis. It includes but is not limited to the following coverage    * Net asset value   * Fund flows    * Assets under management   * Total return  <p>This API is rate-limited to 10 requests per second and 10 concurrent requests per user.</p> 
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DistCurrentRequest from '../model/DistCurrentRequest';
import DistCurrentResponse from '../model/DistCurrentResponse';
import DistHistoricalRequest from '../model/DistHistoricalRequest';
import DistHistoricalResponse from '../model/DistHistoricalResponse';
import ErrorResponse from '../model/ErrorResponse';

/**
* Distributions service.
* @module api/DistributionsApi
*/
export default class DistributionsApi {

    /**
    * Constructs a new DistributionsApi. 
    * @alias module:api/DistributionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Get Most Recent Fund Distributions
     * Retrieves the most recently available distributions data for the funds specified. 
     * @param {Array.<String>} ids The requested fund identifier. FactSet Identifiers, tickers, CUSIP, SEDOL, and ISIN are accepted inputs. <p>***ids limit** =  1000 per request*</p> *<p>Make note, GET Method URL request lines are also limited to a total length of 8192 bytes (8KB). In cases where the service allows for thousands of ids, which may lead to exceeding this request line limit of 8KB, its advised for any requests with large request lines to be requested through the respective \"POST\" method.</p>* 
     * @param {Object} opts Optional parameters
     * @param {String} opts.currency Controls the Currency conversion of the Fund. By default, the currency will use the funds local currency. For a list of currency ISO codes, visit Online Assistant Page [OA1470](https://my.apps.factset.com/oa/pages/1470).  (default to 'LOCAL')
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/DistCurrentResponse} and HTTP response
     */
    getFundsDistCurrentWithHttpInfo(ids, opts) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'ids' is set
      if (ids === undefined || ids === null) {
        throw new Error("Missing the required parameter 'ids' when calling getFundsDistCurrent");
      }

      let pathParams = {
      };
      let queryParams = {
        'ids': this.apiClient.buildCollectionParam(ids, 'csv'),
        'currency': opts['currency']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = [];
      let accepts = ['application/json'];


      let returnType = DistCurrentResponse;

      return this.apiClient.callApi(
        '/factset-funds/v1/distributions/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Get Most Recent Fund Distributions
     * Retrieves the most recently available distributions data for the funds specified. 
     * @param {Array.<String>} ids The requested fund identifier. FactSet Identifiers, tickers, CUSIP, SEDOL, and ISIN are accepted inputs. <p>***ids limit** =  1000 per request*</p> *<p>Make note, GET Method URL request lines are also limited to a total length of 8192 bytes (8KB). In cases where the service allows for thousands of ids, which may lead to exceeding this request line limit of 8KB, its advised for any requests with large request lines to be requested through the respective \"POST\" method.</p>* 
     * @param {Object} opts Optional parameters
     * @param {String} opts.currency Controls the Currency conversion of the Fund. By default, the currency will use the funds local currency. For a list of currency ISO codes, visit Online Assistant Page [OA1470](https://my.apps.factset.com/oa/pages/1470).  (default to 'LOCAL')
     * @return { Promise.< module:model/DistCurrentResponse > } a Promise, with data of type {@link module:model/DistCurrentResponse }
     */
    getFundsDistCurrent(ids, opts) {
      return this.getFundsDistCurrentWithHttpInfo(ids, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Get Most Recent Fund Distributions
     * Retrieves the most recently available distributions data for the funds specified. 
     * @param {module:model/DistCurrentRequest} distCurrentRequest The current distribution request body, allowing the user to specify a list of ids.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/DistCurrentResponse} and HTTP response
     */
    getFundsDistCurrentForListWithHttpInfo(distCurrentRequest) {
      let postBody = distCurrentRequest;
      // verify the required parameter 'distCurrentRequest' is set
      if (distCurrentRequest === undefined || distCurrentRequest === null) {
        throw new Error("Missing the required parameter 'distCurrentRequest' when calling getFundsDistCurrentForList");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];


      let returnType = DistCurrentResponse;

      return this.apiClient.callApi(
        '/factset-funds/v1/distributions/current', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Get Most Recent Fund Distributions
     * Retrieves the most recently available distributions data for the funds specified. 
     * @param {module:model/DistCurrentRequest} distCurrentRequest The current distribution request body, allowing the user to specify a list of ids.
     * @return { Promise.< module:model/DistCurrentResponse > } a Promise, with data of type {@link module:model/DistCurrentResponse }
     */
    getFundsDistCurrentForList(distCurrentRequest) {
      return this.getFundsDistCurrentForListWithHttpInfo(distCurrentRequest)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Get Historical Fund Distributions
     * Retrieves historical distributions data for the funds and date range specified. 
     * @param {Array.<String>} ids The requested fund identifier. FactSet Identifiers, tickers, CUSIP, SEDOL, and ISIN are accepted inputs. <p>***ids limit** =  1000 per request*</p> *<p>Make note, GET Method URL request lines are also limited to a total length of 8192 bytes (8KB). In cases where the service allows for thousands of ids, which may lead to exceeding this request line limit of 8KB, its advised for any requests with large request lines to be requested through the respective \"POST\" method.</p>* 
     * @param {Object} opts Optional parameters
     * @param {String} opts.startDate The start date requested for a given date range in **YYYY-MM-DD** format. If left blank, the API will default to the day prior to today's previous close. The `startDate` cannot be equal to the `endDate` as no return can be computed. 
     * @param {String} opts.endDate The end date requested for a given date range in **YYYY-MM-DD** format. If left blank, the API will default to latest available completed period. 
     * @param {module:model/String} opts.frequency Controls the display frequency of the data returned.   * **D** = Daily   * **W** = Weekly, based on the last day of the week of the start date.   * **M** = Monthly, based on the last trading day of the month.   * **AM** = Monthly, based on the start date (e.g., if the start date is June 16, data is displayed for June 16, May 16, April 16 etc.).   * **CQ** = Quarterly based on the last trading day of the calendar quarter (March, June, September, or December).   * **FQ** = Fiscal Quarter of the company.   * **AY** = Actual Annual, based on the start date.   * **CY** = Calendar Annual, based on the last trading day of the calendar year.   * **FY** = Fiscal Annual, based on the last trading day of the company's fiscal year.     (default to 'M')
     * @param {String} opts.currency Controls the Currency conversion of the Fund. By default, the currency will use the funds local currency. For a list of currency ISO codes, visit Online Assistant Page [OA1470](https://my.apps.factset.com/oa/pages/1470).  (default to 'LOCAL')
     * @param {Boolean} opts.splitAdjust The price adjustment split or unsplit. (default to true)
     * @param {module:model/String} opts.distributionOrYield Controls the inclusion of distribution records, where - * DISTRIBUTION = Returns all records where distributions are not null. * YIELD = Returns all records where yields are not null.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/DistHistoricalResponse} and HTTP response
     */
    getFundsDistHistoricalWithHttpInfo(ids, opts) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'ids' is set
      if (ids === undefined || ids === null) {
        throw new Error("Missing the required parameter 'ids' when calling getFundsDistHistorical");
      }

      let pathParams = {
      };
      let queryParams = {
        'ids': this.apiClient.buildCollectionParam(ids, 'csv'),
        'startDate': opts['startDate'],
        'endDate': opts['endDate'],
        'frequency': opts['frequency'],
        'currency': opts['currency'],
        'splitAdjust': opts['splitAdjust'],
        'distributionOrYield': opts['distributionOrYield']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = [];
      let accepts = ['application/json'];


      let returnType = DistHistoricalResponse;

      return this.apiClient.callApi(
        '/factset-funds/v1/distributions/historical', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Get Historical Fund Distributions
     * Retrieves historical distributions data for the funds and date range specified. 
     * @param {Array.<String>} ids The requested fund identifier. FactSet Identifiers, tickers, CUSIP, SEDOL, and ISIN are accepted inputs. <p>***ids limit** =  1000 per request*</p> *<p>Make note, GET Method URL request lines are also limited to a total length of 8192 bytes (8KB). In cases where the service allows for thousands of ids, which may lead to exceeding this request line limit of 8KB, its advised for any requests with large request lines to be requested through the respective \"POST\" method.</p>* 
     * @param {Object} opts Optional parameters
     * @param {String} opts.startDate The start date requested for a given date range in **YYYY-MM-DD** format. If left blank, the API will default to the day prior to today's previous close. The `startDate` cannot be equal to the `endDate` as no return can be computed. 
     * @param {String} opts.endDate The end date requested for a given date range in **YYYY-MM-DD** format. If left blank, the API will default to latest available completed period. 
     * @param {module:model/String} opts.frequency Controls the display frequency of the data returned.   * **D** = Daily   * **W** = Weekly, based on the last day of the week of the start date.   * **M** = Monthly, based on the last trading day of the month.   * **AM** = Monthly, based on the start date (e.g., if the start date is June 16, data is displayed for June 16, May 16, April 16 etc.).   * **CQ** = Quarterly based on the last trading day of the calendar quarter (March, June, September, or December).   * **FQ** = Fiscal Quarter of the company.   * **AY** = Actual Annual, based on the start date.   * **CY** = Calendar Annual, based on the last trading day of the calendar year.   * **FY** = Fiscal Annual, based on the last trading day of the company's fiscal year.     (default to 'M')
     * @param {String} opts.currency Controls the Currency conversion of the Fund. By default, the currency will use the funds local currency. For a list of currency ISO codes, visit Online Assistant Page [OA1470](https://my.apps.factset.com/oa/pages/1470).  (default to 'LOCAL')
     * @param {Boolean} opts.splitAdjust The price adjustment split or unsplit. (default to true)
     * @param {module:model/String} opts.distributionOrYield Controls the inclusion of distribution records, where - * DISTRIBUTION = Returns all records where distributions are not null. * YIELD = Returns all records where yields are not null.
     * @return { Promise.< module:model/DistHistoricalResponse > } a Promise, with data of type {@link module:model/DistHistoricalResponse }
     */
    getFundsDistHistorical(ids, opts) {
      return this.getFundsDistHistoricalWithHttpInfo(ids, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Get Historical Fund Distributions
     * Retrieves historical distributions data for the funds and date range specified. 
     * @param {module:model/DistHistoricalRequest} distHistoricalRequest The historical distribution request body, allowing the user to specify a list of ids and date range.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/DistHistoricalResponse} and HTTP response
     */
    getFundsDistHistoricalForListWithHttpInfo(distHistoricalRequest) {
      let postBody = distHistoricalRequest;
      // verify the required parameter 'distHistoricalRequest' is set
      if (distHistoricalRequest === undefined || distHistoricalRequest === null) {
        throw new Error("Missing the required parameter 'distHistoricalRequest' when calling getFundsDistHistoricalForList");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];


      let returnType = DistHistoricalResponse;

      return this.apiClient.callApi(
        '/factset-funds/v1/distributions/historical', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Get Historical Fund Distributions
     * Retrieves historical distributions data for the funds and date range specified. 
     * @param {module:model/DistHistoricalRequest} distHistoricalRequest The historical distribution request body, allowing the user to specify a list of ids and date range.
     * @return { Promise.< module:model/DistHistoricalResponse > } a Promise, with data of type {@link module:model/DistHistoricalResponse }
     */
    getFundsDistHistoricalForList(distHistoricalRequest) {
      return this.getFundsDistHistoricalForListWithHttpInfo(distHistoricalRequest)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}





