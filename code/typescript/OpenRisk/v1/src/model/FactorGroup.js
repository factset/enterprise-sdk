/**
 * Open:Risk API
 * Service to calculate parametric linear risk statistics and generate risk model asset identifier mappings.
 *
 * The version of the OpenAPI document: 1.26.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FactorGroupNodes from './FactorGroupNodes';

/**
 * The FactorGroup model module.
 * @module model/FactorGroup
 */
class FactorGroup {
    /**
     * Constructs a new <code>FactorGroup</code>.
     * Factor grouping definition to use for calculations and results. This field impacts the calculation only when any &#39;FactorGroup&#39; level statistics are requested, e.g. &#39;FactorGroup&#39;, &#39;FactorGroupSecurity&#39;.
     * @alias module:model/FactorGroup
     * @param nodes {Array.<module:model/FactorGroupNodes>} Recursively defined elements; base case array (i.e., lowest factor group) contains 'RiskModelFactor' objects only and no 'FactorGroup' objects
     */
    constructor(nodes) { 
        
        FactorGroup.initialize(this, nodes);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, nodes) { 
        obj['nodes'] = nodes;
    }

    /**
     * Constructs a <code>FactorGroup</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FactorGroup} obj Optional instance to populate.
     * @return {module:model/FactorGroup} The populated <code>FactorGroup</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FactorGroup();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('nodes')) {
                obj['nodes'] = ApiClient.convertToType(data['nodes'], [FactorGroupNodes]);
            }
        }
        return obj;
    }


}

/**
 * Name of this factor group
 * @member {String} name
 */
FactorGroup.prototype['name'] = undefined;

/**
 * Recursively defined elements; base case array (i.e., lowest factor group) contains 'RiskModelFactor' objects only and no 'FactorGroup' objects
 * @member {Array.<module:model/FactorGroupNodes>} nodes
 */
FactorGroup.prototype['nodes'] = undefined;






export default FactorGroup;

