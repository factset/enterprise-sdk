/**
 * Open:Risk API
 * Service to calculate parametric linear risk statistics and generate risk model asset identifier mappings.
 *
 * The version of the OpenAPI document: 1.26.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RiskModelFactorDetails model module.
 * @module model/RiskModelFactorDetails
 */
class RiskModelFactorDetails {
    /**
     * Constructs a new <code>RiskModelFactorDetails</code>.
     * Details about a factor in a risk model
     * @alias module:model/RiskModelFactorDetails
     * @param definedAs {module:model/RiskModelFactorDetails.DefinedAsEnum} Defintion of factor returns. `PercentChg` - Factor returns defined as percent change, which should be geometrically linked to calculate cumulative factor returns. `1stDiff` - Factor returns defined as level change. Cumulative returns should be defined as the sum of returns.
     * @param id {String} Factor id
     * @param name {String} Factor name
     */
    constructor(definedAs, id, name) { 
        
        RiskModelFactorDetails.initialize(this, definedAs, id, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, definedAs, id, name) { 
        obj['definedAs'] = definedAs;
        obj['id'] = id;
        obj['name'] = name;
    }

    /**
     * Constructs a <code>RiskModelFactorDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RiskModelFactorDetails} obj Optional instance to populate.
     * @return {module:model/RiskModelFactorDetails} The populated <code>RiskModelFactorDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RiskModelFactorDetails();

            if (data.hasOwnProperty('definedAs')) {
                obj['definedAs'] = ApiClient.convertToType(data['definedAs'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Defintion of factor returns. `PercentChg` - Factor returns defined as percent change, which should be geometrically linked to calculate cumulative factor returns. `1stDiff` - Factor returns defined as level change. Cumulative returns should be defined as the sum of returns.
 * @member {module:model/RiskModelFactorDetails.DefinedAsEnum} definedAs
 */
RiskModelFactorDetails.prototype['definedAs'] = undefined;

/**
 * Factor id
 * @member {String} id
 */
RiskModelFactorDetails.prototype['id'] = undefined;

/**
 * Factor name
 * @member {String} name
 */
RiskModelFactorDetails.prototype['name'] = undefined;





/**
 * Allowed values for the <code>definedAs</code> property.
 * @enum {String}
 * @readonly
 */
RiskModelFactorDetails['DefinedAsEnum'] = {

    /**
     * value: "PercentChg"
     * @const
     */
    "PercentChg": "PercentChg",

    /**
     * value: "1stDiff"
     * @const
     */
    "1stDiff": "1stDiff"
};



export default RiskModelFactorDetails;

