/**
 * Open:Risk API
 * Service to calculate parametric linear risk statistics and generate risk model asset identifier mappings.
 *
 * The version of the OpenAPI document: 1.26.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GroupsLabels model module.
 * @module model/GroupsLabels
 */
class GroupsLabels {
    /**
     * Constructs a new <code>GroupsLabels</code>.
     * Tree of input group name and calculated data results index for relevant group calculation-level
     * @alias module:model/GroupsLabels
     */
    constructor() { 
        
        GroupsLabels.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GroupsLabels</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GroupsLabels} obj Optional instance to populate.
     * @return {module:model/GroupsLabels} The populated <code>GroupsLabels</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GroupsLabels();

            if (data.hasOwnProperty('index')) {
                obj['index'] = ApiClient.convertToType(data['index'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('groups')) {
                obj['groups'] = ApiClient.convertToType(data['groups'], [GroupsLabels]);
            }
        }
        return obj;
    }


}

/**
 * 0-based index into the results array dimension for the corresponding calculation-levels
 * @member {Number} index
 */
GroupsLabels.prototype['index'] = undefined;

/**
 * Name that was provided for this group
 * @member {String} name
 */
GroupsLabels.prototype['name'] = undefined;

/**
 * Recursively defined elements; base case array (i.e., lowest group) contains objects with 'name' and 'index' only and not 'groups'
 * @member {Array.<module:model/GroupsLabels>} groups
 */
GroupsLabels.prototype['groups'] = undefined;






export default GroupsLabels;

