/**
 * Open:Risk API
 * Service to calculate parametric linear risk statistics and generate risk model asset identifier mappings.
 *
 * The version of the OpenAPI document: 1.26.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AdditionalCalculationInputsMarketExcess from './AdditionalCalculationInputsMarketExcess';

/**
 * The AdditionalCalculationInputs model module.
 * @module model/AdditionalCalculationInputs
 */
class AdditionalCalculationInputs {
    /**
     * Constructs a new <code>AdditionalCalculationInputs</code>.
     * Additional user-defined calculation input values. For example, some may be required for some Risk-Based Performance Attribution (RBPA) stats, such as &#39;ResidualFactorReturnsCSR&#39; and &#39;DeannualizedActiveFactorRisk&#39;.
     * @alias module:model/AdditionalCalculationInputs
     */
    constructor() { 
        
        AdditionalCalculationInputs.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AdditionalCalculationInputs</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AdditionalCalculationInputs} obj Optional instance to populate.
     * @return {module:model/AdditionalCalculationInputs} The populated <code>AdditionalCalculationInputs</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AdditionalCalculationInputs();

            if (data.hasOwnProperty('marketExcess')) {
                obj['marketExcess'] = AdditionalCalculationInputsMarketExcess.constructFromObject(data['marketExcess']);
            }
            if (data.hasOwnProperty('calculationPeriodsPerYear')) {
                obj['calculationPeriodsPerYear'] = ApiClient.convertToType(data['calculationPeriodsPerYear'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/AdditionalCalculationInputsMarketExcess} marketExcess
 */
AdditionalCalculationInputs.prototype['marketExcess'] = undefined;

/**
 * Deannualization factor for certain RBPA risk statistics which should match that of desired calculation frequency. Examples: If the risk model is monthly or monthly factor returns are being used, this should be 12. If the risk model is daily, select desired integer such as 365 or 252.
 * @member {Number} calculationPeriodsPerYear
 */
AdditionalCalculationInputs.prototype['calculationPeriodsPerYear'] = undefined;






export default AdditionalCalculationInputs;

