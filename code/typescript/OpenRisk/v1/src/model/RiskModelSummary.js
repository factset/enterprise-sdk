/**
 * Open:Risk API
 * Service to calculate parametric linear risk statistics and generate risk model asset identifier mappings.
 *
 * The version of the OpenAPI document: 1.26.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RiskModelSummary model module.
 * @module model/RiskModelSummary
 */
class RiskModelSummary {
    /**
     * Constructs a new <code>RiskModelSummary</code>.
     * Summary element in the list of available risk models
     * @alias module:model/RiskModelSummary
     * @param available {Boolean} Indicates the model is available for use, if true
     * @param category {String} Model category
     * @param code {String} Model code
     * @param name {String} Model name
     * @param vendor {String} Model vendor
     */
    constructor(available, category, code, name, vendor) { 
        
        RiskModelSummary.initialize(this, available, category, code, name, vendor);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, available, category, code, name, vendor) { 
        obj['available'] = available;
        obj['category'] = category;
        obj['code'] = code;
        obj['name'] = name;
        obj['vendor'] = vendor;
    }

    /**
     * Constructs a <code>RiskModelSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RiskModelSummary} obj Optional instance to populate.
     * @return {module:model/RiskModelSummary} The populated <code>RiskModelSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RiskModelSummary();

            if (data.hasOwnProperty('available')) {
                obj['available'] = ApiClient.convertToType(data['available'], 'Boolean');
            }
            if (data.hasOwnProperty('category')) {
                obj['category'] = ApiClient.convertToType(data['category'], 'String');
            }
            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('vendor')) {
                obj['vendor'] = ApiClient.convertToType(data['vendor'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Indicates the model is available for use, if true
 * @member {Boolean} available
 */
RiskModelSummary.prototype['available'] = undefined;

/**
 * Model category
 * @member {String} category
 */
RiskModelSummary.prototype['category'] = undefined;

/**
 * Model code
 * @member {String} code
 */
RiskModelSummary.prototype['code'] = undefined;

/**
 * Model name
 * @member {String} name
 */
RiskModelSummary.prototype['name'] = undefined;

/**
 * Model vendor
 * @member {String} vendor
 */
RiskModelSummary.prototype['vendor'] = undefined;






export default RiskModelSummary;

