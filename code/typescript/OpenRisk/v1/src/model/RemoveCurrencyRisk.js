/**
 * Open:Risk API
 * Service to calculate parametric linear risk statistics and generate risk model asset identifier mappings.
 *
 * The version of the OpenAPI document: 1.26.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RemoveCurrencyRisk model module.
 * @module model/RemoveCurrencyRisk
 */
class RemoveCurrencyRisk {
    /**
     * Constructs a new <code>RemoveCurrencyRisk</code>.
     * Controls removal (or not) of the contribution of currency to risk. **Note:** If this input is not provided in the request, then currency risk will be removed automatically based upon asset type when valid &#39;assetTypes&#39; are specified in the request.
     * @alias module:model/RemoveCurrencyRisk
     */
    constructor() { 
        
        RemoveCurrencyRisk.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RemoveCurrencyRisk</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RemoveCurrencyRisk} obj Optional instance to populate.
     * @return {module:model/RemoveCurrencyRisk} The populated <code>RemoveCurrencyRisk</code> instance.
     */
    static constructFromObject(data, obj) {
        // openApiType:boolean format:
        if (typeof data === 'boolean') return ApiClient.setValue(obj || new RemoveCurrencyRisk(), data);
        // openApiType:object format:
    }


}






export default RemoveCurrencyRisk;

