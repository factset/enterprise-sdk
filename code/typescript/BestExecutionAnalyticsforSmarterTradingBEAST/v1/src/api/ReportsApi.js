/**
 * Best Execution Analytics for Smarter Trading (BEAST) API
 * Enables clients to programmatically access the underlying data which powers the BEAST Liquidity Analytics (LA) and Transaction Cost Analysis (TCA) applications.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import ReportResponseRoot from '../model/ReportResponseRoot';

/**
* Reports service.
* @module api/ReportsApi
*/
export default class ReportsApi {

    /**
    * Constructs a new ReportsApi. 
    * @alias module:api/ReportsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Get Parent Aggregate Analysis
     * Get Parent Aggregate Analysis
     * @param {String} startDate Search start date in the format YYYY-MM-DD
     * @param {String} endDate Search end date in the format YYYY-MM-DD
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ReportResponseRoot} and HTTP response
     */
    getParentAggregateAnalysisWithHttpInfo(startDate, endDate) {
      let postBody = null;
      // verify the required parameter 'startDate' is set
      if (startDate === undefined || startDate === null) {
        throw new Error("Missing the required parameter 'startDate' when calling getParentAggregateAnalysis");
      }
      // verify the required parameter 'endDate' is set
      if (endDate === undefined || endDate === null) {
        throw new Error("Missing the required parameter 'endDate' when calling getParentAggregateAnalysis");
      }

      let pathParams = {
      };
      let queryParams = {
        'startDate': startDate,
        'endDate': endDate
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = [];
      let accepts = ['application/json'];


      let returnType = ReportResponseRoot;

      return this.apiClient.callApi(
        '/tca/report/parent-aggregate-analysis', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Get Parent Aggregate Analysis
     * Get Parent Aggregate Analysis
     * @param {String} startDate Search start date in the format YYYY-MM-DD
     * @param {String} endDate Search end date in the format YYYY-MM-DD
     * @return { Promise.< module:model/ReportResponseRoot > } a Promise, with data of type {@link module:model/ReportResponseRoot }
     */
    getParentAggregateAnalysis(startDate, endDate) {
      return this.getParentAggregateAnalysisWithHttpInfo(startDate, endDate)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}





