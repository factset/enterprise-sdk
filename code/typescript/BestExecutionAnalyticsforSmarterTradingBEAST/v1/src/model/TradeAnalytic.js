/**
 * Best Execution Analytics for Smarter Trading (BEAST) API
 * Enables clients to programmatically access the underlying data which powers the BEAST Liquidity Analytics (LA) and Transaction Cost Analysis (TCA) applications.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TradeAnalytic model module.
 * @module model/TradeAnalytic
 */
class TradeAnalytic {
    /**
     * Constructs a new <code>TradeAnalytic</code>.
     * Trade Analytic object
     * @alias module:model/TradeAnalytic
     */
    constructor() { 
        
        TradeAnalytic.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TradeAnalytic</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TradeAnalytic} obj Optional instance to populate.
     * @return {module:model/TradeAnalytic} The populated <code>TradeAnalytic</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TradeAnalytic();

            if (data.hasOwnProperty('timeZoneName')) {
                obj['timeZoneName'] = ApiClient.convertToType(data['timeZoneName'], 'String');
            }
            if (data.hasOwnProperty('volume')) {
                obj['volume'] = ApiClient.convertToType(data['volume'], 'Number');
            }
            if (data.hasOwnProperty('binTime')) {
                obj['binTime'] = ApiClient.convertToType(data['binTime'], 'String');
            }
            if (data.hasOwnProperty('volatility')) {
                obj['volatility'] = ApiClient.convertToType(data['volatility'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Timezone
 * @member {String} timeZoneName
 */
TradeAnalytic.prototype['timeZoneName'] = undefined;

/**
 * Volume
 * @member {Number} volume
 */
TradeAnalytic.prototype['volume'] = undefined;

/**
 * Bin Time
 * @member {String} binTime
 */
TradeAnalytic.prototype['binTime'] = undefined;

/**
 * Volatility
 * @member {Number} volatility
 */
TradeAnalytic.prototype['volatility'] = undefined;






export default TradeAnalytic;

