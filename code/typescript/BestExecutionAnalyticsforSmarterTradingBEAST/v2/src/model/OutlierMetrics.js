/**
 * Best Execution Analytics for Smarter Trading (BEAST) API
 * Enables clients to programmatically access the underlying data which powers the BEAST Liquidity Analytics (LA) and Transaction Cost Analysis (TCA) applications.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OutlierMetrics model module.
 * @module model/OutlierMetrics
 */
class OutlierMetrics {
    /**
     * Constructs a new <code>OutlierMetrics</code>.
     * The Outlier Metrics object
     * @alias module:model/OutlierMetrics
     */
    constructor() { 
        
        OutlierMetrics.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OutlierMetrics</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OutlierMetrics} obj Optional instance to populate.
     * @return {module:model/OutlierMetrics} The populated <code>OutlierMetrics</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OutlierMetrics();

            if (data.hasOwnProperty('max')) {
                obj['max'] = ApiClient.convertToType(data['max'], 'Number');
            }
            if (data.hasOwnProperty('min')) {
                obj['min'] = ApiClient.convertToType(data['min'], 'Number');
            }
            if (data.hasOwnProperty('stdDev')) {
                obj['stdDev'] = ApiClient.convertToType(data['stdDev'], 'Number');
            }
            if (data.hasOwnProperty('avg')) {
                obj['avg'] = ApiClient.convertToType(data['avg'], 'Number');
            }
            if (data.hasOwnProperty('median')) {
                obj['median'] = ApiClient.convertToType(data['median'], 'Number');
            }
            if (data.hasOwnProperty('binWidth')) {
                obj['binWidth'] = ApiClient.convertToType(data['binWidth'], 'Number');
            }
            if (data.hasOwnProperty('skew')) {
                obj['skew'] = ApiClient.convertToType(data['skew'], 'Number');
            }
            if (data.hasOwnProperty('laplaceScale')) {
                obj['laplaceScale'] = ApiClient.convertToType(data['laplaceScale'], 'Number');
            }
            if (data.hasOwnProperty('minMetric')) {
                obj['minMetric'] = ApiClient.convertToType(data['minMetric'], 'Number');
            }
            if (data.hasOwnProperty('maxMetric')) {
                obj['maxMetric'] = ApiClient.convertToType(data['maxMetric'], 'Number');
            }
            if (data.hasOwnProperty('binMax')) {
                obj['binMax'] = ApiClient.convertToType(data['binMax'], 'Number');
            }
            if (data.hasOwnProperty('binMin')) {
                obj['binMin'] = ApiClient.convertToType(data['binMin'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Max Value
 * @member {Number} max
 */
OutlierMetrics.prototype['max'] = undefined;

/**
 * Min Value
 * @member {Number} min
 */
OutlierMetrics.prototype['min'] = undefined;

/**
 * Standard Deviation
 * @member {Number} stdDev
 */
OutlierMetrics.prototype['stdDev'] = undefined;

/**
 * Average
 * @member {Number} avg
 */
OutlierMetrics.prototype['avg'] = undefined;

/**
 * Median
 * @member {Number} median
 */
OutlierMetrics.prototype['median'] = undefined;

/**
 * Bin Width
 * @member {Number} binWidth
 */
OutlierMetrics.prototype['binWidth'] = undefined;

/**
 * Skew
 * @member {Number} skew
 */
OutlierMetrics.prototype['skew'] = undefined;

/**
 * Laplace Scale
 * @member {Number} laplaceScale
 */
OutlierMetrics.prototype['laplaceScale'] = undefined;

/**
 * Min Metric
 * @member {Number} minMetric
 */
OutlierMetrics.prototype['minMetric'] = undefined;

/**
 * Max Metric
 * @member {Number} maxMetric
 */
OutlierMetrics.prototype['maxMetric'] = undefined;

/**
 * Bin Max
 * @member {Number} binMax
 */
OutlierMetrics.prototype['binMax'] = undefined;

/**
 * Bin Min
 * @member {Number} binMin
 */
OutlierMetrics.prototype['binMin'] = undefined;






export default OutlierMetrics;

