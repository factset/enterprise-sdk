/**
 * ID Lookup API
 * The ID Lookup API is a fuzzy search service that allows users to resolve symbols but are unable to find them elsewhere. The ID Lookup API allows users to search for entities in a wide variety of ways including, but not limited to, tickers, CUSIPs, URLs, a companyâ€™s brands, names and descriptions. The API does not require a complete query and will return different lists of results with each additional character, which enables users to iterate and adjust queries to return the desired results. Each search query returns a list of suggestions that can include every entity type offered by the API based on a matching and ranking algorithm.   The API response returns multiple different symbols that map to both internal FactSet identifiers like security or entity IDs as well as external identifiers like exchange tickers, Morningstar symbols and ISINs. This gives users flexibility in mapping identifiers across the FactSet universe.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import HelperEndpoint from '../model/HelperEndpoint';
import LookupRequest from '../model/LookupRequest';
import LookupResponse from '../model/LookupResponse';

/**
* FactSetIDLookup service.
* @module api/FactSetIDLookupApi
*/
export default class FactSetIDLookupApi {

    /**
    * Constructs a new FactSetIDLookupApi. 
    * @alias module:api/FactSetIDLookupApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Helper endpoint offering a list of supported fields and values to filter a requested dataset.
     * By querying this helper endpoint, users can retrieve a comprehensive list of supported fields, each associated with its permissible values. This functionality enhances the usability of the API by empowering users to construct precise queries tailored to their requirements when accessing the requested dataset. 
     * @param {module:model/String} dataset Type of dataset.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/HelperEndpoint} and HTTP response
     */
    helperWithHttpInfo(dataset) {
      let postBody = null;
      // verify the required parameter 'dataset' is set
      if (dataset === undefined || dataset === null) {
        throw new Error("Missing the required parameter 'dataset' when calling helper");
      }

      let pathParams = {
      };
      let queryParams = {
        'dataset': dataset
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = [];
      let accepts = ['application/json'];


      let returnType = HelperEndpoint;

      return this.apiClient.callApi(
        '/metadata/fields/list-by-dataset', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Helper endpoint offering a list of supported fields and values to filter a requested dataset.
     * By querying this helper endpoint, users can retrieve a comprehensive list of supported fields, each associated with its permissible values. This functionality enhances the usability of the API by empowering users to construct precise queries tailored to their requirements when accessing the requested dataset. 
     * @param {module:model/String} dataset Type of dataset.
     * @return { Promise.< module:model/HelperEndpoint > } a Promise, with data of type {@link module:model/HelperEndpoint }
     */
    helper(dataset) {
      return this.helperWithHttpInfo(dataset)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Search functionality to return tickers, company names, and unique identifiers for FactSet data.
     * This functionality enables users to input search queries, such as company names or keywords, and receive results containing matching entities along with their associated tickers and unique identifiers.   Essentially, it provides a streamlined means of locating specific data points within the FactSet database, facilitating the efficient retrieval of essential information related to companies or financial instruments.  The dataset names provided in the table below can be used in the request body.  | Dataset Name                | Dataset Description                 | ID Type           | ID Example   | |-----------------------------|-------------------------------------|-------------------|--------------| | *`bankLoans`*               | Bank Loans                          | symbol            | LX056750     | | *`commodities`*             | Commodities                         | symbol            | DUBAIM-FDS   | | *`cepBonds`*                | Continuous Evaluated Pricing        | tickerExchange    | N3ZWW5.FI-CEP| | *`countries`*               | Countries                           | symbol            | CC_MA        | | *`deals`*                   | Deals                               | symbol            | 4161715      | | *`economicReports`*             | Economic Reports                    | symbol            | USKEY-ECON   | | *`economicSeries`*          | Economic Series                     | symbol            | EUZ.GDPR     | | *`equities`*                | Equities                            | tickerRegion      | AAPL-US      | | *`equitiesRealTime`*        | Equities RealTime                   | tickerExchange    | M-BKK        | | *`etfs`*                    | ETFs                                | tickerRegion      | ACWI-US      | | *`etfsRealTime`*            | ETFs RealTime                       | symbol            | JPNA | *`exchangeRatesRealTime`*   | Exchange Rates RealTime             | symbol            | AUDUSD-FX1   | | *`bonds`*                   | Fixed Income                        | symbol            | XS2027359756 | | *`forex`*                   | Foreign Exchange                    | symbol            | USDARS       | | *`futures`*                 | Futures (continuous)                | symbol            | AP00-SFE     | | *`indices`*                 | Indices                             | symbol            | 186745       | | *`indicesRealTime`*         | Indices RealTime                    | symbol            | BB3MUS.A-PSE | | *`industries`*              | Industries                          | symbol            | FI1225R1     | | *`markitLoans`*             | Markit Loans                        | symbol            | LX111044-USA | | *`mutualFunds`*             | Mutual Funds                        | tickerRegion      | AMECX-US     | | *`mutualFundsRealTime`*     | Mutual Funds RealTime               | symbol            | 015414       | | *`ownershipHolders`*        | Ownership Holders                   | symbol            | F5102330     | | *`people`*                  | People                              | entityId          | 065SLB-E     | | *`privateCompanies`*        | Private Companies                   | entityId          | 0CBD2D-E     | | *`pevcFirms`*               | Private Equity/Venture Capital Firms| entityId          | 000BKX-E     | | *`pevcFunds`*               | Private Equity/Venture Capital Funds| entityId          | 0WCD0X-E     | | *`regions`*                 | Region                              | symbol            | RG_AMER      | | *`yields`*                  | Yields                              | symbol            | TRYAU10Y-FDS | | *`options`*                 | options                             | tickerExchange           | A#P1924C100000-USA| 
     * @param {module:model/LookupRequest} lookupRequest Request body to lookup any FactSet identifiers.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/LookupResponse} and HTTP response
     */
    searchWithHttpInfo(lookupRequest) {
      let postBody = lookupRequest;
      // verify the required parameter 'lookupRequest' is set
      if (lookupRequest === undefined || lookupRequest === null) {
        throw new Error("Missing the required parameter 'lookupRequest' when calling search");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];


      let returnType = LookupResponse;

      return this.apiClient.callApi(
        '/lookup', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Search functionality to return tickers, company names, and unique identifiers for FactSet data.
     * This functionality enables users to input search queries, such as company names or keywords, and receive results containing matching entities along with their associated tickers and unique identifiers.   Essentially, it provides a streamlined means of locating specific data points within the FactSet database, facilitating the efficient retrieval of essential information related to companies or financial instruments.  The dataset names provided in the table below can be used in the request body.  | Dataset Name                | Dataset Description                 | ID Type           | ID Example   | |-----------------------------|-------------------------------------|-------------------|--------------| | *`bankLoans`*               | Bank Loans                          | symbol            | LX056750     | | *`commodities`*             | Commodities                         | symbol            | DUBAIM-FDS   | | *`cepBonds`*                | Continuous Evaluated Pricing        | tickerExchange    | N3ZWW5.FI-CEP| | *`countries`*               | Countries                           | symbol            | CC_MA        | | *`deals`*                   | Deals                               | symbol            | 4161715      | | *`economicReports`*             | Economic Reports                    | symbol            | USKEY-ECON   | | *`economicSeries`*          | Economic Series                     | symbol            | EUZ.GDPR     | | *`equities`*                | Equities                            | tickerRegion      | AAPL-US      | | *`equitiesRealTime`*        | Equities RealTime                   | tickerExchange    | M-BKK        | | *`etfs`*                    | ETFs                                | tickerRegion      | ACWI-US      | | *`etfsRealTime`*            | ETFs RealTime                       | symbol            | JPNA | *`exchangeRatesRealTime`*   | Exchange Rates RealTime             | symbol            | AUDUSD-FX1   | | *`bonds`*                   | Fixed Income                        | symbol            | XS2027359756 | | *`forex`*                   | Foreign Exchange                    | symbol            | USDARS       | | *`futures`*                 | Futures (continuous)                | symbol            | AP00-SFE     | | *`indices`*                 | Indices                             | symbol            | 186745       | | *`indicesRealTime`*         | Indices RealTime                    | symbol            | BB3MUS.A-PSE | | *`industries`*              | Industries                          | symbol            | FI1225R1     | | *`markitLoans`*             | Markit Loans                        | symbol            | LX111044-USA | | *`mutualFunds`*             | Mutual Funds                        | tickerRegion      | AMECX-US     | | *`mutualFundsRealTime`*     | Mutual Funds RealTime               | symbol            | 015414       | | *`ownershipHolders`*        | Ownership Holders                   | symbol            | F5102330     | | *`people`*                  | People                              | entityId          | 065SLB-E     | | *`privateCompanies`*        | Private Companies                   | entityId          | 0CBD2D-E     | | *`pevcFirms`*               | Private Equity/Venture Capital Firms| entityId          | 000BKX-E     | | *`pevcFunds`*               | Private Equity/Venture Capital Funds| entityId          | 0WCD0X-E     | | *`regions`*                 | Region                              | symbol            | RG_AMER      | | *`yields`*                  | Yields                              | symbol            | TRYAU10Y-FDS | | *`options`*                 | options                             | tickerExchange           | A#P1924C100000-USA| 
     * @param {module:model/LookupRequest} lookupRequest Request body to lookup any FactSet identifiers.
     * @return { Promise.< module:model/LookupResponse > } a Promise, with data of type {@link module:model/LookupResponse }
     */
    search(lookupRequest) {
      return this.searchWithHttpInfo(lookupRequest)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}





