/**
 * Issue Tracker API
 * This API is used to file issues
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AttachmentResponse from '../model/AttachmentResponse';
import ErrorResponse from '../model/ErrorResponse';
import FileExtension from '../model/FileExtension';

/**
* Attachment service.
* @module api/AttachmentApi
*/
export default class AttachmentApi {

    /**
    * Constructs a new AttachmentApi. 
    * @alias module:api/AttachmentApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * get the matched file attachment
     * It retreive matched file. However, File read won't work until it used in any issue tracker issue/comment.     Note: the Accept header gets ignored and the originally uploaded content-type is returned
     * @param {String} id identity value of file attachment
     * @param {String} name name of the file
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link File} and HTTP response
     */
    getFileAttachmentWithHttpInfo(id, name) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getFileAttachment");
      }
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling getFileAttachment");
      }

      let pathParams = {
        'id': id,
        'name': name
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = [];
      let accepts = ['image/bmp', 'image/png', 'image/gif', 'image/jpeg', 'application/pdf', 'text/csv', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'text/plain', 'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'text/x-r-source', 'application/x-dosexec', 'text/html', 'application/xml', 'application/sql', 'application/vnd.ms-officetheme', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.template', 'application/vnd.openxmlformats-officedocument.presentationml.template', 'application/vnd.ms-powerpoint', 'application/vnd.openxmlformats-officedocument.presentationml.presentation', 'application/zip', 'application/x-7z-compressed', 'application/octet-stream', 'text/tab-separated-values', 'application/x-iwork-keynote', 'application/vnd.ms-word.document.macroEnabled.12', 'application/vnd.ms-word.template.macroEnabled.12', 'application/vnd.ms-excel.sheet.macroEnabled.12', 'application/json'];


      let returnType = File;

      return this.apiClient.callApi(
        '/attachments/{id}/{name}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * get the matched file attachment
     * It retreive matched file. However, File read won't work until it used in any issue tracker issue/comment.     Note: the Accept header gets ignored and the originally uploaded content-type is returned
     * @param {String} id identity value of file attachment
     * @param {String} name name of the file
     * @return { Promise.< File > } a Promise, with data of type {@link File }
     */
    getFileAttachment(id, name) {
      return this.getFileAttachmentWithHttpInfo(id, name)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Allowed file types GET endpoint
     * This will provide information about file extensions allowed to attachments.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/FileExtension} and HTTP response
     */
    getFileExtensionsWithHttpInfo() {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = [];
      let accepts = ['application/json'];


      let returnType = FileExtension;

      return this.apiClient.callApi(
        '/attachments/file-extensions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Allowed file types GET endpoint
     * This will provide information about file extensions allowed to attachments.
     * @return { Promise.< module:model/FileExtension > } a Promise, with data of type {@link module:model/FileExtension }
     */
    getFileExtensions() {
      return this.getFileExtensionsWithHttpInfo()
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Post file attachment to Issue Tracker Issue or comment
     *   This endpoint upload file attachments into Issue Tracker and it allows only single file at a time. It will throws error when tries to upload multiple files in single call.     File size should not exceed 10Mb. More info provided in examples. It allows only few type of files for attachments. Please review \"attachments/file-extensions\" endpoint for list allowed file types.
     * @param {File} file input file for upload
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/AttachmentResponse} and HTTP response
     */
    postFileAttachmentWithHttpInfo(file) {
      let postBody = null;
      // verify the required parameter 'file' is set
      if (file === undefined || file === null) {
        throw new Error("Missing the required parameter 'file' when calling postFileAttachment");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'file': file
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = ['multipart/form-data'];
      let accepts = ['application/json', 'text/plain'];


      let returnType = AttachmentResponse;

      return this.apiClient.callApi(
        '/attachments', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Post file attachment to Issue Tracker Issue or comment
     *   This endpoint upload file attachments into Issue Tracker and it allows only single file at a time. It will throws error when tries to upload multiple files in single call.     File size should not exceed 10Mb. More info provided in examples. It allows only few type of files for attachments. Please review \"attachments/file-extensions\" endpoint for list allowed file types.
     * @param {File} file input file for upload
     * @return { Promise.< module:model/AttachmentResponse > } a Promise, with data of type {@link module:model/AttachmentResponse }
     */
    postFileAttachment(file) {
      return this.postFileAttachmentWithHttpInfo(file)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}





