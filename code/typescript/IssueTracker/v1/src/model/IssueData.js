/**
 * Issue Tracker API
 * This API is used to file issues
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Comment from './Comment';

/**
 * The IssueData model module.
 * @module model/IssueData
 */
class IssueData {
    /**
     * Constructs a new <code>IssueData</code>.
     * @alias module:model/IssueData
     */
    constructor() { 
        
        IssueData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IssueData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IssueData} obj Optional instance to populate.
     * @return {module:model/IssueData} The populated <code>IssueData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IssueData();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('subject')) {
                obj['subject'] = ApiClient.convertToType(data['subject'], 'String');
            }
            if (data.hasOwnProperty('comments')) {
                obj['comments'] = ApiClient.convertToType(data['comments'], [Comment]);
            }
            if (data.hasOwnProperty('isCritical')) {
                obj['isCritical'] = ApiClient.convertToType(data['isCritical'], 'Boolean');
            }
            if (data.hasOwnProperty('internalId')) {
                obj['internalId'] = ApiClient.convertToType(data['internalId'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * generated issue id for Issue Tracker
 * @member {String} id
 */
IssueData.prototype['id'] = undefined;

/**
 * subject of Issue Tracker issue
 * @member {String} subject
 */
IssueData.prototype['subject'] = undefined;

/**
 * array of comments added to issue
 * @member {Array.<module:model/Comment>} comments
 */
IssueData.prototype['comments'] = undefined;

/**
 * @member {Boolean} isCritical
 */
IssueData.prototype['isCritical'] = undefined;

/**
 * @member {Number} internalId
 */
IssueData.prototype['internalId'] = undefined;






export default IssueData;

