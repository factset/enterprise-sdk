/**
 * FactSet Entity Report Builder
 * License info
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import Response from '../model/Response';

/**
* EstimateTables service.
* @module api/EstimateTablesApi
*/
export default class EstimateTablesApi {

    /**
    * Constructs a new EstimateTablesApi. 
    * @alias module:api/EstimateTablesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Interim/Annual Estimate Table
     * Returns a timeseries grid of Interim and Annual data for a single line item
     * @param {String} id Company Ticker
     * @param {Object} opts Optional parameters
     * @param {String} opts.metric Requested metric. For more details, visit [Online Assitant Page #15034](https://oa.apps.factset.com/pages/15034).
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Response} and HTTP response
     */
    getEstimateTablesTableWithHttpInfo(id, opts) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getEstimateTablesTable");
      }

      let pathParams = {
      };
      let queryParams = {
        'id': id,
        'metric': opts['metric']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = [];
      let accepts = ['application/json'];


      let returnType = Response;

      return this.apiClient.callApi(
        '/table', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Interim/Annual Estimate Table
     * Returns a timeseries grid of Interim and Annual data for a single line item
     * @param {String} id Company Ticker
     * @param {Object} opts Optional parameters
     * @param {String} opts.metric Requested metric. For more details, visit [Online Assitant Page #15034](https://oa.apps.factset.com/pages/15034).
     * @return { Promise.< module:model/Response > } a Promise, with data of type {@link module:model/Response }
     */
    getEstimateTablesTable(id, opts) {
      return this.getEstimateTablesTableWithHttpInfo(id, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}





