/**
 * Asset Cash Flow Projections API
 * Allow clients to upload scenario files through APIs.
 *
 * The version of the OpenAPI document: 0.2.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ClientUploadResponseParameters model module.
 * @module model/ClientUploadResponseParameters
 */
class ClientUploadResponseParameters {
    /**
     * Constructs a new <code>ClientUploadResponseParameters</code>.
     * Client upload status response parameters
     * @alias module:model/ClientUploadResponseParameters
     */
    constructor() { 
        
        ClientUploadResponseParameters.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ClientUploadResponseParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClientUploadResponseParameters} obj Optional instance to populate.
     * @return {module:model/ClientUploadResponseParameters} The populated <code>ClientUploadResponseParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClientUploadResponseParameters();

            if (data.hasOwnProperty('expirationTime')) {
                obj['expirationTime'] = ApiClient.convertToType(data['expirationTime'], 'Date');
            }
            if (data.hasOwnProperty('fileName')) {
                obj['fileName'] = ApiClient.convertToType(data['fileName'], 'String');
            }
            if (data.hasOwnProperty('signedUrl')) {
                obj['signedUrl'] = ApiClient.convertToType(data['signedUrl'], 'String');
            }
            if (data.hasOwnProperty('uploadId')) {
                obj['uploadId'] = ApiClient.convertToType(data['uploadId'], 'String');
            }
        }
        return obj;
    }


}

/**
 * The signed URL remains valid for a duration of 4 hours and is usable until it becomes invalid or outdated.
 * @member {Date} expirationTime
 */
ClientUploadResponseParameters.prototype['expirationTime'] = undefined;

/**
 * Actuarial Scenario file name
 * @member {String} fileName
 */
ClientUploadResponseParameters.prototype['fileName'] = undefined;

/**
 * Signed url to upload the scenarios file
 * @member {String} signedUrl
 */
ClientUploadResponseParameters.prototype['signedUrl'] = undefined;

/**
 * Unique Identifier for the file
 * @member {String} uploadId
 */
ClientUploadResponseParameters.prototype['uploadId'] = undefined;






export default ClientUploadResponseParameters;

