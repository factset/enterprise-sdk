/**
 * Asset Cash Flow Projections API
 * Allow clients to upload scenario files through APIs.
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ClientScenariosUploadParameters model module.
 * @module model/ClientScenariosUploadParameters
 */
class ClientScenariosUploadParameters {
    /**
     * Constructs a new <code>ClientScenariosUploadParameters</code>.
     * Details required for uploading scenario files
     * @alias module:model/ClientScenariosUploadParameters
     * @param fileName {String} Scenario file name including file extension.
     * @param asOfDate {Date} Scenario As of Date ( Please select a Date not later than Previous Close Date)
     */
    constructor(fileName, asOfDate) { 
        
        ClientScenariosUploadParameters.initialize(this, fileName, asOfDate);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, fileName, asOfDate) { 
        obj['fileName'] = fileName;
        obj['asOfDate'] = asOfDate;
    }

    /**
     * Constructs a <code>ClientScenariosUploadParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClientScenariosUploadParameters} obj Optional instance to populate.
     * @return {module:model/ClientScenariosUploadParameters} The populated <code>ClientScenariosUploadParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClientScenariosUploadParameters();

            if (data.hasOwnProperty('fileName')) {
                obj['fileName'] = ApiClient.convertToType(data['fileName'], 'String');
            }
            if (data.hasOwnProperty('asOfDate')) {
                obj['asOfDate'] = ApiClient.convertToType(data['asOfDate'], 'Date');
            }
            if (data.hasOwnProperty('overwrite')) {
                obj['overwrite'] = ApiClient.convertToType(data['overwrite'], 'Boolean');
            }
            if (data.hasOwnProperty('replaceSpecialCharacters')) {
                obj['replaceSpecialCharacters'] = ApiClient.convertToType(data['replaceSpecialCharacters'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * Scenario file name including file extension.
 * @member {String} fileName
 */
ClientScenariosUploadParameters.prototype['fileName'] = undefined;

/**
 * Scenario As of Date ( Please select a Date not later than Previous Close Date)
 * @member {Date} asOfDate
 */
ClientScenariosUploadParameters.prototype['asOfDate'] = undefined;

/**
 * Flag to indicate if existing file needs to be overwritten. Please expect a 409 if the file already exists and the overwrite is not set to true.
 * @member {Boolean} overwrite
 * @default false
 */
ClientScenariosUploadParameters.prototype['overwrite'] = false;

/**
 * Flag to indicate if the special characters in the fileName can be replaced with underscore. Please expect a 400 if their exists some special characters in the filename and this parameter is not set to true. - `SpecialCharacters`: .^%~$!#{} ()'`+,:/
 * @member {Boolean} replaceSpecialCharacters
 * @default false
 */
ClientScenariosUploadParameters.prototype['replaceSpecialCharacters'] = false;






export default ClientScenariosUploadParameters;

