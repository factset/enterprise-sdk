/**
 * Trading API
 * Allow clients to trade orders.
 *
 * The version of the OpenAPI document: 0.5.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CancelChildOrder model module.
 * @module model/CancelChildOrder
 */
class CancelChildOrder {
    /**
     * Constructs a new <code>CancelChildOrder</code>.
     * Cancel Child Order
     * @alias module:model/CancelChildOrder
     * @param ticketId {String} Ticket Id for the child order to be cancelled
     */
    constructor(ticketId) { 
        
        CancelChildOrder.initialize(this, ticketId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, ticketId) { 
        obj['ticketId'] = ticketId;
    }

    /**
     * Constructs a <code>CancelChildOrder</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CancelChildOrder} obj Optional instance to populate.
     * @return {module:model/CancelChildOrder} The populated <code>CancelChildOrder</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CancelChildOrder();

            if (data.hasOwnProperty('ticketId')) {
                obj['ticketId'] = ApiClient.convertToType(data['ticketId'], 'String');
            }
            if (data.hasOwnProperty('reason')) {
                obj['reason'] = ApiClient.convertToType(data['reason'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Ticket Id for the child order to be cancelled
 * @member {String} ticketId
 */
CancelChildOrder.prototype['ticketId'] = undefined;

/**
 * Reason for cancelling the child order
 * @member {String} reason
 */
CancelChildOrder.prototype['reason'] = undefined;






export default CancelChildOrder;

