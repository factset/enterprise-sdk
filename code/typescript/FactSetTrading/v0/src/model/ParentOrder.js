/**
 * Trading API
 * Allow clients to trade orders.
 *
 * The version of the OpenAPI document: 0.5.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ParentId from './ParentId';

/**
 * The ParentOrder model module.
 * @module model/ParentOrder
 */
class ParentOrder {
    /**
     * Constructs a new <code>ParentOrder</code>.
     * Parent Order
     * @alias module:model/ParentOrder
     * @param parentId {module:model/ParentId} 
     */
    constructor(parentId) { 
        
        ParentOrder.initialize(this, parentId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, parentId) { 
        obj['parentId'] = parentId;
    }

    /**
     * Constructs a <code>ParentOrder</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ParentOrder} obj Optional instance to populate.
     * @return {module:model/ParentOrder} The populated <code>ParentOrder</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ParentOrder();

            if (data.hasOwnProperty('parentId')) {
                obj['parentId'] = ParentId.constructFromObject(data['parentId']);
            }
            if (data.hasOwnProperty('userGroup')) {
                obj['userGroup'] = ApiClient.convertToType(data['userGroup'], 'String');
            }
            if (data.hasOwnProperty('userDefinedFields')) {
                obj['userDefinedFields'] = ApiClient.convertToType(data['userDefinedFields'], {'String': 'String'});
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/ParentId} parentId
 */
ParentOrder.prototype['parentId'] = undefined;

/**
 * User groups
 * @member {String} userGroup
 */
ParentOrder.prototype['userGroup'] = undefined;

/**
 * User defined fields.
 * @member {Object.<String, String>} userDefinedFields
 */
ParentOrder.prototype['userDefinedFields'] = undefined;






export default ParentOrder;

