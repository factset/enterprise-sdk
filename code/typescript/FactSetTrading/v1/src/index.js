/**
 * Trading API
 * Allow clients to trade orders.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from './ApiClient';
import CancelChildOrder from './model/CancelChildOrder';
import CancelChildOrders from './model/CancelChildOrders';
import CancelChildOrdersRoot from './model/CancelChildOrdersRoot';
import CancelInboundOrder from './model/CancelInboundOrder';
import CancelInboundOrders from './model/CancelInboundOrders';
import CancelInboundOrdersRoot from './model/CancelInboundOrdersRoot';
import ChildOrder from './model/ChildOrder';
import ChildOrderInfo from './model/ChildOrderInfo';
import ChildOrderRejectInfo from './model/ChildOrderRejectInfo';
import ChildOrders from './model/ChildOrders';
import ChildOrdersResponse from './model/ChildOrdersResponse';
import ChildOrdersResponseRoot from './model/ChildOrdersResponseRoot';
import ChildOrdersRoot from './model/ChildOrdersRoot';
import ClientErrorResponse from './model/ClientErrorResponse';
import CreateChildOrderInfo from './model/CreateChildOrderInfo';
import CreateChildOrderRejectInfo from './model/CreateChildOrderRejectInfo';
import CreateChildOrdersResponse from './model/CreateChildOrdersResponse';
import CreateChildOrdersResponseRoot from './model/CreateChildOrdersResponseRoot';
import Error from './model/Error';
import ErrorSource from './model/ErrorSource';
import InboundOrder from './model/InboundOrder';
import InboundOrderMetadata from './model/InboundOrderMetadata';
import InboundOrders from './model/InboundOrders';
import InboundOrdersResponse from './model/InboundOrdersResponse';
import InboundOrdersResponseRoot from './model/InboundOrdersResponseRoot';
import InboundOrdersRoot from './model/InboundOrdersRoot';
import Instrument from './model/Instrument';
import ParentId from './model/ParentId';
import ParentOrder from './model/ParentOrder';
import ParentOrdersUpdate from './model/ParentOrdersUpdate';
import ParentOrdersUpdateResponse from './model/ParentOrdersUpdateResponse';
import ParentOrdersUpdateResponseRoot from './model/ParentOrdersUpdateResponseRoot';
import ParentOrdersUpdateRoot from './model/ParentOrdersUpdateRoot';
import ReplaceChildOrder from './model/ReplaceChildOrder';
import ReplaceChildOrders from './model/ReplaceChildOrders';
import ReplaceChildOrdersRoot from './model/ReplaceChildOrdersRoot';
import ReplaceInboundOrder from './model/ReplaceInboundOrder';
import ReplaceInboundOrders from './model/ReplaceInboundOrders';
import ReplaceInboundOrdersRoot from './model/ReplaceInboundOrdersRoot';
import ResponseParentId from './model/ResponseParentId';
import TimeInForce from './model/TimeInForce';

import ChildOrdersApi from './api/ChildOrdersApi';
import InboundOrdersApi from './api/InboundOrdersApi';
import ParentOrdersApi from './api/ParentOrdersApi';


/**
* FactSet Trading client library for JavaScript.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var factsettrading = require('index'); // See note below*.
* var xxxSvc = new factsettrading.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new factsettrading.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new factsettrading.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new factsettrading.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The CancelChildOrder model constructor.
     * @property {module:model/CancelChildOrder}
     */
    CancelChildOrder,

    /**
     * The CancelChildOrders model constructor.
     * @property {module:model/CancelChildOrders}
     */
    CancelChildOrders,

    /**
     * The CancelChildOrdersRoot model constructor.
     * @property {module:model/CancelChildOrdersRoot}
     */
    CancelChildOrdersRoot,

    /**
     * The CancelInboundOrder model constructor.
     * @property {module:model/CancelInboundOrder}
     */
    CancelInboundOrder,

    /**
     * The CancelInboundOrders model constructor.
     * @property {module:model/CancelInboundOrders}
     */
    CancelInboundOrders,

    /**
     * The CancelInboundOrdersRoot model constructor.
     * @property {module:model/CancelInboundOrdersRoot}
     */
    CancelInboundOrdersRoot,

    /**
     * The ChildOrder model constructor.
     * @property {module:model/ChildOrder}
     */
    ChildOrder,

    /**
     * The ChildOrderInfo model constructor.
     * @property {module:model/ChildOrderInfo}
     */
    ChildOrderInfo,

    /**
     * The ChildOrderRejectInfo model constructor.
     * @property {module:model/ChildOrderRejectInfo}
     */
    ChildOrderRejectInfo,

    /**
     * The ChildOrders model constructor.
     * @property {module:model/ChildOrders}
     */
    ChildOrders,

    /**
     * The ChildOrdersResponse model constructor.
     * @property {module:model/ChildOrdersResponse}
     */
    ChildOrdersResponse,

    /**
     * The ChildOrdersResponseRoot model constructor.
     * @property {module:model/ChildOrdersResponseRoot}
     */
    ChildOrdersResponseRoot,

    /**
     * The ChildOrdersRoot model constructor.
     * @property {module:model/ChildOrdersRoot}
     */
    ChildOrdersRoot,

    /**
     * The ClientErrorResponse model constructor.
     * @property {module:model/ClientErrorResponse}
     */
    ClientErrorResponse,

    /**
     * The CreateChildOrderInfo model constructor.
     * @property {module:model/CreateChildOrderInfo}
     */
    CreateChildOrderInfo,

    /**
     * The CreateChildOrderRejectInfo model constructor.
     * @property {module:model/CreateChildOrderRejectInfo}
     */
    CreateChildOrderRejectInfo,

    /**
     * The CreateChildOrdersResponse model constructor.
     * @property {module:model/CreateChildOrdersResponse}
     */
    CreateChildOrdersResponse,

    /**
     * The CreateChildOrdersResponseRoot model constructor.
     * @property {module:model/CreateChildOrdersResponseRoot}
     */
    CreateChildOrdersResponseRoot,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The ErrorSource model constructor.
     * @property {module:model/ErrorSource}
     */
    ErrorSource,

    /**
     * The InboundOrder model constructor.
     * @property {module:model/InboundOrder}
     */
    InboundOrder,

    /**
     * The InboundOrderMetadata model constructor.
     * @property {module:model/InboundOrderMetadata}
     */
    InboundOrderMetadata,

    /**
     * The InboundOrders model constructor.
     * @property {module:model/InboundOrders}
     */
    InboundOrders,

    /**
     * The InboundOrdersResponse model constructor.
     * @property {module:model/InboundOrdersResponse}
     */
    InboundOrdersResponse,

    /**
     * The InboundOrdersResponseRoot model constructor.
     * @property {module:model/InboundOrdersResponseRoot}
     */
    InboundOrdersResponseRoot,

    /**
     * The InboundOrdersRoot model constructor.
     * @property {module:model/InboundOrdersRoot}
     */
    InboundOrdersRoot,

    /**
     * The Instrument model constructor.
     * @property {module:model/Instrument}
     */
    Instrument,

    /**
     * The ParentId model constructor.
     * @property {module:model/ParentId}
     */
    ParentId,

    /**
     * The ParentOrder model constructor.
     * @property {module:model/ParentOrder}
     */
    ParentOrder,

    /**
     * The ParentOrdersUpdate model constructor.
     * @property {module:model/ParentOrdersUpdate}
     */
    ParentOrdersUpdate,

    /**
     * The ParentOrdersUpdateResponse model constructor.
     * @property {module:model/ParentOrdersUpdateResponse}
     */
    ParentOrdersUpdateResponse,

    /**
     * The ParentOrdersUpdateResponseRoot model constructor.
     * @property {module:model/ParentOrdersUpdateResponseRoot}
     */
    ParentOrdersUpdateResponseRoot,

    /**
     * The ParentOrdersUpdateRoot model constructor.
     * @property {module:model/ParentOrdersUpdateRoot}
     */
    ParentOrdersUpdateRoot,

    /**
     * The ReplaceChildOrder model constructor.
     * @property {module:model/ReplaceChildOrder}
     */
    ReplaceChildOrder,

    /**
     * The ReplaceChildOrders model constructor.
     * @property {module:model/ReplaceChildOrders}
     */
    ReplaceChildOrders,

    /**
     * The ReplaceChildOrdersRoot model constructor.
     * @property {module:model/ReplaceChildOrdersRoot}
     */
    ReplaceChildOrdersRoot,

    /**
     * The ReplaceInboundOrder model constructor.
     * @property {module:model/ReplaceInboundOrder}
     */
    ReplaceInboundOrder,

    /**
     * The ReplaceInboundOrders model constructor.
     * @property {module:model/ReplaceInboundOrders}
     */
    ReplaceInboundOrders,

    /**
     * The ReplaceInboundOrdersRoot model constructor.
     * @property {module:model/ReplaceInboundOrdersRoot}
     */
    ReplaceInboundOrdersRoot,

    /**
     * The ResponseParentId model constructor.
     * @property {module:model/ResponseParentId}
     */
    ResponseParentId,

    /**
     * The TimeInForce model constructor.
     * @property {module:model/TimeInForce}
     */
    TimeInForce,

    /**
    * The ChildOrdersApi service constructor.
    * @property {module:api/ChildOrdersApi}
    */
    ChildOrdersApi,

    /**
    * The InboundOrdersApi service constructor.
    * @property {module:api/InboundOrdersApi}
    */
    InboundOrdersApi,

    /**
    * The ParentOrdersApi service constructor.
    * @property {module:api/ParentOrdersApi}
    */
    ParentOrdersApi,

};
