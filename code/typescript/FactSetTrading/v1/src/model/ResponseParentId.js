/**
 * Trading API
 * Allow clients to trade orders.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ResponseParentId model module.
 * @module model/ResponseParentId
 */
class ResponseParentId {
    /**
     * Constructs a new <code>ResponseParentId</code>.
     * Unique identifier to identify the parent order.
     * @alias module:model/ResponseParentId
     */
    constructor() { 
        
        ResponseParentId.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ResponseParentId</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResponseParentId} obj Optional instance to populate.
     * @return {module:model/ResponseParentId} The populated <code>ResponseParentId</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResponseParentId();

            if (data.hasOwnProperty('symbol')) {
                obj['symbol'] = ApiClient.convertToType(data['symbol'], 'String');
            }
            if (data.hasOwnProperty('basketId')) {
                obj['basketId'] = ApiClient.convertToType(data['basketId'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Ticker symbol
 * @member {String} symbol
 */
ResponseParentId.prototype['symbol'] = undefined;

/**
 * Unique identifier assigned to basket order. Can be fetched from the WebSocket Order Update API.
 * @member {String} basketId
 */
ResponseParentId.prototype['basketId'] = undefined;






export default ResponseParentId;

