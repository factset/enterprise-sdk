/**
 * Cabot Models API
 * Cabot Models API
 *
 * The version of the OpenAPI document: 0.3.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ResultsModelAnalyticsStatistics model module.
 * @module model/ResultsModelAnalyticsStatistics
 */
class ResultsModelAnalyticsStatistics {
    /**
     * Constructs a new <code>ResultsModelAnalyticsStatistics</code>.
     * @alias module:model/ResultsModelAnalyticsStatistics
     */
    constructor() { 
        
        ResultsModelAnalyticsStatistics.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ResultsModelAnalyticsStatistics</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResultsModelAnalyticsStatistics} obj Optional instance to populate.
     * @return {module:model/ResultsModelAnalyticsStatistics} The populated <code>ResultsModelAnalyticsStatistics</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResultsModelAnalyticsStatistics();

            if (data.hasOwnProperty('drawdown')) {
                obj['drawdown'] = ApiClient.convertToType(data['drawdown'], 'Number');
            }
            if (data.hasOwnProperty('modiglianiReturn')) {
                obj['modiglianiReturn'] = ApiClient.convertToType(data['modiglianiReturn'], 'Number');
            }
            if (data.hasOwnProperty('standardDeviation')) {
                obj['standardDeviation'] = ApiClient.convertToType(data['standardDeviation'], 'Number');
            }
            if (data.hasOwnProperty('trackingError')) {
                obj['trackingError'] = ApiClient.convertToType(data['trackingError'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Drawdown quantifies the portfolioâ€™s maximum peak to trough decline experienced over the time period under consideration. It is expressed as the total percent drop between the peak portfolio value and the subsequent deepest trough.
 * @member {Number} drawdown
 */
ResultsModelAnalyticsStatistics.prototype['drawdown'] = undefined;

/**
 * Also known as M2, this is a measure of the risk adjusted returns of an investment portfolio. It measures the returns of the portfolio, adjusted for the risk of the portfolio relative to that of some benchmark. Derived from the Sharpe ratio, Modigliani return has the advantage of being represented in units of percent return, making the measure more intuitive to interpret.
 * @member {Number} modiglianiReturn
 */
ResultsModelAnalyticsStatistics.prototype['modiglianiReturn'] = undefined;

/**
 * Standard deviation expresses the historical volatility of portfolio monthly returns, over the specified time period.
 * @member {Number} standardDeviation
 */
ResultsModelAnalyticsStatistics.prototype['standardDeviation'] = undefined;

/**
 * Also referred to as active risk, this value provides a measure of the deviation between portfolio returns and the returns of the benchmark resulting from portfolio systematic risk and active share. In general, the higher the active share the greater will be the tracking error. Tracking error is calculated as the standard deviation of the difference between the portfolio and benchmark returns and is displayed as a percentage.
 * @member {Number} trackingError
 */
ResultsModelAnalyticsStatistics.prototype['trackingError'] = undefined;






export default ResultsModelAnalyticsStatistics;

