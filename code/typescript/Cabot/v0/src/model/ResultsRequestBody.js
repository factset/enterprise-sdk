/**
 * Cabot Models API
 * Cabot Models API
 *
 * The version of the OpenAPI document: 0.4.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Currency from './Currency';

/**
 * The ResultsRequestBody model module.
 * @module model/ResultsRequestBody
 */
class ResultsRequestBody {
    /**
     * Constructs a new <code>ResultsRequestBody</code>.
     * @alias module:model/ResultsRequestBody
     * @param accountPath {String} The account path of the portfolio you want to retrieve the data for.
     * @param benchmarkPath {String} The path of the benchmark you want to retrieve the data for.
     * @param period {String} For which period you want to retrieve the data.
     */
    constructor(accountPath, benchmarkPath, period) { 
        
        ResultsRequestBody.initialize(this, accountPath, benchmarkPath, period);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, accountPath, benchmarkPath, period) { 
        obj['accountPath'] = accountPath;
        obj['benchmarkPath'] = benchmarkPath;
        obj['period'] = period;
    }

    /**
     * Constructs a <code>ResultsRequestBody</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResultsRequestBody} obj Optional instance to populate.
     * @return {module:model/ResultsRequestBody} The populated <code>ResultsRequestBody</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResultsRequestBody();

            if (data.hasOwnProperty('accountPath')) {
                obj['accountPath'] = ApiClient.convertToType(data['accountPath'], 'String');
            }
            if (data.hasOwnProperty('benchmarkPath')) {
                obj['benchmarkPath'] = ApiClient.convertToType(data['benchmarkPath'], 'String');
            }
            if (data.hasOwnProperty('period')) {
                obj['period'] = ApiClient.convertToType(data['period'], 'String');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = Currency.constructFromObject(data['currency']);
            }
        }
        return obj;
    }


}

/**
 * The account path of the portfolio you want to retrieve the data for.
 * @member {String} accountPath
 */
ResultsRequestBody.prototype['accountPath'] = undefined;

/**
 * The path of the benchmark you want to retrieve the data for.
 * @member {String} benchmarkPath
 */
ResultsRequestBody.prototype['benchmarkPath'] = undefined;

/**
 * For which period you want to retrieve the data.
 * @member {String} period
 */
ResultsRequestBody.prototype['period'] = undefined;

/**
 * @member {module:model/Currency} currency
 */
ResultsRequestBody.prototype['currency'] = undefined;






export default ResultsRequestBody;

