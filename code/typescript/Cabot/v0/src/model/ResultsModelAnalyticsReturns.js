/**
 * Cabot Models API
 * Cabot Models API
 *
 * The version of the OpenAPI document: 0.3.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ResultsModelAnalyticsReturns model module.
 * @module model/ResultsModelAnalyticsReturns
 */
class ResultsModelAnalyticsReturns {
    /**
     * Constructs a new <code>ResultsModelAnalyticsReturns</code>.
     * @alias module:model/ResultsModelAnalyticsReturns
     */
    constructor() { 
        
        ResultsModelAnalyticsReturns.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ResultsModelAnalyticsReturns</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResultsModelAnalyticsReturns} obj Optional instance to populate.
     * @return {module:model/ResultsModelAnalyticsReturns} The populated <code>ResultsModelAnalyticsReturns</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResultsModelAnalyticsReturns();

            if (data.hasOwnProperty('portfolio')) {
                obj['portfolio'] = ApiClient.convertToType(data['portfolio'], 'Number');
            }
            if (data.hasOwnProperty('reference')) {
                obj['reference'] = ApiClient.convertToType(data['reference'], 'Number');
            }
            if (data.hasOwnProperty('relative')) {
                obj['relative'] = ApiClient.convertToType(data['relative'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Portfolio Return.
 * @member {Number} portfolio
 */
ResultsModelAnalyticsReturns.prototype['portfolio'] = undefined;

/**
 * Benchmark Return.
 * @member {Number} reference
 */
ResultsModelAnalyticsReturns.prototype['reference'] = undefined;

/**
 * Describes portfolio returns in comparison to its benchmark. A positive value indicates excess returns while a negative value indicates underperformance.
 * @member {Number} relative
 */
ResultsModelAnalyticsReturns.prototype['relative'] = undefined;






export default ResultsModelAnalyticsReturns;

