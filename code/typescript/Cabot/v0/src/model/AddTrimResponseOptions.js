/**
 * Cabot Models API
 * Cabot Models API
 *
 * The version of the OpenAPI document: 0.3.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AddTrimModelAnalytics from './AddTrimModelAnalytics';
import HoldingsResponseOptions from './HoldingsResponseOptions';

/**
 * The AddTrimResponseOptions model module.
 * @module model/AddTrimResponseOptions
 */
class AddTrimResponseOptions {
    /**
     * Constructs a new <code>AddTrimResponseOptions</code>.
     * @alias module:model/AddTrimResponseOptions
     */
    constructor() { 
        
        AddTrimResponseOptions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AddTrimResponseOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AddTrimResponseOptions} obj Optional instance to populate.
     * @return {module:model/AddTrimResponseOptions} The populated <code>AddTrimResponseOptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AddTrimResponseOptions();

            if (data.hasOwnProperty('addTrimValues')) {
                obj['addTrimValues'] = AddTrimModelAnalytics.constructFromObject(data['addTrimValues']);
            }
            if (data.hasOwnProperty('attribute')) {
                obj['attribute'] = ApiClient.convertToType(data['attribute'], 'String');
            }
            if (data.hasOwnProperty('highAddTrimValues')) {
                obj['highAddTrimValues'] = AddTrimModelAnalytics.constructFromObject(data['highAddTrimValues']);
            }
            if (data.hasOwnProperty('holdingsData')) {
                obj['holdingsData'] = HoldingsResponseOptions.constructFromObject(data['holdingsData']);
            }
            if (data.hasOwnProperty('lowAddTrimValues')) {
                obj['lowAddTrimValues'] = AddTrimModelAnalytics.constructFromObject(data['lowAddTrimValues']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/AddTrimModelAnalytics} addTrimValues
 */
AddTrimResponseOptions.prototype['addTrimValues'] = undefined;

/**
 * @member {String} attribute
 */
AddTrimResponseOptions.prototype['attribute'] = undefined;

/**
 * @member {module:model/AddTrimModelAnalytics} highAddTrimValues
 */
AddTrimResponseOptions.prototype['highAddTrimValues'] = undefined;

/**
 * @member {module:model/HoldingsResponseOptions} holdingsData
 */
AddTrimResponseOptions.prototype['holdingsData'] = undefined;

/**
 * @member {module:model/AddTrimModelAnalytics} lowAddTrimValues
 */
AddTrimResponseOptions.prototype['lowAddTrimValues'] = undefined;






export default AddTrimResponseOptions;

