/**
 * Cabot Models API
 * Cabot Models API
 *
 * The version of the OpenAPI document: 0.4.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Attributes from './Attributes';
import SellTimingHoldings from './SellTimingHoldings';

/**
 * The SellTimingRequestBody model module.
 * @module model/SellTimingRequestBody
 */
class SellTimingRequestBody {
    /**
     * Constructs a new <code>SellTimingRequestBody</code>.
     * @alias module:model/SellTimingRequestBody
     * @param accountPath {String} The account path of the portfolio you want to retrieve the data for.
     * @param benchmarkPath {String} The path of the benchmark you want to retrieve the data for.
     * @param period {String} For which period you want to retrieve the data.
     */
    constructor(accountPath, benchmarkPath, period) { 
        
        SellTimingRequestBody.initialize(this, accountPath, benchmarkPath, period);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, accountPath, benchmarkPath, period) { 
        obj['accountPath'] = accountPath;
        obj['benchmarkPath'] = benchmarkPath;
        obj['period'] = period;
    }

    /**
     * Constructs a <code>SellTimingRequestBody</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SellTimingRequestBody} obj Optional instance to populate.
     * @return {module:model/SellTimingRequestBody} The populated <code>SellTimingRequestBody</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SellTimingRequestBody();

            if (data.hasOwnProperty('accountPath')) {
                obj['accountPath'] = ApiClient.convertToType(data['accountPath'], 'String');
            }
            if (data.hasOwnProperty('benchmarkPath')) {
                obj['benchmarkPath'] = ApiClient.convertToType(data['benchmarkPath'], 'String');
            }
            if (data.hasOwnProperty('period')) {
                obj['period'] = ApiClient.convertToType(data['period'], 'String');
            }
            if (data.hasOwnProperty('attribute')) {
                obj['attribute'] = Attributes.constructFromObject(data['attribute']);
            }
            if (data.hasOwnProperty('sector')) {
                obj['sector'] = ApiClient.convertToType(data['sector'], 'String');
            }
            if (data.hasOwnProperty('region')) {
                obj['region'] = ApiClient.convertToType(data['region'], 'String');
            }
            if (data.hasOwnProperty('holdings')) {
                obj['holdings'] = SellTimingHoldings.constructFromObject(data['holdings']);
            }
            if (data.hasOwnProperty('customClassifications')) {
                obj['customClassifications'] = ApiClient.convertToType(data['customClassifications'], {'String': 'String'});
            }
        }
        return obj;
    }


}

/**
 * The account path of the portfolio you want to retrieve the data for.
 * @member {String} accountPath
 */
SellTimingRequestBody.prototype['accountPath'] = undefined;

/**
 * The path of the benchmark you want to retrieve the data for.
 * @member {String} benchmarkPath
 */
SellTimingRequestBody.prototype['benchmarkPath'] = undefined;

/**
 * For which period you want to retrieve the data.
 * @member {String} period
 */
SellTimingRequestBody.prototype['period'] = undefined;

/**
 * @member {module:model/Attributes} attribute
 */
SellTimingRequestBody.prototype['attribute'] = undefined;

/**
 * Represents the sector based on the company's industry breakdown.
 * @member {String} sector
 */
SellTimingRequestBody.prototype['sector'] = undefined;

/**
 * Region of domicile represents the region based on the company's primary listing.
 * @member {String} region
 */
SellTimingRequestBody.prototype['region'] = undefined;

/**
 * @member {module:model/SellTimingHoldings} holdings
 */
SellTimingRequestBody.prototype['holdings'] = undefined;

/**
 * A map-like structure representing key-value pairs of custom classifications. This differs from the default classifications such as region and sector, for which we have different query parameters. If both are provided, the API will choose which one to use based on your portfolio.
 * @member {Object.<String, String>} customClassifications
 */
SellTimingRequestBody.prototype['customClassifications'] = undefined;






export default SellTimingRequestBody;

