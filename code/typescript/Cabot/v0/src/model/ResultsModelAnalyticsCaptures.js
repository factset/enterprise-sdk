/**
 * Cabot Models API
 * Cabot Models API
 *
 * The version of the OpenAPI document: 0.4.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ResultsModelAnalyticsCaptures model module.
 * @module model/ResultsModelAnalyticsCaptures
 */
class ResultsModelAnalyticsCaptures {
    /**
     * Constructs a new <code>ResultsModelAnalyticsCaptures</code>.
     * @alias module:model/ResultsModelAnalyticsCaptures
     */
    constructor() { 
        
        ResultsModelAnalyticsCaptures.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ResultsModelAnalyticsCaptures</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResultsModelAnalyticsCaptures} obj Optional instance to populate.
     * @return {module:model/ResultsModelAnalyticsCaptures} The populated <code>ResultsModelAnalyticsCaptures</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResultsModelAnalyticsCaptures();

            if (data.hasOwnProperty('downside')) {
                obj['downside'] = ApiClient.convertToType(data['downside'], 'Number');
            }
            if (data.hasOwnProperty('upside')) {
                obj['upside'] = ApiClient.convertToType(data['upside'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Downside capture is typically viewed as a defensive characteristic or an intuitive measure of risk management. Values of less than 100% indicate that the portfolio returns generally go down less than does the market.
 * @member {Number} downside
 */
ResultsModelAnalyticsCaptures.prototype['downside'] = undefined;

/**
 * Upside capture quantifies how well the portfolio returns rise in comparison to a market up tick. A value greater than 100% indicates the portfolio captures gains at a rate disproportional to the market.
 * @member {Number} upside
 */
ResultsModelAnalyticsCaptures.prototype['upside'] = undefined;






export default ResultsModelAnalyticsCaptures;

