/**
 * Cabot Models API
 * Cabot Models API
 *
 * The version of the OpenAPI document: 0.3.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The HoldingAnalytics model module.
 * @module model/HoldingAnalytics
 */
class HoldingAnalytics {
    /**
     * Constructs a new <code>HoldingAnalytics</code>.
     * @alias module:model/HoldingAnalytics
     */
    constructor() { 
        
        HoldingAnalytics.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HoldingAnalytics</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HoldingAnalytics} obj Optional instance to populate.
     * @return {module:model/HoldingAnalytics} The populated <code>HoldingAnalytics</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HoldingAnalytics();

            if (data.hasOwnProperty('incrementalBenefit')) {
                obj['incrementalBenefit'] = ApiClient.convertToType(data['incrementalBenefit'], Object);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('region')) {
                obj['region'] = ApiClient.convertToType(data['region'], 'String');
            }
            if (data.hasOwnProperty('sector')) {
                obj['sector'] = ApiClient.convertToType(data['sector'], 'String');
            }
            if (data.hasOwnProperty('ticker')) {
                obj['ticker'] = ApiClient.convertToType(data['ticker'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Impact of the position on your portfolio.
 * @member {Object} incrementalBenefit
 */
HoldingAnalytics.prototype['incrementalBenefit'] = undefined;

/**
 * Company name.
 * @member {String} name
 */
HoldingAnalytics.prototype['name'] = undefined;

/**
 * Company region.
 * @member {String} region
 */
HoldingAnalytics.prototype['region'] = undefined;

/**
 * Company sector.
 * @member {String} sector
 */
HoldingAnalytics.prototype['sector'] = undefined;

/**
 * Ticker symbol.
 * @member {String} ticker
 */
HoldingAnalytics.prototype['ticker'] = undefined;






export default HoldingAnalytics;

