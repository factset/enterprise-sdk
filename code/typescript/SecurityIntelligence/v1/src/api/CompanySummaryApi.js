/**
 * Security Intelligence API - V1
 * Surfaces AI generated summaries intended to provide up to date insights and guide users to currently relevant applications.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CustomValidationError from '../model/CustomValidationError';
import DebtSummaryResponse from '../model/DebtSummaryResponse';
import EventsSummaryResponse from '../model/EventsSummaryResponse';
import FinancialHighlightsResponse from '../model/FinancialHighlightsResponse';
import MnaSummaryResponse from '../model/MnaSummaryResponse';
import OwnershipInsightsResponse from '../model/OwnershipInsightsResponse';
import ServerError from '../model/ServerError';

/**
* CompanySummary service.
* @module api/CompanySummaryApi
*/
export default class CompanySummaryApi {

    /**
    * Constructs a new CompanySummaryApi. 
    * @alias module:api/CompanySummaryApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Get Company Debt Summary
     * Presents the company's Debt Capital Structure maturity data, analysis of Total Debt, and information on debt obligations due in the near term.
     * @param {String} identifier Ticker or FactSet Entity ID of the company
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/DebtSummaryResponse} and HTTP response
     */
    getCompanyDebtSummaryWithHttpInfo(identifier) {
      let postBody = null;
      // verify the required parameter 'identifier' is set
      if (identifier === undefined || identifier === null) {
        throw new Error("Missing the required parameter 'identifier' when calling getCompanyDebtSummary");
      }

      let pathParams = {
      };
      let queryParams = {
        'identifier': identifier
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = [];
      let accepts = ['application/json'];


      let returnType = DebtSummaryResponse;

      return this.apiClient.callApi(
        '/company/debt', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Get Company Debt Summary
     * Presents the company's Debt Capital Structure maturity data, analysis of Total Debt, and information on debt obligations due in the near term.
     * @param {String} identifier Ticker or FactSet Entity ID of the company
     * @return { Promise.< module:model/DebtSummaryResponse > } a Promise, with data of type {@link module:model/DebtSummaryResponse }
     */
    getCompanyDebtSummary(identifier) {
      return this.getCompanyDebtSummaryWithHttpInfo(identifier)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Get Company Events
     * Returns a summary of company events including Dividends, Earnings Releases and Stock Splits spanning 7 days in the past and 60 days into the future.
     * @param {String} identifier Ticker or FactSet Entity ID of the company
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EventsSummaryResponse} and HTTP response
     */
    getCompanyEventsWithHttpInfo(identifier) {
      let postBody = null;
      // verify the required parameter 'identifier' is set
      if (identifier === undefined || identifier === null) {
        throw new Error("Missing the required parameter 'identifier' when calling getCompanyEvents");
      }

      let pathParams = {
      };
      let queryParams = {
        'identifier': identifier
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = [];
      let accepts = ['application/json'];


      let returnType = EventsSummaryResponse;

      return this.apiClient.callApi(
        '/company/events', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Get Company Events
     * Returns a summary of company events including Dividends, Earnings Releases and Stock Splits spanning 7 days in the past and 60 days into the future.
     * @param {String} identifier Ticker or FactSet Entity ID of the company
     * @return { Promise.< module:model/EventsSummaryResponse > } a Promise, with data of type {@link module:model/EventsSummaryResponse }
     */
    getCompanyEvents(identifier) {
      return this.getCompanyEventsWithHttpInfo(identifier)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Get Company Financial Highlights
     * Provides comprehensive financial data including Income Statement, Cash Flow Statement, and Balance Sheet for the past 1.5 years.
     * @param {String} identifier Ticker or FactSet Entity ID of the company
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/FinancialHighlightsResponse} and HTTP response
     */
    getCompanyFinancialHighlightsWithHttpInfo(identifier) {
      let postBody = null;
      // verify the required parameter 'identifier' is set
      if (identifier === undefined || identifier === null) {
        throw new Error("Missing the required parameter 'identifier' when calling getCompanyFinancialHighlights");
      }

      let pathParams = {
      };
      let queryParams = {
        'identifier': identifier
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = [];
      let accepts = ['application/json'];


      let returnType = FinancialHighlightsResponse;

      return this.apiClient.callApi(
        '/company/financials', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Get Company Financial Highlights
     * Provides comprehensive financial data including Income Statement, Cash Flow Statement, and Balance Sheet for the past 1.5 years.
     * @param {String} identifier Ticker or FactSet Entity ID of the company
     * @return { Promise.< module:model/FinancialHighlightsResponse > } a Promise, with data of type {@link module:model/FinancialHighlightsResponse }
     */
    getCompanyFinancialHighlights(identifier) {
      return this.getCompanyFinancialHighlightsWithHttpInfo(identifier)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Get Company M&A Summary
     * Reports on Mergers and Acquisitions activity related to the company within the last 3 months.
     * @param {String} identifier Ticker or FactSet Entity ID of the company
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/MnaSummaryResponse} and HTTP response
     */
    getCompanyMNASummaryWithHttpInfo(identifier) {
      let postBody = null;
      // verify the required parameter 'identifier' is set
      if (identifier === undefined || identifier === null) {
        throw new Error("Missing the required parameter 'identifier' when calling getCompanyMNASummary");
      }

      let pathParams = {
      };
      let queryParams = {
        'identifier': identifier
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = [];
      let accepts = ['application/json'];


      let returnType = MnaSummaryResponse;

      return this.apiClient.callApi(
        '/company/mna', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Get Company M&A Summary
     * Reports on Mergers and Acquisitions activity related to the company within the last 3 months.
     * @param {String} identifier Ticker or FactSet Entity ID of the company
     * @return { Promise.< module:model/MnaSummaryResponse > } a Promise, with data of type {@link module:model/MnaSummaryResponse }
     */
    getCompanyMNASummary(identifier) {
      return this.getCompanyMNASummaryWithHttpInfo(identifier)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Get Company Ownership Insights
     * Provides information on any activists targeting the company, and highlights the largest ownership position changes over the last 6 months.
     * @param {String} identifier Ticker or FactSet Entity ID of the company
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/OwnershipInsightsResponse} and HTTP response
     */
    getCompanyOwnershipInsightsWithHttpInfo(identifier) {
      let postBody = null;
      // verify the required parameter 'identifier' is set
      if (identifier === undefined || identifier === null) {
        throw new Error("Missing the required parameter 'identifier' when calling getCompanyOwnershipInsights");
      }

      let pathParams = {
      };
      let queryParams = {
        'identifier': identifier
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = [];
      let accepts = ['application/json'];


      let returnType = OwnershipInsightsResponse;

      return this.apiClient.callApi(
        '/company/ownership', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Get Company Ownership Insights
     * Provides information on any activists targeting the company, and highlights the largest ownership position changes over the last 6 months.
     * @param {String} identifier Ticker or FactSet Entity ID of the company
     * @return { Promise.< module:model/OwnershipInsightsResponse > } a Promise, with data of type {@link module:model/OwnershipInsightsResponse }
     */
    getCompanyOwnershipInsights(identifier) {
      return this.getCompanyOwnershipInsightsWithHttpInfo(identifier)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}





