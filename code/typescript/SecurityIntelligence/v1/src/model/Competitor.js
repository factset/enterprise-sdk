/**
 * Security Intelligence API - V1
 * Surfaces AI generated summaries intended to provide up to date insights and guide users to currently relevant applications.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Competitor model module.
 * @module model/Competitor
 */
class Competitor {
    /**
     * Constructs a new <code>Competitor</code>.
     * Model for competitor information.
     * @alias module:model/Competitor
     * @param entityName {String} Name of the competitor company
     * @param entityId {String} Identifier of the competitor company
     * @param priceChangePercentage {Number} Price change of the competitor as a percentage value
     */
    constructor(entityName, entityId, priceChangePercentage) { 
        
        Competitor.initialize(this, entityName, entityId, priceChangePercentage);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, entityName, entityId, priceChangePercentage) { 
        obj['entityName'] = entityName;
        obj['entityId'] = entityId;
        obj['priceChangePercentage'] = priceChangePercentage;
    }

    /**
     * Constructs a <code>Competitor</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Competitor} obj Optional instance to populate.
     * @return {module:model/Competitor} The populated <code>Competitor</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Competitor();

            if (data.hasOwnProperty('entityName')) {
                obj['entityName'] = ApiClient.convertToType(data['entityName'], 'String');
            }
            if (data.hasOwnProperty('entityId')) {
                obj['entityId'] = ApiClient.convertToType(data['entityId'], 'String');
            }
            if (data.hasOwnProperty('priceChangePercentage')) {
                obj['priceChangePercentage'] = ApiClient.convertToType(data['priceChangePercentage'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Name of the competitor company
 * @member {String} entityName
 */
Competitor.prototype['entityName'] = undefined;

/**
 * Identifier of the competitor company
 * @member {String} entityId
 */
Competitor.prototype['entityId'] = undefined;

/**
 * Price change of the competitor as a percentage value
 * @member {Number} priceChangePercentage
 */
Competitor.prototype['priceChangePercentage'] = undefined;






export default Competitor;

