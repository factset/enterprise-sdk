/**
 * Security Intelligence API - V1
 * Surfaces AI generated summaries intended to provide up to date insights and guide users to currently relevant applications.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MetaData model module.
 * @module model/MetaData
 */
class MetaData {
    /**
     * Constructs a new <code>MetaData</code>.
     * Model for response metadata.
     * @alias module:model/MetaData
     * @param ticker {String} Ticker symbol of the requested entity
     */
    constructor(ticker) { 
        
        MetaData.initialize(this, ticker);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, ticker) { 
        obj['ticker'] = ticker;
    }

    /**
     * Constructs a <code>MetaData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MetaData} obj Optional instance to populate.
     * @return {module:model/MetaData} The populated <code>MetaData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MetaData();

            if (data.hasOwnProperty('ticker')) {
                obj['ticker'] = ApiClient.convertToType(data['ticker'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Ticker symbol of the requested entity
 * @member {String} ticker
 */
MetaData.prototype['ticker'] = undefined;






export default MetaData;

