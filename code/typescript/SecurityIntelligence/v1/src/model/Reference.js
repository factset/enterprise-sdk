/**
 * Security Intelligence API - V1
 * Surfaces AI generated summaries intended to provide up to date insights and guide users to currently relevant applications.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Reference model module.
 * @module model/Reference
 */
class Reference {
    /**
     * Constructs a new <code>Reference</code>.
     * Model for reference information with source links.
     * @alias module:model/Reference
     * @param phrase {String} Referenced text phrase from the content
     * @param url {String} URL to the source of the reference
     */
    constructor(phrase, url) { 
        
        Reference.initialize(this, phrase, url);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, phrase, url) { 
        obj['phrase'] = phrase;
        obj['url'] = url;
    }

    /**
     * Constructs a <code>Reference</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Reference} obj Optional instance to populate.
     * @return {module:model/Reference} The populated <code>Reference</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Reference();

            if (data.hasOwnProperty('phrase')) {
                obj['phrase'] = ApiClient.convertToType(data['phrase'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Referenced text phrase from the content
 * @member {String} phrase
 */
Reference.prototype['phrase'] = undefined;

/**
 * URL to the source of the reference
 * @member {String} url
 */
Reference.prototype['url'] = undefined;






export default Reference;

