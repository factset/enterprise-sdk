/**
 * Security Intelligence API - V1
 * Surfaces AI generated summaries intended to provide up to date insights and guide users to currently relevant applications.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from './ApiClient';
import Competitor from './model/Competitor';
import CustomValidationError from './model/CustomValidationError';
import DebtSummaryResponse from './model/DebtSummaryResponse';
import ErrorItem from './model/ErrorItem';
import EventsSummaryResponse from './model/EventsSummaryResponse';
import FinancialHighlightsResponse from './model/FinancialHighlightsResponse';
import MetaData from './model/MetaData';
import MnaSummaryResponse from './model/MnaSummaryResponse';
import OwnershipInsightsResponse from './model/OwnershipInsightsResponse';
import Reference from './model/Reference';
import ServerError from './model/ServerError';
import StockMovementItem from './model/StockMovementItem';
import StockMovementMetaData from './model/StockMovementMetaData';
import StockMovementResponse from './model/StockMovementResponse';
import SummaryItem from './model/SummaryItem';

import CompanySummaryApi from './api/CompanySummaryApi';
import StockMovementSummaryApi from './api/StockMovementSummaryApi';


/**
* Security Intelligence client library for JavaScript.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var securityintelligence = require('index'); // See note below*.
* var xxxSvc = new securityintelligence.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new securityintelligence.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new securityintelligence.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new securityintelligence.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Competitor model constructor.
     * @property {module:model/Competitor}
     */
    Competitor,

    /**
     * The CustomValidationError model constructor.
     * @property {module:model/CustomValidationError}
     */
    CustomValidationError,

    /**
     * The DebtSummaryResponse model constructor.
     * @property {module:model/DebtSummaryResponse}
     */
    DebtSummaryResponse,

    /**
     * The ErrorItem model constructor.
     * @property {module:model/ErrorItem}
     */
    ErrorItem,

    /**
     * The EventsSummaryResponse model constructor.
     * @property {module:model/EventsSummaryResponse}
     */
    EventsSummaryResponse,

    /**
     * The FinancialHighlightsResponse model constructor.
     * @property {module:model/FinancialHighlightsResponse}
     */
    FinancialHighlightsResponse,

    /**
     * The MetaData model constructor.
     * @property {module:model/MetaData}
     */
    MetaData,

    /**
     * The MnaSummaryResponse model constructor.
     * @property {module:model/MnaSummaryResponse}
     */
    MnaSummaryResponse,

    /**
     * The OwnershipInsightsResponse model constructor.
     * @property {module:model/OwnershipInsightsResponse}
     */
    OwnershipInsightsResponse,

    /**
     * The Reference model constructor.
     * @property {module:model/Reference}
     */
    Reference,

    /**
     * The ServerError model constructor.
     * @property {module:model/ServerError}
     */
    ServerError,

    /**
     * The StockMovementItem model constructor.
     * @property {module:model/StockMovementItem}
     */
    StockMovementItem,

    /**
     * The StockMovementMetaData model constructor.
     * @property {module:model/StockMovementMetaData}
     */
    StockMovementMetaData,

    /**
     * The StockMovementResponse model constructor.
     * @property {module:model/StockMovementResponse}
     */
    StockMovementResponse,

    /**
     * The SummaryItem model constructor.
     * @property {module:model/SummaryItem}
     */
    SummaryItem,

    /**
    * The CompanySummaryApi service constructor.
    * @property {module:api/CompanySummaryApi}
    */
    CompanySummaryApi,

    /**
    * The StockMovementSummaryApi service constructor.
    * @property {module:api/StockMovementSummaryApi}
    */
    StockMovementSummaryApi,

};
