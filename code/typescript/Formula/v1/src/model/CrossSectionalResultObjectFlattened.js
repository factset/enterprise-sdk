/**
 * FactSet Formula API
 *  **FactSet Formula API**  FactSet’s Formula API is a modern, flexible, formula-based API that enables users to access FactSet’s wide range of financial data and content. The API offers two endpoints, one optimized for time-series analysis and one designed for cross-sectional analysis, providing users a simplified interface into FactSet’s expansive offering. By providing two endpoints, it allows for the optimization of user workflows, while reducing complexity.  Leverage the power and flexibility of the Formula API to -   * Pull data from across most content sets that a user has access to in a single request   * Include business logic and mathematical operations in request   * Submit a dynamic universe in both endpoints   * Return the fsymId to easily combine with other FactSet content / products   * Set the trading calendar   * Define custom display names  **Formula API Request Builder**  The Formula API Request Builder provides users everything they need to form a Formula API request. In the Request Builder, you can select identifiers, build a universe expression, select FQL or Screening formulas, easily apply business logic and mathematical functions to the FQL or Screening formulas, specify optional parameters, and construct a GET or POST request. The Request Builder eliminates the need to have previous FQL and Screening knowledge and allows you to quickly find your desired data items and form the request.  The Formula API Request Builder can be accessed by navigating to [https://developer.factset.com/formula-api-request-builder](https://developer.factset.com/formula-api-request-builder) and logging in using your FactSet.net ID. When using the Request Builder to construct requests for the one of the Formula API's endpoints, be sure to toggle to the correct endpoint at the top of the page.  **How to Check the Health and Availability of the Formula API**  Please use the below endpoint to check the health and availability of the Formula API. You must be authorized for this API to use the Health endpoint.  [https://api.factset.com/formula-api/health](https://api.factset.com/formula-api/health)  **How to Programmatically Download API Specification File**  You can download the FactSet Formula API Specification File in .yaml. using the \"Download Spec\" button to the right of the version number. This specification can then be used for Codegen to create your own SDKs. 
 *
 * The version of the OpenAPI document: 1.8.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CrossSectionalResultObjectFlattenedAddl from './CrossSectionalResultObjectFlattenedAddl';

/**
 * The CrossSectionalResultObjectFlattened model module.
 * @module model/CrossSectionalResultObjectFlattened
 */
class CrossSectionalResultObjectFlattened {
    /**
     * Constructs a new <code>CrossSectionalResultObjectFlattened</code>.
     *  Data model returned when the parameter **flatten&#x3D;Y** is used in the request. This flattened, simplified JSON data returned from **flatten&#x3D;Y** can be conceptualized as a table (rows and columns) where each data object in the result is a row in the table and the field names are the column names.  There will be one data object for each request containing the request, fsymId if requested, and Key-Value pairs for each data item (formula). 
     * @alias module:model/CrossSectionalResultObjectFlattened
     * @extends Object
     * @param requestId {String} Identifier requested.
     */
    constructor(requestId) { 
        
        CrossSectionalResultObjectFlattened.initialize(this, requestId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, requestId) { 
        obj['requestId'] = requestId;
    }

    /**
     * Constructs a <code>CrossSectionalResultObjectFlattened</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CrossSectionalResultObjectFlattened} obj Optional instance to populate.
     * @return {module:model/CrossSectionalResultObjectFlattened} The populated <code>CrossSectionalResultObjectFlattened</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CrossSectionalResultObjectFlattened();

            ApiClient.constructFromObject(data, obj, 'CrossSectionalResultObjectFlattenedAddl');
            

            if (data.hasOwnProperty('requestId')) {
                obj['requestId'] = ApiClient.convertToType(data['requestId'], 'String');
            }
            if (data.hasOwnProperty('fsymId')) {
                obj['fsymId'] = ApiClient.convertToType(data['fsymId'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Identifier requested.
 * @member {String} requestId
 */
CrossSectionalResultObjectFlattened.prototype['requestId'] = undefined;

/**
 * The **fsymId** field returned is the FactSet Default Permanent Identifier for the `requestId`. For all supported `requestId` symbol types, the `fsymId` parameter will return the Regional Level PermId '-R' which identifies the security’s best regional security data series per currency. Currently, the fsymId parameter only supports equities. Accepted `requestId` symbol types include all FactSet Permanent Identifiers types, CUSIP, SEDOL, ISIN, and Tickers. Further documentation can be found at this [Online Assistant attachment](https://oa.apps.factset.com/cms/oaAttachment/64c3213a-f415-4c27-a336-92c73a72deed/24881). Included only if the `fsymId` parameter is set to Y. 
 * @member {String} fsymId
 */
CrossSectionalResultObjectFlattened.prototype['fsymId'] = undefined;






export default CrossSectionalResultObjectFlattened;

