/**
 * FactSet Private Company API
 * FactSet Private Company API encompasses Private Company Financials and includes some Private Company non-periodic data. Additional Private Company firmographics can be found in the FactSet Entity API. <p><b>Rate limit is set to 10 requests per second and 10 concurrent requests per user</b>.</p> 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Financials model module.
 * @module model/Financials
 */
class Financials {
    /**
     * Constructs a new <code>Financials</code>.
     * Private Company Financials
     * @alias module:model/Financials
     */
    constructor() { 
        
        Financials.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Financials</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Financials} obj Optional instance to populate.
     * @return {module:model/Financials} The populated <code>Financials</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Financials();

            if (data.hasOwnProperty('requestId')) {
                obj['requestId'] = ApiClient.convertToType(data['requestId'], 'String');
            }
            if (data.hasOwnProperty('fsymId')) {
                obj['fsymId'] = ApiClient.convertToType(data['fsymId'], 'String');
            }
            if (data.hasOwnProperty('metric')) {
                obj['metric'] = ApiClient.convertToType(data['metric'], 'String');
            }
            if (data.hasOwnProperty('fiscalYear')) {
                obj['fiscalYear'] = ApiClient.convertToType(data['fiscalYear'], 'Number');
            }
            if (data.hasOwnProperty('fiscalEndDate')) {
                obj['fiscalEndDate'] = ApiClient.convertToType(data['fiscalEndDate'], 'Date');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Identifier used in `ids`.
 * @member {String} requestId
 */
Financials.prototype['requestId'] = undefined;

/**
 * Unique FactSet-generated identifier representing an entity for the current entity identifier (-E)
 * @member {String} fsymId
 */
Financials.prototype['fsymId'] = undefined;

/**
 * The requested `metric` input representing the Private Company Financial Data Item.
 * @member {String} metric
 */
Financials.prototype['metric'] = undefined;

/**
 * Fiscal year of the reported period in YYYY format.
 * @member {Number} fiscalYear
 */
Financials.prototype['fiscalYear'] = undefined;

/**
 * The normalized data the fiscal period ended.
 * @member {Date} fiscalEndDate
 */
Financials.prototype['fiscalEndDate'] = undefined;

/**
 * ISO Code representing the local currency. For more details,  visit Online Assistant page [OA1470](https://my.apps.factset.com/oa/pages/1470) 
 * @member {String} currency
 */
Financials.prototype['currency'] = undefined;

/**
 * Value of the data item requested.
 * @member {Number} value
 */
Financials.prototype['value'] = undefined;






export default Financials;

