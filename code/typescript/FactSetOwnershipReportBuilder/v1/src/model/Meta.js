/**
 * FactSet Ownership API
 * description.md
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Meta model module.
 * @module model/Meta
 */
class Meta {
    /**
     * Constructs a new <code>Meta</code>.
     * Standard Ownership response meta object.  Contains metadata about the response at the root level.
     * @alias module:model/Meta
     */
    constructor() { 
        
        Meta.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Meta</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Meta} obj Optional instance to populate.
     * @return {module:model/Meta} The populated <code>Meta</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Meta();

            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('fsymId')) {
                obj['fsymId'] = ApiClient.convertToType(data['fsymId'], 'String');
            }
            if (data.hasOwnProperty('noData')) {
                obj['noData'] = ApiClient.convertToType(data['noData'], 'Boolean');
            }
            if (data.hasOwnProperty('requestId')) {
                obj['requestId'] = ApiClient.convertToType(data['requestId'], 'String');
            }
        }
        return obj;
    }


}

/**
 * The currency ISO of the data which was returned
 * @member {String} currency
 */
Meta.prototype['currency'] = undefined;

/**
 * The resolved fsymId that corresponds to the provided requestId
 * @member {String} fsymId
 */
Meta.prototype['fsymId'] = undefined;

/**
 * Indicator of whether FactSet had data for this request
 * @member {Boolean} noData
 */
Meta.prototype['noData'] = undefined;

/**
 * The identifier which was requested by the client
 * @member {String} requestId
 */
Meta.prototype['requestId'] = undefined;






export default Meta;

