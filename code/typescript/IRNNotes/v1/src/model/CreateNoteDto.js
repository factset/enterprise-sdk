/**
 * IRN API v1
 * Allows users to extract, create, update and configure IRN data.
 *
 * The version of the OpenAPI document: 1
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateBodyDto from './CreateBodyDto';
import CreateCustomFieldValueDto from './CreateCustomFieldValueDto';
import RelatedRecordsDto from './RelatedRecordsDto';
import UserSerialDto from './UserSerialDto';

/**
 * The CreateNoteDto model module.
 * @module model/CreateNoteDto
 */
class CreateNoteDto {
    /**
     * Constructs a new <code>CreateNoteDto</code>.
     * @alias module:model/CreateNoteDto
     * @param author {module:model/UserSerialDto} 
     * @param date {String} 
     */
    constructor(author, date) { 
        
        CreateNoteDto.initialize(this, author, date);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, author, date) { 
        obj['author'] = author;
        obj['date'] = date;
    }

    /**
     * Constructs a <code>CreateNoteDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateNoteDto} obj Optional instance to populate.
     * @return {module:model/CreateNoteDto} The populated <code>CreateNoteDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateNoteDto();

            if (data.hasOwnProperty('author')) {
                obj['author'] = UserSerialDto.constructFromObject(data['author']);
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('identifier')) {
                obj['identifier'] = ApiClient.convertToType(data['identifier'], 'String');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'String');
            }
            if (data.hasOwnProperty('subjectId')) {
                obj['subjectId'] = ApiClient.convertToType(data['subjectId'], 'String');
            }
            if (data.hasOwnProperty('recommendationId')) {
                obj['recommendationId'] = ApiClient.convertToType(data['recommendationId'], 'String');
            }
            if (data.hasOwnProperty('sentimentId')) {
                obj['sentimentId'] = ApiClient.convertToType(data['sentimentId'], 'String');
            }
            if (data.hasOwnProperty('body')) {
                obj['body'] = CreateBodyDto.constructFromObject(data['body']);
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = ApiClient.convertToType(data['source'], 'String');
            }
            if (data.hasOwnProperty('link')) {
                obj['link'] = ApiClient.convertToType(data['link'], 'String');
            }
            if (data.hasOwnProperty('relatedSymbols')) {
                obj['relatedSymbols'] = ApiClient.convertToType(data['relatedSymbols'], ['String']);
            }
            if (data.hasOwnProperty('relatedContacts')) {
                obj['relatedContacts'] = ApiClient.convertToType(data['relatedContacts'], ['String']);
            }
            if (data.hasOwnProperty('relatedRecords')) {
                obj['relatedRecords'] = RelatedRecordsDto.constructFromObject(data['relatedRecords']);
            }
            if (data.hasOwnProperty('customFieldValues')) {
                obj['customFieldValues'] = ApiClient.convertToType(data['customFieldValues'], [CreateCustomFieldValueDto]);
            }
            if (data.hasOwnProperty('isPersonal')) {
                obj['isPersonal'] = ApiClient.convertToType(data['isPersonal'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/UserSerialDto} author
 */
CreateNoteDto.prototype['author'] = undefined;

/**
 * @member {String} title
 */
CreateNoteDto.prototype['title'] = undefined;

/**
 * @member {String} identifier
 */
CreateNoteDto.prototype['identifier'] = undefined;

/**
 * @member {String} date
 */
CreateNoteDto.prototype['date'] = undefined;

/**
 * @member {String} subjectId
 */
CreateNoteDto.prototype['subjectId'] = undefined;

/**
 * @member {String} recommendationId
 */
CreateNoteDto.prototype['recommendationId'] = undefined;

/**
 * @member {String} sentimentId
 */
CreateNoteDto.prototype['sentimentId'] = undefined;

/**
 * @member {module:model/CreateBodyDto} body
 */
CreateNoteDto.prototype['body'] = undefined;

/**
 * @member {String} source
 */
CreateNoteDto.prototype['source'] = undefined;

/**
 * @member {String} link
 */
CreateNoteDto.prototype['link'] = undefined;

/**
 * @member {Array.<String>} relatedSymbols
 */
CreateNoteDto.prototype['relatedSymbols'] = undefined;

/**
 * @member {Array.<String>} relatedContacts
 */
CreateNoteDto.prototype['relatedContacts'] = undefined;

/**
 * @member {module:model/RelatedRecordsDto} relatedRecords
 */
CreateNoteDto.prototype['relatedRecords'] = undefined;

/**
 * @member {Array.<module:model/CreateCustomFieldValueDto>} customFieldValues
 */
CreateNoteDto.prototype['customFieldValues'] = undefined;

/**
 * @member {Boolean} isPersonal
 * @default false
 */
CreateNoteDto.prototype['isPersonal'] = false;






export default CreateNoteDto;

