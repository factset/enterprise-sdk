/**
 * Events Contribution API
 * The Events Contribution API provides the ability to add specific types of corporate events to FactSet’s own events calendar, for display within FactSet’s applications, as well as for off-platform re-distribution via FactSet’s Events Calendar API.
 *
 * The version of the OpenAPI document: 0.2.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ParticipantsData model module.
 * @module model/ParticipantsData
 */
class ParticipantsData {
    /**
     * Constructs a new <code>ParticipantsData</code>.
     * Participants of the event
     * @alias module:model/ParticipantsData
     * @param firstName {String} The first name of the participant
     * @param lastName {String} The last name of the participant
     */
    constructor(firstName, lastName) { 
        
        ParticipantsData.initialize(this, firstName, lastName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, firstName, lastName) { 
        obj['firstName'] = firstName;
        obj['lastName'] = lastName;
    }

    /**
     * Constructs a <code>ParticipantsData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ParticipantsData} obj Optional instance to populate.
     * @return {module:model/ParticipantsData} The populated <code>ParticipantsData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ParticipantsData();

            if (data.hasOwnProperty('firstName')) {
                obj['firstName'] = ApiClient.convertToType(data['firstName'], 'String');
            }
            if (data.hasOwnProperty('lastName')) {
                obj['lastName'] = ApiClient.convertToType(data['lastName'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
        }
        return obj;
    }


}

/**
 * The first name of the participant
 * @member {String} firstName
 */
ParticipantsData.prototype['firstName'] = undefined;

/**
 * The last name of the participant
 * @member {String} lastName
 */
ParticipantsData.prototype['lastName'] = undefined;

/**
 * The title of the participant
 * @member {String} title
 */
ParticipantsData.prototype['title'] = undefined;






export default ParticipantsData;

