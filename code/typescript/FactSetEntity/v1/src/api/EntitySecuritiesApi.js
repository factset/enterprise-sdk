/**
 * FactSet Entity API
 * Using an entity centric data model, FactSet's Entity API provides access to FactSet's complete security and entity level symbology, comprehensive entity reference data, and all of the necessary relationships and connections to create a foundation that tightly correlates disparate sources of information to a master entity identifier. Use this API to quickly understand the full entity structure and related securities.<p><b>Rate limit is set to 10 requests per second</b>.</p> 
 *
 * The version of the OpenAPI document: 1.5.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import EntitySecuritiesRequest from '../model/EntitySecuritiesRequest';
import EntitySecuritiesResponse from '../model/EntitySecuritiesResponse';
import ErrorResponse from '../model/ErrorResponse';

/**
* EntitySecurities service.
* @module api/EntitySecuritiesApi
*/
export default class EntitySecuritiesApi {

    /**
    * Constructs a new EntitySecuritiesApi. 
    * @alias module:api/EntitySecuritiesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Returns all Equity Exchange Listings and all debt instruments issued for the requested entity.
     * Returns all Equity Exchange Listings (ticker-exchange) and all debt instruments (cusips) issued for the requested entity. 
     * @param {Array.<String>} ids The requested Market Identifier. Accepted input identifiers include Ticker-Exchange, Ticker-Regions, CUSIPs, ISINs, SEDOLs, or FactSet Permanent Ids, such as -R, -L, or -E.<p>**Max Ids Limit set to 3000 in a single request**</p>   *<p>Make note, GET Method URL request lines are also limited to a total length of 8192 bytes (8KB). In cases where the service allows for thousands of ids,       which may lead to exceeding this request line limit of 8KB, its       advised for any requests with large request lines to be requested through       the respective \\\"POST\\\" method.</p>* 
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.securityType The category describes which security types will be returned in the response. Defined as: * **EQ** = All related traded equity listings * **AEQ** = All active traded and non-traded equity listings * **PR** = All active preferred securities * **F** = All active funds * **FI** = All debt instruments * **ALL** = All related traded equity listings and debt  (default to 'EQ')
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EntitySecuritiesResponse} and HTTP response
     */
    getEntitySecuritiesWithHttpInfo(ids, opts) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'ids' is set
      if (ids === undefined || ids === null) {
        throw new Error("Missing the required parameter 'ids' when calling getEntitySecurities");
      }

      let pathParams = {
      };
      let queryParams = {
        'ids': this.apiClient.buildCollectionParam(ids, 'csv'),
        'securityType': opts['securityType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = [];
      let accepts = ['application/json'];


      let returnType = EntitySecuritiesResponse;

      return this.apiClient.callApi(
        '/factset-entity/v1/entity-securities', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Returns all Equity Exchange Listings and all debt instruments issued for the requested entity.
     * Returns all Equity Exchange Listings (ticker-exchange) and all debt instruments (cusips) issued for the requested entity. 
     * @param {Array.<String>} ids The requested Market Identifier. Accepted input identifiers include Ticker-Exchange, Ticker-Regions, CUSIPs, ISINs, SEDOLs, or FactSet Permanent Ids, such as -R, -L, or -E.<p>**Max Ids Limit set to 3000 in a single request**</p>   *<p>Make note, GET Method URL request lines are also limited to a total length of 8192 bytes (8KB). In cases where the service allows for thousands of ids,       which may lead to exceeding this request line limit of 8KB, its       advised for any requests with large request lines to be requested through       the respective \\\"POST\\\" method.</p>* 
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.securityType The category describes which security types will be returned in the response. Defined as: * **EQ** = All related traded equity listings * **AEQ** = All active traded and non-traded equity listings * **PR** = All active preferred securities * **F** = All active funds * **FI** = All debt instruments * **ALL** = All related traded equity listings and debt  (default to 'EQ')
     * @return { Promise.< module:model/EntitySecuritiesResponse > } a Promise, with data of type {@link module:model/EntitySecuritiesResponse }
     */
    getEntitySecurities(ids, opts) {
      return this.getEntitySecuritiesWithHttpInfo(ids, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Returns all Equity Exchange Listings and all debt instruments issued for the requested entity.
     * Returns all Equity Exchange Listings (ticker-exchange) and all debt instruments (cusips) issued for the requested entity. 
     * @param {module:model/EntitySecuritiesRequest} entitySecuritiesRequest Request Body to request a list of Entity Security objects.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/EntitySecuritiesResponse} and HTTP response
     */
    postEntitySecuritiesWithHttpInfo(entitySecuritiesRequest) {
      let postBody = entitySecuritiesRequest;
      // verify the required parameter 'entitySecuritiesRequest' is set
      if (entitySecuritiesRequest === undefined || entitySecuritiesRequest === null) {
        throw new Error("Missing the required parameter 'entitySecuritiesRequest' when calling postEntitySecurities");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['FactSetApiKey', 'FactSetOAuth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];


      let returnType = EntitySecuritiesResponse;

      return this.apiClient.callApi(
        '/factset-entity/v1/entity-securities', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Returns all Equity Exchange Listings and all debt instruments issued for the requested entity.
     * Returns all Equity Exchange Listings (ticker-exchange) and all debt instruments (cusips) issued for the requested entity. 
     * @param {module:model/EntitySecuritiesRequest} entitySecuritiesRequest Request Body to request a list of Entity Security objects.
     * @return { Promise.< module:model/EntitySecuritiesResponse > } a Promise, with data of type {@link module:model/EntitySecuritiesResponse }
     */
    postEntitySecurities(entitySecuritiesRequest) {
      return this.postEntitySecuritiesWithHttpInfo(entitySecuritiesRequest)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}





