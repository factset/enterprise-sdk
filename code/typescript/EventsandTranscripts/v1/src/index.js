/**
 * EVENTS AND TRANSCRIPTS API
 * <p>The Calendar Events API provides access to FactSetâ€™s Event Calendar data alongside business logic that allows users to replicate views and functionality consistent with the experience provided by the Workstation. This API provides the ability to pull Event Calendar data based on specific filters.</p> <p>Events Audio API provides access to historical as well as the latest audio recordings of various company events covered by FactSet. The events include, but are not limited to: earnings calls, conferences, and investor days. This API also provides relevant metadata such as timestamps and identifiers around each audio file.</p> <p>The  Near Real-time Transcripts API enables access to Near Real-time Transcripts provided by CallStreet to time-sensitive clients. This API also provides the relevant speaker metadata along with their confidence scores. This data caters to quant clients interested in building machine learning models. Clients can leverage this API to perform sentiment analysis through natural language processing or machine learning. It can also be used to complement analysis using FactSet's transcripts service.</p> <p>Transcripts API provides conference call transcripts for companies' publicly held conference calls and a wealth of information regarding upcoming corporate events, such as conference call date and time, phone number and password, type of conference call, and important company investor relations contact information.</p>  
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from './ApiClient';
import CompanyEventRequest from './model/CompanyEventRequest';
import CompanyEventRequestData from './model/CompanyEventRequestData';
import CompanyEventRequestDataDateTime from './model/CompanyEventRequestDataDateTime';
import CompanyEventRequestDataUniverse from './model/CompanyEventRequestDataUniverse';
import CompanyEventResponse from './model/CompanyEventResponse';
import CompanyEventResponseObject from './model/CompanyEventResponseObject';
import Error from './model/Error';
import ErrorExample from './model/ErrorExample';
import EventsAudioDaily from './model/EventsAudioDaily';
import EventsAudioDailyFileName from './model/EventsAudioDailyFileName';
import EventsAudioDailyFileNameData from './model/EventsAudioDailyFileNameData';
import EventsAudioDailyIds from './model/EventsAudioDailyIds';
import EventsAudioDailyMeta from './model/EventsAudioDailyMeta';
import EventsAudioDailyMetaPagination from './model/EventsAudioDailyMetaPagination';
import EventsAudioDailyObject from './model/EventsAudioDailyObject';
import EventsAudioHistory from './model/EventsAudioHistory';
import EventsAudioHistoryData from './model/EventsAudioHistoryData';
import EventsAudioIdsObject from './model/EventsAudioIdsObject';
import IndexedNrt from './model/IndexedNrt';
import NrtCalls from './model/NrtCalls';
import NrtCallsMeta from './model/NrtCallsMeta';
import NrtCallsMetaPagination from './model/NrtCallsMetaPagination';
import NrtCallsObject from './model/NrtCallsObject';
import NrtSpeakerIdObject from './model/NrtSpeakerIdObject';
import NrtSpeakerIds from './model/NrtSpeakerIds';
import NrtSpeakerIdsMeta from './model/NrtSpeakerIdsMeta';
import NrtSpeakerIdsMetaPagination from './model/NrtSpeakerIdsMetaPagination';
import ResponseCategories from './model/ResponseCategories';
import ResponseCategoriesObject from './model/ResponseCategoriesObject';
import ResponseTime from './model/ResponseTime';
import ResponseTimeObject from './model/ResponseTimeObject';
import TranscriptObject from './model/TranscriptObject';
import TranscriptObjectOne from './model/TranscriptObjectOne';
import Transcripts from './model/Transcripts';
import TranscriptsMeta from './model/TranscriptsMeta';
import TranscriptsMetaPagination from './model/TranscriptsMetaPagination';
import TranscriptsOne from './model/TranscriptsOne';
import TranscriptsOneMeta from './model/TranscriptsOneMeta';
import TranscriptsOneMetaPagination from './model/TranscriptsOneMetaPagination';

import CalendarEventsApi from './api/CalendarEventsApi';
import EventsAudioApi from './api/EventsAudioApi';
import NearRealTimeTranscriptsApi from './api/NearRealTimeTranscriptsApi';
import TranscriptsApi from './api/TranscriptsApi';


/**
* Events and Transcripts client library for JavaScript.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var eventsandtranscripts = require('index'); // See note below*.
* var xxxSvc = new eventsandtranscripts.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new eventsandtranscripts.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new eventsandtranscripts.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new eventsandtranscripts.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The CompanyEventRequest model constructor.
     * @property {module:model/CompanyEventRequest}
     */
    CompanyEventRequest,

    /**
     * The CompanyEventRequestData model constructor.
     * @property {module:model/CompanyEventRequestData}
     */
    CompanyEventRequestData,

    /**
     * The CompanyEventRequestDataDateTime model constructor.
     * @property {module:model/CompanyEventRequestDataDateTime}
     */
    CompanyEventRequestDataDateTime,

    /**
     * The CompanyEventRequestDataUniverse model constructor.
     * @property {module:model/CompanyEventRequestDataUniverse}
     */
    CompanyEventRequestDataUniverse,

    /**
     * The CompanyEventResponse model constructor.
     * @property {module:model/CompanyEventResponse}
     */
    CompanyEventResponse,

    /**
     * The CompanyEventResponseObject model constructor.
     * @property {module:model/CompanyEventResponseObject}
     */
    CompanyEventResponseObject,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The ErrorExample model constructor.
     * @property {module:model/ErrorExample}
     */
    ErrorExample,

    /**
     * The EventsAudioDaily model constructor.
     * @property {module:model/EventsAudioDaily}
     */
    EventsAudioDaily,

    /**
     * The EventsAudioDailyFileName model constructor.
     * @property {module:model/EventsAudioDailyFileName}
     */
    EventsAudioDailyFileName,

    /**
     * The EventsAudioDailyFileNameData model constructor.
     * @property {module:model/EventsAudioDailyFileNameData}
     */
    EventsAudioDailyFileNameData,

    /**
     * The EventsAudioDailyIds model constructor.
     * @property {module:model/EventsAudioDailyIds}
     */
    EventsAudioDailyIds,

    /**
     * The EventsAudioDailyMeta model constructor.
     * @property {module:model/EventsAudioDailyMeta}
     */
    EventsAudioDailyMeta,

    /**
     * The EventsAudioDailyMetaPagination model constructor.
     * @property {module:model/EventsAudioDailyMetaPagination}
     */
    EventsAudioDailyMetaPagination,

    /**
     * The EventsAudioDailyObject model constructor.
     * @property {module:model/EventsAudioDailyObject}
     */
    EventsAudioDailyObject,

    /**
     * The EventsAudioHistory model constructor.
     * @property {module:model/EventsAudioHistory}
     */
    EventsAudioHistory,

    /**
     * The EventsAudioHistoryData model constructor.
     * @property {module:model/EventsAudioHistoryData}
     */
    EventsAudioHistoryData,

    /**
     * The EventsAudioIdsObject model constructor.
     * @property {module:model/EventsAudioIdsObject}
     */
    EventsAudioIdsObject,

    /**
     * The IndexedNrt model constructor.
     * @property {module:model/IndexedNrt}
     */
    IndexedNrt,

    /**
     * The NrtCalls model constructor.
     * @property {module:model/NrtCalls}
     */
    NrtCalls,

    /**
     * The NrtCallsMeta model constructor.
     * @property {module:model/NrtCallsMeta}
     */
    NrtCallsMeta,

    /**
     * The NrtCallsMetaPagination model constructor.
     * @property {module:model/NrtCallsMetaPagination}
     */
    NrtCallsMetaPagination,

    /**
     * The NrtCallsObject model constructor.
     * @property {module:model/NrtCallsObject}
     */
    NrtCallsObject,

    /**
     * The NrtSpeakerIdObject model constructor.
     * @property {module:model/NrtSpeakerIdObject}
     */
    NrtSpeakerIdObject,

    /**
     * The NrtSpeakerIds model constructor.
     * @property {module:model/NrtSpeakerIds}
     */
    NrtSpeakerIds,

    /**
     * The NrtSpeakerIdsMeta model constructor.
     * @property {module:model/NrtSpeakerIdsMeta}
     */
    NrtSpeakerIdsMeta,

    /**
     * The NrtSpeakerIdsMetaPagination model constructor.
     * @property {module:model/NrtSpeakerIdsMetaPagination}
     */
    NrtSpeakerIdsMetaPagination,

    /**
     * The ResponseCategories model constructor.
     * @property {module:model/ResponseCategories}
     */
    ResponseCategories,

    /**
     * The ResponseCategoriesObject model constructor.
     * @property {module:model/ResponseCategoriesObject}
     */
    ResponseCategoriesObject,

    /**
     * The ResponseTime model constructor.
     * @property {module:model/ResponseTime}
     */
    ResponseTime,

    /**
     * The ResponseTimeObject model constructor.
     * @property {module:model/ResponseTimeObject}
     */
    ResponseTimeObject,

    /**
     * The TranscriptObject model constructor.
     * @property {module:model/TranscriptObject}
     */
    TranscriptObject,

    /**
     * The TranscriptObjectOne model constructor.
     * @property {module:model/TranscriptObjectOne}
     */
    TranscriptObjectOne,

    /**
     * The Transcripts model constructor.
     * @property {module:model/Transcripts}
     */
    Transcripts,

    /**
     * The TranscriptsMeta model constructor.
     * @property {module:model/TranscriptsMeta}
     */
    TranscriptsMeta,

    /**
     * The TranscriptsMetaPagination model constructor.
     * @property {module:model/TranscriptsMetaPagination}
     */
    TranscriptsMetaPagination,

    /**
     * The TranscriptsOne model constructor.
     * @property {module:model/TranscriptsOne}
     */
    TranscriptsOne,

    /**
     * The TranscriptsOneMeta model constructor.
     * @property {module:model/TranscriptsOneMeta}
     */
    TranscriptsOneMeta,

    /**
     * The TranscriptsOneMetaPagination model constructor.
     * @property {module:model/TranscriptsOneMetaPagination}
     */
    TranscriptsOneMetaPagination,

    /**
    * The CalendarEventsApi service constructor.
    * @property {module:api/CalendarEventsApi}
    */
    CalendarEventsApi,

    /**
    * The EventsAudioApi service constructor.
    * @property {module:api/EventsAudioApi}
    */
    EventsAudioApi,

    /**
    * The NearRealTimeTranscriptsApi service constructor.
    * @property {module:api/NearRealTimeTranscriptsApi}
    */
    NearRealTimeTranscriptsApi,

    /**
    * The TranscriptsApi service constructor.
    * @property {module:api/TranscriptsApi}
    */
    TranscriptsApi,

};
