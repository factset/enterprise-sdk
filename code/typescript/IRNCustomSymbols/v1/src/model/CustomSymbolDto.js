/**
 * IRN API v1
 * Allows users to extract, create, update and configure IRN data.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CustomSymbolAddressDto from './CustomSymbolAddressDto';
import CustomSymbolCustomFieldValueDto from './CustomSymbolCustomFieldValueDto';
import CustomSymbolSubTypeSummaryDto from './CustomSymbolSubTypeSummaryDto';
import CustomSymbolTypeSummaryDto from './CustomSymbolTypeSummaryDto';
import InstrumentDto from './InstrumentDto';

/**
 * The CustomSymbolDto model module.
 * @module model/CustomSymbolDto
 */
class CustomSymbolDto {
    /**
     * Constructs a new <code>CustomSymbolDto</code>.
     * @alias module:model/CustomSymbolDto
     */
    constructor() { 
        
        CustomSymbolDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CustomSymbolDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomSymbolDto} obj Optional instance to populate.
     * @return {module:model/CustomSymbolDto} The populated <code>CustomSymbolDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomSymbolDto();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = CustomSymbolTypeSummaryDto.constructFromObject(data['type']);
            }
            if (data.hasOwnProperty('subType')) {
                obj['subType'] = CustomSymbolSubTypeSummaryDto.constructFromObject(data['subType']);
            }
            if (data.hasOwnProperty('address')) {
                obj['address'] = CustomSymbolAddressDto.constructFromObject(data['address']);
            }
            if (data.hasOwnProperty('customFields')) {
                obj['customFields'] = ApiClient.convertToType(data['customFields'], [CustomSymbolCustomFieldValueDto]);
            }
            if (data.hasOwnProperty('createdDate')) {
                obj['createdDate'] = ApiClient.convertToType(data['createdDate'], 'String');
            }
            if (data.hasOwnProperty('createdBy')) {
                obj['createdBy'] = ApiClient.convertToType(data['createdBy'], 'String');
            }
            if (data.hasOwnProperty('standardSymbol')) {
                obj['standardSymbol'] = ApiClient.convertToType(data['standardSymbol'], 'String');
            }
            if (data.hasOwnProperty('standardSymbolInstrumentData')) {
                obj['standardSymbolInstrumentData'] = InstrumentDto.constructFromObject(data['standardSymbolInstrumentData']);
            }
            if (data.hasOwnProperty('isAddressAutoFilled')) {
                obj['isAddressAutoFilled'] = ApiClient.convertToType(data['isAddressAutoFilled'], 'Boolean');
            }
            if (data.hasOwnProperty('isDescriptionAutoFilled')) {
                obj['isDescriptionAutoFilled'] = ApiClient.convertToType(data['isDescriptionAutoFilled'], 'Boolean');
            }
            if (data.hasOwnProperty('isDeleted')) {
                obj['isDeleted'] = ApiClient.convertToType(data['isDeleted'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
CustomSymbolDto.prototype['id'] = undefined;

/**
 * @member {String} code
 */
CustomSymbolDto.prototype['code'] = undefined;

/**
 * @member {String} name
 */
CustomSymbolDto.prototype['name'] = undefined;

/**
 * @member {String} description
 */
CustomSymbolDto.prototype['description'] = undefined;

/**
 * @member {module:model/CustomSymbolTypeSummaryDto} type
 */
CustomSymbolDto.prototype['type'] = undefined;

/**
 * @member {module:model/CustomSymbolSubTypeSummaryDto} subType
 */
CustomSymbolDto.prototype['subType'] = undefined;

/**
 * @member {module:model/CustomSymbolAddressDto} address
 */
CustomSymbolDto.prototype['address'] = undefined;

/**
 * @member {Array.<module:model/CustomSymbolCustomFieldValueDto>} customFields
 */
CustomSymbolDto.prototype['customFields'] = undefined;

/**
 * @member {String} createdDate
 */
CustomSymbolDto.prototype['createdDate'] = undefined;

/**
 * @member {String} createdBy
 */
CustomSymbolDto.prototype['createdBy'] = undefined;

/**
 * @member {String} standardSymbol
 */
CustomSymbolDto.prototype['standardSymbol'] = undefined;

/**
 * @member {module:model/InstrumentDto} standardSymbolInstrumentData
 */
CustomSymbolDto.prototype['standardSymbolInstrumentData'] = undefined;

/**
 * @member {Boolean} isAddressAutoFilled
 */
CustomSymbolDto.prototype['isAddressAutoFilled'] = undefined;

/**
 * @member {Boolean} isDescriptionAutoFilled
 */
CustomSymbolDto.prototype['isDescriptionAutoFilled'] = undefined;

/**
 * @member {Boolean} isDeleted
 */
CustomSymbolDto.prototype['isDeleted'] = undefined;






export default CustomSymbolDto;

