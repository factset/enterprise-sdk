/**
 * IRN API v1
 * Allows users to extract, create, update and configure IRN data.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SymbolIdNameDto from './SymbolIdNameDto';
import SymbolsRelationshipIdNameDto from './SymbolsRelationshipIdNameDto';

/**
 * The SymbolRelationshipDto model module.
 * @module model/SymbolRelationshipDto
 */
class SymbolRelationshipDto {
    /**
     * Constructs a new <code>SymbolRelationshipDto</code>.
     * @alias module:model/SymbolRelationshipDto
     */
    constructor() { 
        
        SymbolRelationshipDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SymbolRelationshipDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SymbolRelationshipDto} obj Optional instance to populate.
     * @return {module:model/SymbolRelationshipDto} The populated <code>SymbolRelationshipDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SymbolRelationshipDto();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('symbolsRelationship')) {
                obj['symbolsRelationship'] = SymbolsRelationshipIdNameDto.constructFromObject(data['symbolsRelationship']);
            }
            if (data.hasOwnProperty('parentSymbol')) {
                obj['parentSymbol'] = SymbolIdNameDto.constructFromObject(data['parentSymbol']);
            }
            if (data.hasOwnProperty('childSymbol')) {
                obj['childSymbol'] = SymbolIdNameDto.constructFromObject(data['childSymbol']);
            }
            if (data.hasOwnProperty('startDate')) {
                obj['startDate'] = ApiClient.convertToType(data['startDate'], 'Date');
            }
            if (data.hasOwnProperty('endDate')) {
                obj['endDate'] = ApiClient.convertToType(data['endDate'], 'Date');
            }
            if (data.hasOwnProperty('comment')) {
                obj['comment'] = ApiClient.convertToType(data['comment'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
SymbolRelationshipDto.prototype['id'] = undefined;

/**
 * @member {module:model/SymbolsRelationshipIdNameDto} symbolsRelationship
 */
SymbolRelationshipDto.prototype['symbolsRelationship'] = undefined;

/**
 * @member {module:model/SymbolIdNameDto} parentSymbol
 */
SymbolRelationshipDto.prototype['parentSymbol'] = undefined;

/**
 * @member {module:model/SymbolIdNameDto} childSymbol
 */
SymbolRelationshipDto.prototype['childSymbol'] = undefined;

/**
 * @member {Date} startDate
 */
SymbolRelationshipDto.prototype['startDate'] = undefined;

/**
 * @member {Date} endDate
 */
SymbolRelationshipDto.prototype['endDate'] = undefined;

/**
 * @member {String} comment
 */
SymbolRelationshipDto.prototype['comment'] = undefined;






export default SymbolRelationshipDto;

