/**
 * FactSet Prices API
 * Gain access to comprehensive global coverage for Equities & Fixed Income. Perform quick analytics by controlling the date ranges, currencies, and rolling periods, or simply request Open, High, Low, and Close prices. Easily connect pricing data with other core company data or alternative content sets using FactSet's hub and spoke symbology. <p>Equity and Fund Security types include Common Stock, ADR, GDR, Preferred, Closed-ended Fund, Exchange Traded Fund, Unit, Open-ended Fund, Exchange Traded Fund UVI, Exchange Traded Fund NAV, Preferred Equity, Non-Voting Depositary Receipt/Certificate, Alien/Foreign, Structured Product, and Temporary Instruments. Reference over 180,000+ active and inactive securities.</p><p>Fixed Income Security Types include Corporate Bonds, Treasury and Agency bonds, Government Bonds, and Municipals.</p><p><b>Rate limit is set to 25 requests per second</b>.</p> 
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Rollover model module.
 * @module model/Rollover
 */
class Rollover {
    /**
     * Constructs a new <code>Rollover</code>.
     * @alias module:model/Rollover
     */
    constructor() { 
        
        Rollover.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Rollover</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Rollover} obj Optional instance to populate.
     * @return {module:model/Rollover} The populated <code>Rollover</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Rollover();

            if (data.hasOwnProperty('americasRollTime')) {
                obj['americasRollTime'] = ApiClient.convertToType(data['americasRollTime'], 'Date');
            }
            if (data.hasOwnProperty('americasZeroDate')) {
                obj['americasZeroDate'] = ApiClient.convertToType(data['americasZeroDate'], 'Date');
            }
            if (data.hasOwnProperty('asiapacificRollTime')) {
                obj['asiapacificRollTime'] = ApiClient.convertToType(data['asiapacificRollTime'], 'Date');
            }
            if (data.hasOwnProperty('asiapacificZeroDate')) {
                obj['asiapacificZeroDate'] = ApiClient.convertToType(data['asiapacificZeroDate'], 'Date');
            }
            if (data.hasOwnProperty('europeRollTime')) {
                obj['europeRollTime'] = ApiClient.convertToType(data['europeRollTime'], 'Date');
            }
            if (data.hasOwnProperty('europeZeroDate')) {
                obj['europeZeroDate'] = ApiClient.convertToType(data['europeZeroDate'], 'Date');
            }
        }
        return obj;
    }


}

/**
 * Time of last zero date rollover for the Americas. This is in Eastern Time Zone. The date-time format is expressed as [YYYY-MM-DD]T[HH:MM:SSS], following ISO 8601.
 * @member {Date} americasRollTime
 */
Rollover.prototype['americasRollTime'] = undefined;

/**
 * Current relative zero date for the Americas. Date is expressed in Eastern Time and expressed as YYYY-MM-DD.
 * @member {Date} americasZeroDate
 */
Rollover.prototype['americasZeroDate'] = undefined;

/**
 * Time of last zero date rollover for Asia/Pacific. This is in Eastern Time Zone. The date-time format is expressed as [YYYY-MM-DD]T[HH:MM:SSS], following ISO 8601.
 * @member {Date} asiapacificRollTime
 */
Rollover.prototype['asiapacificRollTime'] = undefined;

/**
 * Current relative zero date for Asia/Pacific. This is in Eastern Time Zone
 * @member {Date} asiapacificZeroDate
 */
Rollover.prototype['asiapacificZeroDate'] = undefined;

/**
 * Time of last zero date rollover for Europe. This is in Eastern Time Zone. The date-time format is expressed as [YYYY-MM-DD]T[HH:MM:SSS], following ISO 8601.
 * @member {Date} europeRollTime
 */
Rollover.prototype['europeRollTime'] = undefined;

/**
 * Current relative zero date for Europe. This is in Eastern Time Zone
 * @member {Date} europeZeroDate
 */
Rollover.prototype['europeZeroDate'] = undefined;






export default Rollover;

