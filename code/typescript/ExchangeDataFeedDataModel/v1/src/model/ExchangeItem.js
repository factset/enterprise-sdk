/**
 * FactSet Real-Time Data Model API
 * FactSetâ€™s Real-time market data products provide access to consolidated real-time and delayed global exchange data. Proprietary technology normalizes over 250 global venues, 18+ million instruments, and 150+ data fields. Asset types integrated include equities, futures, options, warrants, fixed income, mutual funds, ETFs, indices, commodities, and FX rates. Innovative technology ensures reliability and provides scalability that allows clients to make requests based on a symbol list or an exchange. Reduce development time by powering proprietary and third-party applications with exchange data from a unified data model. <p>The Real-time Data Model API provides mappings for enumerations used in our Real-Time DataFeed products and should be used in conjunction with the DataFeed Data Model documentation available for each product. <p>The initial version of this API is limited to include mapping tables for the product codes and exchanges only.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ExchangeItem model module.
 * @module model/ExchangeItem
 */
class ExchangeItem {
    /**
     * Constructs a new <code>ExchangeItem</code>.
     * @alias module:model/ExchangeItem
     */
    constructor() { 
        
        ExchangeItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ExchangeItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExchangeItem} obj Optional instance to populate.
     * @return {module:model/ExchangeItem} The populated <code>ExchangeItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExchangeItem();

            if (data.hasOwnProperty('exchange_code')) {
                obj['exchange_code'] = ApiClient.convertToType(data['exchange_code'], 'Number');
            }
            if (data.hasOwnProperty('exchange_name')) {
                obj['exchange_name'] = ApiClient.convertToType(data['exchange_name'], 'String');
            }
            if (data.hasOwnProperty('market_open')) {
                obj['market_open'] = ApiClient.convertToType(data['market_open'], 'Number');
            }
            if (data.hasOwnProperty('market_close')) {
                obj['market_close'] = ApiClient.convertToType(data['market_close'], 'Number');
            }
            if (data.hasOwnProperty('iso_code')) {
                obj['iso_code'] = ApiClient.convertToType(data['iso_code'], 'String');
            }
            if (data.hasOwnProperty('delay_time')) {
                obj['delay_time'] = ApiClient.convertToType(data['delay_time'], 'Number');
            }
            if (data.hasOwnProperty('product_code')) {
                obj['product_code'] = ApiClient.convertToType(data['product_code'], 'Number');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Unique code for the exchange.
 * @member {Number} exchange_code
 */
ExchangeItem.prototype['exchange_code'] = undefined;

/**
 * Name of the exchange.
 * @member {String} exchange_name
 */
ExchangeItem.prototype['exchange_name'] = undefined;

/**
 * Market open time in hours and minutes (HHMM).
 * @member {Number} market_open
 */
ExchangeItem.prototype['market_open'] = undefined;

/**
 * Market close time in hours and minutes (HHMM).
 * @member {Number} market_close
 */
ExchangeItem.prototype['market_close'] = undefined;

/**
 * ISO code for the exchange.
 * @member {String} iso_code
 */
ExchangeItem.prototype['iso_code'] = undefined;

/**
 * Delay time in minutes.
 * @member {Number} delay_time
 */
ExchangeItem.prototype['delay_time'] = undefined;

/**
 * Product code associated with the exchange.
 * @member {Number} product_code
 */
ExchangeItem.prototype['product_code'] = undefined;

/**
 * Description of the exchange.
 * @member {String} description
 */
ExchangeItem.prototype['description'] = undefined;






export default ExchangeItem;

