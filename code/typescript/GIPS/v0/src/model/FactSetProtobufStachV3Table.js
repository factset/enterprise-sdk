/**
 * GIPS API
 * Allow clients to use GIPS through APIs.
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FactSetProtobufStachV3MetadataItem from './FactSetProtobufStachV3MetadataItem';
import FactSetProtobufStachV3SortColumn from './FactSetProtobufStachV3SortColumn';
import FactSetProtobufStachV3TableTypesError from './FactSetProtobufStachV3TableTypesError';
import FactSetProtobufStachV3TableTypesFormatResult from './FactSetProtobufStachV3TableTypesFormatResult';
import FactSetProtobufStachV3TableTypesGroupResult from './FactSetProtobufStachV3TableTypesGroupResult';
import FactSetProtobufStachV3TableTypesPagination from './FactSetProtobufStachV3TableTypesPagination';
import FactSetProtobufStachV3TableTypesSplitResult from './FactSetProtobufStachV3TableTypesSplitResult';

/**
 * The FactSetProtobufStachV3Table model module.
 * @module model/FactSetProtobufStachV3Table
 */
class FactSetProtobufStachV3Table {
    /**
     * Constructs a new <code>FactSetProtobufStachV3Table</code>.
     * @alias module:model/FactSetProtobufStachV3Table
     */
    constructor() { 
        
        FactSetProtobufStachV3Table.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FactSetProtobufStachV3Table</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FactSetProtobufStachV3Table} obj Optional instance to populate.
     * @return {module:model/FactSetProtobufStachV3Table} The populated <code>FactSetProtobufStachV3Table</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FactSetProtobufStachV3Table();

            if (data.hasOwnProperty('primaryKeys')) {
                obj['primaryKeys'] = ApiClient.convertToType(data['primaryKeys'], ['String']);
            }
            if (data.hasOwnProperty('totalNumRows')) {
                obj['totalNumRows'] = ApiClient.convertToType(data['totalNumRows'], 'Number');
            }
            if (data.hasOwnProperty('groupResult')) {
                obj['groupResult'] = FactSetProtobufStachV3TableTypesGroupResult.constructFromObject(data['groupResult']);
            }
            if (data.hasOwnProperty('splitResult')) {
                obj['splitResult'] = FactSetProtobufStachV3TableTypesSplitResult.constructFromObject(data['splitResult']);
            }
            if (data.hasOwnProperty('sortResult')) {
                obj['sortResult'] = ApiClient.convertToType(data['sortResult'], [FactSetProtobufStachV3SortColumn]);
            }
            if (data.hasOwnProperty('formatResult')) {
                obj['formatResult'] = FactSetProtobufStachV3TableTypesFormatResult.constructFromObject(data['formatResult']);
            }
            if (data.hasOwnProperty('pagination')) {
                obj['pagination'] = FactSetProtobufStachV3TableTypesPagination.constructFromObject(data['pagination']);
            }
            if (data.hasOwnProperty('errors')) {
                obj['errors'] = ApiClient.convertToType(data['errors'], [FactSetProtobufStachV3TableTypesError]);
            }
            if (data.hasOwnProperty('customMetadata')) {
                obj['customMetadata'] = ApiClient.convertToType(data['customMetadata'], {'String': FactSetProtobufStachV3MetadataItem});
            }
        }
        return obj;
    }


}

/**
 * @member {Array.<String>} primaryKeys
 */
FactSetProtobufStachV3Table.prototype['primaryKeys'] = undefined;

/**
 * @member {Number} totalNumRows
 */
FactSetProtobufStachV3Table.prototype['totalNumRows'] = undefined;

/**
 * @member {module:model/FactSetProtobufStachV3TableTypesGroupResult} groupResult
 */
FactSetProtobufStachV3Table.prototype['groupResult'] = undefined;

/**
 * @member {module:model/FactSetProtobufStachV3TableTypesSplitResult} splitResult
 */
FactSetProtobufStachV3Table.prototype['splitResult'] = undefined;

/**
 * @member {Array.<module:model/FactSetProtobufStachV3SortColumn>} sortResult
 */
FactSetProtobufStachV3Table.prototype['sortResult'] = undefined;

/**
 * @member {module:model/FactSetProtobufStachV3TableTypesFormatResult} formatResult
 */
FactSetProtobufStachV3Table.prototype['formatResult'] = undefined;

/**
 * @member {module:model/FactSetProtobufStachV3TableTypesPagination} pagination
 */
FactSetProtobufStachV3Table.prototype['pagination'] = undefined;

/**
 * @member {Array.<module:model/FactSetProtobufStachV3TableTypesError>} errors
 */
FactSetProtobufStachV3Table.prototype['errors'] = undefined;

/**
 * @member {Object.<String, module:model/FactSetProtobufStachV3MetadataItem>} customMetadata
 */
FactSetProtobufStachV3Table.prototype['customMetadata'] = undefined;






export default FactSetProtobufStachV3Table;

