/**
 * GIPS API
 * Allow clients to use GIPS through APIs.
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FactSetProtobufStachV3SortColumn model module.
 * @module model/FactSetProtobufStachV3SortColumn
 */
class FactSetProtobufStachV3SortColumn {
    /**
     * Constructs a new <code>FactSetProtobufStachV3SortColumn</code>.
     * @alias module:model/FactSetProtobufStachV3SortColumn
     */
    constructor() { 
        
        FactSetProtobufStachV3SortColumn.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FactSetProtobufStachV3SortColumn</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FactSetProtobufStachV3SortColumn} obj Optional instance to populate.
     * @return {module:model/FactSetProtobufStachV3SortColumn} The populated <code>FactSetProtobufStachV3SortColumn</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FactSetProtobufStachV3SortColumn();

            if (data.hasOwnProperty('by')) {
                obj['by'] = ApiClient.convertToType(data['by'], 'String');
            }
            if (data.hasOwnProperty('descending')) {
                obj['descending'] = ApiClient.convertToType(data['descending'], 'Boolean');
            }
            if (data.hasOwnProperty('nullsFirst')) {
                obj['nullsFirst'] = ApiClient.convertToType(data['nullsFirst'], 'Boolean');
            }
            if (data.hasOwnProperty('caseInsensitive')) {
                obj['caseInsensitive'] = ApiClient.convertToType(data['caseInsensitive'], 'Boolean');
            }
            if (data.hasOwnProperty('absoluteValue')) {
                obj['absoluteValue'] = ApiClient.convertToType(data['absoluteValue'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * @member {String} by
 */
FactSetProtobufStachV3SortColumn.prototype['by'] = undefined;

/**
 * @member {Boolean} descending
 */
FactSetProtobufStachV3SortColumn.prototype['descending'] = undefined;

/**
 * @member {Boolean} nullsFirst
 */
FactSetProtobufStachV3SortColumn.prototype['nullsFirst'] = undefined;

/**
 * @member {Boolean} caseInsensitive
 */
FactSetProtobufStachV3SortColumn.prototype['caseInsensitive'] = undefined;

/**
 * @member {Boolean} absoluteValue
 */
FactSetProtobufStachV3SortColumn.prototype['absoluteValue'] = undefined;






export default FactSetProtobufStachV3SortColumn;

