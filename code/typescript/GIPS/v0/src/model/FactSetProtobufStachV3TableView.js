/**
 * GIPS API
 * Allow clients to use GIPS through APIs.
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FactSetProtobufStachV3MetadataItem from './FactSetProtobufStachV3MetadataItem';
import FactSetProtobufStachV3SortColumn from './FactSetProtobufStachV3SortColumn';
import FactSetProtobufStachV3TableViewTypesFormat from './FactSetProtobufStachV3TableViewTypesFormat';
import FactSetProtobufStachV3TableViewTypesGroup from './FactSetProtobufStachV3TableViewTypesGroup';
import FactSetProtobufStachV3TableViewTypesHorizontalAlignment from './FactSetProtobufStachV3TableViewTypesHorizontalAlignment';
import FactSetProtobufStachV3TableViewTypesSplit from './FactSetProtobufStachV3TableViewTypesSplit';

/**
 * The FactSetProtobufStachV3TableView model module.
 * @module model/FactSetProtobufStachV3TableView
 */
class FactSetProtobufStachV3TableView {
    /**
     * Constructs a new <code>FactSetProtobufStachV3TableView</code>.
     * @alias module:model/FactSetProtobufStachV3TableView
     */
    constructor() { 
        
        FactSetProtobufStachV3TableView.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FactSetProtobufStachV3TableView</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FactSetProtobufStachV3TableView} obj Optional instance to populate.
     * @return {module:model/FactSetProtobufStachV3TableView} The populated <code>FactSetProtobufStachV3TableView</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FactSetProtobufStachV3TableView();

            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('columns')) {
                obj['columns'] = ApiClient.convertToType(data['columns'], ['String']);
            }
            if (data.hasOwnProperty('headers')) {
                obj['headers'] = ApiClient.convertToType(data['headers'], {'String': 'String'});
            }
            if (data.hasOwnProperty('group')) {
                obj['group'] = FactSetProtobufStachV3TableViewTypesGroup.constructFromObject(data['group']);
            }
            if (data.hasOwnProperty('split')) {
                obj['split'] = FactSetProtobufStachV3TableViewTypesSplit.constructFromObject(data['split']);
            }
            if (data.hasOwnProperty('sort')) {
                obj['sort'] = ApiClient.convertToType(data['sort'], [FactSetProtobufStachV3SortColumn]);
            }
            if (data.hasOwnProperty('halign')) {
                obj['halign'] = FactSetProtobufStachV3TableViewTypesHorizontalAlignment.constructFromObject(data['halign']);
            }
            if (data.hasOwnProperty('format')) {
                obj['format'] = FactSetProtobufStachV3TableViewTypesFormat.constructFromObject(data['format']);
            }
            if (data.hasOwnProperty('customMetadata')) {
                obj['customMetadata'] = ApiClient.convertToType(data['customMetadata'], {'String': FactSetProtobufStachV3MetadataItem});
            }
        }
        return obj;
    }


}

/**
 * @member {String} displayName
 */
FactSetProtobufStachV3TableView.prototype['displayName'] = undefined;

/**
 * @member {Array.<String>} columns
 */
FactSetProtobufStachV3TableView.prototype['columns'] = undefined;

/**
 * @member {Object.<String, String>} headers
 */
FactSetProtobufStachV3TableView.prototype['headers'] = undefined;

/**
 * @member {module:model/FactSetProtobufStachV3TableViewTypesGroup} group
 */
FactSetProtobufStachV3TableView.prototype['group'] = undefined;

/**
 * @member {module:model/FactSetProtobufStachV3TableViewTypesSplit} split
 */
FactSetProtobufStachV3TableView.prototype['split'] = undefined;

/**
 * @member {Array.<module:model/FactSetProtobufStachV3SortColumn>} sort
 */
FactSetProtobufStachV3TableView.prototype['sort'] = undefined;

/**
 * @member {module:model/FactSetProtobufStachV3TableViewTypesHorizontalAlignment} halign
 */
FactSetProtobufStachV3TableView.prototype['halign'] = undefined;

/**
 * @member {module:model/FactSetProtobufStachV3TableViewTypesFormat} format
 */
FactSetProtobufStachV3TableView.prototype['format'] = undefined;

/**
 * @member {Object.<String, module:model/FactSetProtobufStachV3MetadataItem>} customMetadata
 */
FactSetProtobufStachV3TableView.prototype['customMetadata'] = undefined;






export default FactSetProtobufStachV3TableView;

