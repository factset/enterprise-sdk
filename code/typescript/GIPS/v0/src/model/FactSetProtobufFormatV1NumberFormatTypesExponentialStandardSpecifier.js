/**
 * GIPS API
 * Allow clients to use GIPS through APIs.
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FactSetProtobufFormatV1NumberFormatTypesExponentialStandardSpecifier model module.
 * @module model/FactSetProtobufFormatV1NumberFormatTypesExponentialStandardSpecifier
 */
class FactSetProtobufFormatV1NumberFormatTypesExponentialStandardSpecifier {
    /**
     * Constructs a new <code>FactSetProtobufFormatV1NumberFormatTypesExponentialStandardSpecifier</code>.
     * @alias module:model/FactSetProtobufFormatV1NumberFormatTypesExponentialStandardSpecifier
     */
    constructor() { 
        
        FactSetProtobufFormatV1NumberFormatTypesExponentialStandardSpecifier.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FactSetProtobufFormatV1NumberFormatTypesExponentialStandardSpecifier</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FactSetProtobufFormatV1NumberFormatTypesExponentialStandardSpecifier} obj Optional instance to populate.
     * @return {module:model/FactSetProtobufFormatV1NumberFormatTypesExponentialStandardSpecifier} The populated <code>FactSetProtobufFormatV1NumberFormatTypesExponentialStandardSpecifier</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FactSetProtobufFormatV1NumberFormatTypesExponentialStandardSpecifier();

            if (data.hasOwnProperty('decimalDigits')) {
                obj['decimalDigits'] = ApiClient.convertToType(data['decimalDigits'], 'Number');
            }
            if (data.hasOwnProperty('exponentDigits')) {
                obj['exponentDigits'] = ApiClient.convertToType(data['exponentDigits'], 'Number');
            }
            if (data.hasOwnProperty('decimalSeparator')) {
                obj['decimalSeparator'] = ApiClient.convertToType(data['decimalSeparator'], 'String');
            }
            if (data.hasOwnProperty('exponentSignRequired')) {
                obj['exponentSignRequired'] = ApiClient.convertToType(data['exponentSignRequired'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * @member {Number} decimalDigits
 */
FactSetProtobufFormatV1NumberFormatTypesExponentialStandardSpecifier.prototype['decimalDigits'] = undefined;

/**
 * @member {Number} exponentDigits
 */
FactSetProtobufFormatV1NumberFormatTypesExponentialStandardSpecifier.prototype['exponentDigits'] = undefined;

/**
 * @member {String} decimalSeparator
 */
FactSetProtobufFormatV1NumberFormatTypesExponentialStandardSpecifier.prototype['decimalSeparator'] = undefined;

/**
 * @member {Boolean} exponentSignRequired
 */
FactSetProtobufFormatV1NumberFormatTypesExponentialStandardSpecifier.prototype['exponentSignRequired'] = undefined;






export default FactSetProtobufFormatV1NumberFormatTypesExponentialStandardSpecifier;

