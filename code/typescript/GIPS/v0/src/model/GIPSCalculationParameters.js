/**
 * GIPS API
 * Allow clients to use GIPS through APIs.
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GIPSCalculationParameters model module.
 * @module model/GIPSCalculationParameters
 */
class GIPSCalculationParameters {
    /**
     * Constructs a new <code>GIPSCalculationParameters</code>.
     * List of calculation parameters.
     * @alias module:model/GIPSCalculationParameters
     * @param account {String} Account path for the calculation. Account field accepts only ACTM.
     */
    constructor(account) { 
        
        GIPSCalculationParameters.initialize(this, account);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, account) { 
        obj['account'] = account;
    }

    /**
     * Constructs a <code>GIPSCalculationParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GIPSCalculationParameters} obj Optional instance to populate.
     * @return {module:model/GIPSCalculationParameters} The populated <code>GIPSCalculationParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GIPSCalculationParameters();

            if (data.hasOwnProperty('account')) {
                obj['account'] = ApiClient.convertToType(data['account'], 'String');
            }
            if (data.hasOwnProperty('enddate')) {
                obj['enddate'] = ApiClient.convertToType(data['enddate'], 'String');
            }
            if (data.hasOwnProperty('report')) {
                obj['report'] = ApiClient.convertToType(data['report'], 'String');
            }
            if (data.hasOwnProperty('viewid')) {
                obj['viewid'] = ApiClient.convertToType(data['viewid'], 'String');
            }
            if (data.hasOwnProperty('currencyisocode')) {
                obj['currencyisocode'] = ApiClient.convertToType(data['currencyisocode'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Account path for the calculation. Account field accepts only ACTM.
 * @member {String} account
 */
GIPSCalculationParameters.prototype['account'] = undefined;

/**
 * Calculation's end date. End of previous month will be used as the enddate if not provided explicitly.
 * @member {String} enddate
 */
GIPSCalculationParameters.prototype['enddate'] = undefined;

/**
 * Report name
 * @member {module:model/GIPSCalculationParameters.ReportEnum} report
 */
GIPSCalculationParameters.prototype['report'] = undefined;

/**
 * ViewId for calculation.
 * @member {String} viewid
 */
GIPSCalculationParameters.prototype['viewid'] = undefined;

/**
 * Currency ISO code for calculation. The default currency value of the account will be used if not provided explicitly.
 * @member {String} currencyisocode
 */
GIPSCalculationParameters.prototype['currencyisocode'] = undefined;





/**
 * Allowed values for the <code>report</code> property.
 * @enum {String}
 * @readonly
 */
GIPSCalculationParameters['ReportEnum'] = {

    /**
     * value: "RET_STAT"
     * @const
     */
    "RET_STAT": "RET_STAT"
};



export default GIPSCalculationParameters;

