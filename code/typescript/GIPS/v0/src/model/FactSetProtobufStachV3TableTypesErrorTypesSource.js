/**
 * GIPS API
 * Allow clients to use GIPS through APIs.
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FactSetProtobufStachV3TableTypesErrorTypesSourceTypeOneofCase from './FactSetProtobufStachV3TableTypesErrorTypesSourceTypeOneofCase';
import FactSetProtobufStachV3TableTypesErrorTypesSourceTypesCell from './FactSetProtobufStachV3TableTypesErrorTypesSourceTypesCell';
import FactSetProtobufStachV3TableTypesErrorTypesSourceTypesColumn from './FactSetProtobufStachV3TableTypesErrorTypesSourceTypesColumn';
import FactSetProtobufStachV3TableTypesErrorTypesSourceTypesRow from './FactSetProtobufStachV3TableTypesErrorTypesSourceTypesRow';

/**
 * The FactSetProtobufStachV3TableTypesErrorTypesSource model module.
 * @module model/FactSetProtobufStachV3TableTypesErrorTypesSource
 */
class FactSetProtobufStachV3TableTypesErrorTypesSource {
    /**
     * Constructs a new <code>FactSetProtobufStachV3TableTypesErrorTypesSource</code>.
     * @alias module:model/FactSetProtobufStachV3TableTypesErrorTypesSource
     */
    constructor() { 
        
        FactSetProtobufStachV3TableTypesErrorTypesSource.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FactSetProtobufStachV3TableTypesErrorTypesSource</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FactSetProtobufStachV3TableTypesErrorTypesSource} obj Optional instance to populate.
     * @return {module:model/FactSetProtobufStachV3TableTypesErrorTypesSource} The populated <code>FactSetProtobufStachV3TableTypesErrorTypesSource</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FactSetProtobufStachV3TableTypesErrorTypesSource();

            if (data.hasOwnProperty('column')) {
                obj['column'] = FactSetProtobufStachV3TableTypesErrorTypesSourceTypesColumn.constructFromObject(data['column']);
            }
            if (data.hasOwnProperty('row')) {
                obj['row'] = FactSetProtobufStachV3TableTypesErrorTypesSourceTypesRow.constructFromObject(data['row']);
            }
            if (data.hasOwnProperty('cell')) {
                obj['cell'] = FactSetProtobufStachV3TableTypesErrorTypesSourceTypesCell.constructFromObject(data['cell']);
            }
            if (data.hasOwnProperty('typeCase')) {
                obj['typeCase'] = FactSetProtobufStachV3TableTypesErrorTypesSourceTypeOneofCase.constructFromObject(data['typeCase']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/FactSetProtobufStachV3TableTypesErrorTypesSourceTypesColumn} column
 */
FactSetProtobufStachV3TableTypesErrorTypesSource.prototype['column'] = undefined;

/**
 * @member {module:model/FactSetProtobufStachV3TableTypesErrorTypesSourceTypesRow} row
 */
FactSetProtobufStachV3TableTypesErrorTypesSource.prototype['row'] = undefined;

/**
 * @member {module:model/FactSetProtobufStachV3TableTypesErrorTypesSourceTypesCell} cell
 */
FactSetProtobufStachV3TableTypesErrorTypesSource.prototype['cell'] = undefined;

/**
 * @member {module:model/FactSetProtobufStachV3TableTypesErrorTypesSourceTypeOneofCase} typeCase
 */
FactSetProtobufStachV3TableTypesErrorTypesSource.prototype['typeCase'] = undefined;






export default FactSetProtobufStachV3TableTypesErrorTypesSource;

