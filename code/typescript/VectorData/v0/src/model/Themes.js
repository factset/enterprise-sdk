/**
 * Vector Data API
 * The Vector Data API provides streamlined access to vector data through its defined endpoints. It supports functionalities such as: Retrieving detailed vector data based on user-defined parameters. Efficiently processing associated text data for enhanced performance. This API is designed to enable developers to integrate vector data into their applications, ensuring flexibility and performance while leveraging the specified endpoint functionalities.
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Themes model module.
 * @module model/Themes
 */
class Themes {
    /**
     * Constructs a new <code>Themes</code>.
     * elements of themes.
     * @alias module:model/Themes
     * @param description {String} theme description
     */
    constructor(description) { 
        
        Themes.initialize(this, description);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, description) { 
        obj['description'] = description;
    }

    /**
     * Constructs a <code>Themes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Themes} obj Optional instance to populate.
     * @return {module:model/Themes} The populated <code>Themes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Themes();

            if (data.hasOwnProperty('esgTheme')) {
                obj['esgTheme'] = ApiClient.convertToType(data['esgTheme'], 'String');
            }
            if (data.hasOwnProperty('searchConcept')) {
                obj['searchConcept'] = ApiClient.convertToType(data['searchConcept'], 'String');
            }
            if (data.hasOwnProperty('sentiment')) {
                obj['sentiment'] = ApiClient.convertToType(data['sentiment'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
        }
        return obj;
    }


}

/**
 * theme of the source.
 * @member {String} esgTheme
 */
Themes.prototype['esgTheme'] = undefined;

/**
 * theme of the source.
 * @member {String} searchConcept
 */
Themes.prototype['searchConcept'] = undefined;

/**
 * theme of the source.
 * @member {String} sentiment
 */
Themes.prototype['sentiment'] = undefined;

/**
 * theme description
 * @member {String} description
 */
Themes.prototype['description'] = undefined;






export default Themes;

