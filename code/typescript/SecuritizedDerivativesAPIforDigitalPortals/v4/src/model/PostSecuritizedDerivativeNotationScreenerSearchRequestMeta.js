/**
 * Securitized Derivatives API For Digital Portals
 * Search for securitized derivative instruments, using a criteria-based screener. The API provides also fundamental data, notation-based key figures, list of barrier types, and details regarding the underlyings, their respective barriers and related cash flows, coupon lists and derived basic interest rate information.  The screener is based on securitized derivatives-specific parameters. The result is limited to the notations that satisfy all the selected filters. If more than one notation of an instrument matches the parameters, and no market priority has been specified, only the notation with the highest trading volume, averaged over one month, is considered. All identifier types used as parameters must be valid and application must have permissions for them.  Available search criteria include:  * validation: filter for only active listings, by price quality and latest/previous available price dates * traded markets: filter and indicate a market priority for the validation * life cycle: important dates in and features of the life cycle of the securitized derivatives instruments * filter by issuer, country of registration of the securitized derivatives * underlying and related barriers, including level and distance, and resulting cash flows * coupon data: where applicable, occurrence and frequency of coupon payments, current interest rate range * performance and volatility * product-specific ask-based key figures (not all key figures are available for all product types):     * bonus yield, sideways yield, maximum yield based on the ask price     * agio, discount     * spread     * break even, outperformance point, parity     * delta, weekly theta, vega, implied volatility     * leverage, omega     * intrinsic value, time value         Since some underlyings, e.g. an index or a performance difference of a stock and an index (alpha structure), do not represent a directly tradable asset, they do not have a price in the classical sense. Therefore, the term *level* is used instead of *price*, e.g. underlying level instead of underlying price. The endpoint does not support the search for securitized derivatives with multiple underlyings, thus only securitized derivatives with a single underlying are returned in the result.  The search can be restricted to a specific set of products by using customer-specific instrument or notation lists. Such restriction lists are set up by FactSet upon request.  This API is fully integrated with the corresponding [Quotes API](https://developer.factset.com/api-catalog/quotes-api-digital-portals), allowing access to detailed price and performance information of instruments, as well as basic security identifier cross-reference. For direct access to price histories, please refer to the [Time Series API for Digital Portals](https://developer.factset.com/api-catalog/time-series-api-digital-portals).  Similar criteria based screener APIs exist for equity and fixed income instruments: See the [Stocks API](https://developer.factset.com/api-catalog/stocks-api-digital-portals) and the [Bonds API](https://developer.factset.com/api-catalog/bonds-api-digital-portals) for details.  
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PostSecuritizedDerivativeNotationScreenerSearchRequestMetaPagination from './PostSecuritizedDerivativeNotationScreenerSearchRequestMetaPagination';

/**
 * The PostSecuritizedDerivativeNotationScreenerSearchRequestMeta model module.
 * @module model/PostSecuritizedDerivativeNotationScreenerSearchRequestMeta
 */
class PostSecuritizedDerivativeNotationScreenerSearchRequestMeta {
    /**
     * Constructs a new <code>PostSecuritizedDerivativeNotationScreenerSearchRequestMeta</code>.
     * The meta member contains the meta information of the request.
     * @alias module:model/PostSecuritizedDerivativeNotationScreenerSearchRequestMeta
     */
    constructor() { 
        
        PostSecuritizedDerivativeNotationScreenerSearchRequestMeta.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PostSecuritizedDerivativeNotationScreenerSearchRequestMeta</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PostSecuritizedDerivativeNotationScreenerSearchRequestMeta} obj Optional instance to populate.
     * @return {module:model/PostSecuritizedDerivativeNotationScreenerSearchRequestMeta} The populated <code>PostSecuritizedDerivativeNotationScreenerSearchRequestMeta</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PostSecuritizedDerivativeNotationScreenerSearchRequestMeta();

            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = ApiClient.convertToType(data['attributes'], ['String']);
            }
            if (data.hasOwnProperty('language')) {
                obj['language'] = ApiClient.convertToType(data['language'], 'String');
            }
            if (data.hasOwnProperty('sort')) {
                obj['sort'] = ApiClient.convertToType(data['sort'], ['String']);
            }
            if (data.hasOwnProperty('pagination')) {
                obj['pagination'] = PostSecuritizedDerivativeNotationScreenerSearchRequestMetaPagination.constructFromObject(data['pagination']);
            }
        }
        return obj;
    }


}

/**
 * Limit the attributes returned in the response to the specified set.
 * @member {Array.<String>} attributes
 */
PostSecuritizedDerivativeNotationScreenerSearchRequestMeta.prototype['attributes'] = undefined;

/**
 * ISO 639-1 code of the language.
 * @member {String} language
 */
PostSecuritizedDerivativeNotationScreenerSearchRequestMeta.prototype['language'] = undefined;

/**
 * Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 10 (possibly prefixed) attribute name(s) is allowed. | Value | | --- | | symbol | | -symbol | | market.name | | -market.name | | instrument.name | | -instrument.name | | instrument.shortName | | -instrument.shortName | | instrument.categorization.ddv.level1.name | | -instrument.categorization.ddv.level1.name | | instrument.categorization.ddv.level2.name | | -instrument.categorization.ddv.level2.name | | instrument.categorization.ddv.level3.name | | -instrument.categorization.ddv.level3.name | | instrument.categorization.eusipa.level1.name | | -instrument.categorization.eusipa.level1.name | | instrument.categorization.eusipa.level2.name | | -instrument.categorization.eusipa.level2.name | | instrument.categorization.eusipa.level3.name | | -instrument.categorization.eusipa.level3.name | | instrument.lifeCycle.maturity.date | | -instrument.lifeCycle.maturity.date | | instrument.lifeCycle.maturity.remainingTermDays | | -instrument.lifeCycle.maturity.remainingTermDays | | instrument.lifeCycle.maturity.perpetual | | -instrument.lifeCycle.maturity.perpetual | | instrument.lifeCycle.callable | | -instrument.lifeCycle.callable | | instrument.lifeCycle.valuation | | -instrument.lifeCycle.valuation | | instrument.lifeCycle.repayment | | -instrument.lifeCycle.repayment | | instrument.issuer.name | | -instrument.issuer.name | | instrument.issuer.group.name | | -instrument.issuer.group.name | | instrument.exercise.right | | -instrument.exercise.right | | instrument.exercise.style | | -instrument.exercise.style | | instrument.settlement | | -instrument.settlement | | instrument.quanto | | -instrument.quanto | | instrument.capitalProtection | | -instrument.capitalProtection | | instrument.underlying.name | | -instrument.underlying.name | | instrument.underlying.valueUnit.code | | -instrument.underlying.valueUnit.code | | instrument.underlying.notation.instrument.typeComposite | | -instrument.underlying.notation.instrument.typeComposite | | instrument.strike.value | | -instrument.strike.value | | instrument.strike.distance.absolute | | -instrument.strike.distance.absolute | | instrument.strike.distance.relative | | -instrument.strike.distance.relative | | instrument.bonusLevel.value | | -instrument.bonusLevel.value | | instrument.bonusLevel.distance.absolute | | -instrument.bonusLevel.distance.absolute | | instrument.bonusLevel.distance.relative | | -instrument.bonusLevel.distance.relative | | instrument.cap.value | | -instrument.cap.value | | instrument.cap.distance.absolute | | -instrument.cap.distance.absolute | | instrument.cap.distance.relative | | -instrument.cap.distance.relative | | instrument.cap.cashFlow | | -instrument.cap.cashFlow | | instrument.knockOut.observation.type | | -instrument.knockOut.observation.type | | instrument.knockOut.value | | -instrument.knockOut.value | | instrument.knockOut.distance.absolute | | -instrument.knockOut.distance.absolute | | instrument.knockOut.distance.relative | | -instrument.knockOut.distance.relative | | instrument.knockOut.breach.breached | | -instrument.knockOut.breach.breached | | instrument.knockOut.breach.datetime | | -instrument.knockOut.breach.datetime | | instrument.knockIn.observation.type | | -instrument.knockIn.observation.type | | instrument.knockIn.value | | -instrument.knockIn.value | | instrument.knockIn.distance.absolute | | -instrument.knockIn.distance.absolute | | instrument.knockIn.distance.relative | | -instrument.knockIn.distance.relative | | instrument.knockIn.breach.breached | | -instrument.knockIn.breach.breached | | instrument.knockIn.breach.datetime | | -instrument.knockIn.breach.datetime | | instrument.lockOut.observation.type | | -instrument.lockOut.observation.type | | instrument.lockOut.value | | -instrument.lockOut.value | | instrument.lockOut.distance.absolute | | -instrument.lockOut.distance.absolute | | instrument.lockOut.distance.relative | | -instrument.lockOut.distance.relative | | instrument.lockOut.cashFlow | | -instrument.lockOut.cashFlow | | instrument.lockIn.observation.type | | -instrument.lockIn.observation.type | | instrument.lockIn.value | | -instrument.lockIn.value | | instrument.lockIn.distance.absolute | | -instrument.lockIn.distance.absolute | | instrument.lockIn.distance.relative | | -instrument.lockIn.distance.relative | | instrument.lockIn.cashFlow | | -instrument.lockIn.cashFlow | | instrument.capitalGuarantee.value | | -instrument.capitalGuarantee.value | | instrument.capitalGuarantee.distance.absolute | | -instrument.capitalGuarantee.distance.absolute | | instrument.capitalGuarantee.distance.relative | | -instrument.capitalGuarantee.distance.relative | | instrument.capitalGuarantee.cashFlow | | -instrument.capitalGuarantee.cashFlow | | instrument.couponTriggerLevel.value | | -instrument.couponTriggerLevel.value | | instrument.couponTriggerLevel.distance.absolute | | -instrument.couponTriggerLevel.distance.absolute | | instrument.couponTriggerLevel.distance.relative | | -instrument.couponTriggerLevel.distance.relative | | instrument.couponTriggerLevel.cashFlow | | -instrument.couponTriggerLevel.cashFlow | | instrument.rangeKnockOut.observation.type | | -instrument.rangeKnockOut.observation.type | | instrument.rangeKnockOut.upper.value | | -instrument.rangeKnockOut.upper.value | | instrument.rangeKnockOut.lower.value | | -instrument.rangeKnockOut.lower.value | | instrument.rangeKnockOut.breach.breached | | -instrument.rangeKnockOut.breach.breached | | instrument.rangeKnockOut.breach.datetime | | -instrument.rangeKnockOut.breach.datetime | | instrument.rangeKnockOut.cashFlow | | -instrument.rangeKnockOut.cashFlow | | instrument.participation | | -instrument.participation | | instrument.constantLeverage | | -instrument.constantLeverage | | instrument.nominalCurrency.isoCode | | -instrument.nominalCurrency.isoCode | | instrument.currentInterestRate.type | | -instrument.currentInterestRate.type | | instrument.currentInterestRate.value | | -instrument.currentInterestRate.value | | keyFigures.bonusYield.absolute | | -keyFigures.bonusYield.absolute | | keyFigures.bonusYield.relative | | -keyFigures.bonusYield.relative | | keyFigures.bonusYield.annualized | | -keyFigures.bonusYield.annualized | | keyFigures.sidewaysYield.absolute | | -keyFigures.sidewaysYield.absolute | | keyFigures.sidewaysYield.relative | | -keyFigures.sidewaysYield.relative | | keyFigures.sidewaysYield.annualized | | -keyFigures.sidewaysYield.annualized | | keyFigures.maximumYield.absolute | | -keyFigures.maximumYield.absolute | | keyFigures.maximumYield.relative | | -keyFigures.maximumYield.relative | | keyFigures.maximumYield.annualized | | -keyFigures.maximumYield.annualized | | keyFigures.agio.absolute | | -keyFigures.agio.absolute | | keyFigures.agio.relative | | -keyFigures.agio.relative | | keyFigures.agio.annualized | | -keyFigures.agio.annualized | | keyFigures.discount.absolute | | -keyFigures.discount.absolute | | keyFigures.discount.relative | | -keyFigures.discount.relative | | keyFigures.breakEven.breakEvenPoint | | -keyFigures.breakEven.breakEvenPoint | | keyFigures.spread.harmonized | | -keyFigures.spread.harmonized | | keyFigures.spread.relative | | -keyFigures.spread.relative | | keyFigures.delta.effective | | -keyFigures.delta.effective | | keyFigures.delta.unadjusted | | -keyFigures.delta.unadjusted | | keyFigures.thetaOneWeek.effective | | -keyFigures.thetaOneWeek.effective | | keyFigures.thetaOneWeek.unadjusted | | -keyFigures.thetaOneWeek.unadjusted | | keyFigures.vega.effective | | -keyFigures.vega.effective | | keyFigures.vega.unadjusted | | -keyFigures.vega.unadjusted | | keyFigures.leverage | | -keyFigures.leverage | | keyFigures.omega | | -keyFigures.omega | | keyFigures.impliedVolatility | | -keyFigures.impliedVolatility | | keyFigures.intrinsicValue | | -keyFigures.intrinsicValue | | keyFigures.timeValue | | -keyFigures.timeValue | | keyFigures.outperformancePoint | | -keyFigures.outperformancePoint | | keyFigures.parity | | -keyFigures.parity | | performance.intraday | | -performance.intraday | | performance.sinceIssue.ask | | -performance.sinceIssue.ask | | performance.sinceIssue.bid | | -performance.sinceIssue.bid | | performance.endOfDay.day1 | | -performance.endOfDay.day1 | | performance.endOfDay.week1 | | -performance.endOfDay.week1 | | performance.endOfDay.month1 | | -performance.endOfDay.month1 | | performance.endOfDay.months3 | | -performance.endOfDay.months3 | | performance.endOfDay.months6 | | -performance.endOfDay.months6 | | performance.endOfDay.year1 | | -performance.endOfDay.year1 | | performance.endOfDay.years3 | | -performance.endOfDay.years3 | | performance.endOfDay.years5 | | -performance.endOfDay.years5 | | performance.endOfDay.yearToDate | | -performance.endOfDay.yearToDate | | volatility.week1 | | -volatility.week1 | | volatility.month1 | | -volatility.month1 | | volatility.months3 | | -volatility.months3 | | volatility.months6 | | -volatility.months6 | | volatility.year1 | | -volatility.year1 | | volatility.years3 | | -volatility.years3 | | volatility.years5 | | -volatility.years5 | | volatility.yearToDate | | -volatility.yearToDate |  
 * @member {Array.<module:model/PostSecuritizedDerivativeNotationScreenerSearchRequestMeta.SortEnum>} sort
 */
PostSecuritizedDerivativeNotationScreenerSearchRequestMeta.prototype['sort'] = undefined;

/**
 * @member {module:model/PostSecuritizedDerivativeNotationScreenerSearchRequestMetaPagination} pagination
 */
PostSecuritizedDerivativeNotationScreenerSearchRequestMeta.prototype['pagination'] = undefined;





/**
 * Allowed values for the <code>sort</code> property.
 * @enum {String}
 * @readonly
 */
PostSecuritizedDerivativeNotationScreenerSearchRequestMeta['SortEnum'] = {

    /**
     * value: "symbol"
     * @const
     */
    "symbol": "symbol",

    /**
     * value: "-symbol"
     * @const
     */
    "-symbol": "-symbol",

    /**
     * value: "market.name"
     * @const
     */
    "market.name": "market.name",

    /**
     * value: "-market.name"
     * @const
     */
    "-market.name": "-market.name",

    /**
     * value: "instrument.name"
     * @const
     */
    "instrument.name": "instrument.name",

    /**
     * value: "-instrument.name"
     * @const
     */
    "-instrument.name": "-instrument.name",

    /**
     * value: "instrument.shortName"
     * @const
     */
    "instrument.shortName": "instrument.shortName",

    /**
     * value: "-instrument.shortName"
     * @const
     */
    "-instrument.shortName": "-instrument.shortName",

    /**
     * value: "instrument.categorization.ddv.level1.name"
     * @const
     */
    "instrument.categorization.ddv.level1.name": "instrument.categorization.ddv.level1.name",

    /**
     * value: "-instrument.categorization.ddv.level1.name"
     * @const
     */
    "-instrument.categorization.ddv.level1.name": "-instrument.categorization.ddv.level1.name",

    /**
     * value: "instrument.categorization.ddv.level2.name"
     * @const
     */
    "instrument.categorization.ddv.level2.name": "instrument.categorization.ddv.level2.name",

    /**
     * value: "-instrument.categorization.ddv.level2.name"
     * @const
     */
    "-instrument.categorization.ddv.level2.name": "-instrument.categorization.ddv.level2.name",

    /**
     * value: "instrument.categorization.ddv.level3.name"
     * @const
     */
    "instrument.categorization.ddv.level3.name": "instrument.categorization.ddv.level3.name",

    /**
     * value: "-instrument.categorization.ddv.level3.name"
     * @const
     */
    "-instrument.categorization.ddv.level3.name": "-instrument.categorization.ddv.level3.name",

    /**
     * value: "instrument.categorization.eusipa.level1.name"
     * @const
     */
    "instrument.categorization.eusipa.level1.name": "instrument.categorization.eusipa.level1.name",

    /**
     * value: "-instrument.categorization.eusipa.level1.name"
     * @const
     */
    "-instrument.categorization.eusipa.level1.name": "-instrument.categorization.eusipa.level1.name",

    /**
     * value: "instrument.categorization.eusipa.level2.name"
     * @const
     */
    "instrument.categorization.eusipa.level2.name": "instrument.categorization.eusipa.level2.name",

    /**
     * value: "-instrument.categorization.eusipa.level2.name"
     * @const
     */
    "-instrument.categorization.eusipa.level2.name": "-instrument.categorization.eusipa.level2.name",

    /**
     * value: "instrument.categorization.eusipa.level3.name"
     * @const
     */
    "instrument.categorization.eusipa.level3.name": "instrument.categorization.eusipa.level3.name",

    /**
     * value: "-instrument.categorization.eusipa.level3.name"
     * @const
     */
    "-instrument.categorization.eusipa.level3.name": "-instrument.categorization.eusipa.level3.name",

    /**
     * value: "instrument.lifeCycle.maturity.date"
     * @const
     */
    "instrument.lifeCycle.maturity.date": "instrument.lifeCycle.maturity.date",

    /**
     * value: "-instrument.lifeCycle.maturity.date"
     * @const
     */
    "-instrument.lifeCycle.maturity.date": "-instrument.lifeCycle.maturity.date",

    /**
     * value: "instrument.lifeCycle.maturity.remainingTermDays"
     * @const
     */
    "instrument.lifeCycle.maturity.remainingTermDays": "instrument.lifeCycle.maturity.remainingTermDays",

    /**
     * value: "-instrument.lifeCycle.maturity.remainingTermDays"
     * @const
     */
    "-instrument.lifeCycle.maturity.remainingTermDays": "-instrument.lifeCycle.maturity.remainingTermDays",

    /**
     * value: "instrument.lifeCycle.maturity.perpetual"
     * @const
     */
    "instrument.lifeCycle.maturity.perpetual": "instrument.lifeCycle.maturity.perpetual",

    /**
     * value: "-instrument.lifeCycle.maturity.perpetual"
     * @const
     */
    "-instrument.lifeCycle.maturity.perpetual": "-instrument.lifeCycle.maturity.perpetual",

    /**
     * value: "instrument.lifeCycle.callable"
     * @const
     */
    "instrument.lifeCycle.callable": "instrument.lifeCycle.callable",

    /**
     * value: "-instrument.lifeCycle.callable"
     * @const
     */
    "-instrument.lifeCycle.callable": "-instrument.lifeCycle.callable",

    /**
     * value: "instrument.lifeCycle.valuation"
     * @const
     */
    "instrument.lifeCycle.valuation": "instrument.lifeCycle.valuation",

    /**
     * value: "-instrument.lifeCycle.valuation"
     * @const
     */
    "-instrument.lifeCycle.valuation": "-instrument.lifeCycle.valuation",

    /**
     * value: "instrument.lifeCycle.repayment"
     * @const
     */
    "instrument.lifeCycle.repayment": "instrument.lifeCycle.repayment",

    /**
     * value: "-instrument.lifeCycle.repayment"
     * @const
     */
    "-instrument.lifeCycle.repayment": "-instrument.lifeCycle.repayment",

    /**
     * value: "instrument.issuer.name"
     * @const
     */
    "instrument.issuer.name": "instrument.issuer.name",

    /**
     * value: "-instrument.issuer.name"
     * @const
     */
    "-instrument.issuer.name": "-instrument.issuer.name",

    /**
     * value: "instrument.issuer.group.name"
     * @const
     */
    "instrument.issuer.group.name": "instrument.issuer.group.name",

    /**
     * value: "-instrument.issuer.group.name"
     * @const
     */
    "-instrument.issuer.group.name": "-instrument.issuer.group.name",

    /**
     * value: "instrument.exercise.right"
     * @const
     */
    "instrument.exercise.right": "instrument.exercise.right",

    /**
     * value: "-instrument.exercise.right"
     * @const
     */
    "-instrument.exercise.right": "-instrument.exercise.right",

    /**
     * value: "instrument.exercise.style"
     * @const
     */
    "instrument.exercise.style": "instrument.exercise.style",

    /**
     * value: "-instrument.exercise.style"
     * @const
     */
    "-instrument.exercise.style": "-instrument.exercise.style",

    /**
     * value: "instrument.settlement"
     * @const
     */
    "instrument.settlement": "instrument.settlement",

    /**
     * value: "-instrument.settlement"
     * @const
     */
    "-instrument.settlement": "-instrument.settlement",

    /**
     * value: "instrument.quanto"
     * @const
     */
    "instrument.quanto": "instrument.quanto",

    /**
     * value: "-instrument.quanto"
     * @const
     */
    "-instrument.quanto": "-instrument.quanto",

    /**
     * value: "instrument.capitalProtection"
     * @const
     */
    "instrument.capitalProtection": "instrument.capitalProtection",

    /**
     * value: "-instrument.capitalProtection"
     * @const
     */
    "-instrument.capitalProtection": "-instrument.capitalProtection",

    /**
     * value: "instrument.underlying.name"
     * @const
     */
    "instrument.underlying.name": "instrument.underlying.name",

    /**
     * value: "-instrument.underlying.name"
     * @const
     */
    "-instrument.underlying.name": "-instrument.underlying.name",

    /**
     * value: "instrument.underlying.valueUnit.code"
     * @const
     */
    "instrument.underlying.valueUnit.code": "instrument.underlying.valueUnit.code",

    /**
     * value: "-instrument.underlying.valueUnit.code"
     * @const
     */
    "-instrument.underlying.valueUnit.code": "-instrument.underlying.valueUnit.code",

    /**
     * value: "instrument.underlying.notation.instrument.typeComposite"
     * @const
     */
    "instrument.underlying.notation.instrument.typeComposite": "instrument.underlying.notation.instrument.typeComposite",

    /**
     * value: "-instrument.underlying.notation.instrument.typeComposite"
     * @const
     */
    "-instrument.underlying.notation.instrument.typeComposite": "-instrument.underlying.notation.instrument.typeComposite",

    /**
     * value: "instrument.strike.value"
     * @const
     */
    "instrument.strike.value": "instrument.strike.value",

    /**
     * value: "-instrument.strike.value"
     * @const
     */
    "-instrument.strike.value": "-instrument.strike.value",

    /**
     * value: "instrument.strike.distance.absolute"
     * @const
     */
    "instrument.strike.distance.absolute": "instrument.strike.distance.absolute",

    /**
     * value: "-instrument.strike.distance.absolute"
     * @const
     */
    "-instrument.strike.distance.absolute": "-instrument.strike.distance.absolute",

    /**
     * value: "instrument.strike.distance.relative"
     * @const
     */
    "instrument.strike.distance.relative": "instrument.strike.distance.relative",

    /**
     * value: "-instrument.strike.distance.relative"
     * @const
     */
    "-instrument.strike.distance.relative": "-instrument.strike.distance.relative",

    /**
     * value: "instrument.bonusLevel.value"
     * @const
     */
    "instrument.bonusLevel.value": "instrument.bonusLevel.value",

    /**
     * value: "-instrument.bonusLevel.value"
     * @const
     */
    "-instrument.bonusLevel.value": "-instrument.bonusLevel.value",

    /**
     * value: "instrument.bonusLevel.distance.absolute"
     * @const
     */
    "instrument.bonusLevel.distance.absolute": "instrument.bonusLevel.distance.absolute",

    /**
     * value: "-instrument.bonusLevel.distance.absolute"
     * @const
     */
    "-instrument.bonusLevel.distance.absolute": "-instrument.bonusLevel.distance.absolute",

    /**
     * value: "instrument.bonusLevel.distance.relative"
     * @const
     */
    "instrument.bonusLevel.distance.relative": "instrument.bonusLevel.distance.relative",

    /**
     * value: "-instrument.bonusLevel.distance.relative"
     * @const
     */
    "-instrument.bonusLevel.distance.relative": "-instrument.bonusLevel.distance.relative",

    /**
     * value: "instrument.cap.value"
     * @const
     */
    "instrument.cap.value": "instrument.cap.value",

    /**
     * value: "-instrument.cap.value"
     * @const
     */
    "-instrument.cap.value": "-instrument.cap.value",

    /**
     * value: "instrument.cap.distance.absolute"
     * @const
     */
    "instrument.cap.distance.absolute": "instrument.cap.distance.absolute",

    /**
     * value: "-instrument.cap.distance.absolute"
     * @const
     */
    "-instrument.cap.distance.absolute": "-instrument.cap.distance.absolute",

    /**
     * value: "instrument.cap.distance.relative"
     * @const
     */
    "instrument.cap.distance.relative": "instrument.cap.distance.relative",

    /**
     * value: "-instrument.cap.distance.relative"
     * @const
     */
    "-instrument.cap.distance.relative": "-instrument.cap.distance.relative",

    /**
     * value: "instrument.cap.cashFlow"
     * @const
     */
    "instrument.cap.cashFlow": "instrument.cap.cashFlow",

    /**
     * value: "-instrument.cap.cashFlow"
     * @const
     */
    "-instrument.cap.cashFlow": "-instrument.cap.cashFlow",

    /**
     * value: "instrument.knockOut.observation.type"
     * @const
     */
    "instrument.knockOut.observation.type": "instrument.knockOut.observation.type",

    /**
     * value: "-instrument.knockOut.observation.type"
     * @const
     */
    "-instrument.knockOut.observation.type": "-instrument.knockOut.observation.type",

    /**
     * value: "instrument.knockOut.value"
     * @const
     */
    "instrument.knockOut.value": "instrument.knockOut.value",

    /**
     * value: "-instrument.knockOut.value"
     * @const
     */
    "-instrument.knockOut.value": "-instrument.knockOut.value",

    /**
     * value: "instrument.knockOut.distance.absolute"
     * @const
     */
    "instrument.knockOut.distance.absolute": "instrument.knockOut.distance.absolute",

    /**
     * value: "-instrument.knockOut.distance.absolute"
     * @const
     */
    "-instrument.knockOut.distance.absolute": "-instrument.knockOut.distance.absolute",

    /**
     * value: "instrument.knockOut.distance.relative"
     * @const
     */
    "instrument.knockOut.distance.relative": "instrument.knockOut.distance.relative",

    /**
     * value: "-instrument.knockOut.distance.relative"
     * @const
     */
    "-instrument.knockOut.distance.relative": "-instrument.knockOut.distance.relative",

    /**
     * value: "instrument.knockOut.breach.breached"
     * @const
     */
    "instrument.knockOut.breach.breached": "instrument.knockOut.breach.breached",

    /**
     * value: "-instrument.knockOut.breach.breached"
     * @const
     */
    "-instrument.knockOut.breach.breached": "-instrument.knockOut.breach.breached",

    /**
     * value: "instrument.knockOut.breach.datetime"
     * @const
     */
    "instrument.knockOut.breach.datetime": "instrument.knockOut.breach.datetime",

    /**
     * value: "-instrument.knockOut.breach.datetime"
     * @const
     */
    "-instrument.knockOut.breach.datetime": "-instrument.knockOut.breach.datetime",

    /**
     * value: "instrument.knockIn.observation.type"
     * @const
     */
    "instrument.knockIn.observation.type": "instrument.knockIn.observation.type",

    /**
     * value: "-instrument.knockIn.observation.type"
     * @const
     */
    "-instrument.knockIn.observation.type": "-instrument.knockIn.observation.type",

    /**
     * value: "instrument.knockIn.value"
     * @const
     */
    "instrument.knockIn.value": "instrument.knockIn.value",

    /**
     * value: "-instrument.knockIn.value"
     * @const
     */
    "-instrument.knockIn.value": "-instrument.knockIn.value",

    /**
     * value: "instrument.knockIn.distance.absolute"
     * @const
     */
    "instrument.knockIn.distance.absolute": "instrument.knockIn.distance.absolute",

    /**
     * value: "-instrument.knockIn.distance.absolute"
     * @const
     */
    "-instrument.knockIn.distance.absolute": "-instrument.knockIn.distance.absolute",

    /**
     * value: "instrument.knockIn.distance.relative"
     * @const
     */
    "instrument.knockIn.distance.relative": "instrument.knockIn.distance.relative",

    /**
     * value: "-instrument.knockIn.distance.relative"
     * @const
     */
    "-instrument.knockIn.distance.relative": "-instrument.knockIn.distance.relative",

    /**
     * value: "instrument.knockIn.breach.breached"
     * @const
     */
    "instrument.knockIn.breach.breached": "instrument.knockIn.breach.breached",

    /**
     * value: "-instrument.knockIn.breach.breached"
     * @const
     */
    "-instrument.knockIn.breach.breached": "-instrument.knockIn.breach.breached",

    /**
     * value: "instrument.knockIn.breach.datetime"
     * @const
     */
    "instrument.knockIn.breach.datetime": "instrument.knockIn.breach.datetime",

    /**
     * value: "-instrument.knockIn.breach.datetime"
     * @const
     */
    "-instrument.knockIn.breach.datetime": "-instrument.knockIn.breach.datetime",

    /**
     * value: "instrument.lockOut.observation.type"
     * @const
     */
    "instrument.lockOut.observation.type": "instrument.lockOut.observation.type",

    /**
     * value: "-instrument.lockOut.observation.type"
     * @const
     */
    "-instrument.lockOut.observation.type": "-instrument.lockOut.observation.type",

    /**
     * value: "instrument.lockOut.value"
     * @const
     */
    "instrument.lockOut.value": "instrument.lockOut.value",

    /**
     * value: "-instrument.lockOut.value"
     * @const
     */
    "-instrument.lockOut.value": "-instrument.lockOut.value",

    /**
     * value: "instrument.lockOut.distance.absolute"
     * @const
     */
    "instrument.lockOut.distance.absolute": "instrument.lockOut.distance.absolute",

    /**
     * value: "-instrument.lockOut.distance.absolute"
     * @const
     */
    "-instrument.lockOut.distance.absolute": "-instrument.lockOut.distance.absolute",

    /**
     * value: "instrument.lockOut.distance.relative"
     * @const
     */
    "instrument.lockOut.distance.relative": "instrument.lockOut.distance.relative",

    /**
     * value: "-instrument.lockOut.distance.relative"
     * @const
     */
    "-instrument.lockOut.distance.relative": "-instrument.lockOut.distance.relative",

    /**
     * value: "instrument.lockOut.cashFlow"
     * @const
     */
    "instrument.lockOut.cashFlow": "instrument.lockOut.cashFlow",

    /**
     * value: "-instrument.lockOut.cashFlow"
     * @const
     */
    "-instrument.lockOut.cashFlow": "-instrument.lockOut.cashFlow",

    /**
     * value: "instrument.lockIn.observation.type"
     * @const
     */
    "instrument.lockIn.observation.type": "instrument.lockIn.observation.type",

    /**
     * value: "-instrument.lockIn.observation.type"
     * @const
     */
    "-instrument.lockIn.observation.type": "-instrument.lockIn.observation.type",

    /**
     * value: "instrument.lockIn.value"
     * @const
     */
    "instrument.lockIn.value": "instrument.lockIn.value",

    /**
     * value: "-instrument.lockIn.value"
     * @const
     */
    "-instrument.lockIn.value": "-instrument.lockIn.value",

    /**
     * value: "instrument.lockIn.distance.absolute"
     * @const
     */
    "instrument.lockIn.distance.absolute": "instrument.lockIn.distance.absolute",

    /**
     * value: "-instrument.lockIn.distance.absolute"
     * @const
     */
    "-instrument.lockIn.distance.absolute": "-instrument.lockIn.distance.absolute",

    /**
     * value: "instrument.lockIn.distance.relative"
     * @const
     */
    "instrument.lockIn.distance.relative": "instrument.lockIn.distance.relative",

    /**
     * value: "-instrument.lockIn.distance.relative"
     * @const
     */
    "-instrument.lockIn.distance.relative": "-instrument.lockIn.distance.relative",

    /**
     * value: "instrument.lockIn.cashFlow"
     * @const
     */
    "instrument.lockIn.cashFlow": "instrument.lockIn.cashFlow",

    /**
     * value: "-instrument.lockIn.cashFlow"
     * @const
     */
    "-instrument.lockIn.cashFlow": "-instrument.lockIn.cashFlow",

    /**
     * value: "instrument.capitalGuarantee.value"
     * @const
     */
    "instrument.capitalGuarantee.value": "instrument.capitalGuarantee.value",

    /**
     * value: "-instrument.capitalGuarantee.value"
     * @const
     */
    "-instrument.capitalGuarantee.value": "-instrument.capitalGuarantee.value",

    /**
     * value: "instrument.capitalGuarantee.distance.absolute"
     * @const
     */
    "instrument.capitalGuarantee.distance.absolute": "instrument.capitalGuarantee.distance.absolute",

    /**
     * value: "-instrument.capitalGuarantee.distance.absolute"
     * @const
     */
    "-instrument.capitalGuarantee.distance.absolute": "-instrument.capitalGuarantee.distance.absolute",

    /**
     * value: "instrument.capitalGuarantee.distance.relative"
     * @const
     */
    "instrument.capitalGuarantee.distance.relative": "instrument.capitalGuarantee.distance.relative",

    /**
     * value: "-instrument.capitalGuarantee.distance.relative"
     * @const
     */
    "-instrument.capitalGuarantee.distance.relative": "-instrument.capitalGuarantee.distance.relative",

    /**
     * value: "instrument.capitalGuarantee.cashFlow"
     * @const
     */
    "instrument.capitalGuarantee.cashFlow": "instrument.capitalGuarantee.cashFlow",

    /**
     * value: "-instrument.capitalGuarantee.cashFlow"
     * @const
     */
    "-instrument.capitalGuarantee.cashFlow": "-instrument.capitalGuarantee.cashFlow",

    /**
     * value: "instrument.couponTriggerLevel.value"
     * @const
     */
    "instrument.couponTriggerLevel.value": "instrument.couponTriggerLevel.value",

    /**
     * value: "-instrument.couponTriggerLevel.value"
     * @const
     */
    "-instrument.couponTriggerLevel.value": "-instrument.couponTriggerLevel.value",

    /**
     * value: "instrument.couponTriggerLevel.distance.absolute"
     * @const
     */
    "instrument.couponTriggerLevel.distance.absolute": "instrument.couponTriggerLevel.distance.absolute",

    /**
     * value: "-instrument.couponTriggerLevel.distance.absolute"
     * @const
     */
    "-instrument.couponTriggerLevel.distance.absolute": "-instrument.couponTriggerLevel.distance.absolute",

    /**
     * value: "instrument.couponTriggerLevel.distance.relative"
     * @const
     */
    "instrument.couponTriggerLevel.distance.relative": "instrument.couponTriggerLevel.distance.relative",

    /**
     * value: "-instrument.couponTriggerLevel.distance.relative"
     * @const
     */
    "-instrument.couponTriggerLevel.distance.relative": "-instrument.couponTriggerLevel.distance.relative",

    /**
     * value: "instrument.couponTriggerLevel.cashFlow"
     * @const
     */
    "instrument.couponTriggerLevel.cashFlow": "instrument.couponTriggerLevel.cashFlow",

    /**
     * value: "-instrument.couponTriggerLevel.cashFlow"
     * @const
     */
    "-instrument.couponTriggerLevel.cashFlow": "-instrument.couponTriggerLevel.cashFlow",

    /**
     * value: "instrument.rangeKnockOut.observation.type"
     * @const
     */
    "instrument.rangeKnockOut.observation.type": "instrument.rangeKnockOut.observation.type",

    /**
     * value: "-instrument.rangeKnockOut.observation.type"
     * @const
     */
    "-instrument.rangeKnockOut.observation.type": "-instrument.rangeKnockOut.observation.type",

    /**
     * value: "instrument.rangeKnockOut.upper.value"
     * @const
     */
    "instrument.rangeKnockOut.upper.value": "instrument.rangeKnockOut.upper.value",

    /**
     * value: "-instrument.rangeKnockOut.upper.value"
     * @const
     */
    "-instrument.rangeKnockOut.upper.value": "-instrument.rangeKnockOut.upper.value",

    /**
     * value: "instrument.rangeKnockOut.lower.value"
     * @const
     */
    "instrument.rangeKnockOut.lower.value": "instrument.rangeKnockOut.lower.value",

    /**
     * value: "-instrument.rangeKnockOut.lower.value"
     * @const
     */
    "-instrument.rangeKnockOut.lower.value": "-instrument.rangeKnockOut.lower.value",

    /**
     * value: "instrument.rangeKnockOut.breach.breached"
     * @const
     */
    "instrument.rangeKnockOut.breach.breached": "instrument.rangeKnockOut.breach.breached",

    /**
     * value: "-instrument.rangeKnockOut.breach.breached"
     * @const
     */
    "-instrument.rangeKnockOut.breach.breached": "-instrument.rangeKnockOut.breach.breached",

    /**
     * value: "instrument.rangeKnockOut.breach.datetime"
     * @const
     */
    "instrument.rangeKnockOut.breach.datetime": "instrument.rangeKnockOut.breach.datetime",

    /**
     * value: "-instrument.rangeKnockOut.breach.datetime"
     * @const
     */
    "-instrument.rangeKnockOut.breach.datetime": "-instrument.rangeKnockOut.breach.datetime",

    /**
     * value: "instrument.rangeKnockOut.cashFlow"
     * @const
     */
    "instrument.rangeKnockOut.cashFlow": "instrument.rangeKnockOut.cashFlow",

    /**
     * value: "-instrument.rangeKnockOut.cashFlow"
     * @const
     */
    "-instrument.rangeKnockOut.cashFlow": "-instrument.rangeKnockOut.cashFlow",

    /**
     * value: "instrument.participation"
     * @const
     */
    "instrument.participation": "instrument.participation",

    /**
     * value: "-instrument.participation"
     * @const
     */
    "-instrument.participation": "-instrument.participation",

    /**
     * value: "instrument.constantLeverage"
     * @const
     */
    "instrument.constantLeverage": "instrument.constantLeverage",

    /**
     * value: "-instrument.constantLeverage"
     * @const
     */
    "-instrument.constantLeverage": "-instrument.constantLeverage",

    /**
     * value: "instrument.nominalCurrency.isoCode"
     * @const
     */
    "instrument.nominalCurrency.isoCode": "instrument.nominalCurrency.isoCode",

    /**
     * value: "-instrument.nominalCurrency.isoCode"
     * @const
     */
    "-instrument.nominalCurrency.isoCode": "-instrument.nominalCurrency.isoCode",

    /**
     * value: "instrument.currentInterestRate.type"
     * @const
     */
    "instrument.currentInterestRate.type": "instrument.currentInterestRate.type",

    /**
     * value: "-instrument.currentInterestRate.type"
     * @const
     */
    "-instrument.currentInterestRate.type": "-instrument.currentInterestRate.type",

    /**
     * value: "instrument.currentInterestRate.value"
     * @const
     */
    "instrument.currentInterestRate.value": "instrument.currentInterestRate.value",

    /**
     * value: "-instrument.currentInterestRate.value"
     * @const
     */
    "-instrument.currentInterestRate.value": "-instrument.currentInterestRate.value",

    /**
     * value: "keyFigures.bonusYield.absolute"
     * @const
     */
    "keyFigures.bonusYield.absolute": "keyFigures.bonusYield.absolute",

    /**
     * value: "-keyFigures.bonusYield.absolute"
     * @const
     */
    "-keyFigures.bonusYield.absolute": "-keyFigures.bonusYield.absolute",

    /**
     * value: "keyFigures.bonusYield.relative"
     * @const
     */
    "keyFigures.bonusYield.relative": "keyFigures.bonusYield.relative",

    /**
     * value: "-keyFigures.bonusYield.relative"
     * @const
     */
    "-keyFigures.bonusYield.relative": "-keyFigures.bonusYield.relative",

    /**
     * value: "keyFigures.bonusYield.annualized"
     * @const
     */
    "keyFigures.bonusYield.annualized": "keyFigures.bonusYield.annualized",

    /**
     * value: "-keyFigures.bonusYield.annualized"
     * @const
     */
    "-keyFigures.bonusYield.annualized": "-keyFigures.bonusYield.annualized",

    /**
     * value: "keyFigures.sidewaysYield.absolute"
     * @const
     */
    "keyFigures.sidewaysYield.absolute": "keyFigures.sidewaysYield.absolute",

    /**
     * value: "-keyFigures.sidewaysYield.absolute"
     * @const
     */
    "-keyFigures.sidewaysYield.absolute": "-keyFigures.sidewaysYield.absolute",

    /**
     * value: "keyFigures.sidewaysYield.relative"
     * @const
     */
    "keyFigures.sidewaysYield.relative": "keyFigures.sidewaysYield.relative",

    /**
     * value: "-keyFigures.sidewaysYield.relative"
     * @const
     */
    "-keyFigures.sidewaysYield.relative": "-keyFigures.sidewaysYield.relative",

    /**
     * value: "keyFigures.sidewaysYield.annualized"
     * @const
     */
    "keyFigures.sidewaysYield.annualized": "keyFigures.sidewaysYield.annualized",

    /**
     * value: "-keyFigures.sidewaysYield.annualized"
     * @const
     */
    "-keyFigures.sidewaysYield.annualized": "-keyFigures.sidewaysYield.annualized",

    /**
     * value: "keyFigures.maximumYield.absolute"
     * @const
     */
    "keyFigures.maximumYield.absolute": "keyFigures.maximumYield.absolute",

    /**
     * value: "-keyFigures.maximumYield.absolute"
     * @const
     */
    "-keyFigures.maximumYield.absolute": "-keyFigures.maximumYield.absolute",

    /**
     * value: "keyFigures.maximumYield.relative"
     * @const
     */
    "keyFigures.maximumYield.relative": "keyFigures.maximumYield.relative",

    /**
     * value: "-keyFigures.maximumYield.relative"
     * @const
     */
    "-keyFigures.maximumYield.relative": "-keyFigures.maximumYield.relative",

    /**
     * value: "keyFigures.maximumYield.annualized"
     * @const
     */
    "keyFigures.maximumYield.annualized": "keyFigures.maximumYield.annualized",

    /**
     * value: "-keyFigures.maximumYield.annualized"
     * @const
     */
    "-keyFigures.maximumYield.annualized": "-keyFigures.maximumYield.annualized",

    /**
     * value: "keyFigures.agio.absolute"
     * @const
     */
    "keyFigures.agio.absolute": "keyFigures.agio.absolute",

    /**
     * value: "-keyFigures.agio.absolute"
     * @const
     */
    "-keyFigures.agio.absolute": "-keyFigures.agio.absolute",

    /**
     * value: "keyFigures.agio.relative"
     * @const
     */
    "keyFigures.agio.relative": "keyFigures.agio.relative",

    /**
     * value: "-keyFigures.agio.relative"
     * @const
     */
    "-keyFigures.agio.relative": "-keyFigures.agio.relative",

    /**
     * value: "keyFigures.agio.annualized"
     * @const
     */
    "keyFigures.agio.annualized": "keyFigures.agio.annualized",

    /**
     * value: "-keyFigures.agio.annualized"
     * @const
     */
    "-keyFigures.agio.annualized": "-keyFigures.agio.annualized",

    /**
     * value: "keyFigures.discount.absolute"
     * @const
     */
    "keyFigures.discount.absolute": "keyFigures.discount.absolute",

    /**
     * value: "-keyFigures.discount.absolute"
     * @const
     */
    "-keyFigures.discount.absolute": "-keyFigures.discount.absolute",

    /**
     * value: "keyFigures.discount.relative"
     * @const
     */
    "keyFigures.discount.relative": "keyFigures.discount.relative",

    /**
     * value: "-keyFigures.discount.relative"
     * @const
     */
    "-keyFigures.discount.relative": "-keyFigures.discount.relative",

    /**
     * value: "keyFigures.breakEven.breakEvenPoint"
     * @const
     */
    "keyFigures.breakEven.breakEvenPoint": "keyFigures.breakEven.breakEvenPoint",

    /**
     * value: "-keyFigures.breakEven.breakEvenPoint"
     * @const
     */
    "-keyFigures.breakEven.breakEvenPoint": "-keyFigures.breakEven.breakEvenPoint",

    /**
     * value: "keyFigures.spread.harmonized"
     * @const
     */
    "keyFigures.spread.harmonized": "keyFigures.spread.harmonized",

    /**
     * value: "-keyFigures.spread.harmonized"
     * @const
     */
    "-keyFigures.spread.harmonized": "-keyFigures.spread.harmonized",

    /**
     * value: "keyFigures.spread.relative"
     * @const
     */
    "keyFigures.spread.relative": "keyFigures.spread.relative",

    /**
     * value: "-keyFigures.spread.relative"
     * @const
     */
    "-keyFigures.spread.relative": "-keyFigures.spread.relative",

    /**
     * value: "keyFigures.delta.effective"
     * @const
     */
    "keyFigures.delta.effective": "keyFigures.delta.effective",

    /**
     * value: "-keyFigures.delta.effective"
     * @const
     */
    "-keyFigures.delta.effective": "-keyFigures.delta.effective",

    /**
     * value: "keyFigures.delta.unadjusted"
     * @const
     */
    "keyFigures.delta.unadjusted": "keyFigures.delta.unadjusted",

    /**
     * value: "-keyFigures.delta.unadjusted"
     * @const
     */
    "-keyFigures.delta.unadjusted": "-keyFigures.delta.unadjusted",

    /**
     * value: "keyFigures.thetaOneWeek.effective"
     * @const
     */
    "keyFigures.thetaOneWeek.effective": "keyFigures.thetaOneWeek.effective",

    /**
     * value: "-keyFigures.thetaOneWeek.effective"
     * @const
     */
    "-keyFigures.thetaOneWeek.effective": "-keyFigures.thetaOneWeek.effective",

    /**
     * value: "keyFigures.thetaOneWeek.unadjusted"
     * @const
     */
    "keyFigures.thetaOneWeek.unadjusted": "keyFigures.thetaOneWeek.unadjusted",

    /**
     * value: "-keyFigures.thetaOneWeek.unadjusted"
     * @const
     */
    "-keyFigures.thetaOneWeek.unadjusted": "-keyFigures.thetaOneWeek.unadjusted",

    /**
     * value: "keyFigures.vega.effective"
     * @const
     */
    "keyFigures.vega.effective": "keyFigures.vega.effective",

    /**
     * value: "-keyFigures.vega.effective"
     * @const
     */
    "-keyFigures.vega.effective": "-keyFigures.vega.effective",

    /**
     * value: "keyFigures.vega.unadjusted"
     * @const
     */
    "keyFigures.vega.unadjusted": "keyFigures.vega.unadjusted",

    /**
     * value: "-keyFigures.vega.unadjusted"
     * @const
     */
    "-keyFigures.vega.unadjusted": "-keyFigures.vega.unadjusted",

    /**
     * value: "keyFigures.leverage"
     * @const
     */
    "keyFigures.leverage": "keyFigures.leverage",

    /**
     * value: "-keyFigures.leverage"
     * @const
     */
    "-keyFigures.leverage": "-keyFigures.leverage",

    /**
     * value: "keyFigures.omega"
     * @const
     */
    "keyFigures.omega": "keyFigures.omega",

    /**
     * value: "-keyFigures.omega"
     * @const
     */
    "-keyFigures.omega": "-keyFigures.omega",

    /**
     * value: "keyFigures.impliedVolatility"
     * @const
     */
    "keyFigures.impliedVolatility": "keyFigures.impliedVolatility",

    /**
     * value: "-keyFigures.impliedVolatility"
     * @const
     */
    "-keyFigures.impliedVolatility": "-keyFigures.impliedVolatility",

    /**
     * value: "keyFigures.intrinsicValue"
     * @const
     */
    "keyFigures.intrinsicValue": "keyFigures.intrinsicValue",

    /**
     * value: "-keyFigures.intrinsicValue"
     * @const
     */
    "-keyFigures.intrinsicValue": "-keyFigures.intrinsicValue",

    /**
     * value: "keyFigures.timeValue"
     * @const
     */
    "keyFigures.timeValue": "keyFigures.timeValue",

    /**
     * value: "-keyFigures.timeValue"
     * @const
     */
    "-keyFigures.timeValue": "-keyFigures.timeValue",

    /**
     * value: "keyFigures.outperformancePoint"
     * @const
     */
    "keyFigures.outperformancePoint": "keyFigures.outperformancePoint",

    /**
     * value: "-keyFigures.outperformancePoint"
     * @const
     */
    "-keyFigures.outperformancePoint": "-keyFigures.outperformancePoint",

    /**
     * value: "keyFigures.parity"
     * @const
     */
    "keyFigures.parity": "keyFigures.parity",

    /**
     * value: "-keyFigures.parity"
     * @const
     */
    "-keyFigures.parity": "-keyFigures.parity",

    /**
     * value: "performance.intraday"
     * @const
     */
    "performance.intraday": "performance.intraday",

    /**
     * value: "-performance.intraday"
     * @const
     */
    "-performance.intraday": "-performance.intraday",

    /**
     * value: "performance.sinceIssue.ask"
     * @const
     */
    "performance.sinceIssue.ask": "performance.sinceIssue.ask",

    /**
     * value: "-performance.sinceIssue.ask"
     * @const
     */
    "-performance.sinceIssue.ask": "-performance.sinceIssue.ask",

    /**
     * value: "performance.sinceIssue.bid"
     * @const
     */
    "performance.sinceIssue.bid": "performance.sinceIssue.bid",

    /**
     * value: "-performance.sinceIssue.bid"
     * @const
     */
    "-performance.sinceIssue.bid": "-performance.sinceIssue.bid",

    /**
     * value: "performance.endOfDay.day1"
     * @const
     */
    "performance.endOfDay.day1": "performance.endOfDay.day1",

    /**
     * value: "-performance.endOfDay.day1"
     * @const
     */
    "-performance.endOfDay.day1": "-performance.endOfDay.day1",

    /**
     * value: "performance.endOfDay.week1"
     * @const
     */
    "performance.endOfDay.week1": "performance.endOfDay.week1",

    /**
     * value: "-performance.endOfDay.week1"
     * @const
     */
    "-performance.endOfDay.week1": "-performance.endOfDay.week1",

    /**
     * value: "performance.endOfDay.month1"
     * @const
     */
    "performance.endOfDay.month1": "performance.endOfDay.month1",

    /**
     * value: "-performance.endOfDay.month1"
     * @const
     */
    "-performance.endOfDay.month1": "-performance.endOfDay.month1",

    /**
     * value: "performance.endOfDay.months3"
     * @const
     */
    "performance.endOfDay.months3": "performance.endOfDay.months3",

    /**
     * value: "-performance.endOfDay.months3"
     * @const
     */
    "-performance.endOfDay.months3": "-performance.endOfDay.months3",

    /**
     * value: "performance.endOfDay.months6"
     * @const
     */
    "performance.endOfDay.months6": "performance.endOfDay.months6",

    /**
     * value: "-performance.endOfDay.months6"
     * @const
     */
    "-performance.endOfDay.months6": "-performance.endOfDay.months6",

    /**
     * value: "performance.endOfDay.year1"
     * @const
     */
    "performance.endOfDay.year1": "performance.endOfDay.year1",

    /**
     * value: "-performance.endOfDay.year1"
     * @const
     */
    "-performance.endOfDay.year1": "-performance.endOfDay.year1",

    /**
     * value: "performance.endOfDay.years3"
     * @const
     */
    "performance.endOfDay.years3": "performance.endOfDay.years3",

    /**
     * value: "-performance.endOfDay.years3"
     * @const
     */
    "-performance.endOfDay.years3": "-performance.endOfDay.years3",

    /**
     * value: "performance.endOfDay.years5"
     * @const
     */
    "performance.endOfDay.years5": "performance.endOfDay.years5",

    /**
     * value: "-performance.endOfDay.years5"
     * @const
     */
    "-performance.endOfDay.years5": "-performance.endOfDay.years5",

    /**
     * value: "performance.endOfDay.yearToDate"
     * @const
     */
    "performance.endOfDay.yearToDate": "performance.endOfDay.yearToDate",

    /**
     * value: "-performance.endOfDay.yearToDate"
     * @const
     */
    "-performance.endOfDay.yearToDate": "-performance.endOfDay.yearToDate",

    /**
     * value: "volatility.week1"
     * @const
     */
    "volatility.week1": "volatility.week1",

    /**
     * value: "-volatility.week1"
     * @const
     */
    "-volatility.week1": "-volatility.week1",

    /**
     * value: "volatility.month1"
     * @const
     */
    "volatility.month1": "volatility.month1",

    /**
     * value: "-volatility.month1"
     * @const
     */
    "-volatility.month1": "-volatility.month1",

    /**
     * value: "volatility.months3"
     * @const
     */
    "volatility.months3": "volatility.months3",

    /**
     * value: "-volatility.months3"
     * @const
     */
    "-volatility.months3": "-volatility.months3",

    /**
     * value: "volatility.months6"
     * @const
     */
    "volatility.months6": "volatility.months6",

    /**
     * value: "-volatility.months6"
     * @const
     */
    "-volatility.months6": "-volatility.months6",

    /**
     * value: "volatility.year1"
     * @const
     */
    "volatility.year1": "volatility.year1",

    /**
     * value: "-volatility.year1"
     * @const
     */
    "-volatility.year1": "-volatility.year1",

    /**
     * value: "volatility.years3"
     * @const
     */
    "volatility.years3": "volatility.years3",

    /**
     * value: "-volatility.years3"
     * @const
     */
    "-volatility.years3": "-volatility.years3",

    /**
     * value: "volatility.years5"
     * @const
     */
    "volatility.years5": "volatility.years5",

    /**
     * value: "-volatility.years5"
     * @const
     */
    "-volatility.years5": "-volatility.years5",

    /**
     * value: "volatility.yearToDate"
     * @const
     */
    "volatility.yearToDate": "volatility.yearToDate",

    /**
     * value: "-volatility.yearToDate"
     * @const
     */
    "-volatility.yearToDate": "-volatility.yearToDate"
};



export default PostSecuritizedDerivativeNotationScreenerSearchRequestMeta;

