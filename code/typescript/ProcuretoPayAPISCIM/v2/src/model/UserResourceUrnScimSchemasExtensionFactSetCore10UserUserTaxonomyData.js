/**
 * FactSet SCIM API
 * FactSet's SCIM API implementation.
 *
 * The version of the OpenAPI document: 2.6.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UserClassResourceReference from './UserClassResourceReference';
import UserPositionResourceReference from './UserPositionResourceReference';

/**
 * The UserResourceUrnScimSchemasExtensionFactSetCore10UserUserTaxonomyData model module.
 * @module model/UserResourceUrnScimSchemasExtensionFactSetCore10UserUserTaxonomyData
 */
class UserResourceUrnScimSchemasExtensionFactSetCore10UserUserTaxonomyData {
    /**
     * Constructs a new <code>UserResourceUrnScimSchemasExtensionFactSetCore10UserUserTaxonomyData</code>.
     * FactSet&#39;s classification of the user. Use taxonomy is composed of a user class as well as a user position.
     * @alias module:model/UserResourceUrnScimSchemasExtensionFactSetCore10UserUserTaxonomyData
     * @param userClass {module:model/UserClassResourceReference} 
     * @param userPosition {module:model/UserPositionResourceReference} 
     */
    constructor(userClass, userPosition) { 
        
        UserResourceUrnScimSchemasExtensionFactSetCore10UserUserTaxonomyData.initialize(this, userClass, userPosition);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, userClass, userPosition) { 
        obj['userClass'] = userClass;
        obj['userPosition'] = userPosition;
    }

    /**
     * Constructs a <code>UserResourceUrnScimSchemasExtensionFactSetCore10UserUserTaxonomyData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserResourceUrnScimSchemasExtensionFactSetCore10UserUserTaxonomyData} obj Optional instance to populate.
     * @return {module:model/UserResourceUrnScimSchemasExtensionFactSetCore10UserUserTaxonomyData} The populated <code>UserResourceUrnScimSchemasExtensionFactSetCore10UserUserTaxonomyData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserResourceUrnScimSchemasExtensionFactSetCore10UserUserTaxonomyData();

            if (data.hasOwnProperty('userClass')) {
                obj['userClass'] = UserClassResourceReference.constructFromObject(data['userClass']);
            }
            if (data.hasOwnProperty('userPosition')) {
                obj['userPosition'] = UserPositionResourceReference.constructFromObject(data['userPosition']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/UserClassResourceReference} userClass
 */
UserResourceUrnScimSchemasExtensionFactSetCore10UserUserTaxonomyData.prototype['userClass'] = undefined;

/**
 * @member {module:model/UserPositionResourceReference} userPosition
 */
UserResourceUrnScimSchemasExtensionFactSetCore10UserUserTaxonomyData.prototype['userPosition'] = undefined;






export default UserResourceUrnScimSchemasExtensionFactSetCore10UserUserTaxonomyData;

