/**
 * FactSet SCIM API
 * FactSet's SCIM API implementation.
 *
 * The version of the OpenAPI document: 2.4.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UserResourceVRSDomainDataTenancies from './UserResourceVRSDomainDataTenancies';

/**
 * The UserResourceVRSDomainData model module.
 * @module model/UserResourceVRSDomainData
 */
class UserResourceVRSDomainData {
    /**
     * Constructs a new <code>UserResourceVRSDomainData</code>.
     * @alias module:model/UserResourceVRSDomainData
     * @param domainCode {String} Unique identifier for the Vermilion domain.
     * @param tenancies {module:model/UserResourceVRSDomainDataTenancies} 
     * @param isAdministrator {Boolean} Whether the User is an administrator in the associated domain.
     */
    constructor(domainCode, tenancies, isAdministrator) { 
        
        UserResourceVRSDomainData.initialize(this, domainCode, tenancies, isAdministrator);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, domainCode, tenancies, isAdministrator) { 
        obj['domainCode'] = domainCode;
        obj['tenancies'] = tenancies;
        obj['isAdministrator'] = isAdministrator;
    }

    /**
     * Constructs a <code>UserResourceVRSDomainData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserResourceVRSDomainData} obj Optional instance to populate.
     * @return {module:model/UserResourceVRSDomainData} The populated <code>UserResourceVRSDomainData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserResourceVRSDomainData();

            if (data.hasOwnProperty('domainCode')) {
                obj['domainCode'] = ApiClient.convertToType(data['domainCode'], 'String');
            }
            if (data.hasOwnProperty('tenancies')) {
                obj['tenancies'] = UserResourceVRSDomainDataTenancies.constructFromObject(data['tenancies']);
            }
            if (data.hasOwnProperty('isAdministrator')) {
                obj['isAdministrator'] = ApiClient.convertToType(data['isAdministrator'], 'Boolean');
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Unique identifier for the Vermilion domain.
 * @member {String} domainCode
 */
UserResourceVRSDomainData.prototype['domainCode'] = undefined;

/**
 * @member {module:model/UserResourceVRSDomainDataTenancies} tenancies
 */
UserResourceVRSDomainData.prototype['tenancies'] = undefined;

/**
 * Whether the User is an administrator in the associated domain.
 * @member {Boolean} isAdministrator
 */
UserResourceVRSDomainData.prototype['isAdministrator'] = undefined;

/**
 * Password of the User in the associated domain. May be null upon creation of the User, but afterward may not change from a non-null to a null value.
 * @member {String} password
 */
UserResourceVRSDomainData.prototype['password'] = undefined;






export default UserResourceVRSDomainData;

