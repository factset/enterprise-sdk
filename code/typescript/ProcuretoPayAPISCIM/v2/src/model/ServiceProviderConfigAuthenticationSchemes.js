/**
 * FactSet SCIM API
 * FactSet's SCIM API implementation.
 *
 * The version of the OpenAPI document: 2.4.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ServiceProviderConfigAuthenticationSchemes model module.
 * @module model/ServiceProviderConfigAuthenticationSchemes
 */
class ServiceProviderConfigAuthenticationSchemes {
    /**
     * Constructs a new <code>ServiceProviderConfigAuthenticationSchemes</code>.
     * A complex type that specifies supported authentication scheme properties.
     * @alias module:model/ServiceProviderConfigAuthenticationSchemes
     * @param type {String} The authentication scheme.
     * @param name {String} The common authentication scheme name, e.g., HTTP Basic.
     * @param description {String} A description of the authentication scheme.
     */
    constructor(type, name, description) { 
        
        ServiceProviderConfigAuthenticationSchemes.initialize(this, type, name, description);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type, name, description) { 
        obj['type'] = type;
        obj['name'] = name;
        obj['description'] = description;
    }

    /**
     * Constructs a <code>ServiceProviderConfigAuthenticationSchemes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServiceProviderConfigAuthenticationSchemes} obj Optional instance to populate.
     * @return {module:model/ServiceProviderConfigAuthenticationSchemes} The populated <code>ServiceProviderConfigAuthenticationSchemes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServiceProviderConfigAuthenticationSchemes();

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('specUri')) {
                obj['specUri'] = ApiClient.convertToType(data['specUri'], 'String');
            }
            if (data.hasOwnProperty('documentationUri')) {
                obj['documentationUri'] = ApiClient.convertToType(data['documentationUri'], 'String');
            }
        }
        return obj;
    }


}

/**
 * The authentication scheme.
 * @member {String} type
 */
ServiceProviderConfigAuthenticationSchemes.prototype['type'] = undefined;

/**
 * The common authentication scheme name, e.g., HTTP Basic.
 * @member {String} name
 */
ServiceProviderConfigAuthenticationSchemes.prototype['name'] = undefined;

/**
 * A description of the authentication scheme.
 * @member {String} description
 */
ServiceProviderConfigAuthenticationSchemes.prototype['description'] = undefined;

/**
 * An HTTP-addressable URL pointing to the authentication scheme's specification.
 * @member {String} specUri
 */
ServiceProviderConfigAuthenticationSchemes.prototype['specUri'] = undefined;

/**
 * An HTTP-addressable URL pointing to the authentication scheme's usage documentation.
 * @member {String} documentationUri
 */
ServiceProviderConfigAuthenticationSchemes.prototype['documentationUri'] = undefined;






export default ServiceProviderConfigAuthenticationSchemes;

