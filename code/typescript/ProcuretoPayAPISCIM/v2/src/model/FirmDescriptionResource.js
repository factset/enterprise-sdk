/**
 * FactSet SCIM API
 * FactSet's SCIM API implementation.
 *
 * The version of the OpenAPI document: 2.6.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FirmDescriptionResourceMeta from './FirmDescriptionResourceMeta';
import UserClassResourceReference from './UserClassResourceReference';

/**
 * The FirmDescriptionResource model module.
 * @module model/FirmDescriptionResource
 */
class FirmDescriptionResource {
    /**
     * Constructs a new <code>FirmDescriptionResource</code>.
     * @alias module:model/FirmDescriptionResource
     * @param name {String} Name of the firm description.
     */
    constructor(name) { 
        
        FirmDescriptionResource.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['name'] = name;
    }

    /**
     * Constructs a <code>FirmDescriptionResource</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FirmDescriptionResource} obj Optional instance to populate.
     * @return {module:model/FirmDescriptionResource} The populated <code>FirmDescriptionResource</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FirmDescriptionResource();

            if (data.hasOwnProperty('schemas')) {
                obj['schemas'] = ApiClient.convertToType(data['schemas'], ['String']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('userClasses')) {
                obj['userClasses'] = ApiClient.convertToType(data['userClasses'], [UserClassResourceReference]);
            }
            if (data.hasOwnProperty('meta')) {
                obj['meta'] = FirmDescriptionResourceMeta.constructFromObject(data['meta']);
            }
        }
        return obj;
    }


}

/**
 * @member {Array.<String>} schemas
 */
FirmDescriptionResource.prototype['schemas'] = undefined;

/**
 * @member {String} id
 */
FirmDescriptionResource.prototype['id'] = undefined;

/**
 * Name of the firm description.
 * @member {String} name
 */
FirmDescriptionResource.prototype['name'] = undefined;

/**
 * The user classes available to the firm description. Users created in a location with this firm description must have one of these user classes.
 * @member {Array.<module:model/UserClassResourceReference>} userClasses
 */
FirmDescriptionResource.prototype['userClasses'] = undefined;

/**
 * @member {module:model/FirmDescriptionResourceMeta} meta
 */
FirmDescriptionResource.prototype['meta'] = undefined;






export default FirmDescriptionResource;

