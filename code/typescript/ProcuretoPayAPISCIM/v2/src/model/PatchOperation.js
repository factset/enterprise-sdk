/**
 * FactSet SCIM API
 * FactSet's SCIM API implementation.
 *
 * The version of the OpenAPI document: 2.3.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PatchOperationValue from './PatchOperationValue';

/**
 * The PatchOperation model module.
 * @module model/PatchOperation
 */
class PatchOperation {
    /**
     * Constructs a new <code>PatchOperation</code>.
     * An individual PATCH operation that is part of a PATCH request.
     * @alias module:model/PatchOperation
     */
    constructor() { 
        
        PatchOperation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PatchOperation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PatchOperation} obj Optional instance to populate.
     * @return {module:model/PatchOperation} The populated <code>PatchOperation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PatchOperation();

            if (data.hasOwnProperty('op')) {
                obj['op'] = ApiClient.convertToType(data['op'], 'String');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = PatchOperationValue.constructFromObject(data['value']);
            }
        }
        return obj;
    }


}

/**
 * Indicates the HTTP PATCH operation to perform. For details on the \"add\" operation, see RFC 7644 section 3.5.2.1. For details on the \"remove\" operation, see RFC 7644 section 3.5.2.2. For details on the \"replace\" operation, see RFC 7644 section 3.5.2.3.
 * @member {module:model/PatchOperation.OpEnum} op
 */
PatchOperation.prototype['op'] = undefined;

/**
 * Describes the target of the HTTP PATCH operation. This is optional for \"add\" and \"replace\" operations and is required for \"remove\" operations.
 * @member {String} path
 */
PatchOperation.prototype['path'] = undefined;

/**
 * @member {module:model/PatchOperationValue} value
 */
PatchOperation.prototype['value'] = undefined;





/**
 * Allowed values for the <code>op</code> property.
 * @enum {String}
 * @readonly
 */
PatchOperation['OpEnum'] = {

    /**
     * value: "add"
     * @const
     */
    "add": "add",

    /**
     * value: "remove"
     * @const
     */
    "remove": "remove",

    /**
     * value: "replace"
     * @const
     */
    "replace": "replace"
};



export default PatchOperation;

