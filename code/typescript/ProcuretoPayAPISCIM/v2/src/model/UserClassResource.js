/**
 * FactSet SCIM API
 * FactSet's SCIM API implementation.
 *
 * The version of the OpenAPI document: 2.6.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UserClassResourceMeta from './UserClassResourceMeta';
import UserPositionResourceReference from './UserPositionResourceReference';

/**
 * The UserClassResource model module.
 * @module model/UserClassResource
 */
class UserClassResource {
    /**
     * Constructs a new <code>UserClassResource</code>.
     * @alias module:model/UserClassResource
     * @param name {String} Name of the user class.
     */
    constructor(name) { 
        
        UserClassResource.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['name'] = name;
    }

    /**
     * Constructs a <code>UserClassResource</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserClassResource} obj Optional instance to populate.
     * @return {module:model/UserClassResource} The populated <code>UserClassResource</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserClassResource();

            if (data.hasOwnProperty('schemas')) {
                obj['schemas'] = ApiClient.convertToType(data['schemas'], ['String']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('userPositions')) {
                obj['userPositions'] = ApiClient.convertToType(data['userPositions'], [UserPositionResourceReference]);
            }
            if (data.hasOwnProperty('meta')) {
                obj['meta'] = UserClassResourceMeta.constructFromObject(data['meta']);
            }
        }
        return obj;
    }


}

/**
 * @member {Array.<String>} schemas
 */
UserClassResource.prototype['schemas'] = undefined;

/**
 * @member {String} id
 */
UserClassResource.prototype['id'] = undefined;

/**
 * Name of the user class.
 * @member {String} name
 */
UserClassResource.prototype['name'] = undefined;

/**
 * The user positions available to this user class.
 * @member {Array.<module:model/UserPositionResourceReference>} userPositions
 */
UserClassResource.prototype['userPositions'] = undefined;

/**
 * @member {module:model/UserClassResourceMeta} meta
 */
UserClassResource.prototype['meta'] = undefined;






export default UserClassResource;

