/**
 * IRN API v1
 * Allows users to extract, create, update and configure IRN data.
 *
 * The version of the OpenAPI document: 1
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AlternativeEmailAddressDto from './AlternativeEmailAddressDto';
import ContactCustomFieldValueDto from './ContactCustomFieldValueDto';
import ContactRoleDto from './ContactRoleDto';
import ContactTypeDto from './ContactTypeDto';

/**
 * The ContactSummaryDto model module.
 * @module model/ContactSummaryDto
 */
class ContactSummaryDto {
    /**
     * Constructs a new <code>ContactSummaryDto</code>.
     * @alias module:model/ContactSummaryDto
     */
    constructor() { 
        
        ContactSummaryDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ContactSummaryDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContactSummaryDto} obj Optional instance to populate.
     * @return {module:model/ContactSummaryDto} The populated <code>ContactSummaryDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContactSummaryDto();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('irnPersonId')) {
                obj['irnPersonId'] = ApiClient.convertToType(data['irnPersonId'], 'String');
            }
            if (data.hasOwnProperty('primaryEmailAddress')) {
                obj['primaryEmailAddress'] = ApiClient.convertToType(data['primaryEmailAddress'], 'String');
            }
            if (data.hasOwnProperty('identifier')) {
                obj['identifier'] = ApiClient.convertToType(data['identifier'], 'String');
            }
            if (data.hasOwnProperty('fullName')) {
                obj['fullName'] = ApiClient.convertToType(data['fullName'], 'String');
            }
            if (data.hasOwnProperty('employerName')) {
                obj['employerName'] = ApiClient.convertToType(data['employerName'], 'String');
            }
            if (data.hasOwnProperty('employerIdentifier')) {
                obj['employerIdentifier'] = ApiClient.convertToType(data['employerIdentifier'], 'String');
            }
            if (data.hasOwnProperty('city')) {
                obj['city'] = ApiClient.convertToType(data['city'], 'String');
            }
            if (data.hasOwnProperty('stateProvince')) {
                obj['stateProvince'] = ApiClient.convertToType(data['stateProvince'], 'String');
            }
            if (data.hasOwnProperty('postalCode')) {
                obj['postalCode'] = ApiClient.convertToType(data['postalCode'], 'String');
            }
            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
            if (data.hasOwnProperty('role')) {
                obj['role'] = ContactRoleDto.constructFromObject(data['role']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ContactTypeDto.constructFromObject(data['type']);
            }
            if (data.hasOwnProperty('isDeleted')) {
                obj['isDeleted'] = ApiClient.convertToType(data['isDeleted'], 'Boolean');
            }
            if (data.hasOwnProperty('lastMeeting')) {
                obj['lastMeeting'] = ApiClient.convertToType(data['lastMeeting'], 'String');
            }
            if (data.hasOwnProperty('alternativeEmailAddresses')) {
                obj['alternativeEmailAddresses'] = ApiClient.convertToType(data['alternativeEmailAddresses'], [AlternativeEmailAddressDto]);
            }
            if (data.hasOwnProperty('customFieldValues')) {
                obj['customFieldValues'] = ApiClient.convertToType(data['customFieldValues'], [ContactCustomFieldValueDto]);
            }
        }
        return obj;
    }


}

/**
 * A guid that identifies the contact for further interactions
 * @member {String} id
 */
ContactSummaryDto.prototype['id'] = undefined;

/**
 * A Unique ticker with suffix -x that identifies the contact, which can be used in identifier lookup to tag the contact
 * @member {String} irnPersonId
 */
ContactSummaryDto.prototype['irnPersonId'] = undefined;

/**
 * @member {String} primaryEmailAddress
 */
ContactSummaryDto.prototype['primaryEmailAddress'] = undefined;

/**
 * @member {String} identifier
 */
ContactSummaryDto.prototype['identifier'] = undefined;

/**
 * @member {String} fullName
 */
ContactSummaryDto.prototype['fullName'] = undefined;

/**
 * @member {String} employerName
 */
ContactSummaryDto.prototype['employerName'] = undefined;

/**
 * @member {String} employerIdentifier
 */
ContactSummaryDto.prototype['employerIdentifier'] = undefined;

/**
 * @member {String} city
 */
ContactSummaryDto.prototype['city'] = undefined;

/**
 * @member {String} stateProvince
 */
ContactSummaryDto.prototype['stateProvince'] = undefined;

/**
 * @member {String} postalCode
 */
ContactSummaryDto.prototype['postalCode'] = undefined;

/**
 * @member {String} country
 */
ContactSummaryDto.prototype['country'] = undefined;

/**
 * @member {module:model/ContactRoleDto} role
 */
ContactSummaryDto.prototype['role'] = undefined;

/**
 * @member {module:model/ContactTypeDto} type
 */
ContactSummaryDto.prototype['type'] = undefined;

/**
 * @member {Boolean} isDeleted
 */
ContactSummaryDto.prototype['isDeleted'] = undefined;

/**
 * @member {String} lastMeeting
 */
ContactSummaryDto.prototype['lastMeeting'] = undefined;

/**
 * @member {Array.<module:model/AlternativeEmailAddressDto>} alternativeEmailAddresses
 */
ContactSummaryDto.prototype['alternativeEmailAddresses'] = undefined;

/**
 * @member {Array.<module:model/ContactCustomFieldValueDto>} customFieldValues
 */
ContactSummaryDto.prototype['customFieldValues'] = undefined;






export default ContactSummaryDto;

