/**
 * Signals API
 * Collection of endpoints for providing Signal Events, Definitions and Metadata
 *
 * The version of the OpenAPI document: 2.6.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Contract from './Contract';

/**
 * The SignalDefinitionData model module.
 * @module model/SignalDefinitionData
 */
class SignalDefinitionData {
    /**
     * Constructs a new <code>SignalDefinitionData</code>.
     * @alias module:model/SignalDefinitionData
     * @param signalId {String} UUID of a signal
     * @param theme {String} Theme chosen for the signal request
     * @param categories {Array.<String>} Categories chosen for the signal request
     * @param contract {module:model/Contract} 
     */
    constructor(signalId, theme, categories, contract) { 
        
        SignalDefinitionData.initialize(this, signalId, theme, categories, contract);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, signalId, theme, categories, contract) { 
        obj['signalId'] = signalId;
        obj['theme'] = theme;
        obj['categories'] = categories;
        obj['contract'] = contract;
    }

    /**
     * Constructs a <code>SignalDefinitionData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SignalDefinitionData} obj Optional instance to populate.
     * @return {module:model/SignalDefinitionData} The populated <code>SignalDefinitionData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SignalDefinitionData();

            if (data.hasOwnProperty('signalId')) {
                obj['signalId'] = ApiClient.convertToType(data['signalId'], 'String');
            }
            if (data.hasOwnProperty('theme')) {
                obj['theme'] = ApiClient.convertToType(data['theme'], 'String');
            }
            if (data.hasOwnProperty('categories')) {
                obj['categories'] = ApiClient.convertToType(data['categories'], ['String']);
            }
            if (data.hasOwnProperty('contract')) {
                obj['contract'] = Contract.constructFromObject(data['contract']);
            }
        }
        return obj;
    }


}

/**
 * UUID of a signal
 * @member {String} signalId
 */
SignalDefinitionData.prototype['signalId'] = undefined;

/**
 * Theme chosen for the signal request
 * @member {String} theme
 */
SignalDefinitionData.prototype['theme'] = undefined;

/**
 * Categories chosen for the signal request
 * @member {Array.<String>} categories
 */
SignalDefinitionData.prototype['categories'] = undefined;

/**
 * @member {module:model/Contract} contract
 */
SignalDefinitionData.prototype['contract'] = undefined;






export default SignalDefinitionData;

