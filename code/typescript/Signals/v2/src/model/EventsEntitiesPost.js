/**
 * Signals API
 * Collection of endpoints for providing Signal Events, Definitions and Metadata
 *
 * The version of the OpenAPI document: 2.6.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DateTimeInterval from './DateTimeInterval';
import RelevanceScoreRange from './RelevanceScoreRange';

/**
 * The EventsEntitiesPost model module.
 * @module model/EventsEntitiesPost
 */
class EventsEntitiesPost {
    /**
     * Constructs a new <code>EventsEntitiesPost</code>.
     * @alias module:model/EventsEntitiesPost
     */
    constructor() { 
        
        EventsEntitiesPost.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EventsEntitiesPost</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EventsEntitiesPost} obj Optional instance to populate.
     * @return {module:model/EventsEntitiesPost} The populated <code>EventsEntitiesPost</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EventsEntitiesPost();

            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], DateTimeInterval);
            }
            if (data.hasOwnProperty('updated')) {
                obj['updated'] = ApiClient.convertToType(data['updated'], DateTimeInterval);
            }
            if (data.hasOwnProperty('signalIds')) {
                obj['signalIds'] = ApiClient.convertToType(data['signalIds'], 'String');
            }
            if (data.hasOwnProperty('themes')) {
                obj['themes'] = ApiClient.convertToType(data['themes'], 'String');
            }
            if (data.hasOwnProperty('categories')) {
                obj['categories'] = ApiClient.convertToType(data['categories'], 'String');
            }
            if (data.hasOwnProperty('userRelevanceScore')) {
                obj['userRelevanceScore'] = ApiClient.convertToType(data['userRelevanceScore'], RelevanceScoreRange);
            }
        }
        return obj;
    }


}

/**
 * A date/time (UTC) interval for filtering signal events based on their creation date. Defaults to NOW - 7 days if omitted. Users with limited access can only provide the default or a smaller date window.
 * @member {module:model/DateTimeInterval} created
 */
EventsEntitiesPost.prototype['created'] = undefined;

/**
 * A date/time (UTC) interval for filtering signal events based on their last updated date. Defaults to NOW - 7 days if omitted. Users with limited access can only provide the default or a smaller date window.
 * @member {module:model/DateTimeInterval} updated
 */
EventsEntitiesPost.prototype['updated'] = undefined;

/**
 * Comma delimited string of signalIds
 * @member {String} signalIds
 */
EventsEntitiesPost.prototype['signalIds'] = undefined;

/**
 * Comma delimited string of theme ids. Full list of signal themes can be viewed at /themes.
 * @member {String} themes
 */
EventsEntitiesPost.prototype['themes'] = undefined;

/**
 * Comma delimited string of category ids. Full list of signal categories can be viewed at /categories.
 * @member {String} categories
 */
EventsEntitiesPost.prototype['categories'] = undefined;

/**
 * A range for filtering signal events based on their relevancy score.
 * @member {module:model/RelevanceScoreRange} userRelevanceScore
 */
EventsEntitiesPost.prototype['userRelevanceScore'] = undefined;






export default EventsEntitiesPost;

