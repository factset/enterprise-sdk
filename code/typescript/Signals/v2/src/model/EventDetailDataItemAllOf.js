/**
 * Signals API
 * Collection of endpoints for providing Signal Events, Definitions and Metadata
 *
 * The version of the OpenAPI document: 2.6.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EventDetailDataItemAllOf model module.
 * @module model/EventDetailDataItemAllOf
 */
class EventDetailDataItemAllOf {
    /**
     * Constructs a new <code>EventDetailDataItemAllOf</code>.
     * @alias module:model/EventDetailDataItemAllOf
     * @param created {Date} Date/Time in UTC the event was first recorded in our data store.
     * @param updated {Date} Date/Time in UTC the event was last updated.
     * @param details {Object.<String, Object>} Signal specific event properties.
     */
    constructor(created, updated, details) { 
        
        EventDetailDataItemAllOf.initialize(this, created, updated, details);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, created, updated, details) { 
        obj['created'] = created;
        obj['updated'] = updated;
        obj['details'] = details;
    }

    /**
     * Constructs a <code>EventDetailDataItemAllOf</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EventDetailDataItemAllOf} obj Optional instance to populate.
     * @return {module:model/EventDetailDataItemAllOf} The populated <code>EventDetailDataItemAllOf</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EventDetailDataItemAllOf();

            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Date');
            }
            if (data.hasOwnProperty('updated')) {
                obj['updated'] = ApiClient.convertToType(data['updated'], 'Date');
            }
            if (data.hasOwnProperty('details')) {
                obj['details'] = ApiClient.convertToType(data['details'], {'String': Object});
            }
        }
        return obj;
    }


}

/**
 * Date/Time in UTC the event was first recorded in our data store.
 * @member {Date} created
 */
EventDetailDataItemAllOf.prototype['created'] = undefined;

/**
 * Date/Time in UTC the event was last updated.
 * @member {Date} updated
 */
EventDetailDataItemAllOf.prototype['updated'] = undefined;

/**
 * Signal specific event properties.
 * @member {Object.<String, Object>} details
 */
EventDetailDataItemAllOf.prototype['details'] = undefined;






export default EventDetailDataItemAllOf;

