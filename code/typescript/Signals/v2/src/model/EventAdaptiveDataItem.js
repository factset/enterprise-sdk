/**
 * Signals API
 * Collection of endpoints for providing Signal Events, Definitions and Metadata
 *
 * The version of the OpenAPI document: 2.6.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EventAdaptiveDataItem model module.
 * @module model/EventAdaptiveDataItem
 */
class EventAdaptiveDataItem {
    /**
     * Constructs a new <code>EventAdaptiveDataItem</code>.
     * @alias module:model/EventAdaptiveDataItem
     * @param requestId {String} The id that was requested, ticker, cusip, factset entity id etc.
     * @param signalId {String} Signal Id for this event.
     * @param adaptiveCard {Object.<String, Object>} A JSON object that's compliant with MS adaptive card schema.
     */
    constructor(requestId, signalId, adaptiveCard) { 
        
        EventAdaptiveDataItem.initialize(this, requestId, signalId, adaptiveCard);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, requestId, signalId, adaptiveCard) { 
        obj['requestId'] = requestId;
        obj['signalId'] = signalId;
        obj['adaptiveCard'] = adaptiveCard;
    }

    /**
     * Constructs a <code>EventAdaptiveDataItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EventAdaptiveDataItem} obj Optional instance to populate.
     * @return {module:model/EventAdaptiveDataItem} The populated <code>EventAdaptiveDataItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EventAdaptiveDataItem();

            if (data.hasOwnProperty('requestId')) {
                obj['requestId'] = ApiClient.convertToType(data['requestId'], 'String');
            }
            if (data.hasOwnProperty('signalId')) {
                obj['signalId'] = ApiClient.convertToType(data['signalId'], 'String');
            }
            if (data.hasOwnProperty('adaptiveCard')) {
                obj['adaptiveCard'] = ApiClient.convertToType(data['adaptiveCard'], {'String': Object});
            }
        }
        return obj;
    }


}

/**
 * The id that was requested, ticker, cusip, factset entity id etc.
 * @member {String} requestId
 */
EventAdaptiveDataItem.prototype['requestId'] = undefined;

/**
 * Signal Id for this event.
 * @member {String} signalId
 */
EventAdaptiveDataItem.prototype['signalId'] = undefined;

/**
 * A JSON object that's compliant with MS adaptive card schema.
 * @member {Object.<String, Object>} adaptiveCard
 */
EventAdaptiveDataItem.prototype['adaptiveCard'] = undefined;






export default EventAdaptiveDataItem;

