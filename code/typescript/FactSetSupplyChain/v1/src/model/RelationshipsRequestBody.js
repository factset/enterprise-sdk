/**
 * FactSet Supply Chain API
 * Access the complex networks of key customer, suppliers, competitors and partners so that you can make insightful investment decisions. Relationship information is sourced from trusted primary sources and reverse-linked to non-disclosing parties, creating a comprehensive and consistent relationship graph. <p>This API is rate-limited to 10 requests per second and 10 concurrent requests per user.</p> 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CompanyType from './CompanyType';
import RelationshipDirection from './RelationshipDirection';
import RelationshipType from './RelationshipType';

/**
 * The RelationshipsRequestBody model module.
 * @module model/RelationshipsRequestBody
 */
class RelationshipsRequestBody {
    /**
     * Constructs a new <code>RelationshipsRequestBody</code>.
     * Relationships request body elements
     * @alias module:model/RelationshipsRequestBody
     * @param ids {Array.<String>} The requested list of security identifiers. Accepted ID types include Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids. * Make Note - id limit of 500 
     * @param relationshipType {module:model/RelationshipType} 
     */
    constructor(ids, relationshipType) { 
        
        RelationshipsRequestBody.initialize(this, ids, relationshipType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, ids, relationshipType) { 
        obj['ids'] = ids;
        obj['relationshipType'] = relationshipType;
    }

    /**
     * Constructs a <code>RelationshipsRequestBody</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RelationshipsRequestBody} obj Optional instance to populate.
     * @return {module:model/RelationshipsRequestBody} The populated <code>RelationshipsRequestBody</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RelationshipsRequestBody();

            if (data.hasOwnProperty('ids')) {
                obj['ids'] = ApiClient.convertToType(data['ids'], ['String']);
            }
            if (data.hasOwnProperty('relationshipType')) {
                obj['relationshipType'] = RelationshipType.constructFromObject(data['relationshipType']);
            }
            if (data.hasOwnProperty('companyType')) {
                obj['companyType'] = CompanyType.constructFromObject(data['companyType']);
            }
            if (data.hasOwnProperty('relationshipDirection')) {
                obj['relationshipDirection'] = RelationshipDirection.constructFromObject(data['relationshipDirection']);
            }
        }
        return obj;
    }


}

/**
 * The requested list of security identifiers. Accepted ID types include Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids. * Make Note - id limit of 500 
 * @member {Array.<String>} ids
 */
RelationshipsRequestBody.prototype['ids'] = undefined;

/**
 * @member {module:model/RelationshipType} relationshipType
 */
RelationshipsRequestBody.prototype['relationshipType'] = undefined;

/**
 * @member {module:model/CompanyType} companyType
 */
RelationshipsRequestBody.prototype['companyType'] = undefined;

/**
 * @member {module:model/RelationshipDirection} relationshipDirection
 */
RelationshipsRequestBody.prototype['relationshipDirection'] = undefined;






export default RelationshipsRequestBody;

