/*
 * FactSet Overview Report Builder API
 * Get relevant industry-specific data for high level analysis of public and private companies
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.OverviewReportBuilder.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.OverviewReportBuilder.JSON;


/**
 * ProfileDataItemMetaAnyOf
 */
@JsonPropertyOrder({
  ProfileDataItemMetaAnyOf.JSON_PROPERTY_CURRENCY_CODE,
  ProfileDataItemMetaAnyOf.JSON_PROPERTY_CURRENCY_SYMBOL,
  ProfileDataItemMetaAnyOf.JSON_PROPERTY_SCALE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class ProfileDataItemMetaAnyOf implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_CURRENCY_CODE = "currencyCode";
  private String currencyCode;

  public static final String JSON_PROPERTY_CURRENCY_SYMBOL = "currencySymbol";
  private String currencySymbol;

  public static final String JSON_PROPERTY_SCALE = "scale";
  private Integer scale;

  public ProfileDataItemMetaAnyOf() { 
  }

  public ProfileDataItemMetaAnyOf currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * Code for data currency
   * @return currencyCode
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Code for data currency")
  @JsonProperty(JSON_PROPERTY_CURRENCY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrencyCode() {
    return currencyCode;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }


  public ProfileDataItemMetaAnyOf currencySymbol(String currencySymbol) {
    this.currencySymbol = currencySymbol;
    return this;
  }

   /**
   * Symbol for data currency
   * @return currencySymbol
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Symbol for data currency")
  @JsonProperty(JSON_PROPERTY_CURRENCY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrencySymbol() {
    return currencySymbol;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrencySymbol(String currencySymbol) {
    this.currencySymbol = currencySymbol;
  }


  public ProfileDataItemMetaAnyOf scale(Integer scale) {
    this.scale = scale;
    return this;
  }

   /**
   * Integer power of 10 to which numbers have been scaled. For example: 6 implies millions. Default is 0. 
   * @return scale
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Integer power of 10 to which numbers have been scaled. For example: 6 implies millions. Default is 0. ")
  @JsonProperty(JSON_PROPERTY_SCALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getScale() {
    return scale;
  }


  @JsonProperty(JSON_PROPERTY_SCALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScale(Integer scale) {
    this.scale = scale;
  }


  /**
   * Return true if this ProfileDataItemMeta_anyOf object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProfileDataItemMetaAnyOf profileDataItemMetaAnyOf = (ProfileDataItemMetaAnyOf) o;
    return Objects.equals(this.currencyCode, profileDataItemMetaAnyOf.currencyCode) &&
        Objects.equals(this.currencySymbol, profileDataItemMetaAnyOf.currencySymbol) &&
        Objects.equals(this.scale, profileDataItemMetaAnyOf.scale);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currencyCode, currencySymbol, scale);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProfileDataItemMetaAnyOf {\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    currencySymbol: ").append(toIndentedString(currencySymbol)).append("\n");
    sb.append("    scale: ").append(toIndentedString(scale)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

