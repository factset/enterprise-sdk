/*
 * FactSet Prices API
 * Gain access to comprehensive global coverage for Equities & Fixed Income. Perform quick analytics by controlling the date ranges, currencies, and rolling periods, or simply request Open, High, Low, and Close prices. Easily connect pricing data with other core company data or alternative content sets using FactSet's hub and spoke symbology. <p>Equity and Fund Security types include Common Stock, ADR, GDR, Preferred, Closed-ended Fund, Exchange Traded Fund, Unit, Open-ended Fund, Exchange Traded Fund UVI, Exchange Traded Fund NAV, Preferred Equity, Non-Voting Depositary Receipt/Certificate, Alien/Foreign, Structured Product, and Temporary Instruments. Reference over 180,000+ active and inactive securities.</p><p>Fixed Income Security Types include Corporate Bonds, Treasury and Agency bonds, Government Bonds, and Municipals.</p><p><b>Rate limit is set to 25 requests per second</b>.</p> 
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetPrices.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDate;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetPrices.JSON;


/**
 * Dividend
 */
@JsonPropertyOrder({
  Dividend.JSON_PROPERTY_FSYM_ID,
  Dividend.JSON_PROPERTY_DIVS_EX_DATE,
  Dividend.JSON_PROPERTY_ADJ_DATE,
  Dividend.JSON_PROPERTY_CURRENCY,
  Dividend.JSON_PROPERTY_DIVS_PAID,
  Dividend.JSON_PROPERTY_DIVS_REC_DATE,
  Dividend.JSON_PROPERTY_DIVS_PAY_DATE,
  Dividend.JSON_PROPERTY_DIVS_TYPE_C,
  Dividend.JSON_PROPERTY_DIVS_TYPE_D,
  Dividend.JSON_PROPERTY_DIVS_TAX_C,
  Dividend.JSON_PROPERTY_DIVS_TAX_D,
  Dividend.JSON_PROPERTY_DIVS_N_G_FLAG,
  Dividend.JSON_PROPERTY_DIVS_N_G_EQUIV,
  Dividend.JSON_PROPERTY_REQUEST_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class Dividend implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_FSYM_ID = "fsymId";
  private JsonNullable<String> fsymId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DIVS_EX_DATE = "divsExDate";
  private JsonNullable<LocalDate> divsExDate = JsonNullable.<LocalDate>undefined();

  public static final String JSON_PROPERTY_ADJ_DATE = "adjDate";
  private JsonNullable<LocalDate> adjDate = JsonNullable.<LocalDate>undefined();

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private JsonNullable<String> currency = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DIVS_PAID = "divsPaid";
  private JsonNullable<Double> divsPaid = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_DIVS_REC_DATE = "divsRecDate";
  private JsonNullable<LocalDate> divsRecDate = JsonNullable.<LocalDate>undefined();

  public static final String JSON_PROPERTY_DIVS_PAY_DATE = "divsPayDate";
  private JsonNullable<LocalDate> divsPayDate = JsonNullable.<LocalDate>undefined();

  public static final String JSON_PROPERTY_DIVS_TYPE_C = "divsTypeC";
  private JsonNullable<Integer> divsTypeC = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_DIVS_TYPE_D = "divsTypeD";
  private JsonNullable<String> divsTypeD = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DIVS_TAX_C = "divsTaxC";
  private JsonNullable<String> divsTaxC = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DIVS_TAX_D = "divsTaxD";
  private JsonNullable<String> divsTaxD = JsonNullable.<String>undefined();

  /**
   * Net/Gross Marker Code. For details describing Net vs. Gross dividends, visit [Online Assistant Page #11512](https://oa.apps.factset.com/pages/11512).
   */
  public enum DivsNGFlagEnum {
    N("N"),
    
    G("G"),
    
    T("T"),
    
    X("X"),
    
    V("V"),
    
    _0("0");

    private String value;

    DivsNGFlagEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DivsNGFlagEnum fromValue(String value) {
      for (DivsNGFlagEnum b : DivsNGFlagEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_DIVS_N_G_FLAG = "divsNGFlag";
  private JsonNullable<DivsNGFlagEnum> divsNGFlag = JsonNullable.<DivsNGFlagEnum>undefined();

  public static final String JSON_PROPERTY_DIVS_N_G_EQUIV = "divsNGEquiv";
  private JsonNullable<Double> divsNGEquiv = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_REQUEST_ID = "requestId";
  private String requestId;

  public Dividend() { 
  }

  public Dividend fsymId(String fsymId) {
    this.fsymId = JsonNullable.<String>of(fsymId);
    return this;
  }

   /**
   * Factset Regional Security Identifier. Six alpha-numeric characters, excluding vowels, with an -R suffix (XXXXXX-R). Identifies the security&#39;s best regional security data series per currency. For equities, all primary listings per region and currency are allocated a regional-level permanent identifier. The regional-level permanent identifier will be available once a SEDOL representing the region/currency has been allocated and the identifiers are on FactSet.
   * @return fsymId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "SJY281-R", value = "Factset Regional Security Identifier. Six alpha-numeric characters, excluding vowels, with an -R suffix (XXXXXX-R). Identifies the security's best regional security data series per currency. For equities, all primary listings per region and currency are allocated a regional-level permanent identifier. The regional-level permanent identifier will be available once a SEDOL representing the region/currency has been allocated and the identifiers are on FactSet.")
  @JsonIgnore

  public String getFsymId() {
        return fsymId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFsymId_JsonNullable() {
    return fsymId;
  }
  
  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  public void setFsymId_JsonNullable(JsonNullable<String> fsymId) {
    this.fsymId = fsymId;
  }

  public void setFsymId(String fsymId) {
    this.fsymId = JsonNullable.<String>of(fsymId);
  }


  public Dividend divsExDate(LocalDate divsExDate) {
    this.divsExDate = JsonNullable.<LocalDate>of(divsExDate);
    return this;
  }

   /**
   * Ex-Date of the dividend expressed in YYYY-MM-DD format.
   * @return divsExDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Thu Aug 01 00:00:00 UTC 2013", value = "Ex-Date of the dividend expressed in YYYY-MM-DD format.")
  @JsonIgnore

  public LocalDate getDivsExDate() {
        return divsExDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DIVS_EX_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LocalDate> getDivsExDate_JsonNullable() {
    return divsExDate;
  }
  
  @JsonProperty(JSON_PROPERTY_DIVS_EX_DATE)
  public void setDivsExDate_JsonNullable(JsonNullable<LocalDate> divsExDate) {
    this.divsExDate = divsExDate;
  }

  public void setDivsExDate(LocalDate divsExDate) {
    this.divsExDate = JsonNullable.<LocalDate>of(divsExDate);
  }


  public Dividend adjDate(LocalDate adjDate) {
    this.adjDate = JsonNullable.<LocalDate>of(adjDate);
    return this;
  }

   /**
   * Date of last split for which prices and volume have been adjusted.
   * @return adjDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Mon Feb 07 00:00:00 UTC 2005", value = "Date of last split for which prices and volume have been adjusted.")
  @JsonIgnore

  public LocalDate getAdjDate() {
        return adjDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ADJ_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LocalDate> getAdjDate_JsonNullable() {
    return adjDate;
  }
  
  @JsonProperty(JSON_PROPERTY_ADJ_DATE)
  public void setAdjDate_JsonNullable(JsonNullable<LocalDate> adjDate) {
    this.adjDate = adjDate;
  }

  public void setAdjDate(LocalDate adjDate) {
    this.adjDate = JsonNullable.<LocalDate>of(adjDate);
  }


  public Dividend currency(String currency) {
    this.currency = JsonNullable.<String>of(currency);
    return this;
  }

   /**
   * Currency ISO code. For more details, visit [Online Assistant Page #1470](https://oa.apps.factset.com/pages/1470).
   * @return currency
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "USD", value = "Currency ISO code. For more details, visit [Online Assistant Page #1470](https://oa.apps.factset.com/pages/1470).")
  @JsonIgnore

  public String getCurrency() {
        return currency.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCurrency_JsonNullable() {
    return currency;
  }
  
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  public void setCurrency_JsonNullable(JsonNullable<String> currency) {
    this.currency = currency;
  }

  public void setCurrency(String currency) {
    this.currency = JsonNullable.<String>of(currency);
  }


  public Dividend divsPaid(Double divsPaid) {
    this.divsPaid = JsonNullable.<Double>of(divsPaid);
    return this;
  }

   /**
   * Amount of the dividend paid.
   * @return divsPaid
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "5", value = "Amount of the dividend paid.")
  @JsonIgnore

  public Double getDivsPaid() {
        return divsPaid.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DIVS_PAID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getDivsPaid_JsonNullable() {
    return divsPaid;
  }
  
  @JsonProperty(JSON_PROPERTY_DIVS_PAID)
  public void setDivsPaid_JsonNullable(JsonNullable<Double> divsPaid) {
    this.divsPaid = divsPaid;
  }

  public void setDivsPaid(Double divsPaid) {
    this.divsPaid = JsonNullable.<Double>of(divsPaid);
  }


  public Dividend divsRecDate(LocalDate divsRecDate) {
    this.divsRecDate = JsonNullable.<LocalDate>of(divsRecDate);
    return this;
  }

   /**
   * Date the dividend was recorded expressed in YYYY-MM-DD format.
   * @return divsRecDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Wed Jul 10 00:00:00 UTC 2013", value = "Date the dividend was recorded expressed in YYYY-MM-DD format.")
  @JsonIgnore

  public LocalDate getDivsRecDate() {
        return divsRecDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DIVS_REC_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LocalDate> getDivsRecDate_JsonNullable() {
    return divsRecDate;
  }
  
  @JsonProperty(JSON_PROPERTY_DIVS_REC_DATE)
  public void setDivsRecDate_JsonNullable(JsonNullable<LocalDate> divsRecDate) {
    this.divsRecDate = divsRecDate;
  }

  public void setDivsRecDate(LocalDate divsRecDate) {
    this.divsRecDate = JsonNullable.<LocalDate>of(divsRecDate);
  }


  public Dividend divsPayDate(LocalDate divsPayDate) {
    this.divsPayDate = JsonNullable.<LocalDate>of(divsPayDate);
    return this;
  }

   /**
   * Date the dividend will be paid expressed in YYYY-MM-DD format.
   * @return divsPayDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Thu Aug 08 00:00:00 UTC 2013", value = "Date the dividend will be paid expressed in YYYY-MM-DD format.")
  @JsonIgnore

  public LocalDate getDivsPayDate() {
        return divsPayDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DIVS_PAY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LocalDate> getDivsPayDate_JsonNullable() {
    return divsPayDate;
  }
  
  @JsonProperty(JSON_PROPERTY_DIVS_PAY_DATE)
  public void setDivsPayDate_JsonNullable(JsonNullable<LocalDate> divsPayDate) {
    this.divsPayDate = divsPayDate;
  }

  public void setDivsPayDate(LocalDate divsPayDate) {
    this.divsPayDate = JsonNullable.<LocalDate>of(divsPayDate);
  }


  public Dividend divsTypeC(Integer divsTypeC) {
    this.divsTypeC = JsonNullable.<Integer>of(divsTypeC);
    return this;
  }

   /**
   * Dividend type code. For code descriptions, visit [Online Assistant Page #8764](https://oa.apps.factset.com/pages/8764).
   * @return divsTypeC
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "1049", value = "Dividend type code. For code descriptions, visit [Online Assistant Page #8764](https://oa.apps.factset.com/pages/8764).")
  @JsonIgnore

  public Integer getDivsTypeC() {
        return divsTypeC.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DIVS_TYPE_C)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getDivsTypeC_JsonNullable() {
    return divsTypeC;
  }
  
  @JsonProperty(JSON_PROPERTY_DIVS_TYPE_C)
  public void setDivsTypeC_JsonNullable(JsonNullable<Integer> divsTypeC) {
    this.divsTypeC = divsTypeC;
  }

  public void setDivsTypeC(Integer divsTypeC) {
    this.divsTypeC = JsonNullable.<Integer>of(divsTypeC);
  }


  public Dividend divsTypeD(String divsTypeD) {
    this.divsTypeD = JsonNullable.<String>of(divsTypeD);
    return this;
  }

   /**
   * Description of dividend type. For type descriptions, visit [Online Assistant Page #8764](https://oa.apps.factset.com/pages/8764).
   * @return divsTypeD
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "U.S. Currency", value = "Description of dividend type. For type descriptions, visit [Online Assistant Page #8764](https://oa.apps.factset.com/pages/8764).")
  @JsonIgnore

  public String getDivsTypeD() {
        return divsTypeD.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DIVS_TYPE_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDivsTypeD_JsonNullable() {
    return divsTypeD;
  }
  
  @JsonProperty(JSON_PROPERTY_DIVS_TYPE_D)
  public void setDivsTypeD_JsonNullable(JsonNullable<String> divsTypeD) {
    this.divsTypeD = divsTypeD;
  }

  public void setDivsTypeD(String divsTypeD) {
    this.divsTypeD = JsonNullable.<String>of(divsTypeD);
  }


  public Dividend divsTaxC(String divsTaxC) {
    this.divsTaxC = JsonNullable.<String>of(divsTaxC);
    return this;
  }

   /**
   * Tax Marker Code. For code descriptions, visit [Online Assistant Page #15265](https://oa.apps.factset.com/pages/15265).
   * @return divsTaxC
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "FC", value = "Tax Marker Code. For code descriptions, visit [Online Assistant Page #15265](https://oa.apps.factset.com/pages/15265).")
  @JsonIgnore

  public String getDivsTaxC() {
        return divsTaxC.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DIVS_TAX_C)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDivsTaxC_JsonNullable() {
    return divsTaxC;
  }
  
  @JsonProperty(JSON_PROPERTY_DIVS_TAX_C)
  public void setDivsTaxC_JsonNullable(JsonNullable<String> divsTaxC) {
    this.divsTaxC = divsTaxC;
  }

  public void setDivsTaxC(String divsTaxC) {
    this.divsTaxC = JsonNullable.<String>of(divsTaxC);
  }


  public Dividend divsTaxD(String divsTaxD) {
    this.divsTaxD = JsonNullable.<String>of(divsTaxD);
    return this;
  }

   /**
   * Description of Tax Marker. For type descriptions, visit [Online Assistant Page #15265](https://oa.apps.factset.com/pages/15265).
   * @return divsTaxD
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Free of tax", value = "Description of Tax Marker. For type descriptions, visit [Online Assistant Page #15265](https://oa.apps.factset.com/pages/15265).")
  @JsonIgnore

  public String getDivsTaxD() {
        return divsTaxD.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DIVS_TAX_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDivsTaxD_JsonNullable() {
    return divsTaxD;
  }
  
  @JsonProperty(JSON_PROPERTY_DIVS_TAX_D)
  public void setDivsTaxD_JsonNullable(JsonNullable<String> divsTaxD) {
    this.divsTaxD = divsTaxD;
  }

  public void setDivsTaxD(String divsTaxD) {
    this.divsTaxD = JsonNullable.<String>of(divsTaxD);
  }


  public Dividend divsNGFlag(DivsNGFlagEnum divsNGFlag) {
    this.divsNGFlag = JsonNullable.<DivsNGFlagEnum>of(divsNGFlag);
    return this;
  }

   /**
   * Net/Gross Marker Code. For details describing Net vs. Gross dividends, visit [Online Assistant Page #11512](https://oa.apps.factset.com/pages/11512).
   * @return divsNGFlag
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Net/Gross Marker Code. For details describing Net vs. Gross dividends, visit [Online Assistant Page #11512](https://oa.apps.factset.com/pages/11512).")
  @JsonIgnore

  public DivsNGFlagEnum getDivsNGFlag() {
        return divsNGFlag.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DIVS_N_G_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<DivsNGFlagEnum> getDivsNGFlag_JsonNullable() {
    return divsNGFlag;
  }
  
  @JsonProperty(JSON_PROPERTY_DIVS_N_G_FLAG)
  public void setDivsNGFlag_JsonNullable(JsonNullable<DivsNGFlagEnum> divsNGFlag) {
    this.divsNGFlag = divsNGFlag;
  }

  public void setDivsNGFlag(DivsNGFlagEnum divsNGFlag) {
    this.divsNGFlag = JsonNullable.<DivsNGFlagEnum>of(divsNGFlag);
  }


  public Dividend divsNGEquiv(Double divsNGEquiv) {
    this.divsNGEquiv = JsonNullable.<Double>of(divsNGEquiv);
    return this;
  }

   /**
   * Net/Gross equivalent (opposite of dividend paid). For details describing Net vs. Gross dividends, visit [Online Assistant Page #11512](https://oa.apps.factset.com/pages/11512).
   * @return divsNGEquiv
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "5.5", value = "Net/Gross equivalent (opposite of dividend paid). For details describing Net vs. Gross dividends, visit [Online Assistant Page #11512](https://oa.apps.factset.com/pages/11512).")
  @JsonIgnore

  public Double getDivsNGEquiv() {
        return divsNGEquiv.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DIVS_N_G_EQUIV)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getDivsNGEquiv_JsonNullable() {
    return divsNGEquiv;
  }
  
  @JsonProperty(JSON_PROPERTY_DIVS_N_G_EQUIV)
  public void setDivsNGEquiv_JsonNullable(JsonNullable<Double> divsNGEquiv) {
    this.divsNGEquiv = divsNGEquiv;
  }

  public void setDivsNGEquiv(Double divsNGEquiv) {
    this.divsNGEquiv = JsonNullable.<Double>of(divsNGEquiv);
  }


  public Dividend requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

   /**
   * Identifier that was used for the request.
   * @return requestId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "IBM-US", value = "Identifier that was used for the request.")
  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRequestId() {
    return requestId;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }


  /**
   * Return true if this dividend object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Dividend dividend = (Dividend) o;
    return equalsNullable(this.fsymId, dividend.fsymId) &&
        equalsNullable(this.divsExDate, dividend.divsExDate) &&
        equalsNullable(this.adjDate, dividend.adjDate) &&
        equalsNullable(this.currency, dividend.currency) &&
        equalsNullable(this.divsPaid, dividend.divsPaid) &&
        equalsNullable(this.divsRecDate, dividend.divsRecDate) &&
        equalsNullable(this.divsPayDate, dividend.divsPayDate) &&
        equalsNullable(this.divsTypeC, dividend.divsTypeC) &&
        equalsNullable(this.divsTypeD, dividend.divsTypeD) &&
        equalsNullable(this.divsTaxC, dividend.divsTaxC) &&
        equalsNullable(this.divsTaxD, dividend.divsTaxD) &&
        equalsNullable(this.divsNGFlag, dividend.divsNGFlag) &&
        equalsNullable(this.divsNGEquiv, dividend.divsNGEquiv) &&
        Objects.equals(this.requestId, dividend.requestId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(fsymId), hashCodeNullable(divsExDate), hashCodeNullable(adjDate), hashCodeNullable(currency), hashCodeNullable(divsPaid), hashCodeNullable(divsRecDate), hashCodeNullable(divsPayDate), hashCodeNullable(divsTypeC), hashCodeNullable(divsTypeD), hashCodeNullable(divsTaxC), hashCodeNullable(divsTaxD), hashCodeNullable(divsNGFlag), hashCodeNullable(divsNGEquiv), requestId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Dividend {\n");
    sb.append("    fsymId: ").append(toIndentedString(fsymId)).append("\n");
    sb.append("    divsExDate: ").append(toIndentedString(divsExDate)).append("\n");
    sb.append("    adjDate: ").append(toIndentedString(adjDate)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    divsPaid: ").append(toIndentedString(divsPaid)).append("\n");
    sb.append("    divsRecDate: ").append(toIndentedString(divsRecDate)).append("\n");
    sb.append("    divsPayDate: ").append(toIndentedString(divsPayDate)).append("\n");
    sb.append("    divsTypeC: ").append(toIndentedString(divsTypeC)).append("\n");
    sb.append("    divsTypeD: ").append(toIndentedString(divsTypeD)).append("\n");
    sb.append("    divsTaxC: ").append(toIndentedString(divsTaxC)).append("\n");
    sb.append("    divsTaxD: ").append(toIndentedString(divsTaxD)).append("\n");
    sb.append("    divsNGFlag: ").append(toIndentedString(divsNGFlag)).append("\n");
    sb.append("    divsNGEquiv: ").append(toIndentedString(divsNGEquiv)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

