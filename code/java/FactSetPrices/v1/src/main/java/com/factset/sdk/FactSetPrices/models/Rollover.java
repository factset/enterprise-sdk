/*
 * FactSet Prices API
 * Gain access to comprehensive global coverage for Equities & Fixed Income. Perform quick analytics by controlling the date ranges, currencies, and rolling periods, or simply request Open, High, Low, and Close prices. Easily connect pricing data with other core company data or alternative content sets using FactSet's hub and spoke symbology. <p>Equity and Fund Security types include Common Stock, ADR, GDR, Preferred, Closed-ended Fund, Exchange Traded Fund, Unit, Open-ended Fund, Exchange Traded Fund UVI, Exchange Traded Fund NAV, Preferred Equity, Non-Voting Depositary Receipt/Certificate, Alien/Foreign, Structured Product, and Temporary Instruments. Reference over 180,000+ active and inactive securities.</p><p>Fixed Income Security Types include Corporate Bonds, Treasury and Agency bonds, Government Bonds, and Municipals.</p><p><b>Rate limit is set to 25 requests per second</b>.</p> 
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetPrices.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetPrices.JSON;


/**
 * Rollover
 */
@JsonPropertyOrder({
  Rollover.JSON_PROPERTY_AMERICAS_ROLL_TIME,
  Rollover.JSON_PROPERTY_AMERICAS_ZERO_DATE,
  Rollover.JSON_PROPERTY_ASIAPACIFIC_ROLL_TIME,
  Rollover.JSON_PROPERTY_ASIAPACIFIC_ZERO_DATE,
  Rollover.JSON_PROPERTY_EUROPE_ROLL_TIME,
  Rollover.JSON_PROPERTY_EUROPE_ZERO_DATE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class Rollover implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_AMERICAS_ROLL_TIME = "americasRollTime";
  private JsonNullable<OffsetDateTime> americasRollTime = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_AMERICAS_ZERO_DATE = "americasZeroDate";
  private JsonNullable<LocalDate> americasZeroDate = JsonNullable.<LocalDate>undefined();

  public static final String JSON_PROPERTY_ASIAPACIFIC_ROLL_TIME = "asiapacificRollTime";
  private JsonNullable<OffsetDateTime> asiapacificRollTime = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_ASIAPACIFIC_ZERO_DATE = "asiapacificZeroDate";
  private JsonNullable<LocalDate> asiapacificZeroDate = JsonNullable.<LocalDate>undefined();

  public static final String JSON_PROPERTY_EUROPE_ROLL_TIME = "europeRollTime";
  private JsonNullable<OffsetDateTime> europeRollTime = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_EUROPE_ZERO_DATE = "europeZeroDate";
  private JsonNullable<LocalDate> europeZeroDate = JsonNullable.<LocalDate>undefined();

  public Rollover() { 
  }

  public Rollover americasRollTime(OffsetDateTime americasRollTime) {
    this.americasRollTime = JsonNullable.<OffsetDateTime>of(americasRollTime);
    return this;
  }

   /**
   * Time of last zero date rollover for the Americas. This is in Eastern Time Zone. The date-time format is expressed as [YYYY-MM-DD]T[HH:MM:SSS], following ISO 8601.
   * @return americasRollTime
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Time of last zero date rollover for the Americas. This is in Eastern Time Zone. The date-time format is expressed as [YYYY-MM-DD]T[HH:MM:SSS], following ISO 8601.")
  @JsonIgnore

  public OffsetDateTime getAmericasRollTime() {
        return americasRollTime.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AMERICAS_ROLL_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getAmericasRollTime_JsonNullable() {
    return americasRollTime;
  }
  
  @JsonProperty(JSON_PROPERTY_AMERICAS_ROLL_TIME)
  public void setAmericasRollTime_JsonNullable(JsonNullable<OffsetDateTime> americasRollTime) {
    this.americasRollTime = americasRollTime;
  }

  public void setAmericasRollTime(OffsetDateTime americasRollTime) {
    this.americasRollTime = JsonNullable.<OffsetDateTime>of(americasRollTime);
  }


  public Rollover americasZeroDate(LocalDate americasZeroDate) {
    this.americasZeroDate = JsonNullable.<LocalDate>of(americasZeroDate);
    return this;
  }

   /**
   * Current relative zero date for the Americas. Date is expressed in Eastern Time and expressed as YYYY-MM-DD.
   * @return americasZeroDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Wed Jun 17 00:00:00 UTC 2020", value = "Current relative zero date for the Americas. Date is expressed in Eastern Time and expressed as YYYY-MM-DD.")
  @JsonIgnore

  public LocalDate getAmericasZeroDate() {
        return americasZeroDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AMERICAS_ZERO_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LocalDate> getAmericasZeroDate_JsonNullable() {
    return americasZeroDate;
  }
  
  @JsonProperty(JSON_PROPERTY_AMERICAS_ZERO_DATE)
  public void setAmericasZeroDate_JsonNullable(JsonNullable<LocalDate> americasZeroDate) {
    this.americasZeroDate = americasZeroDate;
  }

  public void setAmericasZeroDate(LocalDate americasZeroDate) {
    this.americasZeroDate = JsonNullable.<LocalDate>of(americasZeroDate);
  }


  public Rollover asiapacificRollTime(OffsetDateTime asiapacificRollTime) {
    this.asiapacificRollTime = JsonNullable.<OffsetDateTime>of(asiapacificRollTime);
    return this;
  }

   /**
   * Time of last zero date rollover for Asia/Pacific. This is in Eastern Time Zone. The date-time format is expressed as [YYYY-MM-DD]T[HH:MM:SSS], following ISO 8601.
   * @return asiapacificRollTime
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Time of last zero date rollover for Asia/Pacific. This is in Eastern Time Zone. The date-time format is expressed as [YYYY-MM-DD]T[HH:MM:SSS], following ISO 8601.")
  @JsonIgnore

  public OffsetDateTime getAsiapacificRollTime() {
        return asiapacificRollTime.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ASIAPACIFIC_ROLL_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getAsiapacificRollTime_JsonNullable() {
    return asiapacificRollTime;
  }
  
  @JsonProperty(JSON_PROPERTY_ASIAPACIFIC_ROLL_TIME)
  public void setAsiapacificRollTime_JsonNullable(JsonNullable<OffsetDateTime> asiapacificRollTime) {
    this.asiapacificRollTime = asiapacificRollTime;
  }

  public void setAsiapacificRollTime(OffsetDateTime asiapacificRollTime) {
    this.asiapacificRollTime = JsonNullable.<OffsetDateTime>of(asiapacificRollTime);
  }


  public Rollover asiapacificZeroDate(LocalDate asiapacificZeroDate) {
    this.asiapacificZeroDate = JsonNullable.<LocalDate>of(asiapacificZeroDate);
    return this;
  }

   /**
   * Current relative zero date for Asia/Pacific. This is in Eastern Time Zone
   * @return asiapacificZeroDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Thu Jun 18 00:00:00 UTC 2020", value = "Current relative zero date for Asia/Pacific. This is in Eastern Time Zone")
  @JsonIgnore

  public LocalDate getAsiapacificZeroDate() {
        return asiapacificZeroDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ASIAPACIFIC_ZERO_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LocalDate> getAsiapacificZeroDate_JsonNullable() {
    return asiapacificZeroDate;
  }
  
  @JsonProperty(JSON_PROPERTY_ASIAPACIFIC_ZERO_DATE)
  public void setAsiapacificZeroDate_JsonNullable(JsonNullable<LocalDate> asiapacificZeroDate) {
    this.asiapacificZeroDate = asiapacificZeroDate;
  }

  public void setAsiapacificZeroDate(LocalDate asiapacificZeroDate) {
    this.asiapacificZeroDate = JsonNullable.<LocalDate>of(asiapacificZeroDate);
  }


  public Rollover europeRollTime(OffsetDateTime europeRollTime) {
    this.europeRollTime = JsonNullable.<OffsetDateTime>of(europeRollTime);
    return this;
  }

   /**
   * Time of last zero date rollover for Europe. This is in Eastern Time Zone. The date-time format is expressed as [YYYY-MM-DD]T[HH:MM:SSS], following ISO 8601.
   * @return europeRollTime
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Time of last zero date rollover for Europe. This is in Eastern Time Zone. The date-time format is expressed as [YYYY-MM-DD]T[HH:MM:SSS], following ISO 8601.")
  @JsonIgnore

  public OffsetDateTime getEuropeRollTime() {
        return europeRollTime.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EUROPE_ROLL_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getEuropeRollTime_JsonNullable() {
    return europeRollTime;
  }
  
  @JsonProperty(JSON_PROPERTY_EUROPE_ROLL_TIME)
  public void setEuropeRollTime_JsonNullable(JsonNullable<OffsetDateTime> europeRollTime) {
    this.europeRollTime = europeRollTime;
  }

  public void setEuropeRollTime(OffsetDateTime europeRollTime) {
    this.europeRollTime = JsonNullable.<OffsetDateTime>of(europeRollTime);
  }


  public Rollover europeZeroDate(LocalDate europeZeroDate) {
    this.europeZeroDate = JsonNullable.<LocalDate>of(europeZeroDate);
    return this;
  }

   /**
   * Current relative zero date for Europe. This is in Eastern Time Zone
   * @return europeZeroDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Wed Jun 17 00:00:00 UTC 2020", value = "Current relative zero date for Europe. This is in Eastern Time Zone")
  @JsonIgnore

  public LocalDate getEuropeZeroDate() {
        return europeZeroDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EUROPE_ZERO_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LocalDate> getEuropeZeroDate_JsonNullable() {
    return europeZeroDate;
  }
  
  @JsonProperty(JSON_PROPERTY_EUROPE_ZERO_DATE)
  public void setEuropeZeroDate_JsonNullable(JsonNullable<LocalDate> europeZeroDate) {
    this.europeZeroDate = europeZeroDate;
  }

  public void setEuropeZeroDate(LocalDate europeZeroDate) {
    this.europeZeroDate = JsonNullable.<LocalDate>of(europeZeroDate);
  }


  /**
   * Return true if this rollover object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Rollover rollover = (Rollover) o;
    return equalsNullable(this.americasRollTime, rollover.americasRollTime) &&
        equalsNullable(this.americasZeroDate, rollover.americasZeroDate) &&
        equalsNullable(this.asiapacificRollTime, rollover.asiapacificRollTime) &&
        equalsNullable(this.asiapacificZeroDate, rollover.asiapacificZeroDate) &&
        equalsNullable(this.europeRollTime, rollover.europeRollTime) &&
        equalsNullable(this.europeZeroDate, rollover.europeZeroDate);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(americasRollTime), hashCodeNullable(americasZeroDate), hashCodeNullable(asiapacificRollTime), hashCodeNullable(asiapacificZeroDate), hashCodeNullable(europeRollTime), hashCodeNullable(europeZeroDate));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Rollover {\n");
    sb.append("    americasRollTime: ").append(toIndentedString(americasRollTime)).append("\n");
    sb.append("    americasZeroDate: ").append(toIndentedString(americasZeroDate)).append("\n");
    sb.append("    asiapacificRollTime: ").append(toIndentedString(asiapacificRollTime)).append("\n");
    sb.append("    asiapacificZeroDate: ").append(toIndentedString(asiapacificZeroDate)).append("\n");
    sb.append("    europeRollTime: ").append(toIndentedString(europeRollTime)).append("\n");
    sb.append("    europeZeroDate: ").append(toIndentedString(europeZeroDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

