/*
 * Open:FactSet Marketplace API
 * This API provides read-only access to marketplace products and partners.
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.OpenFactSetMarketplace.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.OpenFactSetMarketplace.JSON;


/**
 * Partner address
 */
@ApiModel(description = "Partner address")
@JsonPropertyOrder({
  PartnerAddress.JSON_PROPERTY_ADDRESS_LINE1,
  PartnerAddress.JSON_PROPERTY_ADDRESS_LINE2,
  PartnerAddress.JSON_PROPERTY_CITY,
  PartnerAddress.JSON_PROPERTY_COUNTRY,
  PartnerAddress.JSON_PROPERTY_POST_CODE,
  PartnerAddress.JSON_PROPERTY_STATE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class PartnerAddress implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ADDRESS_LINE1 = "addressLine1";
  private String addressLine1;

  public static final String JSON_PROPERTY_ADDRESS_LINE2 = "addressLine2";
  private String addressLine2;

  public static final String JSON_PROPERTY_CITY = "city";
  private String city;

  public static final String JSON_PROPERTY_COUNTRY = "country";
  private String country;

  public static final String JSON_PROPERTY_POST_CODE = "postCode";
  private String postCode;

  public static final String JSON_PROPERTY_STATE = "state";
  private String state;

  public PartnerAddress() { 
  }

  public PartnerAddress addressLine1(String addressLine1) {
    this.addressLine1 = addressLine1;
    return this;
  }

   /**
   * Partner address line 1
   * @return addressLine1
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "123 Main St.", value = "Partner address line 1")
  @JsonProperty(JSON_PROPERTY_ADDRESS_LINE1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddressLine1() {
    return addressLine1;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS_LINE1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddressLine1(String addressLine1) {
    this.addressLine1 = addressLine1;
  }


  public PartnerAddress addressLine2(String addressLine2) {
    this.addressLine2 = addressLine2;
    return this;
  }

   /**
   * Partner address line 2, if applicable
   * @return addressLine2
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Suite 100", value = "Partner address line 2, if applicable")
  @JsonProperty(JSON_PROPERTY_ADDRESS_LINE2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddressLine2() {
    return addressLine2;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS_LINE2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddressLine2(String addressLine2) {
    this.addressLine2 = addressLine2;
  }


  public PartnerAddress city(String city) {
    this.city = city;
    return this;
  }

   /**
   * Partner city
   * @return city
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "New York", value = "Partner city")
  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCity() {
    return city;
  }


  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCity(String city) {
    this.city = city;
  }


  public PartnerAddress country(String country) {
    this.country = country;
    return this;
  }

   /**
   * Partner country
   * @return country
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "United States", value = "Partner country")
  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCountry() {
    return country;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountry(String country) {
    this.country = country;
  }


  public PartnerAddress postCode(String postCode) {
    this.postCode = postCode;
    return this;
  }

   /**
   * Partner post code
   * @return postCode
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "10001", value = "Partner post code")
  @JsonProperty(JSON_PROPERTY_POST_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPostCode() {
    return postCode;
  }


  @JsonProperty(JSON_PROPERTY_POST_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPostCode(String postCode) {
    this.postCode = postCode;
  }


  public PartnerAddress state(String state) {
    this.state = state;
    return this;
  }

   /**
   * Partner state, if applicable
   * @return state
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "NY", value = "Partner state, if applicable")
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getState() {
    return state;
  }


  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setState(String state) {
    this.state = state;
  }


  /**
   * Return true if this Partner_address object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PartnerAddress partnerAddress = (PartnerAddress) o;
    return Objects.equals(this.addressLine1, partnerAddress.addressLine1) &&
        Objects.equals(this.addressLine2, partnerAddress.addressLine2) &&
        Objects.equals(this.city, partnerAddress.city) &&
        Objects.equals(this.country, partnerAddress.country) &&
        Objects.equals(this.postCode, partnerAddress.postCode) &&
        Objects.equals(this.state, partnerAddress.state);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addressLine1, addressLine2, city, country, postCode, state);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PartnerAddress {\n");
    sb.append("    addressLine1: ").append(toIndentedString(addressLine1)).append("\n");
    sb.append("    addressLine2: ").append(toIndentedString(addressLine2)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    postCode: ").append(toIndentedString(postCode)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

