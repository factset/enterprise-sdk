/*
 * Open:FactSet Marketplace API
 * This API provides read-only access to marketplace products and partners.
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.OpenFactSetMarketplace.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.OpenFactSetMarketplace.models.AttributesGroupsItem;
import com.factset.sdk.OpenFactSetMarketplace.models.DocumentsItems;
import com.factset.sdk.OpenFactSetMarketplace.models.ProductPartner;
import com.factset.sdk.OpenFactSetMarketplace.models.RelatedProducts;
import com.factset.sdk.OpenFactSetMarketplace.models.ThirdPartyUrls;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDate;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.OpenFactSetMarketplace.JSON;


/**
 * Product object
 */
@ApiModel(description = "Product object")
@JsonPropertyOrder({
  Product.JSON_PROPERTY_ID,
  Product.JSON_PROPERTY_PRODUCT_PAGE_URL,
  Product.JSON_PROPERTY_SECONDARY_LINK,
  Product.JSON_PROPERTY_TITLE,
  Product.JSON_PROPERTY_DESCRIPTION,
  Product.JSON_PROPERTY_CREATE_DATE,
  Product.JSON_PROPERTY_PARTNER,
  Product.JSON_PROPERTY_PRODUCT_STATUS,
  Product.JSON_PROPERTY_TYPE,
  Product.JSON_PROPERTY_DOCUMENTS,
  Product.JSON_PROPERTY_THIRD_PARTY_URLS,
  Product.JSON_PROPERTY_PRIMARY_LINK,
  Product.JSON_PROPERTY_PREVIEW_LINK,
  Product.JSON_PROPERTY_RELATED_PRODUCTS,
  Product.JSON_PROPERTY_COVERAGE_TABLE,
  Product.JSON_PROPERTY_ATTRIBUTES_GROUPS,
  Product.JSON_PROPERTY_VIDEO_URL,
  Product.JSON_PROPERTY_NAVIGATOR_URL,
  Product.JSON_PROPERTY_UPDATE_FREQUENCY,
  Product.JSON_PROPERTY_DELIVERY_FREQUENCY
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class Product implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_PRODUCT_PAGE_URL = "productPageUrl";
  private String productPageUrl;

  public static final String JSON_PROPERTY_SECONDARY_LINK = "secondaryLink";
  private String secondaryLink;

  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_CREATE_DATE = "createDate";
  private LocalDate createDate;

  public static final String JSON_PROPERTY_PARTNER = "partner";
  private ProductPartner partner;

  /**
   * Product status pertaining to its availability on the Open:FactSet Marketplace
   */
  public enum ProductStatusEnum {
    AVAILABLE("available"),
    
    CANDIDATE("candidate"),
    
    COMINGSOON("comingSoon"),
    
    DEVELOPMENTQUEUE("developmentQueue"),
    
    NEW("new"),
    
    UPDATED("updated");

    private String value;

    ProductStatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ProductStatusEnum fromValue(String value) {
      for (ProductStatusEnum b : ProductStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PRODUCT_STATUS = "productStatus";
  private ProductStatusEnum productStatus;

  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    DATAFEED("dataFeed"),
    
    API("api"),
    
    PLATFORM("platform");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private java.util.List<TypeEnum> type = new java.util.ArrayList<>();

  public static final String JSON_PROPERTY_DOCUMENTS = "documents";
  private java.util.List<DocumentsItems> documents = null;

  public static final String JSON_PROPERTY_THIRD_PARTY_URLS = "thirdPartyUrls";
  private java.util.List<ThirdPartyUrls> thirdPartyUrls = null;

  public static final String JSON_PROPERTY_PRIMARY_LINK = "primaryLink";
  private String primaryLink;

  public static final String JSON_PROPERTY_PREVIEW_LINK = "previewLink";
  private String previewLink;

  public static final String JSON_PROPERTY_RELATED_PRODUCTS = "relatedProducts";
  private java.util.List<RelatedProducts> relatedProducts = null;

  public static final String JSON_PROPERTY_COVERAGE_TABLE = "coverageTable";
  private String coverageTable;

  public static final String JSON_PROPERTY_ATTRIBUTES_GROUPS = "attributesGroups";
  private java.util.List<AttributesGroupsItem> attributesGroups = null;

  public static final String JSON_PROPERTY_VIDEO_URL = "videoUrl";
  private String videoUrl;

  public static final String JSON_PROPERTY_NAVIGATOR_URL = "navigatorUrl";
  private String navigatorUrl;

  /**
   * Product update frequency, i.e. &#39;Daily&#39;, &#39;Weekly&#39;, etc.
   */
  public enum UpdateFrequencyEnum {
    QUARTERLY("quarterly"),
    
    MONTHLY("monthly"),
    
    DAILY("daily"),
    
    WEEKLY("weekly"),
    
    ANNUAL("annual"),
    
    EVENT("event"),
    
    INTRADAY("intraday");

    private String value;

    UpdateFrequencyEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static UpdateFrequencyEnum fromValue(String value) {
      for (UpdateFrequencyEnum b : UpdateFrequencyEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_UPDATE_FREQUENCY = "updateFrequency";
  private UpdateFrequencyEnum updateFrequency;

  /**
   * Product delivery frequency, i.e. &#39;Daily&#39;, &#39;Weekly&#39;, etc.
   */
  public enum DeliveryFrequencyEnum {
    INTRADAYDAILY("intradayDaily"),
    
    QUARTERLY("quarterly"),
    
    MONTHLY("monthly"),
    
    INTRADAY("intraday"),
    
    WEEKLY("weekly"),
    
    DAILY("daily"),
    
    ANNUAL("annual"),
    
    EVENT("event");

    private String value;

    DeliveryFrequencyEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DeliveryFrequencyEnum fromValue(String value) {
      for (DeliveryFrequencyEnum b : DeliveryFrequencyEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_DELIVERY_FREQUENCY = "deliveryFrequency";
  private DeliveryFrequencyEnum deliveryFrequency;

  public Product() { 
  }

  @JsonCreator
  public Product(
    @JsonProperty(value=JSON_PROPERTY_ID, required=true) String id, 
    @JsonProperty(value=JSON_PROPERTY_PRODUCT_PAGE_URL, required=true) String productPageUrl, 
    @JsonProperty(value=JSON_PROPERTY_TITLE, required=true) String title, 
    @JsonProperty(value=JSON_PROPERTY_DESCRIPTION, required=true) String description, 
    @JsonProperty(value=JSON_PROPERTY_CREATE_DATE, required=true) LocalDate createDate, 
    @JsonProperty(value=JSON_PROPERTY_PARTNER, required=true) ProductPartner partner, 
    @JsonProperty(value=JSON_PROPERTY_PRODUCT_STATUS, required=true) ProductStatusEnum productStatus, 
    @JsonProperty(value=JSON_PROPERTY_TYPE, required=true) java.util.List<TypeEnum> type
  ) {
    this();
    this.id = id;
    this.productPageUrl = productPageUrl;
    this.title = title;
    this.description = description;
    this.createDate = createDate;
    this.partner = partner;
    this.productStatus = productStatus;
    this.type = type;
  }

  public Product id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Product unique identifier
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "ahkl7OjFcr5Ud1dUNSFxW", required = true, value = "Product unique identifier")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public Product productPageUrl(String productPageUrl) {
    this.productPageUrl = productPageUrl;
    return this;
  }

   /**
   * URL of the product&#39;s page on the marketplace catalog.
   * @return productPageUrl
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "https://www.factset.com/marketplace/catalog/product/product-title", required = true, value = "URL of the product's page on the marketplace catalog.")
  @JsonProperty(JSON_PROPERTY_PRODUCT_PAGE_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getProductPageUrl() {
    return productPageUrl;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT_PAGE_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProductPageUrl(String productPageUrl) {
    this.productPageUrl = productPageUrl;
  }


  public Product secondaryLink(String secondaryLink) {
    this.secondaryLink = secondaryLink;
    return this;
  }

   /**
   * Secondary link with additional information
   * @return secondaryLink
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "https://www.example.com", value = "Secondary link with additional information")
  @JsonProperty(JSON_PROPERTY_SECONDARY_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSecondaryLink() {
    return secondaryLink;
  }


  @JsonProperty(JSON_PROPERTY_SECONDARY_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecondaryLink(String secondaryLink) {
    this.secondaryLink = secondaryLink;
  }


  public Product title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Product title
   * @return title
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "FactSet Product Title", required = true, value = "Product title")
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTitle(String title) {
    this.title = title;
  }


  public Product description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Product description
   * @return description
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "Short product description that appears on the product's card within the Open:FactSet Marketplace.", required = true, value = "Product description")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(String description) {
    this.description = description;
  }


  public Product createDate(LocalDate createDate) {
    this.createDate = createDate;
    return this;
  }

   /**
   * Product creation date
   * @return createDate
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "Wed Sep 01 00:00:00 UTC 2021", required = true, value = "Product creation date")
  @JsonProperty(JSON_PROPERTY_CREATE_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public LocalDate getCreateDate() {
    return createDate;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreateDate(LocalDate createDate) {
    this.createDate = createDate;
  }


  public Product partner(ProductPartner partner) {
    this.partner = partner;
    return this;
  }

   /**
   * Get partner
   * @return partner
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_PARTNER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ProductPartner getPartner() {
    return partner;
  }


  @JsonProperty(JSON_PROPERTY_PARTNER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPartner(ProductPartner partner) {
    this.partner = partner;
  }


  public Product productStatus(ProductStatusEnum productStatus) {
    this.productStatus = productStatus;
    return this;
  }

   /**
   * Product status pertaining to its availability on the Open:FactSet Marketplace
   * @return productStatus
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "available", required = true, value = "Product status pertaining to its availability on the Open:FactSet Marketplace")
  @JsonProperty(JSON_PROPERTY_PRODUCT_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ProductStatusEnum getProductStatus() {
    return productStatus;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProductStatus(ProductStatusEnum productStatus) {
    this.productStatus = productStatus;
  }


  public Product type(java.util.List<TypeEnum> type) {
    this.type = type;
    return this;
  }

  public Product addTypeItem(TypeEnum typeItem) {
    this.type.add(typeItem);
    return this;
  }

   /**
   * Product type
   * @return type
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "[\"dataFeed\"]", required = true, value = "Product type")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public java.util.List<TypeEnum> getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(java.util.List<TypeEnum> type) {
    this.type = type;
  }


  public Product documents(java.util.List<DocumentsItems> documents) {
    this.documents = documents;
    return this;
  }

  public Product addDocumentsItem(DocumentsItems documentsItem) {
    if (this.documents == null) {
      this.documents = new java.util.ArrayList<>();
    }
    this.documents.add(documentsItem);
    return this;
  }

   /**
   * Product documents
   * @return documents
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "[{\"name\":\"FactSet Product Documentation\",\"section\":\"Documentation\",\"isPublic\":true,\"isFile\":true,\"url\":\"https://www.example.com/factset-product-documentation.pdf\",\"fileName\":\"factset-product-documentation.pdf\"}]", value = "Product documents")
  @JsonProperty(JSON_PROPERTY_DOCUMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<DocumentsItems> getDocuments() {
    return documents;
  }


  @JsonProperty(JSON_PROPERTY_DOCUMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDocuments(java.util.List<DocumentsItems> documents) {
    this.documents = documents;
  }


  public Product thirdPartyUrls(java.util.List<ThirdPartyUrls> thirdPartyUrls) {
    this.thirdPartyUrls = thirdPartyUrls;
    return this;
  }

  public Product addThirdPartyUrlsItem(ThirdPartyUrls thirdPartyUrlsItem) {
    if (this.thirdPartyUrls == null) {
      this.thirdPartyUrls = new java.util.ArrayList<>();
    }
    this.thirdPartyUrls.add(thirdPartyUrlsItem);
    return this;
  }

   /**
   * Product third party URLs
   * @return thirdPartyUrls
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "[{\"label\":\"Third Party URL Label\",\"link\":\"https://www.example.com\"}]", value = "Product third party URLs")
  @JsonProperty(JSON_PROPERTY_THIRD_PARTY_URLS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<ThirdPartyUrls> getThirdPartyUrls() {
    return thirdPartyUrls;
  }


  @JsonProperty(JSON_PROPERTY_THIRD_PARTY_URLS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setThirdPartyUrls(java.util.List<ThirdPartyUrls> thirdPartyUrls) {
    this.thirdPartyUrls = thirdPartyUrls;
  }


  public Product primaryLink(String primaryLink) {
    this.primaryLink = primaryLink;
    return this;
  }

   /**
   * Link to primary product information, which is separate from the product&#39;s product page URL.
   * @return primaryLink
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "https://www.example.com", value = "Link to primary product information, which is separate from the product's product page URL.")
  @JsonProperty(JSON_PROPERTY_PRIMARY_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPrimaryLink() {
    return primaryLink;
  }


  @JsonProperty(JSON_PROPERTY_PRIMARY_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrimaryLink(String primaryLink) {
    this.primaryLink = primaryLink;
  }


  public Product previewLink(String previewLink) {
    this.previewLink = previewLink;
    return this;
  }

   /**
   * Link to additional information on the product, which is separate from the product&#39;s product page URL.
   * @return previewLink
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "https://www.example.com", value = "Link to additional information on the product, which is separate from the product's product page URL.")
  @JsonProperty(JSON_PROPERTY_PREVIEW_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPreviewLink() {
    return previewLink;
  }


  @JsonProperty(JSON_PROPERTY_PREVIEW_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPreviewLink(String previewLink) {
    this.previewLink = previewLink;
  }


  public Product relatedProducts(java.util.List<RelatedProducts> relatedProducts) {
    this.relatedProducts = relatedProducts;
    return this;
  }

  public Product addRelatedProductsItem(RelatedProducts relatedProductsItem) {
    if (this.relatedProducts == null) {
      this.relatedProducts = new java.util.ArrayList<>();
    }
    this.relatedProducts.add(relatedProductsItem);
    return this;
  }

   /**
   * Related products
   * @return relatedProducts
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "[{\"id\":\"product-2\",\"productPageUrl\":\"https://www.factset.com/marketplace/catalog/product/product-2\",\"title\":\"Product 2\"}]", value = "Related products")
  @JsonProperty(JSON_PROPERTY_RELATED_PRODUCTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<RelatedProducts> getRelatedProducts() {
    return relatedProducts;
  }


  @JsonProperty(JSON_PROPERTY_RELATED_PRODUCTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRelatedProducts(java.util.List<RelatedProducts> relatedProducts) {
    this.relatedProducts = relatedProducts;
  }


  public Product coverageTable(String coverageTable) {
    this.coverageTable = coverageTable;
    return this;
  }

   /**
   * Product coverage table (HTML)
   * @return coverageTable
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "<table><tr><th><p><b>Name</b></p></th><th><p><b>Count</b></p></th><th><p><b>Type</b></p></th><th><p><b>Start Date</b></p></th></tr><tr><td><p>Registered Investment Advisors</p></td><td><p>19,000</p></td><td><p>Entities </p></td><td><p>2017</p></td></tr></table>", value = "Product coverage table (HTML)")
  @JsonProperty(JSON_PROPERTY_COVERAGE_TABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCoverageTable() {
    return coverageTable;
  }


  @JsonProperty(JSON_PROPERTY_COVERAGE_TABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCoverageTable(String coverageTable) {
    this.coverageTable = coverageTable;
  }


  public Product attributesGroups(java.util.List<AttributesGroupsItem> attributesGroups) {
    this.attributesGroups = attributesGroups;
    return this;
  }

  public Product addAttributesGroupsItem(AttributesGroupsItem attributesGroupsItem) {
    if (this.attributesGroups == null) {
      this.attributesGroups = new java.util.ArrayList<>();
    }
    this.attributesGroups.add(attributesGroupsItem);
    return this;
  }

   /**
   * Key-value pairs of product attributes that describe the product and its usage. These attributes groups are used to filter products on the marketplace catalog.
   * @return attributesGroups
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "[{\"key\":\"Region\",\"value\":\"North America\",\"isPreviewTag\":false}]", value = "Key-value pairs of product attributes that describe the product and its usage. These attributes groups are used to filter products on the marketplace catalog.")
  @JsonProperty(JSON_PROPERTY_ATTRIBUTES_GROUPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<AttributesGroupsItem> getAttributesGroups() {
    return attributesGroups;
  }


  @JsonProperty(JSON_PROPERTY_ATTRIBUTES_GROUPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAttributesGroups(java.util.List<AttributesGroupsItem> attributesGroups) {
    this.attributesGroups = attributesGroups;
  }


  public Product videoUrl(String videoUrl) {
    this.videoUrl = videoUrl;
    return this;
  }

   /**
   * Product video URL
   * @return videoUrl
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "https://www.example.com/video.mp4", value = "Product video URL")
  @JsonProperty(JSON_PROPERTY_VIDEO_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVideoUrl() {
    return videoUrl;
  }


  @JsonProperty(JSON_PROPERTY_VIDEO_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVideoUrl(String videoUrl) {
    this.videoUrl = videoUrl;
  }


  public Product navigatorUrl(String navigatorUrl) {
    this.navigatorUrl = navigatorUrl;
    return this;
  }

   /**
   * Product Data Navigator URL, on https://open.factset.com/navigator/
   * @return navigatorUrl
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "https://open.factset.com/navigator/1234", value = "Product Data Navigator URL, on https://open.factset.com/navigator/")
  @JsonProperty(JSON_PROPERTY_NAVIGATOR_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNavigatorUrl() {
    return navigatorUrl;
  }


  @JsonProperty(JSON_PROPERTY_NAVIGATOR_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNavigatorUrl(String navigatorUrl) {
    this.navigatorUrl = navigatorUrl;
  }


  public Product updateFrequency(UpdateFrequencyEnum updateFrequency) {
    this.updateFrequency = updateFrequency;
    return this;
  }

   /**
   * Product update frequency, i.e. &#39;Daily&#39;, &#39;Weekly&#39;, etc.
   * @return updateFrequency
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "daily", value = "Product update frequency, i.e. 'Daily', 'Weekly', etc.")
  @JsonProperty(JSON_PROPERTY_UPDATE_FREQUENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UpdateFrequencyEnum getUpdateFrequency() {
    return updateFrequency;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_FREQUENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateFrequency(UpdateFrequencyEnum updateFrequency) {
    this.updateFrequency = updateFrequency;
  }


  public Product deliveryFrequency(DeliveryFrequencyEnum deliveryFrequency) {
    this.deliveryFrequency = deliveryFrequency;
    return this;
  }

   /**
   * Product delivery frequency, i.e. &#39;Daily&#39;, &#39;Weekly&#39;, etc.
   * @return deliveryFrequency
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "daily", value = "Product delivery frequency, i.e. 'Daily', 'Weekly', etc.")
  @JsonProperty(JSON_PROPERTY_DELIVERY_FREQUENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DeliveryFrequencyEnum getDeliveryFrequency() {
    return deliveryFrequency;
  }


  @JsonProperty(JSON_PROPERTY_DELIVERY_FREQUENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeliveryFrequency(DeliveryFrequencyEnum deliveryFrequency) {
    this.deliveryFrequency = deliveryFrequency;
  }


  /**
   * Return true if this Product object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Product product = (Product) o;
    return Objects.equals(this.id, product.id) &&
        Objects.equals(this.productPageUrl, product.productPageUrl) &&
        Objects.equals(this.secondaryLink, product.secondaryLink) &&
        Objects.equals(this.title, product.title) &&
        Objects.equals(this.description, product.description) &&
        Objects.equals(this.createDate, product.createDate) &&
        Objects.equals(this.partner, product.partner) &&
        Objects.equals(this.productStatus, product.productStatus) &&
        Objects.equals(this.type, product.type) &&
        Objects.equals(this.documents, product.documents) &&
        Objects.equals(this.thirdPartyUrls, product.thirdPartyUrls) &&
        Objects.equals(this.primaryLink, product.primaryLink) &&
        Objects.equals(this.previewLink, product.previewLink) &&
        Objects.equals(this.relatedProducts, product.relatedProducts) &&
        Objects.equals(this.coverageTable, product.coverageTable) &&
        Objects.equals(this.attributesGroups, product.attributesGroups) &&
        Objects.equals(this.videoUrl, product.videoUrl) &&
        Objects.equals(this.navigatorUrl, product.navigatorUrl) &&
        Objects.equals(this.updateFrequency, product.updateFrequency) &&
        Objects.equals(this.deliveryFrequency, product.deliveryFrequency);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, productPageUrl, secondaryLink, title, description, createDate, partner, productStatus, type, documents, thirdPartyUrls, primaryLink, previewLink, relatedProducts, coverageTable, attributesGroups, videoUrl, navigatorUrl, updateFrequency, deliveryFrequency);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Product {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    productPageUrl: ").append(toIndentedString(productPageUrl)).append("\n");
    sb.append("    secondaryLink: ").append(toIndentedString(secondaryLink)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    partner: ").append(toIndentedString(partner)).append("\n");
    sb.append("    productStatus: ").append(toIndentedString(productStatus)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    documents: ").append(toIndentedString(documents)).append("\n");
    sb.append("    thirdPartyUrls: ").append(toIndentedString(thirdPartyUrls)).append("\n");
    sb.append("    primaryLink: ").append(toIndentedString(primaryLink)).append("\n");
    sb.append("    previewLink: ").append(toIndentedString(previewLink)).append("\n");
    sb.append("    relatedProducts: ").append(toIndentedString(relatedProducts)).append("\n");
    sb.append("    coverageTable: ").append(toIndentedString(coverageTable)).append("\n");
    sb.append("    attributesGroups: ").append(toIndentedString(attributesGroups)).append("\n");
    sb.append("    videoUrl: ").append(toIndentedString(videoUrl)).append("\n");
    sb.append("    navigatorUrl: ").append(toIndentedString(navigatorUrl)).append("\n");
    sb.append("    updateFrequency: ").append(toIndentedString(updateFrequency)).append("\n");
    sb.append("    deliveryFrequency: ").append(toIndentedString(deliveryFrequency)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

