/*
 * Open:FactSet Marketplace API
 * This API provides read-only access to marketplace products and partners.
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.OpenFactSetMarketplace.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.OpenFactSetMarketplace.models.PartnerAddress;
import com.factset.sdk.OpenFactSetMarketplace.models.PartnerSocialMedia;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.OpenFactSetMarketplace.JSON;


/**
 * Partner object
 */
@ApiModel(description = "Partner object")
@JsonPropertyOrder({
  Partner.JSON_PROPERTY_ID,
  Partner.JSON_PROPERTY_PARTNER_PAGE_URL,
  Partner.JSON_PROPERTY_NAME,
  Partner.JSON_PROPERTY_LOGO,
  Partner.JSON_PROPERTY_SHORT_DESCRIPTION,
  Partner.JSON_PROPERTY_FULL_DESCRIPTION,
  Partner.JSON_PROPERTY_WORKFLOW,
  Partner.JSON_PROPERTY_TYPE,
  Partner.JSON_PROPERTY_VIDEO_URL,
  Partner.JSON_PROPERTY_SOCIAL_MEDIA,
  Partner.JSON_PROPERTY_COMPANY_URL,
  Partner.JSON_PROPERTY_ADDRESS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class Partner implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_PARTNER_PAGE_URL = "partnerPageUrl";
  private String partnerPageUrl;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_LOGO = "logo";
  private String logo;

  public static final String JSON_PROPERTY_SHORT_DESCRIPTION = "shortDescription";
  private String shortDescription;

  public static final String JSON_PROPERTY_FULL_DESCRIPTION = "fullDescription";
  private String fullDescription;

  public static final String JSON_PROPERTY_WORKFLOW = "workflow";
  private java.util.List<String> workflow = new java.util.ArrayList<>();

  /**
   * Partner type, describing the Partner&#39;s relationship with FactSet
   */
  public enum TypeEnum {
    CAPABILITYPARTNER("capabilityPartner"),
    
    CONSULTANT("consultant"),
    
    OPENFACTSETPARTNER("openFactSetPartner"),
    
    DATAPARTNER("dataPartner"),
    
    TECHNICALPARTNER("technicalPartner");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public static final String JSON_PROPERTY_VIDEO_URL = "videoUrl";
  private String videoUrl;

  public static final String JSON_PROPERTY_SOCIAL_MEDIA = "socialMedia";
  private PartnerSocialMedia socialMedia;

  public static final String JSON_PROPERTY_COMPANY_URL = "companyUrl";
  private String companyUrl;

  public static final String JSON_PROPERTY_ADDRESS = "address";
  private PartnerAddress address;

  public Partner() { 
  }

  @JsonCreator
  public Partner(
    @JsonProperty(value=JSON_PROPERTY_ID, required=true) String id, 
    @JsonProperty(value=JSON_PROPERTY_PARTNER_PAGE_URL, required=true) String partnerPageUrl, 
    @JsonProperty(value=JSON_PROPERTY_NAME, required=true) String name, 
    @JsonProperty(value=JSON_PROPERTY_LOGO, required=true) String logo, 
    @JsonProperty(value=JSON_PROPERTY_SHORT_DESCRIPTION, required=true) String shortDescription, 
    @JsonProperty(value=JSON_PROPERTY_FULL_DESCRIPTION, required=true) String fullDescription, 
    @JsonProperty(value=JSON_PROPERTY_WORKFLOW, required=true) java.util.List<String> workflow, 
    @JsonProperty(value=JSON_PROPERTY_TYPE, required=true) TypeEnum type
  ) {
    this();
    this.id = id;
    this.partnerPageUrl = partnerPageUrl;
    this.name = name;
    this.logo = logo;
    this.shortDescription = shortDescription;
    this.fullDescription = fullDescription;
    this.workflow = workflow;
    this.type = type;
  }

  public Partner id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Partner unique identifier, used in the request URL
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "7GmIW2xGbdfZowcjuaMCmY", required = true, value = "Partner unique identifier, used in the request URL")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public Partner partnerPageUrl(String partnerPageUrl) {
    this.partnerPageUrl = partnerPageUrl;
    return this;
  }

   /**
   * URL of the partner&#39;s page on the partner catalog.
   * @return partnerPageUrl
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "https://www.factset.com/partner/catalog#/partner-details/partner-1", required = true, value = "URL of the partner's page on the partner catalog.")
  @JsonProperty(JSON_PROPERTY_PARTNER_PAGE_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPartnerPageUrl() {
    return partnerPageUrl;
  }


  @JsonProperty(JSON_PROPERTY_PARTNER_PAGE_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPartnerPageUrl(String partnerPageUrl) {
    this.partnerPageUrl = partnerPageUrl;
  }


  public Partner name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Partner name
   * @return name
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "Partner 1", required = true, value = "Partner name")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public Partner logo(String logo) {
    this.logo = logo;
    return this;
  }

   /**
   * Partner logo URL
   * @return logo
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "https://www.example.com/logo.png", required = true, value = "Partner logo URL")
  @JsonProperty(JSON_PROPERTY_LOGO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLogo() {
    return logo;
  }


  @JsonProperty(JSON_PROPERTY_LOGO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLogo(String logo) {
    this.logo = logo;
  }


  public Partner shortDescription(String shortDescription) {
    this.shortDescription = shortDescription;
    return this;
  }

   /**
   * Partner short description (plain text), appearing on the partner&#39;s card within the FactSet Partner Catalog.
   * @return shortDescription
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "Partner 1 short description", required = true, value = "Partner short description (plain text), appearing on the partner's card within the FactSet Partner Catalog.")
  @JsonProperty(JSON_PROPERTY_SHORT_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getShortDescription() {
    return shortDescription;
  }


  @JsonProperty(JSON_PROPERTY_SHORT_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setShortDescription(String shortDescription) {
    this.shortDescription = shortDescription;
  }


  public Partner fullDescription(String fullDescription) {
    this.fullDescription = fullDescription;
    return this;
  }

   /**
   * Partner full description (HTML)
   * @return fullDescription
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "<p>Partner 1 full description</p>", required = true, value = "Partner full description (HTML)")
  @JsonProperty(JSON_PROPERTY_FULL_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFullDescription() {
    return fullDescription;
  }


  @JsonProperty(JSON_PROPERTY_FULL_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFullDescription(String fullDescription) {
    this.fullDescription = fullDescription;
  }


  public Partner workflow(java.util.List<String> workflow) {
    this.workflow = workflow;
    return this;
  }

  public Partner addWorkflowItem(String workflowItem) {
    this.workflow.add(workflowItem);
    return this;
  }

   /**
   * An array of strings describing the Partner&#39;s workflow(s), used as categories on FactSet&#39;s Partner Catalog.
   * @return workflow
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "[\"Workflow 1\",\"Workflow 2\"]", required = true, value = "An array of strings describing the Partner's workflow(s), used as categories on FactSet's Partner Catalog.")
  @JsonProperty(JSON_PROPERTY_WORKFLOW)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public java.util.List<String> getWorkflow() {
    return workflow;
  }


  @JsonProperty(JSON_PROPERTY_WORKFLOW)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWorkflow(java.util.List<String> workflow) {
    this.workflow = workflow;
  }


  public Partner type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Partner type, describing the Partner&#39;s relationship with FactSet
   * @return type
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "technicalPartner", required = true, value = "Partner type, describing the Partner's relationship with FactSet")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(TypeEnum type) {
    this.type = type;
  }


  public Partner videoUrl(String videoUrl) {
    this.videoUrl = videoUrl;
    return this;
  }

   /**
   * Partner video URL
   * @return videoUrl
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "https://www.example.com/video.mp4", value = "Partner video URL")
  @JsonProperty(JSON_PROPERTY_VIDEO_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVideoUrl() {
    return videoUrl;
  }


  @JsonProperty(JSON_PROPERTY_VIDEO_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVideoUrl(String videoUrl) {
    this.videoUrl = videoUrl;
  }


  public Partner socialMedia(PartnerSocialMedia socialMedia) {
    this.socialMedia = socialMedia;
    return this;
  }

   /**
   * Get socialMedia
   * @return socialMedia
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SOCIAL_MEDIA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PartnerSocialMedia getSocialMedia() {
    return socialMedia;
  }


  @JsonProperty(JSON_PROPERTY_SOCIAL_MEDIA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSocialMedia(PartnerSocialMedia socialMedia) {
    this.socialMedia = socialMedia;
  }


  public Partner companyUrl(String companyUrl) {
    this.companyUrl = companyUrl;
    return this;
  }

   /**
   * Partner company URL
   * @return companyUrl
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "https://www.example.com", value = "Partner company URL")
  @JsonProperty(JSON_PROPERTY_COMPANY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCompanyUrl() {
    return companyUrl;
  }


  @JsonProperty(JSON_PROPERTY_COMPANY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCompanyUrl(String companyUrl) {
    this.companyUrl = companyUrl;
  }


  public Partner address(PartnerAddress address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PartnerAddress getAddress() {
    return address;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress(PartnerAddress address) {
    this.address = address;
  }


  /**
   * Return true if this Partner object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Partner partner = (Partner) o;
    return Objects.equals(this.id, partner.id) &&
        Objects.equals(this.partnerPageUrl, partner.partnerPageUrl) &&
        Objects.equals(this.name, partner.name) &&
        Objects.equals(this.logo, partner.logo) &&
        Objects.equals(this.shortDescription, partner.shortDescription) &&
        Objects.equals(this.fullDescription, partner.fullDescription) &&
        Objects.equals(this.workflow, partner.workflow) &&
        Objects.equals(this.type, partner.type) &&
        Objects.equals(this.videoUrl, partner.videoUrl) &&
        Objects.equals(this.socialMedia, partner.socialMedia) &&
        Objects.equals(this.companyUrl, partner.companyUrl) &&
        Objects.equals(this.address, partner.address);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, partnerPageUrl, name, logo, shortDescription, fullDescription, workflow, type, videoUrl, socialMedia, companyUrl, address);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Partner {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    partnerPageUrl: ").append(toIndentedString(partnerPageUrl)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    logo: ").append(toIndentedString(logo)).append("\n");
    sb.append("    shortDescription: ").append(toIndentedString(shortDescription)).append("\n");
    sb.append("    fullDescription: ").append(toIndentedString(fullDescription)).append("\n");
    sb.append("    workflow: ").append(toIndentedString(workflow)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    videoUrl: ").append(toIndentedString(videoUrl)).append("\n");
    sb.append("    socialMedia: ").append(toIndentedString(socialMedia)).append("\n");
    sb.append("    companyUrl: ").append(toIndentedString(companyUrl)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

