/*
 * Real-Time Options API
 * The Options API provides detailed information for option contracts (“options”) and option classes. This API presents a consolidated data model that gives access to options data of global options markets such as OPRA, Australia Exchange, Bovespa, CME Group, EUREX, Euronext, Hong Kong, ICE Futures Europe / US, Montreal Exchange, and others.  An option class is a product group of options from the same exchange and with the same underlying. The API includes endpoints to retrieve fundamental data for an option contract such as exercise right, exercise style, strike, maturity, open interest, underlying, etc. as well as risk measures of an option contract such as delta, omega, implied volatility, etc.  Option chains are provided by the /by-class/list endpoint. The list of option contracts for an option class can be filtered by exercise right, exercise style, strike, maturity, open interest, delta, omega, implied volatility, etc.  The option screener allows you to search for option classes by using text search, root symbol, or ISIN plus additional criteria such as market, underlying, currency, and category. Similar to other screener endpoints in e.g. the [Stocks API](https://developer.factset.com/api-catalog/stocks-api-digital-portals), the /value-ranges/get endpoint provides the possible values and value ranges plus the number of option contracts for an option class related to the option contracts per criteria such as exercise right, exercise style, strike, maturity, open interest, delta, omega, implied volatility, etc.  The Options API for Digital Portals seamlessly integrates with the [Real-Time Quotes API](https://developer.factset.com/api-catalog/real-time-quotes-api) that provides real-time, delayed, and end-of-day pricing data and basic security identifier cross-reference. For direct access to price histories for charting, please refer to the [Real-Time Time Series API](https://developer.factset.com/api-catalog/real-time-time-series-api). 
 *
 * The version of the OpenAPI document: 4.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.RealTimeOptions.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.RealTimeOptions.JSON;


/**
 * Key figures of an option contract.
 */
@ApiModel(description = "Key figures of an option contract.")
@JsonPropertyOrder({
  PostOptionByClassListDataItemsKeyFigures.JSON_PROPERTY_MONEYNESS,
  PostOptionByClassListDataItemsKeyFigures.JSON_PROPERTY_IMPLIED_VOLATILITY,
  PostOptionByClassListDataItemsKeyFigures.JSON_PROPERTY_OMEGA,
  PostOptionByClassListDataItemsKeyFigures.JSON_PROPERTY_LEVERAGE,
  PostOptionByClassListDataItemsKeyFigures.JSON_PROPERTY_DELTA,
  PostOptionByClassListDataItemsKeyFigures.JSON_PROPERTY_THETA_ONE_WEEK,
  PostOptionByClassListDataItemsKeyFigures.JSON_PROPERTY_VEGA,
  PostOptionByClassListDataItemsKeyFigures.JSON_PROPERTY_GAMMA,
  PostOptionByClassListDataItemsKeyFigures.JSON_PROPERTY_RHO
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class PostOptionByClassListDataItemsKeyFigures implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_MONEYNESS = "moneyness";
  private JsonNullable<BigDecimal> moneyness = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_IMPLIED_VOLATILITY = "impliedVolatility";
  private JsonNullable<BigDecimal> impliedVolatility = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_OMEGA = "omega";
  private JsonNullable<BigDecimal> omega = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_LEVERAGE = "leverage";
  private JsonNullable<BigDecimal> leverage = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_DELTA = "delta";
  private JsonNullable<BigDecimal> delta = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_THETA_ONE_WEEK = "thetaOneWeek";
  private JsonNullable<BigDecimal> thetaOneWeek = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_VEGA = "vega";
  private JsonNullable<BigDecimal> vega = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_GAMMA = "gamma";
  private JsonNullable<BigDecimal> gamma = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_RHO = "rho";
  private JsonNullable<BigDecimal> rho = JsonNullable.<BigDecimal>undefined();

  public PostOptionByClassListDataItemsKeyFigures() { 
  }

  public PostOptionByClassListDataItemsKeyFigures moneyness(BigDecimal moneyness) {
    this.moneyness = JsonNullable.<BigDecimal>of(moneyness);
    return this;
  }

   /**
   * Ratio of the current underlying level to the strike of an option. For calls, it is current underlying level divided by the strike. For puts, it is strike divided by the current underlying level. It measures the degree to which an option is in-the-money (moneyness &gt; 1) or out-of-the-money (moneyness &lt; 1). If moneyness &#x3D; 1, the option is at-the-money.
   * @return moneyness
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "2.02", value = "Ratio of the current underlying level to the strike of an option. For calls, it is current underlying level divided by the strike. For puts, it is strike divided by the current underlying level. It measures the degree to which an option is in-the-money (moneyness > 1) or out-of-the-money (moneyness < 1). If moneyness = 1, the option is at-the-money.")
  @JsonIgnore

  public BigDecimal getMoneyness() {
        return moneyness.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MONEYNESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getMoneyness_JsonNullable() {
    return moneyness;
  }
  
  @JsonProperty(JSON_PROPERTY_MONEYNESS)
  public void setMoneyness_JsonNullable(JsonNullable<BigDecimal> moneyness) {
    this.moneyness = moneyness;
  }

  public void setMoneyness(BigDecimal moneyness) {
    this.moneyness = JsonNullable.<BigDecimal>of(moneyness);
  }


  public PostOptionByClassListDataItemsKeyFigures impliedVolatility(BigDecimal impliedVolatility) {
    this.impliedVolatility = JsonNullable.<BigDecimal>of(impliedVolatility);
    return this;
  }

   /**
   * Ask-based implied volatility. It represents the volatility of the underlying that justifies the ask price of the option, when used as a parameter in the option&#39;s pricing model (such as Black-Scholes). Its value is a result of the pricing process, thus it represents the annual volatility of the underlying expected by the market participants until maturity of the option.
   * @return impliedVolatility
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "0.4", value = "Ask-based implied volatility. It represents the volatility of the underlying that justifies the ask price of the option, when used as a parameter in the option's pricing model (such as Black-Scholes). Its value is a result of the pricing process, thus it represents the annual volatility of the underlying expected by the market participants until maturity of the option.")
  @JsonIgnore

  public BigDecimal getImpliedVolatility() {
        return impliedVolatility.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IMPLIED_VOLATILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getImpliedVolatility_JsonNullable() {
    return impliedVolatility;
  }
  
  @JsonProperty(JSON_PROPERTY_IMPLIED_VOLATILITY)
  public void setImpliedVolatility_JsonNullable(JsonNullable<BigDecimal> impliedVolatility) {
    this.impliedVolatility = impliedVolatility;
  }

  public void setImpliedVolatility(BigDecimal impliedVolatility) {
    this.impliedVolatility = JsonNullable.<BigDecimal>of(impliedVolatility);
  }


  public PostOptionByClassListDataItemsKeyFigures omega(BigDecimal omega) {
    this.omega = JsonNullable.<BigDecimal>of(omega);
    return this;
  }

   /**
   * Ask-based omega. It represents delta (see attribute delta) multiplied with the leverage (see attribute &#x60;leverage&#x60;), both calculated based on the ask price of the option. Omega indicates the elasticity of the option&#39;s price regarding the underlying level.
   * @return omega
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "3.1415", value = "Ask-based omega. It represents delta (see attribute delta) multiplied with the leverage (see attribute `leverage`), both calculated based on the ask price of the option. Omega indicates the elasticity of the option's price regarding the underlying level.")
  @JsonIgnore

  public BigDecimal getOmega() {
        return omega.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OMEGA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getOmega_JsonNullable() {
    return omega;
  }
  
  @JsonProperty(JSON_PROPERTY_OMEGA)
  public void setOmega_JsonNullable(JsonNullable<BigDecimal> omega) {
    this.omega = omega;
  }

  public void setOmega(BigDecimal omega) {
    this.omega = JsonNullable.<BigDecimal>of(omega);
  }


  public PostOptionByClassListDataItemsKeyFigures leverage(BigDecimal leverage) {
    this.leverage = JsonNullable.<BigDecimal>of(leverage);
    return this;
  }

   /**
   * Ask-based leverage. It represents the ratio of the underlying level to the ask price of the option, adjusted for the currency cross rate.
   * @return leverage
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "5.05", value = "Ask-based leverage. It represents the ratio of the underlying level to the ask price of the option, adjusted for the currency cross rate.")
  @JsonIgnore

  public BigDecimal getLeverage() {
        return leverage.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LEVERAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getLeverage_JsonNullable() {
    return leverage;
  }
  
  @JsonProperty(JSON_PROPERTY_LEVERAGE)
  public void setLeverage_JsonNullable(JsonNullable<BigDecimal> leverage) {
    this.leverage = leverage;
  }

  public void setLeverage(BigDecimal leverage) {
    this.leverage = JsonNullable.<BigDecimal>of(leverage);
  }


  public PostOptionByClassListDataItemsKeyFigures delta(BigDecimal delta) {
    this.delta = JsonNullable.<BigDecimal>of(delta);
    return this;
  }

   /**
   * Ask-based delta. It represents the first partial derivative of the function determining the option&#39;s theoretical price with respect to the underlying level, evaluated at the underlying level. Delta indicates the ratio of the absolute change of the price of an option for an indefinitely small absolute change in the underlying level, thus it represents the price sensitivity of the option relative to changes in the underlying level.
   * @return delta
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "3.1415", value = "Ask-based delta. It represents the first partial derivative of the function determining the option's theoretical price with respect to the underlying level, evaluated at the underlying level. Delta indicates the ratio of the absolute change of the price of an option for an indefinitely small absolute change in the underlying level, thus it represents the price sensitivity of the option relative to changes in the underlying level.")
  @JsonIgnore

  public BigDecimal getDelta() {
        return delta.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DELTA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getDelta_JsonNullable() {
    return delta;
  }
  
  @JsonProperty(JSON_PROPERTY_DELTA)
  public void setDelta_JsonNullable(JsonNullable<BigDecimal> delta) {
    this.delta = delta;
  }

  public void setDelta(BigDecimal delta) {
    this.delta = JsonNullable.<BigDecimal>of(delta);
  }


  public PostOptionByClassListDataItemsKeyFigures thetaOneWeek(BigDecimal thetaOneWeek) {
    this.thetaOneWeek = JsonNullable.<BigDecimal>of(thetaOneWeek);
    return this;
  }

   /**
   * Ask-based weekly theta. It represents the first partial derivative of the function determining the option&#39;s theoretical price with respect to the residual term, evaluated at the current residual term and multiplied by 7/365. Weekly theta indicates the absolute change (decrease) of the price of an option for a reduction of the residual term by one week (seven calendar days), thus it represents the price sensitivity of the option relative to changes in the residual term.
   * @return thetaOneWeek
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "4.04", value = "Ask-based weekly theta. It represents the first partial derivative of the function determining the option's theoretical price with respect to the residual term, evaluated at the current residual term and multiplied by 7/365. Weekly theta indicates the absolute change (decrease) of the price of an option for a reduction of the residual term by one week (seven calendar days), thus it represents the price sensitivity of the option relative to changes in the residual term.")
  @JsonIgnore

  public BigDecimal getThetaOneWeek() {
        return thetaOneWeek.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_THETA_ONE_WEEK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getThetaOneWeek_JsonNullable() {
    return thetaOneWeek;
  }
  
  @JsonProperty(JSON_PROPERTY_THETA_ONE_WEEK)
  public void setThetaOneWeek_JsonNullable(JsonNullable<BigDecimal> thetaOneWeek) {
    this.thetaOneWeek = thetaOneWeek;
  }

  public void setThetaOneWeek(BigDecimal thetaOneWeek) {
    this.thetaOneWeek = JsonNullable.<BigDecimal>of(thetaOneWeek);
  }


  public PostOptionByClassListDataItemsKeyFigures vega(BigDecimal vega) {
    this.vega = JsonNullable.<BigDecimal>of(vega);
    return this;
  }

   /**
   * Ask-based vega. It represents the first partial derivative of the function determining the option&#39;s theoretical price with respect to the implied volatility, evaluated at the current implied volatility. Vega indicates the ratio of the absolute change of the price of an option for an absolute change of the implied volatility, thus it represents the price sensitivity of the option relative to changes in the implied volatility.
   * @return vega
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "3.1415", value = "Ask-based vega. It represents the first partial derivative of the function determining the option's theoretical price with respect to the implied volatility, evaluated at the current implied volatility. Vega indicates the ratio of the absolute change of the price of an option for an absolute change of the implied volatility, thus it represents the price sensitivity of the option relative to changes in the implied volatility.")
  @JsonIgnore

  public BigDecimal getVega() {
        return vega.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VEGA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getVega_JsonNullable() {
    return vega;
  }
  
  @JsonProperty(JSON_PROPERTY_VEGA)
  public void setVega_JsonNullable(JsonNullable<BigDecimal> vega) {
    this.vega = vega;
  }

  public void setVega(BigDecimal vega) {
    this.vega = JsonNullable.<BigDecimal>of(vega);
  }


  public PostOptionByClassListDataItemsKeyFigures gamma(BigDecimal gamma) {
    this.gamma = JsonNullable.<BigDecimal>of(gamma);
    return this;
  }

   /**
   * Ask-based gamma. It represents the second partial derivative of the function determining the option&#39;s theoretical price with respect to the underlying level, evaluated at the current underlying level. Gamma indicates the rate of change of the option&#39;s delta (see attribute &#x60;delta&#x60;) with respect to the underlying level.
   * @return gamma
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "5.05", value = "Ask-based gamma. It represents the second partial derivative of the function determining the option's theoretical price with respect to the underlying level, evaluated at the current underlying level. Gamma indicates the rate of change of the option's delta (see attribute `delta`) with respect to the underlying level.")
  @JsonIgnore

  public BigDecimal getGamma() {
        return gamma.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GAMMA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getGamma_JsonNullable() {
    return gamma;
  }
  
  @JsonProperty(JSON_PROPERTY_GAMMA)
  public void setGamma_JsonNullable(JsonNullable<BigDecimal> gamma) {
    this.gamma = gamma;
  }

  public void setGamma(BigDecimal gamma) {
    this.gamma = JsonNullable.<BigDecimal>of(gamma);
  }


  public PostOptionByClassListDataItemsKeyFigures rho(BigDecimal rho) {
    this.rho = JsonNullable.<BigDecimal>of(rho);
    return this;
  }

   /**
   * Ask-based rho. It represents the first partial derivative of the function determining the option&#39;s theoretical price with respect to the risk-free interest rate, evaluated at the current risk-free interest rate. Rho indicates the ratio of the absolute change of the price of an option for an absolute change of the risk-free interest rate, thus it represents the price sensitivity of the option relative to changes in the risk-free interest rate. The key figure is shown in one basis point change.
   * @return rho
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "4.04", value = "Ask-based rho. It represents the first partial derivative of the function determining the option's theoretical price with respect to the risk-free interest rate, evaluated at the current risk-free interest rate. Rho indicates the ratio of the absolute change of the price of an option for an absolute change of the risk-free interest rate, thus it represents the price sensitivity of the option relative to changes in the risk-free interest rate. The key figure is shown in one basis point change.")
  @JsonIgnore

  public BigDecimal getRho() {
        return rho.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RHO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getRho_JsonNullable() {
    return rho;
  }
  
  @JsonProperty(JSON_PROPERTY_RHO)
  public void setRho_JsonNullable(JsonNullable<BigDecimal> rho) {
    this.rho = rho;
  }

  public void setRho(BigDecimal rho) {
    this.rho = JsonNullable.<BigDecimal>of(rho);
  }


  /**
   * Return true if this PostOptionByClassListDataItems_keyFigures object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostOptionByClassListDataItemsKeyFigures postOptionByClassListDataItemsKeyFigures = (PostOptionByClassListDataItemsKeyFigures) o;
    return equalsNullable(this.moneyness, postOptionByClassListDataItemsKeyFigures.moneyness) &&
        equalsNullable(this.impliedVolatility, postOptionByClassListDataItemsKeyFigures.impliedVolatility) &&
        equalsNullable(this.omega, postOptionByClassListDataItemsKeyFigures.omega) &&
        equalsNullable(this.leverage, postOptionByClassListDataItemsKeyFigures.leverage) &&
        equalsNullable(this.delta, postOptionByClassListDataItemsKeyFigures.delta) &&
        equalsNullable(this.thetaOneWeek, postOptionByClassListDataItemsKeyFigures.thetaOneWeek) &&
        equalsNullable(this.vega, postOptionByClassListDataItemsKeyFigures.vega) &&
        equalsNullable(this.gamma, postOptionByClassListDataItemsKeyFigures.gamma) &&
        equalsNullable(this.rho, postOptionByClassListDataItemsKeyFigures.rho);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(moneyness), hashCodeNullable(impliedVolatility), hashCodeNullable(omega), hashCodeNullable(leverage), hashCodeNullable(delta), hashCodeNullable(thetaOneWeek), hashCodeNullable(vega), hashCodeNullable(gamma), hashCodeNullable(rho));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostOptionByClassListDataItemsKeyFigures {\n");
    sb.append("    moneyness: ").append(toIndentedString(moneyness)).append("\n");
    sb.append("    impliedVolatility: ").append(toIndentedString(impliedVolatility)).append("\n");
    sb.append("    omega: ").append(toIndentedString(omega)).append("\n");
    sb.append("    leverage: ").append(toIndentedString(leverage)).append("\n");
    sb.append("    delta: ").append(toIndentedString(delta)).append("\n");
    sb.append("    thetaOneWeek: ").append(toIndentedString(thetaOneWeek)).append("\n");
    sb.append("    vega: ").append(toIndentedString(vega)).append("\n");
    sb.append("    gamma: ").append(toIndentedString(gamma)).append("\n");
    sb.append("    rho: ").append(toIndentedString(rho)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

