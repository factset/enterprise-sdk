/*
 * Real-Time Options API
 * The Options API provides detailed information for option contracts (“options”) and option classes. This API presents a consolidated data model that gives access to options data of global options markets such as OPRA, Australia Exchange, Bovespa, CME Group, EUREX, Euronext, Hong Kong, ICE Futures Europe / US, Montreal Exchange, and others.  An option class is a product group of options from the same exchange and with the same underlying. The API includes endpoints to retrieve fundamental data for an option contract such as exercise right, exercise style, strike, maturity, open interest, underlying, etc. as well as risk measures of an option contract such as delta, omega, implied volatility, etc.  Option chains are provided by the /by-class/list endpoint. The list of option contracts for an option class can be filtered by exercise right, exercise style, strike, maturity, open interest, delta, omega, implied volatility, etc.  The option screener allows you to search for option classes by using text search, root symbol, or ISIN plus additional criteria such as market, underlying, currency, and category. Similar to other screener endpoints in e.g. the [Stocks API](https://developer.factset.com/api-catalog/stocks-api-digital-portals), the /value-ranges/get endpoint provides the possible values and value ranges plus the number of option contracts for an option class related to the option contracts per criteria such as exercise right, exercise style, strike, maturity, open interest, delta, omega, implied volatility, etc.  The Options API for Digital Portals seamlessly integrates with the [Real-Time Quotes API](https://developer.factset.com/api-catalog/real-time-quotes-api) that provides real-time, delayed, and end-of-day pricing data and basic security identifier cross-reference. For direct access to price histories for charting, please refer to the [Real-Time Time Series API](https://developer.factset.com/api-catalog/real-time-time-series-api). 
 *
 * The version of the OpenAPI document: 4.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.RealTimeOptions.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.RealTimeOptions.JSON;


/**
 * A list of objects. For semantical context see the description of the parent array.
 */
@ApiModel(description = "A list of objects. For semantical context see the description of the parent array.")
@JsonPropertyOrder({
  PostOptionByClassValueRangesGetDataExerciseStyleItems.JSON_PROPERTY_VALUE,
  PostOptionByClassValueRangesGetDataExerciseStyleItems.JSON_PROPERTY_COUNT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class PostOptionByClassValueRangesGetDataExerciseStyleItems implements Serializable {
  private static final long serialVersionUID = 1L;

  /**
   * undefined | Value | Description | | --- | --- | | american | An American-style option can be exercised anytime during its life. | | european | A European-style option can be exercised at the end of its life. |  
   */
  public enum ValueEnum {
    AMERICAN("american"),
    
    EUROPEAN("european");

    private String value;

    ValueEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ValueEnum fromValue(String value) {
      for (ValueEnum b : ValueEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_VALUE = "value";
  private JsonNullable<ValueEnum> value = JsonNullable.<ValueEnum>undefined();

  public static final String JSON_PROPERTY_COUNT = "count";
  private JsonNullable<BigDecimal> count = JsonNullable.<BigDecimal>undefined();

  public PostOptionByClassValueRangesGetDataExerciseStyleItems() { 
  }

  public PostOptionByClassValueRangesGetDataExerciseStyleItems value(ValueEnum value) {
    this.value = JsonNullable.<ValueEnum>of(value);
    return this;
  }

   /**
   * undefined | Value | Description | | --- | --- | | american | An American-style option can be exercised anytime during its life. | | european | A European-style option can be exercised at the end of its life. |  
   * @return value
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "european", value = "undefined | Value | Description | | --- | --- | | american | An American-style option can be exercised anytime during its life. | | european | A European-style option can be exercised at the end of its life. |  ")
  @JsonIgnore

  public ValueEnum getValue() {
        return value.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ValueEnum> getValue_JsonNullable() {
    return value;
  }
  
  @JsonProperty(JSON_PROPERTY_VALUE)
  public void setValue_JsonNullable(JsonNullable<ValueEnum> value) {
    this.value = value;
  }

  public void setValue(ValueEnum value) {
    this.value = JsonNullable.<ValueEnum>of(value);
  }


  public PostOptionByClassValueRangesGetDataExerciseStyleItems count(BigDecimal count) {
    this.count = JsonNullable.<BigDecimal>of(count);
    return this;
  }

   /**
   * Number of notations.
   * @return count
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "1", value = "Number of notations.")
  @JsonIgnore

  public BigDecimal getCount() {
        return count.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getCount_JsonNullable() {
    return count;
  }
  
  @JsonProperty(JSON_PROPERTY_COUNT)
  public void setCount_JsonNullable(JsonNullable<BigDecimal> count) {
    this.count = count;
  }

  public void setCount(BigDecimal count) {
    this.count = JsonNullable.<BigDecimal>of(count);
  }


  /**
   * Return true if this PostOptionByClassValueRangesGetDataExerciseStyleItems object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostOptionByClassValueRangesGetDataExerciseStyleItems postOptionByClassValueRangesGetDataExerciseStyleItems = (PostOptionByClassValueRangesGetDataExerciseStyleItems) o;
    return equalsNullable(this.value, postOptionByClassValueRangesGetDataExerciseStyleItems.value) &&
        equalsNullable(this.count, postOptionByClassValueRangesGetDataExerciseStyleItems.count);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(value), hashCodeNullable(count));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostOptionByClassValueRangesGetDataExerciseStyleItems {\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

