/*
 * Real-Time Options API
 * The Options API provides detailed information for option contracts (“options”) and option classes. This API presents a consolidated data model that gives access to options data of global options markets such as OPRA, Australia Exchange, Bovespa, CME Group, EUREX, Euronext, Hong Kong, ICE Futures Europe / US, Montreal Exchange, and others.  An option class is a product group of options from the same exchange and with the same underlying. The API includes endpoints to retrieve fundamental data for an option contract such as exercise right, exercise style, strike, maturity, open interest, underlying, etc. as well as risk measures of an option contract such as delta, omega, implied volatility, etc.  Option chains are provided by the /by-class/list endpoint. The list of option contracts for an option class can be filtered by exercise right, exercise style, strike, maturity, open interest, delta, omega, implied volatility, etc.  The option screener allows you to search for option classes by using text search, root symbol, or ISIN plus additional criteria such as market, underlying, currency, and category. Similar to other screener endpoints in e.g. the [Stocks API](https://developer.factset.com/api-catalog/stocks-api-digital-portals), the /value-ranges/get endpoint provides the possible values and value ranges plus the number of option contracts for an option class related to the option contracts per criteria such as exercise right, exercise style, strike, maturity, open interest, delta, omega, implied volatility, etc.  The Options API for Digital Portals seamlessly integrates with the [Real-Time Quotes API](https://developer.factset.com/api-catalog/real-time-quotes-api) that provides real-time, delayed, and end-of-day pricing data and basic security identifier cross-reference. For direct access to price histories for charting, please refer to the [Real-Time Time Series API](https://developer.factset.com/api-catalog/real-time-time-series-api). 
 *
 * The version of the OpenAPI document: 4.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.RealTimeOptions.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.RealTimeOptions.JSON;


/**
 * NSIN data of the instrument.
 */
@ApiModel(description = "NSIN data of the instrument.")
@JsonPropertyOrder({
  InlineResponse200DataUnderlyingNotationInstrumentNsin.JSON_PROPERTY_WKN,
  InlineResponse200DataUnderlyingNotationInstrumentNsin.JSON_PROPERTY_VALOR,
  InlineResponse200DataUnderlyingNotationInstrumentNsin.JSON_PROPERTY_CUSIP
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class InlineResponse200DataUnderlyingNotationInstrumentNsin implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_WKN = "wkn";
  private JsonNullable<String> wkn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_VALOR = "valor";
  private JsonNullable<String> valor = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CUSIP = "cusip";
  private JsonNullable<String> cusip = JsonNullable.<String>undefined();

  public InlineResponse200DataUnderlyingNotationInstrumentNsin() { 
  }

  public InlineResponse200DataUnderlyingNotationInstrumentNsin wkn(String wkn) {
    this.wkn = JsonNullable.<String>of(wkn);
    return this;
  }

   /**
   * The WKN (Wertpapierkennnummer, German for Securities Identification Number) of the instrument. The WKN is a 6-character code of digits and upper-case letters that uniquely identifies an instrument.
   * @return wkn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "901629", value = "The WKN (Wertpapierkennnummer, German for Securities Identification Number) of the instrument. The WKN is a 6-character code of digits and upper-case letters that uniquely identifies an instrument.")
  @JsonIgnore

  public String getWkn() {
        return wkn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WKN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getWkn_JsonNullable() {
    return wkn;
  }
  
  @JsonProperty(JSON_PROPERTY_WKN)
  public void setWkn_JsonNullable(JsonNullable<String> wkn) {
    this.wkn = wkn;
  }

  public void setWkn(String wkn) {
    this.wkn = JsonNullable.<String>of(wkn);
  }


  public InlineResponse200DataUnderlyingNotationInstrumentNsin valor(String valor) {
    this.valor = JsonNullable.<String>of(valor);
    return this;
  }

   /**
   * The Valor number (German: Valorennummer) of the instrument. The Valor number is an integer number that uniquely identifies an instrument.
   * @return valor
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "1234567", value = "The Valor number (German: Valorennummer) of the instrument. The Valor number is an integer number that uniquely identifies an instrument.")
  @JsonIgnore

  public String getValor() {
        return valor.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VALOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getValor_JsonNullable() {
    return valor;
  }
  
  @JsonProperty(JSON_PROPERTY_VALOR)
  public void setValor_JsonNullable(JsonNullable<String> valor) {
    this.valor = valor;
  }

  public void setValor(String valor) {
    this.valor = JsonNullable.<String>of(valor);
  }


  public InlineResponse200DataUnderlyingNotationInstrumentNsin cusip(String cusip) {
    this.cusip = JsonNullable.<String>of(cusip);
    return this;
  }

   /**
   * The CUSIP (Committee on Uniform Security Identification Procedures) or CINS (CUSIP International Numbering System) identifier of the instrument. These numbers are 9-character codes of digits and upper-case letters that uniquely identify an instrument.
   * @return cusip
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "303075105", value = "The CUSIP (Committee on Uniform Security Identification Procedures) or CINS (CUSIP International Numbering System) identifier of the instrument. These numbers are 9-character codes of digits and upper-case letters that uniquely identify an instrument.")
  @JsonIgnore

  public String getCusip() {
        return cusip.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CUSIP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCusip_JsonNullable() {
    return cusip;
  }
  
  @JsonProperty(JSON_PROPERTY_CUSIP)
  public void setCusip_JsonNullable(JsonNullable<String> cusip) {
    this.cusip = cusip;
  }

  public void setCusip(String cusip) {
    this.cusip = JsonNullable.<String>of(cusip);
  }


  /**
   * Return true if this inline_response_200_data_underlying_notation_instrument_nsin object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse200DataUnderlyingNotationInstrumentNsin inlineResponse200DataUnderlyingNotationInstrumentNsin = (InlineResponse200DataUnderlyingNotationInstrumentNsin) o;
    return equalsNullable(this.wkn, inlineResponse200DataUnderlyingNotationInstrumentNsin.wkn) &&
        equalsNullable(this.valor, inlineResponse200DataUnderlyingNotationInstrumentNsin.valor) &&
        equalsNullable(this.cusip, inlineResponse200DataUnderlyingNotationInstrumentNsin.cusip);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(wkn), hashCodeNullable(valor), hashCodeNullable(cusip));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse200DataUnderlyingNotationInstrumentNsin {\n");
    sb.append("    wkn: ").append(toIndentedString(wkn)).append("\n");
    sb.append("    valor: ").append(toIndentedString(valor)).append("\n");
    sb.append("    cusip: ").append(toIndentedString(cusip)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

