/*
 * Real-Time Options API
 * The Options API provides detailed information for option contracts (“options”) and option classes. This API presents a consolidated data model that gives access to options data of global options markets such as OPRA, Australia Exchange, Bovespa, CME Group, EUREX, Euronext, Hong Kong, ICE Futures Europe / US, Montreal Exchange, and others.  An option class is a product group of options from the same exchange and with the same underlying. The API includes endpoints to retrieve fundamental data for an option contract such as exercise right, exercise style, strike, maturity, open interest, underlying, etc. as well as risk measures of an option contract such as delta, omega, implied volatility, etc.  Option chains are provided by the /by-class/list endpoint. The list of option contracts for an option class can be filtered by exercise right, exercise style, strike, maturity, open interest, delta, omega, implied volatility, etc.  The option screener allows you to search for option classes by using text search, root symbol, or ISIN plus additional criteria such as market, underlying, currency, and category. Similar to other screener endpoints in e.g. the [Stocks API](https://developer.factset.com/api-catalog/stocks-api-digital-portals), the /value-ranges/get endpoint provides the possible values and value ranges plus the number of option contracts for an option class related to the option contracts per criteria such as exercise right, exercise style, strike, maturity, open interest, delta, omega, implied volatility, etc.  The Options API for Digital Portals seamlessly integrates with the [Real-Time Quotes API](https://developer.factset.com/api-catalog/real-time-quotes-api) that provides real-time, delayed, and end-of-day pricing data and basic security identifier cross-reference. For direct access to price histories for charting, please refer to the [Real-Time Time Series API](https://developer.factset.com/api-catalog/real-time-time-series-api). 
 *
 * The version of the OpenAPI document: 4.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.RealTimeOptions.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.RealTimeOptions.JSON;


/**
 * Expiration month and year, as defined by the market of the option, possibly different from the year and month of the maturity.
 */
@ApiModel(description = "Expiration month and year, as defined by the market of the option, possibly different from the year and month of the maturity.")
@JsonPropertyOrder({
  InlineResponse200DataLifeCycleExpiration.JSON_PROPERTY_MONTH,
  InlineResponse200DataLifeCycleExpiration.JSON_PROPERTY_YEAR
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class InlineResponse200DataLifeCycleExpiration implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_MONTH = "month";
  private JsonNullable<BigDecimal> month = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_YEAR = "year";
  private JsonNullable<BigDecimal> year = JsonNullable.<BigDecimal>undefined();

  public InlineResponse200DataLifeCycleExpiration() { 
  }

  public InlineResponse200DataLifeCycleExpiration month(BigDecimal month) {
    this.month = JsonNullable.<BigDecimal>of(month);
    return this;
  }

   /**
   * Month of the option&#39;s expiration.
   * @return month
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "-2", value = "Month of the option's expiration.")
  @JsonIgnore

  public BigDecimal getMonth() {
        return month.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MONTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getMonth_JsonNullable() {
    return month;
  }
  
  @JsonProperty(JSON_PROPERTY_MONTH)
  public void setMonth_JsonNullable(JsonNullable<BigDecimal> month) {
    this.month = month;
  }

  public void setMonth(BigDecimal month) {
    this.month = JsonNullable.<BigDecimal>of(month);
  }


  public InlineResponse200DataLifeCycleExpiration year(BigDecimal year) {
    this.year = JsonNullable.<BigDecimal>of(year);
    return this;
  }

   /**
   * Year of the option&#39;s expiration.
   * @return year
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "-2", value = "Year of the option's expiration.")
  @JsonIgnore

  public BigDecimal getYear() {
        return year.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_YEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getYear_JsonNullable() {
    return year;
  }
  
  @JsonProperty(JSON_PROPERTY_YEAR)
  public void setYear_JsonNullable(JsonNullable<BigDecimal> year) {
    this.year = year;
  }

  public void setYear(BigDecimal year) {
    this.year = JsonNullable.<BigDecimal>of(year);
  }


  /**
   * Return true if this inline_response_200_data_lifeCycle_expiration object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse200DataLifeCycleExpiration inlineResponse200DataLifeCycleExpiration = (InlineResponse200DataLifeCycleExpiration) o;
    return equalsNullable(this.month, inlineResponse200DataLifeCycleExpiration.month) &&
        equalsNullable(this.year, inlineResponse200DataLifeCycleExpiration.year);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(month), hashCodeNullable(year));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse200DataLifeCycleExpiration {\n");
    sb.append("    month: ").append(toIndentedString(month)).append("\n");
    sb.append("    year: ").append(toIndentedString(year)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

