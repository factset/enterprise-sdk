/*
 * FactSet Supply Chain API
 * Access the complex networks of key customer, suppliers, competitors and partners so that you can make insightful investment decisions. Relationship information is sourced from trusted primary sources and reverse-linked to non-disclosing parties, creating a comprehensive and consistent relationship graph. <p>This API is rate-limited to 10 requests per second and 10 concurrent requests per user.</p> 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetSupplyChain.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.FactSetSupplyChain.models.CompanyType;
import com.factset.sdk.FactSetSupplyChain.models.RelationshipDirection;
import com.factset.sdk.FactSetSupplyChain.models.RelationshipType;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetSupplyChain.JSON;


/**
 * Relationships request body elements
 */
@ApiModel(description = "Relationships request body elements")
@JsonPropertyOrder({
  RelationshipsRequestBody.JSON_PROPERTY_IDS,
  RelationshipsRequestBody.JSON_PROPERTY_RELATIONSHIP_TYPE,
  RelationshipsRequestBody.JSON_PROPERTY_COMPANY_TYPE,
  RelationshipsRequestBody.JSON_PROPERTY_RELATIONSHIP_DIRECTION
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class RelationshipsRequestBody implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_IDS = "ids";
  private java.util.List<String> ids = new java.util.ArrayList<>();

  public static final String JSON_PROPERTY_RELATIONSHIP_TYPE = "relationshipType";
  private RelationshipType relationshipType;

  public static final String JSON_PROPERTY_COMPANY_TYPE = "companyType";
  private CompanyType companyType;

  public static final String JSON_PROPERTY_RELATIONSHIP_DIRECTION = "relationshipDirection";
  private RelationshipDirection relationshipDirection;

  public RelationshipsRequestBody() { 
  }

  @JsonCreator
  public RelationshipsRequestBody(
    @JsonProperty(value=JSON_PROPERTY_IDS, required=true) java.util.List<String> ids, 
    @JsonProperty(value=JSON_PROPERTY_RELATIONSHIP_TYPE, required=true) RelationshipType relationshipType
  ) {
    this();
    this.ids = ids;
    this.relationshipType = relationshipType;
  }

  public RelationshipsRequestBody ids(java.util.List<String> ids) {
    this.ids = ids;
    return this;
  }

  public RelationshipsRequestBody addIdsItem(String idsItem) {
    this.ids.add(idsItem);
    return this;
  }

   /**
   * The requested list of security identifiers. Accepted ID types include Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids. * Make Note - id limit of 500 
   * @return ids
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "{\"oneId\":{\"summary\":\"One Security Identifier\",\"value\":[\"AAPL-USA\"]},\"multipleIds\":{\"summary\":\"Multiple Security Identifiers\",\"value\":[\"FDS-US\",\"AAPL-US\",\"MSFT-US\"]}}", required = true, value = "The requested list of security identifiers. Accepted ID types include Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids. * Make Note - id limit of 500 ")
  @JsonProperty(JSON_PROPERTY_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public java.util.List<String> getIds() {
    return ids;
  }


  @JsonProperty(JSON_PROPERTY_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIds(java.util.List<String> ids) {
    this.ids = ids;
  }


  public RelationshipsRequestBody relationshipType(RelationshipType relationshipType) {
    this.relationshipType = relationshipType;
    return this;
  }

   /**
   * Get relationshipType
   * @return relationshipType
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_RELATIONSHIP_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public RelationshipType getRelationshipType() {
    return relationshipType;
  }


  @JsonProperty(JSON_PROPERTY_RELATIONSHIP_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRelationshipType(RelationshipType relationshipType) {
    this.relationshipType = relationshipType;
  }


  public RelationshipsRequestBody companyType(CompanyType companyType) {
    this.companyType = companyType;
    return this;
  }

   /**
   * Get companyType
   * @return companyType
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_COMPANY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CompanyType getCompanyType() {
    return companyType;
  }


  @JsonProperty(JSON_PROPERTY_COMPANY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCompanyType(CompanyType companyType) {
    this.companyType = companyType;
  }


  public RelationshipsRequestBody relationshipDirection(RelationshipDirection relationshipDirection) {
    this.relationshipDirection = relationshipDirection;
    return this;
  }

   /**
   * Get relationshipDirection
   * @return relationshipDirection
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RELATIONSHIP_DIRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RelationshipDirection getRelationshipDirection() {
    return relationshipDirection;
  }


  @JsonProperty(JSON_PROPERTY_RELATIONSHIP_DIRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRelationshipDirection(RelationshipDirection relationshipDirection) {
    this.relationshipDirection = relationshipDirection;
  }


  /**
   * Return true if this relationshipsRequestBody object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RelationshipsRequestBody relationshipsRequestBody = (RelationshipsRequestBody) o;
    return Objects.equals(this.ids, relationshipsRequestBody.ids) &&
        Objects.equals(this.relationshipType, relationshipsRequestBody.relationshipType) &&
        Objects.equals(this.companyType, relationshipsRequestBody.companyType) &&
        Objects.equals(this.relationshipDirection, relationshipsRequestBody.relationshipDirection);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ids, relationshipType, companyType, relationshipDirection);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RelationshipsRequestBody {\n");
    sb.append("    ids: ").append(toIndentedString(ids)).append("\n");
    sb.append("    relationshipType: ").append(toIndentedString(relationshipType)).append("\n");
    sb.append("    companyType: ").append(toIndentedString(companyType)).append("\n");
    sb.append("    relationshipDirection: ").append(toIndentedString(relationshipDirection)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

