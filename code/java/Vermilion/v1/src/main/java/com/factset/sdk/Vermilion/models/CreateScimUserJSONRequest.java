/*
 * VRS API documentation
 * Documentation on all available end points in the VRSAPI
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.Vermilion.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.Vermilion.models.CreateScimUserJSONRequestName;
import com.factset.sdk.Vermilion.models.ScimEmail;
import com.factset.sdk.Vermilion.models.ScimPhone;
import com.factset.sdk.Vermilion.models.ScimPhoto;
import com.factset.sdk.Vermilion.models.Tenancy;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.Vermilion.JSON;


/**
 * Payload to create a new user in the system, including attributes like username, password, contact information, and tenant details.
 */
@ApiModel(description = "Payload to create a new user in the system, including attributes like username, password, contact information, and tenant details.")
@JsonPropertyOrder({
  CreateScimUserJSONRequest.JSON_PROPERTY_USER_NAME,
  CreateScimUserJSONRequest.JSON_PROPERTY_PASSWORD,
  CreateScimUserJSONRequest.JSON_PROPERTY_NAME,
  CreateScimUserJSONRequest.JSON_PROPERTY_PREFERRED_LANGUAGE,
  CreateScimUserJSONRequest.JSON_PROPERTY_ACTIVE,
  CreateScimUserJSONRequest.JSON_PROPERTY_AUTHENTICATED_USER_NAME,
  CreateScimUserJSONRequest.JSON_PROPERTY_TENANT,
  CreateScimUserJSONRequest.JSON_PROPERTY_DOMAIN_CODE,
  CreateScimUserJSONRequest.JSON_PROPERTY_PHONE_NUMBERS,
  CreateScimUserJSONRequest.JSON_PROPERTY_EMAILS,
  CreateScimUserJSONRequest.JSON_PROPERTY_PHOTOS,
  CreateScimUserJSONRequest.JSON_PROPERTY_TENANCIES
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class CreateScimUserJSONRequest implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_USER_NAME = "userName";
  private String userName;

  public static final String JSON_PROPERTY_PASSWORD = "password";
  private String password;

  public static final String JSON_PROPERTY_NAME = "name";
  private CreateScimUserJSONRequestName name;

  public static final String JSON_PROPERTY_PREFERRED_LANGUAGE = "preferredLanguage";
  private String preferredLanguage;

  public static final String JSON_PROPERTY_ACTIVE = "active";
  private Boolean active;

  public static final String JSON_PROPERTY_AUTHENTICATED_USER_NAME = "authenticatedUserName";
  private String authenticatedUserName;

  public static final String JSON_PROPERTY_TENANT = "tenant";
  private String tenant;

  public static final String JSON_PROPERTY_DOMAIN_CODE = "domainCode";
  private String domainCode;

  public static final String JSON_PROPERTY_PHONE_NUMBERS = "phoneNumbers";
  private java.util.List<ScimPhone> phoneNumbers = null;

  public static final String JSON_PROPERTY_EMAILS = "emails";
  private java.util.List<ScimEmail> emails = null;

  public static final String JSON_PROPERTY_PHOTOS = "photos";
  private java.util.List<ScimPhoto> photos = null;

  public static final String JSON_PROPERTY_TENANCIES = "tenancies";
  private java.util.List<Tenancy> tenancies = null;

  public CreateScimUserJSONRequest() { 
  }

  public CreateScimUserJSONRequest userName(String userName) {
    this.userName = userName;
    return this;
  }

   /**
   * Unique identifier for the user within the system, typically their loginID.
   * @return userName
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Unique identifier for the user within the system, typically their loginID.")
  @JsonProperty(JSON_PROPERTY_USER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUserName() {
    return userName;
  }


  @JsonProperty(JSON_PROPERTY_USER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserName(String userName) {
    this.userName = userName;
  }


  public CreateScimUserJSONRequest password(String password) {
    this.password = password;
    return this;
  }

   /**
   * Password associated with the user&#39;s account for authentication.
   * @return password
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Password associated with the user's account for authentication.")
  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPassword() {
    return password;
  }


  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPassword(String password) {
    this.password = password;
  }


  public CreateScimUserJSONRequest name(CreateScimUserJSONRequestName name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreateScimUserJSONRequestName getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(CreateScimUserJSONRequestName name) {
    this.name = name;
  }


  public CreateScimUserJSONRequest preferredLanguage(String preferredLanguage) {
    this.preferredLanguage = preferredLanguage;
    return this;
  }

   /**
   * The preferred language of the user.
   * @return preferredLanguage
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The preferred language of the user.")
  @JsonProperty(JSON_PROPERTY_PREFERRED_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPreferredLanguage() {
    return preferredLanguage;
  }


  @JsonProperty(JSON_PROPERTY_PREFERRED_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPreferredLanguage(String preferredLanguage) {
    this.preferredLanguage = preferredLanguage;
  }


  public CreateScimUserJSONRequest active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * Indicates whether the user account is active.
   * @return active
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether the user account is active.")
  @JsonProperty(JSON_PROPERTY_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getActive() {
    return active;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActive(Boolean active) {
    this.active = active;
  }


  public CreateScimUserJSONRequest authenticatedUserName(String authenticatedUserName) {
    this.authenticatedUserName = authenticatedUserName;
    return this;
  }

   /**
   * Authenticated username used by the SSO logins.
   * @return authenticatedUserName
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Authenticated username used by the SSO logins.")
  @JsonProperty(JSON_PROPERTY_AUTHENTICATED_USER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAuthenticatedUserName() {
    return authenticatedUserName;
  }


  @JsonProperty(JSON_PROPERTY_AUTHENTICATED_USER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthenticatedUserName(String authenticatedUserName) {
    this.authenticatedUserName = authenticatedUserName;
  }


  public CreateScimUserJSONRequest tenant(String tenant) {
    this.tenant = tenant;
    return this;
  }

   /**
   * Tenancy code in which user should be created.
   * @return tenant
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Tenancy code in which user should be created.")
  @JsonProperty(JSON_PROPERTY_TENANT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTenant() {
    return tenant;
  }


  @JsonProperty(JSON_PROPERTY_TENANT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTenant(String tenant) {
    this.tenant = tenant;
  }


  public CreateScimUserJSONRequest domainCode(String domainCode) {
    this.domainCode = domainCode;
    return this;
  }

   /**
   * Domain associated with the user
   * @return domainCode
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Domain associated with the user")
  @JsonProperty(JSON_PROPERTY_DOMAIN_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDomainCode() {
    return domainCode;
  }


  @JsonProperty(JSON_PROPERTY_DOMAIN_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDomainCode(String domainCode) {
    this.domainCode = domainCode;
  }


  public CreateScimUserJSONRequest phoneNumbers(java.util.List<ScimPhone> phoneNumbers) {
    this.phoneNumbers = phoneNumbers;
    return this;
  }

  public CreateScimUserJSONRequest addPhoneNumbersItem(ScimPhone phoneNumbersItem) {
    if (this.phoneNumbers == null) {
      this.phoneNumbers = new java.util.ArrayList<>();
    }
    this.phoneNumbers.add(phoneNumbersItem);
    return this;
  }

   /**
   * A list of phone numbers associated with the user.
   * @return phoneNumbers
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "A list of phone numbers associated with the user.")
  @JsonProperty(JSON_PROPERTY_PHONE_NUMBERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<ScimPhone> getPhoneNumbers() {
    return phoneNumbers;
  }


  @JsonProperty(JSON_PROPERTY_PHONE_NUMBERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhoneNumbers(java.util.List<ScimPhone> phoneNumbers) {
    this.phoneNumbers = phoneNumbers;
  }


  public CreateScimUserJSONRequest emails(java.util.List<ScimEmail> emails) {
    this.emails = emails;
    return this;
  }

  public CreateScimUserJSONRequest addEmailsItem(ScimEmail emailsItem) {
    if (this.emails == null) {
      this.emails = new java.util.ArrayList<>();
    }
    this.emails.add(emailsItem);
    return this;
  }

   /**
   * A list of email addresses associated with the user.
   * @return emails
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "A list of email addresses associated with the user.")
  @JsonProperty(JSON_PROPERTY_EMAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<ScimEmail> getEmails() {
    return emails;
  }


  @JsonProperty(JSON_PROPERTY_EMAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmails(java.util.List<ScimEmail> emails) {
    this.emails = emails;
  }


  public CreateScimUserJSONRequest photos(java.util.List<ScimPhoto> photos) {
    this.photos = photos;
    return this;
  }

  public CreateScimUserJSONRequest addPhotosItem(ScimPhoto photosItem) {
    if (this.photos == null) {
      this.photos = new java.util.ArrayList<>();
    }
    this.photos.add(photosItem);
    return this;
  }

   /**
   * A list of profile photos or images associated with the user.
   * @return photos
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "A list of profile photos or images associated with the user.")
  @JsonProperty(JSON_PROPERTY_PHOTOS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<ScimPhoto> getPhotos() {
    return photos;
  }


  @JsonProperty(JSON_PROPERTY_PHOTOS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhotos(java.util.List<ScimPhoto> photos) {
    this.photos = photos;
  }


  public CreateScimUserJSONRequest tenancies(java.util.List<Tenancy> tenancies) {
    this.tenancies = tenancies;
    return this;
  }

  public CreateScimUserJSONRequest addTenanciesItem(Tenancy tenanciesItem) {
    if (this.tenancies == null) {
      this.tenancies = new java.util.ArrayList<>();
    }
    this.tenancies.add(tenanciesItem);
    return this;
  }

   /**
   * A list of tenancies that need to be assigned to the user.
   * @return tenancies
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "A list of tenancies that need to be assigned to the user.")
  @JsonProperty(JSON_PROPERTY_TENANCIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<Tenancy> getTenancies() {
    return tenancies;
  }


  @JsonProperty(JSON_PROPERTY_TENANCIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTenancies(java.util.List<Tenancy> tenancies) {
    this.tenancies = tenancies;
  }


  /**
   * Return true if this CreateScimUserJSONRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateScimUserJSONRequest createScimUserJSONRequest = (CreateScimUserJSONRequest) o;
    return Objects.equals(this.userName, createScimUserJSONRequest.userName) &&
        Objects.equals(this.password, createScimUserJSONRequest.password) &&
        Objects.equals(this.name, createScimUserJSONRequest.name) &&
        Objects.equals(this.preferredLanguage, createScimUserJSONRequest.preferredLanguage) &&
        Objects.equals(this.active, createScimUserJSONRequest.active) &&
        Objects.equals(this.authenticatedUserName, createScimUserJSONRequest.authenticatedUserName) &&
        Objects.equals(this.tenant, createScimUserJSONRequest.tenant) &&
        Objects.equals(this.domainCode, createScimUserJSONRequest.domainCode) &&
        Objects.equals(this.phoneNumbers, createScimUserJSONRequest.phoneNumbers) &&
        Objects.equals(this.emails, createScimUserJSONRequest.emails) &&
        Objects.equals(this.photos, createScimUserJSONRequest.photos) &&
        Objects.equals(this.tenancies, createScimUserJSONRequest.tenancies);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userName, password, name, preferredLanguage, active, authenticatedUserName, tenant, domainCode, phoneNumbers, emails, photos, tenancies);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateScimUserJSONRequest {\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    preferredLanguage: ").append(toIndentedString(preferredLanguage)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    authenticatedUserName: ").append(toIndentedString(authenticatedUserName)).append("\n");
    sb.append("    tenant: ").append(toIndentedString(tenant)).append("\n");
    sb.append("    domainCode: ").append(toIndentedString(domainCode)).append("\n");
    sb.append("    phoneNumbers: ").append(toIndentedString(phoneNumbers)).append("\n");
    sb.append("    emails: ").append(toIndentedString(emails)).append("\n");
    sb.append("    photos: ").append(toIndentedString(photos)).append("\n");
    sb.append("    tenancies: ").append(toIndentedString(tenancies)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

