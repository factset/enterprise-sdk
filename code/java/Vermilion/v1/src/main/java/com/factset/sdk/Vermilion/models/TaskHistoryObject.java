/*
 * VRS API documentation
 * Documentation on all available end points in the VRSAPI
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.Vermilion.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.Vermilion.JSON;


/**
 * Details of an individual task history event.
 */
@ApiModel(description = "Details of an individual task history event.")
@JsonPropertyOrder({
  TaskHistoryObject.JSON_PROPERTY_TASK_TYPE,
  TaskHistoryObject.JSON_PROPERTY_DESCRIPTION,
  TaskHistoryObject.JSON_PROPERTY_DATE_AND_TIME,
  TaskHistoryObject.JSON_PROPERTY_ACTION_TYPE,
  TaskHistoryObject.JSON_PROPERTY_NOTES,
  TaskHistoryObject.JSON_PROPERTY_REASON_CODE,
  TaskHistoryObject.JSON_PROPERTY_DETAILS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class TaskHistoryObject implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_TASK_TYPE = "taskType";
  private String taskType;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_DATE_AND_TIME = "dateAndTime";
  private String dateAndTime;

  public static final String JSON_PROPERTY_ACTION_TYPE = "actionType";
  private String actionType;

  public static final String JSON_PROPERTY_NOTES = "notes";
  private String notes;

  public static final String JSON_PROPERTY_REASON_CODE = "reasonCode";
  private String reasonCode;

  public static final String JSON_PROPERTY_DETAILS = "details";
  private String details;

  public TaskHistoryObject() { 
  }

  public TaskHistoryObject taskType(String taskType) {
    this.taskType = taskType;
    return this;
  }

   /**
   * The task type of the task.
   * @return taskType
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The task type of the task.")
  @JsonProperty(JSON_PROPERTY_TASK_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTaskType() {
    return taskType;
  }


  @JsonProperty(JSON_PROPERTY_TASK_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaskType(String taskType) {
    this.taskType = taskType;
  }


  public TaskHistoryObject description(String description) {
    this.description = description;
    return this;
  }

   /**
   * A description of the task.
   * @return description
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "A description of the task.")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public TaskHistoryObject dateAndTime(String dateAndTime) {
    this.dateAndTime = dateAndTime;
    return this;
  }

   /**
   * The timestamp of the task history event in epoch format
   * @return dateAndTime
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The timestamp of the task history event in epoch format")
  @JsonProperty(JSON_PROPERTY_DATE_AND_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDateAndTime() {
    return dateAndTime;
  }


  @JsonProperty(JSON_PROPERTY_DATE_AND_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateAndTime(String dateAndTime) {
    this.dateAndTime = dateAndTime;
  }


  public TaskHistoryObject actionType(String actionType) {
    this.actionType = actionType;
    return this;
  }

   /**
   * The action type of the task history event.
   * @return actionType
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The action type of the task history event.")
  @JsonProperty(JSON_PROPERTY_ACTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getActionType() {
    return actionType;
  }


  @JsonProperty(JSON_PROPERTY_ACTION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActionType(String actionType) {
    this.actionType = actionType;
  }


  public TaskHistoryObject notes(String notes) {
    this.notes = notes;
    return this;
  }

   /**
   * The notes associated with the task history event.
   * @return notes
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The notes associated with the task history event.")
  @JsonProperty(JSON_PROPERTY_NOTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNotes() {
    return notes;
  }


  @JsonProperty(JSON_PROPERTY_NOTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNotes(String notes) {
    this.notes = notes;
  }


  public TaskHistoryObject reasonCode(String reasonCode) {
    this.reasonCode = reasonCode;
    return this;
  }

   /**
   * The reason code associated with the task history event.
   * @return reasonCode
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The reason code associated with the task history event.")
  @JsonProperty(JSON_PROPERTY_REASON_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReasonCode() {
    return reasonCode;
  }


  @JsonProperty(JSON_PROPERTY_REASON_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReasonCode(String reasonCode) {
    this.reasonCode = reasonCode;
  }


  public TaskHistoryObject details(String details) {
    this.details = details;
    return this;
  }

   /**
   * The details associated with the action of the task history event.
   * @return details
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The details associated with the action of the task history event.")
  @JsonProperty(JSON_PROPERTY_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDetails() {
    return details;
  }


  @JsonProperty(JSON_PROPERTY_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDetails(String details) {
    this.details = details;
  }


  /**
   * Return true if this TaskHistoryObject object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaskHistoryObject taskHistoryObject = (TaskHistoryObject) o;
    return Objects.equals(this.taskType, taskHistoryObject.taskType) &&
        Objects.equals(this.description, taskHistoryObject.description) &&
        Objects.equals(this.dateAndTime, taskHistoryObject.dateAndTime) &&
        Objects.equals(this.actionType, taskHistoryObject.actionType) &&
        Objects.equals(this.notes, taskHistoryObject.notes) &&
        Objects.equals(this.reasonCode, taskHistoryObject.reasonCode) &&
        Objects.equals(this.details, taskHistoryObject.details);
  }

  @Override
  public int hashCode() {
    return Objects.hash(taskType, description, dateAndTime, actionType, notes, reasonCode, details);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaskHistoryObject {\n");
    sb.append("    taskType: ").append(toIndentedString(taskType)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    dateAndTime: ").append(toIndentedString(dateAndTime)).append("\n");
    sb.append("    actionType: ").append(toIndentedString(actionType)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    reasonCode: ").append(toIndentedString(reasonCode)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

