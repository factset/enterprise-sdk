/*
 * VRS API documentation
 * Documentation on all available end points in the VRSAPI
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.Vermilion.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.Vermilion.models.CreatedScimUserJSONResponseMeta;
import com.factset.sdk.Vermilion.models.ScimEmail;
import com.factset.sdk.Vermilion.models.ScimPhone;
import com.factset.sdk.Vermilion.models.ScimPhoto;
import com.factset.sdk.Vermilion.models.ScimUserName;
import com.factset.sdk.Vermilion.models.Tenancy;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.Vermilion.JSON;


/**
 * Response object for creating a new SCIM user, containing core identity details, contact information, and account settings.
 */
@ApiModel(description = "Response object for creating a new SCIM user, containing core identity details, contact information, and account settings.")
@JsonPropertyOrder({
  CreatedScimUserJSONResponse.JSON_PROPERTY_SCHEMAS,
  CreatedScimUserJSONResponse.JSON_PROPERTY_ID,
  CreatedScimUserJSONResponse.JSON_PROPERTY_USER_NAME,
  CreatedScimUserJSONResponse.JSON_PROPERTY_NAME,
  CreatedScimUserJSONResponse.JSON_PROPERTY_USER_TYPE,
  CreatedScimUserJSONResponse.JSON_PROPERTY_PREFERRED_LANGUAGE,
  CreatedScimUserJSONResponse.JSON_PROPERTY_ACTIVE,
  CreatedScimUserJSONResponse.JSON_PROPERTY_AUTHENTICATED_USER_NAME,
  CreatedScimUserJSONResponse.JSON_PROPERTY_TENANT,
  CreatedScimUserJSONResponse.JSON_PROPERTY_PHONE_NUMBERS,
  CreatedScimUserJSONResponse.JSON_PROPERTY_EMAILS,
  CreatedScimUserJSONResponse.JSON_PROPERTY_TENANCIES,
  CreatedScimUserJSONResponse.JSON_PROPERTY_PHOTOS,
  CreatedScimUserJSONResponse.JSON_PROPERTY_DOMAIN_CODE,
  CreatedScimUserJSONResponse.JSON_PROPERTY_IS_ADMINISTRATOR,
  CreatedScimUserJSONResponse.JSON_PROPERTY_META
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class CreatedScimUserJSONResponse implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_SCHEMAS = "schemas";
  private java.util.List<String> schemas = null;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_USER_NAME = "userName";
  private String userName;

  public static final String JSON_PROPERTY_NAME = "name";
  private ScimUserName name;

  public static final String JSON_PROPERTY_USER_TYPE = "userType";
  private String userType;

  public static final String JSON_PROPERTY_PREFERRED_LANGUAGE = "preferredLanguage";
  private String preferredLanguage;

  public static final String JSON_PROPERTY_ACTIVE = "active";
  private Boolean active;

  public static final String JSON_PROPERTY_AUTHENTICATED_USER_NAME = "authenticatedUserName";
  private String authenticatedUserName;

  public static final String JSON_PROPERTY_TENANT = "tenant";
  private String tenant;

  public static final String JSON_PROPERTY_PHONE_NUMBERS = "phoneNumbers";
  private java.util.List<ScimPhone> phoneNumbers = null;

  public static final String JSON_PROPERTY_EMAILS = "emails";
  private java.util.List<ScimEmail> emails = null;

  public static final String JSON_PROPERTY_TENANCIES = "tenancies";
  private java.util.List<Tenancy> tenancies = null;

  public static final String JSON_PROPERTY_PHOTOS = "photos";
  private java.util.List<ScimPhoto> photos = null;

  public static final String JSON_PROPERTY_DOMAIN_CODE = "domainCode";
  private String domainCode;

  public static final String JSON_PROPERTY_IS_ADMINISTRATOR = "isAdministrator";
  private Boolean isAdministrator;

  public static final String JSON_PROPERTY_META = "meta";
  private CreatedScimUserJSONResponseMeta meta;

  public CreatedScimUserJSONResponse() { 
  }

  public CreatedScimUserJSONResponse schemas(java.util.List<String> schemas) {
    this.schemas = schemas;
    return this;
  }

  public CreatedScimUserJSONResponse addSchemasItem(String schemasItem) {
    if (this.schemas == null) {
      this.schemas = new java.util.ArrayList<>();
    }
    this.schemas.add(schemasItem);
    return this;
  }

   /**
   * Array listing the schema URIs associated with the user resource.
   * @return schemas
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Array listing the schema URIs associated with the user resource.")
  @JsonProperty(JSON_PROPERTY_SCHEMAS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<String> getSchemas() {
    return schemas;
  }


  @JsonProperty(JSON_PROPERTY_SCHEMAS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSchemas(java.util.List<String> schemas) {
    this.schemas = schemas;
  }


  public CreatedScimUserJSONResponse id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Unique identifier for the newly created user.
   * @return id
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Unique identifier for the newly created user.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public CreatedScimUserJSONResponse userName(String userName) {
    this.userName = userName;
    return this;
  }

   /**
   * Username used for identifying and logging in the user.
   * @return userName
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Username used for identifying and logging in the user.")
  @JsonProperty(JSON_PROPERTY_USER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUserName() {
    return userName;
  }


  @JsonProperty(JSON_PROPERTY_USER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserName(String userName) {
    this.userName = userName;
  }


  public CreatedScimUserJSONResponse name(ScimUserName name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ScimUserName getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(ScimUserName name) {
    this.name = name;
  }


  public CreatedScimUserJSONResponse userType(String userType) {
    this.userType = userType;
    return this;
  }

   /**
   * Type of user.
   * @return userType
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Type of user.")
  @JsonProperty(JSON_PROPERTY_USER_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUserType() {
    return userType;
  }


  @JsonProperty(JSON_PROPERTY_USER_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserType(String userType) {
    this.userType = userType;
  }


  public CreatedScimUserJSONResponse preferredLanguage(String preferredLanguage) {
    this.preferredLanguage = preferredLanguage;
    return this;
  }

   /**
   * User&#39;s preferred language.
   * @return preferredLanguage
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "User's preferred language.")
  @JsonProperty(JSON_PROPERTY_PREFERRED_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPreferredLanguage() {
    return preferredLanguage;
  }


  @JsonProperty(JSON_PROPERTY_PREFERRED_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPreferredLanguage(String preferredLanguage) {
    this.preferredLanguage = preferredLanguage;
  }


  public CreatedScimUserJSONResponse active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * Indicates if the user&#39;s account is currently active.
   * @return active
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Indicates if the user's account is currently active.")
  @JsonProperty(JSON_PROPERTY_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getActive() {
    return active;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActive(Boolean active) {
    this.active = active;
  }


  public CreatedScimUserJSONResponse authenticatedUserName(String authenticatedUserName) {
    this.authenticatedUserName = authenticatedUserName;
    return this;
  }

   /**
   * Authenticated username used by SSO login.
   * @return authenticatedUserName
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Authenticated username used by SSO login.")
  @JsonProperty(JSON_PROPERTY_AUTHENTICATED_USER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAuthenticatedUserName() {
    return authenticatedUserName;
  }


  @JsonProperty(JSON_PROPERTY_AUTHENTICATED_USER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthenticatedUserName(String authenticatedUserName) {
    this.authenticatedUserName = authenticatedUserName;
  }


  public CreatedScimUserJSONResponse tenant(String tenant) {
    this.tenant = tenant;
    return this;
  }

   /**
   * Tenancy code in which the user was created.
   * @return tenant
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Tenancy code in which the user was created.")
  @JsonProperty(JSON_PROPERTY_TENANT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTenant() {
    return tenant;
  }


  @JsonProperty(JSON_PROPERTY_TENANT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTenant(String tenant) {
    this.tenant = tenant;
  }


  public CreatedScimUserJSONResponse phoneNumbers(java.util.List<ScimPhone> phoneNumbers) {
    this.phoneNumbers = phoneNumbers;
    return this;
  }

  public CreatedScimUserJSONResponse addPhoneNumbersItem(ScimPhone phoneNumbersItem) {
    if (this.phoneNumbers == null) {
      this.phoneNumbers = new java.util.ArrayList<>();
    }
    this.phoneNumbers.add(phoneNumbersItem);
    return this;
  }

   /**
   * Array of phone numbers for the user, each with a type and value.
   * @return phoneNumbers
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Array of phone numbers for the user, each with a type and value.")
  @JsonProperty(JSON_PROPERTY_PHONE_NUMBERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<ScimPhone> getPhoneNumbers() {
    return phoneNumbers;
  }


  @JsonProperty(JSON_PROPERTY_PHONE_NUMBERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhoneNumbers(java.util.List<ScimPhone> phoneNumbers) {
    this.phoneNumbers = phoneNumbers;
  }


  public CreatedScimUserJSONResponse emails(java.util.List<ScimEmail> emails) {
    this.emails = emails;
    return this;
  }

  public CreatedScimUserJSONResponse addEmailsItem(ScimEmail emailsItem) {
    if (this.emails == null) {
      this.emails = new java.util.ArrayList<>();
    }
    this.emails.add(emailsItem);
    return this;
  }

   /**
   * Array of email addresses linked to the user account.
   * @return emails
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Array of email addresses linked to the user account.")
  @JsonProperty(JSON_PROPERTY_EMAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<ScimEmail> getEmails() {
    return emails;
  }


  @JsonProperty(JSON_PROPERTY_EMAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmails(java.util.List<ScimEmail> emails) {
    this.emails = emails;
  }


  public CreatedScimUserJSONResponse tenancies(java.util.List<Tenancy> tenancies) {
    this.tenancies = tenancies;
    return this;
  }

  public CreatedScimUserJSONResponse addTenanciesItem(Tenancy tenanciesItem) {
    if (this.tenancies == null) {
      this.tenancies = new java.util.ArrayList<>();
    }
    this.tenancies.add(tenanciesItem);
    return this;
  }

   /**
   * List of tenancies the user is associated with.
   * @return tenancies
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "List of tenancies the user is associated with.")
  @JsonProperty(JSON_PROPERTY_TENANCIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<Tenancy> getTenancies() {
    return tenancies;
  }


  @JsonProperty(JSON_PROPERTY_TENANCIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTenancies(java.util.List<Tenancy> tenancies) {
    this.tenancies = tenancies;
  }


  public CreatedScimUserJSONResponse photos(java.util.List<ScimPhoto> photos) {
    this.photos = photos;
    return this;
  }

  public CreatedScimUserJSONResponse addPhotosItem(ScimPhoto photosItem) {
    if (this.photos == null) {
      this.photos = new java.util.ArrayList<>();
    }
    this.photos.add(photosItem);
    return this;
  }

   /**
   * Array of URLs to the user&#39;s profile photos or avatars.
   * @return photos
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Array of URLs to the user's profile photos or avatars.")
  @JsonProperty(JSON_PROPERTY_PHOTOS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<ScimPhoto> getPhotos() {
    return photos;
  }


  @JsonProperty(JSON_PROPERTY_PHOTOS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhotos(java.util.List<ScimPhoto> photos) {
    this.photos = photos;
  }


  public CreatedScimUserJSONResponse domainCode(String domainCode) {
    this.domainCode = domainCode;
    return this;
  }

   /**
   * Domain code representing the user&#39;s domain.
   * @return domainCode
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Domain code representing the user's domain.")
  @JsonProperty(JSON_PROPERTY_DOMAIN_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDomainCode() {
    return domainCode;
  }


  @JsonProperty(JSON_PROPERTY_DOMAIN_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDomainCode(String domainCode) {
    this.domainCode = domainCode;
  }


  public CreatedScimUserJSONResponse isAdministrator(Boolean isAdministrator) {
    this.isAdministrator = isAdministrator;
    return this;
  }

   /**
   * Flag indicating if the user has admin privileges.
   * @return isAdministrator
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Flag indicating if the user has admin privileges.")
  @JsonProperty(JSON_PROPERTY_IS_ADMINISTRATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsAdministrator() {
    return isAdministrator;
  }


  @JsonProperty(JSON_PROPERTY_IS_ADMINISTRATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsAdministrator(Boolean isAdministrator) {
    this.isAdministrator = isAdministrator;
  }


  public CreatedScimUserJSONResponse meta(CreatedScimUserJSONResponseMeta meta) {
    this.meta = meta;
    return this;
  }

   /**
   * Get meta
   * @return meta
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_META)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CreatedScimUserJSONResponseMeta getMeta() {
    return meta;
  }


  @JsonProperty(JSON_PROPERTY_META)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMeta(CreatedScimUserJSONResponseMeta meta) {
    this.meta = meta;
  }


  /**
   * Return true if this CreatedScimUserJSONResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreatedScimUserJSONResponse createdScimUserJSONResponse = (CreatedScimUserJSONResponse) o;
    return Objects.equals(this.schemas, createdScimUserJSONResponse.schemas) &&
        Objects.equals(this.id, createdScimUserJSONResponse.id) &&
        Objects.equals(this.userName, createdScimUserJSONResponse.userName) &&
        Objects.equals(this.name, createdScimUserJSONResponse.name) &&
        Objects.equals(this.userType, createdScimUserJSONResponse.userType) &&
        Objects.equals(this.preferredLanguage, createdScimUserJSONResponse.preferredLanguage) &&
        Objects.equals(this.active, createdScimUserJSONResponse.active) &&
        Objects.equals(this.authenticatedUserName, createdScimUserJSONResponse.authenticatedUserName) &&
        Objects.equals(this.tenant, createdScimUserJSONResponse.tenant) &&
        Objects.equals(this.phoneNumbers, createdScimUserJSONResponse.phoneNumbers) &&
        Objects.equals(this.emails, createdScimUserJSONResponse.emails) &&
        Objects.equals(this.tenancies, createdScimUserJSONResponse.tenancies) &&
        Objects.equals(this.photos, createdScimUserJSONResponse.photos) &&
        Objects.equals(this.domainCode, createdScimUserJSONResponse.domainCode) &&
        Objects.equals(this.isAdministrator, createdScimUserJSONResponse.isAdministrator) &&
        Objects.equals(this.meta, createdScimUserJSONResponse.meta);
  }

  @Override
  public int hashCode() {
    return Objects.hash(schemas, id, userName, name, userType, preferredLanguage, active, authenticatedUserName, tenant, phoneNumbers, emails, tenancies, photos, domainCode, isAdministrator, meta);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreatedScimUserJSONResponse {\n");
    sb.append("    schemas: ").append(toIndentedString(schemas)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    userType: ").append(toIndentedString(userType)).append("\n");
    sb.append("    preferredLanguage: ").append(toIndentedString(preferredLanguage)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    authenticatedUserName: ").append(toIndentedString(authenticatedUserName)).append("\n");
    sb.append("    tenant: ").append(toIndentedString(tenant)).append("\n");
    sb.append("    phoneNumbers: ").append(toIndentedString(phoneNumbers)).append("\n");
    sb.append("    emails: ").append(toIndentedString(emails)).append("\n");
    sb.append("    tenancies: ").append(toIndentedString(tenancies)).append("\n");
    sb.append("    photos: ").append(toIndentedString(photos)).append("\n");
    sb.append("    domainCode: ").append(toIndentedString(domainCode)).append("\n");
    sb.append("    isAdministrator: ").append(toIndentedString(isAdministrator)).append("\n");
    sb.append("    meta: ").append(toIndentedString(meta)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

