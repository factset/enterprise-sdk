/*
 * VRS API documentation
 * Documentation on all available end points in the VRSAPI
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.Vermilion.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.Vermilion.JSON;


/**
 * Task data object.
 */
@ApiModel(description = "Task data object.")
@JsonPropertyOrder({
  TaskPatchRequestBodyData.JSON_PROPERTY_STATUS,
  TaskPatchRequestBodyData.JSON_PROPERTY_EXPECTED_START_DATE,
  TaskPatchRequestBodyData.JSON_PROPERTY_EXPECTED_END_DATE,
  TaskPatchRequestBodyData.JSON_PROPERTY_ACTUAL_START_DATE,
  TaskPatchRequestBodyData.JSON_PROPERTY_NOTES,
  TaskPatchRequestBodyData.JSON_PROPERTY_ROLE,
  TaskPatchRequestBodyData.JSON_PROPERTY_USER,
  TaskPatchRequestBodyData.JSON_PROPERTY_ACTION,
  TaskPatchRequestBodyData.JSON_PROPERTY_REASON
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class TaskPatchRequestBodyData implements Serializable {
  private static final long serialVersionUID = 1L;

  /**
   * Status of the task, status cannot be changed to IN_PROGRESS. It is case-sensitive and should be in upper case.
   */
  public enum StatusEnum {
    COMPLETED("COMPLETED"),
    
    IN_PROGRESS("IN_PROGRESS"),
    
    AWAITING_CORRECTION("AWAITING_CORRECTION"),
    
    PENDING("PENDING"),
    
    SKIPPED("SKIPPED"),
    
    FAILED_REJECTED("FAILED_REJECTED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public static final String JSON_PROPERTY_EXPECTED_START_DATE = "expectedStartDate";
  private String expectedStartDate;

  public static final String JSON_PROPERTY_EXPECTED_END_DATE = "expectedEndDate";
  private String expectedEndDate;

  public static final String JSON_PROPERTY_ACTUAL_START_DATE = "actualStartDate";
  private String actualStartDate;

  public static final String JSON_PROPERTY_NOTES = "notes";
  private String notes;

  public static final String JSON_PROPERTY_ROLE = "role";
  private String role;

  public static final String JSON_PROPERTY_USER = "user";
  private String user;

  public static final String JSON_PROPERTY_ACTION = "action";
  private String action;

  public static final String JSON_PROPERTY_REASON = "reason";
  private String reason;

  public TaskPatchRequestBodyData() { 
  }

  public TaskPatchRequestBodyData status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Status of the task, status cannot be changed to IN_PROGRESS. It is case-sensitive and should be in upper case.
   * @return status
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Status of the task, status cannot be changed to IN_PROGRESS. It is case-sensitive and should be in upper case.")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public TaskPatchRequestBodyData expectedStartDate(String expectedStartDate) {
    this.expectedStartDate = expectedStartDate;
    return this;
  }

   /**
   * Expected start date of task, date format should be &#39;d MMMMM yyyy HH:mm:ss&#39; and will be converted to server time zone.
   * @return expectedStartDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Expected start date of task, date format should be 'd MMMMM yyyy HH:mm:ss' and will be converted to server time zone.")
  @JsonProperty(JSON_PROPERTY_EXPECTED_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExpectedStartDate() {
    return expectedStartDate;
  }


  @JsonProperty(JSON_PROPERTY_EXPECTED_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpectedStartDate(String expectedStartDate) {
    this.expectedStartDate = expectedStartDate;
  }


  public TaskPatchRequestBodyData expectedEndDate(String expectedEndDate) {
    this.expectedEndDate = expectedEndDate;
    return this;
  }

   /**
   * Expected end date of task, date format should be &#39;d MMMMM yyyy HH:mm:ss&#39; and will be converted to server time zone.
   * @return expectedEndDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Expected end date of task, date format should be 'd MMMMM yyyy HH:mm:ss' and will be converted to server time zone.")
  @JsonProperty(JSON_PROPERTY_EXPECTED_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExpectedEndDate() {
    return expectedEndDate;
  }


  @JsonProperty(JSON_PROPERTY_EXPECTED_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpectedEndDate(String expectedEndDate) {
    this.expectedEndDate = expectedEndDate;
  }


  public TaskPatchRequestBodyData actualStartDate(String actualStartDate) {
    this.actualStartDate = actualStartDate;
    return this;
  }

   /**
   * Actual start date of task, date format should be &#39;d MMMMM yyyy HH:mm:ss&#39; and will be converted to server time zone.
   * @return actualStartDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Actual start date of task, date format should be 'd MMMMM yyyy HH:mm:ss' and will be converted to server time zone.")
  @JsonProperty(JSON_PROPERTY_ACTUAL_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getActualStartDate() {
    return actualStartDate;
  }


  @JsonProperty(JSON_PROPERTY_ACTUAL_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActualStartDate(String actualStartDate) {
    this.actualStartDate = actualStartDate;
  }


  public TaskPatchRequestBodyData notes(String notes) {
    this.notes = notes;
    return this;
  }

   /**
   * Notes for the task.
   * @return notes
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Notes for the task.")
  @JsonProperty(JSON_PROPERTY_NOTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNotes() {
    return notes;
  }


  @JsonProperty(JSON_PROPERTY_NOTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNotes(String notes) {
    this.notes = notes;
  }


  public TaskPatchRequestBodyData role(String role) {
    this.role = role;
    return this;
  }

   /**
   * Role assigned to the task, It can&#39;t be null or empty.
   * @return role
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Role assigned to the task, It can't be null or empty.")
  @JsonProperty(JSON_PROPERTY_ROLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRole() {
    return role;
  }


  @JsonProperty(JSON_PROPERTY_ROLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRole(String role) {
    this.role = role;
  }


  public TaskPatchRequestBodyData user(String user) {
    this.user = user;
    return this;
  }

   /**
   * User name assigned to the task.
   * @return user
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "User name assigned to the task.")
  @JsonProperty(JSON_PROPERTY_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUser() {
    return user;
  }


  @JsonProperty(JSON_PROPERTY_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUser(String user) {
    this.user = user;
  }


  public TaskPatchRequestBodyData action(String action) {
    this.action = action;
    return this;
  }

   /**
   * task action to be performed, Approve and Reject are the possible values.
   * @return action
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "task action to be performed, Approve and Reject are the possible values.")
  @JsonProperty(JSON_PROPERTY_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAction() {
    return action;
  }


  @JsonProperty(JSON_PROPERTY_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAction(String action) {
    this.action = action;
  }


  public TaskPatchRequestBodyData reason(String reason) {
    this.reason = reason;
    return this;
  }

   /**
   * Reason code for rejection or approval, It will be validated against values from VRSReasonCodes.properties.
   * @return reason
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Reason code for rejection or approval, It will be validated against values from VRSReasonCodes.properties.")
  @JsonProperty(JSON_PROPERTY_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReason() {
    return reason;
  }


  @JsonProperty(JSON_PROPERTY_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReason(String reason) {
    this.reason = reason;
  }


  /**
   * Return true if this TaskPatchRequestBody_data object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaskPatchRequestBodyData taskPatchRequestBodyData = (TaskPatchRequestBodyData) o;
    return Objects.equals(this.status, taskPatchRequestBodyData.status) &&
        Objects.equals(this.expectedStartDate, taskPatchRequestBodyData.expectedStartDate) &&
        Objects.equals(this.expectedEndDate, taskPatchRequestBodyData.expectedEndDate) &&
        Objects.equals(this.actualStartDate, taskPatchRequestBodyData.actualStartDate) &&
        Objects.equals(this.notes, taskPatchRequestBodyData.notes) &&
        Objects.equals(this.role, taskPatchRequestBodyData.role) &&
        Objects.equals(this.user, taskPatchRequestBodyData.user) &&
        Objects.equals(this.action, taskPatchRequestBodyData.action) &&
        Objects.equals(this.reason, taskPatchRequestBodyData.reason);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, expectedStartDate, expectedEndDate, actualStartDate, notes, role, user, action, reason);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaskPatchRequestBodyData {\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    expectedStartDate: ").append(toIndentedString(expectedStartDate)).append("\n");
    sb.append("    expectedEndDate: ").append(toIndentedString(expectedEndDate)).append("\n");
    sb.append("    actualStartDate: ").append(toIndentedString(actualStartDate)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

