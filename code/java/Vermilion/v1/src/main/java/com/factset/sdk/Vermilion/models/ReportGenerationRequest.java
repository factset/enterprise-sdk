/*
 * VRS API documentation
 * Documentation on all available end points in the VRSAPI
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.Vermilion.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.Vermilion.models.EntitySelection;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.Vermilion.JSON;


/**
 * details needed to request the generation of a report.
 */
@ApiModel(description = "details needed to request the generation of a report.")
@JsonPropertyOrder({
  ReportGenerationRequest.JSON_PROPERTY_REPORT,
  ReportGenerationRequest.JSON_PROPERTY_TENANCY,
  ReportGenerationRequest.JSON_PROPERTY_OUTPUT_FORMAT,
  ReportGenerationRequest.JSON_PROPERTY_SECTION_FILTER,
  ReportGenerationRequest.JSON_PROPERTY_PRIORITY,
  ReportGenerationRequest.JSON_PROPERTY_START_DATE,
  ReportGenerationRequest.JSON_PROPERTY_ENTITY_SELECTION
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class ReportGenerationRequest implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_REPORT = "report";
  private String report;

  public static final String JSON_PROPERTY_TENANCY = "tenancy";
  private String tenancy;

  /**
   * The desired output format for the generated report.
   */
  public enum OutputFormatEnum {
    WORD("WORD"),
    
    WORD2010("WORD2010"),
    
    EXCEL("EXCEL"),
    
    EXCEL2010("EXCEL2010"),
    
    PPT("PPT"),
    
    PPT2010("PPT2010"),
    
    PDF("PDF"),
    
    CSV("CSV"),
    
    XML("XML"),
    
    VXML("VXML"),
    
    HTML("HTML"),
    
    PS("PS");

    private String value;

    OutputFormatEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OutputFormatEnum fromValue(String value) {
      for (OutputFormatEnum b : OutputFormatEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_OUTPUT_FORMAT = "outputFormat";
  private OutputFormatEnum outputFormat;

  public static final String JSON_PROPERTY_SECTION_FILTER = "sectionFilter";
  private String sectionFilter;

  public static final String JSON_PROPERTY_PRIORITY = "priority";
  private String priority;

  public static final String JSON_PROPERTY_START_DATE = "startDate";
  private String startDate;

  public static final String JSON_PROPERTY_ENTITY_SELECTION = "entitySelection";
  private java.util.Map<String, EntitySelection> entitySelection = null;

  public ReportGenerationRequest() { 
  }

  public ReportGenerationRequest report(String report) {
    this.report = report;
    return this;
  }

   /**
   * The Report definition code.
   * @return report
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The Report definition code.")
  @JsonProperty(JSON_PROPERTY_REPORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReport() {
    return report;
  }


  @JsonProperty(JSON_PROPERTY_REPORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReport(String report) {
    this.report = report;
  }


  public ReportGenerationRequest tenancy(String tenancy) {
    this.tenancy = tenancy;
    return this;
  }

   /**
   * The tenancy code in which the report generation occurs.
   * @return tenancy
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The tenancy code in which the report generation occurs.")
  @JsonProperty(JSON_PROPERTY_TENANCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTenancy() {
    return tenancy;
  }


  @JsonProperty(JSON_PROPERTY_TENANCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTenancy(String tenancy) {
    this.tenancy = tenancy;
  }


  public ReportGenerationRequest outputFormat(OutputFormatEnum outputFormat) {
    this.outputFormat = outputFormat;
    return this;
  }

   /**
   * The desired output format for the generated report.
   * @return outputFormat
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The desired output format for the generated report.")
  @JsonProperty(JSON_PROPERTY_OUTPUT_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OutputFormatEnum getOutputFormat() {
    return outputFormat;
  }


  @JsonProperty(JSON_PROPERTY_OUTPUT_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOutputFormat(OutputFormatEnum outputFormat) {
    this.outputFormat = outputFormat;
  }


  public ReportGenerationRequest sectionFilter(String sectionFilter) {
    this.sectionFilter = sectionFilter;
    return this;
  }

   /**
   * Section filter that has to be used in the report generation process.
   * @return sectionFilter
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Section filter that has to be used in the report generation process.")
  @JsonProperty(JSON_PROPERTY_SECTION_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSectionFilter() {
    return sectionFilter;
  }


  @JsonProperty(JSON_PROPERTY_SECTION_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSectionFilter(String sectionFilter) {
    this.sectionFilter = sectionFilter;
  }


  public ReportGenerationRequest priority(String priority) {
    this.priority = priority;
    return this;
  }

   /**
   * The priority level assigned to the report generation request.
   * @return priority
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The priority level assigned to the report generation request.")
  @JsonProperty(JSON_PROPERTY_PRIORITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPriority() {
    return priority;
  }


  @JsonProperty(JSON_PROPERTY_PRIORITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPriority(String priority) {
    this.priority = priority;
  }


  public ReportGenerationRequest startDate(String startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * The scheduled start date for generating the report.
   * @return startDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The scheduled start date for generating the report.")
  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStartDate() {
    return startDate;
  }


  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartDate(String startDate) {
    this.startDate = startDate;
  }


  public ReportGenerationRequest entitySelection(java.util.Map<String, EntitySelection> entitySelection) {
    this.entitySelection = entitySelection;
    return this;
  }

  public ReportGenerationRequest putEntitySelectionItem(String key, EntitySelection entitySelectionItem) {
    if (this.entitySelection == null) {
      this.entitySelection = new java.util.HashMap<>();
    }
    this.entitySelection.put(key, entitySelectionItem);
    return this;
  }

   /**
   * Specifies the Entity selections for the report generation.
   * @return entitySelection
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Specifies the Entity selections for the report generation.")
  @JsonProperty(JSON_PROPERTY_ENTITY_SELECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.Map<String, EntitySelection> getEntitySelection() {
    return entitySelection;
  }


  @JsonProperty(JSON_PROPERTY_ENTITY_SELECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEntitySelection(java.util.Map<String, EntitySelection> entitySelection) {
    this.entitySelection = entitySelection;
  }


  /**
   * Return true if this ReportGenerationRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReportGenerationRequest reportGenerationRequest = (ReportGenerationRequest) o;
    return Objects.equals(this.report, reportGenerationRequest.report) &&
        Objects.equals(this.tenancy, reportGenerationRequest.tenancy) &&
        Objects.equals(this.outputFormat, reportGenerationRequest.outputFormat) &&
        Objects.equals(this.sectionFilter, reportGenerationRequest.sectionFilter) &&
        Objects.equals(this.priority, reportGenerationRequest.priority) &&
        Objects.equals(this.startDate, reportGenerationRequest.startDate) &&
        Objects.equals(this.entitySelection, reportGenerationRequest.entitySelection);
  }

  @Override
  public int hashCode() {
    return Objects.hash(report, tenancy, outputFormat, sectionFilter, priority, startDate, entitySelection);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReportGenerationRequest {\n");
    sb.append("    report: ").append(toIndentedString(report)).append("\n");
    sb.append("    tenancy: ").append(toIndentedString(tenancy)).append("\n");
    sb.append("    outputFormat: ").append(toIndentedString(outputFormat)).append("\n");
    sb.append("    sectionFilter: ").append(toIndentedString(sectionFilter)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    entitySelection: ").append(toIndentedString(entitySelection)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

