/*
 * VRS API documentation
 * Documentation on all available end points in the VRSAPI
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.Vermilion.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.Vermilion.models.ScimGroupMember;
import com.factset.sdk.Vermilion.models.ScimMeta;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.Vermilion.JSON;


/**
 * Role details, defining permissions and access.
 */
@ApiModel(description = "Role details, defining permissions and access.")
@JsonPropertyOrder({
  ScimGroup.JSON_PROPERTY_SCHEMAS,
  ScimGroup.JSON_PROPERTY_ID,
  ScimGroup.JSON_PROPERTY_DISPLAY_NAME,
  ScimGroup.JSON_PROPERTY_MEMBERS,
  ScimGroup.JSON_PROPERTY_TENANT,
  ScimGroup.JSON_PROPERTY_DOMAIN_CODE,
  ScimGroup.JSON_PROPERTY_META
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class ScimGroup implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_SCHEMAS = "schemas";
  private java.util.List<String> schemas = null;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_DISPLAY_NAME = "displayName";
  private String displayName;

  public static final String JSON_PROPERTY_MEMBERS = "members";
  private java.util.List<ScimGroupMember> members = null;

  public static final String JSON_PROPERTY_TENANT = "tenant";
  private String tenant;

  public static final String JSON_PROPERTY_DOMAIN_CODE = "domainCode";
  private String domainCode;

  public static final String JSON_PROPERTY_META = "meta";
  private ScimMeta meta;

  public ScimGroup() { 
  }

  public ScimGroup schemas(java.util.List<String> schemas) {
    this.schemas = schemas;
    return this;
  }

  public ScimGroup addSchemasItem(String schemasItem) {
    if (this.schemas == null) {
      this.schemas = new java.util.ArrayList<>();
    }
    this.schemas.add(schemasItem);
    return this;
  }

   /**
   * List of schema URIs for the group/role.
   * @return schemas
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "List of schema URIs for the group/role.")
  @JsonProperty(JSON_PROPERTY_SCHEMAS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<String> getSchemas() {
    return schemas;
  }


  @JsonProperty(JSON_PROPERTY_SCHEMAS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSchemas(java.util.List<String> schemas) {
    this.schemas = schemas;
  }


  public ScimGroup id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Unique identifier of the group/role.
   * @return id
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Unique identifier of the group/role.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public ScimGroup displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * The display name of the group/role.
   * @return displayName
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The display name of the group/role.")
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplayName() {
    return displayName;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public ScimGroup members(java.util.List<ScimGroupMember> members) {
    this.members = members;
    return this;
  }

  public ScimGroup addMembersItem(ScimGroupMember membersItem) {
    if (this.members == null) {
      this.members = new java.util.ArrayList<>();
    }
    this.members.add(membersItem);
    return this;
  }

   /**
   * A list of users assigned to the group/role.
   * @return members
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "A list of users assigned to the group/role.")
  @JsonProperty(JSON_PROPERTY_MEMBERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<ScimGroupMember> getMembers() {
    return members;
  }


  @JsonProperty(JSON_PROPERTY_MEMBERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMembers(java.util.List<ScimGroupMember> members) {
    this.members = members;
  }


  public ScimGroup tenant(String tenant) {
    this.tenant = tenant;
    return this;
  }

   /**
   * Tenant associated with the group/role.
   * @return tenant
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Tenant associated with the group/role.")
  @JsonProperty(JSON_PROPERTY_TENANT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTenant() {
    return tenant;
  }


  @JsonProperty(JSON_PROPERTY_TENANT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTenant(String tenant) {
    this.tenant = tenant;
  }


  public ScimGroup domainCode(String domainCode) {
    this.domainCode = domainCode;
    return this;
  }

   /**
   * Domain code for the group.
   * @return domainCode
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Domain code for the group.")
  @JsonProperty(JSON_PROPERTY_DOMAIN_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDomainCode() {
    return domainCode;
  }


  @JsonProperty(JSON_PROPERTY_DOMAIN_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDomainCode(String domainCode) {
    this.domainCode = domainCode;
  }


  public ScimGroup meta(ScimMeta meta) {
    this.meta = meta;
    return this;
  }

   /**
   * Get meta
   * @return meta
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_META)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ScimMeta getMeta() {
    return meta;
  }


  @JsonProperty(JSON_PROPERTY_META)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMeta(ScimMeta meta) {
    this.meta = meta;
  }


  /**
   * Return true if this ScimGroup object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScimGroup scimGroup = (ScimGroup) o;
    return Objects.equals(this.schemas, scimGroup.schemas) &&
        Objects.equals(this.id, scimGroup.id) &&
        Objects.equals(this.displayName, scimGroup.displayName) &&
        Objects.equals(this.members, scimGroup.members) &&
        Objects.equals(this.tenant, scimGroup.tenant) &&
        Objects.equals(this.domainCode, scimGroup.domainCode) &&
        Objects.equals(this.meta, scimGroup.meta);
  }

  @Override
  public int hashCode() {
    return Objects.hash(schemas, id, displayName, members, tenant, domainCode, meta);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScimGroup {\n");
    sb.append("    schemas: ").append(toIndentedString(schemas)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    members: ").append(toIndentedString(members)).append("\n");
    sb.append("    tenant: ").append(toIndentedString(tenant)).append("\n");
    sb.append("    domainCode: ").append(toIndentedString(domainCode)).append("\n");
    sb.append("    meta: ").append(toIndentedString(meta)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

