/*
 * VRS API documentation
 * Documentation on all available end points in the VRSAPI
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.Vermilion.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.Vermilion.JSON;


/**
 * Contains details about the Report revision.
 */
@ApiModel(description = "Contains details about the Report revision.")
@JsonPropertyOrder({
  ReportRevisionDTO.JSON_PROPERTY_REPORT_STATUS,
  ReportRevisionDTO.JSON_PROPERTY_START_DATE,
  ReportRevisionDTO.JSON_PROPERTY_FINISH_DATE,
  ReportRevisionDTO.JSON_PROPERTY_SIGN_OFF_STATUS,
  ReportRevisionDTO.JSON_PROPERTY_SIGN_OFF_NOTES,
  ReportRevisionDTO.JSON_PROPERTY_REPORT_REASON_CD,
  ReportRevisionDTO.JSON_PROPERTY_DESCRIPTION,
  ReportRevisionDTO.JSON_PROPERTY_LANGUAGE_CODE,
  ReportRevisionDTO.JSON_PROPERTY_OUTPUT_FORMAT,
  ReportRevisionDTO.JSON_PROPERTY_PERCENTAGE_COMPLETE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class ReportRevisionDTO implements Serializable {
  private static final long serialVersionUID = 1L;

  /**
   * The current status of the Report generation process.
   */
  public enum ReportStatusEnum {
    WAITING("WAITING"),
    
    STARTING("STARTING"),
    
    RETRIEVING_REQUEST("RETRIEVING_REQUEST"),
    
    CONTENT_FILTER("CONTENT_FILTER"),
    
    STYLE_PROCESSING("STYLE_PROCESSING"),
    
    STYLE_PREPROCESSING("STYLE_PREPROCESSING"),
    
    RULE_PROCESSING("RULE_PROCESSING"),
    
    GETTING_DATA("GETTING_DATA"),
    
    RI_PROCESSING("RI_PROCESSING"),
    
    COMPILE("COMPILE"),
    
    SUBSTITUTION("SUBSTITUTION"),
    
    TRANSLATION("TRANSLATION"),
    
    GRID_PROCESSING("GRID_PROCESSING"),
    
    CHART_PROCESSING("CHART_PROCESSING"),
    
    IMPORTED_FILE_PROCESSING("IMPORTED_FILE_PROCESSING"),
    
    TEXT_PROCESSING_STATUS("TEXT_PROCESSING_STATUS"),
    
    TOC_PROCESSING_STATUS("TOC_PROCESSING_STATUS"),
    
    COMPONENT_PROCESSING("COMPONENT_PROCESSING"),
    
    POST_PROCESSING("POST_PROCESSING"),
    
    POSTING_TO_WRS("POSTING_TO_WRS"),
    
    POSTED_TO_WRS("POSTED_TO_WRS"),
    
    RENDERING("RENDERING"),
    
    DOC_CREATION("DOC_CREATION"),
    
    PDF_CONVERSION("PDF_CONVERSION"),
    
    ABORTED("ABORTED"),
    
    COMPLETED("COMPLETED"),
    
    COMPLETED_CAUTIONS("COMPLETED_CAUTIONS"),
    
    COMPLETED_ERROR("COMPLETED_ERROR"),
    
    COMPLETED_MODIFYING("COMPLETED_MODIFYING"),
    
    COMPLETED_CHANGED("COMPLETED_CHANGED"),
    
    DELETING("DELETING"),
    
    REPORT_ORIGINAL_GENERATION("REPORT_ORIGINAL_GENERATION"),
    
    REPORT_PREVIOUS_REVISION("REPORT_PREVIOUS_REVISION"),
    
    GENERATING("GENERATING");

    private String value;

    ReportStatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ReportStatusEnum fromValue(String value) {
      for (ReportStatusEnum b : ReportStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_REPORT_STATUS = "reportStatus";
  private ReportStatusEnum reportStatus;

  public static final String JSON_PROPERTY_START_DATE = "startDate";
  private String startDate;

  public static final String JSON_PROPERTY_FINISH_DATE = "finishDate";
  private String finishDate;

  /**
   * Sign-off status of the Report.
   */
  public enum SignOffStatusEnum {
    REJECTED("REJECTED"),
    
    PENDING("PENDING"),
    
    APPROVED("APPROVED");

    private String value;

    SignOffStatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SignOffStatusEnum fromValue(String value) {
      for (SignOffStatusEnum b : SignOffStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SIGN_OFF_STATUS = "signOffStatus";
  private SignOffStatusEnum signOffStatus;

  public static final String JSON_PROPERTY_SIGN_OFF_NOTES = "signOffNotes";
  private String signOffNotes;

  public static final String JSON_PROPERTY_REPORT_REASON_CD = "reportReasonCd";
  private String reportReasonCd;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_LANGUAGE_CODE = "languageCode";
  private String languageCode;

  public static final String JSON_PROPERTY_OUTPUT_FORMAT = "outputFormat";
  private String outputFormat;

  public static final String JSON_PROPERTY_PERCENTAGE_COMPLETE = "percentageComplete";
  private BigDecimal percentageComplete;

  public ReportRevisionDTO() { 
  }

  public ReportRevisionDTO reportStatus(ReportStatusEnum reportStatus) {
    this.reportStatus = reportStatus;
    return this;
  }

   /**
   * The current status of the Report generation process.
   * @return reportStatus
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The current status of the Report generation process.")
  @JsonProperty(JSON_PROPERTY_REPORT_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ReportStatusEnum getReportStatus() {
    return reportStatus;
  }


  @JsonProperty(JSON_PROPERTY_REPORT_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReportStatus(ReportStatusEnum reportStatus) {
    this.reportStatus = reportStatus;
  }


  public ReportRevisionDTO startDate(String startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Start date of the Report generation process.
   * @return startDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Start date of the Report generation process.")
  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStartDate() {
    return startDate;
  }


  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartDate(String startDate) {
    this.startDate = startDate;
  }


  public ReportRevisionDTO finishDate(String finishDate) {
    this.finishDate = finishDate;
    return this;
  }

   /**
   * Completion date of the Report generation process.
   * @return finishDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Completion date of the Report generation process.")
  @JsonProperty(JSON_PROPERTY_FINISH_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFinishDate() {
    return finishDate;
  }


  @JsonProperty(JSON_PROPERTY_FINISH_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFinishDate(String finishDate) {
    this.finishDate = finishDate;
  }


  public ReportRevisionDTO signOffStatus(SignOffStatusEnum signOffStatus) {
    this.signOffStatus = signOffStatus;
    return this;
  }

   /**
   * Sign-off status of the Report.
   * @return signOffStatus
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Sign-off status of the Report.")
  @JsonProperty(JSON_PROPERTY_SIGN_OFF_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SignOffStatusEnum getSignOffStatus() {
    return signOffStatus;
  }


  @JsonProperty(JSON_PROPERTY_SIGN_OFF_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSignOffStatus(SignOffStatusEnum signOffStatus) {
    this.signOffStatus = signOffStatus;
  }


  public ReportRevisionDTO signOffNotes(String signOffNotes) {
    this.signOffNotes = signOffNotes;
    return this;
  }

   /**
   * Additional notes related to the sign-off process.
   * @return signOffNotes
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Additional notes related to the sign-off process.")
  @JsonProperty(JSON_PROPERTY_SIGN_OFF_NOTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSignOffNotes() {
    return signOffNotes;
  }


  @JsonProperty(JSON_PROPERTY_SIGN_OFF_NOTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSignOffNotes(String signOffNotes) {
    this.signOffNotes = signOffNotes;
  }


  public ReportRevisionDTO reportReasonCd(String reportReasonCd) {
    this.reportReasonCd = reportReasonCd;
    return this;
  }

   /**
   * Reason code for generating the Report.
   * @return reportReasonCd
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Reason code for generating the Report.")
  @JsonProperty(JSON_PROPERTY_REPORT_REASON_CD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReportReasonCd() {
    return reportReasonCd;
  }


  @JsonProperty(JSON_PROPERTY_REPORT_REASON_CD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReportReasonCd(String reportReasonCd) {
    this.reportReasonCd = reportReasonCd;
  }


  public ReportRevisionDTO description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description of the Report revision.
   * @return description
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Description of the Report revision.")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public ReportRevisionDTO languageCode(String languageCode) {
    this.languageCode = languageCode;
    return this;
  }

   /**
   * Language code of the Report.
   * @return languageCode
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Language code of the Report.")
  @JsonProperty(JSON_PROPERTY_LANGUAGE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLanguageCode() {
    return languageCode;
  }


  @JsonProperty(JSON_PROPERTY_LANGUAGE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLanguageCode(String languageCode) {
    this.languageCode = languageCode;
  }


  public ReportRevisionDTO outputFormat(String outputFormat) {
    this.outputFormat = outputFormat;
    return this;
  }

   /**
   * Output format of the Report.
   * @return outputFormat
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Output format of the Report.")
  @JsonProperty(JSON_PROPERTY_OUTPUT_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOutputFormat() {
    return outputFormat;
  }


  @JsonProperty(JSON_PROPERTY_OUTPUT_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOutputFormat(String outputFormat) {
    this.outputFormat = outputFormat;
  }


  public ReportRevisionDTO percentageComplete(BigDecimal percentageComplete) {
    this.percentageComplete = percentageComplete;
    return this;
  }

   /**
   * Percentage of completion for the Report generation.
   * @return percentageComplete
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Percentage of completion for the Report generation.")
  @JsonProperty(JSON_PROPERTY_PERCENTAGE_COMPLETE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPercentageComplete() {
    return percentageComplete;
  }


  @JsonProperty(JSON_PROPERTY_PERCENTAGE_COMPLETE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPercentageComplete(BigDecimal percentageComplete) {
    this.percentageComplete = percentageComplete;
  }


  /**
   * Return true if this ReportRevisionDTO object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReportRevisionDTO reportRevisionDTO = (ReportRevisionDTO) o;
    return Objects.equals(this.reportStatus, reportRevisionDTO.reportStatus) &&
        Objects.equals(this.startDate, reportRevisionDTO.startDate) &&
        Objects.equals(this.finishDate, reportRevisionDTO.finishDate) &&
        Objects.equals(this.signOffStatus, reportRevisionDTO.signOffStatus) &&
        Objects.equals(this.signOffNotes, reportRevisionDTO.signOffNotes) &&
        Objects.equals(this.reportReasonCd, reportRevisionDTO.reportReasonCd) &&
        Objects.equals(this.description, reportRevisionDTO.description) &&
        Objects.equals(this.languageCode, reportRevisionDTO.languageCode) &&
        Objects.equals(this.outputFormat, reportRevisionDTO.outputFormat) &&
        Objects.equals(this.percentageComplete, reportRevisionDTO.percentageComplete);
  }

  @Override
  public int hashCode() {
    return Objects.hash(reportStatus, startDate, finishDate, signOffStatus, signOffNotes, reportReasonCd, description, languageCode, outputFormat, percentageComplete);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReportRevisionDTO {\n");
    sb.append("    reportStatus: ").append(toIndentedString(reportStatus)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    finishDate: ").append(toIndentedString(finishDate)).append("\n");
    sb.append("    signOffStatus: ").append(toIndentedString(signOffStatus)).append("\n");
    sb.append("    signOffNotes: ").append(toIndentedString(signOffNotes)).append("\n");
    sb.append("    reportReasonCd: ").append(toIndentedString(reportReasonCd)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("    outputFormat: ").append(toIndentedString(outputFormat)).append("\n");
    sb.append("    percentageComplete: ").append(toIndentedString(percentageComplete)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

