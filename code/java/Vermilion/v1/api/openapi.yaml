openapi: 3.0.0
info:
  contact:
    email: api@factset.com
    name: FactSet Research Systems
    url: https://developer.factset.com/contact
  description: Documentation on all available end points in the VRSAPI
  license:
    name: Apache License, Version 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  title: VRS API documentation
  version: 1.0.0
externalDocs:
  description: API Documentation
  url: https://developer.factset.com/api-catalog/vermilion-api
servers:
- url: /
security:
- FactSetApiKey: []
- FactSetOAuth2: []
tags:
- name: Datasource
- name: Entity
- name: Report
- name: Report instance
- name: SCIM
- name: Version
paths:
  /v1/{tenant}/data-sources:
    get:
      description: List all datasources the user has permission to see
      operationId: getAllDataSources
      parameters:
      - description: The code of the tenancy
        example: TENANT
        explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      - description: The column to sort on. Append - to sort in descending order.
          If parameter is not given, no sorting will be done
        examples:
          name:
            description: The name of the datasource to sort
            value:
            - name
          type:
            description: The type of the datasource to sort
            value:
            - type
          outputRecordSet:
            description: The output recordset of the datasource to sort
            value:
            - outputRecordSet
          code:
            description: The code of the datasource to sort
            value:
            - code
          releaseTag:
            description: The release tag of the datasource to sort
            value:
            - releaseTag
          lastUpdatedBy:
            description: The last updated by user of the datasource to sort
            value:
            - lastUpdatedBy
          lastUpdated:
            description: The last updated by date of the datasource to sort
            value:
            - lastUpdated
        explode: false
        in: query
        name: _sort
        required: false
        schema:
          items:
            type: string
          maxItems: 1
          type: array
        style: form
      - description: Non-negative maximum number of entries to return. Default is
          25
        example: 10
        explode: true
        in: query
        name: _paginationLimit
        required: false
        schema:
          default: 25
          type: integer
        style: form
      - description: Non-negative number of entries to skip. Default is 0
        example: 0
        explode: true
        in: query
        name: _paginationOffset
        required: false
        schema:
          default: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                meta:
                  pagination:
                    total: 10
                    isEstimatedTotal: false
                  sort:
                  - name
                data:
                - dataSourceId: 123456
                  name: Metadata DS
                  code: METADATADS
                  dsType: AUTOMATIC
                  entities:
                  - entityId: 234
                    name: Date
                    code: SYSTEM_DATE
                  outputRecordSet: Meta Data RS
                  releaseTag: Build123
                  defaultDataSourceName: Default DS
                  dataPreview: Component123
                  lastUpdatedBy: user123
                  lastUpdated: 1715665983563
              schema:
                $ref: '#/components/schemas/DataSourceList'
          description: Successful operation
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notAuthenticated
                  title: User is not authenticated
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notAuthorized
                  title: No permissions to view this item
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: No permissions to view datasources in VRS
        "406":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notAcceptable
                  title: Unsupported Accept header. Header needs to be set to application/json
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unsupported Accept header. Header needs to be set to application/json.
      summary: Lists all datasources
      tags:
      - Datasource
      x-accepts: application/json
  /v1/{tenant}/data-sources/{dataSourceCode}:
    get:
      description: Gets a datasource based on the code passed
      operationId: getDataSourceByCode
      parameters:
      - description: The code of the tenancy
        example: TENANT
        explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      - description: The code of the datasource
        example: DSCODE
        explode: false
        in: path
        name: dataSourceCode
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  dataSourceId: 123456
                  name: Metadata DS
                  code: METADATADS
                  dsType: AUTOMATIC
                  entities:
                  - entityId: 234
                    name: Date
                    code: SYSTEM_DATE
                  outputRecordSet: Meta Data RS
                  releaseTag: Build123
                  defaultDataSourceName: Default DS
                  dataPreview: Component123
                  lastUpdatedBy: user123
                  lastUpdated: 1715665983563
              schema:
                $ref: '#/components/schemas/DataSourceData'
          description: Successful operation
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notAuthenticated
                  title: User is not authenticated
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notAuthorized
                  title: No permissions to view this item
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: No permissions to view datasources in VRS
        "404":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notFound
                  title: The datasource code passed was not found
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: The supplied datasource code was not found
        "406":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notAcceptable
                  title: Unsupported Accept header. Header needs to be set to application/json
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unsupported Accept header. Header needs to be set to application/json.
      summary: Gets a datasource
      tags:
      - Datasource
      x-accepts: application/json
  /v1/{tenant}/data-sources/{dataSourceCode}/data:
    get:
      description: Gets the data for the datasource. There are optional query parameters
        to filter the data
      operationId: getDataSourceData
      parameters:
      - description: The code of the tenancy
        example: TENANT
        explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      - description: The code of the datasource
        example: DSCODE
        explode: false
        in: path
        name: dataSourceCode
        required: true
        schema:
          type: string
        style: simple
      - description: 'A series of query parameter used to filter the data for a datasource.
          This represents the entities for the datasource. E.g.: entityCodes=ACCOUNT&entityCodes=FUNDS'
        example: FUNDS
        explode: true
        in: query
        name: entityCodes
        required: false
        schema:
          type: string
        style: form
      - description: 'A series of query parameter used to filter the data for a datasource.
          This is the entity key value for an entity selection. E.g.: entityKeys=1&entityKeys=Test2'
        example: Test2
        explode: true
        in: query
        name: entityKeys
        required: false
        schema:
          type: string
        style: form
      - description: Non-negative maximum number of entries to return. Default is
          25
        example: 10
        explode: true
        in: query
        name: _paginationLimit
        required: false
        schema:
          default: 25
          type: integer
        style: form
      - description: Non-negative number of entries to skip. Default is 0
        example: 0
        explode: true
        in: query
        name: _paginationOffset
        required: false
        schema:
          default: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  fields:
                  - fieldType: TEXT
                    id: 4567
                    hide: "false"
                    name: Pet
                  dstInstance:
                    dstInstanceId: 123456
                    dstInstanceType: AUTOMATIC
                    rows:
                    - rowId: 123
                      order: 1
                      fields:
                      - fieldId: 4567
                        fieldType: TEXT
                        fieldValue: Dog
              schema:
                $ref: '#/components/schemas/DataSourceDataInstance'
          description: Successful operation - returns data for the datasource
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: parameterError
                  title: The datasource code passed was invalid
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: The supplied datasource code was either missing or invalid,
            or the query parameters are invalid
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notAuthenticated
                  title: User is not authenticated
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notAuthorized
                  title: No permissions to view this item
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: No permissions to view datasources in VRS
        "404":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notFound
                  title: The datasource code passed was not found
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: The supplied datasource code was not found
        "406":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notAcceptable
                  title: Unsupported Accept header. Header needs to be set to application/json
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unsupported Accept header. Header needs to be set to application/json.
      summary: Gets the data for the datasource
      tags:
      - Datasource
      x-accepts: application/json
  /v1/{tenant}/entities/{entityCode}/values:
    get:
      description: Gets the entity values for the specified entity
      operationId: getEntityValuesByCode
      parameters:
      - description: The code of the tenancy
        example: TENANT
        explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      - description: The code of the entity
        example: ENTCODE
        explode: false
        in: path
        name: entityCode
        required: true
        schema:
          type: string
        style: simple
      - description: The entity field to sort on. Can only be sorted on entity key,
          description or secondary key fields. Append "-" to sort in descending order.
          If no parameter given, it will be sorted by key field in ascending order
          by default
        examples:
          entity key field:
            description: The name of the entity key field
            value:
            - entity key field
          entity description field:
            description: The name of the entity description field
            value:
            - entity description field
          entity secondary key field:
            description: The name of the entity secondary key field
            value:
            - entity secondary key field
        explode: false
        in: query
        name: _sort
        required: false
        schema:
          items:
            type: string
          maxItems: 1
          type: array
        style: form
      - description: Non-negative maximum number of entries to return. Default is
          25
        example: 10
        explode: true
        in: query
        name: _paginationLimit
        required: false
        schema:
          default: 25
          type: integer
        style: form
      - description: Non-negative number of entries to skip. Default is 0
        example: 0
        explode: true
        in: query
        name: _paginationOffset
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: 'Whether to show all field values for each entity row. Value
          should either be 1 or 0. Default is 0 (false). Otherwise, show all field
          values in a JSON array named "fieldsWithValues", with each array value being
          a string in the format of "**<FIELD_NAME> : <FIELD_VALUE>**". Both key and
          description field values will be included in this JSON array too.'
        example: 1
        explode: true
        in: query
        name: showAll
        required: false
        schema:
          default: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                meta:
                  pagination:
                    total: 10
                    isEstimatedTotal: false
                  sort:
                  - entityKey
                data:
                - entityRowId: 27706
                  keyValue: en-gb
                  descriptionValue: English (GB)
                  fieldsWithValues:
                  - 'language_code : en-gb'
                  - 'language_desc : English (GB)'
              schema:
                $ref: '#/components/schemas/EntityFieldValueDTO'
          description: Successful operation
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: parameterError
                  title: The entity code passed was invalid
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: The supplied entity code was either missing or invalid, or
            the entity was not found
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notAuthenticated
                  title: User is not authenticated
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notAuthorized
                  title: No permissions to view this item
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: No permissions to view datasources in VRS
        "404":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notFound
                  title: The entity code passed was not found
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: The supplied entity code was not found
        "406":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notAcceptable
                  title: Unsupported Accept header. Header needs to be set to application/json
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unsupported Accept header. Header needs to be set to application/json.
      summary: Gets the entity values
      tags:
      - Entity
      x-accepts: application/json
  /v1/{tenant}/reports:
    get:
      description: Gets all report definitions the user has permissions for
      operationId: getAllReportDefinitions
      parameters:
      - description: The code of the tenancy
        example: TENANT
        explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      - description: The column to sort on. Can add - to sort
        examples:
          name:
            description: The name of the report to sort
            value:
            - name
          type:
            description: The template owner of the report to sort
            value:
            - templateOwner
          code:
            description: The code of the report to sort
            value:
            - code
          releaseTag:
            description: The release tag of the report to sort
            value:
            - releaseTag
          lastUpdatedBy:
            description: The last updated by user of the report to sort
            value:
            - lastUpdatedBy
          lastModifiedBy:
            description: The last updated by date of the report to sort
            value:
            - lastModifiedBy
        explode: false
        in: query
        name: _sort
        required: false
        schema:
          items:
            type: string
          maxItems: 1
          type: array
        style: form
      - description: Non-negative maximum number of entries to return
        example: 10
        explode: true
        in: query
        name: _paginationLimit
        required: false
        schema:
          default: 25
          type: integer
        style: form
      - description: Non-negative number of entries to skip
        example: 0
        explode: true
        in: query
        name: _paginationOffset
        required: false
        schema:
          default: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                meta:
                  pagination:
                    total: 10
                    isEstimatedTotal: false
                data:
                - name: Test Report
                  code: TEST_REPORT
                  releaseTag: rel1.1
                  entities:
                  - entityId: 234
                    name: Date
                    code: SYSTEM_DATE
              schema:
                $ref: '#/components/schemas/ReportDefinitionList'
          description: Successful operation
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: parameterError
                  title: The report definition code passed was invalid
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: The supplied report definition code was either missing or invalid,
            or the report definition was not found
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notAuthenticated
                  title: User is not authenticated
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notAuthorized
                  title: No permissions to view this item
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: No permissions to view reports in VRS
        "406":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notAcceptable
                  title: Unsupported Accept header. Header needs to be set to application/json
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unsupported Accept header. Header needs to be set to application/json.
      summary: Gets all report definitions
      tags:
      - Report
      x-accepts: application/json
  /v1/{tenant}/reports/{reportDefinitionCode}:
    get:
      description: Gets a report defintion based on the code specified
      operationId: getReportDefinitionByCode
      parameters:
      - description: The code of the tenancy
        example: TENANT
        explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      - description: The code of the report definition
        example: RPCODE
        explode: false
        in: path
        name: reportDefinitionCode
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  name: Test Report
                  code: TEST_REPORT
                  releaseTag: rel1.1
                  entities:
                  - entityId: 234
                    name: Date
                    code: SYSTEM_DATE
              schema:
                $ref: '#/components/schemas/ReportDefinitionData'
          description: Successful operation
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: parameterError
                  title: The report definition code passed was invalid
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: The supplied report definition code was either missing or invalid,
            or the report definition was not found
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notAuthenticated
                  title: User is not authenticated
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notAuthorized
                  title: No permissions to view this item
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: No permissions to view reports in VRS
        "404":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notFound
                  title: The report definition code passed was not found
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: The supplied report definition code was was not found
        "406":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notAcceptable
                  title: Unsupported Accept header. Header needs to be set to application/json
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unsupported Accept header. Header needs to be set to application/json.
      summary: Gets a report definition
      tags:
      - Report
      x-accepts: application/json
  /v1/report-instances/generate:
    post:
      description: Generates a report using the specified ID and the JSON in the request
        body
      operationId: startReportGeneration
      requestBody:
        content:
          application/json:
            example:
              vrs:
                "1":
                  report: MONTHLY_REPORT
                  tenancy: CLIENT_REPORTING
                  outputFormat: PDF
                  sectionFilter: Section One
                  priority: "2"
                  startDate: 15 December 2023 00:00:00
                  entitySelection:
                    ACCOUNT:
                      key: Account name
                    PORTFOLIO:
                      key: Test fund
                    DATE:
                      key: 01 January 2020 00:00:00
            schema:
              $ref: '#/components/schemas/ReportGenerationRequestBody'
        required: true
      responses:
        "202":
          content:
            application/json:
              example:
                data:
                  reportInstanceId: 123456
              schema:
                $ref: '#/components/schemas/ReportInstanceDataResponse'
          description: Report generation request succeeded and report generation is
            in progress
          headers:
            Location:
              description: End point location to retrieve the latest status of the
                report generation. This is v1/{tenant}/report-instances/{reportInstanceId}
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: parameterError
                  title: The report definition code passed was invalid
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: The supplied report definition code was either missing or invalid,
            or the report definition was not found
          headers:
            Location:
              description: End point location to retrieve the latest status of the
                report generation. This is v1/{tenant}/report-instances/{reportInstanceId}
              explode: false
              schema:
                type: string
              style: simple
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notAuthenticated
                  title: User is not authenticated
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
          headers:
            Location:
              description: End point location to retrieve the latest status of the
                report generation. This is v1/{tenant}/report-instances/{reportInstanceId}
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notAuthorized
                  title: No permissions to view this item
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: No permissions to view reports in VRS
        "404":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notFound
                  title: The report definition code passed was not found
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: The report code could not be found
        "406":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notAcceptable
                  title: Unsupported Accept header. Header needs to be set to application/json
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unsupported Accept header. Header needs to be set to application/json.
      summary: Generates a report
      tags:
      - Report instance
      x-contentType: application/json
      x-accepts: application/json
  /v1/{tenant}/report-instances/{reportInstanceId}:
    delete:
      description: Sends a request to cancel a report generation based on the report
        instance id passed
      operationId: cancelReportGeneration
      parameters:
      - description: The code of the tenancy
        example: TENANT
        explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      - description: The id of the report instance
        example: "123456"
        explode: false
        in: path
        name: reportInstanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Successful operation - no response
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: parameterError
                  title: The ID passed is not a numerical value
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: The supplied report instance id was either missing or invalid
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notAuthenticated
                  title: User is not authenticated
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notAuthorized
                  title: No permissions to view this item
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: No permissions to view reports in VRS
        "404":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notFound
                  title: The report definition code passed was not found
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: The supplied report instance ID could not be found
        "406":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notAcceptable
                  title: Unsupported Accept header. Header needs to be set to application/json
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unsupported Accept header. Header needs to be set to application/json.
      summary: Cancels a report generation
      tags:
      - Report instance
      x-accepts: application/json
    get:
      description: Gets a report instance object based on the ID passed
      operationId: getReportInstanceById
      parameters:
      - description: The ID of the report instance
        example: "123456"
        explode: false
        in: path
        name: reportInstanceId
        required: true
        schema:
          type: string
        style: simple
      - description: The code of the tenancy
        example: TENANT
        explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  reportInstanceId: 123456
                  reportDefinitionId: 12021
                  reportDefinitionName: Sample Report Name
                  reportName: rep_929_67715_1709130994429.pdf
                  userFriendlyReportName: Sample Report.pdf
                  extension: pdf
                  reportRevision:
                    reportStatus: COMPLETED
                    startDate: "1709130994000"
                    finishDate: "1709113002873"
                    signOffStatus: PENDING
                    signOffNotes: ""
                    reportReasonCd: ""
                    description: Sample report
                    languageCode: en-gb
                    outputFormat: pdf
                    percentageComplete: 100
                  name: Sample Report.pdf
              schema:
                $ref: '#/components/schemas/ReportInstanceData'
          description: Successful operation
          headers:
            Location:
              description: A callback URL to the report file on VRS ready to download
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: parameterError
                  title: The ID passed is not a numerical value
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: The supplied report instance id was either missing or invalid,
            or the report instance was not found
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notAuthenticated
                  title: User is not authenticated
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notAuthorized
                  title: No permissions to view this item
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: No permissions to view reports in VRS
        "404":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notFound
                  title: The report definition code passed was not found
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: The supplied report instance ID could not be found
        "406":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notAcceptable
                  title: Unsupported Accept header. Header needs to be set to application/json
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unsupported Accept header. Header needs to be set to application/json.
      summary: Gets a report instance based on the ID
      tags:
      - Report instance
      x-accepts: application/json
  /v1/{tenant}/report-instances:
    get:
      description: Gets a list of report instances. This can be filtered down further
        by including query parameters in the URL. For example, a report definition
        id can be added so the only report instances returned are the ones with a
        matching id
      operationId: getAllReportInstances
      parameters:
      - description: The code of the tenancy
        example: TENANT
        explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      - description: Acts as a filter for the retrieval process. Filters the report
          instances that match the report definition code
        example: RPCODE
        explode: true
        in: query
        name: reportDefinitionCode
        required: false
        schema:
          type: string
        style: form
      - description: 'A series of query parameters used to filter the report instances
          by entity code. E.g: entityCode=DATE&entityCode=SYSTEM_LANG'
        example: SYSTEM_LANG
        explode: true
        in: query
        name: entityCodes
        required: false
        schema:
          type: string
        style: form
      - description: 'A series of query parameters used to filter the report instances
          by entity keys. E.g: entityKey=en-gb'
        example: en-gb
        explode: true
        in: query
        name: entityKeys
        required: false
        schema:
          type: string
        style: form
      - description: Acts as a filter for the retrieval process. Filters the report
          instances that match the section filter
        example: testFilter
        explode: true
        in: query
        name: sectionFilter
        required: false
        schema:
          type: string
        style: form
      - description: Acts as a filter for the retrieval process. Filters the report
          instances that match the output format
        example: pdf
        explode: true
        in: query
        name: outputFormat
        required: false
        schema:
          type: string
        style: form
      - description: The column to sort on. Append - to sort in descending order.
          If parameter is not given, sorting will be based on the report instance
          id in descending order
        examples:
          reportInstanceId:
            description: The id of report instance to sort
            value:
            - reportInstanceId
          reportStatus:
            description: The status of the report to sort
            value:
            - reportStatus
          startDate:
            description: The start date of the report to sort
            value:
            - startDate
          finishDate:
            description: The finish date of the report to sort
            value:
            - finishDate
          signOffStatus:
            description: The sign off status of the report to sort
            value:
            - signOffStatus
          outputFormat:
            description: The output format of report to sort
            value:
            - outputFormat
        explode: false
        in: query
        name: _sort
        required: false
        schema:
          items:
            type: string
          maxItems: 1
          type: array
        style: form
      - description: Non-negative maximum number of entries to return
        example: 10
        explode: true
        in: query
        name: _paginationLimit
        required: false
        schema:
          default: 25
          type: integer
        style: form
      - description: Non-negative number of entries to skip
        example: 0
        explode: true
        in: query
        name: _paginationOffset
        required: false
        schema:
          default: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                meta:
                  pagination:
                    total: 10
                    isEstimatedTotal: false
                data:
                - reportInstanceId: 123456
                  reportDefinitionId: 12021
                  reportDefinitionName: Sample Report Name
                  reportName: rep_929_67715_1709130994429.pdf
                  userFriendlyReportName: Sample Report.pdf
                  extension: pdf
                  reportRevision:
                    reportStatus: COMPLETED
                    startDate: "1709130994000"
                    finishDate: "1709113002873"
                    signOffStatus: PENDING
                    signOffNotes: ""
                    reportReasonCd: ""
                    description: Sample report
                    languageCode: en-gb
                    outputFormat: pdf
                    percentageComplete: 100
                  name: Sample Report.pdf
              schema:
                $ref: '#/components/schemas/ReportInstanceList'
          description: Successful operation
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notAuthenticated
                  title: User is not authenticated
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notAuthorized
                  title: No permissions to view this item
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: No permissions to view reports in VRS
        "406":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notAcceptable
                  title: Unsupported Accept header. Header needs to be set to application/json
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unsupported Accept header. Header needs to be set to application/json.
      summary: Gets a list of report instances
      tags:
      - Report instance
      x-accepts: application/json
  /v1/{tenant}/report-instances/{reportInstanceId}/results/{reportFileName}:
    get:
      description: |-
        Get the generated file for a report instance. Users can fetch the generated report once the generation is finished. The report instance id and the report file name are passed in as path paramters. The following mapping defines the respective Content-Type for the outputFormat defined during report generation.
        | outputFormat | Content-Type |
        | ---------------- | ------------|
        |WORD     | application/msword |
        |WORD2010 |   application/vnd.openxmlformats-officedocument.wordprocessingml.document|
        |EXCEL    |   application/vnd.ms-excel|
        |EXCEL2010|   application/vnd.openxmlformats-officedocument.spreadsheetml.sheet|
        |PPT      |   application/vnd.ms-powerpoint|
        |PPT2010  |   application/vnd.openxmlformats-officedocument.presentationml.presentation|
        |PDF      |   application/pdf|
        |CSV      |   text/csv|
        |XML      |   application/xml|
        |VXML     |   application/xml|
        |HTML     |   text/html|
        |PS       |   application/postscript|
      operationId: downloadReportFile
      parameters:
      - description: The code of the tenancy
        example: TENANT
        explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      - description: Used to validate that report file name belongs to the report
          instance passed
        example: "123456"
        explode: false
        in: path
        name: reportInstanceId
        required: true
        schema:
          type: string
        style: simple
      - description: 'The report file name that has to be retrieved. report file name.
          E.g: xyz.pdf'
        example: xyz.pdf
        explode: false
        in: path
        name: reportFileName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/ReportDataResponse'
            application/vnd.openxmlformats-officedocument.presentationml.presentation:
              schema:
                $ref: '#/components/schemas/ReportDataResponse'
            application/vnd.ms-powerpoint:
              schema:
                $ref: '#/components/schemas/ReportDataResponse'
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: '#/components/schemas/ReportDataResponse'
            application/vnd.ms-excel:
              schema:
                $ref: '#/components/schemas/ReportDataResponse'
            application/vnd.openxmlformats-officedocument.wordprocessingml.document:
              schema:
                $ref: '#/components/schemas/ReportDataResponse'
            application/msword:
              schema:
                $ref: '#/components/schemas/ReportDataResponse'
            application/postscript:
              schema:
                $ref: '#/components/schemas/ReportDataResponse'
            text/csv:
              schema:
                $ref: '#/components/schemas/ReportDataResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/ReportDataResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ReportDataResponse'
            application/zip:
              schema:
                $ref: '#/components/schemas/ReportDataResponse'
          description: Successful operation
        "400":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: parameterError
                  title: The ID passed is not a numerical value
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: The supplied report instance id was either missing or invalid
            or the report instance was not found. The supplied report file name was
            either invalid or not found
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notAuthenticated
                  title: User is not authenticated
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notAuthorized
                  title: No permissions to view this item
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: No permissions to view the generated file in VRS
        "406":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notAcceptable
                  title: Unsupported Accept header.
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unsupported Accept header.
      summary: Gets the generated file
      tags:
      - Report instance
      x-accepts: application/json
  /v1/{tenant}/report-instances/{reportInstanceId}/logs:
    get:
      description: Gets a list of logs for the generated report instance. Allows the
        user to sort on log message, type and date. Also allows for retrieving of
        just the errors & warnings'
      operationId: getReportGenerationLogs
      parameters:
      - description: The code of the tenancy
        example: TENANT
        explode: false
        in: path
        name: tenant
        required: true
        schema:
          type: string
        style: simple
      - description: Used to validate that report file name belongs to the report
          instance passed
        example: "123456"
        explode: false
        in: path
        name: reportInstanceId
        required: true
        schema:
          type: string
        style: simple
      - description: 'If the parameter is set to true the endpoint should return just
          errors and warnings E.g: errorsOnly=true'
        example: "true"
        explode: true
        in: query
        name: errorsOnly
        required: false
        schema:
          type: string
        style: form
      - description: The column to sort on. Can add - to sort
        examples:
          sequenceNumber:
            description: The sequence number of the log entry
            value:
            - sequenceNumber
          message:
            description: The log message to sort
            value:
            - message
          type:
            description: The type of the log to sort
            value:
            - type
          updatedDate:
            description: The updated date of the log to sort
            value:
            - updatdeDate
        explode: false
        in: query
        name: _sort
        required: false
        schema:
          items:
            type: string
          maxItems: 1
          type: array
        style: form
      - description: Non-negative maximum number of entries to return
        example: 10
        explode: true
        in: query
        name: _paginationLimit
        required: false
        schema:
          default: 25
          type: integer
        style: form
      - description: Non-negative number of entries to skip
        example: 0
        explode: true
        in: query
        name: _paginationOffset
        required: false
        schema:
          default: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                - sequenceNumber: 9464295
                  message: Get Data Completed
                  type: LOG
                  updateDate: "1709176498527"
              schema:
                $ref: '#/components/schemas/ReportInstanceLogList'
          description: Successful operation
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notAuthenticated
                  title: User is not authenticated
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
        "403":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notAuthorized
                  title: No permissions to view this item
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: No permissions to view reports in VRS
        "404":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notFound
                  title: The report instance ID passed was not found
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: The supplied report instance ID could not be found
        "406":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notAcceptable
                  title: |-
                    Unsupported Accept header. Header needs to be set to
                        application/json
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unsupported Accept header. Header needs to be set to application/json.
      summary: Gets a list of logs for the report instance generation
      tags:
      - Report instance
      x-accepts: application/json
  /scim/v2/Users:
    get:
      description: Retrieves a list of VRS users
      operationId: getAllUsers
      parameters:
      - description: Non-negative maximum number of entries to return
        example: 10
        explode: true
        in: query
        name: count
        required: false
        schema:
          type: integer
        style: form
      - description: The 1-based index of the first query result
        example: 5
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/scim+json:
              example:
                totalResults: 10
                itemsPerPage: 10
                startIndex: 5
                Resources:
                - schemas:
                  - urn:scim:schemas:extension:FactSet:VRS:1.0:User
                  id: "123456"
                  userName: TestUser
                  name:
                    formatted: Test User
                  userType: "0"
                  active: true
                  authenticatedUserName: TestUser
                  tenant: TENANT
                  phoneNumbers:
                  - value: "9876543210"
                    type: work
                    primary: true
                  emails:
                  - value: dummy@ex.com
                    type: work
                    primary: true
                  photos:
                  - value: Photopath
                    type: work
                    primary: true
                  tenancies:
                  - value: TENANT
                  groups:
                  - value: "218"
                    $ref: https://api.factset.com/vrsapi/scim/v2/Groups/218
                    type: Group
                    display: API Group
                  domainCode: TESTDOMAIN
                  isAdministrator: false
                  meta:
                    resourceType: VRSUser
                    created: 2024-03-13T08:01:32.297Z
                    lastModified: 2024-03-15T09:48:21.375Z
                    location: https://api.factset.com/vrsapi/scim/v2/Users/123456
              schema:
                $ref: '#/components/schemas/ScimUserListResponse'
          description: Successful operation
        "403":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User does not have view or update permission
                status: "403"
              schema:
                $ref: '#/components/schemas/ScimError'
          description: Forbidden, user does not have permission to view users
      summary: Retrieves a list of VRS users
      tags:
      - SCIM
      x-accepts: application/scim+json
    post:
      description: Creates a VRS user
      operationId: createUser
      requestBody:
        content:
          application/scim+json:
            example:
              userName: vrstestuser
              name:
                formatted: Vrstest User
              userType: Employee
              active: true
              authenticatedUserName: vrstestuser
              tenant: XXXXXXXXXX
              emails:
              - value: xyz@email.com
                type: work
                primary: true
              phoneNumbers:
              - value: "1234567890"
                type: work
                primary: true
              domainCode: XXXXXXXXXX
            schema:
              $ref: '#/components/schemas/CreateScimUserJSONRequest'
        required: true
      responses:
        "201":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:scim:schemas:extension:FactSet:VRS:1.0:User
                id: "218"
                userName: vrstestuser
                name:
                  formatted: Vrstest User
                userType: "0"
                preferredLanguage: en-gb
                active: true
                authenticatedUserName: vrstestuser
                tenant: XXXXXXXXXX
                phoneNumbers:
                - value: "1234567890"
                  type: work
                  primary: true
                emails:
                - value: xyz@email.com
                  type: work
                  primary: true
                tenancies:
                - value: XXXXXXXXXX
                photos:
                - value: Photopath
                  type: work
                  primary: true
                domainCode: XXXXXXXXXX
                isAdministrator: false
                meta:
                  resourceType: VRSUser
                  created: 2024-03-13T08:01:32.297Z
                  lastModified: 2024-03-13T08:01:32.297Z
                  location: https://api.factset.com/vrsapi/scim/v2/Users/218
              schema:
                $ref: '#/components/schemas/CreatedScimUserJSONResponse'
          description: Created
          headers:
            Location:
              description: A callback URL to the newly create user, for example https://example.com/VRSAPI/scim/v2/Users/1
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: No tenant code given
                status: "400"
              schema:
                $ref: '#/components/schemas/ScimError'
          description: Bad Request, required values not provided in JSON request body
            (e.g. tenant, name or userName (loginID)
        "403":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User does not have update permission for users
                status: "403"
              schema:
                $ref: '#/components/schemas/ScimError'
          description: Forbidden, user does not have permission to create users or
            it does not have requested tenancy assigned to it
        "409":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User already exists
                status: "409"
              schema:
                $ref: '#/components/schemas/ScimError'
          description: User already exists
      summary: Creates a user
      tags:
      - SCIM
      x-contentType: application/scim+json
      x-accepts: application/scim+json
  /scim/v2/Users/{userId}:
    delete:
      description: Deletes a VRS user (this marks them as 'Deleted' in the database)
      operationId: deleteUserById
      parameters:
      - description: The ID of the user
        example: "123456"
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User does not have permission to delete users
                status: "403"
              schema:
                $ref: '#/components/schemas/ScimError'
          description: Forbidden, user does not have permission to delete users
        "404":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Resource 1 not found
                status: "404"
              schema:
                $ref: '#/components/schemas/ScimError'
          description: Not Found
      summary: Deletes a VRS user
      tags:
      - SCIM
      x-accepts: application/scim+json
    get:
      description: Retrieves a VRS user based on their ID
      operationId: getUserById
      parameters:
      - description: The ID of the user
        example: "123456"
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:scim:schemas:extension:FactSet:VRS:1.0:User
                id: "123456"
                userName: TestUser
                name:
                  formatted: Test User
                userType: "0"
                active: true
                authenticatedUserName: TestUser
                tenant: TENANT
                phoneNumbers:
                - value: "9876543210"
                  type: work
                  primary: true
                emails:
                - value: dummy@ex.com
                  type: work
                  primary: true
                photos:
                - value: Photopath
                  type: work
                  primary: true
                tenancies:
                - value: TENANT
                groups:
                - value: "218"
                  $ref: https://api.factset.com/vrsapi/scim/v2/Groups/218
                  type: Group
                  display: API Group
                domainCode: TESTDOMAIN
                isAdministrator: false
                meta:
                  resourceType: VRSUser
                  created: 2024-03-13T08:01:32.297Z
                  lastModified: 2024-03-15T09:48:21.375Z
                  location: https://api.factset.com/vrsapi/scim/v2/Users/123456
              schema:
                $ref: '#/components/schemas/ScimUser'
          description: Successful operation
          headers:
            Location:
              description: A callback URL to the user, for example https://example.com/VRSAPI/scim/v2/Users/1
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User does not have permission to view users
                status: "403"
              schema:
                $ref: '#/components/schemas/ScimError'
          description: Forbidden, user does not have permission to view users
        "404":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Resource 1 not found
                status: "404"
              schema:
                $ref: '#/components/schemas/ScimError'
          description: Not Found
      summary: Retrieves a VRS User
      tags:
      - SCIM
      x-accepts: application/scim+json
    patch:
      description: Adds or removes VRS user attributes based on the JSON properties
      operationId: patchUserById
      parameters:
      - description: The ID of the user
        example: "123456"
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/scim+json:
            example:
              schemas:
              - urn:ietf:params:scim:api:messages:2.0:PatchOp
              Operations:
              - op: replace
                path: name.formatted
                value: Vrs Test User
            schema:
              $ref: '#/components/schemas/ScimUserPatchRequestBody'
        required: true
      responses:
        "200":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:scim:schemas:extension:FactSet:VRS:1.0:User
                id: "123456"
                userName: TestUser
                name:
                  formatted: Vrs Test User
                userType: "0"
                active: true
                authenticatedUserName: TestUser
                tenant: TENANT
                phoneNumbers:
                - value: "9876543210"
                  type: work
                  primary: true
                emails:
                - value: dummy@ex.com
                  type: work
                  primary: true
                photos:
                - value: Photopath
                  type: work
                  primary: true
                tenancies:
                - value: TENANT
                groups:
                - value: "218"
                  $ref: https://api.factset.com/vrsapi/scim/v2/Groups/218
                  type: Group
                  display: API Group
                domainCode: TESTDOMAIN
                isAdministrator: false
                meta:
                  resourceType: VRSUser
                  created: 2024-03-13T08:01:32.297Z
                  lastModified: 2024-03-15T09:48:21.375Z
                  location: https://api.factset.com/vrsapi/scim/v2/Users/123456
              schema:
                $ref: '#/components/schemas/ScimUser'
          description: Successfully updated user
          headers:
            Location:
              description: A callback URL to the updated user, for example https://example.com/VRSAPI/scim/v2/Users/1
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User does not have permission to update users
                status: "403"
              schema:
                $ref: '#/components/schemas/ScimError'
          description: Forbidden, user does not have permission to update users
        "404":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Resource 1 not found
                status: "404"
              schema:
                $ref: '#/components/schemas/ScimError'
          description: Not Found
      summary: Add or remove VRS user attributes
      tags:
      - SCIM
      x-contentType: application/scim+json
      x-accepts: application/scim+json
    put:
      description: Updates (replaces) a VRS user with the properties in the JSON
      operationId: updateUserById
      parameters:
      - description: The ID of the user
        example: "123456"
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/scim+json:
            example:
              userName: vrstestuser
              name:
                formatted: Vrstest User
              userType: Employee
              active: true
              authenticatedUserName: vrstestuser
              tenant: XXXXXXXXXX
              emails:
              - value: xyz@email.com
                type: work
                primary: true
              phoneNumbers:
              - value: "1234567890"
                type: work
                primary: true
              domainCode: XXXXXXXXXX
            schema:
              $ref: '#/components/schemas/ScimUser'
        required: true
      responses:
        "200":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:scim:schemas:extension:FactSet:VRS:1.0:User
                id: "123456"
                userName: vrstestuser
                name:
                  formatted: Vrstest User
                userType: "0"
                active: true
                authenticatedUserName: vrstestuser
                tenant: XXXXXXXXXX
                phoneNumbers:
                - value: "1234567890"
                  type: work
                  primary: true
                emails:
                - value: xyz@email.com
                  type: work
                  primary: true
                photos:
                - value: Photopath
                  type: work
                  primary: true
                tenancies:
                - value: XXXXXXXXXX
                groups:
                - value: "218"
                  $ref: https://api.factset.com/vrsapi/scim/v2/Groups/218
                  type: Group
                  display: API Group
                domainCode: XXXXXXXXXX
                isAdministrator: false
                meta:
                  resourceType: VRSUser
                  created: 2024-03-13T08:01:32.297Z
                  lastModified: 2024-03-15T09:48:21.375Z
                  location: https://api.factset.com/vrsapi/scim/v2/Users/123456
              schema:
                $ref: '#/components/schemas/ScimUser'
          description: Successfully updated user
          headers:
            Location:
              description: A callback URL to the updated user, for example https://example.com/VRSAPI/scim/v2/Users/1
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User does not have permission to update users
                status: "403"
              schema:
                $ref: '#/components/schemas/ScimError'
          description: Forbidden, user does not have permission to update users
        "404":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Resource 1 not found
                status: "404"
              schema:
                $ref: '#/components/schemas/ScimError'
          description: Not Found
      summary: Updates a VRS user
      tags:
      - SCIM
      x-contentType: application/scim+json
      x-accepts: application/scim+json
  /scim/v2/Groups:
    get:
      description: Retrieves a VRS roles
      operationId: getAllGroups
      parameters:
      - description: Non-negative maximum number of entries to return
        example: 10
        explode: true
        in: query
        name: count
        required: false
        schema:
          type: integer
        style: form
      - description: The 1-based index of the first query result
        example: 5
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/scim+json:
              example:
                totalResults: 10
                itemsPerPage: 10
                startIndex: 5
                Resources:
                - schemas:
                  - urn:scim:schemas:extension:FactSet:VRS:1.0:Group
                  id: "123456"
                  displayName: API Group
                  members:
                  - value: "45678"
                    $ref: https://api.factset.com/vrsapi/scim/v2/Users/45678
                    type: User
                  tenant: TENANT
                  domainCode: TESTDOMAIN
              schema:
                $ref: '#/components/schemas/ScimGroupListResponse'
          description: Successful operation
        "403":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User does not have permission to view roles
                status: "403"
              schema:
                $ref: '#/components/schemas/ScimError'
          description: Forbidden, user does not have permission to view roles
      summary: Retrieves a list of VRS role
      tags:
      - SCIM
      x-accepts: application/scim+json
    post:
      description: Creates a VRS role
      operationId: createGroup
      requestBody:
        content:
          application/scim+json:
            example:
              displayName: vrstestgroup
              members:
              - value: "218"
                type: user
                $ref: VRSAPI/scim/v2/Users/218
              tenant: XXXXXXXXXX
              domainCode: XXXXXXXXXX
            schema:
              $ref: '#/components/schemas/ScimGroup'
        required: true
      responses:
        "201":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:scim:schemas:extension:FactSet:VRS:1.0:Group
                id: "123456"
                displayName: vrstestgroup
                members:
                - value: "218"
                  $ref: https://api.factset.com/vrsapi/scim/v2/Users/218
                  type: User
                tenant: XXXXXXXXXX
                domainCode: XXXXXXXXXX
                meta:
                  resourceType: VRSGroup
                  created: 2024-03-13T08:01:32.297Z
                  lastModified: 2024-03-15T09:48:21.375Z
                  location: https://api.factset.com/vrsapi/scim/v2/Groups/123456
              schema:
                $ref: '#/components/schemas/ScimGroup'
          description: Created
          headers:
            Location:
              description: A callback URL to the newly create role, for example https://example.com/VRSAPI/scim/v2/Groups/1
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User does not have permission to create groups
                status: "403"
              schema:
                $ref: '#/components/schemas/ScimError'
          description: Forbidden, user does not have permission to create roles
        "409":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Group already exists
                status: "409"
              schema:
                $ref: '#/components/schemas/ScimError'
          description: Group already exists
      summary: Creates a role
      tags:
      - SCIM
      x-contentType: application/scim+json
      x-accepts: application/scim+json
  /scim/v2/Groups/{groupId}:
    delete:
      description: Deletes a VRS role
      operationId: deleteGroupById
      parameters:
      - description: The ID of the group
        example: "123456"
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "403":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User does not have permission to delete roles
                status: "403"
              schema:
                $ref: '#/components/schemas/ScimError'
          description: Forbidden, user does not have permission to delete roles
        "404":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Resource 1 not found
                status: "404"
              schema:
                $ref: '#/components/schemas/ScimError'
          description: Not Found
      summary: Deletes a VRS role
      tags:
      - SCIM
      x-accepts: application/scim+json
    get:
      description: Retrieves a VRS role based on the ID
      operationId: getGroupById
      parameters:
      - description: The ID of the role
        example: "123456"
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:scim:schemas:extension:FactSet:VRS:1.0:Group
                id: "123456"
                displayName: API Group
                members:
                - value: "218"
                  $ref: https://api.factset.com/vrsapi/scim/v2/Users/218
                  type: User
                tenant: TENANT
                domainCode: TESTDOMAIN
                meta:
                  resourceType: VRSGroup
                  created: 2024-03-13T08:01:32.297Z
                  lastModified: 2024-03-15T09:48:21.375Z
                  location: https://api.factset.com/vrsapi/scim/v2/Groups/123456
              schema:
                $ref: '#/components/schemas/ScimGroup'
          description: Successful operation
          headers:
            Location:
              description: A callback URL to the newly create role, for example https://example.com/VRSAPI/scim/v2/Groups/1
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User does not have permission to view roles
                status: "403"
              schema:
                $ref: '#/components/schemas/ScimError'
          description: Forbidden, user does not have permission to view roles
        "404":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Resource 1 not found
                status: "404"
              schema:
                $ref: '#/components/schemas/ScimError'
          description: Not Found
      summary: Retrieves a VRS role
      tags:
      - SCIM
      x-accepts: application/scim+json
    patch:
      description: Adds or removes a VRS user to/from a VRS role
      operationId: patchGroupById
      parameters:
      - description: The ID of the role
        example: "123456"
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/scim+json:
            example:
              schemas:
              - urn:ietf:params:scim:api:messages:2.0:PatchOp
              Operations:
              - op: add
                path: members
                value:
                  display: Test user
                  $ref: VRSAPI/scim/v2/Users/45678
                  value: "45678"
            schema:
              $ref: '#/components/schemas/ScimGroupPatchRequestBody'
        required: true
      responses:
        "200":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:scim:schemas:extension:FactSet:VRS:1.0:Group
                id: "123456"
                displayName: API Group
                members:
                - value: "45678"
                  $ref: https://api.factset.com/vrsapi/scim/v2/Users/45678
                  type: User
                tenant: TENANT
                domainCode: TESTDOMAIN
                meta:
                  resourceType: VRSGroup
                  created: 2024-03-13T08:01:32.297Z
                  lastModified: 2024-03-15T09:48:21.375Z
                  location: https://api.factset.com/vrsapi/scim/v2/Groups/123456
              schema:
                $ref: '#/components/schemas/ScimGroup'
          description: Successfully added user to group
      summary: Add or remove a user to/from a group
      tags:
      - SCIM
      x-contentType: application/scim+json
      x-accepts: application/scim+json
    put:
      description: Updates (replaces) a VRS Group with the properties in the JSON
      operationId: updateGroupById
      parameters:
      - description: The ID of the group
        example: "123456"
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/scim+json:
            example:
              displayName: vrstestgroup
              members:
              - value: "45678"
                type: user
                $ref: VRSAPI/scim/v2/Users/45678
              tenant: XXXXXXXXXX
              domainCode: XXXXXXXXXX
            schema:
              $ref: '#/components/schemas/ScimGroup'
        required: true
      responses:
        "200":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:scim:schemas:extension:FactSet:VRS:1.0:Group
                id: "123456"
                displayName: vrstestgroup
                members:
                - value: "45678"
                  $ref: https://api.factset.com/vrsapi/scim/v2/Users/45678
                  type: User
                tenant: XXXXXXXXXX
                domainCode: XXXXXXXXXX
                meta:
                  resourceType: VRSGroup
                  created: 2024-03-13T08:01:32.297Z
                  lastModified: 2024-03-15T09:48:21.375Z
                  location: https://api.factset.com/vrsapi/scim/v2/Groups/123456
              schema:
                $ref: '#/components/schemas/ScimGroup'
          description: Successfully updated group
          headers:
            Location:
              description: A callback URL to the updated group, for example https://example.com/VRSAPI/scim/v2/Groups/1
              explode: false
              schema:
                type: string
              style: simple
        "403":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User does not have permission to update groups
                status: "403"
              schema:
                $ref: '#/components/schemas/ScimError'
          description: Forbidden, user does not have permission to update groups
        "404":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Resource 1 not found
                status: "404"
              schema:
                $ref: '#/components/schemas/ScimError'
          description: Not Found
      summary: Updates a VRS Group
      tags:
      - SCIM
      x-contentType: application/scim+json
      x-accepts: application/scim+json
  /v1/version:
    get:
      description: Gets the version of VRS,WRS and DBServer
      operationId: getVersion
      responses:
        "200":
          content:
            application/json:
              example:
                data:
                  vrsVersion: "21.58"
                  wrsVersion: 20.2.42
                  dbServer: Microsoft SQL Server 2016
              schema:
                $ref: '#/components/schemas/VersionResponseBody'
          description: Successful operation
        "401":
          content:
            application/json:
              example:
                errors:
                - id: ID of the error
                  code: notAuthenticated
                  title: User is not authenticated
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: Unauthorised
      summary: Gets the version of VRS,WRS and DBServer
      tags:
      - Version
      x-accepts: application/json
components:
  schemas:
    DataSourceList:
      example:
        data:
        - releaseTag: releaseTag
          defaultDataSourceName: defaultDataSourceName
          dataPreview: dataPreview
          lastUpdatedBy: lastUpdatedBy
          lastUpdated: 5.962133916683182
          dataSourceId: 6
          code: code
          entities:
          - code: code
            name: name
            entityId: 1
          - code: code
            name: name
            entityId: 1
          name: name
          dsType: AUTOMATIC
          outputRecordSet: outputRecordSet
        - releaseTag: releaseTag
          defaultDataSourceName: defaultDataSourceName
          dataPreview: dataPreview
          lastUpdatedBy: lastUpdatedBy
          lastUpdated: 5.962133916683182
          dataSourceId: 6
          code: code
          entities:
          - code: code
            name: name
            entityId: 1
          - code: code
            name: name
            entityId: 1
          name: name
          dsType: AUTOMATIC
          outputRecordSet: outputRecordSet
        meta:
          pagination:
            total: 0
            isEstimatedTotal: true
          sort:
          - sort
          - sort
      properties:
        meta:
          $ref: '#/components/schemas/DataSourceList_meta'
        data:
          items:
            $ref: '#/components/schemas/DataSourceDTO'
          type: array
      type: object
    DataSourceData:
      example:
        data:
          releaseTag: releaseTag
          defaultDataSourceName: defaultDataSourceName
          dataPreview: dataPreview
          lastUpdatedBy: lastUpdatedBy
          lastUpdated: 5.962133916683182
          dataSourceId: 6
          code: code
          entities:
          - code: code
            name: name
            entityId: 1
          - code: code
            name: name
            entityId: 1
          name: name
          dsType: AUTOMATIC
          outputRecordSet: outputRecordSet
      properties:
        data:
          $ref: '#/components/schemas/DataSourceDTO'
      type: object
    DataSourceDTO:
      example:
        releaseTag: releaseTag
        defaultDataSourceName: defaultDataSourceName
        dataPreview: dataPreview
        lastUpdatedBy: lastUpdatedBy
        lastUpdated: 5.962133916683182
        dataSourceId: 6
        code: code
        entities:
        - code: code
          name: name
          entityId: 1
        - code: code
          name: name
          entityId: 1
        name: name
        dsType: AUTOMATIC
        outputRecordSet: outputRecordSet
      properties:
        dataSourceId:
          format: int32
          type: integer
        name:
          type: string
        code:
          type: string
        dsType:
          enum:
          - AUTOMATIC
          - MANUAL
          - FILTER
          type: string
        entities:
          items:
            $ref: '#/components/schemas/EntityDTO'
          type: array
        outputRecordSet:
          type: string
        releaseTag:
          type: string
        defaultDataSourceName:
          type: string
        dataPreview:
          type: string
        lastUpdatedBy:
          type: string
        lastUpdated:
          type: number
      type: object
    DataSourceDataInstance:
      example:
        data:
          fields:
          - hide: hide
            format: format
            name: name
            id: 0
            fieldType: BOOLEAN
          - hide: hide
            format: format
            name: name
            id: 0
            fieldType: BOOLEAN
          dstInstance:
            dstInstanceId: 6
            rows:
            - fields:
              - fieldType: BOOLEAN
                fieldValue: fieldValue
                fieldId: 5
              - fieldType: BOOLEAN
                fieldValue: fieldValue
                fieldId: 5
              rowId: 1
              order: 5
            - fields:
              - fieldType: BOOLEAN
                fieldValue: fieldValue
                fieldId: 5
              - fieldType: BOOLEAN
                fieldValue: fieldValue
                fieldId: 5
              rowId: 1
              order: 5
            dstInstanceType: dstInstanceType
      properties:
        data:
          $ref: '#/components/schemas/DataSourceAllData'
      type: object
    DataSourceAllData:
      example:
        fields:
        - hide: hide
          format: format
          name: name
          id: 0
          fieldType: BOOLEAN
        - hide: hide
          format: format
          name: name
          id: 0
          fieldType: BOOLEAN
        dstInstance:
          dstInstanceId: 6
          rows:
          - fields:
            - fieldType: BOOLEAN
              fieldValue: fieldValue
              fieldId: 5
            - fieldType: BOOLEAN
              fieldValue: fieldValue
              fieldId: 5
            rowId: 1
            order: 5
          - fields:
            - fieldType: BOOLEAN
              fieldValue: fieldValue
              fieldId: 5
            - fieldType: BOOLEAN
              fieldValue: fieldValue
              fieldId: 5
            rowId: 1
            order: 5
          dstInstanceType: dstInstanceType
      properties:
        fields:
          items:
            $ref: '#/components/schemas/RecordSetFields'
          type: array
        dstInstance:
          $ref: '#/components/schemas/DataSourceInstance'
      type: object
    DataSourceInstance:
      example:
        dstInstanceId: 6
        rows:
        - fields:
          - fieldType: BOOLEAN
            fieldValue: fieldValue
            fieldId: 5
          - fieldType: BOOLEAN
            fieldValue: fieldValue
            fieldId: 5
          rowId: 1
          order: 5
        - fields:
          - fieldType: BOOLEAN
            fieldValue: fieldValue
            fieldId: 5
          - fieldType: BOOLEAN
            fieldValue: fieldValue
            fieldId: 5
          rowId: 1
          order: 5
        dstInstanceType: dstInstanceType
      properties:
        dstInstanceId:
          type: integer
        dstInstanceType:
          type: string
        rows:
          items:
            $ref: '#/components/schemas/DataSourceInstanceRows'
          type: array
      type: object
    DataSourceInstanceRows:
      example:
        fields:
        - fieldType: BOOLEAN
          fieldValue: fieldValue
          fieldId: 5
        - fieldType: BOOLEAN
          fieldValue: fieldValue
          fieldId: 5
        rowId: 1
        order: 5
      properties:
        rowId:
          type: integer
        order:
          type: integer
        fields:
          items:
            $ref: '#/components/schemas/RecordSetFieldValues'
          type: array
      type: object
    RecordSetFieldValues:
      example:
        fieldType: BOOLEAN
        fieldValue: fieldValue
        fieldId: 5
      properties:
        fieldId:
          type: integer
        fieldType:
          enum:
          - BOOLEAN
          - COLOUR
          - DATETIME
          - DECIMAL
          - FONT
          - FONTSIZE
          - HTML
          - INTEGER
          - TEXT
          type: string
        fieldValue:
          type: string
      type: object
    RecordSetFields:
      example:
        hide: hide
        format: format
        name: name
        id: 0
        fieldType: BOOLEAN
      properties:
        fieldType:
          enum:
          - BOOLEAN
          - COLOUR
          - DATETIME
          - DECIMAL
          - FONT
          - FONTSIZE
          - HTML
          - INTEGER
          - TEXT
          type: string
        format:
          type: string
        id:
          type: integer
        hide:
          type: string
        name:
          type: string
      type: object
    EntityDTO:
      example:
        code: code
        name: name
        entityId: 1
      properties:
        entityId:
          format: int32
          type: integer
        name:
          type: string
        code:
          type: string
      type: object
    EntityFieldValueDTO:
      example:
        data:
        - '{}'
        - '{}'
        meta:
          pagination:
            total: 0
            isEstimatedTotal: true
          sort:
          - sort
          - sort
      properties:
        meta:
          $ref: '#/components/schemas/DataSourceList_meta'
        data:
          items:
            properties:
              entityRowId:
                type: integer
              keyValue:
                type: string
              descriptionValue:
                type: string
              fieldsWithValues:
                items:
                  type: string
                type: array
          type: array
      type: object
    ReportInstanceDataResponse:
      example:
        data:
          reportInstanceId: 0
      properties:
        data:
          $ref: '#/components/schemas/ReportInstanceId'
      type: object
    ReportInstanceId:
      example:
        reportInstanceId: 0
      properties:
        reportInstanceId:
          type: integer
      type: object
    ReportInstanceList:
      example:
        data:
        - extension: extension
          reportRevision:
            percentageComplete: 1
            reportStatus: WAITING
            description: description
            finishDate: finishDate
            signOffStatus: REJECTED
            signOffNotes: signOffNotes
            reportReasonCd: reportReasonCd
            languageCode: languageCode
            outputFormat: outputFormat
            startDate: startDate
          reportInstanceId: 0
          reportName: reportName
          name: name
          reportDefinitionName: reportDefinitionName
          userFriendlyReportName: userFriendlyReportName
          reportDefinitionId: 6
        - extension: extension
          reportRevision:
            percentageComplete: 1
            reportStatus: WAITING
            description: description
            finishDate: finishDate
            signOffStatus: REJECTED
            signOffNotes: signOffNotes
            reportReasonCd: reportReasonCd
            languageCode: languageCode
            outputFormat: outputFormat
            startDate: startDate
          reportInstanceId: 0
          reportName: reportName
          name: name
          reportDefinitionName: reportDefinitionName
          userFriendlyReportName: userFriendlyReportName
          reportDefinitionId: 6
        meta:
          pagination:
            total: 0
            isEstimatedTotal: true
      properties:
        meta:
          $ref: '#/components/schemas/ReportInstanceList_meta'
        data:
          items:
            $ref: '#/components/schemas/ReportInstanceDTO'
          type: array
      type: object
    ReportInstanceLogList:
      example:
        data:
        - sequenceNumber: 0
          updateDate: updateDate
          message: message
          type: LOG
        - sequenceNumber: 0
          updateDate: updateDate
          message: message
          type: LOG
      properties:
        data:
          items:
            $ref: '#/components/schemas/ReportInstanceLogDTO'
          type: array
      type: object
    ReportInstanceData:
      example:
        data:
          extension: extension
          reportRevision:
            percentageComplete: 1
            reportStatus: WAITING
            description: description
            finishDate: finishDate
            signOffStatus: REJECTED
            signOffNotes: signOffNotes
            reportReasonCd: reportReasonCd
            languageCode: languageCode
            outputFormat: outputFormat
            startDate: startDate
          reportInstanceId: 0
          reportName: reportName
          name: name
          reportDefinitionName: reportDefinitionName
          userFriendlyReportName: userFriendlyReportName
          reportDefinitionId: 6
      properties:
        data:
          $ref: '#/components/schemas/ReportInstanceDTO'
      type: object
    ReportInstanceDTO:
      example:
        extension: extension
        reportRevision:
          percentageComplete: 1
          reportStatus: WAITING
          description: description
          finishDate: finishDate
          signOffStatus: REJECTED
          signOffNotes: signOffNotes
          reportReasonCd: reportReasonCd
          languageCode: languageCode
          outputFormat: outputFormat
          startDate: startDate
        reportInstanceId: 0
        reportName: reportName
        name: name
        reportDefinitionName: reportDefinitionName
        userFriendlyReportName: userFriendlyReportName
        reportDefinitionId: 6
      properties:
        reportInstanceId:
          format: int32
          type: integer
        reportDefinitionId:
          format: int32
          type: integer
        reportDefinitionName:
          type: string
        reportName:
          type: string
        userFriendlyReportName:
          type: string
        extension:
          type: string
        reportRevision:
          $ref: '#/components/schemas/ReportRevisionDTO'
        name:
          type: string
      type: object
    ReportInstanceLogDTO:
      example:
        sequenceNumber: 0
        updateDate: updateDate
        message: message
        type: LOG
      properties:
        sequenceNumber:
          format: int32
          type: integer
        message:
          type: string
        type:
          enum:
          - LOG
          - ERROR
          type: string
        updateDate:
          type: string
      type: object
    ReportDefinitionList:
      example:
        data:
        - releaseTag: releaseTag
          code: code
          entities:
          - code: code
            name: name
            entityId: 1
          - code: code
            name: name
            entityId: 1
          name: name
        - releaseTag: releaseTag
          code: code
          entities:
          - code: code
            name: name
            entityId: 1
          - code: code
            name: name
            entityId: 1
          name: name
        meta:
          pagination:
            total: 0
            isEstimatedTotal: true
      properties:
        meta:
          $ref: '#/components/schemas/ReportInstanceList_meta'
        data:
          items:
            $ref: '#/components/schemas/ReportDefinitionDTO'
          type: array
      type: object
    ReportDefinitionData:
      example:
        data:
          releaseTag: releaseTag
          code: code
          entities:
          - code: code
            name: name
            entityId: 1
          - code: code
            name: name
            entityId: 1
          name: name
      properties:
        data:
          $ref: '#/components/schemas/ReportDefinitionDTO'
      type: object
    ReportDefinitionDTO:
      example:
        releaseTag: releaseTag
        code: code
        entities:
        - code: code
          name: name
          entityId: 1
        - code: code
          name: name
          entityId: 1
        name: name
      properties:
        name:
          type: string
        code:
          type: string
        releaseTag:
          type: string
        entities:
          items:
            $ref: '#/components/schemas/EntityDTO'
          type: array
      type: object
    ReportRevisionDTO:
      example:
        percentageComplete: 1
        reportStatus: WAITING
        description: description
        finishDate: finishDate
        signOffStatus: REJECTED
        signOffNotes: signOffNotes
        reportReasonCd: reportReasonCd
        languageCode: languageCode
        outputFormat: outputFormat
        startDate: startDate
      properties:
        reportStatus:
          enum:
          - WAITING
          - STARTING
          - RETRIEVING_REQUEST
          - CONTENT_FILTER
          - STYLE_PROCESSING
          - STYLE_PREPROCESSING
          - RULE_PROCESSING
          - GETTING_DATA
          - RI_PROCESSING
          - COMPILE
          - SUBSTITUTION
          - TRANSLATION
          - GRID_PROCESSING
          - CHART_PROCESSING
          - IMPORTED_FILE_PROCESSING
          - TEXT_PROCESSING_STATUS
          - TOC_PROCESSING_STATUS
          - COMPONENT_PROCESSING
          - POST_PROCESSING
          - POSTING_TO_WRS
          - POSTED_TO_WRS
          - RENDERING
          - DOC_CREATION
          - PDF_CONVERSION
          - ABORTED
          - COMPLETED
          - COMPLETED_CAUTIONS
          - COMPLETED_ERROR
          - COMPLETED_MODIFYING
          - COMPLETED_CHANGED
          - DELETING
          - REPORT_ORIGINAL_GENERATION
          - REPORT_PREVIOUS_REVISION
          - GENERATING
          type: string
        startDate:
          type: string
        finishDate:
          type: string
        signOffStatus:
          enum:
          - REJECTED
          - PENDING
          - APPROVED
          type: string
        signOffNotes:
          type: string
        reportReasonCd:
          type: string
        description:
          type: string
        languageCode:
          type: string
        outputFormat:
          type: string
        percentageComplete:
          format: int32
          type: integer
      type: object
    ReportGenerationRequestBody:
      example:
        vrs:
          key:
            entitySelection:
              key:
                key: key
            sectionFilter: sectionFilter
            report: report
            tenancy: tenancy
            priority: priority
            outputFormat: WORD
            startDate: startDate
      properties:
        vrs:
          additionalProperties:
            $ref: '#/components/schemas/ReportGenerationRequest'
          type: object
      type: object
    ReportGenerationRequest:
      example:
        entitySelection:
          key:
            key: key
        sectionFilter: sectionFilter
        report: report
        tenancy: tenancy
        priority: priority
        outputFormat: WORD
        startDate: startDate
      properties:
        report:
          type: string
        tenancy:
          type: string
        outputFormat:
          enum:
          - WORD
          - WORD2010
          - EXCEL
          - EXCEL2010
          - PPT
          - PPT2010
          - PDF
          - CSV
          - XML
          - VXML
          - HTML
          - PS
          type: string
        sectionFilter:
          type: string
        priority:
          type: string
        startDate:
          type: string
        entitySelection:
          additionalProperties:
            $ref: '#/components/schemas/EntitySelection'
          type: object
      type: object
    EntitySelection:
      example:
        key: key
      properties:
        key:
          type: string
      type: object
    ReportDataResponse:
      format: binary
      type: string
    ScimUser:
      properties:
        schemas:
          items:
            type: string
          type: array
        id:
          type: string
        userName:
          type: string
        name:
          $ref: '#/components/schemas/ScimUser_name'
        userType:
          type: string
        active:
          type: boolean
        authenticatedUserName:
          type: string
        tenant:
          type: string
        phoneNumbers:
          items:
            $ref: '#/components/schemas/ScimPhone'
          type: array
        emails:
          items:
            $ref: '#/components/schemas/ScimEmail'
          type: array
        photos:
          items:
            $ref: '#/components/schemas/ScimPhoto'
          type: array
        tenancies:
          items:
            $ref: '#/components/schemas/Tenancy'
          type: array
        groups:
          items:
            $ref: '#/components/schemas/ScimUserGroup'
          type: array
        domainCode:
          type: string
        isAdministrator:
          type: boolean
        meta:
          $ref: '#/components/schemas/ScimMeta'
      type: object
    CreatedScimUserJSONResponse:
      properties:
        schemas:
          items:
            type: string
          type: array
        id:
          type: string
        userName:
          type: string
        name:
          $ref: '#/components/schemas/ScimUser_name'
        userType:
          type: string
        preferredLanguage:
          type: string
        active:
          type: boolean
        authenticatedUserName:
          type: string
        tenant:
          type: string
        phoneNumbers:
          items:
            $ref: '#/components/schemas/ScimPhone'
          type: array
        emails:
          items:
            $ref: '#/components/schemas/ScimEmail'
          type: array
        tenancies:
          items:
            $ref: '#/components/schemas/Tenancy'
          type: array
        photos:
          items:
            $ref: '#/components/schemas/ScimPhoto'
          type: array
        domainCode:
          type: string
        isAdministrator:
          type: boolean
        meta:
          $ref: '#/components/schemas/CreatedScimUserJSONResponse_meta'
      type: object
    CreateScimUserJSONRequest:
      properties:
        userName:
          type: string
        password:
          type: string
        name:
          $ref: '#/components/schemas/ScimUser_name'
        preferredLanguage:
          type: string
        active:
          type: boolean
        authenticatedUserName:
          type: string
        tenant:
          type: string
        domainCode:
          type: string
        phoneNumbers:
          items:
            $ref: '#/components/schemas/ScimPhone'
          type: array
        emails:
          items:
            $ref: '#/components/schemas/ScimEmail'
          type: array
        photos:
          items:
            $ref: '#/components/schemas/ScimPhoto'
          type: array
        tenancies:
          items:
            $ref: '#/components/schemas/Tenancy'
          type: array
      type: object
    ScimUserPatchRequestBody:
      properties:
        schemas:
          items:
            type: string
          type: array
        Operations:
          items:
            $ref: '#/components/schemas/ScimUserPatchOperation'
          type: array
      type: object
    ScimGroupPatchRequestBody:
      properties:
        schemas:
          items:
            type: string
          type: array
        Operations:
          items:
            $ref: '#/components/schemas/ScimGroupPatchOperation'
          type: array
      type: object
    ScimUserPatchOperation:
      properties:
        op:
          type: string
        path:
          type: string
        value:
          type: string
      type: object
    ScimGroupPatchOperation:
      properties:
        op:
          type: string
        path:
          type: string
        value:
          $ref: '#/components/schemas/ScimGroupPatchOperation_value'
      type: object
    ScimPhone:
      properties:
        value:
          type: string
        type:
          type: string
        primary:
          type: boolean
      type: object
    ScimEmail:
      properties:
        value:
          type: string
        type:
          type: string
        primary:
          type: boolean
      type: object
    ScimPhoto:
      properties:
        value:
          type: string
        type:
          type: string
        primary:
          type: boolean
      type: object
    Tenancy:
      properties:
        value:
          type: string
      type: object
    ScimGroup:
      properties:
        schemas:
          items:
            type: string
          type: array
        id:
          type: string
        displayName:
          type: string
        members:
          items:
            $ref: '#/components/schemas/ScimGroupMember'
          type: array
        tenant:
          type: string
        domainCode:
          type: string
        meta:
          $ref: '#/components/schemas/ScimMeta'
      type: object
    ScimGroupMember:
      properties:
        value:
          type: string
        $ref:
          description: A callback link which can be used to get the information of
            the group
          type: string
        type:
          type: string
      type: object
    ScimUserGroup:
      properties:
        value:
          type: string
        $ref:
          description: A callback link which can be used to get the information of
            the user
          type: string
        type:
          type: string
        display:
          description: Name of the group
          type: string
      type: object
    ScimGroupListResponse:
      properties:
        totalResults:
          type: integer
        itemsPerPage:
          type: integer
        startIndex:
          type: integer
        Resources:
          items:
            $ref: '#/components/schemas/ScimGroup'
          type: array
      type: object
    ScimUserListResponse:
      properties:
        totalResults:
          type: integer
        itemsPerPage:
          type: integer
        startIndex:
          type: integer
        Resources:
          items:
            $ref: '#/components/schemas/ScimUser'
          type: array
      type: object
    ScimMeta:
      properties:
        resourceType:
          type: string
        created:
          type: string
        lastModified:
          type: string
        location:
          type: string
      type: object
    Error:
      properties:
        id:
          type: string
        code:
          type: string
        title:
          type: string
      type: object
    ErrorList:
      properties:
        errors:
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
    ScimError:
      properties:
        schemas:
          items:
            type: string
          type: array
        detail:
          type: string
        status:
          type: string
      type: object
    VersionResponseBody:
      description: details of VRS WRS versions
      example:
        data:
          wrsVersion: wrsVersion
          vrsVersion: vrsVersion
          dbServer: dbServer
      properties:
        data:
          $ref: '#/components/schemas/VersionResponseBody_data'
      type: object
    DataSourceList_meta_pagination:
      example:
        total: 0
        isEstimatedTotal: true
      properties:
        total:
          type: integer
        isEstimatedTotal:
          type: boolean
      type: object
    DataSourceList_meta:
      example:
        pagination:
          total: 0
          isEstimatedTotal: true
        sort:
        - sort
        - sort
      properties:
        pagination:
          $ref: '#/components/schemas/DataSourceList_meta_pagination'
        sort:
          items:
            type: string
          type: array
      type: object
    ReportInstanceList_meta:
      example:
        pagination:
          total: 0
          isEstimatedTotal: true
      properties:
        pagination:
          $ref: '#/components/schemas/DataSourceList_meta_pagination'
      type: object
    ScimUser_name:
      properties:
        formatted:
          type: string
      type: object
    CreatedScimUserJSONResponse_meta:
      properties:
        resourceType:
          type: string
        created:
          type: string
        lastModified:
          type: string
        location:
          type: string
      type: object
    ScimGroupPatchOperation_value:
      properties:
        display:
          type: string
        $ref:
          type: string
        value:
          type: string
      type: object
    VersionResponseBody_data:
      example:
        wrsVersion: wrsVersion
        vrsVersion: vrsVersion
        dbServer: dbServer
      properties:
        vrsVersion:
          description: VRS version
          type: string
        wrsVersion:
          description: WRS version
          type: string
        dbServer:
          description: DB version
          type: string
      type: object
  securitySchemes:
    FactSetOAuth2:
      flows:
        clientCredentials:
          scopes: {}
          tokenUrl: https://auth.factset.com/as/token.oauth2
      type: oauth2
    FactSetApiKey:
      scheme: basic
      type: http

