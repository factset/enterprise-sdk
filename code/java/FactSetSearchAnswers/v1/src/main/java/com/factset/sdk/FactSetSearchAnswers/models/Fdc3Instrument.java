/*
 * FactSet Search Answers API
 * The FactSet Search Answers API provides answers to search queries, reflecting the data shown within FactSet Search Answers, and allowing you to easily add financial data to your widgets, lookups, bots, and assistants. The API understands a fixed amount of search terms and returns structured data from FactSetâ€™s many data sources. Possible answers include Price of a Company, Top 10 Year-to-Date Gainers, Revenue per Passenger Mile, and many more.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetSearchAnswers.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.FactSetSearchAnswers.models.InstrumentID;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetSearchAnswers.JSON;


/**
 * Fdc3Instrument
 */
@JsonPropertyOrder({
  Fdc3Instrument.JSON_PROPERTY_TYPE,
  Fdc3Instrument.JSON_PROPERTY_NAME,
  Fdc3Instrument.JSON_PROPERTY_EXCHANGE_MIC,
  Fdc3Instrument.JSON_PROPERTY_EXCHANGE_MIC_FDS,
  Fdc3Instrument.JSON_PROPERTY_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class Fdc3Instrument implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_EXCHANGE_MIC = "exchangeMic";
  private String exchangeMic;

  public static final String JSON_PROPERTY_EXCHANGE_MIC_FDS = "exchangeMicFds";
  private String exchangeMicFds;

  public static final String JSON_PROPERTY_ID = "id";
  private InstrumentID id;

  public Fdc3Instrument() { 
  }

  @JsonCreator
  public Fdc3Instrument(
    @JsonProperty(value=JSON_PROPERTY_TYPE, required=true) String type, 
    @JsonProperty(value=JSON_PROPERTY_NAME, required=true) String name
  ) {
    this();
    this.type = type;
    this.name = name;
  }

  public Fdc3Instrument type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(String type) {
    this.type = type;
  }


  public Fdc3Instrument name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public Fdc3Instrument exchangeMic(String exchangeMic) {
    this.exchangeMic = exchangeMic;
    return this;
  }

   /**
   * Get exchangeMic
   * @return exchangeMic
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EXCHANGE_MIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExchangeMic() {
    return exchangeMic;
  }


  @JsonProperty(JSON_PROPERTY_EXCHANGE_MIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExchangeMic(String exchangeMic) {
    this.exchangeMic = exchangeMic;
  }


  public Fdc3Instrument exchangeMicFds(String exchangeMicFds) {
    this.exchangeMicFds = exchangeMicFds;
    return this;
  }

   /**
   * Get exchangeMicFds
   * @return exchangeMicFds
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EXCHANGE_MIC_FDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExchangeMicFds() {
    return exchangeMicFds;
  }


  @JsonProperty(JSON_PROPERTY_EXCHANGE_MIC_FDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExchangeMicFds(String exchangeMicFds) {
    this.exchangeMicFds = exchangeMicFds;
  }


  public Fdc3Instrument id(InstrumentID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InstrumentID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(InstrumentID id) {
    this.id = id;
  }


  /**
   * Return true if this Fdc3Instrument object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Fdc3Instrument fdc3Instrument = (Fdc3Instrument) o;
    return Objects.equals(this.type, fdc3Instrument.type) &&
        Objects.equals(this.name, fdc3Instrument.name) &&
        Objects.equals(this.exchangeMic, fdc3Instrument.exchangeMic) &&
        Objects.equals(this.exchangeMicFds, fdc3Instrument.exchangeMicFds) &&
        Objects.equals(this.id, fdc3Instrument.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, name, exchangeMic, exchangeMicFds, id);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Fdc3Instrument {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    exchangeMic: ").append(toIndentedString(exchangeMic)).append("\n");
    sb.append("    exchangeMicFds: ").append(toIndentedString(exchangeMicFds)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

