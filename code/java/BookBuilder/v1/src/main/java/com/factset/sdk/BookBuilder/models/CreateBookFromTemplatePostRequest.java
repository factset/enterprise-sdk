/*
 * BookBuilder
 * The BookBuilder API is a powerful tool that combines detailed reports for companies of interest. Save time by using a single source of knowledge instead of relying on multiple APIs to create a presentation ready PDF, also known as a Public Information Book(PIB). </br></br> Consistently create books with the same content/reports for different companies by defining templates with the set of reports saved for re-use. Or, use templates that are created by FactSet for quick use. </br></br> With our powerful API endpoints, you can get the information on companies of interest quickly where and when you need it. </br></br> 
 *
 * The version of the OpenAPI document: 1.13.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.BookBuilder.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.BookBuilder.JSON;


/**
 * It is a request body to allow users to input ticker and template id.
 */
@ApiModel(description = "It is a request body to allow users to input ticker and template id.")
@JsonPropertyOrder({
  CreateBookFromTemplatePostRequest.JSON_PROPERTY_TICKER,
  CreateBookFromTemplatePostRequest.JSON_PROPERTY_TEMPLATE_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class CreateBookFromTemplatePostRequest implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_TICKER = "ticker";
  private String ticker;

  public static final String JSON_PROPERTY_TEMPLATE_ID = "template_id";
  private String templateId;

  public CreateBookFromTemplatePostRequest() { 
  }

  public CreateBookFromTemplatePostRequest ticker(String ticker) {
    this.ticker = ticker;
    return this;
  }

   /**
   * ticker
   * @return ticker
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "FDS-US", value = "ticker")
  @JsonProperty(JSON_PROPERTY_TICKER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTicker() {
    return ticker;
  }


  @JsonProperty(JSON_PROPERTY_TICKER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTicker(String ticker) {
    this.ticker = ticker;
  }


  public CreateBookFromTemplatePostRequest templateId(String templateId) {
    this.templateId = templateId;
    return this;
  }

   /**
   * Template ID
   * @return templateId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "g_20210415065838185", value = "Template ID")
  @JsonProperty(JSON_PROPERTY_TEMPLATE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTemplateId() {
    return templateId;
  }


  @JsonProperty(JSON_PROPERTY_TEMPLATE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTemplateId(String templateId) {
    this.templateId = templateId;
  }


  /**
   * Return true if this createBookFromTemplatePostRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateBookFromTemplatePostRequest createBookFromTemplatePostRequest = (CreateBookFromTemplatePostRequest) o;
    return Objects.equals(this.ticker, createBookFromTemplatePostRequest.ticker) &&
        Objects.equals(this.templateId, createBookFromTemplatePostRequest.templateId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ticker, templateId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateBookFromTemplatePostRequest {\n");
    sb.append("    ticker: ").append(toIndentedString(ticker)).append("\n");
    sb.append("    templateId: ").append(toIndentedString(templateId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

