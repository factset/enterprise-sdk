/*
 * BookBuilder
 * The BookBuilder API is a powerful tool that combines detailed reports for companies of interest. Save time by using a single source of knowledge instead of relying on multiple APIs to create a presentation ready PDF, also known as a Public Information Book(PIB). </br></br> Consistently create books with the same content/reports for different companies by defining templates with the set of reports saved for re-use. Or, use templates that are created by FactSet for quick use. </br></br> With our powerful API endpoints, you can get the information on companies of interest quickly where and when you need it. </br></br> 
 *
 * The version of the OpenAPI document: 1.13.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.BookBuilder.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.BookBuilder.JSON;


/**
 * BookInfo
 */
@JsonPropertyOrder({
  BookInfo.JSON_PROPERTY_BOOK_ID,
  BookInfo.JSON_PROPERTY_BOOK_NAME,
  BookInfo.JSON_PROPERTY_CREATED_ON
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class BookInfo implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_BOOK_ID = "book_id";
  private String bookId;

  public static final String JSON_PROPERTY_BOOK_NAME = "book_name";
  private String bookName;

  public static final String JSON_PROPERTY_CREATED_ON = "created_on";
  private String createdOn;

  public BookInfo() { 
  }

  public BookInfo bookId(String bookId) {
    this.bookId = bookId;
    return this;
  }

   /**
   * Book ID
   * @return bookId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "20200623094829447", value = "Book ID")
  @JsonProperty(JSON_PROPERTY_BOOK_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBookId() {
    return bookId;
  }


  @JsonProperty(JSON_PROPERTY_BOOK_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBookId(String bookId) {
    this.bookId = bookId;
  }


  public BookInfo bookName(String bookName) {
    this.bookName = bookName;
    return this;
  }

   /**
   * Book Name
   * @return bookName
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Financials", value = "Book Name")
  @JsonProperty(JSON_PROPERTY_BOOK_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBookName() {
    return bookName;
  }


  @JsonProperty(JSON_PROPERTY_BOOK_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBookName(String bookName) {
    this.bookName = bookName;
  }


  public BookInfo createdOn(String createdOn) {
    this.createdOn = createdOn;
    return this;
  }

   /**
   * Date on which the book was created
   * @return createdOn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "2020-06-23 09:48:46", value = "Date on which the book was created")
  @JsonProperty(JSON_PROPERTY_CREATED_ON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCreatedOn() {
    return createdOn;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_ON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedOn(String createdOn) {
    this.createdOn = createdOn;
  }


  /**
   * Return true if this BookInfo object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BookInfo bookInfo = (BookInfo) o;
    return Objects.equals(this.bookId, bookInfo.bookId) &&
        Objects.equals(this.bookName, bookInfo.bookName) &&
        Objects.equals(this.createdOn, bookInfo.createdOn);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bookId, bookName, createdOn);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BookInfo {\n");
    sb.append("    bookId: ").append(toIndentedString(bookId)).append("\n");
    sb.append("    bookName: ").append(toIndentedString(bookName)).append("\n");
    sb.append("    createdOn: ").append(toIndentedString(createdOn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

