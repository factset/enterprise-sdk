/*
 * Best Execution Analytics for Smarter Trading (BEAST) API
 * Enables clients to programmatically access the underlying data which powers the BEAST Liquidity Analytics (LA) and Transaction Cost Analysis (TCA) applications.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.BestExecutionAnalyticsforSmarterTradingBEAST.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.BestExecutionAnalyticsforSmarterTradingBEAST.models.OutputStrategyBinData;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.BestExecutionAnalyticsforSmarterTradingBEAST.JSON;


/**
 * The Cost Impact object
 */
@ApiModel(description = "The Cost Impact object")
@JsonPropertyOrder({
  CostImpact.JSON_PROPERTY_COST_PER_SHARE,
  CostImpact.JSON_PROPERTY_COST_PER_SHARE_BPS,
  CostImpact.JSON_PROPERTY_MARKET_IMPACT,
  CostImpact.JSON_PROPERTY_CONFIDENCE_INTERVAL,
  CostImpact.JSON_PROPERTY_OUTPUT_STRATEGY_BIN_DATA_DTO_LIST
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class CostImpact implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_COST_PER_SHARE = "costPerShare";
  private Double costPerShare;

  public static final String JSON_PROPERTY_COST_PER_SHARE_BPS = "costPerShareBps";
  private Double costPerShareBps;

  public static final String JSON_PROPERTY_MARKET_IMPACT = "marketImpact";
  private Double marketImpact;

  public static final String JSON_PROPERTY_CONFIDENCE_INTERVAL = "confidenceInterval";
  private Double confidenceInterval;

  public static final String JSON_PROPERTY_OUTPUT_STRATEGY_BIN_DATA_DTO_LIST = "outputStrategyBinDataDtoList";
  private java.util.List<OutputStrategyBinData> outputStrategyBinDataDtoList = null;

  public CostImpact() { 
  }

  public CostImpact costPerShare(Double costPerShare) {
    this.costPerShare = costPerShare;
    return this;
  }

   /**
   * Cost Per Share
   * @return costPerShare
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Cost Per Share")
  @JsonProperty(JSON_PROPERTY_COST_PER_SHARE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getCostPerShare() {
    return costPerShare;
  }


  @JsonProperty(JSON_PROPERTY_COST_PER_SHARE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCostPerShare(Double costPerShare) {
    this.costPerShare = costPerShare;
  }


  public CostImpact costPerShareBps(Double costPerShareBps) {
    this.costPerShareBps = costPerShareBps;
    return this;
  }

   /**
   * Cost Per Share Bps
   * @return costPerShareBps
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Cost Per Share Bps")
  @JsonProperty(JSON_PROPERTY_COST_PER_SHARE_BPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getCostPerShareBps() {
    return costPerShareBps;
  }


  @JsonProperty(JSON_PROPERTY_COST_PER_SHARE_BPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCostPerShareBps(Double costPerShareBps) {
    this.costPerShareBps = costPerShareBps;
  }


  public CostImpact marketImpact(Double marketImpact) {
    this.marketImpact = marketImpact;
    return this;
  }

   /**
   * Market Impact
   * @return marketImpact
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Market Impact")
  @JsonProperty(JSON_PROPERTY_MARKET_IMPACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getMarketImpact() {
    return marketImpact;
  }


  @JsonProperty(JSON_PROPERTY_MARKET_IMPACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMarketImpact(Double marketImpact) {
    this.marketImpact = marketImpact;
  }


  public CostImpact confidenceInterval(Double confidenceInterval) {
    this.confidenceInterval = confidenceInterval;
    return this;
  }

   /**
   * Confidence Interval
   * @return confidenceInterval
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Confidence Interval")
  @JsonProperty(JSON_PROPERTY_CONFIDENCE_INTERVAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getConfidenceInterval() {
    return confidenceInterval;
  }


  @JsonProperty(JSON_PROPERTY_CONFIDENCE_INTERVAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConfidenceInterval(Double confidenceInterval) {
    this.confidenceInterval = confidenceInterval;
  }


  public CostImpact outputStrategyBinDataDtoList(java.util.List<OutputStrategyBinData> outputStrategyBinDataDtoList) {
    this.outputStrategyBinDataDtoList = outputStrategyBinDataDtoList;
    return this;
  }

  public CostImpact addOutputStrategyBinDataDtoListItem(OutputStrategyBinData outputStrategyBinDataDtoListItem) {
    if (this.outputStrategyBinDataDtoList == null) {
      this.outputStrategyBinDataDtoList = new java.util.ArrayList<>();
    }
    this.outputStrategyBinDataDtoList.add(outputStrategyBinDataDtoListItem);
    return this;
  }

   /**
   * Output Strategy Bin Data List
   * @return outputStrategyBinDataDtoList
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Output Strategy Bin Data List")
  @JsonProperty(JSON_PROPERTY_OUTPUT_STRATEGY_BIN_DATA_DTO_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<OutputStrategyBinData> getOutputStrategyBinDataDtoList() {
    return outputStrategyBinDataDtoList;
  }


  @JsonProperty(JSON_PROPERTY_OUTPUT_STRATEGY_BIN_DATA_DTO_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOutputStrategyBinDataDtoList(java.util.List<OutputStrategyBinData> outputStrategyBinDataDtoList) {
    this.outputStrategyBinDataDtoList = outputStrategyBinDataDtoList;
  }


  /**
   * Return true if this CostImpact object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CostImpact costImpact = (CostImpact) o;
    return Objects.equals(this.costPerShare, costImpact.costPerShare) &&
        Objects.equals(this.costPerShareBps, costImpact.costPerShareBps) &&
        Objects.equals(this.marketImpact, costImpact.marketImpact) &&
        Objects.equals(this.confidenceInterval, costImpact.confidenceInterval) &&
        Objects.equals(this.outputStrategyBinDataDtoList, costImpact.outputStrategyBinDataDtoList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(costPerShare, costPerShareBps, marketImpact, confidenceInterval, outputStrategyBinDataDtoList);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CostImpact {\n");
    sb.append("    costPerShare: ").append(toIndentedString(costPerShare)).append("\n");
    sb.append("    costPerShareBps: ").append(toIndentedString(costPerShareBps)).append("\n");
    sb.append("    marketImpact: ").append(toIndentedString(marketImpact)).append("\n");
    sb.append("    confidenceInterval: ").append(toIndentedString(confidenceInterval)).append("\n");
    sb.append("    outputStrategyBinDataDtoList: ").append(toIndentedString(outputStrategyBinDataDtoList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

