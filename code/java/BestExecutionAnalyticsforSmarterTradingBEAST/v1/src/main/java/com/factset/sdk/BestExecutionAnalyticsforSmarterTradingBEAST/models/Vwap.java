/*
 * Best Execution Analytics for Smarter Trading (BEAST) API
 * Enables clients to programmatically access the underlying data which powers the BEAST Liquidity Analytics (LA) and Transaction Cost Analysis (TCA) applications.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.BestExecutionAnalyticsforSmarterTradingBEAST.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.BestExecutionAnalyticsforSmarterTradingBEAST.JSON;


/**
 * The VWAP Data object
 */
@ApiModel(description = "The VWAP Data object")
@JsonPropertyOrder({
  Vwap.JSON_PROPERTY_SECURITY_ID,
  Vwap.JSON_PROPERTY_COUNTRY,
  Vwap.JSON_PROPERTY_DATE_ID,
  Vwap.JSON_PROPERTY_TIME_MS,
  Vwap.JSON_PROPERTY_VWAP
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class Vwap implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_SECURITY_ID = "securityId";
  private String securityId;

  public static final String JSON_PROPERTY_COUNTRY = "country";
  private String country;

  public static final String JSON_PROPERTY_DATE_ID = "dateId";
  private String dateId;

  public static final String JSON_PROPERTY_TIME_MS = "timeMs";
  private Long timeMs;

  public static final String JSON_PROPERTY_VWAP = "vwap";
  private Double vwap;

  public Vwap() { 
  }

  public Vwap securityId(String securityId) {
    this.securityId = securityId;
    return this;
  }

   /**
   * Security Id
   * @return securityId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Security Id")
  @JsonProperty(JSON_PROPERTY_SECURITY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSecurityId() {
    return securityId;
  }


  @JsonProperty(JSON_PROPERTY_SECURITY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecurityId(String securityId) {
    this.securityId = securityId;
  }


  public Vwap country(String country) {
    this.country = country;
    return this;
  }

   /**
   * The two character ISO country code
   * @return country
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The two character ISO country code")
  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCountry() {
    return country;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountry(String country) {
    this.country = country;
  }


  public Vwap dateId(String dateId) {
    this.dateId = dateId;
    return this;
  }

   /**
   * Date Id
   * @return dateId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Date Id")
  @JsonProperty(JSON_PROPERTY_DATE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDateId() {
    return dateId;
  }


  @JsonProperty(JSON_PROPERTY_DATE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateId(String dateId) {
    this.dateId = dateId;
  }


  public Vwap timeMs(Long timeMs) {
    this.timeMs = timeMs;
    return this;
  }

   /**
   * Time ms
   * @return timeMs
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Time ms")
  @JsonProperty(JSON_PROPERTY_TIME_MS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getTimeMs() {
    return timeMs;
  }


  @JsonProperty(JSON_PROPERTY_TIME_MS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimeMs(Long timeMs) {
    this.timeMs = timeMs;
  }


  public Vwap vwap(Double vwap) {
    this.vwap = vwap;
    return this;
  }

   /**
   * vwap
   * @return vwap
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "vwap")
  @JsonProperty(JSON_PROPERTY_VWAP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getVwap() {
    return vwap;
  }


  @JsonProperty(JSON_PROPERTY_VWAP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVwap(Double vwap) {
    this.vwap = vwap;
  }


  /**
   * Return true if this Vwap object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Vwap vwap = (Vwap) o;
    return Objects.equals(this.securityId, vwap.securityId) &&
        Objects.equals(this.country, vwap.country) &&
        Objects.equals(this.dateId, vwap.dateId) &&
        Objects.equals(this.timeMs, vwap.timeMs) &&
        Objects.equals(this.vwap, vwap.vwap);
  }

  @Override
  public int hashCode() {
    return Objects.hash(securityId, country, dateId, timeMs, vwap);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Vwap {\n");
    sb.append("    securityId: ").append(toIndentedString(securityId)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    dateId: ").append(toIndentedString(dateId)).append("\n");
    sb.append("    timeMs: ").append(toIndentedString(timeMs)).append("\n");
    sb.append("    vwap: ").append(toIndentedString(vwap)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

