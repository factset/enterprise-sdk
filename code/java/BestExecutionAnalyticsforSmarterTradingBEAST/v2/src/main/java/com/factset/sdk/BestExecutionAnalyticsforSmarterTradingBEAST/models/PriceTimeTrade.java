/*
 * Best Execution Analytics for Smarter Trading (BEAST) API
 * Enables clients to programmatically access the underlying data which powers the BEAST Liquidity Analytics (LA) and Transaction Cost Analysis (TCA) applications.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.BestExecutionAnalyticsforSmarterTradingBEAST.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.BestExecutionAnalyticsforSmarterTradingBEAST.JSON;


/**
 * Price Time Trade object
 */
@ApiModel(description = "Price Time Trade object")
@JsonPropertyOrder({
  PriceTimeTrade.JSON_PROPERTY_TIME,
  PriceTimeTrade.JSON_PROPERTY_PRICE,
  PriceTimeTrade.JSON_PROPERTY_VENUE,
  PriceTimeTrade.JSON_PROPERTY_VOLUME,
  PriceTimeTrade.JSON_PROPERTY_CONDITION_CODES,
  PriceTimeTrade.JSON_PROPERTY_VENUE_CODE,
  PriceTimeTrade.JSON_PROPERTY_CUM_VWAP
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class PriceTimeTrade implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_TIME = "time";
  private Long time;

  public static final String JSON_PROPERTY_PRICE = "price";
  private Double price;

  public static final String JSON_PROPERTY_VENUE = "venue";
  private String venue;

  public static final String JSON_PROPERTY_VOLUME = "volume";
  private Double volume;

  public static final String JSON_PROPERTY_CONDITION_CODES = "conditionCodes";
  private String conditionCodes;

  public static final String JSON_PROPERTY_VENUE_CODE = "venueCode";
  private Integer venueCode;

  public static final String JSON_PROPERTY_CUM_VWAP = "cumVwap";
  private Double cumVwap;

  public PriceTimeTrade() { 
  }

  public PriceTimeTrade time(Long time) {
    this.time = time;
    return this;
  }

   /**
   * Time
   * @return time
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Time")
  @JsonProperty(JSON_PROPERTY_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getTime() {
    return time;
  }


  @JsonProperty(JSON_PROPERTY_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTime(Long time) {
    this.time = time;
  }


  public PriceTimeTrade price(Double price) {
    this.price = price;
    return this;
  }

   /**
   * Price
   * @return price
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Price")
  @JsonProperty(JSON_PROPERTY_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getPrice() {
    return price;
  }


  @JsonProperty(JSON_PROPERTY_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrice(Double price) {
    this.price = price;
  }


  public PriceTimeTrade venue(String venue) {
    this.venue = venue;
    return this;
  }

   /**
   * Venue
   * @return venue
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Venue")
  @JsonProperty(JSON_PROPERTY_VENUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVenue() {
    return venue;
  }


  @JsonProperty(JSON_PROPERTY_VENUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVenue(String venue) {
    this.venue = venue;
  }


  public PriceTimeTrade volume(Double volume) {
    this.volume = volume;
    return this;
  }

   /**
   * Volume
   * @return volume
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Volume")
  @JsonProperty(JSON_PROPERTY_VOLUME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getVolume() {
    return volume;
  }


  @JsonProperty(JSON_PROPERTY_VOLUME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVolume(Double volume) {
    this.volume = volume;
  }


  public PriceTimeTrade conditionCodes(String conditionCodes) {
    this.conditionCodes = conditionCodes;
    return this;
  }

   /**
   * Condition Codes
   * @return conditionCodes
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Condition Codes")
  @JsonProperty(JSON_PROPERTY_CONDITION_CODES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getConditionCodes() {
    return conditionCodes;
  }


  @JsonProperty(JSON_PROPERTY_CONDITION_CODES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConditionCodes(String conditionCodes) {
    this.conditionCodes = conditionCodes;
  }


  public PriceTimeTrade venueCode(Integer venueCode) {
    this.venueCode = venueCode;
    return this;
  }

   /**
   * Venue Code
   * @return venueCode
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Venue Code")
  @JsonProperty(JSON_PROPERTY_VENUE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getVenueCode() {
    return venueCode;
  }


  @JsonProperty(JSON_PROPERTY_VENUE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVenueCode(Integer venueCode) {
    this.venueCode = venueCode;
  }


  public PriceTimeTrade cumVwap(Double cumVwap) {
    this.cumVwap = cumVwap;
    return this;
  }

   /**
   * cumVwap
   * @return cumVwap
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "cumVwap")
  @JsonProperty(JSON_PROPERTY_CUM_VWAP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getCumVwap() {
    return cumVwap;
  }


  @JsonProperty(JSON_PROPERTY_CUM_VWAP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCumVwap(Double cumVwap) {
    this.cumVwap = cumVwap;
  }


  /**
   * Return true if this PriceTimeTrade object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PriceTimeTrade priceTimeTrade = (PriceTimeTrade) o;
    return Objects.equals(this.time, priceTimeTrade.time) &&
        Objects.equals(this.price, priceTimeTrade.price) &&
        Objects.equals(this.venue, priceTimeTrade.venue) &&
        Objects.equals(this.volume, priceTimeTrade.volume) &&
        Objects.equals(this.conditionCodes, priceTimeTrade.conditionCodes) &&
        Objects.equals(this.venueCode, priceTimeTrade.venueCode) &&
        Objects.equals(this.cumVwap, priceTimeTrade.cumVwap);
  }

  @Override
  public int hashCode() {
    return Objects.hash(time, price, venue, volume, conditionCodes, venueCode, cumVwap);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PriceTimeTrade {\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    venue: ").append(toIndentedString(venue)).append("\n");
    sb.append("    volume: ").append(toIndentedString(volume)).append("\n");
    sb.append("    conditionCodes: ").append(toIndentedString(conditionCodes)).append("\n");
    sb.append("    venueCode: ").append(toIndentedString(venueCode)).append("\n");
    sb.append("    cumVwap: ").append(toIndentedString(cumVwap)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

