/*
 * Best Execution Analytics for Smarter Trading (BEAST) API
 * Enables clients to programmatically access the underlying data which powers the BEAST Liquidity Analytics (LA) and Transaction Cost Analysis (TCA) applications.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.BestExecutionAnalyticsforSmarterTradingBEAST.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.BestExecutionAnalyticsforSmarterTradingBEAST.JSON;


/**
 * The Outlier Metrics object
 */
@ApiModel(description = "The Outlier Metrics object")
@JsonPropertyOrder({
  OutlierMetrics.JSON_PROPERTY_MAX,
  OutlierMetrics.JSON_PROPERTY_MIN,
  OutlierMetrics.JSON_PROPERTY_STD_DEV,
  OutlierMetrics.JSON_PROPERTY_AVG,
  OutlierMetrics.JSON_PROPERTY_MEDIAN,
  OutlierMetrics.JSON_PROPERTY_BIN_WIDTH,
  OutlierMetrics.JSON_PROPERTY_SKEW,
  OutlierMetrics.JSON_PROPERTY_LAPLACE_SCALE,
  OutlierMetrics.JSON_PROPERTY_MIN_METRIC,
  OutlierMetrics.JSON_PROPERTY_MAX_METRIC,
  OutlierMetrics.JSON_PROPERTY_BIN_MAX,
  OutlierMetrics.JSON_PROPERTY_BIN_MIN
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class OutlierMetrics implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_MAX = "max";
  private Double max;

  public static final String JSON_PROPERTY_MIN = "min";
  private Double min;

  public static final String JSON_PROPERTY_STD_DEV = "stdDev";
  private Double stdDev;

  public static final String JSON_PROPERTY_AVG = "avg";
  private Double avg;

  public static final String JSON_PROPERTY_MEDIAN = "median";
  private Double median;

  public static final String JSON_PROPERTY_BIN_WIDTH = "binWidth";
  private Double binWidth;

  public static final String JSON_PROPERTY_SKEW = "skew";
  private Double skew;

  public static final String JSON_PROPERTY_LAPLACE_SCALE = "laplaceScale";
  private Double laplaceScale;

  public static final String JSON_PROPERTY_MIN_METRIC = "minMetric";
  private Double minMetric;

  public static final String JSON_PROPERTY_MAX_METRIC = "maxMetric";
  private Double maxMetric;

  public static final String JSON_PROPERTY_BIN_MAX = "binMax";
  private Integer binMax;

  public static final String JSON_PROPERTY_BIN_MIN = "binMin";
  private Integer binMin;

  public OutlierMetrics() { 
  }

  public OutlierMetrics max(Double max) {
    this.max = max;
    return this;
  }

   /**
   * Max Value
   * @return max
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Max Value")
  @JsonProperty(JSON_PROPERTY_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getMax() {
    return max;
  }


  @JsonProperty(JSON_PROPERTY_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMax(Double max) {
    this.max = max;
  }


  public OutlierMetrics min(Double min) {
    this.min = min;
    return this;
  }

   /**
   * Min Value
   * @return min
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Min Value")
  @JsonProperty(JSON_PROPERTY_MIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getMin() {
    return min;
  }


  @JsonProperty(JSON_PROPERTY_MIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMin(Double min) {
    this.min = min;
  }


  public OutlierMetrics stdDev(Double stdDev) {
    this.stdDev = stdDev;
    return this;
  }

   /**
   * Standard Deviation
   * @return stdDev
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Standard Deviation")
  @JsonProperty(JSON_PROPERTY_STD_DEV)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getStdDev() {
    return stdDev;
  }


  @JsonProperty(JSON_PROPERTY_STD_DEV)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStdDev(Double stdDev) {
    this.stdDev = stdDev;
  }


  public OutlierMetrics avg(Double avg) {
    this.avg = avg;
    return this;
  }

   /**
   * Average
   * @return avg
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Average")
  @JsonProperty(JSON_PROPERTY_AVG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getAvg() {
    return avg;
  }


  @JsonProperty(JSON_PROPERTY_AVG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvg(Double avg) {
    this.avg = avg;
  }


  public OutlierMetrics median(Double median) {
    this.median = median;
    return this;
  }

   /**
   * Median
   * @return median
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Median")
  @JsonProperty(JSON_PROPERTY_MEDIAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getMedian() {
    return median;
  }


  @JsonProperty(JSON_PROPERTY_MEDIAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMedian(Double median) {
    this.median = median;
  }


  public OutlierMetrics binWidth(Double binWidth) {
    this.binWidth = binWidth;
    return this;
  }

   /**
   * Bin Width
   * @return binWidth
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Bin Width")
  @JsonProperty(JSON_PROPERTY_BIN_WIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getBinWidth() {
    return binWidth;
  }


  @JsonProperty(JSON_PROPERTY_BIN_WIDTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBinWidth(Double binWidth) {
    this.binWidth = binWidth;
  }


  public OutlierMetrics skew(Double skew) {
    this.skew = skew;
    return this;
  }

   /**
   * Skew
   * @return skew
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Skew")
  @JsonProperty(JSON_PROPERTY_SKEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getSkew() {
    return skew;
  }


  @JsonProperty(JSON_PROPERTY_SKEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSkew(Double skew) {
    this.skew = skew;
  }


  public OutlierMetrics laplaceScale(Double laplaceScale) {
    this.laplaceScale = laplaceScale;
    return this;
  }

   /**
   * Laplace Scale
   * @return laplaceScale
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Laplace Scale")
  @JsonProperty(JSON_PROPERTY_LAPLACE_SCALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getLaplaceScale() {
    return laplaceScale;
  }


  @JsonProperty(JSON_PROPERTY_LAPLACE_SCALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLaplaceScale(Double laplaceScale) {
    this.laplaceScale = laplaceScale;
  }


  public OutlierMetrics minMetric(Double minMetric) {
    this.minMetric = minMetric;
    return this;
  }

   /**
   * Min Metric
   * @return minMetric
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Min Metric")
  @JsonProperty(JSON_PROPERTY_MIN_METRIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getMinMetric() {
    return minMetric;
  }


  @JsonProperty(JSON_PROPERTY_MIN_METRIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMinMetric(Double minMetric) {
    this.minMetric = minMetric;
  }


  public OutlierMetrics maxMetric(Double maxMetric) {
    this.maxMetric = maxMetric;
    return this;
  }

   /**
   * Max Metric
   * @return maxMetric
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Max Metric")
  @JsonProperty(JSON_PROPERTY_MAX_METRIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getMaxMetric() {
    return maxMetric;
  }


  @JsonProperty(JSON_PROPERTY_MAX_METRIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxMetric(Double maxMetric) {
    this.maxMetric = maxMetric;
  }


  public OutlierMetrics binMax(Integer binMax) {
    this.binMax = binMax;
    return this;
  }

   /**
   * Bin Max
   * @return binMax
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Bin Max")
  @JsonProperty(JSON_PROPERTY_BIN_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getBinMax() {
    return binMax;
  }


  @JsonProperty(JSON_PROPERTY_BIN_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBinMax(Integer binMax) {
    this.binMax = binMax;
  }


  public OutlierMetrics binMin(Integer binMin) {
    this.binMin = binMin;
    return this;
  }

   /**
   * Bin Min
   * @return binMin
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Bin Min")
  @JsonProperty(JSON_PROPERTY_BIN_MIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getBinMin() {
    return binMin;
  }


  @JsonProperty(JSON_PROPERTY_BIN_MIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBinMin(Integer binMin) {
    this.binMin = binMin;
  }


  /**
   * Return true if this OutlierMetrics object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OutlierMetrics outlierMetrics = (OutlierMetrics) o;
    return Objects.equals(this.max, outlierMetrics.max) &&
        Objects.equals(this.min, outlierMetrics.min) &&
        Objects.equals(this.stdDev, outlierMetrics.stdDev) &&
        Objects.equals(this.avg, outlierMetrics.avg) &&
        Objects.equals(this.median, outlierMetrics.median) &&
        Objects.equals(this.binWidth, outlierMetrics.binWidth) &&
        Objects.equals(this.skew, outlierMetrics.skew) &&
        Objects.equals(this.laplaceScale, outlierMetrics.laplaceScale) &&
        Objects.equals(this.minMetric, outlierMetrics.minMetric) &&
        Objects.equals(this.maxMetric, outlierMetrics.maxMetric) &&
        Objects.equals(this.binMax, outlierMetrics.binMax) &&
        Objects.equals(this.binMin, outlierMetrics.binMin);
  }

  @Override
  public int hashCode() {
    return Objects.hash(max, min, stdDev, avg, median, binWidth, skew, laplaceScale, minMetric, maxMetric, binMax, binMin);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OutlierMetrics {\n");
    sb.append("    max: ").append(toIndentedString(max)).append("\n");
    sb.append("    min: ").append(toIndentedString(min)).append("\n");
    sb.append("    stdDev: ").append(toIndentedString(stdDev)).append("\n");
    sb.append("    avg: ").append(toIndentedString(avg)).append("\n");
    sb.append("    median: ").append(toIndentedString(median)).append("\n");
    sb.append("    binWidth: ").append(toIndentedString(binWidth)).append("\n");
    sb.append("    skew: ").append(toIndentedString(skew)).append("\n");
    sb.append("    laplaceScale: ").append(toIndentedString(laplaceScale)).append("\n");
    sb.append("    minMetric: ").append(toIndentedString(minMetric)).append("\n");
    sb.append("    maxMetric: ").append(toIndentedString(maxMetric)).append("\n");
    sb.append("    binMax: ").append(toIndentedString(binMax)).append("\n");
    sb.append("    binMin: ").append(toIndentedString(binMin)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

