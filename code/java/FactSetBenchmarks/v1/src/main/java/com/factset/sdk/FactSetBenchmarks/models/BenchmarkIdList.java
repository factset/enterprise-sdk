/*
 * FactSet Benchmarks API
 * FactSet Benchmarks API gives access to Index Constituents, Prices, Returns, and Ratios. For a sample list of identifiers, use the /metrics endpoint. Equity Only - Fixed Income Benchmark support coming soon. 
 *
 * The version of the OpenAPI document: 1.9.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetBenchmarks.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetBenchmarks.JSON;


/**
 * BenchmarkIdList
 */
@JsonPropertyOrder({
  BenchmarkIdList.JSON_PROPERTY_FSYM_ID,
  BenchmarkIdList.JSON_PROPERTY_NAME,
  BenchmarkIdList.JSON_PROPERTY_FAMILY_NAME,
  BenchmarkIdList.JSON_PROPERTY_MARKET,
  BenchmarkIdList.JSON_PROPERTY_CATEGORY_DESCRIPTION
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class BenchmarkIdList implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_FSYM_ID = "fsymId";
  private JsonNullable<String> fsymId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FAMILY_NAME = "familyName";
  private JsonNullable<String> familyName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MARKET = "market";
  private JsonNullable<String> market = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CATEGORY_DESCRIPTION = "categoryDescription";
  private JsonNullable<String> categoryDescription = JsonNullable.<String>undefined();

  public BenchmarkIdList() { 
  }

  public BenchmarkIdList fsymId(String fsymId) {
    this.fsymId = JsonNullable.<String>of(fsymId);
    return this;
  }

   /**
   * Benchmark Id
   * @return fsymId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "990100", value = "Benchmark Id")
  @JsonIgnore

  public String getFsymId() {
        return fsymId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFsymId_JsonNullable() {
    return fsymId;
  }
  
  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  public void setFsymId_JsonNullable(JsonNullable<String> fsymId) {
    this.fsymId = fsymId;
  }

  public void setFsymId(String fsymId) {
    this.fsymId = JsonNullable.<String>of(fsymId);
  }


  public BenchmarkIdList name(String name) {
    this.name = JsonNullable.<String>of(name);
    return this;
  }

   /**
   * Name of the Benchmark ID
   * @return name
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "MSCI World Index", value = "Name of the Benchmark ID")
  @JsonIgnore

  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public BenchmarkIdList familyName(String familyName) {
    this.familyName = JsonNullable.<String>of(familyName);
    return this;
  }

   /**
   * Name of the Benchmarks Family
   * @return familyName
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "MSCI", value = "Name of the Benchmarks Family")
  @JsonIgnore

  public String getFamilyName() {
        return familyName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FAMILY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFamilyName_JsonNullable() {
    return familyName;
  }
  
  @JsonProperty(JSON_PROPERTY_FAMILY_NAME)
  public void setFamilyName_JsonNullable(JsonNullable<String> familyName) {
    this.familyName = familyName;
  }

  public void setFamilyName(String familyName) {
    this.familyName = JsonNullable.<String>of(familyName);
  }


  public BenchmarkIdList market(String market) {
    this.market = JsonNullable.<String>of(market);
    return this;
  }

   /**
   * Market grouping related to the Benchmark Family
   * @return market
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Developed", value = "Market grouping related to the Benchmark Family")
  @JsonIgnore

  public String getMarket() {
        return market.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MARKET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMarket_JsonNullable() {
    return market;
  }
  
  @JsonProperty(JSON_PROPERTY_MARKET)
  public void setMarket_JsonNullable(JsonNullable<String> market) {
    this.market = market;
  }

  public void setMarket(String market) {
    this.market = JsonNullable.<String>of(market);
  }


  public BenchmarkIdList categoryDescription(String categoryDescription) {
    this.categoryDescription = JsonNullable.<String>of(categoryDescription);
    return this;
  }

   /**
   * Extended name or description of Benchmark Family &amp; Market
   * @return categoryDescription
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "International Indices", value = "Extended name or description of Benchmark Family & Market")
  @JsonIgnore

  public String getCategoryDescription() {
        return categoryDescription.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CATEGORY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCategoryDescription_JsonNullable() {
    return categoryDescription;
  }
  
  @JsonProperty(JSON_PROPERTY_CATEGORY_DESCRIPTION)
  public void setCategoryDescription_JsonNullable(JsonNullable<String> categoryDescription) {
    this.categoryDescription = categoryDescription;
  }

  public void setCategoryDescription(String categoryDescription) {
    this.categoryDescription = JsonNullable.<String>of(categoryDescription);
  }


  /**
   * Return true if this benchmarkIdList object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BenchmarkIdList benchmarkIdList = (BenchmarkIdList) o;
    return equalsNullable(this.fsymId, benchmarkIdList.fsymId) &&
        equalsNullable(this.name, benchmarkIdList.name) &&
        equalsNullable(this.familyName, benchmarkIdList.familyName) &&
        equalsNullable(this.market, benchmarkIdList.market) &&
        equalsNullable(this.categoryDescription, benchmarkIdList.categoryDescription);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(fsymId), hashCodeNullable(name), hashCodeNullable(familyName), hashCodeNullable(market), hashCodeNullable(categoryDescription));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BenchmarkIdList {\n");
    sb.append("    fsymId: ").append(toIndentedString(fsymId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    familyName: ").append(toIndentedString(familyName)).append("\n");
    sb.append("    market: ").append(toIndentedString(market)).append("\n");
    sb.append("    categoryDescription: ").append(toIndentedString(categoryDescription)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

