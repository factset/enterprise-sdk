/*
 * FactSet Benchmarks API
 * FactSet Benchmarks API gives access to Index Constituents, Prices, Returns, and Ratios. For a sample list of identifiers, use the /metrics endpoint. Equity Only - Fixed Income Benchmark support coming soon. 
 *
 * The version of the OpenAPI document: 1.9.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetBenchmarks.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDate;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetBenchmarks.JSON;


/**
 * FixedIncomeBenchmarkConstituent
 */
@JsonPropertyOrder({
  FixedIncomeBenchmarkConstituent.JSON_PROPERTY_FSYM_ID,
  FixedIncomeBenchmarkConstituent.JSON_PROPERTY_DATE,
  FixedIncomeBenchmarkConstituent.JSON_PROPERTY_FSYM_SECURITY_ID,
  FixedIncomeBenchmarkConstituent.JSON_PROPERTY_WEIGHT_CLOSE,
  FixedIncomeBenchmarkConstituent.JSON_PROPERTY_AMOUNT_OUTSTANDING,
  FixedIncomeBenchmarkConstituent.JSON_PROPERTY_PRICE,
  FixedIncomeBenchmarkConstituent.JSON_PROPERTY_ADJ_MARKET_VALUE,
  FixedIncomeBenchmarkConstituent.JSON_PROPERTY_REQUEST_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class FixedIncomeBenchmarkConstituent implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_FSYM_ID = "fsymId";
  private JsonNullable<String> fsymId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DATE = "date";
  private JsonNullable<LocalDate> date = JsonNullable.<LocalDate>undefined();

  public static final String JSON_PROPERTY_FSYM_SECURITY_ID = "fsymSecurityId";
  private JsonNullable<String> fsymSecurityId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_WEIGHT_CLOSE = "weightClose";
  private JsonNullable<Double> weightClose = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_AMOUNT_OUTSTANDING = "amountOutstanding";
  private JsonNullable<Double> amountOutstanding = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_PRICE = "price";
  private JsonNullable<Double> price = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_ADJ_MARKET_VALUE = "adjMarketValue";
  private JsonNullable<Double> adjMarketValue = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_REQUEST_ID = "requestId";
  private String requestId;

  public FixedIncomeBenchmarkConstituent() { 
  }

  public FixedIncomeBenchmarkConstituent fsymId(String fsymId) {
    this.fsymId = JsonNullable.<String>of(fsymId);
    return this;
  }

   /**
   * Benchmark Id
   * @return fsymId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "LHMN0001", value = "Benchmark Id")
  @JsonIgnore

  public String getFsymId() {
        return fsymId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFsymId_JsonNullable() {
    return fsymId;
  }
  
  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  public void setFsymId_JsonNullable(JsonNullable<String> fsymId) {
    this.fsymId = fsymId;
  }

  public void setFsymId(String fsymId) {
    this.fsymId = JsonNullable.<String>of(fsymId);
  }


  public FixedIncomeBenchmarkConstituent date(LocalDate date) {
    this.date = JsonNullable.<LocalDate>of(date);
    return this;
  }

   /**
   * Date of weight and shares.
   * @return date
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Mon Apr 12 00:00:00 UTC 2021", value = "Date of weight and shares.")
  @JsonIgnore

  public LocalDate getDate() {
        return date.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LocalDate> getDate_JsonNullable() {
    return date;
  }
  
  @JsonProperty(JSON_PROPERTY_DATE)
  public void setDate_JsonNullable(JsonNullable<LocalDate> date) {
    this.date = date;
  }

  public void setDate(LocalDate date) {
    this.date = JsonNullable.<LocalDate>of(date);
  }


  public FixedIncomeBenchmarkConstituent fsymSecurityId(String fsymSecurityId) {
    this.fsymSecurityId = JsonNullable.<String>of(fsymSecurityId);
    return this;
  }

   /**
   * FactSet Security Identifier (-S).
   * @return fsymSecurityId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "FV4SC0-S", value = "FactSet Security Identifier (-S).")
  @JsonIgnore

  public String getFsymSecurityId() {
        return fsymSecurityId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FSYM_SECURITY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFsymSecurityId_JsonNullable() {
    return fsymSecurityId;
  }
  
  @JsonProperty(JSON_PROPERTY_FSYM_SECURITY_ID)
  public void setFsymSecurityId_JsonNullable(JsonNullable<String> fsymSecurityId) {
    this.fsymSecurityId = fsymSecurityId;
  }

  public void setFsymSecurityId(String fsymSecurityId) {
    this.fsymSecurityId = JsonNullable.<String>of(fsymSecurityId);
  }


  public FixedIncomeBenchmarkConstituent weightClose(Double weightClose) {
    this.weightClose = JsonNullable.<Double>of(weightClose);
    return this;
  }

   /**
   * Weight of Security in benchmark (percent).
   * @return weightClose
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "0.00303380596473456", value = "Weight of Security in benchmark (percent).")
  @JsonIgnore

  public Double getWeightClose() {
        return weightClose.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WEIGHT_CLOSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getWeightClose_JsonNullable() {
    return weightClose;
  }
  
  @JsonProperty(JSON_PROPERTY_WEIGHT_CLOSE)
  public void setWeightClose_JsonNullable(JsonNullable<Double> weightClose) {
    this.weightClose = weightClose;
  }

  public void setWeightClose(Double weightClose) {
    this.weightClose = JsonNullable.<Double>of(weightClose);
  }


  public FixedIncomeBenchmarkConstituent amountOutstanding(Double amountOutstanding) {
    this.amountOutstanding = JsonNullable.<Double>of(amountOutstanding);
    return this;
  }

   /**
   * Amount Outstanding for the Fixed Income Security.
   * @return amountOutstanding
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "700000", value = "Amount Outstanding for the Fixed Income Security.")
  @JsonIgnore

  public Double getAmountOutstanding() {
        return amountOutstanding.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AMOUNT_OUTSTANDING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getAmountOutstanding_JsonNullable() {
    return amountOutstanding;
  }
  
  @JsonProperty(JSON_PROPERTY_AMOUNT_OUTSTANDING)
  public void setAmountOutstanding_JsonNullable(JsonNullable<Double> amountOutstanding) {
    this.amountOutstanding = amountOutstanding;
  }

  public void setAmountOutstanding(Double amountOutstanding) {
    this.amountOutstanding = JsonNullable.<Double>of(amountOutstanding);
  }


  public FixedIncomeBenchmarkConstituent price(Double price) {
    this.price = JsonNullable.<Double>of(price);
    return this;
  }

   /**
   * Fixed Income Price of security held.
   * @return price
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "106.976", value = "Fixed Income Price of security held.")
  @JsonIgnore

  public Double getPrice() {
        return price.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getPrice_JsonNullable() {
    return price;
  }
  
  @JsonProperty(JSON_PROPERTY_PRICE)
  public void setPrice_JsonNullable(JsonNullable<Double> price) {
    this.price = price;
  }

  public void setPrice(Double price) {
    this.price = JsonNullable.<Double>of(price);
  }


  public FixedIncomeBenchmarkConstituent adjMarketValue(Double adjMarketValue) {
    this.adjMarketValue = JsonNullable.<Double>of(adjMarketValue);
    return this;
  }

   /**
   * Market value adjusted. Market Value represented in Millions.
   * @return adjMarketValue
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "757.233375", value = "Market value adjusted. Market Value represented in Millions.")
  @JsonIgnore

  public Double getAdjMarketValue() {
        return adjMarketValue.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ADJ_MARKET_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getAdjMarketValue_JsonNullable() {
    return adjMarketValue;
  }
  
  @JsonProperty(JSON_PROPERTY_ADJ_MARKET_VALUE)
  public void setAdjMarketValue_JsonNullable(JsonNullable<Double> adjMarketValue) {
    this.adjMarketValue = adjMarketValue;
  }

  public void setAdjMarketValue(Double adjMarketValue) {
    this.adjMarketValue = JsonNullable.<Double>of(adjMarketValue);
  }


  public FixedIncomeBenchmarkConstituent requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

   /**
   * Identifier specified in the request
   * @return requestId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "LHMN0001", value = "Identifier specified in the request")
  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRequestId() {
    return requestId;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }


  /**
   * Return true if this fixedIncomeBenchmarkConstituent object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FixedIncomeBenchmarkConstituent fixedIncomeBenchmarkConstituent = (FixedIncomeBenchmarkConstituent) o;
    return equalsNullable(this.fsymId, fixedIncomeBenchmarkConstituent.fsymId) &&
        equalsNullable(this.date, fixedIncomeBenchmarkConstituent.date) &&
        equalsNullable(this.fsymSecurityId, fixedIncomeBenchmarkConstituent.fsymSecurityId) &&
        equalsNullable(this.weightClose, fixedIncomeBenchmarkConstituent.weightClose) &&
        equalsNullable(this.amountOutstanding, fixedIncomeBenchmarkConstituent.amountOutstanding) &&
        equalsNullable(this.price, fixedIncomeBenchmarkConstituent.price) &&
        equalsNullable(this.adjMarketValue, fixedIncomeBenchmarkConstituent.adjMarketValue) &&
        Objects.equals(this.requestId, fixedIncomeBenchmarkConstituent.requestId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(fsymId), hashCodeNullable(date), hashCodeNullable(fsymSecurityId), hashCodeNullable(weightClose), hashCodeNullable(amountOutstanding), hashCodeNullable(price), hashCodeNullable(adjMarketValue), requestId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FixedIncomeBenchmarkConstituent {\n");
    sb.append("    fsymId: ").append(toIndentedString(fsymId)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    fsymSecurityId: ").append(toIndentedString(fsymSecurityId)).append("\n");
    sb.append("    weightClose: ").append(toIndentedString(weightClose)).append("\n");
    sb.append("    amountOutstanding: ").append(toIndentedString(amountOutstanding)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    adjMarketValue: ").append(toIndentedString(adjMarketValue)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

