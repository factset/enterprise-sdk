/*
 * FactSet Ownership API
 * FactSet's Fund Ownership API gives access to both **Holdings**, **Holders**, and **Transactions** data.<p> Factset's Holdings endpoints gives access to all the underlying securities and their position details held within a given fund. Fund Types supported include Open-End Mutual Funds, Closed-end Mutual Funds, and Exchange Traded Funds. Security Holders information retrieves all \"holder types\" and their positions across institutions, funds, insiders, and stakeholders. FactSet also provides extensive insider and institutional transactions data for multiple countries including the United States, China, and Canada.</p><p>The FactSet Ownership and Mutual Funds database collects global equity ownership data for approximately 50,000 institutions, 60,000 unique Mutual Fund portfolios, and 400,000 Insider/Stakeholders from around 110 countries. For more details review our [Data Collection](https://my.apps.factset.com/oa/cms/oaAttachment/87e162be-f2d1-4f40-a85b-bfb1b020d270/20079) methodology. </p> 
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetOwnership.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.FactSetOwnership.models.AssetType;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetOwnership.JSON;


/**
 * Holdings Request
 */
@ApiModel(description = "Holdings Request")
@JsonPropertyOrder({
  FundHoldingsRequest.JSON_PROPERTY_IDS,
  FundHoldingsRequest.JSON_PROPERTY_DATE,
  FundHoldingsRequest.JSON_PROPERTY_TOPN,
  FundHoldingsRequest.JSON_PROPERTY_ASSET_TYPE,
  FundHoldingsRequest.JSON_PROPERTY_CURRENCY
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class FundHoldingsRequest implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_IDS = "ids";
  private java.util.List<String> ids = new java.util.ArrayList<>();

  public static final String JSON_PROPERTY_DATE = "date";
  private String date;

  public static final String JSON_PROPERTY_TOPN = "topn";
  private String topn = "ALL";

  public static final String JSON_PROPERTY_ASSET_TYPE = "assetType";
  private AssetType assetType = AssetType.EQ;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private String currency;

  public FundHoldingsRequest() { 
  }

  @JsonCreator
  public FundHoldingsRequest(
    @JsonProperty(value=JSON_PROPERTY_IDS, required=true) java.util.List<String> ids
  ) {
    this();
    this.ids = ids;
  }

  public FundHoldingsRequest ids(java.util.List<String> ids) {
    this.ids = ids;
    return this;
  }

  public FundHoldingsRequest addIdsItem(String idsItem) {
    this.ids.add(idsItem);
    return this;
  }

   /**
   * List of Fund identifiers.
   * @return ids
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "[\"FDIVX-US\"]", required = true, value = "List of Fund identifiers.")
  @JsonProperty(JSON_PROPERTY_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public java.util.List<String> getIds() {
    return ids;
  }


  @JsonProperty(JSON_PROPERTY_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIds(java.util.List<String> ids) {
    this.ids = ids;
  }


  public FundHoldingsRequest date(String date) {
    this.date = date;
    return this;
  }

   /**
   * Date of holdings expressed in YYYY-MM-DD format.
   * @return date
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "2019-09-30", value = "Date of holdings expressed in YYYY-MM-DD format.")
  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDate() {
    return date;
  }


  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDate(String date) {
    this.date = date;
  }


  public FundHoldingsRequest topn(String topn) {
    this.topn = topn;
    return this;
  }

   /**
   * Limits number of holdings or holders displayed by the top *n* securities. Default is ALL, or use integer to limit number.
   * @return topn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "5", value = "Limits number of holdings or holders displayed by the top *n* securities. Default is ALL, or use integer to limit number.")
  @JsonProperty(JSON_PROPERTY_TOPN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTopn() {
    return topn;
  }


  @JsonProperty(JSON_PROPERTY_TOPN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTopn(String topn) {
    this.topn = topn;
  }


  public FundHoldingsRequest assetType(AssetType assetType) {
    this.assetType = assetType;
    return this;
  }

   /**
   * Get assetType
   * @return assetType
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ASSET_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AssetType getAssetType() {
    return assetType;
  }


  @JsonProperty(JSON_PROPERTY_ASSET_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAssetType(AssetType assetType) {
    this.assetType = assetType;
  }


  public FundHoldingsRequest currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Currency code for adjusting prices. Default is Local. For a list of currency ISO codes, visit [Online Assistant Page 1470](https://oa.apps.factset.com/pages/1470).
   * @return currency
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "USD", value = "Currency code for adjusting prices. Default is Local. For a list of currency ISO codes, visit [Online Assistant Page 1470](https://oa.apps.factset.com/pages/1470).")
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(String currency) {
    this.currency = currency;
  }


  /**
   * Return true if this fundHoldingsRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FundHoldingsRequest fundHoldingsRequest = (FundHoldingsRequest) o;
    return Objects.equals(this.ids, fundHoldingsRequest.ids) &&
        Objects.equals(this.date, fundHoldingsRequest.date) &&
        Objects.equals(this.topn, fundHoldingsRequest.topn) &&
        Objects.equals(this.assetType, fundHoldingsRequest.assetType) &&
        Objects.equals(this.currency, fundHoldingsRequest.currency);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ids, date, topn, assetType, currency);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FundHoldingsRequest {\n");
    sb.append("    ids: ").append(toIndentedString(ids)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    topn: ").append(toIndentedString(topn)).append("\n");
    sb.append("    assetType: ").append(toIndentedString(assetType)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

