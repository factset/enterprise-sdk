/*
 * FactSet Ownership API
 * FactSet's Fund Ownership API gives access to both **Holdings**, **Holders**, and **Transactions** data.<p> Factset's Holdings endpoints gives access to all the underlying securities and their position details held within a given fund. Fund Types supported include Open-End Mutual Funds, Closed-end Mutual Funds, and Exchange Traded Funds. Security Holders information retrieves all \"holder types\" and their positions across institutions, funds, insiders, and stakeholders. FactSet also provides extensive insider and institutional transactions data for multiple countries including the United States, China, and Canada.</p><p>The FactSet Ownership and Mutual Funds database collects global equity ownership data for approximately 50,000 institutions, 60,000 unique Mutual Fund portfolios, and 400,000 Insider/Stakeholders from around 110 countries. For more details review our [Data Collection](https://my.apps.factset.com/oa/cms/oaAttachment/87e162be-f2d1-4f40-a85b-bfb1b020d270/20079) methodology. </p> 
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetOwnership.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetOwnership.JSON;


/**
 * institutionalTransactions response object
 */
@ApiModel(description = "institutionalTransactions response object")
@JsonPropertyOrder({
  InstitutionalTransactions.JSON_PROPERTY_REQUEST_ID,
  InstitutionalTransactions.JSON_PROPERTY_FSYM_ID,
  InstitutionalTransactions.JSON_PROPERTY_CURRENCY,
  InstitutionalTransactions.JSON_PROPERTY_HOLDER_NAME,
  InstitutionalTransactions.JSON_PROPERTY_PCT_O_S,
  InstitutionalTransactions.JSON_PROPERTY_PCT_CHANGE,
  InstitutionalTransactions.JSON_PROPERTY_POS_CHANGE,
  InstitutionalTransactions.JSON_PROPERTY_MARKET_VAL,
  InstitutionalTransactions.JSON_PROPERTY_REPORT_DATE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class InstitutionalTransactions implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_REQUEST_ID = "requestId";
  private String requestId;

  public static final String JSON_PROPERTY_FSYM_ID = "fsymId";
  private JsonNullable<String> fsymId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private JsonNullable<String> currency = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_HOLDER_NAME = "holderName";
  private JsonNullable<String> holderName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PCT_O_S = "pctOS";
  private JsonNullable<Double> pctOS = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_PCT_CHANGE = "pctChange";
  private JsonNullable<Double> pctChange = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_POS_CHANGE = "posChange";
  private JsonNullable<Double> posChange = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MARKET_VAL = "marketVal";
  private JsonNullable<Double> marketVal = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_REPORT_DATE = "reportDate";
  private JsonNullable<String> reportDate = JsonNullable.<String>undefined();

  public InstitutionalTransactions() { 
  }

  public InstitutionalTransactions requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

   /**
   * Identifier that was used in the request.
   * @return requestId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "TSLA-US", value = "Identifier that was used in the request.")
  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRequestId() {
    return requestId;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }


  public InstitutionalTransactions fsymId(String fsymId) {
    this.fsymId = JsonNullable.<String>of(fsymId);
    return this;
  }

   /**
   * FactSet Security Identifier of Fund. Identifies the security level id of the Fund requested (not-representing the underlying holding). Six alpha-numeric characters, excluding vowels, with an -S suffix (XXXXXX-S). All equity and fixed income securities that exist on FactSet are allocated a security-level permanent identifier.
   * @return fsymId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Q2YN1N-R", value = "FactSet Security Identifier of Fund. Identifies the security level id of the Fund requested (not-representing the underlying holding). Six alpha-numeric characters, excluding vowels, with an -S suffix (XXXXXX-S). All equity and fixed income securities that exist on FactSet are allocated a security-level permanent identifier.")
  @JsonIgnore

  public String getFsymId() {
        return fsymId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFsymId_JsonNullable() {
    return fsymId;
  }
  
  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  public void setFsymId_JsonNullable(JsonNullable<String> fsymId) {
    this.fsymId = fsymId;
  }

  public void setFsymId(String fsymId) {
    this.fsymId = JsonNullable.<String>of(fsymId);
  }


  public InstitutionalTransactions currency(String currency) {
    this.currency = JsonNullable.<String>of(currency);
    return this;
  }

   /**
   * Currency code. The service will default to the funds local currency. For a list of currency ISO codes, visit [Online Assistant Page #1470](https://oa.apps.factset.com/pages/1470).
   * @return currency
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "USD", value = "Currency code. The service will default to the funds local currency. For a list of currency ISO codes, visit [Online Assistant Page #1470](https://oa.apps.factset.com/pages/1470).")
  @JsonIgnore

  public String getCurrency() {
        return currency.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCurrency_JsonNullable() {
    return currency;
  }
  
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  public void setCurrency_JsonNullable(JsonNullable<String> currency) {
    this.currency = currency;
  }

  public void setCurrency(String currency) {
    this.currency = JsonNullable.<String>of(currency);
  }


  public InstitutionalTransactions holderName(String holderName) {
    this.holderName = JsonNullable.<String>of(holderName);
    return this;
  }

   /**
   * Returns the names of the institutions involved in the transactions that occurred between the specified start and end dates.
   * @return holderName
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "T. Rowe Price Associates, Inc. (IM)", value = "Returns the names of the institutions involved in the transactions that occurred between the specified start and end dates.")
  @JsonIgnore

  public String getHolderName() {
        return holderName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HOLDER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getHolderName_JsonNullable() {
    return holderName;
  }
  
  @JsonProperty(JSON_PROPERTY_HOLDER_NAME)
  public void setHolderName_JsonNullable(JsonNullable<String> holderName) {
    this.holderName = holderName;
  }

  public void setHolderName(String holderName) {
    this.holderName = JsonNullable.<String>of(holderName);
  }


  public InstitutionalTransactions pctOS(Double pctOS) {
    this.pctOS = JsonNullable.<Double>of(pctOS);
    return this;
  }

   /**
   * Returns position held as a percentage of total outstanding data for the holders of the security whose ownership activity matches the specified change type.
   * @return pctOS
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "0.80580141", value = "Returns position held as a percentage of total outstanding data for the holders of the security whose ownership activity matches the specified change type.")
  @JsonIgnore

  public Double getPctOS() {
        return pctOS.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PCT_O_S)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getPctOS_JsonNullable() {
    return pctOS;
  }
  
  @JsonProperty(JSON_PROPERTY_PCT_O_S)
  public void setPctOS_JsonNullable(JsonNullable<Double> pctOS) {
    this.pctOS = pctOS;
  }

  public void setPctOS(Double pctOS) {
    this.pctOS = JsonNullable.<Double>of(pctOS);
  }


  public InstitutionalTransactions pctChange(Double pctChange) {
    this.pctChange = JsonNullable.<Double>of(pctChange);
    return this;
  }

   /**
   * Returns change in position held as a percentage of total outstanding data for the holders of the security whose ownership activity matches the specified change type.
   * @return pctChange
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "0.23686886", value = "Returns change in position held as a percentage of total outstanding data for the holders of the security whose ownership activity matches the specified change type.")
  @JsonIgnore

  public Double getPctChange() {
        return pctChange.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PCT_CHANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getPctChange_JsonNullable() {
    return pctChange;
  }
  
  @JsonProperty(JSON_PROPERTY_PCT_CHANGE)
  public void setPctChange_JsonNullable(JsonNullable<Double> pctChange) {
    this.pctChange = pctChange;
  }

  public void setPctChange(Double pctChange) {
    this.pctChange = JsonNullable.<Double>of(pctChange);
  }


  public InstitutionalTransactions posChange(Double posChange) {
    this.posChange = JsonNullable.<Double>of(posChange);
    return this;
  }

   /**
   * Returns position change data for the holders of the security whose ownership activity matches the specified change type.
   * @return posChange
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "7722331.34", value = "Returns position change data for the holders of the security whose ownership activity matches the specified change type.")
  @JsonIgnore

  public Double getPosChange() {
        return posChange.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_POS_CHANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getPosChange_JsonNullable() {
    return posChange;
  }
  
  @JsonProperty(JSON_PROPERTY_POS_CHANGE)
  public void setPosChange_JsonNullable(JsonNullable<Double> posChange) {
    this.posChange = posChange;
  }

  public void setPosChange(Double posChange) {
    this.posChange = JsonNullable.<Double>of(posChange);
  }


  public InstitutionalTransactions marketVal(Double marketVal) {
    this.marketVal = JsonNullable.<Double>of(marketVal);
    return this;
  }

   /**
   * Returns market value data for the holders of the security whose ownership activity matches the specified change type.
   * @return marketVal
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "8928152243.21", value = "Returns market value data for the holders of the security whose ownership activity matches the specified change type.")
  @JsonIgnore

  public Double getMarketVal() {
        return marketVal.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MARKET_VAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMarketVal_JsonNullable() {
    return marketVal;
  }
  
  @JsonProperty(JSON_PROPERTY_MARKET_VAL)
  public void setMarketVal_JsonNullable(JsonNullable<Double> marketVal) {
    this.marketVal = marketVal;
  }

  public void setMarketVal(Double marketVal) {
    this.marketVal = JsonNullable.<Double>of(marketVal);
  }


  public InstitutionalTransactions reportDate(String reportDate) {
    this.reportDate = JsonNullable.<String>of(reportDate);
    return this;
  }

   /**
   * Returns the report date for the transactions that occurred between the specified start and end dates.
   * @return reportDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "2024-11-15", value = "Returns the report date for the transactions that occurred between the specified start and end dates.")
  @JsonIgnore

  public String getReportDate() {
        return reportDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REPORT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getReportDate_JsonNullable() {
    return reportDate;
  }
  
  @JsonProperty(JSON_PROPERTY_REPORT_DATE)
  public void setReportDate_JsonNullable(JsonNullable<String> reportDate) {
    this.reportDate = reportDate;
  }

  public void setReportDate(String reportDate) {
    this.reportDate = JsonNullable.<String>of(reportDate);
  }


  /**
   * Return true if this institutionalTransactions object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InstitutionalTransactions institutionalTransactions = (InstitutionalTransactions) o;
    return Objects.equals(this.requestId, institutionalTransactions.requestId) &&
        equalsNullable(this.fsymId, institutionalTransactions.fsymId) &&
        equalsNullable(this.currency, institutionalTransactions.currency) &&
        equalsNullable(this.holderName, institutionalTransactions.holderName) &&
        equalsNullable(this.pctOS, institutionalTransactions.pctOS) &&
        equalsNullable(this.pctChange, institutionalTransactions.pctChange) &&
        equalsNullable(this.posChange, institutionalTransactions.posChange) &&
        equalsNullable(this.marketVal, institutionalTransactions.marketVal) &&
        equalsNullable(this.reportDate, institutionalTransactions.reportDate);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestId, hashCodeNullable(fsymId), hashCodeNullable(currency), hashCodeNullable(holderName), hashCodeNullable(pctOS), hashCodeNullable(pctChange), hashCodeNullable(posChange), hashCodeNullable(marketVal), hashCodeNullable(reportDate));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InstitutionalTransactions {\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    fsymId: ").append(toIndentedString(fsymId)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    holderName: ").append(toIndentedString(holderName)).append("\n");
    sb.append("    pctOS: ").append(toIndentedString(pctOS)).append("\n");
    sb.append("    pctChange: ").append(toIndentedString(pctChange)).append("\n");
    sb.append("    posChange: ").append(toIndentedString(posChange)).append("\n");
    sb.append("    marketVal: ").append(toIndentedString(marketVal)).append("\n");
    sb.append("    reportDate: ").append(toIndentedString(reportDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

