/*
 * FactSet Ownership API
 * FactSet's Fund Ownership API gives access to both **Holdings**, **Holders**, and **Transactions** data.<p> Factset's Holdings endpoints gives access to all the underlying securities and their position details held within a given fund. Fund Types supported include Open-End Mutual Funds, Closed-end Mutual Funds, and Exchange Traded Funds. Security Holders information retrieves all \"holder types\" and their positions across institutions, funds, insiders, and stakeholders. FactSet also provides extensive insider and institutional transactions data for multiple countries including the United States, China, and Canada.</p><p>The FactSet Ownership and Mutual Funds database collects global equity ownership data for approximately 50,000 institutions, 60,000 unique Mutual Fund portfolios, and 400,000 Insider/Stakeholders from around 110 countries. For more details review our [Data Collection](https://my.apps.factset.com/oa/cms/oaAttachment/87e162be-f2d1-4f40-a85b-bfb1b020d270/20079) methodology. </p> 
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetOwnership.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetOwnership.JSON;


/**
 * insiderTransactions response object
 */
@ApiModel(description = "insiderTransactions response object")
@JsonPropertyOrder({
  InsiderTransactions.JSON_PROPERTY_REQUEST_ID,
  InsiderTransactions.JSON_PROPERTY_FSYM_ID,
  InsiderTransactions.JSON_PROPERTY_CURRENCY,
  InsiderTransactions.JSON_PROPERTY_HOLDER_NAME,
  InsiderTransactions.JSON_PROPERTY_HOLDER_TITLE,
  InsiderTransactions.JSON_PROPERTY_HOLDER_ID,
  InsiderTransactions.JSON_PROPERTY_SHARES,
  InsiderTransactions.JSON_PROPERTY_PRICE,
  InsiderTransactions.JSON_PROPERTY_NET_VALUE_CHANGE,
  InsiderTransactions.JSON_PROPERTY_FILING_DATE,
  InsiderTransactions.JSON_PROPERTY_IS_DERIVATIVE,
  InsiderTransactions.JSON_PROPERTY_IS_DIRECT,
  InsiderTransactions.JSON_PROPERTY_TRADE_TYPE,
  InsiderTransactions.JSON_PROPERTY_FORM_TYPE,
  InsiderTransactions.JSON_PROPERTY_TRANSACTION_DATE,
  InsiderTransactions.JSON_PROPERTY_SHARES_OWNED,
  InsiderTransactions.JSON_PROPERTY_SEC_RULE10B51
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class InsiderTransactions implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_REQUEST_ID = "requestId";
  private String requestId;

  public static final String JSON_PROPERTY_FSYM_ID = "fsymId";
  private JsonNullable<String> fsymId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private JsonNullable<String> currency = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_HOLDER_NAME = "holderName";
  private JsonNullable<String> holderName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_HOLDER_TITLE = "holderTitle";
  private JsonNullable<String> holderTitle = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_HOLDER_ID = "holderId";
  private JsonNullable<String> holderId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SHARES = "shares";
  private JsonNullable<BigDecimal> shares = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_PRICE = "price";
  private JsonNullable<Double> price = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_NET_VALUE_CHANGE = "netValueChange";
  private JsonNullable<Double> netValueChange = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_FILING_DATE = "filingDate";
  private JsonNullable<String> filingDate = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IS_DERIVATIVE = "isDerivative";
  private JsonNullable<Boolean> isDerivative = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_IS_DIRECT = "isDirect";
  private JsonNullable<Boolean> isDirect = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_TRADE_TYPE = "tradeType";
  private JsonNullable<String> tradeType = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FORM_TYPE = "formType";
  private JsonNullable<String> formType = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TRANSACTION_DATE = "transactionDate";
  private JsonNullable<String> transactionDate = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SHARES_OWNED = "sharesOwned";
  private JsonNullable<BigDecimal> sharesOwned = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_SEC_RULE10B51 = "secRule10b51";
  private JsonNullable<Boolean> secRule10b51 = JsonNullable.<Boolean>undefined();

  public InsiderTransactions() { 
  }

  public InsiderTransactions requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

   /**
   * Identifier that was used in the request.
   * @return requestId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "TSLA-US", value = "Identifier that was used in the request.")
  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRequestId() {
    return requestId;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }


  public InsiderTransactions fsymId(String fsymId) {
    this.fsymId = JsonNullable.<String>of(fsymId);
    return this;
  }

   /**
   * FactSet Security Identifier of Fund. Identifies the security level id of the Fund requested (not-representing the underlying holding). Six alpha-numeric characters, excluding vowels, with an -S suffix (XXXXXX-S). All equity and fixed income securities that exist on FactSet are allocated a security-level permanent identifier.
   * @return fsymId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Q2YN1N-R", value = "FactSet Security Identifier of Fund. Identifies the security level id of the Fund requested (not-representing the underlying holding). Six alpha-numeric characters, excluding vowels, with an -S suffix (XXXXXX-S). All equity and fixed income securities that exist on FactSet are allocated a security-level permanent identifier.")
  @JsonIgnore

  public String getFsymId() {
        return fsymId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFsymId_JsonNullable() {
    return fsymId;
  }
  
  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  public void setFsymId_JsonNullable(JsonNullable<String> fsymId) {
    this.fsymId = fsymId;
  }

  public void setFsymId(String fsymId) {
    this.fsymId = JsonNullable.<String>of(fsymId);
  }


  public InsiderTransactions currency(String currency) {
    this.currency = JsonNullable.<String>of(currency);
    return this;
  }

   /**
   * Currency code. The service will default to the funds local currency. For a list of currency ISO codes, visit [Online Assistant Page #1470](https://oa.apps.factset.com/pages/1470).
   * @return currency
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "USD", value = "Currency code. The service will default to the funds local currency. For a list of currency ISO codes, visit [Online Assistant Page #1470](https://oa.apps.factset.com/pages/1470).")
  @JsonIgnore

  public String getCurrency() {
        return currency.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCurrency_JsonNullable() {
    return currency;
  }
  
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  public void setCurrency_JsonNullable(JsonNullable<String> currency) {
    this.currency = currency;
  }

  public void setCurrency(String currency) {
    this.currency = JsonNullable.<String>of(currency);
  }


  public InsiderTransactions holderName(String holderName) {
    this.holderName = JsonNullable.<String>of(holderName);
    return this;
  }

   /**
   * Returns the names of the insiders involved in the transactions that occurred between the specified start and end dates.
   * @return holderName
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "DENHOLM ROBYN M", value = "Returns the names of the insiders involved in the transactions that occurred between the specified start and end dates.")
  @JsonIgnore

  public String getHolderName() {
        return holderName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HOLDER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getHolderName_JsonNullable() {
    return holderName;
  }
  
  @JsonProperty(JSON_PROPERTY_HOLDER_NAME)
  public void setHolderName_JsonNullable(JsonNullable<String> holderName) {
    this.holderName = holderName;
  }

  public void setHolderName(String holderName) {
    this.holderName = JsonNullable.<String>of(holderName);
  }


  public InsiderTransactions holderTitle(String holderTitle) {
    this.holderTitle = JsonNullable.<String>of(holderTitle);
    return this;
  }

   /**
   * Returns the titles of the insiders involved in the transactions that occurred between the specified start and end dates.
   * @return holderTitle
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Director", value = "Returns the titles of the insiders involved in the transactions that occurred between the specified start and end dates.")
  @JsonIgnore

  public String getHolderTitle() {
        return holderTitle.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HOLDER_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getHolderTitle_JsonNullable() {
    return holderTitle;
  }
  
  @JsonProperty(JSON_PROPERTY_HOLDER_TITLE)
  public void setHolderTitle_JsonNullable(JsonNullable<String> holderTitle) {
    this.holderTitle = holderTitle;
  }

  public void setHolderTitle(String holderTitle) {
    this.holderTitle = JsonNullable.<String>of(holderTitle);
  }


  public InsiderTransactions holderId(String holderId) {
    this.holderId = JsonNullable.<String>of(holderId);
    return this;
  }

   /**
   * Returns the holder IDs for the insiders involved in the transactions that occurred between the specified start and end dates.
   * @return holderId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "S155166", value = "Returns the holder IDs for the insiders involved in the transactions that occurred between the specified start and end dates.")
  @JsonIgnore

  public String getHolderId() {
        return holderId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HOLDER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getHolderId_JsonNullable() {
    return holderId;
  }
  
  @JsonProperty(JSON_PROPERTY_HOLDER_ID)
  public void setHolderId_JsonNullable(JsonNullable<String> holderId) {
    this.holderId = holderId;
  }

  public void setHolderId(String holderId) {
    this.holderId = JsonNullable.<String>of(holderId);
  }


  public InsiderTransactions shares(BigDecimal shares) {
    this.shares = JsonNullable.<BigDecimal>of(shares);
    return this;
  }

   /**
   * Returns the transaction shares for the transactions that occurred between the specified start and end dates.
   * @return shares
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "-1900", value = "Returns the transaction shares for the transactions that occurred between the specified start and end dates.")
  @JsonIgnore

  public BigDecimal getShares() {
        return shares.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SHARES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getShares_JsonNullable() {
    return shares;
  }
  
  @JsonProperty(JSON_PROPERTY_SHARES)
  public void setShares_JsonNullable(JsonNullable<BigDecimal> shares) {
    this.shares = shares;
  }

  public void setShares(BigDecimal shares) {
    this.shares = JsonNullable.<BigDecimal>of(shares);
  }


  public InsiderTransactions price(Double price) {
    this.price = JsonNullable.<Double>of(price);
    return this;
  }

   /**
   * Returns the transaction prices for the transactions that occurred between the specified start and end dates.
   * @return price
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "320.12", value = "Returns the transaction prices for the transactions that occurred between the specified start and end dates.")
  @JsonIgnore

  public Double getPrice() {
        return price.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getPrice_JsonNullable() {
    return price;
  }
  
  @JsonProperty(JSON_PROPERTY_PRICE)
  public void setPrice_JsonNullable(JsonNullable<Double> price) {
    this.price = price;
  }

  public void setPrice(Double price) {
    this.price = JsonNullable.<Double>of(price);
  }


  public InsiderTransactions netValueChange(Double netValueChange) {
    this.netValueChange = JsonNullable.<Double>of(netValueChange);
    return this;
  }

   /**
   * Returns the transaction values for the transactions that occurred between the specified start and end dates.
   * @return netValueChange
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "60800.34", value = "Returns the transaction values for the transactions that occurred between the specified start and end dates.")
  @JsonIgnore

  public Double getNetValueChange() {
        return netValueChange.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NET_VALUE_CHANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getNetValueChange_JsonNullable() {
    return netValueChange;
  }
  
  @JsonProperty(JSON_PROPERTY_NET_VALUE_CHANGE)
  public void setNetValueChange_JsonNullable(JsonNullable<Double> netValueChange) {
    this.netValueChange = netValueChange;
  }

  public void setNetValueChange(Double netValueChange) {
    this.netValueChange = JsonNullable.<Double>of(netValueChange);
  }


  public InsiderTransactions filingDate(String filingDate) {
    this.filingDate = JsonNullable.<String>of(filingDate);
    return this;
  }

   /**
   * Returns the dates on which the transactions that occurred between the specified start and end dates were processed.
   * @return filingDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "2025-02-11", value = "Returns the dates on which the transactions that occurred between the specified start and end dates were processed.")
  @JsonIgnore

  public String getFilingDate() {
        return filingDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FILING_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFilingDate_JsonNullable() {
    return filingDate;
  }
  
  @JsonProperty(JSON_PROPERTY_FILING_DATE)
  public void setFilingDate_JsonNullable(JsonNullable<String> filingDate) {
    this.filingDate = filingDate;
  }

  public void setFilingDate(String filingDate) {
    this.filingDate = JsonNullable.<String>of(filingDate);
  }


  public InsiderTransactions isDerivative(Boolean isDerivative) {
    this.isDerivative = JsonNullable.<Boolean>of(isDerivative);
    return this;
  }

   /**
   * Returns a Derivative/Non-Derivative flag for the transactions that occurred between the specified start and end dates. Returns true for Derivative and false for Non-Derivative.
   * @return isDerivative
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "false", value = "Returns a Derivative/Non-Derivative flag for the transactions that occurred between the specified start and end dates. Returns true for Derivative and false for Non-Derivative.")
  @JsonIgnore

  public Boolean getIsDerivative() {
        return isDerivative.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IS_DERIVATIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getIsDerivative_JsonNullable() {
    return isDerivative;
  }
  
  @JsonProperty(JSON_PROPERTY_IS_DERIVATIVE)
  public void setIsDerivative_JsonNullable(JsonNullable<Boolean> isDerivative) {
    this.isDerivative = isDerivative;
  }

  public void setIsDerivative(Boolean isDerivative) {
    this.isDerivative = JsonNullable.<Boolean>of(isDerivative);
  }


  public InsiderTransactions isDirect(Boolean isDirect) {
    this.isDirect = JsonNullable.<Boolean>of(isDirect);
    return this;
  }

   /**
   * Returns a direct/indirect flag for the transactions that occurred between the specified start and end dates.
   * @return isDirect
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Returns a direct/indirect flag for the transactions that occurred between the specified start and end dates.")
  @JsonIgnore

  public Boolean getIsDirect() {
        return isDirect.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IS_DIRECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getIsDirect_JsonNullable() {
    return isDirect;
  }
  
  @JsonProperty(JSON_PROPERTY_IS_DIRECT)
  public void setIsDirect_JsonNullable(JsonNullable<Boolean> isDirect) {
    this.isDirect = isDirect;
  }

  public void setIsDirect(Boolean isDirect) {
    this.isDirect = JsonNullable.<Boolean>of(isDirect);
  }


  public InsiderTransactions tradeType(String tradeType) {
    this.tradeType = JsonNullable.<String>of(tradeType);
    return this;
  }

   /**
   * Returns an acquisition/disposition flag for the transactions that occurred between the specified start and end dates.
   * @return tradeType
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Disposition", value = "Returns an acquisition/disposition flag for the transactions that occurred between the specified start and end dates.")
  @JsonIgnore

  public String getTradeType() {
        return tradeType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TRADE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTradeType_JsonNullable() {
    return tradeType;
  }
  
  @JsonProperty(JSON_PROPERTY_TRADE_TYPE)
  public void setTradeType_JsonNullable(JsonNullable<String> tradeType) {
    this.tradeType = tradeType;
  }

  public void setTradeType(String tradeType) {
    this.tradeType = JsonNullable.<String>of(tradeType);
  }


  public InsiderTransactions formType(String formType) {
    this.formType = JsonNullable.<String>of(formType);
    return this;
  }

   /**
   * Returns the form types for the transactions that occurred between the specified start and end dates.
   * @return formType
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "4", value = "Returns the form types for the transactions that occurred between the specified start and end dates.")
  @JsonIgnore

  public String getFormType() {
        return formType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FORM_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFormType_JsonNullable() {
    return formType;
  }
  
  @JsonProperty(JSON_PROPERTY_FORM_TYPE)
  public void setFormType_JsonNullable(JsonNullable<String> formType) {
    this.formType = formType;
  }

  public void setFormType(String formType) {
    this.formType = JsonNullable.<String>of(formType);
  }


  public InsiderTransactions transactionDate(String transactionDate) {
    this.transactionDate = JsonNullable.<String>of(transactionDate);
    return this;
  }

   /**
   * Returns the transaction dates for the transactions that occurred between the specified start and end dates.
   * @return transactionDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "2024-11-15", value = "Returns the transaction dates for the transactions that occurred between the specified start and end dates.")
  @JsonIgnore

  public String getTransactionDate() {
        return transactionDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TRANSACTION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTransactionDate_JsonNullable() {
    return transactionDate;
  }
  
  @JsonProperty(JSON_PROPERTY_TRANSACTION_DATE)
  public void setTransactionDate_JsonNullable(JsonNullable<String> transactionDate) {
    this.transactionDate = transactionDate;
  }

  public void setTransactionDate(String transactionDate) {
    this.transactionDate = JsonNullable.<String>of(transactionDate);
  }


  public InsiderTransactions sharesOwned(BigDecimal sharesOwned) {
    this.sharesOwned = JsonNullable.<BigDecimal>of(sharesOwned);
    return this;
  }

   /**
   * Returns the shares owned data for the transactions that occurred between the specified start and end dates.
   * @return sharesOwned
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "85000.12", value = "Returns the shares owned data for the transactions that occurred between the specified start and end dates.")
  @JsonIgnore

  public BigDecimal getSharesOwned() {
        return sharesOwned.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SHARES_OWNED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getSharesOwned_JsonNullable() {
    return sharesOwned;
  }
  
  @JsonProperty(JSON_PROPERTY_SHARES_OWNED)
  public void setSharesOwned_JsonNullable(JsonNullable<BigDecimal> sharesOwned) {
    this.sharesOwned = sharesOwned;
  }

  public void setSharesOwned(BigDecimal sharesOwned) {
    this.sharesOwned = JsonNullable.<BigDecimal>of(sharesOwned);
  }


  public InsiderTransactions secRule10b51(Boolean secRule10b51) {
    this.secRule10b51 = JsonNullable.<Boolean>of(secRule10b51);
    return this;
  }

   /**
   * Returns rule 10b5-1 flags for the insiders involved in the transactions that occurred between the specified start and end dates.
   * @return secRule10b51
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Returns rule 10b5-1 flags for the insiders involved in the transactions that occurred between the specified start and end dates.")
  @JsonIgnore

  public Boolean getSecRule10b51() {
        return secRule10b51.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SEC_RULE10B51)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getSecRule10b51_JsonNullable() {
    return secRule10b51;
  }
  
  @JsonProperty(JSON_PROPERTY_SEC_RULE10B51)
  public void setSecRule10b51_JsonNullable(JsonNullable<Boolean> secRule10b51) {
    this.secRule10b51 = secRule10b51;
  }

  public void setSecRule10b51(Boolean secRule10b51) {
    this.secRule10b51 = JsonNullable.<Boolean>of(secRule10b51);
  }


  /**
   * Return true if this insiderTransactions object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InsiderTransactions insiderTransactions = (InsiderTransactions) o;
    return Objects.equals(this.requestId, insiderTransactions.requestId) &&
        equalsNullable(this.fsymId, insiderTransactions.fsymId) &&
        equalsNullable(this.currency, insiderTransactions.currency) &&
        equalsNullable(this.holderName, insiderTransactions.holderName) &&
        equalsNullable(this.holderTitle, insiderTransactions.holderTitle) &&
        equalsNullable(this.holderId, insiderTransactions.holderId) &&
        equalsNullable(this.shares, insiderTransactions.shares) &&
        equalsNullable(this.price, insiderTransactions.price) &&
        equalsNullable(this.netValueChange, insiderTransactions.netValueChange) &&
        equalsNullable(this.filingDate, insiderTransactions.filingDate) &&
        equalsNullable(this.isDerivative, insiderTransactions.isDerivative) &&
        equalsNullable(this.isDirect, insiderTransactions.isDirect) &&
        equalsNullable(this.tradeType, insiderTransactions.tradeType) &&
        equalsNullable(this.formType, insiderTransactions.formType) &&
        equalsNullable(this.transactionDate, insiderTransactions.transactionDate) &&
        equalsNullable(this.sharesOwned, insiderTransactions.sharesOwned) &&
        equalsNullable(this.secRule10b51, insiderTransactions.secRule10b51);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestId, hashCodeNullable(fsymId), hashCodeNullable(currency), hashCodeNullable(holderName), hashCodeNullable(holderTitle), hashCodeNullable(holderId), hashCodeNullable(shares), hashCodeNullable(price), hashCodeNullable(netValueChange), hashCodeNullable(filingDate), hashCodeNullable(isDerivative), hashCodeNullable(isDirect), hashCodeNullable(tradeType), hashCodeNullable(formType), hashCodeNullable(transactionDate), hashCodeNullable(sharesOwned), hashCodeNullable(secRule10b51));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InsiderTransactions {\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    fsymId: ").append(toIndentedString(fsymId)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    holderName: ").append(toIndentedString(holderName)).append("\n");
    sb.append("    holderTitle: ").append(toIndentedString(holderTitle)).append("\n");
    sb.append("    holderId: ").append(toIndentedString(holderId)).append("\n");
    sb.append("    shares: ").append(toIndentedString(shares)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    netValueChange: ").append(toIndentedString(netValueChange)).append("\n");
    sb.append("    filingDate: ").append(toIndentedString(filingDate)).append("\n");
    sb.append("    isDerivative: ").append(toIndentedString(isDerivative)).append("\n");
    sb.append("    isDirect: ").append(toIndentedString(isDirect)).append("\n");
    sb.append("    tradeType: ").append(toIndentedString(tradeType)).append("\n");
    sb.append("    formType: ").append(toIndentedString(formType)).append("\n");
    sb.append("    transactionDate: ").append(toIndentedString(transactionDate)).append("\n");
    sb.append("    sharesOwned: ").append(toIndentedString(sharesOwned)).append("\n");
    sb.append("    secRule10b51: ").append(toIndentedString(secRule10b51)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

