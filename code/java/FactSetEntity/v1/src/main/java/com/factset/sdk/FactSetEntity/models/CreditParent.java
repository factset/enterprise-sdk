/*
 * FactSet Entity API
 * Using an entity centric data model, FactSet's Entity API provides access to FactSet's complete security and entity level symbology, comprehensive entity reference data, and all of the necessary relationships and connections to create a foundation that tightly correlates disparate sources of information to a master entity identifier. Use this API to quickly understand the full entity structure and related securities.<p><b>Rate limit is set to 10 requests per second</b>.</p> 
 *
 * The version of the OpenAPI document: 1.5.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetEntity.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDate;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetEntity.JSON;


/**
 * CreditParent
 */
@JsonPropertyOrder({
  CreditParent.JSON_PROPERTY_FSYM_ID,
  CreditParent.JSON_PROPERTY_REQUEST_ID,
  CreditParent.JSON_PROPERTY_ENTITY_PROPER_NAME,
  CreditParent.JSON_PROPERTY_FACTSET_CREDIT_PARENT_ID,
  CreditParent.JSON_PROPERTY_AS_OF_DATE,
  CreditParent.JSON_PROPERTY_EFFECTIVE_START_DATE,
  CreditParent.JSON_PROPERTY_EFFECTIVE_END_DATE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class CreditParent implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_FSYM_ID = "fsymId";
  private JsonNullable<String> fsymId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_REQUEST_ID = "requestId";
  private String requestId;

  public static final String JSON_PROPERTY_ENTITY_PROPER_NAME = "entityProperName";
  private JsonNullable<String> entityProperName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FACTSET_CREDIT_PARENT_ID = "factsetCreditParentId";
  private JsonNullable<String> factsetCreditParentId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_AS_OF_DATE = "asOfDate";
  private JsonNullable<LocalDate> asOfDate = JsonNullable.<LocalDate>undefined();

  public static final String JSON_PROPERTY_EFFECTIVE_START_DATE = "effectiveStartDate";
  private JsonNullable<LocalDate> effectiveStartDate = JsonNullable.<LocalDate>undefined();

  public static final String JSON_PROPERTY_EFFECTIVE_END_DATE = "effectiveEndDate";
  private JsonNullable<LocalDate> effectiveEndDate = JsonNullable.<LocalDate>undefined();

  public CreditParent() { 
  }

  public CreditParent fsymId(String fsymId) {
    this.fsymId = JsonNullable.<String>of(fsymId);
    return this;
  }

   /**
   * Unique FactSet-generated identifier representing an entity for the current entity identifier (-E)
   * @return fsymId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "0028BD-E", value = "Unique FactSet-generated identifier representing an entity for the current entity identifier (-E)")
  @JsonIgnore

  public String getFsymId() {
        return fsymId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFsymId_JsonNullable() {
    return fsymId;
  }
  
  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  public void setFsymId_JsonNullable(JsonNullable<String> fsymId) {
    this.fsymId = fsymId;
  }

  public void setFsymId(String fsymId) {
    this.fsymId = JsonNullable.<String>of(fsymId);
  }


  public CreditParent requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

   /**
   * Identifier used in &#x60;ids&#x60;.
   * @return requestId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "CYQYNL-S", value = "Identifier used in `ids`.")
  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRequestId() {
    return requestId;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }


  public CreditParent entityProperName(String entityProperName) {
    this.entityProperName = JsonNullable.<String>of(entityProperName);
    return this;
  }

   /**
   * The proper name for the credit parent entity.
   * @return entityProperName
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "BNP Paribas S.A. Class A", value = "The proper name for the credit parent entity.")
  @JsonIgnore

  public String getEntityProperName() {
        return entityProperName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_PROPER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEntityProperName_JsonNullable() {
    return entityProperName;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_PROPER_NAME)
  public void setEntityProperName_JsonNullable(JsonNullable<String> entityProperName) {
    this.entityProperName = entityProperName;
  }

  public void setEntityProperName(String entityProperName) {
    this.entityProperName = JsonNullable.<String>of(entityProperName);
  }


  public CreditParent factsetCreditParentId(String factsetCreditParentId) {
    this.factsetCreditParentId = JsonNullable.<String>of(factsetCreditParentId);
    return this;
  }

   /**
   * This id represents the credit parent entity id.
   * @return factsetCreditParentId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "0028BD-E", value = "This id represents the credit parent entity id.")
  @JsonIgnore

  public String getFactsetCreditParentId() {
        return factsetCreditParentId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FACTSET_CREDIT_PARENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFactsetCreditParentId_JsonNullable() {
    return factsetCreditParentId;
  }
  
  @JsonProperty(JSON_PROPERTY_FACTSET_CREDIT_PARENT_ID)
  public void setFactsetCreditParentId_JsonNullable(JsonNullable<String> factsetCreditParentId) {
    this.factsetCreditParentId = factsetCreditParentId;
  }

  public void setFactsetCreditParentId(String factsetCreditParentId) {
    this.factsetCreditParentId = JsonNullable.<String>of(factsetCreditParentId);
  }


  public CreditParent asOfDate(LocalDate asOfDate) {
    this.asOfDate = JsonNullable.<LocalDate>of(asOfDate);
    return this;
  }

   /**
   * The effective date of this record in YYYY-MM-DD format. If an asOfDate is not specified in the request, this field will be null in the response.
   * @return asOfDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Wed Jan 01 00:00:00 UTC 2020", value = "The effective date of this record in YYYY-MM-DD format. If an asOfDate is not specified in the request, this field will be null in the response.")
  @JsonIgnore

  public LocalDate getAsOfDate() {
        return asOfDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AS_OF_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LocalDate> getAsOfDate_JsonNullable() {
    return asOfDate;
  }
  
  @JsonProperty(JSON_PROPERTY_AS_OF_DATE)
  public void setAsOfDate_JsonNullable(JsonNullable<LocalDate> asOfDate) {
    this.asOfDate = asOfDate;
  }

  public void setAsOfDate(LocalDate asOfDate) {
    this.asOfDate = JsonNullable.<LocalDate>of(asOfDate);
  }


  public CreditParent effectiveStartDate(LocalDate effectiveStartDate) {
    this.effectiveStartDate = JsonNullable.<LocalDate>of(effectiveStartDate);
    return this;
  }

   /**
   * The initial effective date of this record in YYYY-MM-DD format.
   * @return effectiveStartDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Tue May 28 00:00:00 UTC 1996", value = "The initial effective date of this record in YYYY-MM-DD format.")
  @JsonIgnore

  public LocalDate getEffectiveStartDate() {
        return effectiveStartDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EFFECTIVE_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LocalDate> getEffectiveStartDate_JsonNullable() {
    return effectiveStartDate;
  }
  
  @JsonProperty(JSON_PROPERTY_EFFECTIVE_START_DATE)
  public void setEffectiveStartDate_JsonNullable(JsonNullable<LocalDate> effectiveStartDate) {
    this.effectiveStartDate = effectiveStartDate;
  }

  public void setEffectiveStartDate(LocalDate effectiveStartDate) {
    this.effectiveStartDate = JsonNullable.<LocalDate>of(effectiveStartDate);
  }


  public CreditParent effectiveEndDate(LocalDate effectiveEndDate) {
    this.effectiveEndDate = JsonNullable.<LocalDate>of(effectiveEndDate);
    return this;
  }

   /**
   * The last day on which this record is effective date in YYYY-MM-DD format.
   * @return effectiveEndDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Mon May 28 00:00:00 UTC 2001", value = "The last day on which this record is effective date in YYYY-MM-DD format.")
  @JsonIgnore

  public LocalDate getEffectiveEndDate() {
        return effectiveEndDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EFFECTIVE_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LocalDate> getEffectiveEndDate_JsonNullable() {
    return effectiveEndDate;
  }
  
  @JsonProperty(JSON_PROPERTY_EFFECTIVE_END_DATE)
  public void setEffectiveEndDate_JsonNullable(JsonNullable<LocalDate> effectiveEndDate) {
    this.effectiveEndDate = effectiveEndDate;
  }

  public void setEffectiveEndDate(LocalDate effectiveEndDate) {
    this.effectiveEndDate = JsonNullable.<LocalDate>of(effectiveEndDate);
  }


  /**
   * Return true if this creditParent object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreditParent creditParent = (CreditParent) o;
    return equalsNullable(this.fsymId, creditParent.fsymId) &&
        Objects.equals(this.requestId, creditParent.requestId) &&
        equalsNullable(this.entityProperName, creditParent.entityProperName) &&
        equalsNullable(this.factsetCreditParentId, creditParent.factsetCreditParentId) &&
        equalsNullable(this.asOfDate, creditParent.asOfDate) &&
        equalsNullable(this.effectiveStartDate, creditParent.effectiveStartDate) &&
        equalsNullable(this.effectiveEndDate, creditParent.effectiveEndDate);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(fsymId), requestId, hashCodeNullable(entityProperName), hashCodeNullable(factsetCreditParentId), hashCodeNullable(asOfDate), hashCodeNullable(effectiveStartDate), hashCodeNullable(effectiveEndDate));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreditParent {\n");
    sb.append("    fsymId: ").append(toIndentedString(fsymId)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    entityProperName: ").append(toIndentedString(entityProperName)).append("\n");
    sb.append("    factsetCreditParentId: ").append(toIndentedString(factsetCreditParentId)).append("\n");
    sb.append("    asOfDate: ").append(toIndentedString(asOfDate)).append("\n");
    sb.append("    effectiveStartDate: ").append(toIndentedString(effectiveStartDate)).append("\n");
    sb.append("    effectiveEndDate: ").append(toIndentedString(effectiveEndDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

