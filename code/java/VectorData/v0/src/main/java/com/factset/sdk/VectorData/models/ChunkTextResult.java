/*
 * Vector Data API
 * The Vector Data API provides streamlined access to vector data through its defined endpoints. It supports functionalities such as: Retrieving detailed vector data based on user-defined parameters. Efficiently processing associated text data for enhanced performance. This API is designed to enable developers to integrate vector data into their applications, ensuring flexibility and performance while leveraging the specified endpoint functionalities.
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.VectorData.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDate;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.VectorData.JSON;


/**
 * Contains content and link for a single vector ID.
 */
@ApiModel(description = "Contains content and link for a single vector ID.")
@JsonPropertyOrder({
  ChunkTextResult.JSON_PROPERTY_CONTENT,
  ChunkTextResult.JSON_PROPERTY_STORY_LINK,
  ChunkTextResult.JSON_PROPERTY_STORY_DATE,
  ChunkTextResult.JSON_PROPERTY_THEMES,
  ChunkTextResult.JSON_PROPERTY_DOCUMENT_TYPE,
  ChunkTextResult.JSON_PROPERTY_SOURCE,
  ChunkTextResult.JSON_PROPERTY_DOCUMENT_I_D,
  ChunkTextResult.JSON_PROPERTY_IDS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class ChunkTextResult implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_CONTENT = "content";
  private String content;

  public static final String JSON_PROPERTY_STORY_LINK = "storyLink";
  private String storyLink;

  public static final String JSON_PROPERTY_STORY_DATE = "storyDate";
  private LocalDate storyDate;

  public static final String JSON_PROPERTY_THEMES = "themes";
  private String themes;

  public static final String JSON_PROPERTY_DOCUMENT_TYPE = "documentType";
  private String documentType;

  public static final String JSON_PROPERTY_SOURCE = "source";
  private String source;

  public static final String JSON_PROPERTY_DOCUMENT_I_D = "documentID";
  private String documentID;

  public static final String JSON_PROPERTY_IDS = "ids";
  private java.util.List<String> ids = null;

  public ChunkTextResult() { 
  }

  public ChunkTextResult content(String content) {
    this.content = content;
    return this;
  }

   /**
   * Unique identifier for a document.
   * @return content
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Unique identifier for a document.")
  @JsonProperty(JSON_PROPERTY_CONTENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContent() {
    return content;
  }


  @JsonProperty(JSON_PROPERTY_CONTENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContent(String content) {
    this.content = content;
  }


  public ChunkTextResult storyLink(String storyLink) {
    this.storyLink = storyLink;
    return this;
  }

   /**
   * A secure HTTPS link for downloading the associated document.
   * @return storyLink
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "A secure HTTPS link for downloading the associated document.")
  @JsonProperty(JSON_PROPERTY_STORY_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStoryLink() {
    return storyLink;
  }


  @JsonProperty(JSON_PROPERTY_STORY_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStoryLink(String storyLink) {
    this.storyLink = storyLink;
  }


  public ChunkTextResult storyDate(LocalDate storyDate) {
    this.storyDate = storyDate;
    return this;
  }

   /**
   * Date associated with the story.
   * @return storyDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Thu Oct 01 00:00:00 UTC 2020", value = "Date associated with the story.")
  @JsonProperty(JSON_PROPERTY_STORY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getStoryDate() {
    return storyDate;
  }


  @JsonProperty(JSON_PROPERTY_STORY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStoryDate(LocalDate storyDate) {
    this.storyDate = storyDate;
  }


  public ChunkTextResult themes(String themes) {
    this.themes = themes;
    return this;
  }

   /**
   * Theme of the document.
   * @return themes
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "doc", value = "Theme of the document.")
  @JsonProperty(JSON_PROPERTY_THEMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getThemes() {
    return themes;
  }


  @JsonProperty(JSON_PROPERTY_THEMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setThemes(String themes) {
    this.themes = themes;
  }


  public ChunkTextResult documentType(String documentType) {
    this.documentType = documentType;
    return this;
  }

   /**
   * Type of the document.
   * @return documentType
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Type of the document.")
  @JsonProperty(JSON_PROPERTY_DOCUMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDocumentType() {
    return documentType;
  }


  @JsonProperty(JSON_PROPERTY_DOCUMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDocumentType(String documentType) {
    this.documentType = documentType;
  }


  public ChunkTextResult source(String source) {
    this.source = source;
    return this;
  }

   /**
   * Name of the source
   * @return source
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "EDG", value = "Name of the source")
  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSource() {
    return source;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSource(String source) {
    this.source = source;
  }


  public ChunkTextResult documentID(String documentID) {
    this.documentID = documentID;
    return this;
  }

   /**
   * Unique identifier for a document.
   * @return documentID
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "20230307-5b36f2cf", value = "Unique identifier for a document.")
  @JsonProperty(JSON_PROPERTY_DOCUMENT_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDocumentID() {
    return documentID;
  }


  @JsonProperty(JSON_PROPERTY_DOCUMENT_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDocumentID(String documentID) {
    this.documentID = documentID;
  }


  public ChunkTextResult ids(java.util.List<String> ids) {
    this.ids = ids;
    return this;
  }

  public ChunkTextResult addIdsItem(String idsItem) {
    if (this.ids == null) {
      this.ids = new java.util.ArrayList<>();
    }
    this.ids.add(idsItem);
    return this;
  }

   /**
   * List of related IDs.
   * @return ids
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "List of related IDs.")
  @JsonProperty(JSON_PROPERTY_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<String> getIds() {
    return ids;
  }


  @JsonProperty(JSON_PROPERTY_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIds(java.util.List<String> ids) {
    this.ids = ids;
  }


  /**
   * Return true if this ChunkTextResult object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChunkTextResult chunkTextResult = (ChunkTextResult) o;
    return Objects.equals(this.content, chunkTextResult.content) &&
        Objects.equals(this.storyLink, chunkTextResult.storyLink) &&
        Objects.equals(this.storyDate, chunkTextResult.storyDate) &&
        Objects.equals(this.themes, chunkTextResult.themes) &&
        Objects.equals(this.documentType, chunkTextResult.documentType) &&
        Objects.equals(this.source, chunkTextResult.source) &&
        Objects.equals(this.documentID, chunkTextResult.documentID) &&
        Objects.equals(this.ids, chunkTextResult.ids);
  }

  @Override
  public int hashCode() {
    return Objects.hash(content, storyLink, storyDate, themes, documentType, source, documentID, ids);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChunkTextResult {\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    storyLink: ").append(toIndentedString(storyLink)).append("\n");
    sb.append("    storyDate: ").append(toIndentedString(storyDate)).append("\n");
    sb.append("    themes: ").append(toIndentedString(themes)).append("\n");
    sb.append("    documentType: ").append(toIndentedString(documentType)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    documentID: ").append(toIndentedString(documentID)).append("\n");
    sb.append("    ids: ").append(toIndentedString(ids)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

