/*
 * Publisher API
 * Allow clients to fetch Publisher Analytics through APIs.
 *
 * The version of the OpenAPI document: 2
 * Contact: analytics.api.support@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.Publisher.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.Publisher.models.VaultDateParameters;
import com.factset.sdk.Publisher.models.VaultIdentifier;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.Publisher.JSON;


/**
 * VaultCalculationParameters
 */
@JsonPropertyOrder({
  VaultCalculationParameters.JSON_PROPERTY_COMPONENTID,
  VaultCalculationParameters.JSON_PROPERTY_ACCOUNT,
  VaultCalculationParameters.JSON_PROPERTY_DATES,
  VaultCalculationParameters.JSON_PROPERTY_CONFIGID,
  VaultCalculationParameters.JSON_PROPERTY_COMPONENTDETAIL
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class VaultCalculationParameters implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_COMPONENTID = "componentid";
  private String componentid;

  public static final String JSON_PROPERTY_ACCOUNT = "account";
  private VaultIdentifier account;

  public static final String JSON_PROPERTY_DATES = "dates";
  private VaultDateParameters dates;

  public static final String JSON_PROPERTY_CONFIGID = "configid";
  private String configid;

  public static final String JSON_PROPERTY_COMPONENTDETAIL = "componentdetail";
  private String componentdetail;

  public VaultCalculationParameters() { 
  }

  @JsonCreator
  public VaultCalculationParameters(
    @JsonProperty(value=JSON_PROPERTY_COMPONENTID, required=true) String componentid, 
    @JsonProperty(value=JSON_PROPERTY_ACCOUNT, required=true) VaultIdentifier account, 
    @JsonProperty(value=JSON_PROPERTY_CONFIGID, required=true) String configid
  ) {
    this();
    this.componentid = componentid;
    this.account = account;
    this.configid = configid;
  }

  public VaultCalculationParameters componentid(String componentid) {
    this.componentid = componentid;
    return this;
  }

   /**
   * The Vault component identifier to analyze.
   * @return componentid
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The Vault component identifier to analyze.")
  @JsonProperty(JSON_PROPERTY_COMPONENTID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getComponentid() {
    return componentid;
  }


  @JsonProperty(JSON_PROPERTY_COMPONENTID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setComponentid(String componentid) {
    this.componentid = componentid;
  }


  public VaultCalculationParameters account(VaultIdentifier account) {
    this.account = account;
    return this;
  }

   /**
   * Get account
   * @return account
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public VaultIdentifier getAccount() {
    return account;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAccount(VaultIdentifier account) {
    this.account = account;
  }


  public VaultCalculationParameters dates(VaultDateParameters dates) {
    this.dates = dates;
    return this;
  }

   /**
   * Get dates
   * @return dates
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DATES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VaultDateParameters getDates() {
    return dates;
  }


  @JsonProperty(JSON_PROPERTY_DATES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDates(VaultDateParameters dates) {
    this.dates = dates;
  }


  public VaultCalculationParameters configid(String configid) {
    this.configid = configid;
    return this;
  }

   /**
   * Vault Configuration identifier.
   * @return configid
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Vault Configuration identifier.")
  @JsonProperty(JSON_PROPERTY_CONFIGID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getConfigid() {
    return configid;
  }


  @JsonProperty(JSON_PROPERTY_CONFIGID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConfigid(String configid) {
    this.configid = configid;
  }


  public VaultCalculationParameters componentdetail(String componentdetail) {
    this.componentdetail = componentdetail;
    return this;
  }

   /**
   * Component detail type for the Vault component. It can be GROUPS or TOTALS.
   * @return componentdetail
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Component detail type for the Vault component. It can be GROUPS or TOTALS.")
  @JsonProperty(JSON_PROPERTY_COMPONENTDETAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getComponentdetail() {
    return componentdetail;
  }


  @JsonProperty(JSON_PROPERTY_COMPONENTDETAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setComponentdetail(String componentdetail) {
    this.componentdetail = componentdetail;
  }


  /**
   * Return true if this VaultCalculationParameters object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VaultCalculationParameters vaultCalculationParameters = (VaultCalculationParameters) o;
    return Objects.equals(this.componentid, vaultCalculationParameters.componentid) &&
        Objects.equals(this.account, vaultCalculationParameters.account) &&
        Objects.equals(this.dates, vaultCalculationParameters.dates) &&
        Objects.equals(this.configid, vaultCalculationParameters.configid) &&
        Objects.equals(this.componentdetail, vaultCalculationParameters.componentdetail);
  }

  @Override
  public int hashCode() {
    return Objects.hash(componentid, account, dates, configid, componentdetail);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VaultCalculationParameters {\n");
    sb.append("    componentid: ").append(toIndentedString(componentid)).append("\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    dates: ").append(toIndentedString(dates)).append("\n");
    sb.append("    configid: ").append(toIndentedString(configid)).append("\n");
    sb.append("    componentdetail: ").append(toIndentedString(componentdetail)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

