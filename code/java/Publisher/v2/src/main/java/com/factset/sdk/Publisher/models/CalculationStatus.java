/*
 * Publisher API
 * Allow clients to fetch Publisher Analytics through APIs.
 *
 * The version of the OpenAPI document: 2
 * Contact: analytics.api.support@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.Publisher.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.Publisher.models.CalculationUnitStatus;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.Publisher.JSON;


/**
 * CalculationStatus
 */
@JsonPropertyOrder({
  CalculationStatus.JSON_PROPERTY_STATUS,
  CalculationStatus.JSON_PROPERTY_UNITS,
  CalculationStatus.JSON_PROPERTY_PA,
  CalculationStatus.JSON_PROPERTY_SPAR,
  CalculationStatus.JSON_PROPERTY_VAULT,
  CalculationStatus.JSON_PROPERTY_PUB
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class CalculationStatus implements Serializable {
  private static final long serialVersionUID = 1L;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    QUEUED("Queued"),
    
    EXECUTING("Executing"),
    
    COMPLETED("Completed"),
    
    CANCELLED("Cancelled");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public static final String JSON_PROPERTY_UNITS = "units";
  private Integer units;

  public static final String JSON_PROPERTY_PA = "pa";
  private java.util.Map<String, CalculationUnitStatus> pa = null;

  public static final String JSON_PROPERTY_SPAR = "spar";
  private java.util.Map<String, CalculationUnitStatus> spar = null;

  public static final String JSON_PROPERTY_VAULT = "vault";
  private java.util.Map<String, CalculationUnitStatus> vault = null;

  public static final String JSON_PROPERTY_PUB = "pub";
  private java.util.Map<String, CalculationUnitStatus> pub = null;

  public CalculationStatus() { 
  }

  public CalculationStatus status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public CalculationStatus units(Integer units) {
    this.units = units;
    return this;
  }

   /**
   * Number of calculation units in batch.
   * @return units
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Number of calculation units in batch.")
  @JsonProperty(JSON_PROPERTY_UNITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getUnits() {
    return units;
  }


  @JsonProperty(JSON_PROPERTY_UNITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnits(Integer units) {
    this.units = units;
  }


  public CalculationStatus pa(java.util.Map<String, CalculationUnitStatus> pa) {
    this.pa = pa;
    return this;
  }

  public CalculationStatus putPaItem(String key, CalculationUnitStatus paItem) {
    if (this.pa == null) {
      this.pa = new java.util.HashMap<>();
    }
    this.pa.put(key, paItem);
    return this;
  }

   /**
   * List of statuses for PA calculation units.
   * @return pa
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "List of statuses for PA calculation units.")
  @JsonProperty(JSON_PROPERTY_PA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.Map<String, CalculationUnitStatus> getPa() {
    return pa;
  }


  @JsonProperty(JSON_PROPERTY_PA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPa(java.util.Map<String, CalculationUnitStatus> pa) {
    this.pa = pa;
  }


  public CalculationStatus spar(java.util.Map<String, CalculationUnitStatus> spar) {
    this.spar = spar;
    return this;
  }

  public CalculationStatus putSparItem(String key, CalculationUnitStatus sparItem) {
    if (this.spar == null) {
      this.spar = new java.util.HashMap<>();
    }
    this.spar.put(key, sparItem);
    return this;
  }

   /**
   * List of statuses for SPAR calculation units.
   * @return spar
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "List of statuses for SPAR calculation units.")
  @JsonProperty(JSON_PROPERTY_SPAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.Map<String, CalculationUnitStatus> getSpar() {
    return spar;
  }


  @JsonProperty(JSON_PROPERTY_SPAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSpar(java.util.Map<String, CalculationUnitStatus> spar) {
    this.spar = spar;
  }


  public CalculationStatus vault(java.util.Map<String, CalculationUnitStatus> vault) {
    this.vault = vault;
    return this;
  }

  public CalculationStatus putVaultItem(String key, CalculationUnitStatus vaultItem) {
    if (this.vault == null) {
      this.vault = new java.util.HashMap<>();
    }
    this.vault.put(key, vaultItem);
    return this;
  }

   /**
   * List of statuses for Vault calculation units.
   * @return vault
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "List of statuses for Vault calculation units.")
  @JsonProperty(JSON_PROPERTY_VAULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.Map<String, CalculationUnitStatus> getVault() {
    return vault;
  }


  @JsonProperty(JSON_PROPERTY_VAULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVault(java.util.Map<String, CalculationUnitStatus> vault) {
    this.vault = vault;
  }


  public CalculationStatus pub(java.util.Map<String, CalculationUnitStatus> pub) {
    this.pub = pub;
    return this;
  }

  public CalculationStatus putPubItem(String key, CalculationUnitStatus pubItem) {
    if (this.pub == null) {
      this.pub = new java.util.HashMap<>();
    }
    this.pub.put(key, pubItem);
    return this;
  }

   /**
   * List of statuses for Publisher calculation units.
   * @return pub
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "List of statuses for Publisher calculation units.")
  @JsonProperty(JSON_PROPERTY_PUB)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.Map<String, CalculationUnitStatus> getPub() {
    return pub;
  }


  @JsonProperty(JSON_PROPERTY_PUB)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPub(java.util.Map<String, CalculationUnitStatus> pub) {
    this.pub = pub;
  }


  /**
   * Return true if this CalculationStatus object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CalculationStatus calculationStatus = (CalculationStatus) o;
    return Objects.equals(this.status, calculationStatus.status) &&
        Objects.equals(this.units, calculationStatus.units) &&
        Objects.equals(this.pa, calculationStatus.pa) &&
        Objects.equals(this.spar, calculationStatus.spar) &&
        Objects.equals(this.vault, calculationStatus.vault) &&
        Objects.equals(this.pub, calculationStatus.pub);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, units, pa, spar, vault, pub);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CalculationStatus {\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    units: ").append(toIndentedString(units)).append("\n");
    sb.append("    pa: ").append(toIndentedString(pa)).append("\n");
    sb.append("    spar: ").append(toIndentedString(spar)).append("\n");
    sb.append("    vault: ").append(toIndentedString(vault)).append("\n");
    sb.append("    pub: ").append(toIndentedString(pub)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

