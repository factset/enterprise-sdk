/*
 * News API
 *  The FactSet News API provides access to FactSetâ€™s news alongside business logic that allows users to replicate views and functionality consistent with the experience provided by the Workstation. This API provides the ability to create views and pull news headlines based on specific filters. There are the filters available for News:  * Watchlists/Indices/Tickers * Sources * Company Filters * Market Topics * Countries * Regions      
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetNews.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.FactSetNews.models.HeadlinesRequestByViewDataSearchTime;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetNews.JSON;


/**
 * HeadlinesRequestByViewData
 */
@JsonPropertyOrder({
  HeadlinesRequestByViewData.JSON_PROPERTY_NAME,
  HeadlinesRequestByViewData.JSON_PROPERTY_PREDEFINED_RANGE,
  HeadlinesRequestByViewData.JSON_PROPERTY_SEARCH_TIME
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class HeadlinesRequestByViewData implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  /**
   * See list of valid date ranges. Date range is mutually exlusive to start/end time.
   */
  public enum PredefinedRangeEnum {
    TODAY("today"),
    
    TWODAYS("twoDays"),
    
    ONEWEEK("oneWeek"),
    
    ONEMONTH("oneMonth"),
    
    THREEMONTHS("threeMonths"),
    
    SIXMONTHS("sixMonths"),
    
    ONEYEAR("oneYear"),
    
    THREEYEARS("threeYears"),
    
    FIVEYEARS("fiveYears"),
    
    TENYEARS("tenYears"),
    
    ALLAVAILABLE("allAvailable");

    private String value;

    PredefinedRangeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PredefinedRangeEnum fromValue(String value) {
      for (PredefinedRangeEnum b : PredefinedRangeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PREDEFINED_RANGE = "predefinedRange";
  private PredefinedRangeEnum predefinedRange;

  public static final String JSON_PROPERTY_SEARCH_TIME = "searchTime";
  private HeadlinesRequestByViewDataSearchTime searchTime;

  public HeadlinesRequestByViewData() { 
  }

  public HeadlinesRequestByViewData name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the view to return headlines for.
   * @return name
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "FactSet News View", value = "Name of the view to return headlines for.")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public HeadlinesRequestByViewData predefinedRange(PredefinedRangeEnum predefinedRange) {
    this.predefinedRange = predefinedRange;
    return this;
  }

   /**
   * See list of valid date ranges. Date range is mutually exlusive to start/end time.
   * @return predefinedRange
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "See list of valid date ranges. Date range is mutually exlusive to start/end time.")
  @JsonProperty(JSON_PROPERTY_PREDEFINED_RANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PredefinedRangeEnum getPredefinedRange() {
    return predefinedRange;
  }


  @JsonProperty(JSON_PROPERTY_PREDEFINED_RANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPredefinedRange(PredefinedRangeEnum predefinedRange) {
    this.predefinedRange = predefinedRange;
  }


  public HeadlinesRequestByViewData searchTime(HeadlinesRequestByViewDataSearchTime searchTime) {
    this.searchTime = searchTime;
    return this;
  }

   /**
   * Get searchTime
   * @return searchTime
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SEARCH_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public HeadlinesRequestByViewDataSearchTime getSearchTime() {
    return searchTime;
  }


  @JsonProperty(JSON_PROPERTY_SEARCH_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSearchTime(HeadlinesRequestByViewDataSearchTime searchTime) {
    this.searchTime = searchTime;
  }


  /**
   * Return true if this HeadlinesRequestByView_data object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HeadlinesRequestByViewData headlinesRequestByViewData = (HeadlinesRequestByViewData) o;
    return Objects.equals(this.name, headlinesRequestByViewData.name) &&
        Objects.equals(this.predefinedRange, headlinesRequestByViewData.predefinedRange) &&
        Objects.equals(this.searchTime, headlinesRequestByViewData.searchTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, predefinedRange, searchTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HeadlinesRequestByViewData {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    predefinedRange: ").append(toIndentedString(predefinedRange)).append("\n");
    sb.append("    searchTime: ").append(toIndentedString(searchTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

