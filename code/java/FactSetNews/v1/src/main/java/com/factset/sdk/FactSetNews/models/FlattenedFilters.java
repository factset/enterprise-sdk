/*
 * News API
 *  The FactSet News API provides access to FactSetâ€™s news alongside business logic that allows users to replicate views and functionality consistent with the experience provided by the Workstation. This API provides the ability to create views and pull news headlines based on specific filters. There are the filters available for News:  * Watchlists/Indices/Tickers * Sources * Company Filters * Market Topics * Countries * Regions      
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetNews.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.FactSetNews.models.FlattenedFiltersCategoriesObject;
import com.factset.sdk.FactSetNews.models.FlattenedFiltersCountriesObject;
import com.factset.sdk.FactSetNews.models.FlattenedFiltersRegionsObject;
import com.factset.sdk.FactSetNews.models.FlattenedFiltersSourcesObject;
import com.factset.sdk.FactSetNews.models.FlattenedFiltersTopicsObject;
import com.factset.sdk.FactSetNews.models.FlattenedFiltersWatchlistsObject;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetNews.JSON;


/**
 * Flattened Filters Object
 */
@ApiModel(description = "Flattened Filters Object")
@JsonPropertyOrder({
  FlattenedFilters.JSON_PROPERTY_SOURCES,
  FlattenedFilters.JSON_PROPERTY_CATEGORIES,
  FlattenedFilters.JSON_PROPERTY_TOPICS,
  FlattenedFilters.JSON_PROPERTY_REGIONS,
  FlattenedFilters.JSON_PROPERTY_COUNTRIES,
  FlattenedFilters.JSON_PROPERTY_WATCHLISTS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class FlattenedFilters implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_SOURCES = "sources";
  private java.util.List<FlattenedFiltersSourcesObject> sources = null;

  public static final String JSON_PROPERTY_CATEGORIES = "categories";
  private java.util.List<FlattenedFiltersCategoriesObject> categories = null;

  public static final String JSON_PROPERTY_TOPICS = "topics";
  private java.util.List<FlattenedFiltersTopicsObject> topics = null;

  public static final String JSON_PROPERTY_REGIONS = "regions";
  private java.util.List<FlattenedFiltersRegionsObject> regions = null;

  public static final String JSON_PROPERTY_COUNTRIES = "countries";
  private java.util.List<FlattenedFiltersCountriesObject> countries = null;

  public static final String JSON_PROPERTY_WATCHLISTS = "watchlists";
  private java.util.List<FlattenedFiltersWatchlistsObject> watchlists = null;

  public FlattenedFilters() { 
  }

  public FlattenedFilters sources(java.util.List<FlattenedFiltersSourcesObject> sources) {
    this.sources = sources;
    return this;
  }

  public FlattenedFilters addSourcesItem(FlattenedFiltersSourcesObject sourcesItem) {
    if (this.sources == null) {
      this.sources = new java.util.ArrayList<>();
    }
    this.sources.add(sourcesItem);
    return this;
  }

   /**
   * Get sources
   * @return sources
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SOURCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<FlattenedFiltersSourcesObject> getSources() {
    return sources;
  }


  @JsonProperty(JSON_PROPERTY_SOURCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSources(java.util.List<FlattenedFiltersSourcesObject> sources) {
    this.sources = sources;
  }


  public FlattenedFilters categories(java.util.List<FlattenedFiltersCategoriesObject> categories) {
    this.categories = categories;
    return this;
  }

  public FlattenedFilters addCategoriesItem(FlattenedFiltersCategoriesObject categoriesItem) {
    if (this.categories == null) {
      this.categories = new java.util.ArrayList<>();
    }
    this.categories.add(categoriesItem);
    return this;
  }

   /**
   * Get categories
   * @return categories
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CATEGORIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<FlattenedFiltersCategoriesObject> getCategories() {
    return categories;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategories(java.util.List<FlattenedFiltersCategoriesObject> categories) {
    this.categories = categories;
  }


  public FlattenedFilters topics(java.util.List<FlattenedFiltersTopicsObject> topics) {
    this.topics = topics;
    return this;
  }

  public FlattenedFilters addTopicsItem(FlattenedFiltersTopicsObject topicsItem) {
    if (this.topics == null) {
      this.topics = new java.util.ArrayList<>();
    }
    this.topics.add(topicsItem);
    return this;
  }

   /**
   * Get topics
   * @return topics
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TOPICS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<FlattenedFiltersTopicsObject> getTopics() {
    return topics;
  }


  @JsonProperty(JSON_PROPERTY_TOPICS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTopics(java.util.List<FlattenedFiltersTopicsObject> topics) {
    this.topics = topics;
  }


  public FlattenedFilters regions(java.util.List<FlattenedFiltersRegionsObject> regions) {
    this.regions = regions;
    return this;
  }

  public FlattenedFilters addRegionsItem(FlattenedFiltersRegionsObject regionsItem) {
    if (this.regions == null) {
      this.regions = new java.util.ArrayList<>();
    }
    this.regions.add(regionsItem);
    return this;
  }

   /**
   * Get regions
   * @return regions
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_REGIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<FlattenedFiltersRegionsObject> getRegions() {
    return regions;
  }


  @JsonProperty(JSON_PROPERTY_REGIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRegions(java.util.List<FlattenedFiltersRegionsObject> regions) {
    this.regions = regions;
  }


  public FlattenedFilters countries(java.util.List<FlattenedFiltersCountriesObject> countries) {
    this.countries = countries;
    return this;
  }

  public FlattenedFilters addCountriesItem(FlattenedFiltersCountriesObject countriesItem) {
    if (this.countries == null) {
      this.countries = new java.util.ArrayList<>();
    }
    this.countries.add(countriesItem);
    return this;
  }

   /**
   * Get countries
   * @return countries
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_COUNTRIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<FlattenedFiltersCountriesObject> getCountries() {
    return countries;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountries(java.util.List<FlattenedFiltersCountriesObject> countries) {
    this.countries = countries;
  }


  public FlattenedFilters watchlists(java.util.List<FlattenedFiltersWatchlistsObject> watchlists) {
    this.watchlists = watchlists;
    return this;
  }

  public FlattenedFilters addWatchlistsItem(FlattenedFiltersWatchlistsObject watchlistsItem) {
    if (this.watchlists == null) {
      this.watchlists = new java.util.ArrayList<>();
    }
    this.watchlists.add(watchlistsItem);
    return this;
  }

   /**
   * Get watchlists
   * @return watchlists
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_WATCHLISTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<FlattenedFiltersWatchlistsObject> getWatchlists() {
    return watchlists;
  }


  @JsonProperty(JSON_PROPERTY_WATCHLISTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWatchlists(java.util.List<FlattenedFiltersWatchlistsObject> watchlists) {
    this.watchlists = watchlists;
  }


  /**
   * Return true if this FlattenedFilters object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FlattenedFilters flattenedFilters = (FlattenedFilters) o;
    return Objects.equals(this.sources, flattenedFilters.sources) &&
        Objects.equals(this.categories, flattenedFilters.categories) &&
        Objects.equals(this.topics, flattenedFilters.topics) &&
        Objects.equals(this.regions, flattenedFilters.regions) &&
        Objects.equals(this.countries, flattenedFilters.countries) &&
        Objects.equals(this.watchlists, flattenedFilters.watchlists);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sources, categories, topics, regions, countries, watchlists);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FlattenedFilters {\n");
    sb.append("    sources: ").append(toIndentedString(sources)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    topics: ").append(toIndentedString(topics)).append("\n");
    sb.append("    regions: ").append(toIndentedString(regions)).append("\n");
    sb.append("    countries: ").append(toIndentedString(countries)).append("\n");
    sb.append("    watchlists: ").append(toIndentedString(watchlists)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

