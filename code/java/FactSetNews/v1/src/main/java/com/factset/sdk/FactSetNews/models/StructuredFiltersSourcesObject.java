/*
 * News API
 *  The FactSet News API provides access to FactSetâ€™s news alongside business logic that allows users to replicate views and functionality consistent with the experience provided by the Workstation. This API provides the ability to create views and pull news headlines based on specific filters. There are the filters available for News:  * Watchlists/Indices/Tickers * Sources * Company Filters * Market Topics * Countries * Regions      
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetNews.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.FactSetNews.models.StructuredFiltersSourcesChildrenObject;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetNews.JSON;


/**
 * StructuredFiltersSourcesObject
 */
@JsonPropertyOrder({
  StructuredFiltersSourcesObject.JSON_PROPERTY_NAME,
  StructuredFiltersSourcesObject.JSON_PROPERTY_TOP_LEVEL,
  StructuredFiltersSourcesObject.JSON_PROPERTY_VALUE,
  StructuredFiltersSourcesObject.JSON_PROPERTY_CHILDREN,
  StructuredFiltersSourcesObject.JSON_PROPERTY_CRITERIA_LABEL,
  StructuredFiltersSourcesObject.JSON_PROPERTY_TOP_LEVEL_CRITERIA
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class StructuredFiltersSourcesObject implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_TOP_LEVEL = "topLevel";
  private Boolean topLevel;

  public static final String JSON_PROPERTY_VALUE = "value";
  private java.util.List<String> value = null;

  public static final String JSON_PROPERTY_CHILDREN = "children";
  private java.util.List<StructuredFiltersSourcesChildrenObject> children = null;

  public static final String JSON_PROPERTY_CRITERIA_LABEL = "criteriaLabel";
  private String criteriaLabel;

  public static final String JSON_PROPERTY_TOP_LEVEL_CRITERIA = "topLevelCriteria";
  private Boolean topLevelCriteria;

  public StructuredFiltersSourcesObject() { 
  }

  @JsonCreator
  public StructuredFiltersSourcesObject(
    @JsonProperty(value=JSON_PROPERTY_NAME, required=true) String name
  ) {
    this();
    this.name = name;
  }

  public StructuredFiltersSourcesObject name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the source.
   * @return name
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "Business Wire", required = true, value = "The name of the source.")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public StructuredFiltersSourcesObject topLevel(Boolean topLevel) {
    this.topLevel = topLevel;
    return this;
  }

   /**
   * Indicates if its a toplevel value or not.
   * @return topLevel
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Indicates if its a toplevel value or not.")
  @JsonProperty(JSON_PROPERTY_TOP_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTopLevel() {
    return topLevel;
  }


  @JsonProperty(JSON_PROPERTY_TOP_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTopLevel(Boolean topLevel) {
    this.topLevel = topLevel;
  }


  public StructuredFiltersSourcesObject value(java.util.List<String> value) {
    this.value = value;
    return this;
  }

  public StructuredFiltersSourcesObject addValueItem(String valueItem) {
    if (this.value == null) {
      this.value = new java.util.ArrayList<>();
    }
    this.value.add(valueItem);
    return this;
  }

   /**
   * The value associated with the source.
   * @return value
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The value associated with the source.")
  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<String> getValue() {
    return value;
  }


  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValue(java.util.List<String> value) {
    this.value = value;
  }


  public StructuredFiltersSourcesObject children(java.util.List<StructuredFiltersSourcesChildrenObject> children) {
    this.children = children;
    return this;
  }

  public StructuredFiltersSourcesObject addChildrenItem(StructuredFiltersSourcesChildrenObject childrenItem) {
    if (this.children == null) {
      this.children = new java.util.ArrayList<>();
    }
    this.children.add(childrenItem);
    return this;
  }

   /**
   * Get children
   * @return children
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CHILDREN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<StructuredFiltersSourcesChildrenObject> getChildren() {
    return children;
  }


  @JsonProperty(JSON_PROPERTY_CHILDREN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChildren(java.util.List<StructuredFiltersSourcesChildrenObject> children) {
    this.children = children;
  }


  public StructuredFiltersSourcesObject criteriaLabel(String criteriaLabel) {
    this.criteriaLabel = criteriaLabel;
    return this;
  }

   /**
   * The criteria label associated with the source.
   * @return criteriaLabel
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "DS_COR", value = "The criteria label associated with the source.")
  @JsonProperty(JSON_PROPERTY_CRITERIA_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCriteriaLabel() {
    return criteriaLabel;
  }


  @JsonProperty(JSON_PROPERTY_CRITERIA_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCriteriaLabel(String criteriaLabel) {
    this.criteriaLabel = criteriaLabel;
  }


  public StructuredFiltersSourcesObject topLevelCriteria(Boolean topLevelCriteria) {
    this.topLevelCriteria = topLevelCriteria;
    return this;
  }

   /**
   * Indicates if its the toplevelCriteria value or not.
   * @return topLevelCriteria
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Indicates if its the toplevelCriteria value or not.")
  @JsonProperty(JSON_PROPERTY_TOP_LEVEL_CRITERIA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTopLevelCriteria() {
    return topLevelCriteria;
  }


  @JsonProperty(JSON_PROPERTY_TOP_LEVEL_CRITERIA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTopLevelCriteria(Boolean topLevelCriteria) {
    this.topLevelCriteria = topLevelCriteria;
  }


  /**
   * Return true if this StructuredFiltersSourcesObject object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StructuredFiltersSourcesObject structuredFiltersSourcesObject = (StructuredFiltersSourcesObject) o;
    return Objects.equals(this.name, structuredFiltersSourcesObject.name) &&
        Objects.equals(this.topLevel, structuredFiltersSourcesObject.topLevel) &&
        Objects.equals(this.value, structuredFiltersSourcesObject.value) &&
        Objects.equals(this.children, structuredFiltersSourcesObject.children) &&
        Objects.equals(this.criteriaLabel, structuredFiltersSourcesObject.criteriaLabel) &&
        Objects.equals(this.topLevelCriteria, structuredFiltersSourcesObject.topLevelCriteria);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, topLevel, value, children, criteriaLabel, topLevelCriteria);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StructuredFiltersSourcesObject {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    topLevel: ").append(toIndentedString(topLevel)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    children: ").append(toIndentedString(children)).append("\n");
    sb.append("    criteriaLabel: ").append(toIndentedString(criteriaLabel)).append("\n");
    sb.append("    topLevelCriteria: ").append(toIndentedString(topLevelCriteria)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

