/*
 * News API
 *  The FactSet News API provides access to FactSetâ€™s news alongside business logic that allows users to replicate views and functionality consistent with the experience provided by the Workstation. This API provides the ability to create views and pull news headlines based on specific filters. There are the filters available for News:  * Watchlists/Indices/Tickers * Sources * Company Filters * Market Topics * Countries * Regions      
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetNews.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.FactSetNews.models.RegionObject;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetNews.JSON;


/**
 * StructuredFiltersRegionsObject
 */
@JsonPropertyOrder({
  StructuredFiltersRegionsObject.JSON_PROPERTY_NAME,
  StructuredFiltersRegionsObject.JSON_PROPERTY_TOP_LEVEL,
  StructuredFiltersRegionsObject.JSON_PROPERTY_VALUE,
  StructuredFiltersRegionsObject.JSON_PROPERTY_CHILDREN
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class StructuredFiltersRegionsObject implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_TOP_LEVEL = "topLevel";
  private Boolean topLevel;

  public static final String JSON_PROPERTY_VALUE = "value";
  private java.util.List<String> value = new java.util.ArrayList<>();

  public static final String JSON_PROPERTY_CHILDREN = "children";
  private java.util.List<RegionObject> children = new java.util.ArrayList<>();

  public StructuredFiltersRegionsObject() { 
  }

  @JsonCreator
  public StructuredFiltersRegionsObject(
    @JsonProperty(value=JSON_PROPERTY_NAME, required=true) String name, 
    @JsonProperty(value=JSON_PROPERTY_TOP_LEVEL, required=true) Boolean topLevel, 
    @JsonProperty(value=JSON_PROPERTY_VALUE, required=true) java.util.List<String> value, 
    @JsonProperty(value=JSON_PROPERTY_CHILDREN, required=true) java.util.List<RegionObject> children
  ) {
    this();
    this.name = name;
    this.topLevel = topLevel;
    this.value = value;
    this.children = children;
  }

  public StructuredFiltersRegionsObject name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the region.
   * @return name
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "Africa", required = true, value = "The name of the region.")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public StructuredFiltersRegionsObject topLevel(Boolean topLevel) {
    this.topLevel = topLevel;
    return this;
  }

   /**
   * Indicates if its a toplevel value or not.
   * @return topLevel
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Indicates if its a toplevel value or not.")
  @JsonProperty(JSON_PROPERTY_TOP_LEVEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getTopLevel() {
    return topLevel;
  }


  @JsonProperty(JSON_PROPERTY_TOP_LEVEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTopLevel(Boolean topLevel) {
    this.topLevel = topLevel;
  }


  public StructuredFiltersRegionsObject value(java.util.List<String> value) {
    this.value = value;
    return this;
  }

  public StructuredFiltersRegionsObject addValueItem(String valueItem) {
    this.value.add(valueItem);
    return this;
  }

   /**
   * Get value
   * @return value
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public java.util.List<String> getValue() {
    return value;
  }


  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setValue(java.util.List<String> value) {
    this.value = value;
  }


  public StructuredFiltersRegionsObject children(java.util.List<RegionObject> children) {
    this.children = children;
    return this;
  }

  public StructuredFiltersRegionsObject addChildrenItem(RegionObject childrenItem) {
    this.children.add(childrenItem);
    return this;
  }

   /**
   * Get children
   * @return children
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_CHILDREN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public java.util.List<RegionObject> getChildren() {
    return children;
  }


  @JsonProperty(JSON_PROPERTY_CHILDREN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setChildren(java.util.List<RegionObject> children) {
    this.children = children;
  }


  /**
   * Return true if this StructuredFiltersRegionsObject object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StructuredFiltersRegionsObject structuredFiltersRegionsObject = (StructuredFiltersRegionsObject) o;
    return Objects.equals(this.name, structuredFiltersRegionsObject.name) &&
        Objects.equals(this.topLevel, structuredFiltersRegionsObject.topLevel) &&
        Objects.equals(this.value, structuredFiltersRegionsObject.value) &&
        Objects.equals(this.children, structuredFiltersRegionsObject.children);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, topLevel, value, children);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StructuredFiltersRegionsObject {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    topLevel: ").append(toIndentedString(topLevel)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    children: ").append(toIndentedString(children)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

