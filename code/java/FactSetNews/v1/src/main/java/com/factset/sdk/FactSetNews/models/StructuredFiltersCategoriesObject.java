/*
 * News API
 *  The FactSet News API provides access to FactSetâ€™s news alongside business logic that allows users to replicate views and functionality consistent with the experience provided by the Workstation. This API provides the ability to create views and pull news headlines based on specific filters. There are the filters available for News:  * Watchlists/Indices/Tickers * Sources * Company Filters * Market Topics * Countries * Regions      
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetNews.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.FactSetNews.models.StructuredFiltersChildrenObject;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetNews.JSON;


/**
 * StructuredFiltersCategoriesObject
 */
@JsonPropertyOrder({
  StructuredFiltersCategoriesObject.JSON_PROPERTY_NAME,
  StructuredFiltersCategoriesObject.JSON_PROPERTY_TOPLEVEL,
  StructuredFiltersCategoriesObject.JSON_PROPERTY_VALUE,
  StructuredFiltersCategoriesObject.JSON_PROPERTY_FIELD,
  StructuredFiltersCategoriesObject.JSON_PROPERTY_OPERATOR,
  StructuredFiltersCategoriesObject.JSON_PROPERTY_SOURCE,
  StructuredFiltersCategoriesObject.JSON_PROPERTY_SOURCE_DISPLAY_NAMES,
  StructuredFiltersCategoriesObject.JSON_PROPERTY_TYPE,
  StructuredFiltersCategoriesObject.JSON_PROPERTY_CHILDREN
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class StructuredFiltersCategoriesObject implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_TOPLEVEL = "toplevel";
  private Boolean toplevel;

  public static final String JSON_PROPERTY_VALUE = "value";
  private java.util.List<String> value = null;

  public static final String JSON_PROPERTY_FIELD = "field";
  private String field;

  public static final String JSON_PROPERTY_OPERATOR = "operator";
  private String operator;

  public static final String JSON_PROPERTY_SOURCE = "source";
  private java.util.List<String> source = null;

  public static final String JSON_PROPERTY_SOURCE_DISPLAY_NAMES = "sourceDisplayNames";
  private java.util.List<String> sourceDisplayNames = null;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_CHILDREN = "children";
  private java.util.List<StructuredFiltersChildrenObject> children = null;

  public StructuredFiltersCategoriesObject() { 
  }

  @JsonCreator
  public StructuredFiltersCategoriesObject(
    @JsonProperty(value=JSON_PROPERTY_NAME, required=true) String name
  ) {
    this();
    this.name = name;
  }

  public StructuredFiltersCategoriesObject name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the category.
   * @return name
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "BTU Analytics Filters", required = true, value = "The name of the category.")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public StructuredFiltersCategoriesObject toplevel(Boolean toplevel) {
    this.toplevel = toplevel;
    return this;
  }

   /**
   * Indicates if its a toplevel value or not.
   * @return toplevel
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Indicates if its a toplevel value or not.")
  @JsonProperty(JSON_PROPERTY_TOPLEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getToplevel() {
    return toplevel;
  }


  @JsonProperty(JSON_PROPERTY_TOPLEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setToplevel(Boolean toplevel) {
    this.toplevel = toplevel;
  }


  public StructuredFiltersCategoriesObject value(java.util.List<String> value) {
    this.value = value;
    return this;
  }

  public StructuredFiltersCategoriesObject addValueItem(String valueItem) {
    if (this.value == null) {
      this.value = new java.util.ArrayList<>();
    }
    this.value.add(valueItem);
    return this;
  }

   /**
   * Get value
   * @return value
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<String> getValue() {
    return value;
  }


  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValue(java.util.List<String> value) {
    this.value = value;
  }


  public StructuredFiltersCategoriesObject field(String field) {
    this.field = field;
    return this;
  }

   /**
   * The field associated with the category.
   * @return field
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "categories", value = "The field associated with the category.")
  @JsonProperty(JSON_PROPERTY_FIELD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getField() {
    return field;
  }


  @JsonProperty(JSON_PROPERTY_FIELD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setField(String field) {
    this.field = field;
  }


  public StructuredFiltersCategoriesObject operator(String operator) {
    this.operator = operator;
    return this;
  }

   /**
   * The operator associated with the category.
   * @return operator
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "IN", value = "The operator associated with the category.")
  @JsonProperty(JSON_PROPERTY_OPERATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOperator() {
    return operator;
  }


  @JsonProperty(JSON_PROPERTY_OPERATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOperator(String operator) {
    this.operator = operator;
  }


  public StructuredFiltersCategoriesObject source(java.util.List<String> source) {
    this.source = source;
    return this;
  }

  public StructuredFiltersCategoriesObject addSourceItem(String sourceItem) {
    if (this.source == null) {
      this.source = new java.util.ArrayList<>();
    }
    this.source.add(sourceItem);
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<String> getSource() {
    return source;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSource(java.util.List<String> source) {
    this.source = source;
  }


  public StructuredFiltersCategoriesObject sourceDisplayNames(java.util.List<String> sourceDisplayNames) {
    this.sourceDisplayNames = sourceDisplayNames;
    return this;
  }

  public StructuredFiltersCategoriesObject addSourceDisplayNamesItem(String sourceDisplayNamesItem) {
    if (this.sourceDisplayNames == null) {
      this.sourceDisplayNames = new java.util.ArrayList<>();
    }
    this.sourceDisplayNames.add(sourceDisplayNamesItem);
    return this;
  }

   /**
   * Get sourceDisplayNames
   * @return sourceDisplayNames
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SOURCE_DISPLAY_NAMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<String> getSourceDisplayNames() {
    return sourceDisplayNames;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_DISPLAY_NAMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceDisplayNames(java.util.List<String> sourceDisplayNames) {
    this.sourceDisplayNames = sourceDisplayNames;
  }


  public StructuredFiltersCategoriesObject type(String type) {
    this.type = type;
    return this;
  }

   /**
   * The type associated with the category.
   * @return type
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "MARKET", value = "The type associated with the category.")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  public StructuredFiltersCategoriesObject children(java.util.List<StructuredFiltersChildrenObject> children) {
    this.children = children;
    return this;
  }

  public StructuredFiltersCategoriesObject addChildrenItem(StructuredFiltersChildrenObject childrenItem) {
    if (this.children == null) {
      this.children = new java.util.ArrayList<>();
    }
    this.children.add(childrenItem);
    return this;
  }

   /**
   * An array of children objects.
   * @return children
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "An array of children objects.")
  @JsonProperty(JSON_PROPERTY_CHILDREN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<StructuredFiltersChildrenObject> getChildren() {
    return children;
  }


  @JsonProperty(JSON_PROPERTY_CHILDREN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChildren(java.util.List<StructuredFiltersChildrenObject> children) {
    this.children = children;
  }


  /**
   * Return true if this StructuredFiltersCategoriesObject object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StructuredFiltersCategoriesObject structuredFiltersCategoriesObject = (StructuredFiltersCategoriesObject) o;
    return Objects.equals(this.name, structuredFiltersCategoriesObject.name) &&
        Objects.equals(this.toplevel, structuredFiltersCategoriesObject.toplevel) &&
        Objects.equals(this.value, structuredFiltersCategoriesObject.value) &&
        Objects.equals(this.field, structuredFiltersCategoriesObject.field) &&
        Objects.equals(this.operator, structuredFiltersCategoriesObject.operator) &&
        Objects.equals(this.source, structuredFiltersCategoriesObject.source) &&
        Objects.equals(this.sourceDisplayNames, structuredFiltersCategoriesObject.sourceDisplayNames) &&
        Objects.equals(this.type, structuredFiltersCategoriesObject.type) &&
        Objects.equals(this.children, structuredFiltersCategoriesObject.children);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, toplevel, value, field, operator, source, sourceDisplayNames, type, children);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StructuredFiltersCategoriesObject {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    toplevel: ").append(toIndentedString(toplevel)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    field: ").append(toIndentedString(field)).append("\n");
    sb.append("    operator: ").append(toIndentedString(operator)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    sourceDisplayNames: ").append(toIndentedString(sourceDisplayNames)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    children: ").append(toIndentedString(children)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

