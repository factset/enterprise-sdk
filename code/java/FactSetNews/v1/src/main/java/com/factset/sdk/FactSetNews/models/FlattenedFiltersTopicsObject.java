/*
 * News API
 *  The FactSet News API provides access to FactSetâ€™s news alongside business logic that allows users to replicate views and functionality consistent with the experience provided by the Workstation. This API provides the ability to create views and pull news headlines based on specific filters. There are the filters available for News:  * Watchlists/Indices/Tickers * Sources * Company Filters * Market Topics * Countries * Regions      
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetNews.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetNews.JSON;


/**
 *   &#39;(Note: the value array will always have just one value.)&#39; 
 */
@ApiModel(description = "  '(Note: the value array will always have just one value.)' ")
@JsonPropertyOrder({
  FlattenedFiltersTopicsObject.JSON_PROPERTY_NAME,
  FlattenedFiltersTopicsObject.JSON_PROPERTY_FIELD,
  FlattenedFiltersTopicsObject.JSON_PROPERTY_SOURCE,
  FlattenedFiltersTopicsObject.JSON_PROPERTY_VALUE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class FlattenedFiltersTopicsObject implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_FIELD = "field";
  private String field;

  public static final String JSON_PROPERTY_SOURCE = "source";
  private java.util.List<String> source = null;

  public static final String JSON_PROPERTY_VALUE = "value";
  private java.util.List<String> value = null;

  public FlattenedFiltersTopicsObject() { 
  }

  public FlattenedFiltersTopicsObject name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the topic.
   * @return name
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Barron's", value = "The name of the topic.")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public FlattenedFiltersTopicsObject field(String field) {
    this.field = field;
    return this;
  }

   /**
   * The field of the topic.
   * @return field
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "subjects", value = "The field of the topic.")
  @JsonProperty(JSON_PROPERTY_FIELD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getField() {
    return field;
  }


  @JsonProperty(JSON_PROPERTY_FIELD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setField(String field) {
    this.field = field;
  }


  public FlattenedFiltersTopicsObject source(java.util.List<String> source) {
    this.source = source;
    return this;
  }

  public FlattenedFiltersTopicsObject addSourceItem(String sourceItem) {
    if (this.source == null) {
      this.source = new java.util.ArrayList<>();
    }
    this.source.add(sourceItem);
    return this;
  }

   /**
   * The source of the topic.
   * @return source
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "[\"BAR\",\"DJAN\"]", value = "The source of the topic.")
  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<String> getSource() {
    return source;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSource(java.util.List<String> source) {
    this.source = source;
  }


  public FlattenedFiltersTopicsObject value(java.util.List<String> value) {
    this.value = value;
    return this;
  }

  public FlattenedFiltersTopicsObject addValueItem(String valueItem) {
    if (this.value == null) {
      this.value = new java.util.ArrayList<>();
    }
    this.value.add(valueItem);
    return this;
  }

   /**
   * An array containing a single value associated with the topic.
   * @return value
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "[\"N/BRN\"]", value = "An array containing a single value associated with the topic.")
  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<String> getValue() {
    return value;
  }


  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValue(java.util.List<String> value) {
    this.value = value;
  }


  /**
   * Return true if this FlattenedFiltersTopicsObject object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FlattenedFiltersTopicsObject flattenedFiltersTopicsObject = (FlattenedFiltersTopicsObject) o;
    return Objects.equals(this.name, flattenedFiltersTopicsObject.name) &&
        Objects.equals(this.field, flattenedFiltersTopicsObject.field) &&
        Objects.equals(this.source, flattenedFiltersTopicsObject.source) &&
        Objects.equals(this.value, flattenedFiltersTopicsObject.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, field, source, value);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FlattenedFiltersTopicsObject {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    field: ").append(toIndentedString(field)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

