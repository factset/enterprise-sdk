openapi: 3.0.0
info:
  contact:
    email: api@factset.com
    name: FactSet Research Systems
    url: https://developer.factset.com/contact
  description: This API is used to file issues
  license:
    name: Apache License, Version 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  title: Issue Tracker API
  version: 1.2.0
externalDocs:
  description: API Documentation
  url: https://developer.factset.com/api-catalog/issue-tracker-api
servers:
- url: https://api.factset.com/issue-tracker/v1
security:
- FactSetApiKey: []
- FactSetOAuth2: []
tags:
- description: Updating and retrieving issue data within the Issue Tracker
  name: Issue
paths:
  /issues:
    post:
      description: Creates a new issue in Issue Tracker
      operationId: postIssue
      requestBody:
        content:
          application/json:
            examples:
              Example 1:
                value:
                  data:
                    subject: This is sample subject of issue tracker issue
                    description: <p>Here we can provide a complete description of
                      why we are creating issue.</p>
                    productId: "13273"
                    categoryId: "20589"
                    isCritical: false
            schema:
              $ref: '#/components/schemas/issueRequest'
      responses:
        "201":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    data:
                      id: 28d38193-3454-4e45-9825-71br87e69fe3
              schema:
                $ref: '#/components/schemas/idResponse'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      summary: Creates a Issue Tracker issue
      tags:
      - Issue
      x-contentType: application/json
      x-accepts: application/json
  /issues/{id}:
    get:
      description: Retrieve the information of the client with the matching issue
        Id.
      operationId: getIssue
      parameters:
      - description: ID of Issue Tracker issue
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    data:
                      id: 5c318d1c-61da-4d32-91ef-4ea65e53a551
                      subject: This is sample subject of issue tracker issue
                      isCritical: false
                      internalId: 81195668
                      comments:
                      - id: 39d38193-2829-4e45-9825-61br87e59fe1
                        content: Here we can provide a complete description of why
                          we are creating the issue.
                        createdAt: 2023-09-13T11:09:01.7274055Z
                        author: Sreenu Narra
              schema:
                $ref: '#/components/schemas/issue'
          description: OK
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      summary: Get the matched issue details
      tags:
      - Issue
      x-accepts: application/json
    patch:
      description: "User can update either `isCritical` with `subject` or `productId`\
        \ with `categoryId`.\r\n\r\n**Note:** Users are not allowed to update `isCritical`\
        \ with `productId` or `subject` with `productId`"
      operationId: patchIssue
      parameters:
      - description: ID of Issue Tracker issue
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Sample request to replace title along with severity:
                value:
                  data:
                    subject: replace Title of ticket
                    isCritical: false
              Sample request  to replace ProductId with CategoryId:
                value:
                  data:
                    productId: "41681"
                    categoryId: "20586"
              Sample request to replace Title alone:
                value:
                  data:
                    subject: replace Title of ticket
              Sample request to replace Severity alone:
                value:
                  data:
                    isCritical: true
              Sample request to replace ProductId alone:
                value:
                  data:
                    productId: "41681"
            schema:
              $ref: '#/components/schemas/updateIssueRequest'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      summary: Update severity and subject of issue or productId and categoryId of
        issue
      tags:
      - Issue
      x-contentType: application/json
      x-accepts: application/json
  /issues/{id}/comments:
    post:
      description: 'Reply to the existing matched issue '
      operationId: postReply
      parameters:
      - description: ID of Issue Tracker issue
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example 1:
                value:
                  data:
                    content: <p>this is a sample comment</p>
            schema:
              $ref: '#/components/schemas/commentRequest'
      responses:
        "201":
          content:
            application/json:
              example:
                value:
                  data:
                    id: 28d38693-3454-4e45-9825-71br87e69fe3
              schema:
                $ref: '#/components/schemas/idResponse'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: Internal Server Error
      summary: post comment to Issue Tracker issue
      tags:
      - Issue
      x-contentType: application/json
      x-accepts: application/json
components:
  parameters: {}
  requestBodies: {}
  schemas:
    commentRequest:
      properties:
        data:
          $ref: '#/components/schemas/commentRequest_data'
      type: object
    issue:
      example:
        data:
          id: 28d38193-3454-4e45-9825-71br87e69fe3
          subject: This is sample subject of issue tracker issue
          isCritical: false
          comments:
          - id: 39d38193-2829-4e45-9825-61br87e59fe1
            content: Here we can provide a complete description of why we are creating
              the issue.
            createdAt: 2023-09-13T11:09:01.7274055Z
            author: James
      properties:
        data:
          $ref: '#/components/schemas/issue_data'
      type: object
    issueRequest:
      properties:
        data:
          $ref: '#/components/schemas/issueRequest_data'
      type: object
    comment:
      example:
        id: 39d38193-2829-4e45-9825-61br87e59fe1
        content: Here we can provide a complete description of why we are creating
          the issue.
        createdAt: 2023-09-13T11:09:01.7274055Z
        author: Sreenu Narra
      properties:
        id:
          description: generated comment id
          type: string
        content:
          description: cotent of comment
          type: string
        createdAt:
          description: comment creation time
          format: date-time
          type: string
        author:
          description: author of the comment.
          type: string
      type: object
    idResponse:
      example:
        data:
          id: 28d38693-3454-4e45-9825-71br87e69fe3
      properties:
        data:
          $ref: '#/components/schemas/idResponse_data'
      type: object
    errorResponse:
      properties:
        errors:
          items:
            $ref: '#/components/schemas/error'
          type: array
      type: object
    error:
      example:
        id: "500"
        title: Internal Ierver Error
        code: Internal Ierver Error
      properties:
        id:
          type: string
        code:
          type: string
        title:
          type: string
      type: object
    updateIssueRequest:
      description: Request object for update severity or subject of Issue
      example:
        data:
          subject: This is update subject of issue
          isCritical: false
      properties:
        data:
          $ref: '#/components/schemas/updateIssueRequest_data'
      type: object
    commentRequest_data:
      properties:
        content:
          description: description for comment
          type: string
      type: object
    issue_data:
      properties:
        id:
          description: generated issue id for Issue Tracker
          type: string
        subject:
          description: subject of Issue Tracker issue
          type: string
        comments:
          description: array of comments added to issue
          items:
            $ref: '#/components/schemas/comment'
          type: array
        isCritical:
          type: boolean
        internalId:
          type: integer
      type: object
    issueRequest_data:
      properties:
        subject:
          description: subject for new Issue Tracker issue
          type: string
        description:
          description: Comprehensive description of the issue, including any problems
            you've observed or any specific changes you'd like to request.
          type: string
        productId:
          description: 'Issue Tracker product '
          type: string
        categoryId:
          description: 'category of Factset Product. '
          type: string
        isCritical:
          description: severity of issue tracker ticket is critical or not
          type: boolean
      required:
      - description
      - productId
      - subject
      type: object
    idResponse_data:
      properties:
        id:
          description: The generated ID for either an issue or a comment varies depending
            on the endpoint. Specifically, for the Issues endpoint, it will return
            'issueid,' and for the comments endpoint, it will return 'commentid.'
          type: string
      type: object
    updateIssueRequest_data:
      properties:
        subject:
          description: subject of ticket
          type: string
        isCritical:
          description: severity of issue
          type: boolean
        productId:
          description: ProductId that needs to be replaced
          type: string
        categoryId:
          description: Category that needs to be replaced
          type: string
      type: object
  securitySchemes:
    FactSetOAuth2:
      flows:
        clientCredentials:
          scopes: {}
          tokenUrl: https://auth.factset.com/as/token.oauth2
      type: oauth2
    FactSetApiKey:
      scheme: basic
      type: http

