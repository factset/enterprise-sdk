/*
 * Issue Tracker API
 * This API is used to file issues
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.IssueTracker.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.IssueTracker.JSON;


/**
 * UpdateIssueRequestData
 */
@JsonPropertyOrder({
  UpdateIssueRequestData.JSON_PROPERTY_SUBJECT,
  UpdateIssueRequestData.JSON_PROPERTY_IS_CRITICAL
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class UpdateIssueRequestData implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_SUBJECT = "subject";
  private String subject;

  public static final String JSON_PROPERTY_IS_CRITICAL = "isCritical";
  private Boolean isCritical;

  public UpdateIssueRequestData() { 
  }

  public UpdateIssueRequestData subject(String subject) {
    this.subject = subject;
    return this;
  }

   /**
   * subject of ticket
   * @return subject
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "subject of ticket")
  @JsonProperty(JSON_PROPERTY_SUBJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSubject() {
    return subject;
  }


  @JsonProperty(JSON_PROPERTY_SUBJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubject(String subject) {
    this.subject = subject;
  }


  public UpdateIssueRequestData isCritical(Boolean isCritical) {
    this.isCritical = isCritical;
    return this;
  }

   /**
   * severity of issue
   * @return isCritical
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "severity of issue")
  @JsonProperty(JSON_PROPERTY_IS_CRITICAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsCritical() {
    return isCritical;
  }


  @JsonProperty(JSON_PROPERTY_IS_CRITICAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsCritical(Boolean isCritical) {
    this.isCritical = isCritical;
  }


  /**
   * Return true if this updateIssueRequest_data object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateIssueRequestData updateIssueRequestData = (UpdateIssueRequestData) o;
    return Objects.equals(this.subject, updateIssueRequestData.subject) &&
        Objects.equals(this.isCritical, updateIssueRequestData.isCritical);
  }

  @Override
  public int hashCode() {
    return Objects.hash(subject, isCritical);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateIssueRequestData {\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    isCritical: ").append(toIndentedString(isCritical)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

