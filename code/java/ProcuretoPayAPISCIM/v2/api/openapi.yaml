openapi: 3.0.0
info:
  contact:
    email: api@factset.com
    name: FactSet Research Systems
    url: https://developer.factset.com/contact
  description: FactSet's SCIM API implementation.
  license:
    name: Apache License, Version 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  title: FactSet SCIM API
  version: 2.6.0
externalDocs:
  description: API Documentation
  url: https://developer.factset.com/api-catalog/procure-to-pay-api-scim
servers:
- description: Production environment
  url: https://api.factset.com/scim/v2
- description: UAT environment
  url: https://api.uat.factset.com/scim/v2
security:
- FactSetApiKey: []
- FactSetOAuth2: []
tags:
- description: View the capabilities of the FactSet SCIM API.
  name: Service provider configuration
- description: View the schemas supported by the FactSet SCIM API.
  name: Schemas
- description: View, create, replace, modify, or delete FactSet user accounts.
  name: Users
- description: View, replace, or modify FactSet user groups.
  name: Groups
- description: View, create, replace, or modify FactSet location data.
  name: Locations
- description: View FactSet firm descriptions.
  name: FirmDescriptions
- description: View FactSet user classes.
  name: UserClasses
- description: View FactSet user positions.
  name: UserPositions
- description: View FactSet products.
  name: Products
- description: View, replace, or modify FactSet federations.
  name: Federations
- description: View FactSet file manager data.
  name: FileManagerAudit
paths:
  /ServiceProviderConfig:
    get:
      description: Get service provider configuration, which describes the SCIM specification
        features available. See RFC 7644 section 4.
      operationId: getServiceProviderConfig
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ServiceProviderConfig'
          description: Success.
        "401":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FactSet credentials are missing or invalid.
                status: "401"
              schema:
                $ref: '#/components/schemas/Error'
          description: User has not been authenticated.
        "429":
          content:
            application/json:
              example:
                message: API rate limit exceeded
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: User is accessing this API too frequently.
        "500":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error.
      summary: Get service provider configuration.
      tags:
      - Service provider configuration
      x-accepts: application/json
  /Schemas:
    get:
      description: Get a list of supported resource schemas. See RFC 7644 section
        4.
      operationId: getSchemas
      parameters:
      - description: Result start index. The one-based index of the first result to
          be returned in the list of resources. For example, to exclude the first
          two resources, use a *startIndex* value of 3. This parameter has a default
          value of 1. This index applies *after* any resource filtration has been
          applied as specified by the *filter* argument.
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          type: integer
        style: form
      - description: Maximum resource count. The server will not return more resources
          than this value, although it may return fewer.
        explode: true
        in: query
        name: count
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/SchemaList'
          description: Success.
        "401":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FactSet credentials are missing or invalid.
                status: "401"
              schema:
                $ref: '#/components/schemas/Error'
          description: User has not been authenticated.
        "403":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM
                  API.
                status: "403"
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorized to use this API.
        "429":
          content:
            application/json:
              example:
                message: API rate limit exceeded
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: User is accessing this API too frequently.
        "500":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error.
      summary: Get a list of schemas.
      tags:
      - Schemas
      x-accepts: application/json
  /Schemas/{id}:
    get:
      description: Get a specific schema. See RFC 7643 section 7.
      operationId: getSchema
      parameters:
      - description: ID of resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/Schema'
          description: Success.
        "401":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FactSet credentials are missing or invalid.
                status: "401"
              schema:
                $ref: '#/components/schemas/Error'
          description: User has not been authenticated.
        "404":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Schema urn:scim:schemas:extension:FactSet:Core:1.0:User not
                  found
                status: "404"
              schema:
                $ref: '#/components/schemas/Error'
          description: Schema not found.
        "429":
          content:
            application/json:
              example:
                message: API rate limit exceeded
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: User is accessing this API too frequently.
        "500":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error.
      summary: Get a schema.
      tags:
      - Schemas
      x-accepts: application/json
  /Users:
    get:
      description: Get a list of user resources.
      operationId: getUsers
      parameters:
      - description: Resource filter string. See [RFC 7644 section 3.4.2.2](https://tools.ietf.org/html/rfc7644#section-3.4.2.2)
          for syntax. Note this API implementation also supports a non-standard "re"
          operator for regular expression matching against string attributes. When
          using the "re" operator, do not include slash characters as delimiters (e.g.
          use "foo" instead of "/foo/".) Also note the case-sensitivity of the regular
          expression corresponds to the "caseExact" characteristic of the target attribute.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: Attribute to be used for sorting resources. See [RFC 7644 section
          3.4.2.3](https://tools.ietf.org/html/rfc7644#section-3.4.2.3). The attribute
          name must be specified in standard attribute notation (see [RFC 7644 section
          3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) Use
          the *sortOrder* parameter to specify whether resources should be sorted
          in ascending or descending order.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: The order by which resources are to be sorted. See [RFC 7644
          section 3.4.2.3](https://tools.ietf.org/html/rfc7644#section-3.4.2.3). Valid
          values are ''ascending'' (the default value) or ''descending''. This parameter
          may not be used unless the *sortBy* parameter is also specified.
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          type: string
        style: form
      - description: Result start index. The one-based index of the first result to
          be returned in the list of resources. For example, to exclude the first
          two resources, use a *startIndex* value of 3. This parameter has a default
          value of 1. This index applies *after* any resource filtration has been
          applied as specified by the *filter* argument.
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          type: integer
        style: form
      - description: Maximum resource count. The server will not return more resources
          than this value, although it may return fewer.
        explode: true
        in: query
        name: count
        required: false
        schema:
          type: integer
        style: form
      - description: Attribute whitelist filter string. A comma-separated list of
          resource attribute names to be returned in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *excludedAttributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: attributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attribute blacklist filter string. A comma-separated list of
          resource attribute names to be excluded in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *attributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: excludedAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Non-standard attribute filter string. A comma-separated list
          of resource attribute names to be included in the response, complementing
          the set of attributes that would be returned by default. Attribute names
          must be specified in standard attribute notation (see [RFC 7644 section
          3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This
          parameter cannot be used with the *attributes* or *excludedAttributes* parameters.
        explode: false
        in: query
        name: additionalAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/UserResourceList'
          description: Success.
        "400":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                scimType: invalidFilter
                detail: Invalid filter value.
                status: "400"
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filter value provided.
        "401":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FactSet credentials are missing or invalid.
                status: "401"
              schema:
                $ref: '#/components/schemas/Error'
          description: User has not been authenticated.
        "403":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM
                  API.
                status: "403"
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorized to use this API.
        "429":
          content:
            application/json:
              example:
                message: API rate limit exceeded
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: User is accessing this API too frequently.
        "500":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error.
      summary: Get a list of users.
      tags:
      - Users
      x-accepts: application/json
    post:
      description: Create a user resource.
      operationId: createUser
      parameters:
      - description: Attribute whitelist filter string. A comma-separated list of
          resource attribute names to be returned in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *excludedAttributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: attributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attribute blacklist filter string. A comma-separated list of
          resource attribute names to be excluded in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *attributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: excludedAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Non-standard attribute filter string. A comma-separated list
          of resource attribute names to be included in the response, complementing
          the set of attributes that would be returned by default. Attribute names
          must be specified in standard attribute notation (see [RFC 7644 section
          3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This
          parameter cannot be used with the *attributes* or *excludedAttributes* parameters.
        explode: false
        in: query
        name: additionalAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        $ref: '#/components/requestBodies/userResource'
      responses:
        "201":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/UserResource'
          description: Success.
        "400":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                scimType: invalidValue
                detail: Provided resource contains invalid data.
                status: "400"
              schema:
                $ref: '#/components/schemas/Error'
          description: Provided resource contains invalid data.
        "401":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FactSet credentials are missing or invalid.
                status: "401"
              schema:
                $ref: '#/components/schemas/Error'
          description: User has not been authenticated.
        "403":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM
                  API.
                status: "403"
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorized to use this API.
        "429":
          content:
            application/json:
              example:
                message: API rate limit exceeded
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: User is accessing this API too frequently.
        "500":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error.
      summary: Create a user.
      tags:
      - Users
      x-contentType: application/scim+json
      x-accepts: application/json
  /Users/{id}:
    delete:
      description: Delete a specific user resource.
      operationId: deleteUser
      parameters:
      - description: ID of resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: User successfully deleted.
        "401":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FactSet credentials are missing or invalid.
                status: "401"
              schema:
                $ref: '#/components/schemas/Error'
          description: User has not been authenticated.
        "403":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM
                  API.
                status: "403"
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorized to use this API.
        "404":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User FIN_WEALTH-123456 was not found.
                status: "404"
              schema:
                $ref: '#/components/schemas/Error'
          description: User not found.
        "429":
          content:
            application/json:
              example:
                message: API rate limit exceeded
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: User is accessing this API too frequently.
        "500":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error.
      summary: Delete a user.
      tags:
      - Users
      x-accepts: application/json
    get:
      description: Get a specific user resource.
      operationId: getUser
      parameters:
      - description: ID of resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Attribute whitelist filter string. A comma-separated list of
          resource attribute names to be returned in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *excludedAttributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: attributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attribute blacklist filter string. A comma-separated list of
          resource attribute names to be excluded in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *attributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: excludedAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Non-standard attribute filter string. A comma-separated list
          of resource attribute names to be included in the response, complementing
          the set of attributes that would be returned by default. Attribute names
          must be specified in standard attribute notation (see [RFC 7644 section
          3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This
          parameter cannot be used with the *attributes* or *excludedAttributes* parameters.
        explode: false
        in: query
        name: additionalAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/UserResource'
          description: Success.
        "401":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FactSet credentials are missing or invalid.
                status: "401"
              schema:
                $ref: '#/components/schemas/Error'
          description: User has not been authenticated.
        "403":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM
                  API.
                status: "403"
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorized to use this API.
        "404":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User FIN_WEALTH-123456 was not found.
                status: "404"
              schema:
                $ref: '#/components/schemas/Error'
          description: User not found.
        "429":
          content:
            application/json:
              example:
                message: API rate limit exceeded
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: User is accessing this API too frequently.
        "500":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error.
      summary: Get a user.
      tags:
      - Users
      x-accepts: application/json
    patch:
      description: Modify a specific user resource (i.e. add, replace, or remove attributes
        of a user resource.)
      operationId: modifyUser
      parameters:
      - description: ID of resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Attribute whitelist filter string. A comma-separated list of
          resource attribute names to be returned in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *excludedAttributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: attributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attribute blacklist filter string. A comma-separated list of
          resource attribute names to be excluded in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *attributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: excludedAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Non-standard attribute filter string. A comma-separated list
          of resource attribute names to be included in the response, complementing
          the set of attributes that would be returned by default. Attribute names
          must be specified in standard attribute notation (see [RFC 7644 section
          3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This
          parameter cannot be used with the *attributes* or *excludedAttributes* parameters.
        explode: false
        in: query
        name: additionalAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        $ref: '#/components/requestBodies/patchUserResource'
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/UserResource'
          description: Success.
        "400":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                scimType: invalidValue
                detail: Provided resource contains invalid data.
                status: "400"
              schema:
                $ref: '#/components/schemas/Error'
          description: Patch request invalid.
        "401":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FactSet credentials are missing or invalid.
                status: "401"
              schema:
                $ref: '#/components/schemas/Error'
          description: User has not been authenticated.
        "403":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM
                  API.
                status: "403"
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorized to use this API.
        "429":
          content:
            application/json:
              example:
                message: API rate limit exceeded
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: User is accessing this API too frequently.
        "500":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error.
        "501":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: The requested operation is not currently supported.
                status: "501"
              schema:
                $ref: '#/components/schemas/Error'
          description: Operation is not supported.
      summary: Patch a user.
      tags:
      - Users
      x-contentType: application/scim+json
      x-accepts: application/json
    put:
      description: Replace a specific user resource with another provided user resource.
      operationId: replaceUser
      parameters:
      - description: ID of resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Attribute whitelist filter string. A comma-separated list of
          resource attribute names to be returned in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *excludedAttributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: attributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attribute blacklist filter string. A comma-separated list of
          resource attribute names to be excluded in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *attributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: excludedAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Non-standard attribute filter string. A comma-separated list
          of resource attribute names to be included in the response, complementing
          the set of attributes that would be returned by default. Attribute names
          must be specified in standard attribute notation (see [RFC 7644 section
          3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This
          parameter cannot be used with the *attributes* or *excludedAttributes* parameters.
        explode: false
        in: query
        name: additionalAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        $ref: '#/components/requestBodies/userResource'
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/UserResource'
          description: Success.
        "400":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                scimType: invalidValue
                detail: Provided resource contains invalid data.
                status: "400"
              schema:
                $ref: '#/components/schemas/Error'
          description: Provided resource contains invalid data.
        "401":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FactSet credentials are missing or invalid.
                status: "401"
              schema:
                $ref: '#/components/schemas/Error'
          description: User has not been authenticated.
        "403":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM
                  API.
                status: "403"
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorized to use this API.
        "404":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User FIN_WEALTH-123456 was not found.
                status: "404"
              schema:
                $ref: '#/components/schemas/Error'
          description: User not found.
        "429":
          content:
            application/json:
              example:
                message: API rate limit exceeded
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: User is accessing this API too frequently.
        "500":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error.
      summary: Replace a user.
      tags:
      - Users
      x-contentType: application/scim+json
      x-accepts: application/json
  /Groups:
    get:
      description: Get a list of group resources.
      operationId: getGroups
      parameters:
      - description: Resource filter string. See [RFC 7644 section 3.4.2.2](https://tools.ietf.org/html/rfc7644#section-3.4.2.2)
          for syntax. Note this API implementation also supports a non-standard "re"
          operator for regular expression matching against string attributes. When
          using the "re" operator, do not include slash characters as delimiters (e.g.
          use "foo" instead of "/foo/".) Also note the case-sensitivity of the regular
          expression corresponds to the "caseExact" characteristic of the target attribute.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: Attribute to be used for sorting resources. See [RFC 7644 section
          3.4.2.3](https://tools.ietf.org/html/rfc7644#section-3.4.2.3). The attribute
          name must be specified in standard attribute notation (see [RFC 7644 section
          3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) Use
          the *sortOrder* parameter to specify whether resources should be sorted
          in ascending or descending order.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: The order by which resources are to be sorted. See [RFC 7644
          section 3.4.2.3](https://tools.ietf.org/html/rfc7644#section-3.4.2.3). Valid
          values are ''ascending'' (the default value) or ''descending''. This parameter
          may not be used unless the *sortBy* parameter is also specified.
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          type: string
        style: form
      - description: Result start index. The one-based index of the first result to
          be returned in the list of resources. For example, to exclude the first
          two resources, use a *startIndex* value of 3. This parameter has a default
          value of 1. This index applies *after* any resource filtration has been
          applied as specified by the *filter* argument.
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          type: integer
        style: form
      - description: Maximum resource count. The server will not return more resources
          than this value, although it may return fewer.
        explode: true
        in: query
        name: count
        required: false
        schema:
          type: integer
        style: form
      - description: Attribute whitelist filter string. A comma-separated list of
          resource attribute names to be returned in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *excludedAttributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: attributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attribute blacklist filter string. A comma-separated list of
          resource attribute names to be excluded in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *attributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: excludedAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Non-standard attribute filter string. A comma-separated list
          of resource attribute names to be included in the response, complementing
          the set of attributes that would be returned by default. Attribute names
          must be specified in standard attribute notation (see [RFC 7644 section
          3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This
          parameter cannot be used with the *attributes* or *excludedAttributes* parameters.
        explode: false
        in: query
        name: additionalAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/GroupResourceList'
          description: Success.
        "400":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                scimType: invalidFilter
                detail: Invalid filter value.
                status: "400"
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filter value provided.
        "401":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FactSet credentials are missing or invalid.
                status: "401"
              schema:
                $ref: '#/components/schemas/Error'
          description: User has not been authenticated.
        "403":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM
                  API.
                status: "403"
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorized to use this API.
        "429":
          content:
            application/json:
              example:
                message: API rate limit exceeded
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: User is accessing this API too frequently.
        "500":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error.
      summary: Get a list of groups.
      tags:
      - Groups
      x-accepts: application/json
  /Group/{id}:
    get:
      description: Get a specific group resource.
      operationId: getGroup
      parameters:
      - description: ID of resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Attribute whitelist filter string. A comma-separated list of
          resource attribute names to be returned in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *excludedAttributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: attributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attribute blacklist filter string. A comma-separated list of
          resource attribute names to be excluded in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *attributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: excludedAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Non-standard attribute filter string. A comma-separated list
          of resource attribute names to be included in the response, complementing
          the set of attributes that would be returned by default. Attribute names
          must be specified in standard attribute notation (see [RFC 7644 section
          3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This
          parameter cannot be used with the *attributes* or *excludedAttributes* parameters.
        explode: false
        in: query
        name: additionalAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/GroupResource'
          description: Success.
        "401":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FactSet credentials are missing or invalid.
                status: "401"
              schema:
                $ref: '#/components/schemas/Error'
          description: User has not been authenticated.
        "403":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM
                  API.
                status: "403"
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorized to use this API.
        "404":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Group Domain btud - Pod 04 - CitrixApps - Cymba OMS was not
                  found.
                status: "404"
              schema:
                $ref: '#/components/schemas/Error'
          description: Group not found.
        "429":
          content:
            application/json:
              example:
                message: API rate limit exceeded
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: User is accessing this API too frequently.
        "500":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error.
      summary: Get a group.
      tags:
      - Groups
      x-accepts: application/json
    patch:
      description: Modify a specific group resource (i.e. add, replace, or remove
        attributes of a group resource.)
      operationId: modifyGroup
      parameters:
      - description: ID of resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Attribute whitelist filter string. A comma-separated list of
          resource attribute names to be returned in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *excludedAttributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: attributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attribute blacklist filter string. A comma-separated list of
          resource attribute names to be excluded in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *attributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: excludedAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Non-standard attribute filter string. A comma-separated list
          of resource attribute names to be included in the response, complementing
          the set of attributes that would be returned by default. Attribute names
          must be specified in standard attribute notation (see [RFC 7644 section
          3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This
          parameter cannot be used with the *attributes* or *excludedAttributes* parameters.
        explode: false
        in: query
        name: additionalAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        $ref: '#/components/requestBodies/patchGroupResource'
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/GroupResource'
          description: Success.
        "400":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                scimType: invalidValue
                detail: Provided resource contains invalid data.
                status: "400"
              schema:
                $ref: '#/components/schemas/Error'
          description: Patch request invalid.
        "401":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FactSet credentials are missing or invalid.
                status: "401"
              schema:
                $ref: '#/components/schemas/Error'
          description: User has not been authenticated.
        "403":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM
                  API.
                status: "403"
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorized to use this API.
        "429":
          content:
            application/json:
              example:
                message: API rate limit exceeded
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: User is accessing this API too frequently.
        "500":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error.
        "501":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: The requested operation is not currently supported.
                status: "501"
              schema:
                $ref: '#/components/schemas/Error'
          description: Operation is not supported.
      summary: Patch a group.
      tags:
      - Groups
      x-contentType: application/scim+json
      x-accepts: application/json
    put:
      description: Replace a specific group resource with another provided group resource.
      operationId: replaceGroup
      parameters:
      - description: ID of resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Attribute whitelist filter string. A comma-separated list of
          resource attribute names to be returned in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *excludedAttributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: attributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attribute blacklist filter string. A comma-separated list of
          resource attribute names to be excluded in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *attributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: excludedAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Non-standard attribute filter string. A comma-separated list
          of resource attribute names to be included in the response, complementing
          the set of attributes that would be returned by default. Attribute names
          must be specified in standard attribute notation (see [RFC 7644 section
          3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This
          parameter cannot be used with the *attributes* or *excludedAttributes* parameters.
        explode: false
        in: query
        name: additionalAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        $ref: '#/components/requestBodies/groupResource'
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/GroupResource'
          description: Success.
        "400":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                scimType: invalidValue
                detail: Provided resource contains invalid data.
                status: "400"
              schema:
                $ref: '#/components/schemas/Error'
          description: Provided resource contains invalid data.
        "401":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FactSet credentials are missing or invalid.
                status: "401"
              schema:
                $ref: '#/components/schemas/Error'
          description: User has not been authenticated.
        "403":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM
                  API.
                status: "403"
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorized to use this API.
        "404":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Group Domain btud - Pod 04 - CitrixApps - Cymba OMS was not
                  found.
                status: "404"
              schema:
                $ref: '#/components/schemas/Error'
          description: Group not found.
        "429":
          content:
            application/json:
              example:
                message: API rate limit exceeded
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: User is accessing this API too frequently.
        "500":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error.
      summary: Replace a group.
      tags:
      - Groups
      x-contentType: application/scim+json
      x-accepts: application/json
  /Locations:
    get:
      description: Get a list of location resources.
      operationId: getLocations
      parameters:
      - description: Resource filter string. See [RFC 7644 section 3.4.2.2](https://tools.ietf.org/html/rfc7644#section-3.4.2.2)
          for syntax. Note this API implementation also supports a non-standard "re"
          operator for regular expression matching against string attributes. When
          using the "re" operator, do not include slash characters as delimiters (e.g.
          use "foo" instead of "/foo/".) Also note the case-sensitivity of the regular
          expression corresponds to the "caseExact" characteristic of the target attribute.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: Attribute to be used for sorting resources. See [RFC 7644 section
          3.4.2.3](https://tools.ietf.org/html/rfc7644#section-3.4.2.3). The attribute
          name must be specified in standard attribute notation (see [RFC 7644 section
          3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) Use
          the *sortOrder* parameter to specify whether resources should be sorted
          in ascending or descending order.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: The order by which resources are to be sorted. See [RFC 7644
          section 3.4.2.3](https://tools.ietf.org/html/rfc7644#section-3.4.2.3). Valid
          values are ''ascending'' (the default value) or ''descending''. This parameter
          may not be used unless the *sortBy* parameter is also specified.
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          type: string
        style: form
      - description: Result start index. The one-based index of the first result to
          be returned in the list of resources. For example, to exclude the first
          two resources, use a *startIndex* value of 3. This parameter has a default
          value of 1. This index applies *after* any resource filtration has been
          applied as specified by the *filter* argument.
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          type: integer
        style: form
      - description: Maximum resource count. The server will not return more resources
          than this value, although it may return fewer.
        explode: true
        in: query
        name: count
        required: false
        schema:
          type: integer
        style: form
      - description: Attribute whitelist filter string. A comma-separated list of
          resource attribute names to be returned in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *excludedAttributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: attributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attribute blacklist filter string. A comma-separated list of
          resource attribute names to be excluded in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *attributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: excludedAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Non-standard attribute filter string. A comma-separated list
          of resource attribute names to be included in the response, complementing
          the set of attributes that would be returned by default. Attribute names
          must be specified in standard attribute notation (see [RFC 7644 section
          3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This
          parameter cannot be used with the *attributes* or *excludedAttributes* parameters.
        explode: false
        in: query
        name: additionalAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/LocationResourceList'
          description: Success.
        "400":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                scimType: invalidFilter
                detail: Invalid filter value.
                status: "400"
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filter value provided.
        "401":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FactSet credentials are missing or invalid.
                status: "401"
              schema:
                $ref: '#/components/schemas/Error'
          description: User has not been authenticated.
        "403":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM
                  API.
                status: "403"
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorized to use this API.
        "429":
          content:
            application/json:
              example:
                message: API rate limit exceeded
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: User is accessing this API too frequently.
        "500":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error.
      summary: Get a list of locations.
      tags:
      - Locations
      x-accepts: application/json
    post:
      description: Create a location resource.
      operationId: createLocation
      parameters:
      - description: Attribute whitelist filter string. A comma-separated list of
          resource attribute names to be returned in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *excludedAttributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: attributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attribute blacklist filter string. A comma-separated list of
          resource attribute names to be excluded in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *attributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: excludedAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Non-standard attribute filter string. A comma-separated list
          of resource attribute names to be included in the response, complementing
          the set of attributes that would be returned by default. Attribute names
          must be specified in standard attribute notation (see [RFC 7644 section
          3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This
          parameter cannot be used with the *attributes* or *excludedAttributes* parameters.
        explode: false
        in: query
        name: additionalAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        $ref: '#/components/requestBodies/locationResource'
      responses:
        "201":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/LocationResource'
          description: Success.
        "400":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                scimType: invalidValue
                detail: Provided resource contains invalid data.
                status: "400"
              schema:
                $ref: '#/components/schemas/Error'
          description: Provided resource contains invalid data.
        "401":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FactSet credentials are missing or invalid.
                status: "401"
              schema:
                $ref: '#/components/schemas/Error'
          description: User has not been authenticated.
        "403":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM
                  API.
                status: "403"
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorized to use this API.
        "429":
          content:
            application/json:
              example:
                message: API rate limit exceeded
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: User is accessing this API too frequently.
        "500":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error.
      summary: Create a location.
      tags:
      - Locations
      x-contentType: application/scim+json
      x-accepts: application/json
  /Locations/{id}:
    get:
      description: Get a specific location resource.
      operationId: getLocation
      parameters:
      - description: ID of resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Attribute whitelist filter string. A comma-separated list of
          resource attribute names to be returned in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *excludedAttributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: attributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attribute blacklist filter string. A comma-separated list of
          resource attribute names to be excluded in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *attributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: excludedAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Non-standard attribute filter string. A comma-separated list
          of resource attribute names to be included in the response, complementing
          the set of attributes that would be returned by default. Attribute names
          must be specified in standard attribute notation (see [RFC 7644 section
          3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This
          parameter cannot be used with the *attributes* or *excludedAttributes* parameters.
        explode: false
        in: query
        name: additionalAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/LocationResource'
          description: Success.
        "401":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FactSet credentials are missing or invalid.
                status: "401"
              schema:
                $ref: '#/components/schemas/Error'
          description: User has not been authenticated.
        "403":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM
                  API.
                status: "403"
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorized to use this API.
        "404":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Location 1598276 was not found.
                status: "404"
              schema:
                $ref: '#/components/schemas/Error'
          description: Location not found.
        "429":
          content:
            application/json:
              example:
                message: API rate limit exceeded
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: User is accessing this API too frequently.
        "500":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error.
      summary: Get a location.
      tags:
      - Locations
      x-accepts: application/json
    patch:
      description: Modify a specific location resource (i.e. add, replace, or remove
        attributes of a location resource.)
      operationId: modifyLocation
      parameters:
      - description: ID of resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Attribute whitelist filter string. A comma-separated list of
          resource attribute names to be returned in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *excludedAttributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: attributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attribute blacklist filter string. A comma-separated list of
          resource attribute names to be excluded in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *attributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: excludedAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Non-standard attribute filter string. A comma-separated list
          of resource attribute names to be included in the response, complementing
          the set of attributes that would be returned by default. Attribute names
          must be specified in standard attribute notation (see [RFC 7644 section
          3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This
          parameter cannot be used with the *attributes* or *excludedAttributes* parameters.
        explode: false
        in: query
        name: additionalAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        $ref: '#/components/requestBodies/patchLocationResource'
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/LocationResource'
          description: Success.
        "400":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                scimType: invalidValue
                detail: Provided resource contains invalid data.
                status: "400"
              schema:
                $ref: '#/components/schemas/Error'
          description: Patch request invalid.
        "401":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FactSet credentials are missing or invalid.
                status: "401"
              schema:
                $ref: '#/components/schemas/Error'
          description: User has not been authenticated.
        "403":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM
                  API.
                status: "403"
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorized to use this API.
        "429":
          content:
            application/json:
              example:
                message: API rate limit exceeded
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: User is accessing this API too frequently.
        "500":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error.
        "501":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: The requested operation is not currently supported.
                status: "501"
              schema:
                $ref: '#/components/schemas/Error'
          description: Operation is not supported.
      summary: Patch a location.
      tags:
      - Locations
      x-contentType: application/scim+json
      x-accepts: application/json
    put:
      description: Replace a specific location resource with another provided location
        resource.
      operationId: replaceLocation
      parameters:
      - description: ID of resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Attribute whitelist filter string. A comma-separated list of
          resource attribute names to be returned in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *excludedAttributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: attributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attribute blacklist filter string. A comma-separated list of
          resource attribute names to be excluded in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *attributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: excludedAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Non-standard attribute filter string. A comma-separated list
          of resource attribute names to be included in the response, complementing
          the set of attributes that would be returned by default. Attribute names
          must be specified in standard attribute notation (see [RFC 7644 section
          3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This
          parameter cannot be used with the *attributes* or *excludedAttributes* parameters.
        explode: false
        in: query
        name: additionalAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        $ref: '#/components/requestBodies/locationResource'
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/LocationResource'
          description: Success.
        "400":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                scimType: invalidValue
                detail: Provided resource contains invalid data.
                status: "400"
              schema:
                $ref: '#/components/schemas/Error'
          description: Provided resource contains invalid data.
        "401":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FactSet credentials are missing or invalid.
                status: "401"
              schema:
                $ref: '#/components/schemas/Error'
          description: User has not been authenticated.
        "403":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM
                  API.
                status: "403"
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorized to use this API.
        "404":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Location 1598276 was not found.
                status: "404"
              schema:
                $ref: '#/components/schemas/Error'
          description: Location not found.
        "429":
          content:
            application/json:
              example:
                message: API rate limit exceeded
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: User is accessing this API too frequently.
        "500":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error.
      summary: Replace a location.
      tags:
      - Locations
      x-contentType: application/scim+json
      x-accepts: application/json
  /FirmDescriptions:
    get:
      description: Get a list of firm description resources.
      operationId: getFirmDescriptions
      parameters:
      - description: Resource filter string. See [RFC 7644 section 3.4.2.2](https://tools.ietf.org/html/rfc7644#section-3.4.2.2)
          for syntax. Note this API implementation also supports a non-standard "re"
          operator for regular expression matching against string attributes. When
          using the "re" operator, do not include slash characters as delimiters (e.g.
          use "foo" instead of "/foo/".) Also note the case-sensitivity of the regular
          expression corresponds to the "caseExact" characteristic of the target attribute.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: Attribute to be used for sorting resources. See [RFC 7644 section
          3.4.2.3](https://tools.ietf.org/html/rfc7644#section-3.4.2.3). The attribute
          name must be specified in standard attribute notation (see [RFC 7644 section
          3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) Use
          the *sortOrder* parameter to specify whether resources should be sorted
          in ascending or descending order.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: The order by which resources are to be sorted. See [RFC 7644
          section 3.4.2.3](https://tools.ietf.org/html/rfc7644#section-3.4.2.3). Valid
          values are ''ascending'' (the default value) or ''descending''. This parameter
          may not be used unless the *sortBy* parameter is also specified.
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          type: string
        style: form
      - description: Result start index. The one-based index of the first result to
          be returned in the list of resources. For example, to exclude the first
          two resources, use a *startIndex* value of 3. This parameter has a default
          value of 1. This index applies *after* any resource filtration has been
          applied as specified by the *filter* argument.
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          type: integer
        style: form
      - description: Maximum resource count. The server will not return more resources
          than this value, although it may return fewer.
        explode: true
        in: query
        name: count
        required: false
        schema:
          type: integer
        style: form
      - description: Attribute whitelist filter string. A comma-separated list of
          resource attribute names to be returned in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *excludedAttributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: attributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attribute blacklist filter string. A comma-separated list of
          resource attribute names to be excluded in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *attributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: excludedAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Non-standard attribute filter string. A comma-separated list
          of resource attribute names to be included in the response, complementing
          the set of attributes that would be returned by default. Attribute names
          must be specified in standard attribute notation (see [RFC 7644 section
          3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This
          parameter cannot be used with the *attributes* or *excludedAttributes* parameters.
        explode: false
        in: query
        name: additionalAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/FirmDescriptionResourceList'
          description: Success.
        "400":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                scimType: invalidFilter
                detail: Invalid filter value.
                status: "400"
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filter value provided.
        "401":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FactSet credentials are missing or invalid.
                status: "401"
              schema:
                $ref: '#/components/schemas/Error'
          description: User has not been authenticated.
        "403":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM
                  API.
                status: "403"
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorized to use this API.
        "429":
          content:
            application/json:
              example:
                message: API rate limit exceeded
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: User is accessing this API too frequently.
        "500":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error.
      summary: Get a list of firm descriptions.
      tags:
      - FirmDescriptions
      x-accepts: application/json
  /FirmDescriptions/{id}:
    get:
      description: Get a specific firm description resource.
      operationId: getFirmDescription
      parameters:
      - description: ID of resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Attribute whitelist filter string. A comma-separated list of
          resource attribute names to be returned in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *excludedAttributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: attributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attribute blacklist filter string. A comma-separated list of
          resource attribute names to be excluded in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *attributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: excludedAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Non-standard attribute filter string. A comma-separated list
          of resource attribute names to be included in the response, complementing
          the set of attributes that would be returned by default. Attribute names
          must be specified in standard attribute notation (see [RFC 7644 section
          3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This
          parameter cannot be used with the *attributes* or *excludedAttributes* parameters.
        explode: false
        in: query
        name: additionalAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/FirmDescriptionResource'
          description: Success.
        "401":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FactSet credentials are missing or invalid.
                status: "401"
              schema:
                $ref: '#/components/schemas/Error'
          description: User has not been authenticated.
        "403":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM
                  API.
                status: "403"
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorized to use this API.
        "404":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FirmDescription 1 was not found.
                status: "404"
              schema:
                $ref: '#/components/schemas/Error'
          description: Firm description not found.
        "429":
          content:
            application/json:
              example:
                message: API rate limit exceeded
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: User is accessing this API too frequently.
        "500":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error.
      summary: Get a firm description.
      tags:
      - FirmDescriptions
      x-accepts: application/json
  /UserClasses:
    get:
      description: Get a list of user class resources.
      operationId: getUserClasses
      parameters:
      - description: Resource filter string. See [RFC 7644 section 3.4.2.2](https://tools.ietf.org/html/rfc7644#section-3.4.2.2)
          for syntax. Note this API implementation also supports a non-standard "re"
          operator for regular expression matching against string attributes. When
          using the "re" operator, do not include slash characters as delimiters (e.g.
          use "foo" instead of "/foo/".) Also note the case-sensitivity of the regular
          expression corresponds to the "caseExact" characteristic of the target attribute.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: Attribute to be used for sorting resources. See [RFC 7644 section
          3.4.2.3](https://tools.ietf.org/html/rfc7644#section-3.4.2.3). The attribute
          name must be specified in standard attribute notation (see [RFC 7644 section
          3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) Use
          the *sortOrder* parameter to specify whether resources should be sorted
          in ascending or descending order.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: The order by which resources are to be sorted. See [RFC 7644
          section 3.4.2.3](https://tools.ietf.org/html/rfc7644#section-3.4.2.3). Valid
          values are ''ascending'' (the default value) or ''descending''. This parameter
          may not be used unless the *sortBy* parameter is also specified.
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          type: string
        style: form
      - description: Result start index. The one-based index of the first result to
          be returned in the list of resources. For example, to exclude the first
          two resources, use a *startIndex* value of 3. This parameter has a default
          value of 1. This index applies *after* any resource filtration has been
          applied as specified by the *filter* argument.
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          type: integer
        style: form
      - description: Maximum resource count. The server will not return more resources
          than this value, although it may return fewer.
        explode: true
        in: query
        name: count
        required: false
        schema:
          type: integer
        style: form
      - description: Attribute whitelist filter string. A comma-separated list of
          resource attribute names to be returned in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *excludedAttributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: attributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attribute blacklist filter string. A comma-separated list of
          resource attribute names to be excluded in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *attributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: excludedAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Non-standard attribute filter string. A comma-separated list
          of resource attribute names to be included in the response, complementing
          the set of attributes that would be returned by default. Attribute names
          must be specified in standard attribute notation (see [RFC 7644 section
          3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This
          parameter cannot be used with the *attributes* or *excludedAttributes* parameters.
        explode: false
        in: query
        name: additionalAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/UserClassResourceList'
          description: Success.
        "400":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                scimType: invalidFilter
                detail: Invalid filter value.
                status: "400"
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filter value provided.
        "401":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FactSet credentials are missing or invalid.
                status: "401"
              schema:
                $ref: '#/components/schemas/Error'
          description: User has not been authenticated.
        "403":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM
                  API.
                status: "403"
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorized to use this API.
        "429":
          content:
            application/json:
              example:
                message: API rate limit exceeded
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: User is accessing this API too frequently.
        "500":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error.
      summary: Get a list of user classes.
      tags:
      - UserClasses
      x-accepts: application/json
  /UserClasses/{id}:
    get:
      description: Get a specific user class resource.
      operationId: getUserClass
      parameters:
      - description: ID of resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Attribute whitelist filter string. A comma-separated list of
          resource attribute names to be returned in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *excludedAttributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: attributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attribute blacklist filter string. A comma-separated list of
          resource attribute names to be excluded in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *attributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: excludedAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Non-standard attribute filter string. A comma-separated list
          of resource attribute names to be included in the response, complementing
          the set of attributes that would be returned by default. Attribute names
          must be specified in standard attribute notation (see [RFC 7644 section
          3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This
          parameter cannot be used with the *attributes* or *excludedAttributes* parameters.
        explode: false
        in: query
        name: additionalAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/UserClassResource'
          description: Success.
        "401":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FactSet credentials are missing or invalid.
                status: "401"
              schema:
                $ref: '#/components/schemas/Error'
          description: User has not been authenticated.
        "403":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM
                  API.
                status: "403"
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorized to use this API.
        "404":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: UserClass 1 was not found.
                status: "404"
              schema:
                $ref: '#/components/schemas/Error'
          description: User class not found.
        "429":
          content:
            application/json:
              example:
                message: API rate limit exceeded
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: User is accessing this API too frequently.
        "500":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error.
      summary: Get a user class.
      tags:
      - UserClasses
      x-accepts: application/json
  /UserPositions:
    get:
      description: Get a list of user position resources.
      operationId: getUserPositions
      parameters:
      - description: Resource filter string. See [RFC 7644 section 3.4.2.2](https://tools.ietf.org/html/rfc7644#section-3.4.2.2)
          for syntax. Note this API implementation also supports a non-standard "re"
          operator for regular expression matching against string attributes. When
          using the "re" operator, do not include slash characters as delimiters (e.g.
          use "foo" instead of "/foo/".) Also note the case-sensitivity of the regular
          expression corresponds to the "caseExact" characteristic of the target attribute.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: Attribute to be used for sorting resources. See [RFC 7644 section
          3.4.2.3](https://tools.ietf.org/html/rfc7644#section-3.4.2.3). The attribute
          name must be specified in standard attribute notation (see [RFC 7644 section
          3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) Use
          the *sortOrder* parameter to specify whether resources should be sorted
          in ascending or descending order.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: The order by which resources are to be sorted. See [RFC 7644
          section 3.4.2.3](https://tools.ietf.org/html/rfc7644#section-3.4.2.3). Valid
          values are ''ascending'' (the default value) or ''descending''. This parameter
          may not be used unless the *sortBy* parameter is also specified.
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          type: string
        style: form
      - description: Result start index. The one-based index of the first result to
          be returned in the list of resources. For example, to exclude the first
          two resources, use a *startIndex* value of 3. This parameter has a default
          value of 1. This index applies *after* any resource filtration has been
          applied as specified by the *filter* argument.
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          type: integer
        style: form
      - description: Maximum resource count. The server will not return more resources
          than this value, although it may return fewer.
        explode: true
        in: query
        name: count
        required: false
        schema:
          type: integer
        style: form
      - description: Attribute whitelist filter string. A comma-separated list of
          resource attribute names to be returned in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *excludedAttributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: attributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attribute blacklist filter string. A comma-separated list of
          resource attribute names to be excluded in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *attributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: excludedAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Non-standard attribute filter string. A comma-separated list
          of resource attribute names to be included in the response, complementing
          the set of attributes that would be returned by default. Attribute names
          must be specified in standard attribute notation (see [RFC 7644 section
          3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This
          parameter cannot be used with the *attributes* or *excludedAttributes* parameters.
        explode: false
        in: query
        name: additionalAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/UserPositionResourceList'
          description: Success.
        "400":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                scimType: invalidFilter
                detail: Invalid filter value.
                status: "400"
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filter value provided.
        "401":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FactSet credentials are missing or invalid.
                status: "401"
              schema:
                $ref: '#/components/schemas/Error'
          description: User has not been authenticated.
        "403":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM
                  API.
                status: "403"
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorized to use this API.
        "429":
          content:
            application/json:
              example:
                message: API rate limit exceeded
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: User is accessing this API too frequently.
        "500":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error.
      summary: Get a list of user positions.
      tags:
      - UserPositions
      x-accepts: application/json
  /UserPositions/{id}:
    get:
      description: Get a specific user position resource.
      operationId: getUserPosition
      parameters:
      - description: ID of resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Attribute whitelist filter string. A comma-separated list of
          resource attribute names to be returned in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *excludedAttributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: attributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attribute blacklist filter string. A comma-separated list of
          resource attribute names to be excluded in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *attributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: excludedAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Non-standard attribute filter string. A comma-separated list
          of resource attribute names to be included in the response, complementing
          the set of attributes that would be returned by default. Attribute names
          must be specified in standard attribute notation (see [RFC 7644 section
          3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This
          parameter cannot be used with the *attributes* or *excludedAttributes* parameters.
        explode: false
        in: query
        name: additionalAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/UserPositionResource'
          description: Success.
        "401":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FactSet credentials are missing or invalid.
                status: "401"
              schema:
                $ref: '#/components/schemas/Error'
          description: User has not been authenticated.
        "403":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM
                  API.
                status: "403"
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorized to use this API.
        "404":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: UserPosition 1 was not found.
                status: "404"
              schema:
                $ref: '#/components/schemas/Error'
          description: User position not found.
        "429":
          content:
            application/json:
              example:
                message: API rate limit exceeded
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: User is accessing this API too frequently.
        "500":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error.
      summary: Get a user position.
      tags:
      - UserPositions
      x-accepts: application/json
  /Products:
    get:
      description: Get a list of product resources.
      operationId: getProducts
      parameters:
      - description: Resource filter string. See [RFC 7644 section 3.4.2.2](https://tools.ietf.org/html/rfc7644#section-3.4.2.2)
          for syntax. Note this API implementation also supports a non-standard "re"
          operator for regular expression matching against string attributes. When
          using the "re" operator, do not include slash characters as delimiters (e.g.
          use "foo" instead of "/foo/".) Also note the case-sensitivity of the regular
          expression corresponds to the "caseExact" characteristic of the target attribute.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: Attribute to be used for sorting resources. See [RFC 7644 section
          3.4.2.3](https://tools.ietf.org/html/rfc7644#section-3.4.2.3). The attribute
          name must be specified in standard attribute notation (see [RFC 7644 section
          3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) Use
          the *sortOrder* parameter to specify whether resources should be sorted
          in ascending or descending order.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: The order by which resources are to be sorted. See [RFC 7644
          section 3.4.2.3](https://tools.ietf.org/html/rfc7644#section-3.4.2.3). Valid
          values are ''ascending'' (the default value) or ''descending''. This parameter
          may not be used unless the *sortBy* parameter is also specified.
        explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          type: string
        style: form
      - description: Result start index. The one-based index of the first result to
          be returned in the list of resources. For example, to exclude the first
          two resources, use a *startIndex* value of 3. This parameter has a default
          value of 1. This index applies *after* any resource filtration has been
          applied as specified by the *filter* argument.
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          type: integer
        style: form
      - description: Maximum resource count. The server will not return more resources
          than this value, although it may return fewer.
        explode: true
        in: query
        name: count
        required: false
        schema:
          type: integer
        style: form
      - description: Attribute whitelist filter string. A comma-separated list of
          resource attribute names to be returned in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *excludedAttributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: attributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attribute blacklist filter string. A comma-separated list of
          resource attribute names to be excluded in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *attributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: excludedAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Non-standard attribute filter string. A comma-separated list
          of resource attribute names to be included in the response, complementing
          the set of attributes that would be returned by default. Attribute names
          must be specified in standard attribute notation (see [RFC 7644 section
          3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This
          parameter cannot be used with the *attributes* or *excludedAttributes* parameters.
        explode: false
        in: query
        name: additionalAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ProductResourceList'
          description: Success.
        "400":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                scimType: invalidFilter
                detail: Invalid filter value.
                status: "400"
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filter value provided.
        "401":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FactSet credentials are missing or invalid.
                status: "401"
              schema:
                $ref: '#/components/schemas/Error'
          description: User has not been authenticated.
        "403":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM
                  API.
                status: "403"
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorized to use this API.
        "429":
          content:
            application/json:
              example:
                message: API rate limit exceeded
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: User is accessing this API too frequently.
        "500":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error.
      summary: Get a list of products.
      tags:
      - Products
      x-accepts: application/json
  /Products/{id}:
    get:
      description: Get a specific product resource.
      operationId: getProduct
      parameters:
      - description: ID of resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Attribute whitelist filter string. A comma-separated list of
          resource attribute names to be returned in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *excludedAttributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: attributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attribute blacklist filter string. A comma-separated list of
          resource attribute names to be excluded in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *attributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: excludedAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Non-standard attribute filter string. A comma-separated list
          of resource attribute names to be included in the response, complementing
          the set of attributes that would be returned by default. Attribute names
          must be specified in standard attribute notation (see [RFC 7644 section
          3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This
          parameter cannot be used with the *attributes* or *excludedAttributes* parameters.
        explode: false
        in: query
        name: additionalAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ProductResource'
          description: Success.
        "401":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FactSet credentials are missing or invalid.
                status: "401"
              schema:
                $ref: '#/components/schemas/Error'
          description: User has not been authenticated.
        "403":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM
                  API.
                status: "403"
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorized to use this API.
        "404":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Product 6781 was not found.
                status: "404"
              schema:
                $ref: '#/components/schemas/Error'
          description: Product not found.
        "429":
          content:
            application/json:
              example:
                message: API rate limit exceeded
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: User is accessing this API too frequently.
        "500":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error.
      summary: Get a product.
      tags:
      - Products
      x-accepts: application/json
  /Federations:
    get:
      description: Get a list of federation resources.
      operationId: getFederations
      parameters:
      - description: Resource filter string. See [RFC 7644 section 3.4.2.2](https://tools.ietf.org/html/rfc7644#section-3.4.2.2)
          for syntax. Note this API implementation also supports a non-standard "re"
          operator for regular expression matching against string attributes. When
          using the "re" operator, do not include slash characters as delimiters (e.g.
          use "foo" instead of "/foo/".) Also note the case-sensitivity of the regular
          expression corresponds to the "caseExact" characteristic of the target attribute.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: Result start index. The one-based index of the first result to
          be returned in the list of resources. For example, to exclude the first
          two resources, use a *startIndex* value of 3. This parameter has a default
          value of 1. This index applies *after* any resource filtration has been
          applied as specified by the *filter* argument.
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          type: integer
        style: form
      - description: Maximum resource count. The server will not return more resources
          than this value, although it may return fewer.
        explode: true
        in: query
        name: count
        required: false
        schema:
          type: integer
        style: form
      - description: Attribute whitelist filter string. A comma-separated list of
          resource attribute names to be returned in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *excludedAttributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: attributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attribute blacklist filter string. A comma-separated list of
          resource attribute names to be excluded in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *attributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: excludedAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Non-standard attribute filter string. A comma-separated list
          of resource attribute names to be included in the response, complementing
          the set of attributes that would be returned by default. Attribute names
          must be specified in standard attribute notation (see [RFC 7644 section
          3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This
          parameter cannot be used with the *attributes* or *excludedAttributes* parameters.
        explode: false
        in: query
        name: additionalAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/FederationResourceList'
          description: Success.
        "400":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                scimType: invalidFilter
                detail: Invalid filter value.
                status: "400"
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid filter value provided.
        "401":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FactSet credentials are missing or invalid.
                status: "401"
              schema:
                $ref: '#/components/schemas/Error'
          description: User has not been authenticated.
        "403":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM
                  API.
                status: "403"
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorized to use this API.
        "429":
          content:
            application/json:
              example:
                message: API rate limit exceeded
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: User is accessing this API too frequently.
        "500":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error.
      summary: Get a list of federations.
      tags:
      - Federations
      x-accepts: application/json
  /Federations/{id}:
    get:
      description: Get a specific federation resource.
      operationId: getFederation
      parameters:
      - description: ID of resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Attribute whitelist filter string. A comma-separated list of
          resource attribute names to be returned in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *excludedAttributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: attributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attribute blacklist filter string. A comma-separated list of
          resource attribute names to be excluded in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *attributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: excludedAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Non-standard attribute filter string. A comma-separated list
          of resource attribute names to be included in the response, complementing
          the set of attributes that would be returned by default. Attribute names
          must be specified in standard attribute notation (see [RFC 7644 section
          3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This
          parameter cannot be used with the *attributes* or *excludedAttributes* parameters.
        explode: false
        in: query
        name: additionalAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/FederationResource'
          description: Success.
        "401":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FactSet credentials are missing or invalid.
                status: "401"
              schema:
                $ref: '#/components/schemas/Error'
          description: User has not been authenticated.
        "403":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM
                  API.
                status: "403"
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorized to use this API.
        "404":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Federation "foo" was not found.
                status: "404"
              schema:
                $ref: '#/components/schemas/Error'
          description: Federation not found.
        "429":
          content:
            application/json:
              example:
                message: API rate limit exceeded
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: User is accessing this API too frequently.
        "500":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error.
      summary: Get a federation.
      tags:
      - Federations
      x-accepts: application/json
    patch:
      description: Modify a specific federation resource (i.e. add, replace, or remove
        attributes of a federation resource.)
      operationId: modifyFederation
      parameters:
      - description: ID of resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Attribute whitelist filter string. A comma-separated list of
          resource attribute names to be returned in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *excludedAttributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: attributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attribute blacklist filter string. A comma-separated list of
          resource attribute names to be excluded in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *attributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: excludedAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Non-standard attribute filter string. A comma-separated list
          of resource attribute names to be included in the response, complementing
          the set of attributes that would be returned by default. Attribute names
          must be specified in standard attribute notation (see [RFC 7644 section
          3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This
          parameter cannot be used with the *attributes* or *excludedAttributes* parameters.
        explode: false
        in: query
        name: additionalAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        $ref: '#/components/requestBodies/patchFederationResource'
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/FederationResource'
          description: Success.
        "400":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                scimType: invalidValue
                detail: Provided resource contains invalid data.
                status: "400"
              schema:
                $ref: '#/components/schemas/Error'
          description: Patch request invalid.
        "401":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FactSet credentials are missing or invalid.
                status: "401"
              schema:
                $ref: '#/components/schemas/Error'
          description: User has not been authenticated.
        "403":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM
                  API.
                status: "403"
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorized to use this API.
        "429":
          content:
            application/json:
              example:
                message: API rate limit exceeded
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: User is accessing this API too frequently.
        "500":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error.
      summary: Patch a federation.
      tags:
      - Federations
      x-contentType: application/scim+json
      x-accepts: application/json
    put:
      description: Replace a specific federation resource with another provided federation
        resource.
      operationId: replaceFederation
      parameters:
      - description: ID of resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Attribute whitelist filter string. A comma-separated list of
          resource attribute names to be returned in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *excludedAttributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: attributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Attribute blacklist filter string. A comma-separated list of
          resource attribute names to be excluded in the response, overriding the
          set of attributes that would be returned by default. Attribute names must
          be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
          This parameter cannot be used with the *attributes* or *additionalAttributes*
          parameters.
        explode: false
        in: query
        name: excludedAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Non-standard attribute filter string. A comma-separated list
          of resource attribute names to be included in the response, complementing
          the set of attributes that would be returned by default. Attribute names
          must be specified in standard attribute notation (see [RFC 7644 section
          3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This
          parameter cannot be used with the *attributes* or *excludedAttributes* parameters.
        explode: false
        in: query
        name: additionalAttributes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        $ref: '#/components/requestBodies/federationResource'
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/FederationResource'
          description: Success.
        "400":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                scimType: invalidValue
                detail: Provided resource contains invalid data.
                status: "400"
              schema:
                $ref: '#/components/schemas/Error'
          description: Provided resource contains invalid data.
        "401":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FactSet credentials are missing or invalid.
                status: "401"
              schema:
                $ref: '#/components/schemas/Error'
          description: User has not been authenticated.
        "403":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM
                  API.
                status: "403"
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorized to use this API.
        "404":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User FIN_WEALTH-123456 was not found.
                status: "404"
              schema:
                $ref: '#/components/schemas/Error'
          description: User not found.
        "429":
          content:
            application/json:
              example:
                message: API rate limit exceeded
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: User is accessing this API too frequently.
        "500":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error.
      summary: Replace a federation.
      tags:
      - Federations
      x-contentType: application/scim+json
      x-accepts: application/json
  /FileManagerAudit:
    get:
      description: Get a list of File Manager file paths and associated information,
        such as user permissions.
      operationId: getFileManagerAudit
      responses:
        "200":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/FileManagerAudit'
          description: Success.
        "401":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FactSet credentials are missing or invalid.
                status: "401"
              schema:
                $ref: '#/components/schemas/Error'
          description: User has not been authenticated.
        "403":
          content:
            application/scim+json:
              example:
                schemas:
                - urn:ietf:params:scim:api:messages:2.0:Error
                detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM
                  API.
                status: "403"
              schema:
                $ref: '#/components/schemas/Error'
          description: User is not authorized to use this API.
        "429":
          content:
            application/json:
              example:
                message: API rate limit exceeded
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: User is accessing this API too frequently.
        "500":
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error.
      summary: Get File Manager audit data.
      tags:
      - FileManagerAudit
      x-accepts: application/json
components:
  parameters:
    resourceId:
      description: ID of resource.
      explode: false
      in: path
      name: id
      required: true
      schema:
        type: string
      style: simple
    filter:
      description: Resource filter string. See [RFC 7644 section 3.4.2.2](https://tools.ietf.org/html/rfc7644#section-3.4.2.2)
        for syntax. Note this API implementation also supports a non-standard "re"
        operator for regular expression matching against string attributes. When using
        the "re" operator, do not include slash characters as delimiters (e.g. use
        "foo" instead of "/foo/".) Also note the case-sensitivity of the regular expression
        corresponds to the "caseExact" characteristic of the target attribute.
      explode: true
      in: query
      name: filter
      required: false
      schema:
        type: string
      style: form
    sortBy:
      description: Attribute to be used for sorting resources. See [RFC 7644 section
        3.4.2.3](https://tools.ietf.org/html/rfc7644#section-3.4.2.3). The attribute
        name must be specified in standard attribute notation (see [RFC 7644 section
        3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) Use the
        *sortOrder* parameter to specify whether resources should be sorted in ascending
        or descending order.
      explode: true
      in: query
      name: sortBy
      required: false
      schema:
        type: string
      style: form
    sortOrder:
      description: The order by which resources are to be sorted. See [RFC 7644 section
        3.4.2.3](https://tools.ietf.org/html/rfc7644#section-3.4.2.3). Valid values
        are ''ascending'' (the default value) or ''descending''. This parameter may
        not be used unless the *sortBy* parameter is also specified.
      explode: true
      in: query
      name: sortOrder
      required: false
      schema:
        type: string
      style: form
    startIndex:
      description: Result start index. The one-based index of the first result to
        be returned in the list of resources. For example, to exclude the first two
        resources, use a *startIndex* value of 3. This parameter has a default value
        of 1. This index applies *after* any resource filtration has been applied
        as specified by the *filter* argument.
      explode: true
      in: query
      name: startIndex
      required: false
      schema:
        type: integer
      style: form
    count:
      description: Maximum resource count. The server will not return more resources
        than this value, although it may return fewer.
      explode: true
      in: query
      name: count
      required: false
      schema:
        type: integer
      style: form
    attributes:
      description: Attribute whitelist filter string. A comma-separated list of resource
        attribute names to be returned in the response, overriding the set of attributes
        that would be returned by default. Attribute names must be specified in standard
        attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
        This parameter cannot be used with the *excludedAttributes* or *additionalAttributes*
        parameters.
      explode: false
      in: query
      name: attributes
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
    excludedAttributes:
      description: Attribute blacklist filter string. A comma-separated list of resource
        attribute names to be excluded in the response, overriding the set of attributes
        that would be returned by default. Attribute names must be specified in standard
        attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
        This parameter cannot be used with the *attributes* or *additionalAttributes*
        parameters.
      explode: false
      in: query
      name: excludedAttributes
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
    additionalAttributes:
      description: Non-standard attribute filter string. A comma-separated list of
        resource attribute names to be included in the response, complementing the
        set of attributes that would be returned by default. Attribute names must
        be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).)
        This parameter cannot be used with the *attributes* or *excludedAttributes*
        parameters.
      explode: false
      in: query
      name: additionalAttributes
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
  requestBodies:
    userResource:
      content:
        application/scim+json:
          examples:
            Minimum:
              value:
                schemas:
                - urn:ietf:params:scim:schemas:core:2.0:User
                - urn:scim:schemas:extension:FactSet:Core:1.0:User
                name:
                  familyName: Doe
                  givenName: John
                email: jdoe@factset.com
                urn:scim:schemas:extension:FactSet:Core:1.0:User:
                  username: FIN_WEALTH
                  location:
                    value: "1598276"
            Expanded:
              value:
                schemas:
                - urn:ietf:params:scim:schemas:core:2.0:User
                - urn:scim:schemas:extension:FactSet:Core:1.0:User
                externalId: C3574707-FFF9-433C-A17F-DFF806C72A7F
                name:
                  familyName: Doe
                  givenName: John
                email: jdoe@factset.com
                urn:scim:schemas:extension:FactSet:Core:1.0:User:
                  username: FIN_WEALTH
                  location:
                    value: "1598276"
                  userTaxonomyData:
                    userClass:
                      value: "27"
                    userPosition:
                      value: "18"
                  roleName: Wealth Manager
                  products:
                  - value: "1396"
                  federations:
                  - value: 3ebd82c4-db65-4156-a9cc-890df9b63fbb
                    assertionValues:
                    - value: exampleAssertionValue
                  - value: d69a94b6-5f30-49f1-8d15-db42013c52bd
                    assertionValues:
                    - value: exampleAssertionValue
                  invoiceId: 9QMD
          schema:
            $ref: '#/components/schemas/UserResource'
      description: User resource.
      required: true
    patchUserResource:
      content:
        application/scim+json:
          example:
            schemas:
            - urn:ietf:params:scim:api:messages:2.0:PatchOp
            Operations:
            - op: replace
              path: urn:scim:schemas:extension:FactSet:Core:1.0:User:roleName
              value: Wealth Manager
          schema:
            $ref: '#/components/schemas/Patch'
    groupResource:
      content:
        application/scim+json:
          schema:
            $ref: '#/components/schemas/GroupResource'
      description: Group resource.
      required: true
    patchGroupResource:
      content:
        application/scim+json:
          example:
            schemas:
            - urn:ietf:params:scim:api:messages:2.0:PatchOp
            Operations:
            - op: add
              path: members
              value:
              - value: FIN_WEALTH-123456
          schema:
            $ref: '#/components/schemas/Patch'
    locationResource:
      content:
        application/scim+json:
          schema:
            $ref: '#/components/schemas/LocationResource'
      description: Location resource.
      required: true
    patchLocationResource:
      content:
        application/scim+json:
          example:
            schemas:
            - urn:ietf:params:scim:api:messages:2.0:PatchOp
            Operations:
            - op: replace
              path: externalId
              value: exampleExternalId
          schema:
            $ref: '#/components/schemas/Patch'
    federationResource:
      content:
        application/scim+json:
          schema:
            $ref: '#/components/schemas/FederationResource'
      description: Federation resource.
      required: true
    patchFederationResource:
      content:
        application/scim+json:
          example:
            schemas:
            - urn:ietf:params:scim:api:messages:2.0:PatchOp
            Operations:
            - op: add
              path: users
              value:
              - value: FDS_P2P_SCIM-1526135
                assertionValues:
                - value: john.doe@example.com
          schema:
            $ref: '#/components/schemas/Patch'
  responses:
    invalidFilterError:
      content:
        application/scim+json:
          example:
            schemas:
            - urn:ietf:params:scim:api:messages:2.0:Error
            scimType: invalidFilter
            detail: Invalid filter value.
            status: "400"
          schema:
            $ref: '#/components/schemas/Error'
      description: Invalid filter value provided.
    invalidResourceProvidedError:
      content:
        application/scim+json:
          example:
            schemas:
            - urn:ietf:params:scim:api:messages:2.0:Error
            scimType: invalidValue
            detail: Provided resource contains invalid data.
            status: "400"
          schema:
            $ref: '#/components/schemas/Error'
      description: Provided resource contains invalid data.
    invalidPatchRequestError:
      content:
        application/scim+json:
          example:
            schemas:
            - urn:ietf:params:scim:api:messages:2.0:Error
            scimType: invalidValue
            detail: Provided resource contains invalid data.
            status: "400"
          schema:
            $ref: '#/components/schemas/Error'
      description: Patch request invalid.
    unauthorizedError:
      content:
        application/scim+json:
          example:
            schemas:
            - urn:ietf:params:scim:api:messages:2.0:Error
            detail: FactSet credentials are missing or invalid.
            status: "401"
          schema:
            $ref: '#/components/schemas/Error'
      description: User has not been authenticated.
    forbiddenError:
      content:
        application/scim+json:
          example:
            schemas:
            - urn:ietf:params:scim:api:messages:2.0:Error
            detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM API.
            status: "403"
          schema:
            $ref: '#/components/schemas/Error'
      description: User is not authorized to use this API.
    tooManyRequestsError:
      content:
        application/json:
          example:
            message: API rate limit exceeded
          schema:
            $ref: '#/components/schemas/inline_response_429'
      description: User is accessing this API too frequently.
    internalServerError:
      content:
        application/scim+json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Internal server error.
    notImplementedError:
      content:
        application/scim+json:
          example:
            schemas:
            - urn:ietf:params:scim:api:messages:2.0:Error
            detail: The requested operation is not currently supported.
            status: "501"
          schema:
            $ref: '#/components/schemas/Error'
      description: Operation is not supported.
    serviceProviderConfigSuccess:
      content:
        application/scim+json:
          schema:
            $ref: '#/components/schemas/ServiceProviderConfig'
      description: Success.
    schemaSuccess:
      content:
        application/scim+json:
          schema:
            $ref: '#/components/schemas/Schema'
      description: Success.
    schemasSuccess:
      content:
        application/scim+json:
          schema:
            $ref: '#/components/schemas/SchemaList'
      description: Success.
    userSuccess:
      content:
        application/scim+json:
          schema:
            $ref: '#/components/schemas/UserResource'
      description: Success.
    usersSuccess:
      content:
        application/scim+json:
          schema:
            $ref: '#/components/schemas/UserResourceList'
      description: Success.
    userNotFoundError:
      content:
        application/scim+json:
          example:
            schemas:
            - urn:ietf:params:scim:api:messages:2.0:Error
            detail: User FIN_WEALTH-123456 was not found.
            status: "404"
          schema:
            $ref: '#/components/schemas/Error'
      description: User not found.
    groupSuccess:
      content:
        application/scim+json:
          schema:
            $ref: '#/components/schemas/GroupResource'
      description: Success.
    groupsSuccess:
      content:
        application/scim+json:
          schema:
            $ref: '#/components/schemas/GroupResourceList'
      description: Success.
    groupNotFoundError:
      content:
        application/scim+json:
          example:
            schemas:
            - urn:ietf:params:scim:api:messages:2.0:Error
            detail: Group Domain btud - Pod 04 - CitrixApps - Cymba OMS was not found.
            status: "404"
          schema:
            $ref: '#/components/schemas/Error'
      description: Group not found.
    locationSuccess:
      content:
        application/scim+json:
          schema:
            $ref: '#/components/schemas/LocationResource'
      description: Success.
    locationsSuccess:
      content:
        application/scim+json:
          schema:
            $ref: '#/components/schemas/LocationResourceList'
      description: Success.
    locationNotFoundError:
      content:
        application/scim+json:
          example:
            schemas:
            - urn:ietf:params:scim:api:messages:2.0:Error
            detail: Location 1598276 was not found.
            status: "404"
          schema:
            $ref: '#/components/schemas/Error'
      description: Location not found.
    firmDescriptionSuccess:
      content:
        application/scim+json:
          schema:
            $ref: '#/components/schemas/FirmDescriptionResource'
      description: Success.
    firmDescriptionsSuccess:
      content:
        application/scim+json:
          schema:
            $ref: '#/components/schemas/FirmDescriptionResourceList'
      description: Success.
    firmDescriptionNotFoundError:
      content:
        application/scim+json:
          example:
            schemas:
            - urn:ietf:params:scim:api:messages:2.0:Error
            detail: FirmDescription 1 was not found.
            status: "404"
          schema:
            $ref: '#/components/schemas/Error'
      description: Firm description not found.
    userClassSuccess:
      content:
        application/scim+json:
          schema:
            $ref: '#/components/schemas/UserClassResource'
      description: Success.
    userClassesSuccess:
      content:
        application/scim+json:
          schema:
            $ref: '#/components/schemas/UserClassResourceList'
      description: Success.
    userClassNotFoundError:
      content:
        application/scim+json:
          example:
            schemas:
            - urn:ietf:params:scim:api:messages:2.0:Error
            detail: UserClass 1 was not found.
            status: "404"
          schema:
            $ref: '#/components/schemas/Error'
      description: User class not found.
    userPositionSuccess:
      content:
        application/scim+json:
          schema:
            $ref: '#/components/schemas/UserPositionResource'
      description: Success.
    userPositionsSuccess:
      content:
        application/scim+json:
          schema:
            $ref: '#/components/schemas/UserPositionResourceList'
      description: Success.
    userPositionNotFoundError:
      content:
        application/scim+json:
          example:
            schemas:
            - urn:ietf:params:scim:api:messages:2.0:Error
            detail: UserPosition 1 was not found.
            status: "404"
          schema:
            $ref: '#/components/schemas/Error'
      description: User position not found.
    productSuccess:
      content:
        application/scim+json:
          schema:
            $ref: '#/components/schemas/ProductResource'
      description: Success.
    productsSuccess:
      content:
        application/scim+json:
          schema:
            $ref: '#/components/schemas/ProductResourceList'
      description: Success.
    productNotFoundError:
      content:
        application/scim+json:
          example:
            schemas:
            - urn:ietf:params:scim:api:messages:2.0:Error
            detail: Product 6781 was not found.
            status: "404"
          schema:
            $ref: '#/components/schemas/Error'
      description: Product not found.
    federationSuccess:
      content:
        application/scim+json:
          schema:
            $ref: '#/components/schemas/FederationResource'
      description: Success.
    federationsSuccess:
      content:
        application/scim+json:
          schema:
            $ref: '#/components/schemas/FederationResourceList'
      description: Success.
    federationNotFoundError:
      content:
        application/scim+json:
          example:
            schemas:
            - urn:ietf:params:scim:api:messages:2.0:Error
            detail: Federation "foo" was not found.
            status: "404"
          schema:
            $ref: '#/components/schemas/Error'
      description: Federation not found.
    fileManagerAuditSuccess:
      content:
        application/scim+json:
          schema:
            $ref: '#/components/schemas/FileManagerAudit'
      description: Success.
  schemas:
    AuthenticationScheme:
      properties:
        type:
          description: The authentication scheme.
          readOnly: true
          type: string
        name:
          description: The common authentication scheme name, e.g., HTTP Basic.
          readOnly: true
          type: string
        description:
          description: A description of the authentication scheme.
          readOnly: true
          type: string
        specUri:
          description: An HTTP-addressable URL pointing to the authentication scheme's
            specification.
          format: url
          readOnly: true
          type: string
        documentationUri:
          description: An HTTP-addressable URL pointing to the authentication scheme's
            usage documentation.
          format: url
          readOnly: true
          type: string
      type: object
    ServiceProviderConfig:
      example:
        patch:
          supported: true
        filter:
          maxResults: 1000
          supported: true
        documentationUri: https://developer-staging.factset.com/api-catalog/scim-api
        authenticationSchemes:
        - type: oauth2
          name: OAuth 2.0
          description: FactSet OAuth 2.0 authentication.
          specUri: http://www.rfc-editor.org/info/rfc6749
          documentationUrl: https://developer.factset.com/learn/authentication-oauth2
        - type: httpbasic
          name: HTTP Basic
          description: FactSet API key authentication.
          specUri: http://www.rfc-editor.org/info/rfc7617
          documentationUrl: https://developer.factset.com/learn/authentication-api-key
        schemas:
        - urn:ietf:params:scim:schemas:core:2.0:ServiceProviderConfig
        etag:
          supported: false
        sort:
          supported: true
        bulk:
          maxPayloadSize: 0
          maxOperations: 0
          supported: false
        changePassword:
          supported: false
      properties:
        schemas:
          description: An array containing the standard schema URI used for identifying
            a service provider's configuration. See RFC 7643 section 5.
          example:
          - urn:ietf:params:scim:schemas:core:2.0:ServiceProviderConfig
          items:
            enum:
            - urn:ietf:params:scim:schemas:core:2.0:ServiceProviderConfig
            type: string
          maxItems: 1
          type: array
        documentationUri:
          description: An HTTP-addressable URL pointing to the service provider's
            human-consumable help documentation.
          example: https://developer-staging.factset.com/api-catalog/scim-api
          readOnly: true
          type: string
        patch:
          $ref: '#/components/schemas/ServiceProviderConfig_patch'
        bulk:
          $ref: '#/components/schemas/ServiceProviderConfig_bulk'
        filter:
          $ref: '#/components/schemas/ServiceProviderConfig_filter'
        changePassword:
          $ref: '#/components/schemas/ServiceProviderConfig_changePassword'
        sort:
          $ref: '#/components/schemas/ServiceProviderConfig_sort'
        etag:
          $ref: '#/components/schemas/ServiceProviderConfig_etag'
        authenticationSchemes:
          description: A complex type that specifies supported authentication scheme
            properties.
          example:
          - type: oauth2
            name: OAuth 2.0
            description: FactSet OAuth 2.0 authentication.
            specUri: http://www.rfc-editor.org/info/rfc6749
            documentationUrl: https://developer.factset.com/learn/authentication-oauth2
          - type: httpbasic
            name: HTTP Basic
            description: FactSet API key authentication.
            specUri: http://www.rfc-editor.org/info/rfc7617
            documentationUrl: https://developer.factset.com/learn/authentication-api-key
          items:
            $ref: '#/components/schemas/AuthenticationScheme'
          required:
          - description
          - name
          - type
          type: array
      required:
      - authenticationSchemes
      - bulk
      - changePassword
      - etag
      - filter
      - patch
      - sort
      type: object
    Schema:
      example:
        meta:
          location: https://api.factset.com/scim/v2/Schemas/urn:ietf:params:scim:schemas:core:2.0:User
          resourceType: Schema
        name: FactSet Core User
        description: FactSet core user details
        attributes:
        - name: username
          type: string
          multiValued: false
          description: A FactSet "username" is FactSet's logical structure for grouping
            serial numbers into like-groups based on roleName, geographical location
            or line of business.
          required: true
          caseExact: false
          mutability: immutable
          returned: default
          uniqueness: none
        - name: serialNumber
          type: string
          multiValued: false
          description: A serial number represents an individual's unique FactSet account
            identifier and base-workstation access. Serial numbers are allocated to
            an individual when a valid RoleName is present.
          required: false
          caseExact: false
          mutability: readOnly
          returned: default
          uniqueness: global
        - name: location
          type: complex
          multiValued: false
          description: The physical location associated with this user.
          required: false
          subAttributes:
          - name: value
            type: string
            multiValued: false
            description: Identifier of the Location.
            required: true
            caseExact: false
            mutability: readWrite
            returned: default
            uniqueness: none
          - name: $ref
            type: reference
            referenceTypes:
            - Location
            multiValued: false
            description: The URI corresponding to a SCIM resource that is this Location.
            required: false
            caseExact: false
            mutability: immutable
            returned: default
            uniqueness: none
          - name: display
            type: string
            multiValued: false
            description: A human-readable name, primarily used for display purposes.
            required: false
            caseExact: false
            mutability: immutable
            returned: default
            uniqueness: none
          mutability: readWrite
          returned: default
        - name: userTaxonomyData
          type: complex
          multiValued: false
          description: FactSet's classification of the user. Use taxonomy is composed
            of a user class as well as a user position.
          required: false
          subAttributes:
          - name: userClass
            type: complex
            multiValued: false
            description: FactSet's classification of the user's class. The set of
              available user classes is based on the firm description associated with
              the user's location.
            required: true
            subAttributes:
            - name: value
              type: string
              multiValued: false
              description: Identifier of the User Class.
              required: true
              caseExact: false
              mutability: readWrite
              returned: default
              uniqueness: none
            - name: $ref
              type: reference
              referenceTypes:
              - UserClass
              multiValued: false
              description: The URI corresponding to a SCIM resource that is this User
                Class.
              required: false
              caseExact: false
              mutability: readOnly
              returned: default
              uniqueness: none
            - name: display
              type: string
              multiValued: false
              description: A human-readable name, primarily used for display purposes.
              required: false
              caseExact: false
              mutability: readOnly
              returned: default
              uniqueness: none
            mutability: readWrite
            returned: default
          - name: userPosition
            type: complex
            multiValued: false
            description: FactSet's classification of the user's position. The set
              of available user positions is based on the user's class.
            required: true
            subAttributes:
            - name: value
              type: string
              multiValued: false
              description: Identifier of the User Position.
              required: true
              caseExact: false
              mutability: readWrite
              returned: default
              uniqueness: none
            - name: $ref
              type: reference
              referenceTypes:
              - UserPosition
              multiValued: false
              description: The URI corresponding to a SCIM resource that is this User
                Position.
              required: false
              caseExact: false
              mutability: readOnly
              returned: default
              uniqueness: none
            - name: display
              type: string
              multiValued: false
              description: A human-readable name, primarily used for display purposes.
              required: false
              caseExact: false
              mutability: readOnly
              returned: default
              uniqueness: none
            mutability: readWrite
            returned: default
          mutability: readWrite
          returned: default
        - name: roleName
          type: string
          multiValued: false
          description: Predetermined role of specific individual. Issues individual
            a base FactSet workstation and serial number. If passed as NULL a base-FactSet
            workstation will be allocated to the individual granting the individual
            a FactSet SerialNumber
          required: false
          caseExact: false
          mutability: readWrite
          returned: default
          uniqueness: none
        - name: products
          type: complex
          multiValued: true
          description: An array of FactSet products to allocate/remove from an individual.
            Individual must have a FactSet serial number associated with them.
          required: false
          subAttributes:
          - name: value
            type: string
            multiValued: false
            description: Identifier of the product.
            required: true
            caseExact: false
            mutability: immutable
            returned: default
            uniqueness: none
          - name: $ref
            type: reference
            referenceTypes:
            - Product
            multiValued: false
            description: The URI corresponding to this product.
            required: false
            caseExact: false
            mutability: immutable
            returned: default
            uniqueness: none
          - name: display
            type: string
            multiValued: false
            description: A human-readable name, primarily used for display purposes.
            required: false
            caseExact: false
            mutability: immutable
            returned: default
            uniqueness: none
          - name: rapidActivationStatus
            type: string
            multiValued: false
            description: Whether the associated product has been activated for the
              current month. Possible values are "eligible" and "active".
            required: false
            caseExact: false
            canonicalValues:
            - eligible
            - active
            mutability: readOnly
            returned: request
            uniqueness: none
          - name: activationHistoryMonths
            type: string
            multiValued: false
            description: A list of the most recent three months (including the current
              month) during which the associated product has been activated.
            required: false
            caseExact: false
            mutability: readOnly
            returned: request
            uniqueness: none
          mutability: readWrite
          returned: default
        - name: pendingProductOrders
          type: complex
          multiValued: true
          description: An array of pending FactSet product orders.
          required: false
          subAttributes:
          - name: product
            type: complex
            multiValued: false
            description: The FactSet product referenced by the order.
            required: true
            subAttributes:
            - name: value
              type: string
              multiValued: false
              description: Identifier of the product.
              required: true
              caseExact: false
              mutability: readOnly
              returned: default
              uniqueness: none
            - name: $ref
              type: reference
              referenceTypes:
              - Product
              multiValued: false
              description: The URI corresponding to this product.
              required: true
              caseExact: false
              mutability: readOnly
              returned: default
              uniqueness: none
            - name: display
              type: string
              multiValued: false
              description: A human-readable name, primarily used for display purposes.
              required: true
              caseExact: false
              mutability: readOnly
              returned: default
              uniqueness: none
            mutability: readOnly
            returned: default
          - name: type
            type: string
            multiValued: false
            description: Type of product order, e.g. ''Add'' or ''Remove''
            required: true
            caseExact: false
            mutability: readOnly
            returned: default
            uniqueness: none
          - name: status
            type: string
            multiValued: false
            description: Status of the pending product order.
            required: true
            caseExact: false
            mutability: readOnly
            returned: default
            uniqueness: none
          - name: transactionCode
            type: string
            multiValued: false
            description: A GUID that is the transaction code of the product order.
            required: true
            caseExact: false
            mutability: readOnly
            returned: default
            uniqueness: none
          - name: requested
            type: dateTime
            multiValued: false
            description: Date and time when product was ordered.
            required: true
            caseExact: false
            mutability: readOnly
            returned: default
            uniqueness: none
          mutability: readOnly
          returned: default
        - name: federations
          type: complex
          multiValued: true
          description: References to the federations in which the user has at least
            one assertion value.
          required: false
          subAttributes:
          - name: value
            type: string
            multiValued: false
            description: Identifier of the Federation.
            required: true
            caseExact: false
            mutability: immutable
            returned: default
            uniqueness: none
          - name: $ref
            type: reference
            referenceTypes:
            - Federation
            multiValued: false
            description: The URI corresponding to a SCIM resource that is this Federation.
            required: false
            caseExact: false
            mutability: readOnly
            returned: default
            uniqueness: none
          - name: display
            type: string
            multiValued: false
            description: A human-readable name, primarily used for display purposes.
            required: false
            caseExact: false
            mutability: readOnly
            returned: default
            uniqueness: none
          - name: assertionValues
            type: complex
            multiValued: true
            description: The assertion values the user has in this federation.
            required: true
            subAttributes:
            - name: value
              type: string
              multiValued: false
              description: The assertion value string itself.
              required: true
              caseExact: false
              mutability: immutable
              returned: default
              uniqueness: none
            mutability: readWrite
            returned: default
          mutability: readWrite
          returned: default
          uniqueness: none
        - name: invoiceId
          type: string
          multiValued: false
          description: The identifier of the invoice that should be associated with
            a new user for billing purposes. Note once an invoice ID has been assigned
            to a user, it cannot be modified via this API. If invoice ID re-assignment
            is necessary, please contact your FactSet representative.
          required: false
          caseExact: true
          mutability: immutable
          returned: default
          uniqueness: none
        id: urn:scim:schemas:extension:FactSet:Core:1.0:User
      properties:
        id:
          description: The unique URI of the schema. When applicable, service providers
            MUST specify the URI.
          example: urn:scim:schemas:extension:FactSet:Core:1.0:User
          readOnly: true
          type: string
        name:
          description: The schema's human-readable name.  When applicable, service
            providers MUST specify the name, e.g., 'User'.
          example: FactSet Core User
          readOnly: true
          type: string
        description:
          description: The schema's human-readable name.  When applicable, service
            providers MUST specify the name, e.g., 'User'.
          example: FactSet core user details
          readOnly: true
          type: string
        attributes:
          description: A complex attribute that includes the attributes of a schema.
          example:
          - name: username
            type: string
            multiValued: false
            description: A FactSet "username" is FactSet's logical structure for grouping
              serial numbers into like-groups based on roleName, geographical location
              or line of business.
            required: true
            caseExact: false
            mutability: immutable
            returned: default
            uniqueness: none
          - name: serialNumber
            type: string
            multiValued: false
            description: A serial number represents an individual's unique FactSet
              account identifier and base-workstation access. Serial numbers are allocated
              to an individual when a valid RoleName is present.
            required: false
            caseExact: false
            mutability: readOnly
            returned: default
            uniqueness: global
          - name: location
            type: complex
            multiValued: false
            description: The physical location associated with this user.
            required: false
            subAttributes:
            - name: value
              type: string
              multiValued: false
              description: Identifier of the Location.
              required: true
              caseExact: false
              mutability: readWrite
              returned: default
              uniqueness: none
            - name: $ref
              type: reference
              referenceTypes:
              - Location
              multiValued: false
              description: The URI corresponding to a SCIM resource that is this Location.
              required: false
              caseExact: false
              mutability: immutable
              returned: default
              uniqueness: none
            - name: display
              type: string
              multiValued: false
              description: A human-readable name, primarily used for display purposes.
              required: false
              caseExact: false
              mutability: immutable
              returned: default
              uniqueness: none
            mutability: readWrite
            returned: default
          - name: userTaxonomyData
            type: complex
            multiValued: false
            description: FactSet's classification of the user. Use taxonomy is composed
              of a user class as well as a user position.
            required: false
            subAttributes:
            - name: userClass
              type: complex
              multiValued: false
              description: FactSet's classification of the user's class. The set of
                available user classes is based on the firm description associated
                with the user's location.
              required: true
              subAttributes:
              - name: value
                type: string
                multiValued: false
                description: Identifier of the User Class.
                required: true
                caseExact: false
                mutability: readWrite
                returned: default
                uniqueness: none
              - name: $ref
                type: reference
                referenceTypes:
                - UserClass
                multiValued: false
                description: The URI corresponding to a SCIM resource that is this
                  User Class.
                required: false
                caseExact: false
                mutability: readOnly
                returned: default
                uniqueness: none
              - name: display
                type: string
                multiValued: false
                description: A human-readable name, primarily used for display purposes.
                required: false
                caseExact: false
                mutability: readOnly
                returned: default
                uniqueness: none
              mutability: readWrite
              returned: default
            - name: userPosition
              type: complex
              multiValued: false
              description: FactSet's classification of the user's position. The set
                of available user positions is based on the user's class.
              required: true
              subAttributes:
              - name: value
                type: string
                multiValued: false
                description: Identifier of the User Position.
                required: true
                caseExact: false
                mutability: readWrite
                returned: default
                uniqueness: none
              - name: $ref
                type: reference
                referenceTypes:
                - UserPosition
                multiValued: false
                description: The URI corresponding to a SCIM resource that is this
                  User Position.
                required: false
                caseExact: false
                mutability: readOnly
                returned: default
                uniqueness: none
              - name: display
                type: string
                multiValued: false
                description: A human-readable name, primarily used for display purposes.
                required: false
                caseExact: false
                mutability: readOnly
                returned: default
                uniqueness: none
              mutability: readWrite
              returned: default
            mutability: readWrite
            returned: default
          - name: roleName
            type: string
            multiValued: false
            description: Predetermined role of specific individual. Issues individual
              a base FactSet workstation and serial number. If passed as NULL a base-FactSet
              workstation will be allocated to the individual granting the individual
              a FactSet SerialNumber
            required: false
            caseExact: false
            mutability: readWrite
            returned: default
            uniqueness: none
          - name: products
            type: complex
            multiValued: true
            description: An array of FactSet products to allocate/remove from an individual.
              Individual must have a FactSet serial number associated with them.
            required: false
            subAttributes:
            - name: value
              type: string
              multiValued: false
              description: Identifier of the product.
              required: true
              caseExact: false
              mutability: immutable
              returned: default
              uniqueness: none
            - name: $ref
              type: reference
              referenceTypes:
              - Product
              multiValued: false
              description: The URI corresponding to this product.
              required: false
              caseExact: false
              mutability: immutable
              returned: default
              uniqueness: none
            - name: display
              type: string
              multiValued: false
              description: A human-readable name, primarily used for display purposes.
              required: false
              caseExact: false
              mutability: immutable
              returned: default
              uniqueness: none
            - name: rapidActivationStatus
              type: string
              multiValued: false
              description: Whether the associated product has been activated for the
                current month. Possible values are "eligible" and "active".
              required: false
              caseExact: false
              canonicalValues:
              - eligible
              - active
              mutability: readOnly
              returned: request
              uniqueness: none
            - name: activationHistoryMonths
              type: string
              multiValued: false
              description: A list of the most recent three months (including the current
                month) during which the associated product has been activated.
              required: false
              caseExact: false
              mutability: readOnly
              returned: request
              uniqueness: none
            mutability: readWrite
            returned: default
          - name: pendingProductOrders
            type: complex
            multiValued: true
            description: An array of pending FactSet product orders.
            required: false
            subAttributes:
            - name: product
              type: complex
              multiValued: false
              description: The FactSet product referenced by the order.
              required: true
              subAttributes:
              - name: value
                type: string
                multiValued: false
                description: Identifier of the product.
                required: true
                caseExact: false
                mutability: readOnly
                returned: default
                uniqueness: none
              - name: $ref
                type: reference
                referenceTypes:
                - Product
                multiValued: false
                description: The URI corresponding to this product.
                required: true
                caseExact: false
                mutability: readOnly
                returned: default
                uniqueness: none
              - name: display
                type: string
                multiValued: false
                description: A human-readable name, primarily used for display purposes.
                required: true
                caseExact: false
                mutability: readOnly
                returned: default
                uniqueness: none
              mutability: readOnly
              returned: default
            - name: type
              type: string
              multiValued: false
              description: Type of product order, e.g. ''Add'' or ''Remove''
              required: true
              caseExact: false
              mutability: readOnly
              returned: default
              uniqueness: none
            - name: status
              type: string
              multiValued: false
              description: Status of the pending product order.
              required: true
              caseExact: false
              mutability: readOnly
              returned: default
              uniqueness: none
            - name: transactionCode
              type: string
              multiValued: false
              description: A GUID that is the transaction code of the product order.
              required: true
              caseExact: false
              mutability: readOnly
              returned: default
              uniqueness: none
            - name: requested
              type: dateTime
              multiValued: false
              description: Date and time when product was ordered.
              required: true
              caseExact: false
              mutability: readOnly
              returned: default
              uniqueness: none
            mutability: readOnly
            returned: default
          - name: federations
            type: complex
            multiValued: true
            description: References to the federations in which the user has at least
              one assertion value.
            required: false
            subAttributes:
            - name: value
              type: string
              multiValued: false
              description: Identifier of the Federation.
              required: true
              caseExact: false
              mutability: immutable
              returned: default
              uniqueness: none
            - name: $ref
              type: reference
              referenceTypes:
              - Federation
              multiValued: false
              description: The URI corresponding to a SCIM resource that is this Federation.
              required: false
              caseExact: false
              mutability: readOnly
              returned: default
              uniqueness: none
            - name: display
              type: string
              multiValued: false
              description: A human-readable name, primarily used for display purposes.
              required: false
              caseExact: false
              mutability: readOnly
              returned: default
              uniqueness: none
            - name: assertionValues
              type: complex
              multiValued: true
              description: The assertion values the user has in this federation.
              required: true
              subAttributes:
              - name: value
                type: string
                multiValued: false
                description: The assertion value string itself.
                required: true
                caseExact: false
                mutability: immutable
                returned: default
                uniqueness: none
              mutability: readWrite
              returned: default
            mutability: readWrite
            returned: default
            uniqueness: none
          - name: invoiceId
            type: string
            multiValued: false
            description: The identifier of the invoice that should be associated with
              a new user for billing purposes. Note once an invoice ID has been assigned
              to a user, it cannot be modified via this API. If invoice ID re-assignment
              is necessary, please contact your FactSet representative.
            required: false
            caseExact: true
            mutability: immutable
            returned: default
            uniqueness: none
          items:
            $ref: '#/components/schemas/SchemaAttribute'
          readOnly: true
          type: array
        meta:
          $ref: '#/components/schemas/Schema_meta'
      required:
      - attributes
      - id
      - name
      type: object
    SchemaAttribute:
      properties:
        name:
          description: The attribute's name.
          readOnly: true
          type: string
        type:
          description: The attribute's data type.
          enum:
          - string
          - boolean
          - decimal
          - integer
          - dateTime
          - binary
          - reference
          - complex
          readOnly: true
          type: string
        multiValued:
          description: A Boolean value indicating an attribute's plurality.
          readOnly: true
          type: boolean
        description:
          description: A human-readable description of the attribute.
          readOnly: true
          type: string
        required:
          description: A boolean value indicating whether or not the attribute is
            required.
          readOnly: true
          type: boolean
        canonicalValues:
          description: A collection of canonical values.  When applicable, service
            providers MUST specify the canonical types, e.g.,  'work', 'home'.
          items:
            type: string
          readOnly: true
          type: array
        caseExact:
          description: A Boolean value indicating whether or not a string attribute
            is case sensitive.
          readOnly: true
          type: boolean
        mutability:
          description: Indicates whether or not an attribute is modifiable.
          enum:
          - readOnly
          - readWrite
          - immutable
          - writeOnly
          readOnly: true
          type: string
        returned:
          description: Indicates when an attribute is returned in a response (e.g.,
            to a query).
          enum:
          - always
          - never
          - default
          - request
          readOnly: true
          type: string
        uniqueness:
          description: Indicates how unique a value must be.
          enum:
          - none
          - server
          - global
          readOnly: true
          type: string
        referenceTypes:
          description: Used only with an attribute of type 'reference'.  Specifies
            a SCIM resourceType that a reference attribute MAY refer to, e.g., 'User'.
          items:
            type: string
          readOnly: true
          type: array
        subAttributes:
          description: Used to define the sub-attributes of a complex attribute.
          items:
            $ref: '#/components/schemas/SchemaSubAttribute'
          readOnly: true
          type: array
      required:
      - multiValued
      - name
      - type
      type: object
    SchemaSubAttribute:
      properties:
        name:
          description: The attribute's name.
          readOnly: true
          type: string
        type:
          description: The attribute's data type.
          enum:
          - string
          - boolean
          - decimal
          - integer
          - dateTime
          - binary
          - reference
          - complex
          readOnly: true
          type: string
        multiValued:
          description: A Boolean value indicating an attribute's plurality.
          readOnly: true
          type: boolean
        description:
          description: A human-readable description of the attribute.
          readOnly: true
          type: string
        required:
          description: A boolean value indicating whether or not the attribute is
            required.
          readOnly: true
          type: boolean
        canonicalValues:
          description: A collection of canonical values.  When applicable, service
            providers MUST specify the canonical types, e.g.,  'work', 'home'.
          items:
            type: string
          readOnly: true
          type: array
        caseExact:
          description: A Boolean value indicating whether or not a string attribute
            is case sensitive.
          readOnly: true
          type: boolean
        mutability:
          description: Indicates whether or not an attribute is modifiable.
          enum:
          - readOnly
          - readWrite
          - immutable
          - writeOnly
          readOnly: true
          type: string
        returned:
          description: Indicates when an attribute is returned in a response (e.g.,
            to a query).
          enum:
          - always
          - never
          - default
          - request
          readOnly: true
          type: string
        uniqueness:
          description: Indicates how unique a value must be.
          enum:
          - none
          - server
          - global
          readOnly: true
          type: string
        referenceTypes:
          description: Used only with an attribute of type 'reference'.  Specifies
            a SCIM resourceType that a reference attribute MAY refer to, e.g., 'User'.
          items:
            type: string
          readOnly: true
          type: array
      required:
      - multiValued
      - name
      - type
      type: object
    SchemaList:
      example:
        totalResults: 1
        schemas:
        - urn:ietf:params:scim:api:messages:2.0:ListResponse
        Resources:
        - meta:
            location: https://api.factset.com/scim/v2/Schemas/urn:ietf:params:scim:schemas:core:2.0:User
            resourceType: Schema
          name: FactSet Core User
          description: FactSet core user details
          attributes:
          - name: username
            type: string
            multiValued: false
            description: A FactSet "username" is FactSet's logical structure for grouping
              serial numbers into like-groups based on roleName, geographical location
              or line of business.
            required: true
            caseExact: false
            mutability: immutable
            returned: default
            uniqueness: none
          - name: serialNumber
            type: string
            multiValued: false
            description: A serial number represents an individual's unique FactSet
              account identifier and base-workstation access. Serial numbers are allocated
              to an individual when a valid RoleName is present.
            required: false
            caseExact: false
            mutability: readOnly
            returned: default
            uniqueness: global
          - name: location
            type: complex
            multiValued: false
            description: The physical location associated with this user.
            required: false
            subAttributes:
            - name: value
              type: string
              multiValued: false
              description: Identifier of the Location.
              required: true
              caseExact: false
              mutability: readWrite
              returned: default
              uniqueness: none
            - name: $ref
              type: reference
              referenceTypes:
              - Location
              multiValued: false
              description: The URI corresponding to a SCIM resource that is this Location.
              required: false
              caseExact: false
              mutability: immutable
              returned: default
              uniqueness: none
            - name: display
              type: string
              multiValued: false
              description: A human-readable name, primarily used for display purposes.
              required: false
              caseExact: false
              mutability: immutable
              returned: default
              uniqueness: none
            mutability: readWrite
            returned: default
          - name: userTaxonomyData
            type: complex
            multiValued: false
            description: FactSet's classification of the user. Use taxonomy is composed
              of a user class as well as a user position.
            required: false
            subAttributes:
            - name: userClass
              type: complex
              multiValued: false
              description: FactSet's classification of the user's class. The set of
                available user classes is based on the firm description associated
                with the user's location.
              required: true
              subAttributes:
              - name: value
                type: string
                multiValued: false
                description: Identifier of the User Class.
                required: true
                caseExact: false
                mutability: readWrite
                returned: default
                uniqueness: none
              - name: $ref
                type: reference
                referenceTypes:
                - UserClass
                multiValued: false
                description: The URI corresponding to a SCIM resource that is this
                  User Class.
                required: false
                caseExact: false
                mutability: readOnly
                returned: default
                uniqueness: none
              - name: display
                type: string
                multiValued: false
                description: A human-readable name, primarily used for display purposes.
                required: false
                caseExact: false
                mutability: readOnly
                returned: default
                uniqueness: none
              mutability: readWrite
              returned: default
            - name: userPosition
              type: complex
              multiValued: false
              description: FactSet's classification of the user's position. The set
                of available user positions is based on the user's class.
              required: true
              subAttributes:
              - name: value
                type: string
                multiValued: false
                description: Identifier of the User Position.
                required: true
                caseExact: false
                mutability: readWrite
                returned: default
                uniqueness: none
              - name: $ref
                type: reference
                referenceTypes:
                - UserPosition
                multiValued: false
                description: The URI corresponding to a SCIM resource that is this
                  User Position.
                required: false
                caseExact: false
                mutability: readOnly
                returned: default
                uniqueness: none
              - name: display
                type: string
                multiValued: false
                description: A human-readable name, primarily used for display purposes.
                required: false
                caseExact: false
                mutability: readOnly
                returned: default
                uniqueness: none
              mutability: readWrite
              returned: default
            mutability: readWrite
            returned: default
          - name: roleName
            type: string
            multiValued: false
            description: Predetermined role of specific individual. Issues individual
              a base FactSet workstation and serial number. If passed as NULL a base-FactSet
              workstation will be allocated to the individual granting the individual
              a FactSet SerialNumber
            required: false
            caseExact: false
            mutability: readWrite
            returned: default
            uniqueness: none
          - name: products
            type: complex
            multiValued: true
            description: An array of FactSet products to allocate/remove from an individual.
              Individual must have a FactSet serial number associated with them.
            required: false
            subAttributes:
            - name: value
              type: string
              multiValued: false
              description: Identifier of the product.
              required: true
              caseExact: false
              mutability: immutable
              returned: default
              uniqueness: none
            - name: $ref
              type: reference
              referenceTypes:
              - Product
              multiValued: false
              description: The URI corresponding to this product.
              required: false
              caseExact: false
              mutability: immutable
              returned: default
              uniqueness: none
            - name: display
              type: string
              multiValued: false
              description: A human-readable name, primarily used for display purposes.
              required: false
              caseExact: false
              mutability: immutable
              returned: default
              uniqueness: none
            - name: rapidActivationStatus
              type: string
              multiValued: false
              description: Whether the associated product has been activated for the
                current month. Possible values are "eligible" and "active".
              required: false
              caseExact: false
              canonicalValues:
              - eligible
              - active
              mutability: readOnly
              returned: request
              uniqueness: none
            - name: activationHistoryMonths
              type: string
              multiValued: false
              description: A list of the most recent three months (including the current
                month) during which the associated product has been activated.
              required: false
              caseExact: false
              mutability: readOnly
              returned: request
              uniqueness: none
            mutability: readWrite
            returned: default
          - name: pendingProductOrders
            type: complex
            multiValued: true
            description: An array of pending FactSet product orders.
            required: false
            subAttributes:
            - name: product
              type: complex
              multiValued: false
              description: The FactSet product referenced by the order.
              required: true
              subAttributes:
              - name: value
                type: string
                multiValued: false
                description: Identifier of the product.
                required: true
                caseExact: false
                mutability: readOnly
                returned: default
                uniqueness: none
              - name: $ref
                type: reference
                referenceTypes:
                - Product
                multiValued: false
                description: The URI corresponding to this product.
                required: true
                caseExact: false
                mutability: readOnly
                returned: default
                uniqueness: none
              - name: display
                type: string
                multiValued: false
                description: A human-readable name, primarily used for display purposes.
                required: true
                caseExact: false
                mutability: readOnly
                returned: default
                uniqueness: none
              mutability: readOnly
              returned: default
            - name: type
              type: string
              multiValued: false
              description: Type of product order, e.g. ''Add'' or ''Remove''
              required: true
              caseExact: false
              mutability: readOnly
              returned: default
              uniqueness: none
            - name: status
              type: string
              multiValued: false
              description: Status of the pending product order.
              required: true
              caseExact: false
              mutability: readOnly
              returned: default
              uniqueness: none
            - name: transactionCode
              type: string
              multiValued: false
              description: A GUID that is the transaction code of the product order.
              required: true
              caseExact: false
              mutability: readOnly
              returned: default
              uniqueness: none
            - name: requested
              type: dateTime
              multiValued: false
              description: Date and time when product was ordered.
              required: true
              caseExact: false
              mutability: readOnly
              returned: default
              uniqueness: none
            mutability: readOnly
            returned: default
          - name: federations
            type: complex
            multiValued: true
            description: References to the federations in which the user has at least
              one assertion value.
            required: false
            subAttributes:
            - name: value
              type: string
              multiValued: false
              description: Identifier of the Federation.
              required: true
              caseExact: false
              mutability: immutable
              returned: default
              uniqueness: none
            - name: $ref
              type: reference
              referenceTypes:
              - Federation
              multiValued: false
              description: The URI corresponding to a SCIM resource that is this Federation.
              required: false
              caseExact: false
              mutability: readOnly
              returned: default
              uniqueness: none
            - name: display
              type: string
              multiValued: false
              description: A human-readable name, primarily used for display purposes.
              required: false
              caseExact: false
              mutability: readOnly
              returned: default
              uniqueness: none
            - name: assertionValues
              type: complex
              multiValued: true
              description: The assertion values the user has in this federation.
              required: true
              subAttributes:
              - name: value
                type: string
                multiValued: false
                description: The assertion value string itself.
                required: true
                caseExact: false
                mutability: immutable
                returned: default
                uniqueness: none
              mutability: readWrite
              returned: default
            mutability: readWrite
            returned: default
            uniqueness: none
          - name: invoiceId
            type: string
            multiValued: false
            description: The identifier of the invoice that should be associated with
              a new user for billing purposes. Note once an invoice ID has been assigned
              to a user, it cannot be modified via this API. If invoice ID re-assignment
              is necessary, please contact your FactSet representative.
            required: false
            caseExact: true
            mutability: immutable
            returned: default
            uniqueness: none
          id: urn:scim:schemas:extension:FactSet:Core:1.0:User
        - meta:
            location: https://api.factset.com/scim/v2/Schemas/urn:ietf:params:scim:schemas:core:2.0:User
            resourceType: Schema
          name: FactSet Core User
          description: FactSet core user details
          attributes:
          - name: username
            type: string
            multiValued: false
            description: A FactSet "username" is FactSet's logical structure for grouping
              serial numbers into like-groups based on roleName, geographical location
              or line of business.
            required: true
            caseExact: false
            mutability: immutable
            returned: default
            uniqueness: none
          - name: serialNumber
            type: string
            multiValued: false
            description: A serial number represents an individual's unique FactSet
              account identifier and base-workstation access. Serial numbers are allocated
              to an individual when a valid RoleName is present.
            required: false
            caseExact: false
            mutability: readOnly
            returned: default
            uniqueness: global
          - name: location
            type: complex
            multiValued: false
            description: The physical location associated with this user.
            required: false
            subAttributes:
            - name: value
              type: string
              multiValued: false
              description: Identifier of the Location.
              required: true
              caseExact: false
              mutability: readWrite
              returned: default
              uniqueness: none
            - name: $ref
              type: reference
              referenceTypes:
              - Location
              multiValued: false
              description: The URI corresponding to a SCIM resource that is this Location.
              required: false
              caseExact: false
              mutability: immutable
              returned: default
              uniqueness: none
            - name: display
              type: string
              multiValued: false
              description: A human-readable name, primarily used for display purposes.
              required: false
              caseExact: false
              mutability: immutable
              returned: default
              uniqueness: none
            mutability: readWrite
            returned: default
          - name: userTaxonomyData
            type: complex
            multiValued: false
            description: FactSet's classification of the user. Use taxonomy is composed
              of a user class as well as a user position.
            required: false
            subAttributes:
            - name: userClass
              type: complex
              multiValued: false
              description: FactSet's classification of the user's class. The set of
                available user classes is based on the firm description associated
                with the user's location.
              required: true
              subAttributes:
              - name: value
                type: string
                multiValued: false
                description: Identifier of the User Class.
                required: true
                caseExact: false
                mutability: readWrite
                returned: default
                uniqueness: none
              - name: $ref
                type: reference
                referenceTypes:
                - UserClass
                multiValued: false
                description: The URI corresponding to a SCIM resource that is this
                  User Class.
                required: false
                caseExact: false
                mutability: readOnly
                returned: default
                uniqueness: none
              - name: display
                type: string
                multiValued: false
                description: A human-readable name, primarily used for display purposes.
                required: false
                caseExact: false
                mutability: readOnly
                returned: default
                uniqueness: none
              mutability: readWrite
              returned: default
            - name: userPosition
              type: complex
              multiValued: false
              description: FactSet's classification of the user's position. The set
                of available user positions is based on the user's class.
              required: true
              subAttributes:
              - name: value
                type: string
                multiValued: false
                description: Identifier of the User Position.
                required: true
                caseExact: false
                mutability: readWrite
                returned: default
                uniqueness: none
              - name: $ref
                type: reference
                referenceTypes:
                - UserPosition
                multiValued: false
                description: The URI corresponding to a SCIM resource that is this
                  User Position.
                required: false
                caseExact: false
                mutability: readOnly
                returned: default
                uniqueness: none
              - name: display
                type: string
                multiValued: false
                description: A human-readable name, primarily used for display purposes.
                required: false
                caseExact: false
                mutability: readOnly
                returned: default
                uniqueness: none
              mutability: readWrite
              returned: default
            mutability: readWrite
            returned: default
          - name: roleName
            type: string
            multiValued: false
            description: Predetermined role of specific individual. Issues individual
              a base FactSet workstation and serial number. If passed as NULL a base-FactSet
              workstation will be allocated to the individual granting the individual
              a FactSet SerialNumber
            required: false
            caseExact: false
            mutability: readWrite
            returned: default
            uniqueness: none
          - name: products
            type: complex
            multiValued: true
            description: An array of FactSet products to allocate/remove from an individual.
              Individual must have a FactSet serial number associated with them.
            required: false
            subAttributes:
            - name: value
              type: string
              multiValued: false
              description: Identifier of the product.
              required: true
              caseExact: false
              mutability: immutable
              returned: default
              uniqueness: none
            - name: $ref
              type: reference
              referenceTypes:
              - Product
              multiValued: false
              description: The URI corresponding to this product.
              required: false
              caseExact: false
              mutability: immutable
              returned: default
              uniqueness: none
            - name: display
              type: string
              multiValued: false
              description: A human-readable name, primarily used for display purposes.
              required: false
              caseExact: false
              mutability: immutable
              returned: default
              uniqueness: none
            - name: rapidActivationStatus
              type: string
              multiValued: false
              description: Whether the associated product has been activated for the
                current month. Possible values are "eligible" and "active".
              required: false
              caseExact: false
              canonicalValues:
              - eligible
              - active
              mutability: readOnly
              returned: request
              uniqueness: none
            - name: activationHistoryMonths
              type: string
              multiValued: false
              description: A list of the most recent three months (including the current
                month) during which the associated product has been activated.
              required: false
              caseExact: false
              mutability: readOnly
              returned: request
              uniqueness: none
            mutability: readWrite
            returned: default
          - name: pendingProductOrders
            type: complex
            multiValued: true
            description: An array of pending FactSet product orders.
            required: false
            subAttributes:
            - name: product
              type: complex
              multiValued: false
              description: The FactSet product referenced by the order.
              required: true
              subAttributes:
              - name: value
                type: string
                multiValued: false
                description: Identifier of the product.
                required: true
                caseExact: false
                mutability: readOnly
                returned: default
                uniqueness: none
              - name: $ref
                type: reference
                referenceTypes:
                - Product
                multiValued: false
                description: The URI corresponding to this product.
                required: true
                caseExact: false
                mutability: readOnly
                returned: default
                uniqueness: none
              - name: display
                type: string
                multiValued: false
                description: A human-readable name, primarily used for display purposes.
                required: true
                caseExact: false
                mutability: readOnly
                returned: default
                uniqueness: none
              mutability: readOnly
              returned: default
            - name: type
              type: string
              multiValued: false
              description: Type of product order, e.g. ''Add'' or ''Remove''
              required: true
              caseExact: false
              mutability: readOnly
              returned: default
              uniqueness: none
            - name: status
              type: string
              multiValued: false
              description: Status of the pending product order.
              required: true
              caseExact: false
              mutability: readOnly
              returned: default
              uniqueness: none
            - name: transactionCode
              type: string
              multiValued: false
              description: A GUID that is the transaction code of the product order.
              required: true
              caseExact: false
              mutability: readOnly
              returned: default
              uniqueness: none
            - name: requested
              type: dateTime
              multiValued: false
              description: Date and time when product was ordered.
              required: true
              caseExact: false
              mutability: readOnly
              returned: default
              uniqueness: none
            mutability: readOnly
            returned: default
          - name: federations
            type: complex
            multiValued: true
            description: References to the federations in which the user has at least
              one assertion value.
            required: false
            subAttributes:
            - name: value
              type: string
              multiValued: false
              description: Identifier of the Federation.
              required: true
              caseExact: false
              mutability: immutable
              returned: default
              uniqueness: none
            - name: $ref
              type: reference
              referenceTypes:
              - Federation
              multiValued: false
              description: The URI corresponding to a SCIM resource that is this Federation.
              required: false
              caseExact: false
              mutability: readOnly
              returned: default
              uniqueness: none
            - name: display
              type: string
              multiValued: false
              description: A human-readable name, primarily used for display purposes.
              required: false
              caseExact: false
              mutability: readOnly
              returned: default
              uniqueness: none
            - name: assertionValues
              type: complex
              multiValued: true
              description: The assertion values the user has in this federation.
              required: true
              subAttributes:
              - name: value
                type: string
                multiValued: false
                description: The assertion value string itself.
                required: true
                caseExact: false
                mutability: immutable
                returned: default
                uniqueness: none
              mutability: readWrite
              returned: default
            mutability: readWrite
            returned: default
            uniqueness: none
          - name: invoiceId
            type: string
            multiValued: false
            description: The identifier of the invoice that should be associated with
              a new user for billing purposes. Note once an invoice ID has been assigned
              to a user, it cannot be modified via this API. If invoice ID re-assignment
              is necessary, please contact your FactSet representative.
            required: false
            caseExact: true
            mutability: immutable
            returned: default
            uniqueness: none
          id: urn:scim:schemas:extension:FactSet:Core:1.0:User
      properties:
        schemas:
          example:
          - urn:ietf:params:scim:api:messages:2.0:ListResponse
          items:
            type: string
          type: array
        totalResults:
          example: 1
          type: integer
        Resources:
          items:
            $ref: '#/components/schemas/Schema'
          type: array
      type: object
    UserResource:
      example:
        meta:
          created: 2019-02-11T15:33:31.077Z
          location: https://api.factset.com/scim/v2/Users/FIN_WEALTH-123456
          lastModified: 2019-06-07T08:59:37Z
          resourceType: User
        schemas:
        - urn:ietf:params:scim:schemas:core:2.0:User
        - urn:scim:schemas:extension:FactSet:Core:1.0:User
        - urn:scim:schemas:extension:FactSet:VRS:1.0:User
        urn:scim:schemas:extension:FactSet:VRS:1.0:User:
          domainData:
          - domainCode: btud
            password: password
            tenancies:
              value: MASTER
            isAdministrator: false
          - domainCode: btud
            password: password
            tenancies:
              value: MASTER
            isAdministrator: false
        name:
          familyName: Doe
          givenName: John
        externalId: C3574707-FFF9-433C-A17F-DFF806C72A7F
        groups:
        - display: Domain btud - Pod 04 - CitrixApps - Cymba OMS
          value: Domain btud - Pod 04 - CitrixApps - Cymba OMS
          $ref: https://api.factset.com/scim/v2/Groups/Domain%20btud%20-%20Pod%2004%20-%20CitrixApps%20-%20Cymba%20OMS
        - display: Domain btud - Pod 04 - CitrixApps - Cymba OMS
          value: Domain btud - Pod 04 - CitrixApps - Cymba OMS
          $ref: https://api.factset.com/scim/v2/Groups/Domain%20btud%20-%20Pod%2004%20-%20CitrixApps%20-%20Cymba%20OMS
        id: FIN_WEALTH-123456
        userName: FIN_WEALTH-123456
        urn:scim:schemas:extension:FactSet:Core:1.0:User:
          serialNumber: "123456"
          royaltyClass: royaltyClass
          userTaxonomyData:
            userClass:
              display: Application Developer
              value: "20"
              $ref: https://api.factset.com/scim/v2/UserClasses/20
            userPosition:
              display: Application Developer
              value: "46"
              $ref: https://api.factset.com/scim/v2/UserPositions/46
          roleName: Wealth Manager
          location:
            display: FIN Wealth Management
            value: "1598276"
            $ref: https://api.factset.com/scim/v2/Locations/1598276
          invoiceId: 9QMD
          federations:
          - assertionValues:
            - value: john.doe@example.com
            - value: john.doe@example.com
            display: FooBar SAML federation
            value: d69a94b6-5f30-49f1-8d15-db42013c52bd
            $ref: https://api.factset.com/scim/v2/Federations/d69a94b6-5f30-49f1-8d15-db42013c52bd
          - assertionValues:
            - value: john.doe@example.com
            - value: john.doe@example.com
            display: FooBar SAML federation
            value: d69a94b6-5f30-49f1-8d15-db42013c52bd
            $ref: https://api.factset.com/scim/v2/Federations/d69a94b6-5f30-49f1-8d15-db42013c52bd
          pendingProductOrders:
          - product:
              display: FactSet Identity
              value: "6781"
              $ref: https://api.factset.com/scim/v2/Products/6781
            requested: 2019-06-07T08:59:37Z
            transactionCode: a8389967-e1ab-4987-822b-86b15857ad09
            type: Add
            status: Pending approval
          - product:
              display: FactSet Identity
              value: "6781"
              $ref: https://api.factset.com/scim/v2/Products/6781
            requested: 2019-06-07T08:59:37Z
            transactionCode: a8389967-e1ab-4987-822b-86b15857ad09
            type: Add
            status: Pending approval
          uniqueId: 1592F40D-40CF-445B-BDFD-38300F507891
          username: FIN_WEALTH
          products:
          - activationHistoryMonths:
            - 2025-08
            - 2025-07
            - 2025-06
            rapidActivationStatus: active
            display: Exchange NYSE American and Regionals - RT
            value: "11"
            $ref: https://api.factset.com/scim/v2/Products/11
          - activationHistoryMonths:
            - 2025-08
            - 2025-07
            - 2025-06
            rapidActivationStatus: active
            display: Exchange NYSE American and Regionals - RT
            value: "11"
            $ref: https://api.factset.com/scim/v2/Products/11
        email: jdoe@factset.com
        phoneNumbers:
        - display: (555) 867-5309
          type: work
          value: tel:5558675309
          primary: true
        - display: (555) 867-5309
          type: work
          value: tel:5558675309
          primary: true
      properties:
        schemas:
          example:
          - urn:ietf:params:scim:schemas:core:2.0:User
          - urn:scim:schemas:extension:FactSet:Core:1.0:User
          - urn:scim:schemas:extension:FactSet:VRS:1.0:User
          items:
            type: string
          type: array
        id:
          example: FIN_WEALTH-123456
          readOnly: true
          type: string
        externalId:
          description: An arbitrary identifier for the resource defined by the client.
            This can assist the client locate the resource through the use of search
            filters.
          example: C3574707-FFF9-433C-A17F-DFF806C72A7F
          type: string
        userName:
          description: Unique identifier for the User, typically used by the user
            to directly authenticate to the service provider. Each User MUST include
            a non-empty userName value.  This identifier MUST be unique across the
            service provider's entire set of Users.
          example: FIN_WEALTH-123456
          readOnly: true
          type: string
        name:
          $ref: '#/components/schemas/UserResource_name'
        email:
          description: Email addresses for the user.  The value SHOULD be canonicalized
            by the service provider, e.g., 'bjensen@example.com' instead of 'bjensen@EXAMPLE.COM'.
          example: jdoe@factset.com
          format: email
          type: string
        phoneNumbers:
          description: Phone numbers for the User.  The value SHOULD be canonicalized
            by the service provider according to the format specified in RFC 3966,
            e.g., 'tel:+1-201-555-0123'. Canonical type values of 'main', 'work',
            'mobile', and 'home'.
          items:
            $ref: '#/components/schemas/UserResourcePhoneNumber'
          readOnly: true
          type: array
        groups:
          description: A list of groups to which the user belongs, either through
            direct membership, through nested groups, or dynamically calculated.
          items:
            $ref: '#/components/schemas/UserResourceGroup'
          readOnly: true
          type: array
        urn:scim:schemas:extension:FactSet:Core:1.0:User:
          $ref: '#/components/schemas/UserResource_urn_scim_schemas_extension_FactSet_Core_1_0_User'
        urn:scim:schemas:extension:FactSet:VRS:1.0:User:
          $ref: '#/components/schemas/UserResource_urn_scim_schemas_extension_FactSet_VRS_1_0_User'
        meta:
          $ref: '#/components/schemas/UserResource_meta'
      required:
      - email
      - name
      type: object
    UserResourcePhoneNumber:
      example:
        display: (555) 867-5309
        type: work
        value: tel:5558675309
        primary: true
      properties:
        value:
          description: Phone number of the User.
          example: tel:5558675309
          readOnly: true
          type: string
        display:
          description: A human-readable name, primarily used for display purposes.  READ-ONLY.
          example: (555) 867-5309
          readOnly: true
          type: string
        type:
          description: A label indicating the attribute's function, e.g., 'work',
            'home', 'mobile'.
          example: work
          readOnly: true
          type: string
        primary:
          description: A Boolean value indicating the 'primary' or preferred attribute
            value for this attribute, e.g., the preferred phone number or primary
            phone number.  The primary attribute value 'true' MUST appear no more
            than once.
          example: true
          readOnly: true
          type: boolean
      type: object
    UserResourceGroup:
      example:
        display: Domain btud - Pod 04 - CitrixApps - Cymba OMS
        value: Domain btud - Pod 04 - CitrixApps - Cymba OMS
        $ref: https://api.factset.com/scim/v2/Groups/Domain%20btud%20-%20Pod%2004%20-%20CitrixApps%20-%20Cymba%20OMS
      properties:
        value:
          description: The identifier of the User's group.
          example: Domain btud - Pod 04 - CitrixApps - Cymba OMS
          readOnly: true
          type: string
        $ref:
          description: The URI of the corresponding 'Group' resource to which the
            user belongs.
          example: https://api.factset.com/scim/v2/Groups/Domain%20btud%20-%20Pod%2004%20-%20CitrixApps%20-%20Cymba%20OMS
          readOnly: true
          type: string
        display:
          description: A human-readable name, primarily used for display purposes.  READ-ONLY.
          example: Domain btud - Pod 04 - CitrixApps - Cymba OMS
          readOnly: true
          type: string
      type: object
    UserResourceVRSDomainData:
      example:
        domainCode: btud
        password: password
        tenancies:
          value: MASTER
        isAdministrator: false
      properties:
        domainCode:
          description: Unique identifier for the Vermilion domain.
          example: btud
          type: string
        tenancies:
          $ref: '#/components/schemas/UserResourceVRSDomainData_tenancies'
        isAdministrator:
          description: Whether the User is an administrator in the associated domain.
          example: false
          type: boolean
        password:
          description: Password of the User in the associated domain. May be null
            upon creation of the User, but afterward may not change from a non-null
            to a null value.
          type: string
      required:
      - domainCode
      - isAdministrator
      - tenancies
      type: object
    UserResourceList:
      example:
        totalResults: 1
        schemas:
        - urn:ietf:params:scim:api:messages:2.0:ListResponse
        Resources:
        - meta:
            created: 2019-02-11T15:33:31.077Z
            location: https://api.factset.com/scim/v2/Users/FIN_WEALTH-123456
            lastModified: 2019-06-07T08:59:37Z
            resourceType: User
          schemas:
          - urn:ietf:params:scim:schemas:core:2.0:User
          - urn:scim:schemas:extension:FactSet:Core:1.0:User
          - urn:scim:schemas:extension:FactSet:VRS:1.0:User
          urn:scim:schemas:extension:FactSet:VRS:1.0:User:
            domainData:
            - domainCode: btud
              password: password
              tenancies:
                value: MASTER
              isAdministrator: false
            - domainCode: btud
              password: password
              tenancies:
                value: MASTER
              isAdministrator: false
          name:
            familyName: Doe
            givenName: John
          externalId: C3574707-FFF9-433C-A17F-DFF806C72A7F
          groups:
          - display: Domain btud - Pod 04 - CitrixApps - Cymba OMS
            value: Domain btud - Pod 04 - CitrixApps - Cymba OMS
            $ref: https://api.factset.com/scim/v2/Groups/Domain%20btud%20-%20Pod%2004%20-%20CitrixApps%20-%20Cymba%20OMS
          - display: Domain btud - Pod 04 - CitrixApps - Cymba OMS
            value: Domain btud - Pod 04 - CitrixApps - Cymba OMS
            $ref: https://api.factset.com/scim/v2/Groups/Domain%20btud%20-%20Pod%2004%20-%20CitrixApps%20-%20Cymba%20OMS
          id: FIN_WEALTH-123456
          userName: FIN_WEALTH-123456
          urn:scim:schemas:extension:FactSet:Core:1.0:User:
            serialNumber: "123456"
            royaltyClass: royaltyClass
            userTaxonomyData:
              userClass:
                display: Application Developer
                value: "20"
                $ref: https://api.factset.com/scim/v2/UserClasses/20
              userPosition:
                display: Application Developer
                value: "46"
                $ref: https://api.factset.com/scim/v2/UserPositions/46
            roleName: Wealth Manager
            location:
              display: FIN Wealth Management
              value: "1598276"
              $ref: https://api.factset.com/scim/v2/Locations/1598276
            invoiceId: 9QMD
            federations:
            - assertionValues:
              - value: john.doe@example.com
              - value: john.doe@example.com
              display: FooBar SAML federation
              value: d69a94b6-5f30-49f1-8d15-db42013c52bd
              $ref: https://api.factset.com/scim/v2/Federations/d69a94b6-5f30-49f1-8d15-db42013c52bd
            - assertionValues:
              - value: john.doe@example.com
              - value: john.doe@example.com
              display: FooBar SAML federation
              value: d69a94b6-5f30-49f1-8d15-db42013c52bd
              $ref: https://api.factset.com/scim/v2/Federations/d69a94b6-5f30-49f1-8d15-db42013c52bd
            pendingProductOrders:
            - product:
                display: FactSet Identity
                value: "6781"
                $ref: https://api.factset.com/scim/v2/Products/6781
              requested: 2019-06-07T08:59:37Z
              transactionCode: a8389967-e1ab-4987-822b-86b15857ad09
              type: Add
              status: Pending approval
            - product:
                display: FactSet Identity
                value: "6781"
                $ref: https://api.factset.com/scim/v2/Products/6781
              requested: 2019-06-07T08:59:37Z
              transactionCode: a8389967-e1ab-4987-822b-86b15857ad09
              type: Add
              status: Pending approval
            uniqueId: 1592F40D-40CF-445B-BDFD-38300F507891
            username: FIN_WEALTH
            products:
            - activationHistoryMonths:
              - 2025-08
              - 2025-07
              - 2025-06
              rapidActivationStatus: active
              display: Exchange NYSE American and Regionals - RT
              value: "11"
              $ref: https://api.factset.com/scim/v2/Products/11
            - activationHistoryMonths:
              - 2025-08
              - 2025-07
              - 2025-06
              rapidActivationStatus: active
              display: Exchange NYSE American and Regionals - RT
              value: "11"
              $ref: https://api.factset.com/scim/v2/Products/11
          email: jdoe@factset.com
          phoneNumbers:
          - display: (555) 867-5309
            type: work
            value: tel:5558675309
            primary: true
          - display: (555) 867-5309
            type: work
            value: tel:5558675309
            primary: true
        - meta:
            created: 2019-02-11T15:33:31.077Z
            location: https://api.factset.com/scim/v2/Users/FIN_WEALTH-123456
            lastModified: 2019-06-07T08:59:37Z
            resourceType: User
          schemas:
          - urn:ietf:params:scim:schemas:core:2.0:User
          - urn:scim:schemas:extension:FactSet:Core:1.0:User
          - urn:scim:schemas:extension:FactSet:VRS:1.0:User
          urn:scim:schemas:extension:FactSet:VRS:1.0:User:
            domainData:
            - domainCode: btud
              password: password
              tenancies:
                value: MASTER
              isAdministrator: false
            - domainCode: btud
              password: password
              tenancies:
                value: MASTER
              isAdministrator: false
          name:
            familyName: Doe
            givenName: John
          externalId: C3574707-FFF9-433C-A17F-DFF806C72A7F
          groups:
          - display: Domain btud - Pod 04 - CitrixApps - Cymba OMS
            value: Domain btud - Pod 04 - CitrixApps - Cymba OMS
            $ref: https://api.factset.com/scim/v2/Groups/Domain%20btud%20-%20Pod%2004%20-%20CitrixApps%20-%20Cymba%20OMS
          - display: Domain btud - Pod 04 - CitrixApps - Cymba OMS
            value: Domain btud - Pod 04 - CitrixApps - Cymba OMS
            $ref: https://api.factset.com/scim/v2/Groups/Domain%20btud%20-%20Pod%2004%20-%20CitrixApps%20-%20Cymba%20OMS
          id: FIN_WEALTH-123456
          userName: FIN_WEALTH-123456
          urn:scim:schemas:extension:FactSet:Core:1.0:User:
            serialNumber: "123456"
            royaltyClass: royaltyClass
            userTaxonomyData:
              userClass:
                display: Application Developer
                value: "20"
                $ref: https://api.factset.com/scim/v2/UserClasses/20
              userPosition:
                display: Application Developer
                value: "46"
                $ref: https://api.factset.com/scim/v2/UserPositions/46
            roleName: Wealth Manager
            location:
              display: FIN Wealth Management
              value: "1598276"
              $ref: https://api.factset.com/scim/v2/Locations/1598276
            invoiceId: 9QMD
            federations:
            - assertionValues:
              - value: john.doe@example.com
              - value: john.doe@example.com
              display: FooBar SAML federation
              value: d69a94b6-5f30-49f1-8d15-db42013c52bd
              $ref: https://api.factset.com/scim/v2/Federations/d69a94b6-5f30-49f1-8d15-db42013c52bd
            - assertionValues:
              - value: john.doe@example.com
              - value: john.doe@example.com
              display: FooBar SAML federation
              value: d69a94b6-5f30-49f1-8d15-db42013c52bd
              $ref: https://api.factset.com/scim/v2/Federations/d69a94b6-5f30-49f1-8d15-db42013c52bd
            pendingProductOrders:
            - product:
                display: FactSet Identity
                value: "6781"
                $ref: https://api.factset.com/scim/v2/Products/6781
              requested: 2019-06-07T08:59:37Z
              transactionCode: a8389967-e1ab-4987-822b-86b15857ad09
              type: Add
              status: Pending approval
            - product:
                display: FactSet Identity
                value: "6781"
                $ref: https://api.factset.com/scim/v2/Products/6781
              requested: 2019-06-07T08:59:37Z
              transactionCode: a8389967-e1ab-4987-822b-86b15857ad09
              type: Add
              status: Pending approval
            uniqueId: 1592F40D-40CF-445B-BDFD-38300F507891
            username: FIN_WEALTH
            products:
            - activationHistoryMonths:
              - 2025-08
              - 2025-07
              - 2025-06
              rapidActivationStatus: active
              display: Exchange NYSE American and Regionals - RT
              value: "11"
              $ref: https://api.factset.com/scim/v2/Products/11
            - activationHistoryMonths:
              - 2025-08
              - 2025-07
              - 2025-06
              rapidActivationStatus: active
              display: Exchange NYSE American and Regionals - RT
              value: "11"
              $ref: https://api.factset.com/scim/v2/Products/11
          email: jdoe@factset.com
          phoneNumbers:
          - display: (555) 867-5309
            type: work
            value: tel:5558675309
            primary: true
          - display: (555) 867-5309
            type: work
            value: tel:5558675309
            primary: true
      properties:
        schemas:
          example:
          - urn:ietf:params:scim:api:messages:2.0:ListResponse
          items:
            type: string
          type: array
        totalResults:
          example: 1
          type: integer
        Resources:
          items:
            $ref: '#/components/schemas/UserResource'
          type: array
      type: object
    GroupResource:
      example:
        displayName: Domain btud - Pod 04 - CitrixApps - Cymba OMS
        meta:
          created: 2019-02-11T15:33:31.077Z
          location: https://api.factset.com/scim/v2/Groups/eh%3Abtud%3APod%2004%20-%20CitrixApps%20-%20Cymba%20OMS
          lastModified: 2019-06-07T08:59:37Z
          resourceType: Group
        schemas:
        - urn:ietf:params:scim:schemas:core:2.0:Group
        - urn:scim:schemas:extension:FactSet:EnterpriseHosting:1.0:Group
        - urn:scim:schemas:extension:FactSet:VRS:1.0:Group
        members:
        - type: User
          value: FIN_WEALTH-123456
          $ref: https://api.factset.com/scim/v2/Users/FIN_WEALTH-123456
        - type: User
          value: FIN_WEALTH-123456
          $ref: https://api.factset.com/scim/v2/Users/FIN_WEALTH-123456
        externalId: B8FE8BBD-0E04-40B2-9BB3-E5EE17C4C9C9
        description: Group representing access to the Cymba OMS application.
        urn:scim:schemas:extension:FactSet:EnterpriseHosting:1.0:Group:
          domainCode: btud
        id: eh:btud:Pod 04 - CitrixApps - Cymba OMS
        urn:scim:schemas:extension:FactSet:VRS:1.0:Group:
          domainCode: btud
          tenant: QA
      properties:
        schemas:
          example:
          - urn:ietf:params:scim:schemas:core:2.0:Group
          - urn:scim:schemas:extension:FactSet:EnterpriseHosting:1.0:Group
          - urn:scim:schemas:extension:FactSet:VRS:1.0:Group
          items:
            type: string
          type: array
        id:
          example: eh:btud:Pod 04 - CitrixApps - Cymba OMS
          readOnly: true
          type: string
        externalId:
          description: An arbitrary identifier for the resource defined by the client.
            This can assist the client locate the resource through the use of search
            filters.
          example: B8FE8BBD-0E04-40B2-9BB3-E5EE17C4C9C9
          type: string
        displayName:
          description: A human-readable name for the Group.
          example: Domain btud - Pod 04 - CitrixApps - Cymba OMS
          type: string
        description:
          description: A description for the Group.
          example: Group representing access to the Cymba OMS application.
          type: string
        members:
          description: A list of members of the Group.
          items:
            $ref: '#/components/schemas/GroupResourceMember'
          type: array
        urn:scim:schemas:extension:FactSet:EnterpriseHosting:1.0:Group:
          $ref: '#/components/schemas/GroupResource_urn_scim_schemas_extension_FactSet_EnterpriseHosting_1_0_Group'
        urn:scim:schemas:extension:FactSet:VRS:1.0:Group:
          $ref: '#/components/schemas/GroupResource_urn_scim_schemas_extension_FactSet_VRS_1_0_Group'
        meta:
          $ref: '#/components/schemas/GroupResource_meta'
      type: object
    GroupResourceMember:
      example:
        type: User
        value: FIN_WEALTH-123456
        $ref: https://api.factset.com/scim/v2/Users/FIN_WEALTH-123456
      properties:
        value:
          description: Identifier of the member of this Group.
          example: FIN_WEALTH-123456
          type: string
        $ref:
          description: The URI corresponding to a SCIM resource that is a member of
            this Group.
          example: https://api.factset.com/scim/v2/Users/FIN_WEALTH-123456
          type: string
        type:
          description: A label indicating the type of resource, e.g., 'User' or 'Group'.
          example: User
          type: string
      type: object
    GroupResourceList:
      example:
        totalResults: 1
        schemas:
        - urn:ietf:params:scim:api:messages:2.0:ListResponse
        Resources:
        - displayName: Domain btud - Pod 04 - CitrixApps - Cymba OMS
          meta:
            created: 2019-02-11T15:33:31.077Z
            location: https://api.factset.com/scim/v2/Groups/eh%3Abtud%3APod%2004%20-%20CitrixApps%20-%20Cymba%20OMS
            lastModified: 2019-06-07T08:59:37Z
            resourceType: Group
          schemas:
          - urn:ietf:params:scim:schemas:core:2.0:Group
          - urn:scim:schemas:extension:FactSet:EnterpriseHosting:1.0:Group
          - urn:scim:schemas:extension:FactSet:VRS:1.0:Group
          members:
          - type: User
            value: FIN_WEALTH-123456
            $ref: https://api.factset.com/scim/v2/Users/FIN_WEALTH-123456
          - type: User
            value: FIN_WEALTH-123456
            $ref: https://api.factset.com/scim/v2/Users/FIN_WEALTH-123456
          externalId: B8FE8BBD-0E04-40B2-9BB3-E5EE17C4C9C9
          description: Group representing access to the Cymba OMS application.
          urn:scim:schemas:extension:FactSet:EnterpriseHosting:1.0:Group:
            domainCode: btud
          id: eh:btud:Pod 04 - CitrixApps - Cymba OMS
          urn:scim:schemas:extension:FactSet:VRS:1.0:Group:
            domainCode: btud
            tenant: QA
        - displayName: Domain btud - Pod 04 - CitrixApps - Cymba OMS
          meta:
            created: 2019-02-11T15:33:31.077Z
            location: https://api.factset.com/scim/v2/Groups/eh%3Abtud%3APod%2004%20-%20CitrixApps%20-%20Cymba%20OMS
            lastModified: 2019-06-07T08:59:37Z
            resourceType: Group
          schemas:
          - urn:ietf:params:scim:schemas:core:2.0:Group
          - urn:scim:schemas:extension:FactSet:EnterpriseHosting:1.0:Group
          - urn:scim:schemas:extension:FactSet:VRS:1.0:Group
          members:
          - type: User
            value: FIN_WEALTH-123456
            $ref: https://api.factset.com/scim/v2/Users/FIN_WEALTH-123456
          - type: User
            value: FIN_WEALTH-123456
            $ref: https://api.factset.com/scim/v2/Users/FIN_WEALTH-123456
          externalId: B8FE8BBD-0E04-40B2-9BB3-E5EE17C4C9C9
          description: Group representing access to the Cymba OMS application.
          urn:scim:schemas:extension:FactSet:EnterpriseHosting:1.0:Group:
            domainCode: btud
          id: eh:btud:Pod 04 - CitrixApps - Cymba OMS
          urn:scim:schemas:extension:FactSet:VRS:1.0:Group:
            domainCode: btud
            tenant: QA
      properties:
        schemas:
          example:
          - urn:ietf:params:scim:api:messages:2.0:ListResponse
          items:
            type: string
          type: array
        totalResults:
          example: 1
          type: integer
        Resources:
          items:
            $ref: '#/components/schemas/GroupResource'
          type: array
      type: object
    LocationResourceFirmDescription:
      allOf:
      - $ref: '#/components/schemas/FirmDescriptionResourceReference'
      - description: The firm description associated with this location. Users created
          in this location must have a user class available to this firm description.
    LocationResourceManagingLocation:
      allOf:
      - $ref: '#/components/schemas/LocationResourceReference'
      - description: FactSet location ID managing this location for a Research Entitlements
          Administrator and requesting location-based entitlements for all managed
          locations associated.
      - readOnly: true
    LocationResourceMainLocation:
      allOf:
      - $ref: '#/components/schemas/LocationResourceReference'
      - description: The managing or otherwise parent location associated with this
          location. All locations associated with the mainLocation are viewed as related
          and within the same business unit in FactSet's CRM systems.
      - readOnly: true
    LocationResource:
      example:
        country: United States
        partnerAssertedEntityId: partnerAssertedEntityId
        address3: address3
        address2: Factset - First Floor
        address1: 601 Main Avenue
        postalCode: "06850"
        locality: Norwalk
        externalId: 4ECB41D6-FC6D-4511-8A50-0A88D0D6EE6A
        description: description
        emailDomains:
        - foo.com
        phoneNumber: (555) 123-4567
        managedLocations:
        - display: FIN Wealth Management
          value: "1598276"
          $ref: https://api.factset.com/scim/v2/Locations/1598276
        - display: FIN Wealth Management
          value: "1598276"
          $ref: https://api.factset.com/scim/v2/Locations/1598276
        meta:
          created: 2019-02-11T08:44:19+00:00
          location: https://api.factset.com/scim/v2/Locations/1598276
          lastModified: 2021-01-12T03:11:13+00:00
          resourceType: Location
        schemas:
        - urn:scim:schemas:extension:FactSet:Core:1.0:Location
        name: FIN Wealth Management
        usernames:
        - FOO
        - BAR
        id: "1598276"
        companyAgreementUrls:
        - $ref: https://example-corp.com/company_agreements.pdf
        - $ref: https://example-corp.com/company_agreements.pdf
        region: Connecticut
      properties:
        schemas:
          example:
          - urn:scim:schemas:extension:FactSet:Core:1.0:Location
          items:
            type: string
          type: array
        id:
          example: "1598276"
          readOnly: true
          type: string
        externalId:
          description: An arbitrary identifier for the resource defined by the client.
            This can assist the client locate the resource through the use of search
            filters.
          example: 4ECB41D6-FC6D-4511-8A50-0A88D0D6EE6A
          type: string
        name:
          description: Name of the location.
          example: FIN Wealth Management
          type: string
        description:
          description: Description of the location.
          type: string
        address1:
          description: First line of location's address.
          example: 601 Main Avenue
          type: string
        address2:
          description: Second line of location's address.
          example: Factset - First Floor
          type: string
        address3:
          description: Third line of location's address.
          type: string
        locality:
          description: City of location.
          example: Norwalk
          type: string
        region:
          description: State or province of location.
          example: Connecticut
          type: string
        postalCode:
          description: Postal code of location.
          example: "06850"
          type: string
        country:
          description: Country of location.
          example: United States
          type: string
        phoneNumber:
          description: Phone number of location.
          example: (555) 123-4567
          readOnly: true
          type: string
        firmDescription:
          $ref: '#/components/schemas/LocationResourceFirmDescription'
        emailDomains:
          description: The domain names that are valid for use with email addresses
            associated with users in this location.
          example:
          - foo.com
          items:
            type: string
          type: array
        partnerAssertedEntityId:
          description: Identifier assigned to the Corporate Entity. Value is provided
            as "fsymEntityId" from FactSet's Symbology API.
          type: string
        companyAgreementUrls:
          description: Provides FactSet with signed documents allowing entitlement
            to pre-established exchanges for individuals associated with the location.
            Document URL provided must be available over the public internet.
          items:
            $ref: '#/components/schemas/LocationResourceCompanyAgreementUrl'
          type: array
        managedLocations:
          description: Lists FactSet locations managed by Research Entitlements Administrators
            at this location for requesting location-based research entitlements.
          items:
            $ref: '#/components/schemas/LocationResourceReference'
          type: array
        managingLocation:
          $ref: '#/components/schemas/LocationResourceManagingLocation'
        mainLocation:
          $ref: '#/components/schemas/LocationResourceMainLocation'
        usernames:
          description: The FactSet usernames that are valid for users in this location.
          example:
          - FOO
          - BAR
          items:
            type: string
          readOnly: true
          type: array
        meta:
          $ref: '#/components/schemas/LocationResource_meta'
      required:
      - address1
      - country
      - firmDescription
      - locality
      - name
      - postalCode
      type: object
    LocationResourceCompanyAgreementUrl:
      example:
        $ref: https://example-corp.com/company_agreements.pdf
      properties:
        $ref:
          description: The company agreement URL for authorizing pre-established Exchange
            Entitlements for this location. This URL must use either the "http" or
            "https" schemas and the URL must be available for download by FactSet
            systems.
          example: https://example-corp.com/company_agreements.pdf
          format: url
          type: string
      required:
      - $ref
      type: object
    LocationResourceList:
      example:
        totalResults: 1
        schemas:
        - urn:ietf:params:scim:api:messages:2.0:ListResponse
        Resources:
        - country: United States
          partnerAssertedEntityId: partnerAssertedEntityId
          address3: address3
          address2: Factset - First Floor
          address1: 601 Main Avenue
          postalCode: "06850"
          locality: Norwalk
          externalId: 4ECB41D6-FC6D-4511-8A50-0A88D0D6EE6A
          description: description
          emailDomains:
          - foo.com
          phoneNumber: (555) 123-4567
          managedLocations:
          - display: FIN Wealth Management
            value: "1598276"
            $ref: https://api.factset.com/scim/v2/Locations/1598276
          - display: FIN Wealth Management
            value: "1598276"
            $ref: https://api.factset.com/scim/v2/Locations/1598276
          meta:
            created: 2019-02-11T08:44:19+00:00
            location: https://api.factset.com/scim/v2/Locations/1598276
            lastModified: 2021-01-12T03:11:13+00:00
            resourceType: Location
          schemas:
          - urn:scim:schemas:extension:FactSet:Core:1.0:Location
          name: FIN Wealth Management
          usernames:
          - FOO
          - BAR
          id: "1598276"
          companyAgreementUrls:
          - $ref: https://example-corp.com/company_agreements.pdf
          - $ref: https://example-corp.com/company_agreements.pdf
          region: Connecticut
        - country: United States
          partnerAssertedEntityId: partnerAssertedEntityId
          address3: address3
          address2: Factset - First Floor
          address1: 601 Main Avenue
          postalCode: "06850"
          locality: Norwalk
          externalId: 4ECB41D6-FC6D-4511-8A50-0A88D0D6EE6A
          description: description
          emailDomains:
          - foo.com
          phoneNumber: (555) 123-4567
          managedLocations:
          - display: FIN Wealth Management
            value: "1598276"
            $ref: https://api.factset.com/scim/v2/Locations/1598276
          - display: FIN Wealth Management
            value: "1598276"
            $ref: https://api.factset.com/scim/v2/Locations/1598276
          meta:
            created: 2019-02-11T08:44:19+00:00
            location: https://api.factset.com/scim/v2/Locations/1598276
            lastModified: 2021-01-12T03:11:13+00:00
            resourceType: Location
          schemas:
          - urn:scim:schemas:extension:FactSet:Core:1.0:Location
          name: FIN Wealth Management
          usernames:
          - FOO
          - BAR
          id: "1598276"
          companyAgreementUrls:
          - $ref: https://example-corp.com/company_agreements.pdf
          - $ref: https://example-corp.com/company_agreements.pdf
          region: Connecticut
      properties:
        schemas:
          example:
          - urn:ietf:params:scim:api:messages:2.0:ListResponse
          items:
            type: string
          type: array
        totalResults:
          example: 1
          type: integer
        Resources:
          items:
            $ref: '#/components/schemas/LocationResource'
          type: array
      type: object
    LocationResourceReference:
      example:
        display: FIN Wealth Management
        value: "1598276"
        $ref: https://api.factset.com/scim/v2/Locations/1598276
      properties:
        value:
          description: Identifier of the Location.
          example: "1598276"
          type: string
        $ref:
          description: The URI corresponding to a SCIM resource that is this Location.
          example: https://api.factset.com/scim/v2/Locations/1598276
          type: string
        display:
          description: A human-readable name, primarily used for display purposes.
          example: FIN Wealth Management
          type: string
      required:
      - value
      type: object
    FirmDescriptionResource:
      example:
        meta:
          location: https://api.factset.com/scim/v2/FirmDescriptions/3
          resourceType: FirmDescription
        schemas:
        - urn:scim:schemas:extension:FactSet:Core:1.0:FirmDescription
        name: Wealth Management
        userClasses:
        - value: "0"
          $ref: https://api.factset.com/scim/v2/UserClasses/0
          display: Pending Assignment
        - value: "2"
          $ref: https://api.factset.com/scim/v2/UserClasses/2
          display: Buy-Side Research
        - value: "3"
          $ref: https://api.factset.com/scim/v2/UserClasses/3
          display: Performance/Risk Management
        - value: "4"
          $ref: https://api.factset.com/scim/v2/UserClasses/4
          display: Trading
        - value: "5"
          $ref: https://api.factset.com/scim/v2/UserClasses/5
          display: Client Services/Sales/Marketing
        - value: "6"
          $ref: https://api.factset.com/scim/v2/UserClasses/6
          display: Wealth/Advisory
        - value: "20"
          $ref: https://api.factset.com/scim/v2/UserClasses/20
          display: Application Developer
        - value: "27"
          $ref: https://api.factset.com/scim/v2/UserClasses/27
          display: IT/Production Support
        - value: "28"
          $ref: https://api.factset.com/scim/v2/UserClasses/27
          display: Machine
        id: "3"
      properties:
        schemas:
          example:
          - urn:scim:schemas:extension:FactSet:Core:1.0:FirmDescription
          items:
            type: string
          type: array
        id:
          example: "3"
          readOnly: true
          type: string
        name:
          description: Name of the firm description.
          example: Wealth Management
          readOnly: true
          type: string
        userClasses:
          description: The user classes available to the firm description. Users created
            in a location with this firm description must have one of these user classes.
          example:
          - value: "0"
            $ref: https://api.factset.com/scim/v2/UserClasses/0
            display: Pending Assignment
          - value: "2"
            $ref: https://api.factset.com/scim/v2/UserClasses/2
            display: Buy-Side Research
          - value: "3"
            $ref: https://api.factset.com/scim/v2/UserClasses/3
            display: Performance/Risk Management
          - value: "4"
            $ref: https://api.factset.com/scim/v2/UserClasses/4
            display: Trading
          - value: "5"
            $ref: https://api.factset.com/scim/v2/UserClasses/5
            display: Client Services/Sales/Marketing
          - value: "6"
            $ref: https://api.factset.com/scim/v2/UserClasses/6
            display: Wealth/Advisory
          - value: "20"
            $ref: https://api.factset.com/scim/v2/UserClasses/20
            display: Application Developer
          - value: "27"
            $ref: https://api.factset.com/scim/v2/UserClasses/27
            display: IT/Production Support
          - value: "28"
            $ref: https://api.factset.com/scim/v2/UserClasses/27
            display: Machine
          items:
            $ref: '#/components/schemas/UserClassResourceReference'
          type: array
        meta:
          $ref: '#/components/schemas/FirmDescriptionResource_meta'
      required:
      - name
      type: object
    FirmDescriptionResourceList:
      example:
        totalResults: 1
        schemas:
        - urn:ietf:params:scim:api:messages:2.0:ListResponse
        Resources:
        - meta:
            location: https://api.factset.com/scim/v2/FirmDescriptions/3
            resourceType: FirmDescription
          schemas:
          - urn:scim:schemas:extension:FactSet:Core:1.0:FirmDescription
          name: Wealth Management
          userClasses:
          - value: "0"
            $ref: https://api.factset.com/scim/v2/UserClasses/0
            display: Pending Assignment
          - value: "2"
            $ref: https://api.factset.com/scim/v2/UserClasses/2
            display: Buy-Side Research
          - value: "3"
            $ref: https://api.factset.com/scim/v2/UserClasses/3
            display: Performance/Risk Management
          - value: "4"
            $ref: https://api.factset.com/scim/v2/UserClasses/4
            display: Trading
          - value: "5"
            $ref: https://api.factset.com/scim/v2/UserClasses/5
            display: Client Services/Sales/Marketing
          - value: "6"
            $ref: https://api.factset.com/scim/v2/UserClasses/6
            display: Wealth/Advisory
          - value: "20"
            $ref: https://api.factset.com/scim/v2/UserClasses/20
            display: Application Developer
          - value: "27"
            $ref: https://api.factset.com/scim/v2/UserClasses/27
            display: IT/Production Support
          - value: "28"
            $ref: https://api.factset.com/scim/v2/UserClasses/27
            display: Machine
          id: "3"
        - meta:
            location: https://api.factset.com/scim/v2/FirmDescriptions/3
            resourceType: FirmDescription
          schemas:
          - urn:scim:schemas:extension:FactSet:Core:1.0:FirmDescription
          name: Wealth Management
          userClasses:
          - value: "0"
            $ref: https://api.factset.com/scim/v2/UserClasses/0
            display: Pending Assignment
          - value: "2"
            $ref: https://api.factset.com/scim/v2/UserClasses/2
            display: Buy-Side Research
          - value: "3"
            $ref: https://api.factset.com/scim/v2/UserClasses/3
            display: Performance/Risk Management
          - value: "4"
            $ref: https://api.factset.com/scim/v2/UserClasses/4
            display: Trading
          - value: "5"
            $ref: https://api.factset.com/scim/v2/UserClasses/5
            display: Client Services/Sales/Marketing
          - value: "6"
            $ref: https://api.factset.com/scim/v2/UserClasses/6
            display: Wealth/Advisory
          - value: "20"
            $ref: https://api.factset.com/scim/v2/UserClasses/20
            display: Application Developer
          - value: "27"
            $ref: https://api.factset.com/scim/v2/UserClasses/27
            display: IT/Production Support
          - value: "28"
            $ref: https://api.factset.com/scim/v2/UserClasses/27
            display: Machine
          id: "3"
      properties:
        schemas:
          example:
          - urn:ietf:params:scim:api:messages:2.0:ListResponse
          items:
            type: string
          type: array
        totalResults:
          example: 1
          type: integer
        Resources:
          items:
            $ref: '#/components/schemas/FirmDescriptionResource'
          type: array
      type: object
    FirmDescriptionResourceReference:
      properties:
        value:
          description: Identifier of the Firm Description.
          example: "3"
          type: string
        $ref:
          description: The URI corresponding to a SCIM resource that is this Firm
            Description.
          example: https://api.factset.com/scim/v2/FirmDescriptions/3
          type: string
        display:
          description: A human-readable name, primarily used for display purposes.
          example: Wealth Management
          type: string
      required:
      - value
      type: object
    UserClassResource:
      example:
        meta:
          location: https://api.factset.com/scim/v2/UserClasses/4
          resourceType: UserClass
        schemas:
        - urn:scim:schemas:extension:FactSet:Core:1.0:UserClass
        name: Trading
        id: "4"
        userPositions:
        - value: "0"
          $ref: https://api.factset.com/scim/v2/UserPositions/0
          display: Pending Assignment
        - value: "3"
          $ref: https://api.factset.com/scim/v2/UserPositions/3
          display: Other
        - value: "30"
          $ref: https://api.factset.com/scim/v2/UserPositions/30
          display: Head Trader
        - value: "31"
          $ref: https://api.factset.com/scim/v2/UserPositions/31
          display: Trader
        - value: "68"
          $ref: https://api.factset.com/scim/v2/UserPositions/68
          display: Assistant
      properties:
        schemas:
          example:
          - urn:scim:schemas:extension:FactSet:Core:1.0:UserClass
          items:
            type: string
          type: array
        id:
          example: "4"
          readOnly: true
          type: string
        name:
          description: Name of the user class.
          example: Trading
          readOnly: true
          type: string
        userPositions:
          description: The user positions available to this user class.
          example:
          - value: "0"
            $ref: https://api.factset.com/scim/v2/UserPositions/0
            display: Pending Assignment
          - value: "3"
            $ref: https://api.factset.com/scim/v2/UserPositions/3
            display: Other
          - value: "30"
            $ref: https://api.factset.com/scim/v2/UserPositions/30
            display: Head Trader
          - value: "31"
            $ref: https://api.factset.com/scim/v2/UserPositions/31
            display: Trader
          - value: "68"
            $ref: https://api.factset.com/scim/v2/UserPositions/68
            display: Assistant
          items:
            $ref: '#/components/schemas/UserPositionResourceReference'
          type: array
        meta:
          $ref: '#/components/schemas/UserClassResource_meta'
      required:
      - name
      type: object
    UserClassResourceList:
      example:
        totalResults: 1
        schemas:
        - urn:ietf:params:scim:api:messages:2.0:ListResponse
        Resources:
        - meta:
            location: https://api.factset.com/scim/v2/UserClasses/4
            resourceType: UserClass
          schemas:
          - urn:scim:schemas:extension:FactSet:Core:1.0:UserClass
          name: Trading
          id: "4"
          userPositions:
          - value: "0"
            $ref: https://api.factset.com/scim/v2/UserPositions/0
            display: Pending Assignment
          - value: "3"
            $ref: https://api.factset.com/scim/v2/UserPositions/3
            display: Other
          - value: "30"
            $ref: https://api.factset.com/scim/v2/UserPositions/30
            display: Head Trader
          - value: "31"
            $ref: https://api.factset.com/scim/v2/UserPositions/31
            display: Trader
          - value: "68"
            $ref: https://api.factset.com/scim/v2/UserPositions/68
            display: Assistant
        - meta:
            location: https://api.factset.com/scim/v2/UserClasses/4
            resourceType: UserClass
          schemas:
          - urn:scim:schemas:extension:FactSet:Core:1.0:UserClass
          name: Trading
          id: "4"
          userPositions:
          - value: "0"
            $ref: https://api.factset.com/scim/v2/UserPositions/0
            display: Pending Assignment
          - value: "3"
            $ref: https://api.factset.com/scim/v2/UserPositions/3
            display: Other
          - value: "30"
            $ref: https://api.factset.com/scim/v2/UserPositions/30
            display: Head Trader
          - value: "31"
            $ref: https://api.factset.com/scim/v2/UserPositions/31
            display: Trader
          - value: "68"
            $ref: https://api.factset.com/scim/v2/UserPositions/68
            display: Assistant
      properties:
        schemas:
          example:
          - urn:ietf:params:scim:api:messages:2.0:ListResponse
          items:
            type: string
          type: array
        totalResults:
          example: 1
          type: integer
        Resources:
          items:
            $ref: '#/components/schemas/UserClassResource'
          type: array
      type: object
    UserClassResourceReference:
      example:
        display: Application Developer
        value: "20"
        $ref: https://api.factset.com/scim/v2/UserClasses/20
      properties:
        value:
          description: Identifier of the User Class.
          example: "20"
          type: string
        $ref:
          description: The URI corresponding to a SCIM resource that is this User
            Class.
          example: https://api.factset.com/scim/v2/UserClasses/20
          type: string
        display:
          description: A human-readable name, primarily used for display purposes.
          example: Application Developer
          type: string
      required:
      - value
      type: object
    UserPositionResource:
      example:
        meta:
          location: https://api.factset.com/scim/v2/UserPositions/31
          resourceType: UserPosition
        schemas:
        - urn:scim:schemas:extension:FactSet:Core:1.0:UserPosition
        name: Trader
        id: "31"
      properties:
        schemas:
          example:
          - urn:scim:schemas:extension:FactSet:Core:1.0:UserPosition
          items:
            type: string
          type: array
        id:
          example: "31"
          readOnly: true
          type: string
        name:
          description: Name of the user position.
          example: Trader
          readOnly: true
          type: string
        meta:
          $ref: '#/components/schemas/UserPositionResource_meta'
      required:
      - name
      type: object
    UserPositionResourceList:
      example:
        totalResults: 1
        schemas:
        - urn:ietf:params:scim:api:messages:2.0:ListResponse
        Resources:
        - meta:
            location: https://api.factset.com/scim/v2/UserPositions/31
            resourceType: UserPosition
          schemas:
          - urn:scim:schemas:extension:FactSet:Core:1.0:UserPosition
          name: Trader
          id: "31"
        - meta:
            location: https://api.factset.com/scim/v2/UserPositions/31
            resourceType: UserPosition
          schemas:
          - urn:scim:schemas:extension:FactSet:Core:1.0:UserPosition
          name: Trader
          id: "31"
      properties:
        schemas:
          example:
          - urn:ietf:params:scim:api:messages:2.0:ListResponse
          items:
            type: string
          type: array
        totalResults:
          example: 1
          type: integer
        Resources:
          items:
            $ref: '#/components/schemas/UserPositionResource'
          type: array
      type: object
    UserPositionResourceReference:
      example:
        display: Application Developer
        value: "46"
        $ref: https://api.factset.com/scim/v2/UserPositions/46
      properties:
        value:
          description: Identifier of the User Position.
          example: "46"
          type: string
        $ref:
          description: The URI corresponding to a SCIM resource that is this User
            Position.
          example: https://api.factset.com/scim/v2/UserPositions/46
          type: string
        display:
          description: A human-readable name, primarily used for display purposes.
          example: Application Developer
          type: string
      required:
      - value
      type: object
    ProductResource:
      example:
        groupDescription: Workstations
        orderable: true
        meta:
          location: https://api.factset.com/scim/v2/Products/6781
          resourceType: Product
        schemas:
        - urn:scim:schemas:extension:FactSet:Core:1.0:Product
        name: FactSet Identity
        requiresApproval: FactSet
        description: This workstation product will provide the user with a serial
          number and a "blanket" login. Examples of when this can be used is for web
          only users, notify clients, or to give users minimal access.
        workstation: true
        id: "6781"
        whitelist: true
        trialAvailable: true
      properties:
        schemas:
          example:
          - urn:scim:schemas:extension:FactSet:Core:1.0:Product
          items:
            type: string
          type: array
        id:
          example: "6781"
          readOnly: true
          type: string
        name:
          description: Name of product.
          example: FactSet Identity
          readOnly: true
          type: string
        description:
          description: Details of product.
          example: This workstation product will provide the user with a serial number
            and a "blanket" login. Examples of when this can be used is for web only
            users, notify clients, or to give users minimal access.
          readOnly: true
          type: string
        groupDescription:
          description: Description of the group the product belongs in, e.g. Exchange,
            Product, Database, Workstation, etc.
          example: Workstations
          readOnly: true
          type: string
        workstation:
          description: A boolean representing whether the product is base-level access
            to FactSet, issuing the individual's serial number. Only one Product "id"
            per individual will have this value set to true.
          example: true
          readOnly: true
          type: boolean
        orderable:
          description: Whether the product can be ordered by the current client.
          example: true
          readOnly: true
          type: boolean
        requiresApproval:
          description: A description of the type of approval required before an order
            for this product can be fulfilled. This value is null for those products
            that do not require any approval.
          enum:
          - FactSet
          - Vendor
          example: FactSet
          readOnly: true
          type: string
        trialAvailable:
          description: Whether a temporary trial use of this product is available
            for users.
          example: true
          readOnly: true
          type: boolean
        whitelist:
          description: Whether the product appears in the requester's product whitelist.
            Presence in the product whitelist means the requester is authorized to
            order this product for other users.
          example: true
          readOnly: true
          type: boolean
        meta:
          $ref: '#/components/schemas/ProductResource_meta'
      required:
      - orderable
      - trialAvailable
      - whitelist
      type: object
    ProductResourceList:
      example:
        totalResults: 1
        schemas:
        - urn:ietf:params:scim:api:messages:2.0:ListResponse
        Resources:
        - groupDescription: Workstations
          orderable: true
          meta:
            location: https://api.factset.com/scim/v2/Products/6781
            resourceType: Product
          schemas:
          - urn:scim:schemas:extension:FactSet:Core:1.0:Product
          name: FactSet Identity
          requiresApproval: FactSet
          description: This workstation product will provide the user with a serial
            number and a "blanket" login. Examples of when this can be used is for
            web only users, notify clients, or to give users minimal access.
          workstation: true
          id: "6781"
          whitelist: true
          trialAvailable: true
        - groupDescription: Workstations
          orderable: true
          meta:
            location: https://api.factset.com/scim/v2/Products/6781
            resourceType: Product
          schemas:
          - urn:scim:schemas:extension:FactSet:Core:1.0:Product
          name: FactSet Identity
          requiresApproval: FactSet
          description: This workstation product will provide the user with a serial
            number and a "blanket" login. Examples of when this can be used is for
            web only users, notify clients, or to give users minimal access.
          workstation: true
          id: "6781"
          whitelist: true
          trialAvailable: true
      properties:
        schemas:
          example:
          - urn:ietf:params:scim:api:messages:2.0:ListResponse
          items:
            type: string
          type: array
        totalResults:
          example: 1
          type: integer
        Resources:
          items:
            $ref: '#/components/schemas/ProductResource'
          type: array
      type: object
    ProductResourceReference:
      example:
        display: FactSet Identity
        value: "6781"
        $ref: https://api.factset.com/scim/v2/Products/6781
      properties:
        value:
          description: Identifier of the product.
          example: "6781"
          type: string
        $ref:
          description: The URI corresponding to this product.
          example: https://api.factset.com/scim/v2/Products/6781
          type: string
        display:
          description: A human-readable name, primarily used for display purposes.
          example: FactSet Identity
          type: string
      required:
      - value
      type: object
    ProductResourceReferenceWithRapidActivationInfo:
      example:
        activationHistoryMonths:
        - 2025-08
        - 2025-07
        - 2025-06
        rapidActivationStatus: active
        display: Exchange NYSE American and Regionals - RT
        value: "11"
        $ref: https://api.factset.com/scim/v2/Products/11
      properties:
        value:
          description: Identifier of the product.
          example: "11"
          type: string
        $ref:
          description: The URI corresponding to this product.
          example: https://api.factset.com/scim/v2/Products/11
          type: string
        display:
          description: A human-readable name, primarily used for display purposes.
          example: Exchange NYSE American and Regionals - RT
          type: string
        rapidActivationStatus:
          description: Whether the associated product has been activated for the current
            month. Possible values are "eligible" and "active".
          enum:
          - active
          - eligible
          example: active
          type: string
        activationHistoryMonths:
          description: A list of the most recent three months (including the current
            month) during which the associated product has been activated.
          example:
          - 2025-08
          - 2025-07
          - 2025-06
          items:
            type: string
          type: array
      required:
      - value
      type: object
    PendingProductOrder:
      example:
        product:
          display: FactSet Identity
          value: "6781"
          $ref: https://api.factset.com/scim/v2/Products/6781
        requested: 2019-06-07T08:59:37Z
        transactionCode: a8389967-e1ab-4987-822b-86b15857ad09
        type: Add
        status: Pending approval
      properties:
        product:
          $ref: '#/components/schemas/ProductResourceReference'
        type:
          description: Type of product order, e.g. 'Add' or 'Remove'.
          enum:
          - Add
          - Remove
          example: Add
          readOnly: true
          type: string
        status:
          description: Status of the pending product order.
          enum:
          - Processing
          - Pending approval
          example: Pending approval
          readOnly: true
          type: string
        transactionCode:
          description: A GUID that is the transaction code of the product order.
          example: a8389967-e1ab-4987-822b-86b15857ad09
          readOnly: true
          type: string
        requested:
          description: Date and time when product was ordered.
          example: 2019-06-07T08:59:37Z
          format: date-time
          readOnly: true
          type: string
      required:
      - product
      - requested
      - status
      - transactionCode
      - type
      type: object
    FederationResourceReference:
      description: A reference to a Federation resource.
      example:
        assertionValues:
        - value: john.doe@example.com
        - value: john.doe@example.com
        display: FooBar SAML federation
        value: d69a94b6-5f30-49f1-8d15-db42013c52bd
        $ref: https://api.factset.com/scim/v2/Federations/d69a94b6-5f30-49f1-8d15-db42013c52bd
      properties:
        value:
          description: Identifier of the Federation.
          example: d69a94b6-5f30-49f1-8d15-db42013c52bd
          format: uuid
          type: string
        $ref:
          description: The URI corresponding to a SCIM resource that is this Federation.
          example: https://api.factset.com/scim/v2/Federations/d69a94b6-5f30-49f1-8d15-db42013c52bd
          readOnly: true
          type: string
        display:
          description: A human-readable name, primarily used for display purposes.
          example: FooBar SAML federation
          readOnly: true
          type: string
        assertionValues:
          description: References to the federations in which the user has at least
            one assertion value.
          items:
            $ref: '#/components/schemas/FederationResourceReferenceAssertionValue'
          type: array
      required:
      - assertionValues
      - value
      type: object
    FederationResourceReferenceAssertionValue:
      description: A container for a user's assertion value in a particular federation.
      example:
        value: john.doe@example.com
      properties:
        value:
          description: The assertion value string itself.
          example: john.doe@example.com
          type: string
      required:
      - value
      type: object
    FederationResourceLocation:
      allOf:
      - $ref: '#/components/schemas/LocationResourceReference'
      - description: FactSet location associated with this identity provider.
      - readOnly: true
    FederationResource:
      description: Represents an authentication relationship between FactSet and a
        client firm for web technologies that facilitate single sign-on (SSO) access
        to FactSet services, such as SAML.
      example:
        metadataUrl: https://idp.example.org/metadata
        certificates:
        - certificates
        - certificates
        autoSyncUsernames:
        - FDS_P2P_SCIM
        schemas:
        - urn:scim:schemas:extension:FactSet:Core:1.0:Federation
        name: FooBar SAML federation
        entityId: https://idp.example.org/SAML2
        singleSignOnServiceUrl: https://idp.example.org/SAML2/SSO/Redirect
        id: d69a94b6-5f30-49f1-8d15-db42013c52bd
        requestBinding: REDIRECT
        users:
        - assertionValues:
          - value: john.doe@example.com
          - value: john.doe@example.com
          display: John Doe
          value: FDS_P2P_SCIM-1526135
          $ref: https://api.factset.com/scim/v2/Users/FDS_P2P_SCIM-1526135
        - assertionValues:
          - value: john.doe@example.com
          - value: john.doe@example.com
          display: John Doe
          value: FDS_P2P_SCIM-1526135
          $ref: https://api.factset.com/scim/v2/Users/FDS_P2P_SCIM-1526135
      properties:
        schemas:
          description: A list of schema URIs in use by the resource.
          example:
          - urn:scim:schemas:extension:FactSet:Core:1.0:Federation
          items:
            type: string
          type: array
        id:
          description: The Globally Unique Identifier (GUID) of the federation.
          example: d69a94b6-5f30-49f1-8d15-db42013c52bd
          format: uuid
          readOnly: true
          type: string
        name:
          description: Name of federation.
          example: FooBar SAML federation
          readOnly: true
          type: string
        entityId:
          description: The entity identifier of the corresponding identity provider.
          example: https://idp.example.org/SAML2
          format: url
          readOnly: true
          type: string
        metadataUrl:
          description: Public link to the IdP's metadata.xml.
          example: https://idp.example.org/metadata
          format: url
          readOnly: true
          type: string
        singleSignOnServiceUrl:
          description: Destination client browsers are directed to, at the IdP, for
            Single Sign-on Protocol Message exchange.
          example: https://idp.example.org/SAML2/SSO/Redirect
          format: url
          readOnly: true
          type: string
        requestBinding:
          description: Preferred HTTP method for IdP's singleSignOnServiceUrl destination.
          example: REDIRECT
          readOnly: true
          type: string
        certificates:
          description: Public x509 certificate values the Service Provider can expect
            Single Sign-on messages to be signed with from the IdP.
          items:
            format: byte
            type: string
          readOnly: true
          type: array
        location:
          $ref: '#/components/schemas/FederationResourceLocation'
        autoSyncUsernames:
          description: List of FactSet usernames automatically mapped into the federation
            with email address expected as contents of 'nameID'.
          example:
          - FDS_P2P_SCIM
          items:
            type: string
          readOnly: true
          type: array
        users:
          description: A list of mappings for users between their assertion value(s)
            as provided by this identity provider and their corresponding FactSet
            username-serial.
          items:
            $ref: '#/components/schemas/FederationResourceUser'
          type: array
      required:
      - certificates
      - entityId
      - location
      - name
      - requestBinding
      - singleSignOnServiceUrl
      type: object
    FederationResourceUser:
      description: A reference to a User resource that is associated with a federation.
      example:
        assertionValues:
        - value: john.doe@example.com
        - value: john.doe@example.com
        display: John Doe
        value: FDS_P2P_SCIM-1526135
        $ref: https://api.factset.com/scim/v2/Users/FDS_P2P_SCIM-1526135
      properties:
        value:
          description: Identifier of the User.
          example: FDS_P2P_SCIM-1526135
          type: string
        $ref:
          description: The URI corresponding to a SCIM resource that is this User.
          example: https://api.factset.com/scim/v2/Users/FDS_P2P_SCIM-1526135
          type: string
        display:
          description: A human-readable name, primarily used for display purposes.
          example: John Doe
          type: string
        assertionValues:
          description: A list of assertion value(s) provided by this identity provider.
          items:
            $ref: '#/components/schemas/FederationResourceUserAssertionValue'
          type: array
      required:
      - assertionValues
      - users
      type: object
    FederationResourceUserAssertionValue:
      description: A container for a user's assertion value in a particular federation.
      example:
        value: john.doe@example.com
      properties:
        value:
          description: The assertion value string itself.
          example: john.doe@example.com
          type: string
      required:
      - value
      type: object
    FederationResourceList:
      description: A list of federation resources returned as a response to a query.
      example:
        totalResults: 1
        schemas:
        - urn:ietf:params:scim:api:messages:2.0:ListResponse
        Resources:
        - metadataUrl: https://idp.example.org/metadata
          certificates:
          - certificates
          - certificates
          autoSyncUsernames:
          - FDS_P2P_SCIM
          schemas:
          - urn:scim:schemas:extension:FactSet:Core:1.0:Federation
          name: FooBar SAML federation
          entityId: https://idp.example.org/SAML2
          singleSignOnServiceUrl: https://idp.example.org/SAML2/SSO/Redirect
          id: d69a94b6-5f30-49f1-8d15-db42013c52bd
          requestBinding: REDIRECT
          users:
          - assertionValues:
            - value: john.doe@example.com
            - value: john.doe@example.com
            display: John Doe
            value: FDS_P2P_SCIM-1526135
            $ref: https://api.factset.com/scim/v2/Users/FDS_P2P_SCIM-1526135
          - assertionValues:
            - value: john.doe@example.com
            - value: john.doe@example.com
            display: John Doe
            value: FDS_P2P_SCIM-1526135
            $ref: https://api.factset.com/scim/v2/Users/FDS_P2P_SCIM-1526135
        - metadataUrl: https://idp.example.org/metadata
          certificates:
          - certificates
          - certificates
          autoSyncUsernames:
          - FDS_P2P_SCIM
          schemas:
          - urn:scim:schemas:extension:FactSet:Core:1.0:Federation
          name: FooBar SAML federation
          entityId: https://idp.example.org/SAML2
          singleSignOnServiceUrl: https://idp.example.org/SAML2/SSO/Redirect
          id: d69a94b6-5f30-49f1-8d15-db42013c52bd
          requestBinding: REDIRECT
          users:
          - assertionValues:
            - value: john.doe@example.com
            - value: john.doe@example.com
            display: John Doe
            value: FDS_P2P_SCIM-1526135
            $ref: https://api.factset.com/scim/v2/Users/FDS_P2P_SCIM-1526135
          - assertionValues:
            - value: john.doe@example.com
            - value: john.doe@example.com
            display: John Doe
            value: FDS_P2P_SCIM-1526135
            $ref: https://api.factset.com/scim/v2/Users/FDS_P2P_SCIM-1526135
      properties:
        schemas:
          description: An array containing the standard schema URI used for SCIM query
            responses.
          example:
          - urn:ietf:params:scim:api:messages:2.0:ListResponse
          items:
            type: string
          type: array
        totalResults:
          description: The total number of federation resources returned as a response
            to a query.
          example: 1
          type: integer
        Resources:
          description: The federation resources returned as a response to a query.
          items:
            $ref: '#/components/schemas/FederationResource'
          type: array
      type: object
    FileManagerAudit:
      example:
      - username: fds_demo_va_sc
        paths:
          /sc/fds_demo_va_sc/:
          - entity:
              name: fds_demo_eur:245600
              type: user
            permissions:
              read: true
              write: true
              maintain: true
            permission-overrides:
              read: true
              write: true
              maintain: true
            inheritance-distance: 0
      items:
        $ref: '#/components/schemas/FileManagerAuditItem'
      type: array
    FileManagerAuditItem:
      properties:
        username:
          description: The FactSet username associated with the file paths.
          type: string
        paths:
          additionalProperties:
            description: A file path and its associated attributes.
            items:
              $ref: '#/components/schemas/FileManagerAuditItemAdditionalProperty'
            type: array
          description: Object containing all file paths and their associated attributes.
          type: object
      required:
      - paths
      - username
      type: object
    FileManagerAuditItemAdditionalProperty:
      description: Attributes of the file.
      properties:
        entity:
          $ref: '#/components/schemas/FileManagerAuditItemAdditionalProperty_entity'
        permissions:
          $ref: '#/components/schemas/FileManagerAuditItemAdditionalProperty_permissions'
        permission-override:
          $ref: '#/components/schemas/FileManagerAuditItemAdditionalProperty_permission_override'
        inheritance-distance:
          type: integer
      required:
      - entity
      - permissions
      type: object
    Patch:
      description: The request body used for the HTTP PATCH server function (see RFC
        7644 section 3.5.2.) This can be used to alter an individual SCIM resource.
      properties:
        schemas:
          description: An array containing the standard schema URI used for SCIM PATCH
            requests.
          example:
          - urn:ietf:params:scim:api:messages:2.0:PatchOp
          items:
            enum:
            - urn:ietf:params:scim:api:messages:2.0:PatchOp
            type: string
          maxItems: 1
          type: array
        Operations:
          description: The list of PATCH operations that should be applied for the
            PATCH request.
          items:
            $ref: '#/components/schemas/PatchOperation'
          type: array
      type: object
    PatchOperation:
      description: An individual PATCH operation that is part of a PATCH request.
      properties:
        op:
          description: Indicates the HTTP PATCH operation to perform. For details
            on the "add" operation, see RFC 7644 section 3.5.2.1. For details on the
            "remove" operation, see RFC 7644 section 3.5.2.2. For details on the "replace"
            operation, see RFC 7644 section 3.5.2.3.
          enum:
          - add
          - remove
          - replace
          type: string
        path:
          description: Describes the target of the HTTP PATCH operation. This is optional
            for "add" and "replace" operations and is required for "remove" operations.
          type: string
        value:
          $ref: '#/components/schemas/PatchOperationValue'
      type: object
    PatchOperationValue:
      anyOf:
      - items: {}
        type: array
      - type: boolean
      - type: number
      - type: object
      - type: string
      description: The content that should be added or replaced in a PATCH operation.
        This is required for "add" and "replace" operations and is not applicable
        for "remove" operations.
    Error:
      properties:
        schemas:
          description: An array containing the standard schema URI used for identifying
            an error. See RFC 7644 section 3.12.
          example:
          - urn:ietf:params:scim:api:messages:2.0:Error
          items:
            enum:
            - urn:ietf:params:scim:api:messages:2.0:Error
            type: string
          maxItems: 1
          type: array
        scimType:
          enum:
          - invalidFilter
          - tooMany
          - uniqueness
          - mutability
          - invalidSyntax
          - invalidPath
          - noTarget
          - invalidValue
          - invalidVers
          - sensitive
          example: invalidValue
          type: string
        detail:
          description: A detailed human-readable message.
          example: An unhandled exception occurred.
          type: string
        status:
          description: HTTP status code.
          enum:
          - "307"
          - "308"
          - "400"
          - "401"
          - "403"
          - "404"
          - "409"
          - "412"
          - "413"
          - "500"
          - "501"
          example: "500"
          type: string
      type: object
    inline_response_429:
      properties:
        message:
          type: string
      readOnly: true
      required:
      - message
      type: object
    ServiceProviderConfig_patch:
      description: A complex type that specifies PATCH configuration options.
      example:
        supported: true
      properties:
        supported:
          description: A Boolean value specifying whether or not the operation is
            supported.
          example: true
          readOnly: true
          type: boolean
      readOnly: true
      required:
      - supported
      type: object
    ServiceProviderConfig_bulk:
      description: A complex type that specifies bulk configuration options.
      example:
        maxPayloadSize: 0
        maxOperations: 0
        supported: false
      properties:
        supported:
          description: A Boolean value specifying whether or not the operation is
            supported.
          example: false
          readOnly: true
          type: boolean
        maxOperations:
          description: An integer value specifying the maximum number of operations.
          example: 0
          readOnly: true
          type: integer
        maxPayloadSize:
          description: An integer value specifying the maximum payload size in bytes.
          example: 0
          readOnly: true
          type: integer
      required:
      - maxOperations
      - maxPayloadSize
      - supported
      type: object
    ServiceProviderConfig_filter:
      description: A complex type that specifies FILTER options.
      example:
        maxResults: 1000
        supported: true
      properties:
        supported:
          description: A Boolean value specifying whether or not the operation is
            supported.
          example: true
          readOnly: true
          type: boolean
        maxResults:
          description: An integer value specifying the maximum number of resources
            returned in a response.
          example: 1000
          readOnly: true
          type: integer
      required:
      - maxResults
      - supported
      type: object
    ServiceProviderConfig_changePassword:
      description: A complex type that specifies configuration options related to
        changing a password.
      example:
        supported: false
      properties:
        supported:
          description: A Boolean value specifying whether or not the operation is
            supported.
          example: false
          readOnly: true
          type: boolean
      required:
      - supported
      type: object
    ServiceProviderConfig_sort:
      description: A complex type that specifies sort result options.
      example:
        supported: true
      properties:
        supported:
          description: A Boolean value specifying whether or not the operation is
            supported.
          example: true
          readOnly: true
          type: boolean
      required:
      - supported
      type: object
    ServiceProviderConfig_etag:
      description: A complex type that specifies ETag configuration options.
      example:
        supported: false
      properties:
        supported:
          description: A Boolean value specifying whether or not the operation is
            supported.
          example: false
          readOnly: true
          type: boolean
      required:
      - supported
      type: object
    Schema_meta:
      example:
        location: https://api.factset.com/scim/v2/Schemas/urn:ietf:params:scim:schemas:core:2.0:User
        resourceType: Schema
      properties:
        resourceType:
          example: Schema
          readOnly: true
          type: string
        location:
          example: https://api.factset.com/scim/v2/Schemas/urn:ietf:params:scim:schemas:core:2.0:User
          readOnly: true
          type: string
      required:
      - location
      - resourceType
      type: object
    UserResource_name:
      description: The components of the user's real name. Providers MAY return just
        the full name as a single string in the formatted sub-attribute, or they MAY
        return just the individual component attributes using the other sub-attributes,
        or they MAY return both.  If both variants are returned, they SHOULD be describing
        the same name, with the formatted name indicating how the component attributes
        should be combined.
      example:
        familyName: Doe
        givenName: John
      properties:
        familyName:
          description: The family name of the User, or last name in most Western languages
            (e.g., 'Jensen' given the full name 'Ms. Barbara J Jensen, III').
          example: Doe
          type: string
        givenName:
          description: The given name of the User, or first name in most Western languages
            (e.g., 'Barbara' given the full name 'Ms. Barbara J Jensen, III').
          example: John
          type: string
      required:
      - familyName
      - givenName
      type: object
    UserResource_urn_scim_schemas_extension_FactSet_Core_1_0_User_userTaxonomyData:
      description: FactSet's classification of the user. Use taxonomy is composed
        of a user class as well as a user position.
      example:
        userClass:
          display: Application Developer
          value: "20"
          $ref: https://api.factset.com/scim/v2/UserClasses/20
        userPosition:
          display: Application Developer
          value: "46"
          $ref: https://api.factset.com/scim/v2/UserPositions/46
      properties:
        userClass:
          $ref: '#/components/schemas/UserClassResourceReference'
        userPosition:
          $ref: '#/components/schemas/UserPositionResourceReference'
      required:
      - userClass
      - userPosition
      type: object
    UserResource_urn_scim_schemas_extension_FactSet_Core_1_0_User:
      example:
        serialNumber: "123456"
        royaltyClass: royaltyClass
        userTaxonomyData:
          userClass:
            display: Application Developer
            value: "20"
            $ref: https://api.factset.com/scim/v2/UserClasses/20
          userPosition:
            display: Application Developer
            value: "46"
            $ref: https://api.factset.com/scim/v2/UserPositions/46
        roleName: Wealth Manager
        location:
          display: FIN Wealth Management
          value: "1598276"
          $ref: https://api.factset.com/scim/v2/Locations/1598276
        invoiceId: 9QMD
        federations:
        - assertionValues:
          - value: john.doe@example.com
          - value: john.doe@example.com
          display: FooBar SAML federation
          value: d69a94b6-5f30-49f1-8d15-db42013c52bd
          $ref: https://api.factset.com/scim/v2/Federations/d69a94b6-5f30-49f1-8d15-db42013c52bd
        - assertionValues:
          - value: john.doe@example.com
          - value: john.doe@example.com
          display: FooBar SAML federation
          value: d69a94b6-5f30-49f1-8d15-db42013c52bd
          $ref: https://api.factset.com/scim/v2/Federations/d69a94b6-5f30-49f1-8d15-db42013c52bd
        pendingProductOrders:
        - product:
            display: FactSet Identity
            value: "6781"
            $ref: https://api.factset.com/scim/v2/Products/6781
          requested: 2019-06-07T08:59:37Z
          transactionCode: a8389967-e1ab-4987-822b-86b15857ad09
          type: Add
          status: Pending approval
        - product:
            display: FactSet Identity
            value: "6781"
            $ref: https://api.factset.com/scim/v2/Products/6781
          requested: 2019-06-07T08:59:37Z
          transactionCode: a8389967-e1ab-4987-822b-86b15857ad09
          type: Add
          status: Pending approval
        uniqueId: 1592F40D-40CF-445B-BDFD-38300F507891
        username: FIN_WEALTH
        products:
        - activationHistoryMonths:
          - 2025-08
          - 2025-07
          - 2025-06
          rapidActivationStatus: active
          display: Exchange NYSE American and Regionals - RT
          value: "11"
          $ref: https://api.factset.com/scim/v2/Products/11
        - activationHistoryMonths:
          - 2025-08
          - 2025-07
          - 2025-06
          rapidActivationStatus: active
          display: Exchange NYSE American and Regionals - RT
          value: "11"
          $ref: https://api.factset.com/scim/v2/Products/11
      properties:
        username:
          description: A FactSet "username" is FactSet's logical structure for grouping
            serial numbers into like-groups based on roleName, geographical location
            or line of business.
          example: FIN_WEALTH
          type: string
        serialNumber:
          description: A serial number represents an individual's unique FactSet account
            identifier and base-workstation access. Serial numbers are allocated to
            an individual when a valid RoleName is present.
          example: "123456"
          readOnly: true
          type: string
        uniqueId:
          description: User identifier from the legacy User Provisioning API.
          example: 1592F40D-40CF-445B-BDFD-38300F507891
          readOnly: true
          type: string
        location:
          $ref: '#/components/schemas/LocationResourceReference'
        userTaxonomyData:
          $ref: '#/components/schemas/UserResource_urn_scim_schemas_extension_FactSet_Core_1_0_User_userTaxonomyData'
        roleName:
          description: Predetermined role of specific individual. Issues individual
            a base FactSet workstation and serial number. If passed as NULL a base-FactSet
            workstation will be allocated to the individual granting the individual
            a FactSet SerialNumber
          example: Wealth Manager
          type: string
        royaltyClass:
          description: Determines the type of client the individual and the royalty
            fee to be remitted to FactSet for the individual. Expected Royalty Class
            values will be provided to you by your FactSet account representative.
          type: string
        products:
          description: An array of FactSet products to allocate/remove from an individual.
            Individual must have a FactSet serial number associated with them.
          items:
            $ref: '#/components/schemas/ProductResourceReferenceWithRapidActivationInfo'
          type: array
        pendingProductOrders:
          description: An array of pending FactSet product orders.
          items:
            $ref: '#/components/schemas/PendingProductOrder'
          readOnly: true
          type: array
        federations:
          description: References to the federations in which the user has at least
            one assertion value.
          items:
            $ref: '#/components/schemas/FederationResourceReference'
          type: array
        invoiceId:
          description: The identifier of the invoice that should be associated with
            a new user for billing purposes. Note once an invoice ID has been assigned
            to a user, it cannot be modified via this API. If invoice ID re-assignment
            is necessary, please contact your FactSet representative.
          example: 9QMD
          type: string
      required:
      - username
      type: object
    UserResource_urn_scim_schemas_extension_FactSet_VRS_1_0_User:
      example:
        domainData:
        - domainCode: btud
          password: password
          tenancies:
            value: MASTER
          isAdministrator: false
        - domainCode: btud
          password: password
          tenancies:
            value: MASTER
          isAdministrator: false
      properties:
        domainData:
          description: A set of attributes pertaining to individual Vermilion domains.
          items:
            $ref: '#/components/schemas/UserResourceVRSDomainData'
          type: array
      type: object
    UserResource_meta:
      example:
        created: 2019-02-11T15:33:31.077Z
        location: https://api.factset.com/scim/v2/Users/FIN_WEALTH-123456
        lastModified: 2019-06-07T08:59:37Z
        resourceType: User
      properties:
        resourceType:
          example: User
          type: string
        created:
          example: 2019-02-11T15:33:31.077Z
          format: date-time
          type: string
        lastModified:
          example: 2019-06-07T08:59:37Z
          format: date-time
          type: string
        location:
          example: https://api.factset.com/scim/v2/Users/FIN_WEALTH-123456
          type: string
      readOnly: true
      type: object
    UserResourceVRSDomainData_tenancies:
      description: List of tenancies where the User exists in the associated domain.
      example:
        value: MASTER
      properties:
        value:
          description: Name of a tenant.
          example: MASTER
          type: string
      required:
      - value
      type: object
    GroupResource_urn_scim_schemas_extension_FactSet_EnterpriseHosting_1_0_Group:
      example:
        domainCode: btud
      properties:
        domainCode:
          description: Domain code of the Enterprise Hosting pod containing this group.
          example: btud
          readOnly: true
          type: string
      readOnly: true
      required:
      - domainCode
      type: object
    GroupResource_urn_scim_schemas_extension_FactSet_VRS_1_0_Group:
      example:
        domainCode: btud
        tenant: QA
      properties:
        tenant:
          description: The tenant this role is in
          example: QA
          type: string
        domainCode:
          description: Domain code of Enterprise Hosting pod in which user resides.
            REQUIRED.
          example: btud
          type: string
      required:
      - domainCode
      type: object
    GroupResource_meta:
      example:
        created: 2019-02-11T15:33:31.077Z
        location: https://api.factset.com/scim/v2/Groups/eh%3Abtud%3APod%2004%20-%20CitrixApps%20-%20Cymba%20OMS
        lastModified: 2019-06-07T08:59:37Z
        resourceType: Group
      properties:
        resourceType:
          example: Group
          type: string
        created:
          example: 2019-02-11T15:33:31.077Z
          format: date-time
          type: string
        lastModified:
          example: 2019-06-07T08:59:37Z
          format: date-time
          type: string
        location:
          example: https://api.factset.com/scim/v2/Groups/eh%3Abtud%3APod%2004%20-%20CitrixApps%20-%20Cymba%20OMS
          type: string
      readOnly: true
      type: object
    LocationResource_meta:
      example:
        created: 2019-02-11T08:44:19+00:00
        location: https://api.factset.com/scim/v2/Locations/1598276
        lastModified: 2021-01-12T03:11:13+00:00
        resourceType: Location
      properties:
        resourceType:
          example: Location
          type: string
        created:
          example: 2019-02-11T08:44:19+00:00
          type: string
        lastModified:
          example: 2021-01-12T03:11:13+00:00
          type: string
        location:
          example: https://api.factset.com/scim/v2/Locations/1598276
          type: string
      readOnly: true
      type: object
    FirmDescriptionResource_meta:
      example:
        location: https://api.factset.com/scim/v2/FirmDescriptions/3
        resourceType: FirmDescription
      properties:
        resourceType:
          example: FirmDescription
          type: string
        location:
          example: https://api.factset.com/scim/v2/FirmDescriptions/3
          type: string
      readOnly: true
      type: object
    UserClassResource_meta:
      example:
        location: https://api.factset.com/scim/v2/UserClasses/4
        resourceType: UserClass
      properties:
        resourceType:
          example: UserClass
          type: string
        location:
          example: https://api.factset.com/scim/v2/UserClasses/4
          type: string
      readOnly: true
      type: object
    UserPositionResource_meta:
      example:
        location: https://api.factset.com/scim/v2/UserPositions/31
        resourceType: UserPosition
      properties:
        resourceType:
          example: UserPosition
          type: string
        location:
          example: https://api.factset.com/scim/v2/UserPositions/31
          type: string
      readOnly: true
      type: object
    ProductResource_meta:
      example:
        location: https://api.factset.com/scim/v2/Products/6781
        resourceType: Product
      properties:
        resourceType:
          example: Product
          type: string
        location:
          example: https://api.factset.com/scim/v2/Products/6781
          type: string
      readOnly: true
      type: object
    FileManagerAuditItemAdditionalProperty_entity:
      description: The entity associated with the file's attributes.
      properties:
        name:
          description: The name of the entity.
          type: string
        type:
          description: The type of the entity.
          type: string
      required:
      - name
      - type
      type: object
    FileManagerAuditItemAdditionalProperty_permissions:
      description: Object describing the permissions the associated entity has regarding
        the associated file.
      properties:
        read:
          description: Whether the associated entity has permission to read the associated
            file.
          type: boolean
        write:
          description: Whether the associated entity has permission to write the associated
            file.
          type: boolean
        maintain:
          description: Whether the associated entity has permission to maintain the
            associated file.
          type: boolean
      required:
      - maintain
      - read
      - write
      type: object
    FileManagerAuditItemAdditionalProperty_permission_override:
      properties:
        read:
          type: boolean
        write:
          type: boolean
        maintain:
          type: boolean
      required:
      - maintain
      - read
      - write
      type: object
  securitySchemes:
    FactSetOAuth2:
      flows:
        clientCredentials:
          scopes: {}
          tokenUrl: https://auth.factset.com/as/token.oauth2
      type: oauth2
    FactSetApiKey:
      scheme: basic
      type: http

