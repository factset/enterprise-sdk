/*
 * FactSet SCIM API
 * FactSet's SCIM API implementation.
 *
 * The version of the OpenAPI document: 2.6.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.ProcuretoPayAPISCIM.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.ProcuretoPayAPISCIM.models.FileManagerAuditItemAdditionalProperty;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.ProcuretoPayAPISCIM.JSON;


/**
 * FileManagerAuditItem
 */
@JsonPropertyOrder({
  FileManagerAuditItem.JSON_PROPERTY_USERNAME,
  FileManagerAuditItem.JSON_PROPERTY_PATHS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class FileManagerAuditItem implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_USERNAME = "username";
  private String username;

  public static final String JSON_PROPERTY_PATHS = "paths";
  private java.util.Map<String, java.util.List<FileManagerAuditItemAdditionalProperty>> paths = new java.util.HashMap<>();

  public FileManagerAuditItem() { 
  }

  @JsonCreator
  public FileManagerAuditItem(
    @JsonProperty(value=JSON_PROPERTY_USERNAME, required=true) String username, 
    @JsonProperty(value=JSON_PROPERTY_PATHS, required=true) java.util.Map<String, java.util.List<FileManagerAuditItemAdditionalProperty>> paths
  ) {
    this();
    this.username = username;
    this.paths = paths;
  }

  public FileManagerAuditItem username(String username) {
    this.username = username;
    return this;
  }

   /**
   * The FactSet username associated with the file paths.
   * @return username
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The FactSet username associated with the file paths.")
  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUsername() {
    return username;
  }


  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUsername(String username) {
    this.username = username;
  }


  public FileManagerAuditItem paths(java.util.Map<String, java.util.List<FileManagerAuditItemAdditionalProperty>> paths) {
    this.paths = paths;
    return this;
  }

  public FileManagerAuditItem putPathsItem(String key, java.util.List<FileManagerAuditItemAdditionalProperty> pathsItem) {
    this.paths.put(key, pathsItem);
    return this;
  }

   /**
   * Object containing all file paths and their associated attributes.
   * @return paths
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Object containing all file paths and their associated attributes.")
  @JsonProperty(JSON_PROPERTY_PATHS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public java.util.Map<String, java.util.List<FileManagerAuditItemAdditionalProperty>> getPaths() {
    return paths;
  }


  @JsonProperty(JSON_PROPERTY_PATHS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPaths(java.util.Map<String, java.util.List<FileManagerAuditItemAdditionalProperty>> paths) {
    this.paths = paths;
  }


  /**
   * Return true if this FileManagerAuditItem object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FileManagerAuditItem fileManagerAuditItem = (FileManagerAuditItem) o;
    return Objects.equals(this.username, fileManagerAuditItem.username) &&
        Objects.equals(this.paths, fileManagerAuditItem.paths);
  }

  @Override
  public int hashCode() {
    return Objects.hash(username, paths);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FileManagerAuditItem {\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    paths: ").append(toIndentedString(paths)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

