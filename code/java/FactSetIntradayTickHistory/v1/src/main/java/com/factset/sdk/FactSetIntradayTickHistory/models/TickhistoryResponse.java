/*
 * Tick History
 * <p>FactSetâ€™s Tick History provides cost-effective access to real-time and delayed global exchange data. Proprietary technology normalizes over 200 global exchanges and 19 tick history fields. Asset types integrated include equities, futures, options, fixed income, mutual funds, ETFs, indices, commodities, and FX rates.</p><p>Tick History provides dynamic access to tick data for a specific security intra-day or historically via standard HTTPS protocol. History is available for all quotes and trades for a trailing 6 months or 1-year, respectively. Quotes and trade data for Options is available for 30 days. Tick History data is also available in a separate end-of-day feed.</p>   
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetIntradayTickHistory.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.FactSetIntradayTickHistory.models.Fields;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetIntradayTickHistory.JSON;


/**
 * response for tick history
 */
@ApiModel(description = "response for tick history")
@JsonPropertyOrder({
  TickhistoryResponse.JSON_PROPERTY_REQUESTED_I_D,
  TickhistoryResponse.JSON_PROPERTY_REQUESTED_SYMBOL,
  TickhistoryResponse.JSON_PROPERTY_REQUESTED_FIELDS,
  TickhistoryResponse.JSON_PROPERTY_REQUEST_KEY,
  TickhistoryResponse.JSON_PROPERTY_ERROR_CODE,
  TickhistoryResponse.JSON_PROPERTY_ERROR_DESCRIPTION,
  TickhistoryResponse.JSON_PROPERTY_FIELD_NAMES,
  TickhistoryResponse.JSON_PROPERTY_FIELD_I_DS,
  TickhistoryResponse.JSON_PROPERTY_KEY,
  TickhistoryResponse.JSON_PROPERTY_VALUES
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class TickhistoryResponse implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_REQUESTED_I_D = "Requested ID";
  private String requestedID;

  public static final String JSON_PROPERTY_REQUESTED_SYMBOL = "Requested Symbol";
  private String requestedSymbol;

  public static final String JSON_PROPERTY_REQUESTED_FIELDS = "Requested Fields";
  private java.util.List<Fields> requestedFields = null;

  public static final String JSON_PROPERTY_REQUEST_KEY = "Request Key";
  private String requestKey;

  public static final String JSON_PROPERTY_ERROR_CODE = "Error Code";
  private String errorCode;

  public static final String JSON_PROPERTY_ERROR_DESCRIPTION = "Error Description";
  private String errorDescription;

  public static final String JSON_PROPERTY_FIELD_NAMES = "Field Names";
  private String fieldNames;

  public static final String JSON_PROPERTY_FIELD_I_DS = "Field IDs";
  private BigDecimal fieldIDs;

  public static final String JSON_PROPERTY_KEY = "Key";
  private String key;

  public static final String JSON_PROPERTY_VALUES = "Values";
  private BigDecimal values;

  public TickhistoryResponse() { 
  }

  public TickhistoryResponse requestedID(String requestedID) {
    this.requestedID = requestedID;
    return this;
  }

   /**
   * Request Identification String.
   * @return requestedID
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "", value = "Request Identification String.")
  @JsonProperty(JSON_PROPERTY_REQUESTED_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRequestedID() {
    return requestedID;
  }


  @JsonProperty(JSON_PROPERTY_REQUESTED_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestedID(String requestedID) {
    this.requestedID = requestedID;
  }


  public TickhistoryResponse requestedSymbol(String requestedSymbol) {
    this.requestedSymbol = requestedSymbol;
    return this;
  }

   /**
   * Single Requested Symbol or Security.
   * @return requestedSymbol
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "IBM-USA", value = "Single Requested Symbol or Security.")
  @JsonProperty(JSON_PROPERTY_REQUESTED_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRequestedSymbol() {
    return requestedSymbol;
  }


  @JsonProperty(JSON_PROPERTY_REQUESTED_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestedSymbol(String requestedSymbol) {
    this.requestedSymbol = requestedSymbol;
  }


  public TickhistoryResponse requestedFields(java.util.List<Fields> requestedFields) {
    this.requestedFields = requestedFields;
    return this;
  }

  public TickhistoryResponse addRequestedFieldsItem(Fields requestedFieldsItem) {
    if (this.requestedFields == null) {
      this.requestedFields = new java.util.ArrayList<>();
    }
    this.requestedFields.add(requestedFieldsItem);
    return this;
  }

   /**
   * Array of requested fields 
   * @return requestedFields
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "LAST_1,LAST_TIME_1,LAST_VOL_1", value = "Array of requested fields ")
  @JsonProperty(JSON_PROPERTY_REQUESTED_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<Fields> getRequestedFields() {
    return requestedFields;
  }


  @JsonProperty(JSON_PROPERTY_REQUESTED_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestedFields(java.util.List<Fields> requestedFields) {
    this.requestedFields = requestedFields;
  }


  public TickhistoryResponse requestKey(String requestKey) {
    this.requestKey = requestKey;
    return this;
  }

   /**
   * Get requestKey
   * @return requestKey
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "5C8926159C36F315", value = "")
  @JsonProperty(JSON_PROPERTY_REQUEST_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRequestKey() {
    return requestKey;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestKey(String requestKey) {
    this.requestKey = requestKey;
  }


  public TickhistoryResponse errorCode(String errorCode) {
    this.errorCode = errorCode;
    return this;
  }

   /**
   * Get errorCode
   * @return errorCode
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")
  @JsonProperty(JSON_PROPERTY_ERROR_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getErrorCode() {
    return errorCode;
  }


  @JsonProperty(JSON_PROPERTY_ERROR_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setErrorCode(String errorCode) {
    this.errorCode = errorCode;
  }


  public TickhistoryResponse errorDescription(String errorDescription) {
    this.errorDescription = errorDescription;
    return this;
  }

   /**
   * Brief description of error response. Blank if successful.
   * @return errorDescription
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "", value = "Brief description of error response. Blank if successful.")
  @JsonProperty(JSON_PROPERTY_ERROR_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getErrorDescription() {
    return errorDescription;
  }


  @JsonProperty(JSON_PROPERTY_ERROR_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setErrorDescription(String errorDescription) {
    this.errorDescription = errorDescription;
  }


  public TickhistoryResponse fieldNames(String fieldNames) {
    this.fieldNames = fieldNames;
    return this;
  }

   /**
   * Requested Field Names
   * @return fieldNames
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "", value = "Requested Field Names")
  @JsonProperty(JSON_PROPERTY_FIELD_NAMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFieldNames() {
    return fieldNames;
  }


  @JsonProperty(JSON_PROPERTY_FIELD_NAMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFieldNames(String fieldNames) {
    this.fieldNames = fieldNames;
  }


  public TickhistoryResponse fieldIDs(BigDecimal fieldIDs) {
    this.fieldIDs = fieldIDs;
    return this;
  }

   /**
   * Requested Field ID numbers &#39;FID&#39;. Found in Data Service Manual.
   * @return fieldIDs
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Requested Field ID numbers 'FID'. Found in Data Service Manual.")
  @JsonProperty(JSON_PROPERTY_FIELD_I_DS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getFieldIDs() {
    return fieldIDs;
  }


  @JsonProperty(JSON_PROPERTY_FIELD_I_DS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFieldIDs(BigDecimal fieldIDs) {
    this.fieldIDs = fieldIDs;
  }


  public TickhistoryResponse key(String key) {
    this.key = key;
    return this;
  }

   /**
   * Requested Symbol Key, where :D represented delayed data.
   * @return key
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "IBM-USA:D", value = "Requested Symbol Key, where :D represented delayed data.")
  @JsonProperty(JSON_PROPERTY_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getKey() {
    return key;
  }


  @JsonProperty(JSON_PROPERTY_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKey(String key) {
    this.key = key;
  }


  public TickhistoryResponse values(BigDecimal values) {
    this.values = values;
    return this;
  }

   /**
   * Array of field values. Each value is returned for requested interval query.
   * @return values
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Array of field values. Each value is returned for requested interval query.")
  @JsonProperty(JSON_PROPERTY_VALUES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getValues() {
    return values;
  }


  @JsonProperty(JSON_PROPERTY_VALUES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValues(BigDecimal values) {
    this.values = values;
  }


  /**
   * Return true if this tickhistory_response object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TickhistoryResponse tickhistoryResponse = (TickhistoryResponse) o;
    return Objects.equals(this.requestedID, tickhistoryResponse.requestedID) &&
        Objects.equals(this.requestedSymbol, tickhistoryResponse.requestedSymbol) &&
        Objects.equals(this.requestedFields, tickhistoryResponse.requestedFields) &&
        Objects.equals(this.requestKey, tickhistoryResponse.requestKey) &&
        Objects.equals(this.errorCode, tickhistoryResponse.errorCode) &&
        Objects.equals(this.errorDescription, tickhistoryResponse.errorDescription) &&
        Objects.equals(this.fieldNames, tickhistoryResponse.fieldNames) &&
        Objects.equals(this.fieldIDs, tickhistoryResponse.fieldIDs) &&
        Objects.equals(this.key, tickhistoryResponse.key) &&
        Objects.equals(this.values, tickhistoryResponse.values);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestedID, requestedSymbol, requestedFields, requestKey, errorCode, errorDescription, fieldNames, fieldIDs, key, values);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TickhistoryResponse {\n");
    sb.append("    requestedID: ").append(toIndentedString(requestedID)).append("\n");
    sb.append("    requestedSymbol: ").append(toIndentedString(requestedSymbol)).append("\n");
    sb.append("    requestedFields: ").append(toIndentedString(requestedFields)).append("\n");
    sb.append("    requestKey: ").append(toIndentedString(requestKey)).append("\n");
    sb.append("    errorCode: ").append(toIndentedString(errorCode)).append("\n");
    sb.append("    errorDescription: ").append(toIndentedString(errorDescription)).append("\n");
    sb.append("    fieldNames: ").append(toIndentedString(fieldNames)).append("\n");
    sb.append("    fieldIDs: ").append(toIndentedString(fieldIDs)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    values: ").append(toIndentedString(values)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

