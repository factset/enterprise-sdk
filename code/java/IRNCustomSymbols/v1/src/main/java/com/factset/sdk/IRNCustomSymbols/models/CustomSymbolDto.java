/*
 * IRN API v1
 * Allows users to extract, create, update and configure IRN data.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.IRNCustomSymbols.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.IRNCustomSymbols.models.CustomSymbolAddressDto;
import com.factset.sdk.IRNCustomSymbols.models.CustomSymbolCustomFieldValueDto;
import com.factset.sdk.IRNCustomSymbols.models.CustomSymbolSubTypeSummaryDto;
import com.factset.sdk.IRNCustomSymbols.models.CustomSymbolTypeSummaryDto;
import com.factset.sdk.IRNCustomSymbols.models.InstrumentDto;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.IRNCustomSymbols.JSON;


/**
 * CustomSymbolDto
 */
@JsonPropertyOrder({
  CustomSymbolDto.JSON_PROPERTY_ID,
  CustomSymbolDto.JSON_PROPERTY_CODE,
  CustomSymbolDto.JSON_PROPERTY_NAME,
  CustomSymbolDto.JSON_PROPERTY_DESCRIPTION,
  CustomSymbolDto.JSON_PROPERTY_TYPE,
  CustomSymbolDto.JSON_PROPERTY_SUB_TYPE,
  CustomSymbolDto.JSON_PROPERTY_ADDRESS,
  CustomSymbolDto.JSON_PROPERTY_CUSTOM_FIELDS,
  CustomSymbolDto.JSON_PROPERTY_CREATED_DATE,
  CustomSymbolDto.JSON_PROPERTY_CREATED_BY,
  CustomSymbolDto.JSON_PROPERTY_STANDARD_SYMBOL,
  CustomSymbolDto.JSON_PROPERTY_STANDARD_SYMBOL_INSTRUMENT_DATA,
  CustomSymbolDto.JSON_PROPERTY_IS_ADDRESS_AUTO_FILLED,
  CustomSymbolDto.JSON_PROPERTY_IS_DESCRIPTION_AUTO_FILLED,
  CustomSymbolDto.JSON_PROPERTY_IS_DELETED
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class CustomSymbolDto implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ID = "id";
  private java.util.UUID id;

  public static final String JSON_PROPERTY_CODE = "code";
  private JsonNullable<String> code = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private JsonNullable<String> description = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TYPE = "type";
  private JsonNullable<CustomSymbolTypeSummaryDto> type = JsonNullable.<CustomSymbolTypeSummaryDto>undefined();

  public static final String JSON_PROPERTY_SUB_TYPE = "subType";
  private JsonNullable<CustomSymbolSubTypeSummaryDto> subType = JsonNullable.<CustomSymbolSubTypeSummaryDto>undefined();

  public static final String JSON_PROPERTY_ADDRESS = "address";
  private JsonNullable<CustomSymbolAddressDto> address = JsonNullable.<CustomSymbolAddressDto>undefined();

  public static final String JSON_PROPERTY_CUSTOM_FIELDS = "customFields";
  private JsonNullable<java.util.List<CustomSymbolCustomFieldValueDto>> customFields = JsonNullable.<java.util.List<CustomSymbolCustomFieldValueDto>>undefined();

  public static final String JSON_PROPERTY_CREATED_DATE = "createdDate";
  private JsonNullable<String> createdDate = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CREATED_BY = "createdBy";
  private JsonNullable<String> createdBy = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_STANDARD_SYMBOL = "standardSymbol";
  private JsonNullable<String> standardSymbol = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_STANDARD_SYMBOL_INSTRUMENT_DATA = "standardSymbolInstrumentData";
  private JsonNullable<InstrumentDto> standardSymbolInstrumentData = JsonNullable.<InstrumentDto>undefined();

  public static final String JSON_PROPERTY_IS_ADDRESS_AUTO_FILLED = "isAddressAutoFilled";
  private Boolean isAddressAutoFilled;

  public static final String JSON_PROPERTY_IS_DESCRIPTION_AUTO_FILLED = "isDescriptionAutoFilled";
  private Boolean isDescriptionAutoFilled;

  public static final String JSON_PROPERTY_IS_DELETED = "isDeleted";
  private Boolean isDeleted;

  public CustomSymbolDto() { 
  }

  public CustomSymbolDto id(java.util.UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(java.util.UUID id) {
    this.id = id;
  }


  public CustomSymbolDto code(String code) {
    this.code = JsonNullable.<String>of(code);
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCode() {
        return code.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCode_JsonNullable() {
    return code;
  }
  
  @JsonProperty(JSON_PROPERTY_CODE)
  public void setCode_JsonNullable(JsonNullable<String> code) {
    this.code = code;
  }

  public void setCode(String code) {
    this.code = JsonNullable.<String>of(code);
  }


  public CustomSymbolDto name(String name) {
    this.name = JsonNullable.<String>of(name);
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public CustomSymbolDto description(String description) {
    this.description = JsonNullable.<String>of(description);
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDescription() {
        return description.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescription_JsonNullable() {
    return description;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  public void setDescription_JsonNullable(JsonNullable<String> description) {
    this.description = description;
  }

  public void setDescription(String description) {
    this.description = JsonNullable.<String>of(description);
  }


  public CustomSymbolDto type(CustomSymbolTypeSummaryDto type) {
    this.type = JsonNullable.<CustomSymbolTypeSummaryDto>of(type);
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public CustomSymbolTypeSummaryDto getType() {
        return type.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<CustomSymbolTypeSummaryDto> getType_JsonNullable() {
    return type;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPE)
  public void setType_JsonNullable(JsonNullable<CustomSymbolTypeSummaryDto> type) {
    this.type = type;
  }

  public void setType(CustomSymbolTypeSummaryDto type) {
    this.type = JsonNullable.<CustomSymbolTypeSummaryDto>of(type);
  }


  public CustomSymbolDto subType(CustomSymbolSubTypeSummaryDto subType) {
    this.subType = JsonNullable.<CustomSymbolSubTypeSummaryDto>of(subType);
    return this;
  }

   /**
   * Get subType
   * @return subType
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public CustomSymbolSubTypeSummaryDto getSubType() {
        return subType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SUB_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<CustomSymbolSubTypeSummaryDto> getSubType_JsonNullable() {
    return subType;
  }
  
  @JsonProperty(JSON_PROPERTY_SUB_TYPE)
  public void setSubType_JsonNullable(JsonNullable<CustomSymbolSubTypeSummaryDto> subType) {
    this.subType = subType;
  }

  public void setSubType(CustomSymbolSubTypeSummaryDto subType) {
    this.subType = JsonNullable.<CustomSymbolSubTypeSummaryDto>of(subType);
  }


  public CustomSymbolDto address(CustomSymbolAddressDto address) {
    this.address = JsonNullable.<CustomSymbolAddressDto>of(address);
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public CustomSymbolAddressDto getAddress() {
        return address.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<CustomSymbolAddressDto> getAddress_JsonNullable() {
    return address;
  }
  
  @JsonProperty(JSON_PROPERTY_ADDRESS)
  public void setAddress_JsonNullable(JsonNullable<CustomSymbolAddressDto> address) {
    this.address = address;
  }

  public void setAddress(CustomSymbolAddressDto address) {
    this.address = JsonNullable.<CustomSymbolAddressDto>of(address);
  }


  public CustomSymbolDto customFields(java.util.List<CustomSymbolCustomFieldValueDto> customFields) {
    this.customFields = JsonNullable.<java.util.List<CustomSymbolCustomFieldValueDto>>of(customFields);
    return this;
  }

  public CustomSymbolDto addCustomFieldsItem(CustomSymbolCustomFieldValueDto customFieldsItem) {
    if (this.customFields == null || !this.customFields.isPresent()) {
      this.customFields = JsonNullable.<java.util.List<CustomSymbolCustomFieldValueDto>>of(new java.util.ArrayList<>());
    }
    try {
      this.customFields.get().add(customFieldsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get customFields
   * @return customFields
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public java.util.List<CustomSymbolCustomFieldValueDto> getCustomFields() {
        return customFields.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CUSTOM_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<java.util.List<CustomSymbolCustomFieldValueDto>> getCustomFields_JsonNullable() {
    return customFields;
  }
  
  @JsonProperty(JSON_PROPERTY_CUSTOM_FIELDS)
  public void setCustomFields_JsonNullable(JsonNullable<java.util.List<CustomSymbolCustomFieldValueDto>> customFields) {
    this.customFields = customFields;
  }

  public void setCustomFields(java.util.List<CustomSymbolCustomFieldValueDto> customFields) {
    this.customFields = JsonNullable.<java.util.List<CustomSymbolCustomFieldValueDto>>of(customFields);
  }


  public CustomSymbolDto createdDate(String createdDate) {
    this.createdDate = JsonNullable.<String>of(createdDate);
    return this;
  }

   /**
   * Get createdDate
   * @return createdDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCreatedDate() {
        return createdDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCreatedDate_JsonNullable() {
    return createdDate;
  }
  
  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  public void setCreatedDate_JsonNullable(JsonNullable<String> createdDate) {
    this.createdDate = createdDate;
  }

  public void setCreatedDate(String createdDate) {
    this.createdDate = JsonNullable.<String>of(createdDate);
  }


  public CustomSymbolDto createdBy(String createdBy) {
    this.createdBy = JsonNullable.<String>of(createdBy);
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCreatedBy() {
        return createdBy.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CREATED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCreatedBy_JsonNullable() {
    return createdBy;
  }
  
  @JsonProperty(JSON_PROPERTY_CREATED_BY)
  public void setCreatedBy_JsonNullable(JsonNullable<String> createdBy) {
    this.createdBy = createdBy;
  }

  public void setCreatedBy(String createdBy) {
    this.createdBy = JsonNullable.<String>of(createdBy);
  }


  public CustomSymbolDto standardSymbol(String standardSymbol) {
    this.standardSymbol = JsonNullable.<String>of(standardSymbol);
    return this;
  }

   /**
   * Get standardSymbol
   * @return standardSymbol
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getStandardSymbol() {
        return standardSymbol.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STANDARD_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getStandardSymbol_JsonNullable() {
    return standardSymbol;
  }
  
  @JsonProperty(JSON_PROPERTY_STANDARD_SYMBOL)
  public void setStandardSymbol_JsonNullable(JsonNullable<String> standardSymbol) {
    this.standardSymbol = standardSymbol;
  }

  public void setStandardSymbol(String standardSymbol) {
    this.standardSymbol = JsonNullable.<String>of(standardSymbol);
  }


  public CustomSymbolDto standardSymbolInstrumentData(InstrumentDto standardSymbolInstrumentData) {
    this.standardSymbolInstrumentData = JsonNullable.<InstrumentDto>of(standardSymbolInstrumentData);
    return this;
  }

   /**
   * Get standardSymbolInstrumentData
   * @return standardSymbolInstrumentData
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public InstrumentDto getStandardSymbolInstrumentData() {
        return standardSymbolInstrumentData.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STANDARD_SYMBOL_INSTRUMENT_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<InstrumentDto> getStandardSymbolInstrumentData_JsonNullable() {
    return standardSymbolInstrumentData;
  }
  
  @JsonProperty(JSON_PROPERTY_STANDARD_SYMBOL_INSTRUMENT_DATA)
  public void setStandardSymbolInstrumentData_JsonNullable(JsonNullable<InstrumentDto> standardSymbolInstrumentData) {
    this.standardSymbolInstrumentData = standardSymbolInstrumentData;
  }

  public void setStandardSymbolInstrumentData(InstrumentDto standardSymbolInstrumentData) {
    this.standardSymbolInstrumentData = JsonNullable.<InstrumentDto>of(standardSymbolInstrumentData);
  }


  public CustomSymbolDto isAddressAutoFilled(Boolean isAddressAutoFilled) {
    this.isAddressAutoFilled = isAddressAutoFilled;
    return this;
  }

   /**
   * Get isAddressAutoFilled
   * @return isAddressAutoFilled
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_IS_ADDRESS_AUTO_FILLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsAddressAutoFilled() {
    return isAddressAutoFilled;
  }


  @JsonProperty(JSON_PROPERTY_IS_ADDRESS_AUTO_FILLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsAddressAutoFilled(Boolean isAddressAutoFilled) {
    this.isAddressAutoFilled = isAddressAutoFilled;
  }


  public CustomSymbolDto isDescriptionAutoFilled(Boolean isDescriptionAutoFilled) {
    this.isDescriptionAutoFilled = isDescriptionAutoFilled;
    return this;
  }

   /**
   * Get isDescriptionAutoFilled
   * @return isDescriptionAutoFilled
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_IS_DESCRIPTION_AUTO_FILLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsDescriptionAutoFilled() {
    return isDescriptionAutoFilled;
  }


  @JsonProperty(JSON_PROPERTY_IS_DESCRIPTION_AUTO_FILLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsDescriptionAutoFilled(Boolean isDescriptionAutoFilled) {
    this.isDescriptionAutoFilled = isDescriptionAutoFilled;
  }


  public CustomSymbolDto isDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
    return this;
  }

   /**
   * Get isDeleted
   * @return isDeleted
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_IS_DELETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsDeleted() {
    return isDeleted;
  }


  @JsonProperty(JSON_PROPERTY_IS_DELETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
  }


  /**
   * Return true if this CustomSymbolDto object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomSymbolDto customSymbolDto = (CustomSymbolDto) o;
    return Objects.equals(this.id, customSymbolDto.id) &&
        equalsNullable(this.code, customSymbolDto.code) &&
        equalsNullable(this.name, customSymbolDto.name) &&
        equalsNullable(this.description, customSymbolDto.description) &&
        equalsNullable(this.type, customSymbolDto.type) &&
        equalsNullable(this.subType, customSymbolDto.subType) &&
        equalsNullable(this.address, customSymbolDto.address) &&
        equalsNullable(this.customFields, customSymbolDto.customFields) &&
        equalsNullable(this.createdDate, customSymbolDto.createdDate) &&
        equalsNullable(this.createdBy, customSymbolDto.createdBy) &&
        equalsNullable(this.standardSymbol, customSymbolDto.standardSymbol) &&
        equalsNullable(this.standardSymbolInstrumentData, customSymbolDto.standardSymbolInstrumentData) &&
        Objects.equals(this.isAddressAutoFilled, customSymbolDto.isAddressAutoFilled) &&
        Objects.equals(this.isDescriptionAutoFilled, customSymbolDto.isDescriptionAutoFilled) &&
        Objects.equals(this.isDeleted, customSymbolDto.isDeleted);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, hashCodeNullable(code), hashCodeNullable(name), hashCodeNullable(description), hashCodeNullable(type), hashCodeNullable(subType), hashCodeNullable(address), hashCodeNullable(customFields), hashCodeNullable(createdDate), hashCodeNullable(createdBy), hashCodeNullable(standardSymbol), hashCodeNullable(standardSymbolInstrumentData), isAddressAutoFilled, isDescriptionAutoFilled, isDeleted);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomSymbolDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    subType: ").append(toIndentedString(subType)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    standardSymbol: ").append(toIndentedString(standardSymbol)).append("\n");
    sb.append("    standardSymbolInstrumentData: ").append(toIndentedString(standardSymbolInstrumentData)).append("\n");
    sb.append("    isAddressAutoFilled: ").append(toIndentedString(isAddressAutoFilled)).append("\n");
    sb.append("    isDescriptionAutoFilled: ").append(toIndentedString(isDescriptionAutoFilled)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

