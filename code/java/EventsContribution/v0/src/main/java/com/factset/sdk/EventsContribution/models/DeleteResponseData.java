/*
 * Events Contribution API
 * The Events Contribution API provides the ability to add specific types of corporate events to FactSet’s own events calendar, for display within FactSet’s applications, as well as for off-platform re-distribution via FactSet’s Events Calendar API.
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.EventsContribution.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.EventsContribution.models.DeleteResponseDataEventData;
import com.factset.sdk.EventsContribution.models.DeleteResponseDataMessage;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.EventsContribution.JSON;


/**
 * DeleteResponseData
 */
@JsonPropertyOrder({
  DeleteResponseData.JSON_PROPERTY_EVENT_DATA,
  DeleteResponseData.JSON_PROPERTY_MESSAGE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class DeleteResponseData implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_EVENT_DATA = "eventData";
  private DeleteResponseDataEventData eventData;

  public static final String JSON_PROPERTY_MESSAGE = "message";
  private DeleteResponseDataMessage message;

  public DeleteResponseData() { 
  }

  public DeleteResponseData eventData(DeleteResponseDataEventData eventData) {
    this.eventData = eventData;
    return this;
  }

   /**
   * Get eventData
   * @return eventData
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EVENT_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DeleteResponseDataEventData getEventData() {
    return eventData;
  }


  @JsonProperty(JSON_PROPERTY_EVENT_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEventData(DeleteResponseDataEventData eventData) {
    this.eventData = eventData;
  }


  public DeleteResponseData message(DeleteResponseDataMessage message) {
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DeleteResponseDataMessage getMessage() {
    return message;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessage(DeleteResponseDataMessage message) {
    this.message = message;
  }


  /**
   * Return true if this deleteResponse_data object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeleteResponseData deleteResponseData = (DeleteResponseData) o;
    return Objects.equals(this.eventData, deleteResponseData.eventData) &&
        Objects.equals(this.message, deleteResponseData.message);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eventData, message);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeleteResponseData {\n");
    sb.append("    eventData: ").append(toIndentedString(eventData)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

