/*
 * FactSet Concordance API
 *   The FactSet Concordance API enables Application Developers and Data Scientists to programmatically discover the FactSet Identifier for a specific Entity or Person based on attributes, such as name, URL, and location.FactSet Identifiers are mapped to industry-standard identifiers, as well as to a comprehensive set of reference data and unique content, to enhance the ability to quickly connect content sets.<p>     Using the submitted attributes, the FactSet Concordance API leverages FactSetâ€™s extensive Entity Master, People, and Symbology databases to return potential candidate matches and a proposed match. The result is a concorded FactSet Identifier that can then be used as input throughout FactSet's expanding catalog of Content using our Content APIs or Standard DataFeeds.</p>    <b>There are two types of workflows supported in the API:</b>    <b>Entity & People Match:</b> The first workflow follows traditional API conventions in that a request is accepted and a response is returned synchronously enabling the concordance of up to 25 names in a single request. The response returns a list of 20 candidates as well as a proposed match.    <b>Entity & People Match - Bulk:</b> The second workflow allows you to input a large list of names within a .CSV file in a single request. With this workflow, a task is created for uploading a set of queries. Once the task has completed, the client retrieves the concordance results through the /entity-decisions or /people-decisions endpoint. Note that in the Bulk workflow, only the matches for the records are returned. Candidates are not included.    Once the service has provided a list of concorded FactSet Identifiers, you can then use our Entity Mappings and People Mappings endpoints to further review the universe of mapped identifiers or modify existing records. </p><p><b>Rate limit is set to 10 requests per second</b>.</p>    Methodology Guide link:   [https://open.factset.com/api/public/media/download/products/documents/8ca33e81-a7da-4d77-a8cf-2b3a2e868b3d](https://open.factset.com/api/public/media/download/products/documents/8ca33e81-a7da-4d77-a8cf-2b3a2e868b3d)    
 *
 * The version of the OpenAPI document: 2.10.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetConcordance.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetConcordance.JSON;


/**
 * People Match object showing the decision reached for each Entity. 
 */
@ApiModel(description = "People Match object showing the decision reached for each Entity. ")
@JsonPropertyOrder({
  PeopleMatch.JSON_PROPERTY_TASK_ID,
  PeopleMatch.JSON_PROPERTY_ACTIVE_ROLE,
  PeopleMatch.JSON_PROPERTY_CLIENT_ENTITY,
  PeopleMatch.JSON_PROPERTY_CLIENT_FIRST_NAME,
  PeopleMatch.JSON_PROPERTY_CLIENT_LAST_NAME,
  PeopleMatch.JSON_PROPERTY_CLIENT_MIDDLE_NAME,
  PeopleMatch.JSON_PROPERTY_CLIENT_SALUTATION,
  PeopleMatch.JSON_PROPERTY_CLIENT_SUFFIX,
  PeopleMatch.JSON_PROPERTY_CLIENT_PRIORITY,
  PeopleMatch.JSON_PROPERTY_CLIENT_PERSON_NAME,
  PeopleMatch.JSON_PROPERTY_CLIENT_ADDITIONAL_CONTEXT,
  PeopleMatch.JSON_PROPERTY_FIRST_NAME,
  PeopleMatch.JSON_PROPERTY_PERSON_ID,
  PeopleMatch.JSON_PROPERTY_LAST_NAME,
  PeopleMatch.JSON_PROPERTY_MIDDLE_NAME,
  PeopleMatch.JSON_PROPERTY_SUFFIX,
  PeopleMatch.JSON_PROPERTY_SALUTATION,
  PeopleMatch.JSON_PROPERTY_PERSON_NAME,
  PeopleMatch.JSON_PROPERTY_EMAIL,
  PeopleMatch.JSON_PROPERTY_CLIENT_ID,
  PeopleMatch.JSON_PROPERTY_ENTITY,
  PeopleMatch.JSON_PROPERTY_MAP_STATUS,
  PeopleMatch.JSON_PROPERTY_MATCH_FLAG,
  PeopleMatch.JSON_PROPERTY_NAME_MATCH_SOURCE,
  PeopleMatch.JSON_PROPERTY_NAME_MATCH_STRING,
  PeopleMatch.JSON_PROPERTY_ROW_INDEX,
  PeopleMatch.JSON_PROPERTY_SIMILARITY_SCORE,
  PeopleMatch.JSON_PROPERTY_TITLE,
  PeopleMatch.JSON_PROPERTY_UNIVERSE_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class PeopleMatch implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_TASK_ID = "taskId";
  private JsonNullable<Integer> taskId = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_ACTIVE_ROLE = "activeRole";
  private JsonNullable<String> activeRole = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CLIENT_ENTITY = "clientEntity";
  private JsonNullable<String> clientEntity = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CLIENT_FIRST_NAME = "clientFirstName";
  private JsonNullable<String> clientFirstName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CLIENT_LAST_NAME = "clientLastName";
  private JsonNullable<String> clientLastName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CLIENT_MIDDLE_NAME = "clientMiddleName";
  private JsonNullable<String> clientMiddleName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CLIENT_SALUTATION = "clientSalutation";
  private JsonNullable<String> clientSalutation = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CLIENT_SUFFIX = "clientSuffix";
  private JsonNullable<String> clientSuffix = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CLIENT_PRIORITY = "clientPriority";
  private JsonNullable<String> clientPriority = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CLIENT_PERSON_NAME = "clientPersonName";
  private JsonNullable<String> clientPersonName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CLIENT_ADDITIONAL_CONTEXT = "clientAdditionalContext";
  private java.util.Map<String, String> clientAdditionalContext = null;

  public static final String JSON_PROPERTY_FIRST_NAME = "firstName";
  private JsonNullable<String> firstName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PERSON_ID = "personId";
  private JsonNullable<String> personId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LAST_NAME = "lastName";
  private JsonNullable<String> lastName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MIDDLE_NAME = "middleName";
  private JsonNullable<String> middleName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SUFFIX = "suffix";
  private JsonNullable<String> suffix = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SALUTATION = "salutation";
  private JsonNullable<String> salutation = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PERSON_NAME = "personName";
  private JsonNullable<String> personName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EMAIL = "email";
  private JsonNullable<String> email = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CLIENT_ID = "clientId";
  private JsonNullable<String> clientId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ENTITY = "entity";
  private JsonNullable<String> entity = JsonNullable.<String>undefined();

  /**
   * Concordance status of the submitted, where -    * MAPPED - The requested Entity Name is successfully mapped to a FactSet Entity Id (-E)   * UNMAPPED - The requested Entity Name is unmapped by FactSet.   * INDETERMINATE - The requested Entity Name has unable to make a mapping. 
   */
  public enum MapStatusEnum {
    MAPPED("MAPPED"),
    
    UNMAPPED("UNMAPPED"),
    
    INDETERMINATE("INDETERMINATE");

    private String value;

    MapStatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static MapStatusEnum fromValue(String value) {
      for (MapStatusEnum b : MapStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_MAP_STATUS = "mapStatus";
  private JsonNullable<MapStatusEnum> mapStatus = JsonNullable.<MapStatusEnum>undefined();

  public static final String JSON_PROPERTY_MATCH_FLAG = "matchFlag";
  private JsonNullable<String> matchFlag = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_MATCH_SOURCE = "nameMatchSource";
  private JsonNullable<String> nameMatchSource = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_MATCH_STRING = "nameMatchString";
  private JsonNullable<String> nameMatchString = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ROW_INDEX = "rowIndex";
  private JsonNullable<Integer> rowIndex = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_SIMILARITY_SCORE = "similarityScore";
  private JsonNullable<Double> similarityScore = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_TITLE = "title";
  private JsonNullable<String> title = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_UNIVERSE_ID = "universeId";
  private JsonNullable<Integer> universeId = JsonNullable.<Integer>undefined();

  public PeopleMatch() { 
  }

  public PeopleMatch taskId(Integer taskId) {
    this.taskId = JsonNullable.<Integer>of(taskId);
    return this;
  }

   /**
   * Identifier denoting a specific Concordance task submitted by the user. This value will be null for /people-match endpoint responses and is only available when using the \&quot;Bulk\&quot; workflow. 
   * @return taskId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "31", value = "Identifier denoting a specific Concordance task submitted by the user. This value will be null for /people-match endpoint responses and is only available when using the \"Bulk\" workflow. ")
  @JsonIgnore

  public Integer getTaskId() {
        return taskId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TASK_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getTaskId_JsonNullable() {
    return taskId;
  }
  
  @JsonProperty(JSON_PROPERTY_TASK_ID)
  public void setTaskId_JsonNullable(JsonNullable<Integer> taskId) {
    this.taskId = taskId;
  }

  public void setTaskId(Integer taskId) {
    this.taskId = JsonNullable.<Integer>of(taskId);
  }


  public PeopleMatch activeRole(String activeRole) {
    this.activeRole = JsonNullable.<String>of(activeRole);
    return this;
  }

   /**
   * This tells whether the person is now active in the entity
   * @return activeRole
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "true", value = "This tells whether the person is now active in the entity")
  @JsonIgnore

  public String getActiveRole() {
        return activeRole.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ACTIVE_ROLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getActiveRole_JsonNullable() {
    return activeRole;
  }
  
  @JsonProperty(JSON_PROPERTY_ACTIVE_ROLE)
  public void setActiveRole_JsonNullable(JsonNullable<String> activeRole) {
    this.activeRole = activeRole;
  }

  public void setActiveRole(String activeRole) {
    this.activeRole = JsonNullable.<String>of(activeRole);
  }


  public PeopleMatch clientEntity(String clientEntity) {
    this.clientEntity = JsonNullable.<String>of(clientEntity);
    return this;
  }

   /**
   * The entity for which the person is working. 
   * @return clientEntity
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Factset", value = "The entity for which the person is working. ")
  @JsonIgnore

  public String getClientEntity() {
        return clientEntity.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLIENT_ENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getClientEntity_JsonNullable() {
    return clientEntity;
  }
  
  @JsonProperty(JSON_PROPERTY_CLIENT_ENTITY)
  public void setClientEntity_JsonNullable(JsonNullable<String> clientEntity) {
    this.clientEntity = clientEntity;
  }

  public void setClientEntity(String clientEntity) {
    this.clientEntity = JsonNullable.<String>of(clientEntity);
  }


  public PeopleMatch clientFirstName(String clientFirstName) {
    this.clientFirstName = JsonNullable.<String>of(clientFirstName);
    return this;
  }

   /**
   * First Name provided in the input file which is used in the &#x60;people-task&#x60; endpoint
   * @return clientFirstName
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Elon", value = "First Name provided in the input file which is used in the `people-task` endpoint")
  @JsonIgnore

  public String getClientFirstName() {
        return clientFirstName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLIENT_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getClientFirstName_JsonNullable() {
    return clientFirstName;
  }
  
  @JsonProperty(JSON_PROPERTY_CLIENT_FIRST_NAME)
  public void setClientFirstName_JsonNullable(JsonNullable<String> clientFirstName) {
    this.clientFirstName = clientFirstName;
  }

  public void setClientFirstName(String clientFirstName) {
    this.clientFirstName = JsonNullable.<String>of(clientFirstName);
  }


  public PeopleMatch clientLastName(String clientLastName) {
    this.clientLastName = JsonNullable.<String>of(clientLastName);
    return this;
  }

   /**
   * Last Name provided in the input file which is used in the &#x60;people-task&#x60; endpoint
   * @return clientLastName
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Musk", value = "Last Name provided in the input file which is used in the `people-task` endpoint")
  @JsonIgnore

  public String getClientLastName() {
        return clientLastName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLIENT_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getClientLastName_JsonNullable() {
    return clientLastName;
  }
  
  @JsonProperty(JSON_PROPERTY_CLIENT_LAST_NAME)
  public void setClientLastName_JsonNullable(JsonNullable<String> clientLastName) {
    this.clientLastName = clientLastName;
  }

  public void setClientLastName(String clientLastName) {
    this.clientLastName = JsonNullable.<String>of(clientLastName);
  }


  public PeopleMatch clientMiddleName(String clientMiddleName) {
    this.clientMiddleName = JsonNullable.<String>of(clientMiddleName);
    return this;
  }

   /**
   * Middle Name provided in the input file which is used in the &#x60;people-task&#x60; endpoint
   * @return clientMiddleName
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Federick", value = "Middle Name provided in the input file which is used in the `people-task` endpoint")
  @JsonIgnore

  public String getClientMiddleName() {
        return clientMiddleName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLIENT_MIDDLE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getClientMiddleName_JsonNullable() {
    return clientMiddleName;
  }
  
  @JsonProperty(JSON_PROPERTY_CLIENT_MIDDLE_NAME)
  public void setClientMiddleName_JsonNullable(JsonNullable<String> clientMiddleName) {
    this.clientMiddleName = clientMiddleName;
  }

  public void setClientMiddleName(String clientMiddleName) {
    this.clientMiddleName = JsonNullable.<String>of(clientMiddleName);
  }


  public PeopleMatch clientSalutation(String clientSalutation) {
    this.clientSalutation = JsonNullable.<String>of(clientSalutation);
    return this;
  }

   /**
   * Salutation provided in the input file which is used in the &#x60;people-task&#x60; endpoint
   * @return clientSalutation
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Mr", value = "Salutation provided in the input file which is used in the `people-task` endpoint")
  @JsonIgnore

  public String getClientSalutation() {
        return clientSalutation.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLIENT_SALUTATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getClientSalutation_JsonNullable() {
    return clientSalutation;
  }
  
  @JsonProperty(JSON_PROPERTY_CLIENT_SALUTATION)
  public void setClientSalutation_JsonNullable(JsonNullable<String> clientSalutation) {
    this.clientSalutation = clientSalutation;
  }

  public void setClientSalutation(String clientSalutation) {
    this.clientSalutation = JsonNullable.<String>of(clientSalutation);
  }


  public PeopleMatch clientSuffix(String clientSuffix) {
    this.clientSuffix = JsonNullable.<String>of(clientSuffix);
    return this;
  }

   /**
   * Suffix provided in the input file which is used in the &#x60;people-task&#x60; endpoint
   * @return clientSuffix
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Sir", value = "Suffix provided in the input file which is used in the `people-task` endpoint")
  @JsonIgnore

  public String getClientSuffix() {
        return clientSuffix.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLIENT_SUFFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getClientSuffix_JsonNullable() {
    return clientSuffix;
  }
  
  @JsonProperty(JSON_PROPERTY_CLIENT_SUFFIX)
  public void setClientSuffix_JsonNullable(JsonNullable<String> clientSuffix) {
    this.clientSuffix = clientSuffix;
  }

  public void setClientSuffix(String clientSuffix) {
    this.clientSuffix = JsonNullable.<String>of(clientSuffix);
  }


  public PeopleMatch clientPriority(String clientPriority) {
    this.clientPriority = JsonNullable.<String>of(clientPriority);
    return this;
  }

   /**
   * Priority provided in the input file which is used in the &#x60;people-task&#x60; endpoint
   * @return clientPriority
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "HIGH", value = "Priority provided in the input file which is used in the `people-task` endpoint")
  @JsonIgnore

  public String getClientPriority() {
        return clientPriority.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLIENT_PRIORITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getClientPriority_JsonNullable() {
    return clientPriority;
  }
  
  @JsonProperty(JSON_PROPERTY_CLIENT_PRIORITY)
  public void setClientPriority_JsonNullable(JsonNullable<String> clientPriority) {
    this.clientPriority = clientPriority;
  }

  public void setClientPriority(String clientPriority) {
    this.clientPriority = JsonNullable.<String>of(clientPriority);
  }


  public PeopleMatch clientPersonName(String clientPersonName) {
    this.clientPersonName = JsonNullable.<String>of(clientPersonName);
    return this;
  }

   /**
   * The person name as provided in request.
   * @return clientPersonName
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Phil Snow", value = "The person name as provided in request.")
  @JsonIgnore

  public String getClientPersonName() {
        return clientPersonName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLIENT_PERSON_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getClientPersonName_JsonNullable() {
    return clientPersonName;
  }
  
  @JsonProperty(JSON_PROPERTY_CLIENT_PERSON_NAME)
  public void setClientPersonName_JsonNullable(JsonNullable<String> clientPersonName) {
    this.clientPersonName = clientPersonName;
  }

  public void setClientPersonName(String clientPersonName) {
    this.clientPersonName = JsonNullable.<String>of(clientPersonName);
  }


  public PeopleMatch clientAdditionalContext(java.util.Map<String, String> clientAdditionalContext) {
    this.clientAdditionalContext = clientAdditionalContext;
    return this;
  }

  public PeopleMatch putClientAdditionalContextItem(String key, String clientAdditionalContextItem) {
    if (this.clientAdditionalContext == null) {
      this.clientAdditionalContext = new java.util.HashMap<>();
    }
    this.clientAdditionalContext.put(key, clientAdditionalContextItem);
    return this;
  }

   /**
   * Any additional context column along with their values in the input file or single search.  To be used by Managed Service for any unmapped records. 
   * @return clientAdditionalContext
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "{\"Address\":\"123 Main St\",\"Phone\":\"555-555-5555\",\"City\":\"New York\"}", value = "Any additional context column along with their values in the input file or single search.  To be used by Managed Service for any unmapped records. ")
  @JsonProperty(JSON_PROPERTY_CLIENT_ADDITIONAL_CONTEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.Map<String, String> getClientAdditionalContext() {
    return clientAdditionalContext;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_ADDITIONAL_CONTEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClientAdditionalContext(java.util.Map<String, String> clientAdditionalContext) {
    this.clientAdditionalContext = clientAdditionalContext;
  }


  public PeopleMatch firstName(String firstName) {
    this.firstName = JsonNullable.<String>of(firstName);
    return this;
  }

   /**
   * The first name of the client.
   * @return firstName
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Frederick", value = "The first name of the client.")
  @JsonIgnore

  public String getFirstName() {
        return firstName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFirstName_JsonNullable() {
    return firstName;
  }
  
  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  public void setFirstName_JsonNullable(JsonNullable<String> firstName) {
    this.firstName = firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = JsonNullable.<String>of(firstName);
  }


  public PeopleMatch personId(String personId) {
    this.personId = JsonNullable.<String>of(personId);
    return this;
  }

   /**
   * The id of the person.
   * @return personId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "0DPHLH-E", value = "The id of the person.")
  @JsonIgnore

  public String getPersonId() {
        return personId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PERSON_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPersonId_JsonNullable() {
    return personId;
  }
  
  @JsonProperty(JSON_PROPERTY_PERSON_ID)
  public void setPersonId_JsonNullable(JsonNullable<String> personId) {
    this.personId = personId;
  }

  public void setPersonId(String personId) {
    this.personId = JsonNullable.<String>of(personId);
  }


  public PeopleMatch lastName(String lastName) {
    this.lastName = JsonNullable.<String>of(lastName);
    return this;
  }

   /**
   * The last name of the person.
   * @return lastName
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Snow", value = "The last name of the person.")
  @JsonIgnore

  public String getLastName() {
        return lastName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLastName_JsonNullable() {
    return lastName;
  }
  
  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  public void setLastName_JsonNullable(JsonNullable<String> lastName) {
    this.lastName = lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = JsonNullable.<String>of(lastName);
  }


  public PeopleMatch middleName(String middleName) {
    this.middleName = JsonNullable.<String>of(middleName);
    return this;
  }

   /**
   * The middle name of the client.
   * @return middleName
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Philip", value = "The middle name of the client.")
  @JsonIgnore

  public String getMiddleName() {
        return middleName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MIDDLE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMiddleName_JsonNullable() {
    return middleName;
  }
  
  @JsonProperty(JSON_PROPERTY_MIDDLE_NAME)
  public void setMiddleName_JsonNullable(JsonNullable<String> middleName) {
    this.middleName = middleName;
  }

  public void setMiddleName(String middleName) {
    this.middleName = JsonNullable.<String>of(middleName);
  }


  public PeopleMatch suffix(String suffix) {
    this.suffix = JsonNullable.<String>of(suffix);
    return this;
  }

   /**
   * The suffix in the name of the person
   * @return suffix
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "III", value = "The suffix in the name of the person")
  @JsonIgnore

  public String getSuffix() {
        return suffix.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SUFFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSuffix_JsonNullable() {
    return suffix;
  }
  
  @JsonProperty(JSON_PROPERTY_SUFFIX)
  public void setSuffix_JsonNullable(JsonNullable<String> suffix) {
    this.suffix = suffix;
  }

  public void setSuffix(String suffix) {
    this.suffix = JsonNullable.<String>of(suffix);
  }


  public PeopleMatch salutation(String salutation) {
    this.salutation = JsonNullable.<String>of(salutation);
    return this;
  }

   /**
   * Title of a person&#39;s name
   * @return salutation
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Mr.", value = "Title of a person's name")
  @JsonIgnore

  public String getSalutation() {
        return salutation.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SALUTATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSalutation_JsonNullable() {
    return salutation;
  }
  
  @JsonProperty(JSON_PROPERTY_SALUTATION)
  public void setSalutation_JsonNullable(JsonNullable<String> salutation) {
    this.salutation = salutation;
  }

  public void setSalutation(String salutation) {
    this.salutation = JsonNullable.<String>of(salutation);
  }


  public PeopleMatch personName(String personName) {
    this.personName = JsonNullable.<String>of(personName);
    return this;
  }

   /**
   * Full name of the person matched
   * @return personName
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "GATES WILLIAM H III", value = "Full name of the person matched")
  @JsonIgnore

  public String getPersonName() {
        return personName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PERSON_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPersonName_JsonNullable() {
    return personName;
  }
  
  @JsonProperty(JSON_PROPERTY_PERSON_NAME)
  public void setPersonName_JsonNullable(JsonNullable<String> personName) {
    this.personName = personName;
  }

  public void setPersonName(String personName) {
    this.personName = JsonNullable.<String>of(personName);
  }


  public PeopleMatch email(String email) {
    this.email = JsonNullable.<String>of(email);
    return this;
  }

   /**
   * Email of the person
   * @return email
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "abc@efg.com", value = "Email of the person")
  @JsonIgnore

  public String getEmail() {
        return email.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEmail_JsonNullable() {
    return email;
  }
  
  @JsonProperty(JSON_PROPERTY_EMAIL)
  public void setEmail_JsonNullable(JsonNullable<String> email) {
    this.email = email;
  }

  public void setEmail(String email) {
    this.email = JsonNullable.<String>of(email);
  }


  public PeopleMatch clientId(String clientId) {
    this.clientId = JsonNullable.<String>of(clientId);
    return this;
  }

   /**
   * User defined person id provided when matched with FactSet person.
   * @return clientId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "abc-123", value = "User defined person id provided when matched with FactSet person.")
  @JsonIgnore

  public String getClientId() {
        return clientId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLIENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getClientId_JsonNullable() {
    return clientId;
  }
  
  @JsonProperty(JSON_PROPERTY_CLIENT_ID)
  public void setClientId_JsonNullable(JsonNullable<String> clientId) {
    this.clientId = clientId;
  }

  public void setClientId(String clientId) {
    this.clientId = JsonNullable.<String>of(clientId);
  }


  public PeopleMatch entity(String entity) {
    this.entity = JsonNullable.<String>of(entity);
    return this;
  }

   /**
   * Full name corresponding to the matched entity.
   * @return entity
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "FACTSET RESEARCH SYSTEMS INC.", value = "Full name corresponding to the matched entity.")
  @JsonIgnore

  public String getEntity() {
        return entity.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEntity_JsonNullable() {
    return entity;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY)
  public void setEntity_JsonNullable(JsonNullable<String> entity) {
    this.entity = entity;
  }

  public void setEntity(String entity) {
    this.entity = JsonNullable.<String>of(entity);
  }


  public PeopleMatch mapStatus(MapStatusEnum mapStatus) {
    this.mapStatus = JsonNullable.<MapStatusEnum>of(mapStatus);
    return this;
  }

   /**
   * Concordance status of the submitted, where -    * MAPPED - The requested Entity Name is successfully mapped to a FactSet Entity Id (-E)   * UNMAPPED - The requested Entity Name is unmapped by FactSet.   * INDETERMINATE - The requested Entity Name has unable to make a mapping. 
   * @return mapStatus
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "MAPPED", value = "Concordance status of the submitted, where -    * MAPPED - The requested Entity Name is successfully mapped to a FactSet Entity Id (-E)   * UNMAPPED - The requested Entity Name is unmapped by FactSet.   * INDETERMINATE - The requested Entity Name has unable to make a mapping. ")
  @JsonIgnore

  public MapStatusEnum getMapStatus() {
        return mapStatus.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAP_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<MapStatusEnum> getMapStatus_JsonNullable() {
    return mapStatus;
  }
  
  @JsonProperty(JSON_PROPERTY_MAP_STATUS)
  public void setMapStatus_JsonNullable(JsonNullable<MapStatusEnum> mapStatus) {
    this.mapStatus = mapStatus;
  }

  public void setMapStatus(MapStatusEnum mapStatus) {
    this.mapStatus = JsonNullable.<MapStatusEnum>of(mapStatus);
  }


  public PeopleMatch matchFlag(String matchFlag) {
    this.matchFlag = JsonNullable.<String>of(matchFlag);
    return this;
  }

   /**
   * Probability of the match being similar to the entity requested as determined by the Concordance algorithm. A similarityScore of 1 is the highest level of similarity. 
   * @return matchFlag
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Probability of the match being similar to the entity requested as determined by the Concordance algorithm. A similarityScore of 1 is the highest level of similarity. ")
  @JsonIgnore

  public String getMatchFlag() {
        return matchFlag.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MATCH_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMatchFlag_JsonNullable() {
    return matchFlag;
  }
  
  @JsonProperty(JSON_PROPERTY_MATCH_FLAG)
  public void setMatchFlag_JsonNullable(JsonNullable<String> matchFlag) {
    this.matchFlag = matchFlag;
  }

  public void setMatchFlag(String matchFlag) {
    this.matchFlag = JsonNullable.<String>of(matchFlag);
  }


  public PeopleMatch nameMatchSource(String nameMatchSource) {
    this.nameMatchSource = JsonNullable.<String>of(nameMatchSource);
    return this;
  }

   /**
   * Additional statistic calculated by the algorithm that is used to ensure the validity of the match result. A confidenceScore of 1 is the highest level of confidence. 
   * @return nameMatchSource
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Presentation Name", value = "Additional statistic calculated by the algorithm that is used to ensure the validity of the match result. A confidenceScore of 1 is the highest level of confidence. ")
  @JsonIgnore

  public String getNameMatchSource() {
        return nameMatchSource.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_MATCH_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameMatchSource_JsonNullable() {
    return nameMatchSource;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_MATCH_SOURCE)
  public void setNameMatchSource_JsonNullable(JsonNullable<String> nameMatchSource) {
    this.nameMatchSource = nameMatchSource;
  }

  public void setNameMatchSource(String nameMatchSource) {
    this.nameMatchSource = JsonNullable.<String>of(nameMatchSource);
  }


  public PeopleMatch nameMatchString(String nameMatchString) {
    this.nameMatchString = JsonNullable.<String>of(nameMatchString);
    return this;
  }

   /**
   * String on which the Concordance algorithm mapped the submitted entity.
   * @return nameMatchString
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "philip snow", value = "String on which the Concordance algorithm mapped the submitted entity.")
  @JsonIgnore

  public String getNameMatchString() {
        return nameMatchString.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_MATCH_STRING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameMatchString_JsonNullable() {
    return nameMatchString;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_MATCH_STRING)
  public void setNameMatchString_JsonNullable(JsonNullable<String> nameMatchString) {
    this.nameMatchString = nameMatchString;
  }

  public void setNameMatchString(String nameMatchString) {
    this.nameMatchString = JsonNullable.<String>of(nameMatchString);
  }


  public PeopleMatch rowIndex(Integer rowIndex) {
    this.rowIndex = JsonNullable.<Integer>of(rowIndex);
    return this;
  }

   /**
   * Country name corresponding to the location of the matched entity
   * @return rowIndex
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "0", value = "Country name corresponding to the location of the matched entity")
  @JsonIgnore

  public Integer getRowIndex() {
        return rowIndex.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ROW_INDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getRowIndex_JsonNullable() {
    return rowIndex;
  }
  
  @JsonProperty(JSON_PROPERTY_ROW_INDEX)
  public void setRowIndex_JsonNullable(JsonNullable<Integer> rowIndex) {
    this.rowIndex = rowIndex;
  }

  public void setRowIndex(Integer rowIndex) {
    this.rowIndex = JsonNullable.<Integer>of(rowIndex);
  }


  public PeopleMatch similarityScore(Double similarityScore) {
    this.similarityScore = JsonNullable.<Double>of(similarityScore);
    return this;
  }

   /**
   * Probability of the match being similar to the entity requested as determined by the Concordance algorithm. A similarityScore of 1 is the highest level of similarity. 
   * @return similarityScore
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "1", value = "Probability of the match being similar to the entity requested as determined by the Concordance algorithm. A similarityScore of 1 is the highest level of similarity. ")
  @JsonIgnore

  public Double getSimilarityScore() {
        return similarityScore.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIMILARITY_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getSimilarityScore_JsonNullable() {
    return similarityScore;
  }
  
  @JsonProperty(JSON_PROPERTY_SIMILARITY_SCORE)
  public void setSimilarityScore_JsonNullable(JsonNullable<Double> similarityScore) {
    this.similarityScore = similarityScore;
  }

  public void setSimilarityScore(Double similarityScore) {
    this.similarityScore = JsonNullable.<Double>of(similarityScore);
  }


  public PeopleMatch title(String title) {
    this.title = JsonNullable.<String>of(title);
    return this;
  }

   /**
   * The title that the person is holding.
   * @return title
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Chief Executive Officer & Director", value = "The title that the person is holding.")
  @JsonIgnore

  public String getTitle() {
        return title.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTitle_JsonNullable() {
    return title;
  }
  
  @JsonProperty(JSON_PROPERTY_TITLE)
  public void setTitle_JsonNullable(JsonNullable<String> title) {
    this.title = title;
  }

  public void setTitle(String title) {
    this.title = JsonNullable.<String>of(title);
  }


  public PeopleMatch universeId(Integer universeId) {
    this.universeId = JsonNullable.<Integer>of(universeId);
    return this;
  }

   /**
   * The universe identifier
   * @return universeId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "1", value = "The universe identifier")
  @JsonIgnore

  public Integer getUniverseId() {
        return universeId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UNIVERSE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getUniverseId_JsonNullable() {
    return universeId;
  }
  
  @JsonProperty(JSON_PROPERTY_UNIVERSE_ID)
  public void setUniverseId_JsonNullable(JsonNullable<Integer> universeId) {
    this.universeId = universeId;
  }

  public void setUniverseId(Integer universeId) {
    this.universeId = JsonNullable.<Integer>of(universeId);
  }


  /**
   * Return true if this PeopleMatch object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PeopleMatch peopleMatch = (PeopleMatch) o;
    return equalsNullable(this.taskId, peopleMatch.taskId) &&
        equalsNullable(this.activeRole, peopleMatch.activeRole) &&
        equalsNullable(this.clientEntity, peopleMatch.clientEntity) &&
        equalsNullable(this.clientFirstName, peopleMatch.clientFirstName) &&
        equalsNullable(this.clientLastName, peopleMatch.clientLastName) &&
        equalsNullable(this.clientMiddleName, peopleMatch.clientMiddleName) &&
        equalsNullable(this.clientSalutation, peopleMatch.clientSalutation) &&
        equalsNullable(this.clientSuffix, peopleMatch.clientSuffix) &&
        equalsNullable(this.clientPriority, peopleMatch.clientPriority) &&
        equalsNullable(this.clientPersonName, peopleMatch.clientPersonName) &&
        Objects.equals(this.clientAdditionalContext, peopleMatch.clientAdditionalContext) &&
        equalsNullable(this.firstName, peopleMatch.firstName) &&
        equalsNullable(this.personId, peopleMatch.personId) &&
        equalsNullable(this.lastName, peopleMatch.lastName) &&
        equalsNullable(this.middleName, peopleMatch.middleName) &&
        equalsNullable(this.suffix, peopleMatch.suffix) &&
        equalsNullable(this.salutation, peopleMatch.salutation) &&
        equalsNullable(this.personName, peopleMatch.personName) &&
        equalsNullable(this.email, peopleMatch.email) &&
        equalsNullable(this.clientId, peopleMatch.clientId) &&
        equalsNullable(this.entity, peopleMatch.entity) &&
        equalsNullable(this.mapStatus, peopleMatch.mapStatus) &&
        equalsNullable(this.matchFlag, peopleMatch.matchFlag) &&
        equalsNullable(this.nameMatchSource, peopleMatch.nameMatchSource) &&
        equalsNullable(this.nameMatchString, peopleMatch.nameMatchString) &&
        equalsNullable(this.rowIndex, peopleMatch.rowIndex) &&
        equalsNullable(this.similarityScore, peopleMatch.similarityScore) &&
        equalsNullable(this.title, peopleMatch.title) &&
        equalsNullable(this.universeId, peopleMatch.universeId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(taskId), hashCodeNullable(activeRole), hashCodeNullable(clientEntity), hashCodeNullable(clientFirstName), hashCodeNullable(clientLastName), hashCodeNullable(clientMiddleName), hashCodeNullable(clientSalutation), hashCodeNullable(clientSuffix), hashCodeNullable(clientPriority), hashCodeNullable(clientPersonName), clientAdditionalContext, hashCodeNullable(firstName), hashCodeNullable(personId), hashCodeNullable(lastName), hashCodeNullable(middleName), hashCodeNullable(suffix), hashCodeNullable(salutation), hashCodeNullable(personName), hashCodeNullable(email), hashCodeNullable(clientId), hashCodeNullable(entity), hashCodeNullable(mapStatus), hashCodeNullable(matchFlag), hashCodeNullable(nameMatchSource), hashCodeNullable(nameMatchString), hashCodeNullable(rowIndex), hashCodeNullable(similarityScore), hashCodeNullable(title), hashCodeNullable(universeId));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PeopleMatch {\n");
    sb.append("    taskId: ").append(toIndentedString(taskId)).append("\n");
    sb.append("    activeRole: ").append(toIndentedString(activeRole)).append("\n");
    sb.append("    clientEntity: ").append(toIndentedString(clientEntity)).append("\n");
    sb.append("    clientFirstName: ").append(toIndentedString(clientFirstName)).append("\n");
    sb.append("    clientLastName: ").append(toIndentedString(clientLastName)).append("\n");
    sb.append("    clientMiddleName: ").append(toIndentedString(clientMiddleName)).append("\n");
    sb.append("    clientSalutation: ").append(toIndentedString(clientSalutation)).append("\n");
    sb.append("    clientSuffix: ").append(toIndentedString(clientSuffix)).append("\n");
    sb.append("    clientPriority: ").append(toIndentedString(clientPriority)).append("\n");
    sb.append("    clientPersonName: ").append(toIndentedString(clientPersonName)).append("\n");
    sb.append("    clientAdditionalContext: ").append(toIndentedString(clientAdditionalContext)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    personId: ").append(toIndentedString(personId)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
    sb.append("    suffix: ").append(toIndentedString(suffix)).append("\n");
    sb.append("    salutation: ").append(toIndentedString(salutation)).append("\n");
    sb.append("    personName: ").append(toIndentedString(personName)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    entity: ").append(toIndentedString(entity)).append("\n");
    sb.append("    mapStatus: ").append(toIndentedString(mapStatus)).append("\n");
    sb.append("    matchFlag: ").append(toIndentedString(matchFlag)).append("\n");
    sb.append("    nameMatchSource: ").append(toIndentedString(nameMatchSource)).append("\n");
    sb.append("    nameMatchString: ").append(toIndentedString(nameMatchString)).append("\n");
    sb.append("    rowIndex: ").append(toIndentedString(rowIndex)).append("\n");
    sb.append("    similarityScore: ").append(toIndentedString(similarityScore)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    universeId: ").append(toIndentedString(universeId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

