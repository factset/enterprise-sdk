/*
 * FactSet Concordance API
 *   The FactSet Concordance API enables Application Developers and Data Scientists to programmatically discover the FactSet Identifier for a specific Entity or Person based on attributes, such as name, URL, and location.FactSet Identifiers are mapped to industry-standard identifiers, as well as to a comprehensive set of reference data and unique content, to enhance the ability to quickly connect content sets.<p>     Using the submitted attributes, the FactSet Concordance API leverages FactSetâ€™s extensive Entity Master, People, and Symbology databases to return potential candidate matches and a proposed match. The result is a concorded FactSet Identifier that can then be used as input throughout FactSet's expanding catalog of Content using our Content APIs or Standard DataFeeds.</p>    <b>There are two types of workflows supported in the API:</b>    <b>Entity & People Match:</b> The first workflow follows traditional API conventions in that a request is accepted and a response is returned synchronously enabling the concordance of up to 25 names in a single request. The response returns a list of 20 candidates as well as a proposed match.    <b>Entity & People Match - Bulk:</b> The second workflow allows you to input a large list of names within a .CSV file in a single request. With this workflow, a task is created for uploading a set of queries. Once the task has completed, the client retrieves the concordance results through the /entity-decisions or /people-decisions endpoint. Note that in the Bulk workflow, only the matches for the records are returned. Candidates are not included.    Once the service has provided a list of concorded FactSet Identifiers, you can then use our Entity Mappings and People Mappings endpoints to further review the universe of mapped identifiers or modify existing records. </p><p><b>Rate limit is set to 10 requests per second</b>.</p>    Methodology Guide link:   [https://open.factset.com/api/public/media/download/products/documents/8ca33e81-a7da-4d77-a8cf-2b3a2e868b3d](https://open.factset.com/api/public/media/download/products/documents/8ca33e81-a7da-4d77-a8cf-2b3a2e868b3d)    
 *
 * The version of the OpenAPI document: 2.10.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetConcordance.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetConcordance.JSON;


/**
 * Concordance Entity Task Status object. Shows the settings and status of a taskId and some statistics on the matches. 
 */
@ApiModel(description = "Concordance Entity Task Status object. Shows the settings and status of a taskId and some statistics on the matches. ")
@JsonPropertyOrder({
  EntityTaskStatus.JSON_PROPERTY_TASK_ID,
  EntityTaskStatus.JSON_PROPERTY_TASK_NAME,
  EntityTaskStatus.JSON_PROPERTY_TASK_ACTION,
  EntityTaskStatus.JSON_PROPERTY_STATUS,
  EntityTaskStatus.JSON_PROPERTY_INPUT_FILE,
  EntityTaskStatus.JSON_PROPERTY_CLIENT_ID_COLUMN,
  EntityTaskStatus.JSON_PROPERTY_PRIORITY_COLUMN,
  EntityTaskStatus.JSON_PROPERTY_BBG_FIGI_COLUMN,
  EntityTaskStatus.JSON_PROPERTY_BBG_TICKER_COLUMN,
  EntityTaskStatus.JSON_PROPERTY_BIC_COLUMN,
  EntityTaskStatus.JSON_PROPERTY_CIK_COLUMN,
  EntityTaskStatus.JSON_PROPERTY_CRD_COLUMN,
  EntityTaskStatus.JSON_PROPERTY_CUSIP_COLUMN,
  EntityTaskStatus.JSON_PROPERTY_EIN_COLUMN,
  EntityTaskStatus.JSON_PROPERTY_FACTSET_ID_COLUMN,
  EntityTaskStatus.JSON_PROPERTY_FITCH_COLUMN,
  EntityTaskStatus.JSON_PROPERTY_GVKEY_COLUMN,
  EntityTaskStatus.JSON_PROPERTY_GVKEY_IID_COLUMN,
  EntityTaskStatus.JSON_PROPERTY_ISIN_COLUMN,
  EntityTaskStatus.JSON_PROPERTY_JCN_COLUMN,
  EntityTaskStatus.JSON_PROPERTY_LEI_COLUMN,
  EntityTaskStatus.JSON_PROPERTY_LXID_COLUMN,
  EntityTaskStatus.JSON_PROPERTY_MD_COLUMN,
  EntityTaskStatus.JSON_PROPERTY_RED_CODE_COLUMN,
  EntityTaskStatus.JSON_PROPERTY_RSSD_COLUMN,
  EntityTaskStatus.JSON_PROPERTY_SEDOL_COLUMN,
  EntityTaskStatus.JSON_PROPERTY_SPR_COLUMN,
  EntityTaskStatus.JSON_PROPERTY_TICKER_COLUMN,
  EntityTaskStatus.JSON_PROPERTY_TICKER_EXCHANGE_COLUMN,
  EntityTaskStatus.JSON_PROPERTY_TICKER_REGION_COLUMN,
  EntityTaskStatus.JSON_PROPERTY_UKCH_COLUMN,
  EntityTaskStatus.JSON_PROPERTY_VALOREN_COLUMN,
  EntityTaskStatus.JSON_PROPERTY_WKN_COLUMN,
  EntityTaskStatus.JSON_PROPERTY_NAME_COLUMN,
  EntityTaskStatus.JSON_PROPERTY_COUNTRY_COLUMN,
  EntityTaskStatus.JSON_PROPERTY_STATE_COLUMN,
  EntityTaskStatus.JSON_PROPERTY_URL_COLUMN,
  EntityTaskStatus.JSON_PROPERTY_ADDITIONAL_CONTEXT_COLUMNS,
  EntityTaskStatus.JSON_PROPERTY_HAS_RESULT,
  EntityTaskStatus.JSON_PROPERTY_TASK_SUBMIT_TIME,
  EntityTaskStatus.JSON_PROPERTY_MESSAGE,
  EntityTaskStatus.JSON_PROPERTY_INPUT_COUNT,
  EntityTaskStatus.JSON_PROPERTY_MAPPED_COUNT,
  EntityTaskStatus.JSON_PROPERTY_UNMAPPED_COUNT,
  EntityTaskStatus.JSON_PROPERTY_INDETERMINATE_COUNT,
  EntityTaskStatus.JSON_PROPERTY_PROCESS_START_TIME,
  EntityTaskStatus.JSON_PROPERTY_PROCESS_DURATION,
  EntityTaskStatus.JSON_PROPERTY_TRY_COUNT,
  EntityTaskStatus.JSON_PROPERTY_DECISION_RATE,
  EntityTaskStatus.JSON_PROPERTY_ERROR,
  EntityTaskStatus.JSON_PROPERTY_ERROR_TITLE,
  EntityTaskStatus.JSON_PROPERTY_INCLUDE_ENTITY_TYPE,
  EntityTaskStatus.JSON_PROPERTY_EXCLUDE_ENTITY_TYPE,
  EntityTaskStatus.JSON_PROPERTY_INCLUDE_ENTITY_SUB_TYPE,
  EntityTaskStatus.JSON_PROPERTY_EXCLUDE_ENTITY_SUB_TYPE,
  EntityTaskStatus.JSON_PROPERTY_USER_SERIAL,
  EntityTaskStatus.JSON_PROPERTY_USER_FULL_NAME,
  EntityTaskStatus.JSON_PROPERTY_UNIVERSE_ID,
  EntityTaskStatus.JSON_PROPERTY_UNIVERSE_NAME,
  EntityTaskStatus.JSON_PROPERTY_AUTO_REMAP
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class EntityTaskStatus implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_TASK_ID = "taskId";
  private JsonNullable<Integer> taskId = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_TASK_NAME = "taskName";
  private JsonNullable<String> taskName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TASK_ACTION = "taskAction";
  private JsonNullable<String> taskAction = JsonNullable.<String>undefined();

  /**
   * Status of the Concordance Task. If the value is \&quot;SUCCESS\&quot;, you can move to the subsequent /entity-decisions endpoint to retrieve the results.
   */
  public enum StatusEnum {
    PENDING("PENDING"),
    
    IN_PROGRESS("IN_PROGRESS"),
    
    SUCCESS("SUCCESS"),
    
    FAILURE("FAILURE"),
    
    BAD_REQUEST("BAD_REQUEST"),
    
    ABORTED("ABORTED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private JsonNullable<StatusEnum> status = JsonNullable.<StatusEnum>undefined();

  public static final String JSON_PROPERTY_INPUT_FILE = "inputFile";
  private JsonNullable<String> inputFile = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CLIENT_ID_COLUMN = "clientIdColumn";
  private JsonNullable<String> clientIdColumn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PRIORITY_COLUMN = "priorityColumn";
  private JsonNullable<String> priorityColumn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_BBG_FIGI_COLUMN = "bbgFigiColumn";
  private JsonNullable<String> bbgFigiColumn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_BBG_TICKER_COLUMN = "bbgTickerColumn";
  private JsonNullable<String> bbgTickerColumn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_BIC_COLUMN = "bicColumn";
  private JsonNullable<String> bicColumn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CIK_COLUMN = "cikColumn";
  private JsonNullable<String> cikColumn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CRD_COLUMN = "crdColumn";
  private JsonNullable<String> crdColumn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CUSIP_COLUMN = "cusipColumn";
  private JsonNullable<String> cusipColumn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EIN_COLUMN = "einColumn";
  private JsonNullable<String> einColumn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FACTSET_ID_COLUMN = "factsetIdColumn";
  private JsonNullable<String> factsetIdColumn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FITCH_COLUMN = "fitchColumn";
  private JsonNullable<String> fitchColumn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_GVKEY_COLUMN = "gvkeyColumn";
  private JsonNullable<String> gvkeyColumn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_GVKEY_IID_COLUMN = "gvkeyIidColumn";
  private JsonNullable<String> gvkeyIidColumn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ISIN_COLUMN = "isinColumn";
  private JsonNullable<String> isinColumn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_JCN_COLUMN = "jcnColumn";
  private JsonNullable<String> jcnColumn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LEI_COLUMN = "leiColumn";
  private JsonNullable<String> leiColumn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LXID_COLUMN = "lxidColumn";
  private JsonNullable<String> lxidColumn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MD_COLUMN = "mdColumn";
  private JsonNullable<String> mdColumn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_RED_CODE_COLUMN = "redCodeColumn";
  private JsonNullable<String> redCodeColumn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_RSSD_COLUMN = "rssdColumn";
  private JsonNullable<String> rssdColumn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SEDOL_COLUMN = "sedolColumn";
  private JsonNullable<String> sedolColumn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SPR_COLUMN = "sprColumn";
  private JsonNullable<String> sprColumn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TICKER_COLUMN = "tickerColumn";
  private JsonNullable<String> tickerColumn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TICKER_EXCHANGE_COLUMN = "tickerExchangeColumn";
  private JsonNullable<String> tickerExchangeColumn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TICKER_REGION_COLUMN = "tickerRegionColumn";
  private JsonNullable<String> tickerRegionColumn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_UKCH_COLUMN = "ukchColumn";
  private JsonNullable<String> ukchColumn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_VALOREN_COLUMN = "valorenColumn";
  private JsonNullable<String> valorenColumn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_WKN_COLUMN = "wknColumn";
  private JsonNullable<String> wknColumn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_COLUMN = "nameColumn";
  private JsonNullable<String> nameColumn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_COUNTRY_COLUMN = "countryColumn";
  private JsonNullable<String> countryColumn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_STATE_COLUMN = "stateColumn";
  private JsonNullable<String> stateColumn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_URL_COLUMN = "urlColumn";
  private JsonNullable<String> urlColumn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ADDITIONAL_CONTEXT_COLUMNS = "additionalContextColumns";
  private java.util.List<String> additionalContextColumns = null;

  public static final String JSON_PROPERTY_HAS_RESULT = "hasResult";
  private JsonNullable<Boolean> hasResult = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_TASK_SUBMIT_TIME = "taskSubmitTime";
  private JsonNullable<OffsetDateTime> taskSubmitTime = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_MESSAGE = "message";
  private JsonNullable<String> message = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_INPUT_COUNT = "inputCount";
  private JsonNullable<Integer> inputCount = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_MAPPED_COUNT = "mappedCount";
  private JsonNullable<Integer> mappedCount = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_UNMAPPED_COUNT = "unmappedCount";
  private JsonNullable<Integer> unmappedCount = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_INDETERMINATE_COUNT = "indeterminateCount";
  private JsonNullable<Integer> indeterminateCount = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_PROCESS_START_TIME = "processStartTime";
  private JsonNullable<OffsetDateTime> processStartTime = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_PROCESS_DURATION = "processDuration";
  private JsonNullable<Double> processDuration = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_TRY_COUNT = "tryCount";
  private JsonNullable<Integer> tryCount = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_DECISION_RATE = "decisionRate";
  private JsonNullable<Double> decisionRate = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_ERROR = "error";
  private JsonNullable<String> error = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ERROR_TITLE = "errorTitle";
  private JsonNullable<String> errorTitle = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_INCLUDE_ENTITY_TYPE = "includeEntityType";
  private java.util.List<String> includeEntityType = null;

  public static final String JSON_PROPERTY_EXCLUDE_ENTITY_TYPE = "excludeEntityType";
  private java.util.List<String> excludeEntityType = null;

  public static final String JSON_PROPERTY_INCLUDE_ENTITY_SUB_TYPE = "includeEntitySubType";
  private java.util.List<String> includeEntitySubType = null;

  public static final String JSON_PROPERTY_EXCLUDE_ENTITY_SUB_TYPE = "excludeEntitySubType";
  private java.util.List<String> excludeEntitySubType = null;

  public static final String JSON_PROPERTY_USER_SERIAL = "userSerial";
  private JsonNullable<String> userSerial = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USER_FULL_NAME = "userFullName";
  private JsonNullable<String> userFullName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_UNIVERSE_ID = "universeId";
  private JsonNullable<Integer> universeId = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_UNIVERSE_NAME = "universeName";
  private JsonNullable<String> universeName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_AUTO_REMAP = "autoRemap";
  private Boolean autoRemap;

  public EntityTaskStatus() { 
  }

  public EntityTaskStatus taskId(Integer taskId) {
    this.taskId = JsonNullable.<Integer>of(taskId);
    return this;
  }

   /**
   * Identifier denoting a specific Concordance task submitted by the user.
   * @return taskId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "31", value = "Identifier denoting a specific Concordance task submitted by the user.")
  @JsonIgnore

  public Integer getTaskId() {
        return taskId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TASK_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getTaskId_JsonNullable() {
    return taskId;
  }
  
  @JsonProperty(JSON_PROPERTY_TASK_ID)
  public void setTaskId_JsonNullable(JsonNullable<Integer> taskId) {
    this.taskId = taskId;
  }

  public void setTaskId(Integer taskId) {
    this.taskId = JsonNullable.<Integer>of(taskId);
  }


  public EntityTaskStatus taskName(String taskName) {
    this.taskName = JsonNullable.<String>of(taskName);
    return this;
  }

   /**
   * User-defined name for the task used to name the output file.
   * @return taskName
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "test31", value = "User-defined name for the task used to name the output file.")
  @JsonIgnore

  public String getTaskName() {
        return taskName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TASK_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTaskName_JsonNullable() {
    return taskName;
  }
  
  @JsonProperty(JSON_PROPERTY_TASK_NAME)
  public void setTaskName_JsonNullable(JsonNullable<String> taskName) {
    this.taskName = taskName;
  }

  public void setTaskName(String taskName) {
    this.taskName = JsonNullable.<String>of(taskName);
  }


  public EntityTaskStatus taskAction(String taskAction) {
    this.taskAction = JsonNullable.<String>of(taskAction);
    return this;
  }

   /**
   * Action status for the Concordance Task process.
   * @return taskAction
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "processfile", value = "Action status for the Concordance Task process.")
  @JsonIgnore

  public String getTaskAction() {
        return taskAction.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TASK_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTaskAction_JsonNullable() {
    return taskAction;
  }
  
  @JsonProperty(JSON_PROPERTY_TASK_ACTION)
  public void setTaskAction_JsonNullable(JsonNullable<String> taskAction) {
    this.taskAction = taskAction;
  }

  public void setTaskAction(String taskAction) {
    this.taskAction = JsonNullable.<String>of(taskAction);
  }


  public EntityTaskStatus status(StatusEnum status) {
    this.status = JsonNullable.<StatusEnum>of(status);
    return this;
  }

   /**
   * Status of the Concordance Task. If the value is \&quot;SUCCESS\&quot;, you can move to the subsequent /entity-decisions endpoint to retrieve the results.
   * @return status
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Status of the Concordance Task. If the value is \"SUCCESS\", you can move to the subsequent /entity-decisions endpoint to retrieve the results.")
  @JsonIgnore

  public StatusEnum getStatus() {
        return status.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<StatusEnum> getStatus_JsonNullable() {
    return status;
  }
  
  @JsonProperty(JSON_PROPERTY_STATUS)
  public void setStatus_JsonNullable(JsonNullable<StatusEnum> status) {
    this.status = status;
  }

  public void setStatus(StatusEnum status) {
    this.status = JsonNullable.<StatusEnum>of(status);
  }


  public EntityTaskStatus inputFile(String inputFile) {
    this.inputFile = JsonNullable.<String>of(inputFile);
    return this;
  }

   /**
   * The input file is posted as a file object in the form. 
   * @return inputFile
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "test31.csv", value = "The input file is posted as a file object in the form. ")
  @JsonIgnore

  public String getInputFile() {
        return inputFile.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INPUT_FILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getInputFile_JsonNullable() {
    return inputFile;
  }
  
  @JsonProperty(JSON_PROPERTY_INPUT_FILE)
  public void setInputFile_JsonNullable(JsonNullable<String> inputFile) {
    this.inputFile = inputFile;
  }

  public void setInputFile(String inputFile) {
    this.inputFile = JsonNullable.<String>of(inputFile);
  }


  public EntityTaskStatus clientIdColumn(String clientIdColumn) {
    this.clientIdColumn = JsonNullable.<String>of(clientIdColumn);
    return this;
  }

   /**
   * Name of the column in the input file that contains a unique identifier supplied by the user.
   * @return clientIdColumn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "ClientId", value = "Name of the column in the input file that contains a unique identifier supplied by the user.")
  @JsonIgnore

  public String getClientIdColumn() {
        return clientIdColumn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLIENT_ID_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getClientIdColumn_JsonNullable() {
    return clientIdColumn;
  }
  
  @JsonProperty(JSON_PROPERTY_CLIENT_ID_COLUMN)
  public void setClientIdColumn_JsonNullable(JsonNullable<String> clientIdColumn) {
    this.clientIdColumn = clientIdColumn;
  }

  public void setClientIdColumn(String clientIdColumn) {
    this.clientIdColumn = JsonNullable.<String>of(clientIdColumn);
  }


  public EntityTaskStatus priorityColumn(String priorityColumn) {
    this.priorityColumn = JsonNullable.<String>of(priorityColumn);
    return this;
  }

   /**
   * Header Name of the column in the inputfile that contains the priority for the client id 
   * @return priorityColumn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Priority", value = "Header Name of the column in the inputfile that contains the priority for the client id ")
  @JsonIgnore

  public String getPriorityColumn() {
        return priorityColumn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRIORITY_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPriorityColumn_JsonNullable() {
    return priorityColumn;
  }
  
  @JsonProperty(JSON_PROPERTY_PRIORITY_COLUMN)
  public void setPriorityColumn_JsonNullable(JsonNullable<String> priorityColumn) {
    this.priorityColumn = priorityColumn;
  }

  public void setPriorityColumn(String priorityColumn) {
    this.priorityColumn = JsonNullable.<String>of(priorityColumn);
  }


  public EntityTaskStatus bbgFigiColumn(String bbgFigiColumn) {
    this.bbgFigiColumn = JsonNullable.<String>of(bbgFigiColumn);
    return this;
  }

   /**
   * Header Name of the column in the input file for the type Bloomberg Listing/Regional/Security ID.
   * @return bbgFigiColumn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "BloombergId", value = "Header Name of the column in the input file for the type Bloomberg Listing/Regional/Security ID.")
  @JsonIgnore

  public String getBbgFigiColumn() {
        return bbgFigiColumn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BBG_FIGI_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getBbgFigiColumn_JsonNullable() {
    return bbgFigiColumn;
  }
  
  @JsonProperty(JSON_PROPERTY_BBG_FIGI_COLUMN)
  public void setBbgFigiColumn_JsonNullable(JsonNullable<String> bbgFigiColumn) {
    this.bbgFigiColumn = bbgFigiColumn;
  }

  public void setBbgFigiColumn(String bbgFigiColumn) {
    this.bbgFigiColumn = JsonNullable.<String>of(bbgFigiColumn);
  }


  public EntityTaskStatus bbgTickerColumn(String bbgTickerColumn) {
    this.bbgTickerColumn = JsonNullable.<String>of(bbgTickerColumn);
    return this;
  }

   /**
   * Header Name of the column in the input file for the type Bloomberg Listing and Regional Ticker.
   * @return bbgTickerColumn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "BloombergTicker", value = "Header Name of the column in the input file for the type Bloomberg Listing and Regional Ticker.")
  @JsonIgnore

  public String getBbgTickerColumn() {
        return bbgTickerColumn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BBG_TICKER_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getBbgTickerColumn_JsonNullable() {
    return bbgTickerColumn;
  }
  
  @JsonProperty(JSON_PROPERTY_BBG_TICKER_COLUMN)
  public void setBbgTickerColumn_JsonNullable(JsonNullable<String> bbgTickerColumn) {
    this.bbgTickerColumn = bbgTickerColumn;
  }

  public void setBbgTickerColumn(String bbgTickerColumn) {
    this.bbgTickerColumn = JsonNullable.<String>of(bbgTickerColumn);
  }


  public EntityTaskStatus bicColumn(String bicColumn) {
    this.bicColumn = JsonNullable.<String>of(bicColumn);
    return this;
  }

   /**
   * Header Name of the column in the input file for the type BICCode, bank indentification code.
   * @return bicColumn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "BICCode", value = "Header Name of the column in the input file for the type BICCode, bank indentification code.")
  @JsonIgnore

  public String getBicColumn() {
        return bicColumn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BIC_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getBicColumn_JsonNullable() {
    return bicColumn;
  }
  
  @JsonProperty(JSON_PROPERTY_BIC_COLUMN)
  public void setBicColumn_JsonNullable(JsonNullable<String> bicColumn) {
    this.bicColumn = bicColumn;
  }

  public void setBicColumn(String bicColumn) {
    this.bicColumn = JsonNullable.<String>of(bicColumn);
  }


  public EntityTaskStatus cikColumn(String cikColumn) {
    this.cikColumn = JsonNullable.<String>of(cikColumn);
    return this;
  }

   /**
   * Header Name of the column in the input file for the type CIK, Edgar Central Index Keys.
   * @return cikColumn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "CIK", value = "Header Name of the column in the input file for the type CIK, Edgar Central Index Keys.")
  @JsonIgnore

  public String getCikColumn() {
        return cikColumn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CIK_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCikColumn_JsonNullable() {
    return cikColumn;
  }
  
  @JsonProperty(JSON_PROPERTY_CIK_COLUMN)
  public void setCikColumn_JsonNullable(JsonNullable<String> cikColumn) {
    this.cikColumn = cikColumn;
  }

  public void setCikColumn(String cikColumn) {
    this.cikColumn = JsonNullable.<String>of(cikColumn);
  }


  public EntityTaskStatus crdColumn(String crdColumn) {
    this.crdColumn = JsonNullable.<String>of(crdColumn);
    return this;
  }

   /**
   * Header Name of the column in the input file for the type CRD, Central Registration Depository.
   * @return crdColumn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "CRD", value = "Header Name of the column in the input file for the type CRD, Central Registration Depository.")
  @JsonIgnore

  public String getCrdColumn() {
        return crdColumn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CRD_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCrdColumn_JsonNullable() {
    return crdColumn;
  }
  
  @JsonProperty(JSON_PROPERTY_CRD_COLUMN)
  public void setCrdColumn_JsonNullable(JsonNullable<String> crdColumn) {
    this.crdColumn = crdColumn;
  }

  public void setCrdColumn(String crdColumn) {
    this.crdColumn = JsonNullable.<String>of(crdColumn);
  }


  public EntityTaskStatus cusipColumn(String cusipColumn) {
    this.cusipColumn = JsonNullable.<String>of(cusipColumn);
    return this;
  }

   /**
   * Header Name of the column in the input file for the type CUSIP.
   * @return cusipColumn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "CUSIP", value = "Header Name of the column in the input file for the type CUSIP.")
  @JsonIgnore

  public String getCusipColumn() {
        return cusipColumn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CUSIP_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCusipColumn_JsonNullable() {
    return cusipColumn;
  }
  
  @JsonProperty(JSON_PROPERTY_CUSIP_COLUMN)
  public void setCusipColumn_JsonNullable(JsonNullable<String> cusipColumn) {
    this.cusipColumn = cusipColumn;
  }

  public void setCusipColumn(String cusipColumn) {
    this.cusipColumn = JsonNullable.<String>of(cusipColumn);
  }


  public EntityTaskStatus einColumn(String einColumn) {
    this.einColumn = JsonNullable.<String>of(einColumn);
    return this;
  }

   /**
   * Header Name of the column in the input file for the type EmployerIdentificationNumber, EIN.
   * @return einColumn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "EmployerIdentificationNumber", value = "Header Name of the column in the input file for the type EmployerIdentificationNumber, EIN.")
  @JsonIgnore

  public String getEinColumn() {
        return einColumn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EIN_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEinColumn_JsonNullable() {
    return einColumn;
  }
  
  @JsonProperty(JSON_PROPERTY_EIN_COLUMN)
  public void setEinColumn_JsonNullable(JsonNullable<String> einColumn) {
    this.einColumn = einColumn;
  }

  public void setEinColumn(String einColumn) {
    this.einColumn = JsonNullable.<String>of(einColumn);
  }


  public EntityTaskStatus factsetIdColumn(String factsetIdColumn) {
    this.factsetIdColumn = JsonNullable.<String>of(factsetIdColumn);
    return this;
  }

   /**
   * Header Name of the column in the input file for the type FactSet Identifier - &#x60;FactSet -E,-S,-R, -L Permanent Identifier.
   * @return factsetIdColumn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "FactSet Identifier", value = "Header Name of the column in the input file for the type FactSet Identifier - `FactSet -E,-S,-R, -L Permanent Identifier.")
  @JsonIgnore

  public String getFactsetIdColumn() {
        return factsetIdColumn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FACTSET_ID_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFactsetIdColumn_JsonNullable() {
    return factsetIdColumn;
  }
  
  @JsonProperty(JSON_PROPERTY_FACTSET_ID_COLUMN)
  public void setFactsetIdColumn_JsonNullable(JsonNullable<String> factsetIdColumn) {
    this.factsetIdColumn = factsetIdColumn;
  }

  public void setFactsetIdColumn(String factsetIdColumn) {
    this.factsetIdColumn = JsonNullable.<String>of(factsetIdColumn);
  }


  public EntityTaskStatus fitchColumn(String fitchColumn) {
    this.fitchColumn = JsonNullable.<String>of(fitchColumn);
    return this;
  }

   /**
   * Header Name of the column in the input file for the type FitchCreditRating, Fitch Ratings Identifier.
   * @return fitchColumn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "FitchCreditRating", value = "Header Name of the column in the input file for the type FitchCreditRating, Fitch Ratings Identifier.")
  @JsonIgnore

  public String getFitchColumn() {
        return fitchColumn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FITCH_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFitchColumn_JsonNullable() {
    return fitchColumn;
  }
  
  @JsonProperty(JSON_PROPERTY_FITCH_COLUMN)
  public void setFitchColumn_JsonNullable(JsonNullable<String> fitchColumn) {
    this.fitchColumn = fitchColumn;
  }

  public void setFitchColumn(String fitchColumn) {
    this.fitchColumn = JsonNullable.<String>of(fitchColumn);
  }


  public EntityTaskStatus gvkeyColumn(String gvkeyColumn) {
    this.gvkeyColumn = JsonNullable.<String>of(gvkeyColumn);
    return this;
  }

   /**
   * Header Name of the column in the input file for the type GVKEY - Compustat Global Company Key.
   * @return gvkeyColumn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "GVKey", value = "Header Name of the column in the input file for the type GVKEY - Compustat Global Company Key.")
  @JsonIgnore

  public String getGvkeyColumn() {
        return gvkeyColumn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GVKEY_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getGvkeyColumn_JsonNullable() {
    return gvkeyColumn;
  }
  
  @JsonProperty(JSON_PROPERTY_GVKEY_COLUMN)
  public void setGvkeyColumn_JsonNullable(JsonNullable<String> gvkeyColumn) {
    this.gvkeyColumn = gvkeyColumn;
  }

  public void setGvkeyColumn(String gvkeyColumn) {
    this.gvkeyColumn = JsonNullable.<String>of(gvkeyColumn);
  }


  public EntityTaskStatus gvkeyIidColumn(String gvkeyIidColumn) {
    this.gvkeyIidColumn = JsonNullable.<String>of(gvkeyIidColumn);
    return this;
  }

   /**
   * Header Name of the column in the input file for the type GVKEY+IID - Compustat Global Company Key and Issue Identifier.
   * @return gvkeyIidColumn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "GVKey+Iid", value = "Header Name of the column in the input file for the type GVKEY+IID - Compustat Global Company Key and Issue Identifier.")
  @JsonIgnore

  public String getGvkeyIidColumn() {
        return gvkeyIidColumn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GVKEY_IID_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getGvkeyIidColumn_JsonNullable() {
    return gvkeyIidColumn;
  }
  
  @JsonProperty(JSON_PROPERTY_GVKEY_IID_COLUMN)
  public void setGvkeyIidColumn_JsonNullable(JsonNullable<String> gvkeyIidColumn) {
    this.gvkeyIidColumn = gvkeyIidColumn;
  }

  public void setGvkeyIidColumn(String gvkeyIidColumn) {
    this.gvkeyIidColumn = JsonNullable.<String>of(gvkeyIidColumn);
  }


  public EntityTaskStatus isinColumn(String isinColumn) {
    this.isinColumn = JsonNullable.<String>of(isinColumn);
    return this;
  }

   /**
   * Header Name of the column in the input file for the type ISIN.
   * @return isinColumn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "ISIN", value = "Header Name of the column in the input file for the type ISIN.")
  @JsonIgnore

  public String getIsinColumn() {
        return isinColumn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ISIN_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIsinColumn_JsonNullable() {
    return isinColumn;
  }
  
  @JsonProperty(JSON_PROPERTY_ISIN_COLUMN)
  public void setIsinColumn_JsonNullable(JsonNullable<String> isinColumn) {
    this.isinColumn = isinColumn;
  }

  public void setIsinColumn(String isinColumn) {
    this.isinColumn = JsonNullable.<String>of(isinColumn);
  }


  public EntityTaskStatus jcnColumn(String jcnColumn) {
    this.jcnColumn = JsonNullable.<String>of(jcnColumn);
    return this;
  }

   /**
   * Header Name of the column in the input file for the type JCN - Japanese Corporate Number.
   * @return jcnColumn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "JCN", value = "Header Name of the column in the input file for the type JCN - Japanese Corporate Number.")
  @JsonIgnore

  public String getJcnColumn() {
        return jcnColumn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_JCN_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getJcnColumn_JsonNullable() {
    return jcnColumn;
  }
  
  @JsonProperty(JSON_PROPERTY_JCN_COLUMN)
  public void setJcnColumn_JsonNullable(JsonNullable<String> jcnColumn) {
    this.jcnColumn = jcnColumn;
  }

  public void setJcnColumn(String jcnColumn) {
    this.jcnColumn = JsonNullable.<String>of(jcnColumn);
  }


  public EntityTaskStatus leiColumn(String leiColumn) {
    this.leiColumn = JsonNullable.<String>of(leiColumn);
    return this;
  }

   /**
   * Header Name of the column in the input file for the type LegalEntityIdentifier, LEI.
   * @return leiColumn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "LegalEntityIdentifier", value = "Header Name of the column in the input file for the type LegalEntityIdentifier, LEI.")
  @JsonIgnore

  public String getLeiColumn() {
        return leiColumn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LEI_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLeiColumn_JsonNullable() {
    return leiColumn;
  }
  
  @JsonProperty(JSON_PROPERTY_LEI_COLUMN)
  public void setLeiColumn_JsonNullable(JsonNullable<String> leiColumn) {
    this.leiColumn = leiColumn;
  }

  public void setLeiColumn(String leiColumn) {
    this.leiColumn = JsonNullable.<String>of(leiColumn);
  }


  public EntityTaskStatus lxidColumn(String lxidColumn) {
    this.lxidColumn = JsonNullable.<String>of(lxidColumn);
    return this;
  }

   /**
   * Header Name of the column in the input file for the type LXID - Markit Syndicated Loan Identifier.
   * @return lxidColumn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "LXID", value = "Header Name of the column in the input file for the type LXID - Markit Syndicated Loan Identifier.")
  @JsonIgnore

  public String getLxidColumn() {
        return lxidColumn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LXID_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLxidColumn_JsonNullable() {
    return lxidColumn;
  }
  
  @JsonProperty(JSON_PROPERTY_LXID_COLUMN)
  public void setLxidColumn_JsonNullable(JsonNullable<String> lxidColumn) {
    this.lxidColumn = lxidColumn;
  }

  public void setLxidColumn(String lxidColumn) {
    this.lxidColumn = JsonNullable.<String>of(lxidColumn);
  }


  public EntityTaskStatus mdColumn(String mdColumn) {
    this.mdColumn = JsonNullable.<String>of(mdColumn);
    return this;
  }

   /**
   * Header Name of the column in the input file for the type MoodysIssuer, Moody&#39;s Ratings Identifier.
   * @return mdColumn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "MoodysIssuer", value = "Header Name of the column in the input file for the type MoodysIssuer, Moody's Ratings Identifier.")
  @JsonIgnore

  public String getMdColumn() {
        return mdColumn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MD_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMdColumn_JsonNullable() {
    return mdColumn;
  }
  
  @JsonProperty(JSON_PROPERTY_MD_COLUMN)
  public void setMdColumn_JsonNullable(JsonNullable<String> mdColumn) {
    this.mdColumn = mdColumn;
  }

  public void setMdColumn(String mdColumn) {
    this.mdColumn = JsonNullable.<String>of(mdColumn);
  }


  public EntityTaskStatus redCodeColumn(String redCodeColumn) {
    this.redCodeColumn = JsonNullable.<String>of(redCodeColumn);
    return this;
  }

   /**
   * Header Name of the column in the input file for the type Red Code - Markit Reference Entity Identifier.
   * @return redCodeColumn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Red Code", value = "Header Name of the column in the input file for the type Red Code - Markit Reference Entity Identifier.")
  @JsonIgnore

  public String getRedCodeColumn() {
        return redCodeColumn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RED_CODE_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getRedCodeColumn_JsonNullable() {
    return redCodeColumn;
  }
  
  @JsonProperty(JSON_PROPERTY_RED_CODE_COLUMN)
  public void setRedCodeColumn_JsonNullable(JsonNullable<String> redCodeColumn) {
    this.redCodeColumn = redCodeColumn;
  }

  public void setRedCodeColumn(String redCodeColumn) {
    this.redCodeColumn = JsonNullable.<String>of(redCodeColumn);
  }


  public EntityTaskStatus rssdColumn(String rssdColumn) {
    this.rssdColumn = JsonNullable.<String>of(rssdColumn);
    return this;
  }

   /**
   * Header Name of the column in the input file for the type FederalReserveRSSDIdentifier, RSSD.
   * @return rssdColumn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "FederalReserveRSSDIdentifier", value = "Header Name of the column in the input file for the type FederalReserveRSSDIdentifier, RSSD.")
  @JsonIgnore

  public String getRssdColumn() {
        return rssdColumn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RSSD_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getRssdColumn_JsonNullable() {
    return rssdColumn;
  }
  
  @JsonProperty(JSON_PROPERTY_RSSD_COLUMN)
  public void setRssdColumn_JsonNullable(JsonNullable<String> rssdColumn) {
    this.rssdColumn = rssdColumn;
  }

  public void setRssdColumn(String rssdColumn) {
    this.rssdColumn = JsonNullable.<String>of(rssdColumn);
  }


  public EntityTaskStatus sedolColumn(String sedolColumn) {
    this.sedolColumn = JsonNullable.<String>of(sedolColumn);
    return this;
  }

   /**
   * Header Name of the column in the input file for the type SEDOL.
   * @return sedolColumn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "SEDOL", value = "Header Name of the column in the input file for the type SEDOL.")
  @JsonIgnore

  public String getSedolColumn() {
        return sedolColumn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SEDOL_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSedolColumn_JsonNullable() {
    return sedolColumn;
  }
  
  @JsonProperty(JSON_PROPERTY_SEDOL_COLUMN)
  public void setSedolColumn_JsonNullable(JsonNullable<String> sedolColumn) {
    this.sedolColumn = sedolColumn;
  }

  public void setSedolColumn(String sedolColumn) {
    this.sedolColumn = JsonNullable.<String>of(sedolColumn);
  }


  public EntityTaskStatus sprColumn(String sprColumn) {
    this.sprColumn = JsonNullable.<String>of(sprColumn);
    return this;
  }

   /**
   * Header Name of the column in the input file for the type S&amp;PRating, S&amp;P Ratings Identifier
   * @return sprColumn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "SPRating", value = "Header Name of the column in the input file for the type S&PRating, S&P Ratings Identifier")
  @JsonIgnore

  public String getSprColumn() {
        return sprColumn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SPR_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSprColumn_JsonNullable() {
    return sprColumn;
  }
  
  @JsonProperty(JSON_PROPERTY_SPR_COLUMN)
  public void setSprColumn_JsonNullable(JsonNullable<String> sprColumn) {
    this.sprColumn = sprColumn;
  }

  public void setSprColumn(String sprColumn) {
    this.sprColumn = JsonNullable.<String>of(sprColumn);
  }


  public EntityTaskStatus tickerColumn(String tickerColumn) {
    this.tickerColumn = JsonNullable.<String>of(tickerColumn);
    return this;
  }

   /**
   * Header Name of the column in the input file for the type PriceTicker.
   * @return tickerColumn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "PriceTicker", value = "Header Name of the column in the input file for the type PriceTicker.")
  @JsonIgnore

  public String getTickerColumn() {
        return tickerColumn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TICKER_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTickerColumn_JsonNullable() {
    return tickerColumn;
  }
  
  @JsonProperty(JSON_PROPERTY_TICKER_COLUMN)
  public void setTickerColumn_JsonNullable(JsonNullable<String> tickerColumn) {
    this.tickerColumn = tickerColumn;
  }

  public void setTickerColumn(String tickerColumn) {
    this.tickerColumn = JsonNullable.<String>of(tickerColumn);
  }


  public EntityTaskStatus tickerExchangeColumn(String tickerExchangeColumn) {
    this.tickerExchangeColumn = JsonNullable.<String>of(tickerExchangeColumn);
    return this;
  }

   /**
   * Header Name of the column in the input file for the type TickerExch.
   * @return tickerExchangeColumn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "TickerExch", value = "Header Name of the column in the input file for the type TickerExch.")
  @JsonIgnore

  public String getTickerExchangeColumn() {
        return tickerExchangeColumn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TICKER_EXCHANGE_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTickerExchangeColumn_JsonNullable() {
    return tickerExchangeColumn;
  }
  
  @JsonProperty(JSON_PROPERTY_TICKER_EXCHANGE_COLUMN)
  public void setTickerExchangeColumn_JsonNullable(JsonNullable<String> tickerExchangeColumn) {
    this.tickerExchangeColumn = tickerExchangeColumn;
  }

  public void setTickerExchangeColumn(String tickerExchangeColumn) {
    this.tickerExchangeColumn = JsonNullable.<String>of(tickerExchangeColumn);
  }


  public EntityTaskStatus tickerRegionColumn(String tickerRegionColumn) {
    this.tickerRegionColumn = JsonNullable.<String>of(tickerRegionColumn);
    return this;
  }

   /**
   * Header Name of the column in the input file for the type TickerRegion.
   * @return tickerRegionColumn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "TickerRegion", value = "Header Name of the column in the input file for the type TickerRegion.")
  @JsonIgnore

  public String getTickerRegionColumn() {
        return tickerRegionColumn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TICKER_REGION_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTickerRegionColumn_JsonNullable() {
    return tickerRegionColumn;
  }
  
  @JsonProperty(JSON_PROPERTY_TICKER_REGION_COLUMN)
  public void setTickerRegionColumn_JsonNullable(JsonNullable<String> tickerRegionColumn) {
    this.tickerRegionColumn = tickerRegionColumn;
  }

  public void setTickerRegionColumn(String tickerRegionColumn) {
    this.tickerRegionColumn = JsonNullable.<String>of(tickerRegionColumn);
  }


  public EntityTaskStatus ukchColumn(String ukchColumn) {
    this.ukchColumn = JsonNullable.<String>of(ukchColumn);
    return this;
  }

   /**
   * Header Name of the column in the input file for the type UKCompanyHouse.
   * @return ukchColumn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "UKCompanyHouse", value = "Header Name of the column in the input file for the type UKCompanyHouse.")
  @JsonIgnore

  public String getUkchColumn() {
        return ukchColumn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UKCH_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUkchColumn_JsonNullable() {
    return ukchColumn;
  }
  
  @JsonProperty(JSON_PROPERTY_UKCH_COLUMN)
  public void setUkchColumn_JsonNullable(JsonNullable<String> ukchColumn) {
    this.ukchColumn = ukchColumn;
  }

  public void setUkchColumn(String ukchColumn) {
    this.ukchColumn = JsonNullable.<String>of(ukchColumn);
  }


  public EntityTaskStatus valorenColumn(String valorenColumn) {
    this.valorenColumn = JsonNullable.<String>of(valorenColumn);
    return this;
  }

   /**
   * Header Name of the column in the input file for the type VALOR, Valoren (\&quot;Valor\&quot;) Identification.
   * @return valorenColumn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "VALOR", value = "Header Name of the column in the input file for the type VALOR, Valoren (\"Valor\") Identification.")
  @JsonIgnore

  public String getValorenColumn() {
        return valorenColumn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VALOREN_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getValorenColumn_JsonNullable() {
    return valorenColumn;
  }
  
  @JsonProperty(JSON_PROPERTY_VALOREN_COLUMN)
  public void setValorenColumn_JsonNullable(JsonNullable<String> valorenColumn) {
    this.valorenColumn = valorenColumn;
  }

  public void setValorenColumn(String valorenColumn) {
    this.valorenColumn = JsonNullable.<String>of(valorenColumn);
  }


  public EntityTaskStatus wknColumn(String wknColumn) {
    this.wknColumn = JsonNullable.<String>of(wknColumn);
    return this;
  }

   /**
   * Header Name of the column in the input file for the type WKN, German Securities Identification.
   * @return wknColumn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "WKN", value = "Header Name of the column in the input file for the type WKN, German Securities Identification.")
  @JsonIgnore

  public String getWknColumn() {
        return wknColumn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WKN_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getWknColumn_JsonNullable() {
    return wknColumn;
  }
  
  @JsonProperty(JSON_PROPERTY_WKN_COLUMN)
  public void setWknColumn_JsonNullable(JsonNullable<String> wknColumn) {
    this.wknColumn = wknColumn;
  }

  public void setWknColumn(String wknColumn) {
    this.wknColumn = JsonNullable.<String>of(wknColumn);
  }


  public EntityTaskStatus nameColumn(String nameColumn) {
    this.nameColumn = JsonNullable.<String>of(nameColumn);
    return this;
  }

   /**
   * Name of the column in the input file that contains the entity name to be matched.
   * @return nameColumn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Name", value = "Name of the column in the input file that contains the entity name to be matched.")
  @JsonIgnore

  public String getNameColumn() {
        return nameColumn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameColumn_JsonNullable() {
    return nameColumn;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_COLUMN)
  public void setNameColumn_JsonNullable(JsonNullable<String> nameColumn) {
    this.nameColumn = nameColumn;
  }

  public void setNameColumn(String nameColumn) {
    this.nameColumn = JsonNullable.<String>of(nameColumn);
  }


  public EntityTaskStatus countryColumn(String countryColumn) {
    this.countryColumn = JsonNullable.<String>of(countryColumn);
    return this;
  }

   /**
   * Name of the column in the input file that contains the ISO2 country code corresponding to the entity name.  The country code is used when evaluating candidates for a match. 
   * @return countryColumn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Country", value = "Name of the column in the input file that contains the ISO2 country code corresponding to the entity name.  The country code is used when evaluating candidates for a match. ")
  @JsonIgnore

  public String getCountryColumn() {
        return countryColumn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COUNTRY_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCountryColumn_JsonNullable() {
    return countryColumn;
  }
  
  @JsonProperty(JSON_PROPERTY_COUNTRY_COLUMN)
  public void setCountryColumn_JsonNullable(JsonNullable<String> countryColumn) {
    this.countryColumn = countryColumn;
  }

  public void setCountryColumn(String countryColumn) {
    this.countryColumn = JsonNullable.<String>of(countryColumn);
  }


  public EntityTaskStatus stateColumn(String stateColumn) {
    this.stateColumn = JsonNullable.<String>of(stateColumn);
    return this;
  }

   /**
   * Name of the column in the input file that contains the Two-character state code corresponding to the entity name. The state code is used when evaluating candidates for a match. 
   * @return stateColumn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "State", value = "Name of the column in the input file that contains the Two-character state code corresponding to the entity name. The state code is used when evaluating candidates for a match. ")
  @JsonIgnore

  public String getStateColumn() {
        return stateColumn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STATE_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getStateColumn_JsonNullable() {
    return stateColumn;
  }
  
  @JsonProperty(JSON_PROPERTY_STATE_COLUMN)
  public void setStateColumn_JsonNullable(JsonNullable<String> stateColumn) {
    this.stateColumn = stateColumn;
  }

  public void setStateColumn(String stateColumn) {
    this.stateColumn = JsonNullable.<String>of(stateColumn);
  }


  public EntityTaskStatus urlColumn(String urlColumn) {
    this.urlColumn = JsonNullable.<String>of(urlColumn);
    return this;
  }

   /**
   * Name of the column in the input file that contains the URL corresponding to the entity name. The URL is used when evaluating candidates for a match. 
   * @return urlColumn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "URL", value = "Name of the column in the input file that contains the URL corresponding to the entity name. The URL is used when evaluating candidates for a match. ")
  @JsonIgnore

  public String getUrlColumn() {
        return urlColumn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_URL_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUrlColumn_JsonNullable() {
    return urlColumn;
  }
  
  @JsonProperty(JSON_PROPERTY_URL_COLUMN)
  public void setUrlColumn_JsonNullable(JsonNullable<String> urlColumn) {
    this.urlColumn = urlColumn;
  }

  public void setUrlColumn(String urlColumn) {
    this.urlColumn = JsonNullable.<String>of(urlColumn);
  }


  public EntityTaskStatus additionalContextColumns(java.util.List<String> additionalContextColumns) {
    this.additionalContextColumns = additionalContextColumns;
    return this;
  }

  public EntityTaskStatus addAdditionalContextColumnsItem(String additionalContextColumnsItem) {
    if (this.additionalContextColumns == null) {
      this.additionalContextColumns = new java.util.ArrayList<>();
    }
    this.additionalContextColumns.add(additionalContextColumnsItem);
    return this;
  }

   /**
   * Comma separated list of any additional column names in the input file.  To be used by Managed Service for any unmapped records. 
   * @return additionalContextColumns
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "[\"Address\",\"Phone\",\"City\"]", value = "Comma separated list of any additional column names in the input file.  To be used by Managed Service for any unmapped records. ")
  @JsonProperty(JSON_PROPERTY_ADDITIONAL_CONTEXT_COLUMNS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<String> getAdditionalContextColumns() {
    return additionalContextColumns;
  }


  @JsonProperty(JSON_PROPERTY_ADDITIONAL_CONTEXT_COLUMNS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdditionalContextColumns(java.util.List<String> additionalContextColumns) {
    this.additionalContextColumns = additionalContextColumns;
  }


  public EntityTaskStatus hasResult(Boolean hasResult) {
    this.hasResult = JsonNullable.<Boolean>of(hasResult);
    return this;
  }

   /**
   * Flag denoting the taskId has a result.
   * @return hasResult
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Flag denoting the taskId has a result.")
  @JsonIgnore

  public Boolean getHasResult() {
        return hasResult.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HAS_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getHasResult_JsonNullable() {
    return hasResult;
  }
  
  @JsonProperty(JSON_PROPERTY_HAS_RESULT)
  public void setHasResult_JsonNullable(JsonNullable<Boolean> hasResult) {
    this.hasResult = hasResult;
  }

  public void setHasResult(Boolean hasResult) {
    this.hasResult = JsonNullable.<Boolean>of(hasResult);
  }


  public EntityTaskStatus taskSubmitTime(OffsetDateTime taskSubmitTime) {
    this.taskSubmitTime = JsonNullable.<OffsetDateTime>of(taskSubmitTime);
    return this;
  }

   /**
   * Time the Task was submitted in UTC.
   * @return taskSubmitTime
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Time the Task was submitted in UTC.")
  @JsonIgnore

  public OffsetDateTime getTaskSubmitTime() {
        return taskSubmitTime.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TASK_SUBMIT_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getTaskSubmitTime_JsonNullable() {
    return taskSubmitTime;
  }
  
  @JsonProperty(JSON_PROPERTY_TASK_SUBMIT_TIME)
  public void setTaskSubmitTime_JsonNullable(JsonNullable<OffsetDateTime> taskSubmitTime) {
    this.taskSubmitTime = taskSubmitTime;
  }

  public void setTaskSubmitTime(OffsetDateTime taskSubmitTime) {
    this.taskSubmitTime = JsonNullable.<OffsetDateTime>of(taskSubmitTime);
  }


  public EntityTaskStatus message(String message) {
    this.message = JsonNullable.<String>of(message);
    return this;
  }

   /**
   * Textual message for the status.
   * @return message
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Waiting for the input file", value = "Textual message for the status.")
  @JsonIgnore

  public String getMessage() {
        return message.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMessage_JsonNullable() {
    return message;
  }
  
  @JsonProperty(JSON_PROPERTY_MESSAGE)
  public void setMessage_JsonNullable(JsonNullable<String> message) {
    this.message = message;
  }

  public void setMessage(String message) {
    this.message = JsonNullable.<String>of(message);
  }


  public EntityTaskStatus inputCount(Integer inputCount) {
    this.inputCount = JsonNullable.<Integer>of(inputCount);
    return this;
  }

   /**
   * Number of records in the Input File.
   * @return inputCount
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "11", value = "Number of records in the Input File.")
  @JsonIgnore

  public Integer getInputCount() {
        return inputCount.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INPUT_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getInputCount_JsonNullable() {
    return inputCount;
  }
  
  @JsonProperty(JSON_PROPERTY_INPUT_COUNT)
  public void setInputCount_JsonNullable(JsonNullable<Integer> inputCount) {
    this.inputCount = inputCount;
  }

  public void setInputCount(Integer inputCount) {
    this.inputCount = JsonNullable.<Integer>of(inputCount);
  }


  public EntityTaskStatus mappedCount(Integer mappedCount) {
    this.mappedCount = JsonNullable.<Integer>of(mappedCount);
    return this;
  }

   /**
   * Number of records with status of MAPPED the Input File.
   * @return mappedCount
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "8", value = "Number of records with status of MAPPED the Input File.")
  @JsonIgnore

  public Integer getMappedCount() {
        return mappedCount.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAPPED_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getMappedCount_JsonNullable() {
    return mappedCount;
  }
  
  @JsonProperty(JSON_PROPERTY_MAPPED_COUNT)
  public void setMappedCount_JsonNullable(JsonNullable<Integer> mappedCount) {
    this.mappedCount = mappedCount;
  }

  public void setMappedCount(Integer mappedCount) {
    this.mappedCount = JsonNullable.<Integer>of(mappedCount);
  }


  public EntityTaskStatus unmappedCount(Integer unmappedCount) {
    this.unmappedCount = JsonNullable.<Integer>of(unmappedCount);
    return this;
  }

   /**
   * Number of records with status of UNMAPPED the Input File.
   * @return unmappedCount
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "2", value = "Number of records with status of UNMAPPED the Input File.")
  @JsonIgnore

  public Integer getUnmappedCount() {
        return unmappedCount.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UNMAPPED_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getUnmappedCount_JsonNullable() {
    return unmappedCount;
  }
  
  @JsonProperty(JSON_PROPERTY_UNMAPPED_COUNT)
  public void setUnmappedCount_JsonNullable(JsonNullable<Integer> unmappedCount) {
    this.unmappedCount = unmappedCount;
  }

  public void setUnmappedCount(Integer unmappedCount) {
    this.unmappedCount = JsonNullable.<Integer>of(unmappedCount);
  }


  public EntityTaskStatus indeterminateCount(Integer indeterminateCount) {
    this.indeterminateCount = JsonNullable.<Integer>of(indeterminateCount);
    return this;
  }

   /**
   * Number of records with status of INDETERMINATE the Input File.
   * @return indeterminateCount
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "1", value = "Number of records with status of INDETERMINATE the Input File.")
  @JsonIgnore

  public Integer getIndeterminateCount() {
        return indeterminateCount.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INDETERMINATE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getIndeterminateCount_JsonNullable() {
    return indeterminateCount;
  }
  
  @JsonProperty(JSON_PROPERTY_INDETERMINATE_COUNT)
  public void setIndeterminateCount_JsonNullable(JsonNullable<Integer> indeterminateCount) {
    this.indeterminateCount = indeterminateCount;
  }

  public void setIndeterminateCount(Integer indeterminateCount) {
    this.indeterminateCount = JsonNullable.<Integer>of(indeterminateCount);
  }


  public EntityTaskStatus processStartTime(OffsetDateTime processStartTime) {
    this.processStartTime = JsonNullable.<OffsetDateTime>of(processStartTime);
    return this;
  }

   /**
   * Process start time in UTC.
   * @return processStartTime
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Process start time in UTC.")
  @JsonIgnore

  public OffsetDateTime getProcessStartTime() {
        return processStartTime.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROCESS_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getProcessStartTime_JsonNullable() {
    return processStartTime;
  }
  
  @JsonProperty(JSON_PROPERTY_PROCESS_START_TIME)
  public void setProcessStartTime_JsonNullable(JsonNullable<OffsetDateTime> processStartTime) {
    this.processStartTime = processStartTime;
  }

  public void setProcessStartTime(OffsetDateTime processStartTime) {
    this.processStartTime = JsonNullable.<OffsetDateTime>of(processStartTime);
  }


  public EntityTaskStatus processDuration(Double processDuration) {
    this.processDuration = JsonNullable.<Double>of(processDuration);
    return this;
  }

   /**
   * Process duration in seconds.
   * @return processDuration
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "1.51603", value = "Process duration in seconds.")
  @JsonIgnore

  public Double getProcessDuration() {
        return processDuration.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROCESS_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getProcessDuration_JsonNullable() {
    return processDuration;
  }
  
  @JsonProperty(JSON_PROPERTY_PROCESS_DURATION)
  public void setProcessDuration_JsonNullable(JsonNullable<Double> processDuration) {
    this.processDuration = processDuration;
  }

  public void setProcessDuration(Double processDuration) {
    this.processDuration = JsonNullable.<Double>of(processDuration);
  }


  public EntityTaskStatus tryCount(Integer tryCount) {
    this.tryCount = JsonNullable.<Integer>of(tryCount);
    return this;
  }

   /**
   * Number of tries made so far for the request.
   * @return tryCount
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "3", value = "Number of tries made so far for the request.")
  @JsonIgnore

  public Integer getTryCount() {
        return tryCount.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TRY_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getTryCount_JsonNullable() {
    return tryCount;
  }
  
  @JsonProperty(JSON_PROPERTY_TRY_COUNT)
  public void setTryCount_JsonNullable(JsonNullable<Integer> tryCount) {
    this.tryCount = tryCount;
  }

  public void setTryCount(Integer tryCount) {
    this.tryCount = JsonNullable.<Integer>of(tryCount);
  }


  public EntityTaskStatus decisionRate(Double decisionRate) {
    this.decisionRate = JsonNullable.<Double>of(decisionRate);
    return this;
  }

   /**
   * Percentage of mapped entities in the Input File.
   * @return decisionRate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "0.7272727272727273", value = "Percentage of mapped entities in the Input File.")
  @JsonIgnore

  public Double getDecisionRate() {
        return decisionRate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DECISION_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getDecisionRate_JsonNullable() {
    return decisionRate;
  }
  
  @JsonProperty(JSON_PROPERTY_DECISION_RATE)
  public void setDecisionRate_JsonNullable(JsonNullable<Double> decisionRate) {
    this.decisionRate = decisionRate;
  }

  public void setDecisionRate(Double decisionRate) {
    this.decisionRate = JsonNullable.<Double>of(decisionRate);
  }


  public EntityTaskStatus error(String error) {
    this.error = JsonNullable.<String>of(error);
    return this;
  }

   /**
   * Get error
   * @return error
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getError() {
        return error.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getError_JsonNullable() {
    return error;
  }
  
  @JsonProperty(JSON_PROPERTY_ERROR)
  public void setError_JsonNullable(JsonNullable<String> error) {
    this.error = error;
  }

  public void setError(String error) {
    this.error = JsonNullable.<String>of(error);
  }


  public EntityTaskStatus errorTitle(String errorTitle) {
    this.errorTitle = JsonNullable.<String>of(errorTitle);
    return this;
  }

   /**
   * Get errorTitle
   * @return errorTitle
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getErrorTitle() {
        return errorTitle.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ERROR_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getErrorTitle_JsonNullable() {
    return errorTitle;
  }
  
  @JsonProperty(JSON_PROPERTY_ERROR_TITLE)
  public void setErrorTitle_JsonNullable(JsonNullable<String> errorTitle) {
    this.errorTitle = errorTitle;
  }

  public void setErrorTitle(String errorTitle) {
    this.errorTitle = JsonNullable.<String>of(errorTitle);
  }


  public EntityTaskStatus includeEntityType(java.util.List<String> includeEntityType) {
    this.includeEntityType = includeEntityType;
    return this;
  }

  public EntityTaskStatus addIncludeEntityTypeItem(String includeEntityTypeItem) {
    if (this.includeEntityType == null) {
      this.includeEntityType = new java.util.ArrayList<>();
    }
    this.includeEntityType.add(includeEntityTypeItem);
    return this;
  }

   /**
   * Requested Entity types to include. 
   * @return includeEntityType
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Requested Entity types to include. ")
  @JsonProperty(JSON_PROPERTY_INCLUDE_ENTITY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<String> getIncludeEntityType() {
    return includeEntityType;
  }


  @JsonProperty(JSON_PROPERTY_INCLUDE_ENTITY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncludeEntityType(java.util.List<String> includeEntityType) {
    this.includeEntityType = includeEntityType;
  }


  public EntityTaskStatus excludeEntityType(java.util.List<String> excludeEntityType) {
    this.excludeEntityType = excludeEntityType;
    return this;
  }

  public EntityTaskStatus addExcludeEntityTypeItem(String excludeEntityTypeItem) {
    if (this.excludeEntityType == null) {
      this.excludeEntityType = new java.util.ArrayList<>();
    }
    this.excludeEntityType.add(excludeEntityTypeItem);
    return this;
  }

   /**
   * Requested Entity types to exclude. 
   * @return excludeEntityType
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Requested Entity types to exclude. ")
  @JsonProperty(JSON_PROPERTY_EXCLUDE_ENTITY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<String> getExcludeEntityType() {
    return excludeEntityType;
  }


  @JsonProperty(JSON_PROPERTY_EXCLUDE_ENTITY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExcludeEntityType(java.util.List<String> excludeEntityType) {
    this.excludeEntityType = excludeEntityType;
  }


  public EntityTaskStatus includeEntitySubType(java.util.List<String> includeEntitySubType) {
    this.includeEntitySubType = includeEntitySubType;
    return this;
  }

  public EntityTaskStatus addIncludeEntitySubTypeItem(String includeEntitySubTypeItem) {
    if (this.includeEntitySubType == null) {
      this.includeEntitySubType = new java.util.ArrayList<>();
    }
    this.includeEntitySubType.add(includeEntitySubTypeItem);
    return this;
  }

   /**
   * Requested Entity subtypes to include. 
   * @return includeEntitySubType
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Requested Entity subtypes to include. ")
  @JsonProperty(JSON_PROPERTY_INCLUDE_ENTITY_SUB_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<String> getIncludeEntitySubType() {
    return includeEntitySubType;
  }


  @JsonProperty(JSON_PROPERTY_INCLUDE_ENTITY_SUB_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncludeEntitySubType(java.util.List<String> includeEntitySubType) {
    this.includeEntitySubType = includeEntitySubType;
  }


  public EntityTaskStatus excludeEntitySubType(java.util.List<String> excludeEntitySubType) {
    this.excludeEntitySubType = excludeEntitySubType;
    return this;
  }

  public EntityTaskStatus addExcludeEntitySubTypeItem(String excludeEntitySubTypeItem) {
    if (this.excludeEntitySubType == null) {
      this.excludeEntitySubType = new java.util.ArrayList<>();
    }
    this.excludeEntitySubType.add(excludeEntitySubTypeItem);
    return this;
  }

   /**
   * Requested Entity subtypes to exclude. 
   * @return excludeEntitySubType
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Requested Entity subtypes to exclude. ")
  @JsonProperty(JSON_PROPERTY_EXCLUDE_ENTITY_SUB_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<String> getExcludeEntitySubType() {
    return excludeEntitySubType;
  }


  @JsonProperty(JSON_PROPERTY_EXCLUDE_ENTITY_SUB_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExcludeEntitySubType(java.util.List<String> excludeEntitySubType) {
    this.excludeEntitySubType = excludeEntitySubType;
  }


  public EntityTaskStatus userSerial(String userSerial) {
    this.userSerial = JsonNullable.<String>of(userSerial);
    return this;
  }

   /**
   * user-serial of the person who initiated the entity task.
   * @return userSerial
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "FDSQAR_C-000000", value = "user-serial of the person who initiated the entity task.")
  @JsonIgnore

  public String getUserSerial() {
        return userSerial.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USER_SERIAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUserSerial_JsonNullable() {
    return userSerial;
  }
  
  @JsonProperty(JSON_PROPERTY_USER_SERIAL)
  public void setUserSerial_JsonNullable(JsonNullable<String> userSerial) {
    this.userSerial = userSerial;
  }

  public void setUserSerial(String userSerial) {
    this.userSerial = JsonNullable.<String>of(userSerial);
  }


  public EntityTaskStatus userFullName(String userFullName) {
    this.userFullName = JsonNullable.<String>of(userFullName);
    return this;
  }

   /**
   * Full name of the person associated with the &#x60;userSerial&#x60;. 
   * @return userFullName
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Jane Smith", value = "Full name of the person associated with the `userSerial`. ")
  @JsonIgnore

  public String getUserFullName() {
        return userFullName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USER_FULL_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUserFullName_JsonNullable() {
    return userFullName;
  }
  
  @JsonProperty(JSON_PROPERTY_USER_FULL_NAME)
  public void setUserFullName_JsonNullable(JsonNullable<String> userFullName) {
    this.userFullName = userFullName;
  }

  public void setUserFullName(String userFullName) {
    this.userFullName = JsonNullable.<String>of(userFullName);
  }


  public EntityTaskStatus universeId(Integer universeId) {
    this.universeId = JsonNullable.<Integer>of(universeId);
    return this;
  }

   /**
   * The universe id this task was submitted to. 
   * @return universeId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "1", value = "The universe id this task was submitted to. ")
  @JsonIgnore

  public Integer getUniverseId() {
        return universeId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UNIVERSE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getUniverseId_JsonNullable() {
    return universeId;
  }
  
  @JsonProperty(JSON_PROPERTY_UNIVERSE_ID)
  public void setUniverseId_JsonNullable(JsonNullable<Integer> universeId) {
    this.universeId = universeId;
  }

  public void setUniverseId(Integer universeId) {
    this.universeId = JsonNullable.<Integer>of(universeId);
  }


  public EntityTaskStatus universeName(String universeName) {
    this.universeName = JsonNullable.<String>of(universeName);
    return this;
  }

   /**
   * The name of the universe this task was submitted to. 
   * @return universeName
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "My Universe", value = "The name of the universe this task was submitted to. ")
  @JsonIgnore

  public String getUniverseName() {
        return universeName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UNIVERSE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUniverseName_JsonNullable() {
    return universeName;
  }
  
  @JsonProperty(JSON_PROPERTY_UNIVERSE_NAME)
  public void setUniverseName_JsonNullable(JsonNullable<String> universeName) {
    this.universeName = universeName;
  }

  public void setUniverseName(String universeName) {
    this.universeName = JsonNullable.<String>of(universeName);
  }


  public EntityTaskStatus autoRemap(Boolean autoRemap) {
    this.autoRemap = autoRemap;
    return this;
  }

   /**
   * When &#x60;true&#x60;, automatically re-evaluates and overwrites existing mappings using updated metadata submitted in this task. Applicable when the specified universe has auto-remap set to true. **Caution: Mapping updates cannot be undone.** 
   * @return autoRemap
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "When `true`, automatically re-evaluates and overwrites existing mappings using updated metadata submitted in this task. Applicable when the specified universe has auto-remap set to true. **Caution: Mapping updates cannot be undone.** ")
  @JsonProperty(JSON_PROPERTY_AUTO_REMAP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAutoRemap() {
    return autoRemap;
  }


  @JsonProperty(JSON_PROPERTY_AUTO_REMAP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAutoRemap(Boolean autoRemap) {
    this.autoRemap = autoRemap;
  }


  /**
   * Return true if this EntityTaskStatus object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EntityTaskStatus entityTaskStatus = (EntityTaskStatus) o;
    return equalsNullable(this.taskId, entityTaskStatus.taskId) &&
        equalsNullable(this.taskName, entityTaskStatus.taskName) &&
        equalsNullable(this.taskAction, entityTaskStatus.taskAction) &&
        equalsNullable(this.status, entityTaskStatus.status) &&
        equalsNullable(this.inputFile, entityTaskStatus.inputFile) &&
        equalsNullable(this.clientIdColumn, entityTaskStatus.clientIdColumn) &&
        equalsNullable(this.priorityColumn, entityTaskStatus.priorityColumn) &&
        equalsNullable(this.bbgFigiColumn, entityTaskStatus.bbgFigiColumn) &&
        equalsNullable(this.bbgTickerColumn, entityTaskStatus.bbgTickerColumn) &&
        equalsNullable(this.bicColumn, entityTaskStatus.bicColumn) &&
        equalsNullable(this.cikColumn, entityTaskStatus.cikColumn) &&
        equalsNullable(this.crdColumn, entityTaskStatus.crdColumn) &&
        equalsNullable(this.cusipColumn, entityTaskStatus.cusipColumn) &&
        equalsNullable(this.einColumn, entityTaskStatus.einColumn) &&
        equalsNullable(this.factsetIdColumn, entityTaskStatus.factsetIdColumn) &&
        equalsNullable(this.fitchColumn, entityTaskStatus.fitchColumn) &&
        equalsNullable(this.gvkeyColumn, entityTaskStatus.gvkeyColumn) &&
        equalsNullable(this.gvkeyIidColumn, entityTaskStatus.gvkeyIidColumn) &&
        equalsNullable(this.isinColumn, entityTaskStatus.isinColumn) &&
        equalsNullable(this.jcnColumn, entityTaskStatus.jcnColumn) &&
        equalsNullable(this.leiColumn, entityTaskStatus.leiColumn) &&
        equalsNullable(this.lxidColumn, entityTaskStatus.lxidColumn) &&
        equalsNullable(this.mdColumn, entityTaskStatus.mdColumn) &&
        equalsNullable(this.redCodeColumn, entityTaskStatus.redCodeColumn) &&
        equalsNullable(this.rssdColumn, entityTaskStatus.rssdColumn) &&
        equalsNullable(this.sedolColumn, entityTaskStatus.sedolColumn) &&
        equalsNullable(this.sprColumn, entityTaskStatus.sprColumn) &&
        equalsNullable(this.tickerColumn, entityTaskStatus.tickerColumn) &&
        equalsNullable(this.tickerExchangeColumn, entityTaskStatus.tickerExchangeColumn) &&
        equalsNullable(this.tickerRegionColumn, entityTaskStatus.tickerRegionColumn) &&
        equalsNullable(this.ukchColumn, entityTaskStatus.ukchColumn) &&
        equalsNullable(this.valorenColumn, entityTaskStatus.valorenColumn) &&
        equalsNullable(this.wknColumn, entityTaskStatus.wknColumn) &&
        equalsNullable(this.nameColumn, entityTaskStatus.nameColumn) &&
        equalsNullable(this.countryColumn, entityTaskStatus.countryColumn) &&
        equalsNullable(this.stateColumn, entityTaskStatus.stateColumn) &&
        equalsNullable(this.urlColumn, entityTaskStatus.urlColumn) &&
        Objects.equals(this.additionalContextColumns, entityTaskStatus.additionalContextColumns) &&
        equalsNullable(this.hasResult, entityTaskStatus.hasResult) &&
        equalsNullable(this.taskSubmitTime, entityTaskStatus.taskSubmitTime) &&
        equalsNullable(this.message, entityTaskStatus.message) &&
        equalsNullable(this.inputCount, entityTaskStatus.inputCount) &&
        equalsNullable(this.mappedCount, entityTaskStatus.mappedCount) &&
        equalsNullable(this.unmappedCount, entityTaskStatus.unmappedCount) &&
        equalsNullable(this.indeterminateCount, entityTaskStatus.indeterminateCount) &&
        equalsNullable(this.processStartTime, entityTaskStatus.processStartTime) &&
        equalsNullable(this.processDuration, entityTaskStatus.processDuration) &&
        equalsNullable(this.tryCount, entityTaskStatus.tryCount) &&
        equalsNullable(this.decisionRate, entityTaskStatus.decisionRate) &&
        equalsNullable(this.error, entityTaskStatus.error) &&
        equalsNullable(this.errorTitle, entityTaskStatus.errorTitle) &&
        Objects.equals(this.includeEntityType, entityTaskStatus.includeEntityType) &&
        Objects.equals(this.excludeEntityType, entityTaskStatus.excludeEntityType) &&
        Objects.equals(this.includeEntitySubType, entityTaskStatus.includeEntitySubType) &&
        Objects.equals(this.excludeEntitySubType, entityTaskStatus.excludeEntitySubType) &&
        equalsNullable(this.userSerial, entityTaskStatus.userSerial) &&
        equalsNullable(this.userFullName, entityTaskStatus.userFullName) &&
        equalsNullable(this.universeId, entityTaskStatus.universeId) &&
        equalsNullable(this.universeName, entityTaskStatus.universeName) &&
        Objects.equals(this.autoRemap, entityTaskStatus.autoRemap);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(taskId), hashCodeNullable(taskName), hashCodeNullable(taskAction), hashCodeNullable(status), hashCodeNullable(inputFile), hashCodeNullable(clientIdColumn), hashCodeNullable(priorityColumn), hashCodeNullable(bbgFigiColumn), hashCodeNullable(bbgTickerColumn), hashCodeNullable(bicColumn), hashCodeNullable(cikColumn), hashCodeNullable(crdColumn), hashCodeNullable(cusipColumn), hashCodeNullable(einColumn), hashCodeNullable(factsetIdColumn), hashCodeNullable(fitchColumn), hashCodeNullable(gvkeyColumn), hashCodeNullable(gvkeyIidColumn), hashCodeNullable(isinColumn), hashCodeNullable(jcnColumn), hashCodeNullable(leiColumn), hashCodeNullable(lxidColumn), hashCodeNullable(mdColumn), hashCodeNullable(redCodeColumn), hashCodeNullable(rssdColumn), hashCodeNullable(sedolColumn), hashCodeNullable(sprColumn), hashCodeNullable(tickerColumn), hashCodeNullable(tickerExchangeColumn), hashCodeNullable(tickerRegionColumn), hashCodeNullable(ukchColumn), hashCodeNullable(valorenColumn), hashCodeNullable(wknColumn), hashCodeNullable(nameColumn), hashCodeNullable(countryColumn), hashCodeNullable(stateColumn), hashCodeNullable(urlColumn), additionalContextColumns, hashCodeNullable(hasResult), hashCodeNullable(taskSubmitTime), hashCodeNullable(message), hashCodeNullable(inputCount), hashCodeNullable(mappedCount), hashCodeNullable(unmappedCount), hashCodeNullable(indeterminateCount), hashCodeNullable(processStartTime), hashCodeNullable(processDuration), hashCodeNullable(tryCount), hashCodeNullable(decisionRate), hashCodeNullable(error), hashCodeNullable(errorTitle), includeEntityType, excludeEntityType, includeEntitySubType, excludeEntitySubType, hashCodeNullable(userSerial), hashCodeNullable(userFullName), hashCodeNullable(universeId), hashCodeNullable(universeName), autoRemap);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EntityTaskStatus {\n");
    sb.append("    taskId: ").append(toIndentedString(taskId)).append("\n");
    sb.append("    taskName: ").append(toIndentedString(taskName)).append("\n");
    sb.append("    taskAction: ").append(toIndentedString(taskAction)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    inputFile: ").append(toIndentedString(inputFile)).append("\n");
    sb.append("    clientIdColumn: ").append(toIndentedString(clientIdColumn)).append("\n");
    sb.append("    priorityColumn: ").append(toIndentedString(priorityColumn)).append("\n");
    sb.append("    bbgFigiColumn: ").append(toIndentedString(bbgFigiColumn)).append("\n");
    sb.append("    bbgTickerColumn: ").append(toIndentedString(bbgTickerColumn)).append("\n");
    sb.append("    bicColumn: ").append(toIndentedString(bicColumn)).append("\n");
    sb.append("    cikColumn: ").append(toIndentedString(cikColumn)).append("\n");
    sb.append("    crdColumn: ").append(toIndentedString(crdColumn)).append("\n");
    sb.append("    cusipColumn: ").append(toIndentedString(cusipColumn)).append("\n");
    sb.append("    einColumn: ").append(toIndentedString(einColumn)).append("\n");
    sb.append("    factsetIdColumn: ").append(toIndentedString(factsetIdColumn)).append("\n");
    sb.append("    fitchColumn: ").append(toIndentedString(fitchColumn)).append("\n");
    sb.append("    gvkeyColumn: ").append(toIndentedString(gvkeyColumn)).append("\n");
    sb.append("    gvkeyIidColumn: ").append(toIndentedString(gvkeyIidColumn)).append("\n");
    sb.append("    isinColumn: ").append(toIndentedString(isinColumn)).append("\n");
    sb.append("    jcnColumn: ").append(toIndentedString(jcnColumn)).append("\n");
    sb.append("    leiColumn: ").append(toIndentedString(leiColumn)).append("\n");
    sb.append("    lxidColumn: ").append(toIndentedString(lxidColumn)).append("\n");
    sb.append("    mdColumn: ").append(toIndentedString(mdColumn)).append("\n");
    sb.append("    redCodeColumn: ").append(toIndentedString(redCodeColumn)).append("\n");
    sb.append("    rssdColumn: ").append(toIndentedString(rssdColumn)).append("\n");
    sb.append("    sedolColumn: ").append(toIndentedString(sedolColumn)).append("\n");
    sb.append("    sprColumn: ").append(toIndentedString(sprColumn)).append("\n");
    sb.append("    tickerColumn: ").append(toIndentedString(tickerColumn)).append("\n");
    sb.append("    tickerExchangeColumn: ").append(toIndentedString(tickerExchangeColumn)).append("\n");
    sb.append("    tickerRegionColumn: ").append(toIndentedString(tickerRegionColumn)).append("\n");
    sb.append("    ukchColumn: ").append(toIndentedString(ukchColumn)).append("\n");
    sb.append("    valorenColumn: ").append(toIndentedString(valorenColumn)).append("\n");
    sb.append("    wknColumn: ").append(toIndentedString(wknColumn)).append("\n");
    sb.append("    nameColumn: ").append(toIndentedString(nameColumn)).append("\n");
    sb.append("    countryColumn: ").append(toIndentedString(countryColumn)).append("\n");
    sb.append("    stateColumn: ").append(toIndentedString(stateColumn)).append("\n");
    sb.append("    urlColumn: ").append(toIndentedString(urlColumn)).append("\n");
    sb.append("    additionalContextColumns: ").append(toIndentedString(additionalContextColumns)).append("\n");
    sb.append("    hasResult: ").append(toIndentedString(hasResult)).append("\n");
    sb.append("    taskSubmitTime: ").append(toIndentedString(taskSubmitTime)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    inputCount: ").append(toIndentedString(inputCount)).append("\n");
    sb.append("    mappedCount: ").append(toIndentedString(mappedCount)).append("\n");
    sb.append("    unmappedCount: ").append(toIndentedString(unmappedCount)).append("\n");
    sb.append("    indeterminateCount: ").append(toIndentedString(indeterminateCount)).append("\n");
    sb.append("    processStartTime: ").append(toIndentedString(processStartTime)).append("\n");
    sb.append("    processDuration: ").append(toIndentedString(processDuration)).append("\n");
    sb.append("    tryCount: ").append(toIndentedString(tryCount)).append("\n");
    sb.append("    decisionRate: ").append(toIndentedString(decisionRate)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    errorTitle: ").append(toIndentedString(errorTitle)).append("\n");
    sb.append("    includeEntityType: ").append(toIndentedString(includeEntityType)).append("\n");
    sb.append("    excludeEntityType: ").append(toIndentedString(excludeEntityType)).append("\n");
    sb.append("    includeEntitySubType: ").append(toIndentedString(includeEntitySubType)).append("\n");
    sb.append("    excludeEntitySubType: ").append(toIndentedString(excludeEntitySubType)).append("\n");
    sb.append("    userSerial: ").append(toIndentedString(userSerial)).append("\n");
    sb.append("    userFullName: ").append(toIndentedString(userFullName)).append("\n");
    sb.append("    universeId: ").append(toIndentedString(universeId)).append("\n");
    sb.append("    universeName: ").append(toIndentedString(universeName)).append("\n");
    sb.append("    autoRemap: ").append(toIndentedString(autoRemap)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

