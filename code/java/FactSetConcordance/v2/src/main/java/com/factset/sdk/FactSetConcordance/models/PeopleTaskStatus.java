/*
 * FactSet Concordance API
 *   The FactSet Concordance API enables Application Developers and Data Scientists to programmatically discover the FactSet Identifier for a specific Entity or Person based on attributes, such as name, URL, and location.FactSet Identifiers are mapped to industry-standard identifiers, as well as to a comprehensive set of reference data and unique content, to enhance the ability to quickly connect content sets.<p>     Using the submitted attributes, the FactSet Concordance API leverages FactSetâ€™s extensive Entity Master, People, and Symbology databases to return potential candidate matches and a proposed match. The result is a concorded FactSet Identifier that can then be used as input throughout FactSet's expanding catalog of Content using our Content APIs or Standard DataFeeds.</p>    <b>There are two types of workflows supported in the API:</b>    <b>Entity & People Match:</b> The first workflow follows traditional API conventions in that a request is accepted and a response is returned synchronously enabling the concordance of up to 25 names in a single request. The response returns a list of 20 candidates as well as a proposed match.    <b>Entity & People Match - Bulk:</b> The second workflow allows you to input a large list of names within a .CSV file in a single request. With this workflow, a task is created for uploading a set of queries. Once the task has completed, the client retrieves the concordance results through the /entity-decisions or /people-decisions endpoint. Note that in the Bulk workflow, only the matches for the records are returned. Candidates are not included.    Once the service has provided a list of concorded FactSet Identifiers, you can then use our Entity Mappings and People Mappings endpoints to further review the universe of mapped identifiers or modify existing records. </p><p><b>Rate limit is set to 10 requests per second</b>.</p>    Methodology Guide link:   [https://open.factset.com/api/public/media/download/products/documents/8ca33e81-a7da-4d77-a8cf-2b3a2e868b3d](https://open.factset.com/api/public/media/download/products/documents/8ca33e81-a7da-4d77-a8cf-2b3a2e868b3d)    
 *
 * The version of the OpenAPI document: 2.10.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetConcordance.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetConcordance.JSON;


/**
 * Concordance People Task Status object. Shows the settings and status of a taskId and some statistics on the matches. 
 */
@ApiModel(description = "Concordance People Task Status object. Shows the settings and status of a taskId and some statistics on the matches. ")
@JsonPropertyOrder({
  PeopleTaskStatus.JSON_PROPERTY_CLIENT_ID_COLUMN,
  PeopleTaskStatus.JSON_PROPERTY_DECISION_RATE,
  PeopleTaskStatus.JSON_PROPERTY_ENTITY_COLUMN,
  PeopleTaskStatus.JSON_PROPERTY_FIRST_NAME_COLUMN,
  PeopleTaskStatus.JSON_PROPERTY_HAS_RESULT,
  PeopleTaskStatus.JSON_PROPERTY_INPUT_COUNT,
  PeopleTaskStatus.JSON_PROPERTY_INPUT_FILE,
  PeopleTaskStatus.JSON_PROPERTY_LAST_NAME_COLUMN,
  PeopleTaskStatus.JSON_PROPERTY_MAPPED_COUNT,
  PeopleTaskStatus.JSON_PROPERTY_UNMAPPED_COUNT,
  PeopleTaskStatus.JSON_PROPERTY_TRY_COUNT,
  PeopleTaskStatus.JSON_PROPERTY_MESSAGE,
  PeopleTaskStatus.JSON_PROPERTY_MIDDLE_NAME_COLUMN,
  PeopleTaskStatus.JSON_PROPERTY_PERSON_NAME_COLUMN,
  PeopleTaskStatus.JSON_PROPERTY_PRIORITY_COLUMN,
  PeopleTaskStatus.JSON_PROPERTY_PROCESS_START_TIME,
  PeopleTaskStatus.JSON_PROPERTY_PROCESS_DURATION,
  PeopleTaskStatus.JSON_PROPERTY_ERROR,
  PeopleTaskStatus.JSON_PROPERTY_ERROR_TITLE,
  PeopleTaskStatus.JSON_PROPERTY_INDETERMINATE_COUNT,
  PeopleTaskStatus.JSON_PROPERTY_SALUTATION_COLUMN,
  PeopleTaskStatus.JSON_PROPERTY_STATUS,
  PeopleTaskStatus.JSON_PROPERTY_SUFFIX_COLUMN,
  PeopleTaskStatus.JSON_PROPERTY_TASK_ACTION,
  PeopleTaskStatus.JSON_PROPERTY_AUTO_REMAP,
  PeopleTaskStatus.JSON_PROPERTY_TASK_ID,
  PeopleTaskStatus.JSON_PROPERTY_TASK_NAME,
  PeopleTaskStatus.JSON_PROPERTY_TASK_SUBMIT_TIME,
  PeopleTaskStatus.JSON_PROPERTY_UNIVERSE_ID,
  PeopleTaskStatus.JSON_PROPERTY_UNIVERSE_NAME,
  PeopleTaskStatus.JSON_PROPERTY_USER_FULL_NAME,
  PeopleTaskStatus.JSON_PROPERTY_USER_SERIAL,
  PeopleTaskStatus.JSON_PROPERTY_ADDITIONAL_CONTEXT_COLUMNS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class PeopleTaskStatus implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_CLIENT_ID_COLUMN = "clientIdColumn";
  private JsonNullable<String> clientIdColumn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DECISION_RATE = "decisionRate";
  private JsonNullable<Integer> decisionRate = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_ENTITY_COLUMN = "entityColumn";
  private JsonNullable<String> entityColumn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FIRST_NAME_COLUMN = "firstNameColumn";
  private JsonNullable<String> firstNameColumn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_HAS_RESULT = "hasResult";
  private JsonNullable<Boolean> hasResult = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_INPUT_COUNT = "inputCount";
  private JsonNullable<Integer> inputCount = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_INPUT_FILE = "inputFile";
  private JsonNullable<String> inputFile = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LAST_NAME_COLUMN = "lastNameColumn";
  private JsonNullable<String> lastNameColumn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MAPPED_COUNT = "mappedCount";
  private JsonNullable<Integer> mappedCount = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_UNMAPPED_COUNT = "unmappedCount";
  private JsonNullable<Integer> unmappedCount = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_TRY_COUNT = "tryCount";
  private JsonNullable<Integer> tryCount = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_MESSAGE = "message";
  private JsonNullable<String> message = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MIDDLE_NAME_COLUMN = "middleNameColumn";
  private JsonNullable<String> middleNameColumn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PERSON_NAME_COLUMN = "personNameColumn";
  private JsonNullable<String> personNameColumn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PRIORITY_COLUMN = "priorityColumn";
  private JsonNullable<String> priorityColumn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PROCESS_START_TIME = "processStartTime";
  private JsonNullable<OffsetDateTime> processStartTime = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_PROCESS_DURATION = "processDuration";
  private JsonNullable<Double> processDuration = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_ERROR = "error";
  private JsonNullable<String> error = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ERROR_TITLE = "errorTitle";
  private JsonNullable<String> errorTitle = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_INDETERMINATE_COUNT = "indeterminateCount";
  private JsonNullable<Integer> indeterminateCount = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_SALUTATION_COLUMN = "salutationColumn";
  private JsonNullable<String> salutationColumn = JsonNullable.<String>undefined();

  /**
   * Status of the Concordance Task. If the value is \&quot;SUCCESS\&quot;, you can move to the subsequent /entity-decisions endpoint to retrieve the results.
   */
  public enum StatusEnum {
    PENDING("PENDING"),
    
    IN_PROGRESS("IN_PROGRESS"),
    
    SUCCESS("SUCCESS"),
    
    FAILURE("FAILURE"),
    
    BAD_REQUEST("BAD_REQUEST"),
    
    ABORTED("ABORTED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private JsonNullable<StatusEnum> status = JsonNullable.<StatusEnum>undefined();

  public static final String JSON_PROPERTY_SUFFIX_COLUMN = "suffixColumn";
  private JsonNullable<String> suffixColumn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TASK_ACTION = "taskAction";
  private JsonNullable<String> taskAction = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_AUTO_REMAP = "autoRemap";
  private Boolean autoRemap;

  public static final String JSON_PROPERTY_TASK_ID = "taskId";
  private JsonNullable<Integer> taskId = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_TASK_NAME = "taskName";
  private JsonNullable<String> taskName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TASK_SUBMIT_TIME = "taskSubmitTime";
  private JsonNullable<OffsetDateTime> taskSubmitTime = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_UNIVERSE_ID = "universeId";
  private JsonNullable<Integer> universeId = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_UNIVERSE_NAME = "universeName";
  private JsonNullable<String> universeName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USER_FULL_NAME = "userFullName";
  private JsonNullable<String> userFullName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USER_SERIAL = "userSerial";
  private JsonNullable<String> userSerial = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ADDITIONAL_CONTEXT_COLUMNS = "additionalContextColumns";
  private java.util.List<String> additionalContextColumns = null;

  public PeopleTaskStatus() { 
  }

  public PeopleTaskStatus clientIdColumn(String clientIdColumn) {
    this.clientIdColumn = JsonNullable.<String>of(clientIdColumn);
    return this;
  }

   /**
   * Name of the column in the input file that contains a unique identifier supplied by the user.
   * @return clientIdColumn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "ClientId", value = "Name of the column in the input file that contains a unique identifier supplied by the user.")
  @JsonIgnore

  public String getClientIdColumn() {
        return clientIdColumn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLIENT_ID_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getClientIdColumn_JsonNullable() {
    return clientIdColumn;
  }
  
  @JsonProperty(JSON_PROPERTY_CLIENT_ID_COLUMN)
  public void setClientIdColumn_JsonNullable(JsonNullable<String> clientIdColumn) {
    this.clientIdColumn = clientIdColumn;
  }

  public void setClientIdColumn(String clientIdColumn) {
    this.clientIdColumn = JsonNullable.<String>of(clientIdColumn);
  }


  public PeopleTaskStatus decisionRate(Integer decisionRate) {
    this.decisionRate = JsonNullable.<Integer>of(decisionRate);
    return this;
  }

   /**
   * Percentage of mapped entities in the Input File.
   * @return decisionRate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Percentage of mapped entities in the Input File.")
  @JsonIgnore

  public Integer getDecisionRate() {
        return decisionRate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DECISION_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getDecisionRate_JsonNullable() {
    return decisionRate;
  }
  
  @JsonProperty(JSON_PROPERTY_DECISION_RATE)
  public void setDecisionRate_JsonNullable(JsonNullable<Integer> decisionRate) {
    this.decisionRate = decisionRate;
  }

  public void setDecisionRate(Integer decisionRate) {
    this.decisionRate = JsonNullable.<Integer>of(decisionRate);
  }


  public PeopleTaskStatus entityColumn(String entityColumn) {
    this.entityColumn = JsonNullable.<String>of(entityColumn);
    return this;
  }

   /**
   * Name of the column of the entity. 
   * @return entityColumn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Entity", value = "Name of the column of the entity. ")
  @JsonIgnore

  public String getEntityColumn() {
        return entityColumn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEntityColumn_JsonNullable() {
    return entityColumn;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_COLUMN)
  public void setEntityColumn_JsonNullable(JsonNullable<String> entityColumn) {
    this.entityColumn = entityColumn;
  }

  public void setEntityColumn(String entityColumn) {
    this.entityColumn = JsonNullable.<String>of(entityColumn);
  }


  public PeopleTaskStatus firstNameColumn(String firstNameColumn) {
    this.firstNameColumn = JsonNullable.<String>of(firstNameColumn);
    return this;
  }

   /**
   * Name of the column in the input file that contains the first name.
   * @return firstNameColumn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "firstName", value = "Name of the column in the input file that contains the first name.")
  @JsonIgnore

  public String getFirstNameColumn() {
        return firstNameColumn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FIRST_NAME_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFirstNameColumn_JsonNullable() {
    return firstNameColumn;
  }
  
  @JsonProperty(JSON_PROPERTY_FIRST_NAME_COLUMN)
  public void setFirstNameColumn_JsonNullable(JsonNullable<String> firstNameColumn) {
    this.firstNameColumn = firstNameColumn;
  }

  public void setFirstNameColumn(String firstNameColumn) {
    this.firstNameColumn = JsonNullable.<String>of(firstNameColumn);
  }


  public PeopleTaskStatus hasResult(Boolean hasResult) {
    this.hasResult = JsonNullable.<Boolean>of(hasResult);
    return this;
  }

   /**
   * Whether the result is available.
   * @return hasResult
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Whether the result is available.")
  @JsonIgnore

  public Boolean getHasResult() {
        return hasResult.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HAS_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getHasResult_JsonNullable() {
    return hasResult;
  }
  
  @JsonProperty(JSON_PROPERTY_HAS_RESULT)
  public void setHasResult_JsonNullable(JsonNullable<Boolean> hasResult) {
    this.hasResult = hasResult;
  }

  public void setHasResult(Boolean hasResult) {
    this.hasResult = JsonNullable.<Boolean>of(hasResult);
  }


  public PeopleTaskStatus inputCount(Integer inputCount) {
    this.inputCount = JsonNullable.<Integer>of(inputCount);
    return this;
  }

   /**
   * Number of records in the Input File.
   * @return inputCount
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "11", value = "Number of records in the Input File.")
  @JsonIgnore

  public Integer getInputCount() {
        return inputCount.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INPUT_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getInputCount_JsonNullable() {
    return inputCount;
  }
  
  @JsonProperty(JSON_PROPERTY_INPUT_COUNT)
  public void setInputCount_JsonNullable(JsonNullable<Integer> inputCount) {
    this.inputCount = inputCount;
  }

  public void setInputCount(Integer inputCount) {
    this.inputCount = JsonNullable.<Integer>of(inputCount);
  }


  public PeopleTaskStatus inputFile(String inputFile) {
    this.inputFile = JsonNullable.<String>of(inputFile);
    return this;
  }

   /**
   * The input file is posted as a file object in the form. 
   * @return inputFile
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "test31.csv", value = "The input file is posted as a file object in the form. ")
  @JsonIgnore

  public String getInputFile() {
        return inputFile.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INPUT_FILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getInputFile_JsonNullable() {
    return inputFile;
  }
  
  @JsonProperty(JSON_PROPERTY_INPUT_FILE)
  public void setInputFile_JsonNullable(JsonNullable<String> inputFile) {
    this.inputFile = inputFile;
  }

  public void setInputFile(String inputFile) {
    this.inputFile = JsonNullable.<String>of(inputFile);
  }


  public PeopleTaskStatus lastNameColumn(String lastNameColumn) {
    this.lastNameColumn = JsonNullable.<String>of(lastNameColumn);
    return this;
  }

   /**
   * Name of the column in the input file that contains the first name. 
   * @return lastNameColumn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "lastName", value = "Name of the column in the input file that contains the first name. ")
  @JsonIgnore

  public String getLastNameColumn() {
        return lastNameColumn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LAST_NAME_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLastNameColumn_JsonNullable() {
    return lastNameColumn;
  }
  
  @JsonProperty(JSON_PROPERTY_LAST_NAME_COLUMN)
  public void setLastNameColumn_JsonNullable(JsonNullable<String> lastNameColumn) {
    this.lastNameColumn = lastNameColumn;
  }

  public void setLastNameColumn(String lastNameColumn) {
    this.lastNameColumn = JsonNullable.<String>of(lastNameColumn);
  }


  public PeopleTaskStatus mappedCount(Integer mappedCount) {
    this.mappedCount = JsonNullable.<Integer>of(mappedCount);
    return this;
  }

   /**
   * Number of records with status of MAPPED the Input File.
   * @return mappedCount
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "8", value = "Number of records with status of MAPPED the Input File.")
  @JsonIgnore

  public Integer getMappedCount() {
        return mappedCount.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAPPED_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getMappedCount_JsonNullable() {
    return mappedCount;
  }
  
  @JsonProperty(JSON_PROPERTY_MAPPED_COUNT)
  public void setMappedCount_JsonNullable(JsonNullable<Integer> mappedCount) {
    this.mappedCount = mappedCount;
  }

  public void setMappedCount(Integer mappedCount) {
    this.mappedCount = JsonNullable.<Integer>of(mappedCount);
  }


  public PeopleTaskStatus unmappedCount(Integer unmappedCount) {
    this.unmappedCount = JsonNullable.<Integer>of(unmappedCount);
    return this;
  }

   /**
   * Number of records with status of UNMAPPED the Input File.
   * @return unmappedCount
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "2", value = "Number of records with status of UNMAPPED the Input File.")
  @JsonIgnore

  public Integer getUnmappedCount() {
        return unmappedCount.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UNMAPPED_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getUnmappedCount_JsonNullable() {
    return unmappedCount;
  }
  
  @JsonProperty(JSON_PROPERTY_UNMAPPED_COUNT)
  public void setUnmappedCount_JsonNullable(JsonNullable<Integer> unmappedCount) {
    this.unmappedCount = unmappedCount;
  }

  public void setUnmappedCount(Integer unmappedCount) {
    this.unmappedCount = JsonNullable.<Integer>of(unmappedCount);
  }


  public PeopleTaskStatus tryCount(Integer tryCount) {
    this.tryCount = JsonNullable.<Integer>of(tryCount);
    return this;
  }

   /**
   * Number of tries made so far for the request.
   * @return tryCount
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "3", value = "Number of tries made so far for the request.")
  @JsonIgnore

  public Integer getTryCount() {
        return tryCount.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TRY_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getTryCount_JsonNullable() {
    return tryCount;
  }
  
  @JsonProperty(JSON_PROPERTY_TRY_COUNT)
  public void setTryCount_JsonNullable(JsonNullable<Integer> tryCount) {
    this.tryCount = tryCount;
  }

  public void setTryCount(Integer tryCount) {
    this.tryCount = JsonNullable.<Integer>of(tryCount);
  }


  public PeopleTaskStatus message(String message) {
    this.message = JsonNullable.<String>of(message);
    return this;
  }

   /**
   * Textual message for the status.
   * @return message
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Waiting for the input file", value = "Textual message for the status.")
  @JsonIgnore

  public String getMessage() {
        return message.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMessage_JsonNullable() {
    return message;
  }
  
  @JsonProperty(JSON_PROPERTY_MESSAGE)
  public void setMessage_JsonNullable(JsonNullable<String> message) {
    this.message = message;
  }

  public void setMessage(String message) {
    this.message = JsonNullable.<String>of(message);
  }


  public PeopleTaskStatus middleNameColumn(String middleNameColumn) {
    this.middleNameColumn = JsonNullable.<String>of(middleNameColumn);
    return this;
  }

   /**
   * Name of the column in the input file that contains the middle name. 
   * @return middleNameColumn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "middleName", value = "Name of the column in the input file that contains the middle name. ")
  @JsonIgnore

  public String getMiddleNameColumn() {
        return middleNameColumn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MIDDLE_NAME_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMiddleNameColumn_JsonNullable() {
    return middleNameColumn;
  }
  
  @JsonProperty(JSON_PROPERTY_MIDDLE_NAME_COLUMN)
  public void setMiddleNameColumn_JsonNullable(JsonNullable<String> middleNameColumn) {
    this.middleNameColumn = middleNameColumn;
  }

  public void setMiddleNameColumn(String middleNameColumn) {
    this.middleNameColumn = JsonNullable.<String>of(middleNameColumn);
  }


  public PeopleTaskStatus personNameColumn(String personNameColumn) {
    this.personNameColumn = JsonNullable.<String>of(personNameColumn);
    return this;
  }

   /**
   * Name of the column in the input file that contains the person name. 
   * @return personNameColumn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "personName", value = "Name of the column in the input file that contains the person name. ")
  @JsonIgnore

  public String getPersonNameColumn() {
        return personNameColumn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PERSON_NAME_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPersonNameColumn_JsonNullable() {
    return personNameColumn;
  }
  
  @JsonProperty(JSON_PROPERTY_PERSON_NAME_COLUMN)
  public void setPersonNameColumn_JsonNullable(JsonNullable<String> personNameColumn) {
    this.personNameColumn = personNameColumn;
  }

  public void setPersonNameColumn(String personNameColumn) {
    this.personNameColumn = JsonNullable.<String>of(personNameColumn);
  }


  public PeopleTaskStatus priorityColumn(String priorityColumn) {
    this.priorityColumn = JsonNullable.<String>of(priorityColumn);
    return this;
  }

   /**
   * Name of the column in the input file that contains the priority. 
   * @return priorityColumn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Priority", value = "Name of the column in the input file that contains the priority. ")
  @JsonIgnore

  public String getPriorityColumn() {
        return priorityColumn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRIORITY_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPriorityColumn_JsonNullable() {
    return priorityColumn;
  }
  
  @JsonProperty(JSON_PROPERTY_PRIORITY_COLUMN)
  public void setPriorityColumn_JsonNullable(JsonNullable<String> priorityColumn) {
    this.priorityColumn = priorityColumn;
  }

  public void setPriorityColumn(String priorityColumn) {
    this.priorityColumn = JsonNullable.<String>of(priorityColumn);
  }


  public PeopleTaskStatus processStartTime(OffsetDateTime processStartTime) {
    this.processStartTime = JsonNullable.<OffsetDateTime>of(processStartTime);
    return this;
  }

   /**
   * Process start time in UTC.
   * @return processStartTime
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Process start time in UTC.")
  @JsonIgnore

  public OffsetDateTime getProcessStartTime() {
        return processStartTime.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROCESS_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getProcessStartTime_JsonNullable() {
    return processStartTime;
  }
  
  @JsonProperty(JSON_PROPERTY_PROCESS_START_TIME)
  public void setProcessStartTime_JsonNullable(JsonNullable<OffsetDateTime> processStartTime) {
    this.processStartTime = processStartTime;
  }

  public void setProcessStartTime(OffsetDateTime processStartTime) {
    this.processStartTime = JsonNullable.<OffsetDateTime>of(processStartTime);
  }


  public PeopleTaskStatus processDuration(Double processDuration) {
    this.processDuration = JsonNullable.<Double>of(processDuration);
    return this;
  }

   /**
   * Process duration in seconds.
   * @return processDuration
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "1.51603", value = "Process duration in seconds.")
  @JsonIgnore

  public Double getProcessDuration() {
        return processDuration.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROCESS_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getProcessDuration_JsonNullable() {
    return processDuration;
  }
  
  @JsonProperty(JSON_PROPERTY_PROCESS_DURATION)
  public void setProcessDuration_JsonNullable(JsonNullable<Double> processDuration) {
    this.processDuration = processDuration;
  }

  public void setProcessDuration(Double processDuration) {
    this.processDuration = JsonNullable.<Double>of(processDuration);
  }


  public PeopleTaskStatus error(String error) {
    this.error = JsonNullable.<String>of(error);
    return this;
  }

   /**
   * Get error
   * @return error
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getError() {
        return error.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getError_JsonNullable() {
    return error;
  }
  
  @JsonProperty(JSON_PROPERTY_ERROR)
  public void setError_JsonNullable(JsonNullable<String> error) {
    this.error = error;
  }

  public void setError(String error) {
    this.error = JsonNullable.<String>of(error);
  }


  public PeopleTaskStatus errorTitle(String errorTitle) {
    this.errorTitle = JsonNullable.<String>of(errorTitle);
    return this;
  }

   /**
   * Get errorTitle
   * @return errorTitle
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getErrorTitle() {
        return errorTitle.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ERROR_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getErrorTitle_JsonNullable() {
    return errorTitle;
  }
  
  @JsonProperty(JSON_PROPERTY_ERROR_TITLE)
  public void setErrorTitle_JsonNullable(JsonNullable<String> errorTitle) {
    this.errorTitle = errorTitle;
  }

  public void setErrorTitle(String errorTitle) {
    this.errorTitle = JsonNullable.<String>of(errorTitle);
  }


  public PeopleTaskStatus indeterminateCount(Integer indeterminateCount) {
    this.indeterminateCount = JsonNullable.<Integer>of(indeterminateCount);
    return this;
  }

   /**
   * Number of records with status of INDETERMINATE the Input File.
   * @return indeterminateCount
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "1", value = "Number of records with status of INDETERMINATE the Input File.")
  @JsonIgnore

  public Integer getIndeterminateCount() {
        return indeterminateCount.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INDETERMINATE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getIndeterminateCount_JsonNullable() {
    return indeterminateCount;
  }
  
  @JsonProperty(JSON_PROPERTY_INDETERMINATE_COUNT)
  public void setIndeterminateCount_JsonNullable(JsonNullable<Integer> indeterminateCount) {
    this.indeterminateCount = indeterminateCount;
  }

  public void setIndeterminateCount(Integer indeterminateCount) {
    this.indeterminateCount = JsonNullable.<Integer>of(indeterminateCount);
  }


  public PeopleTaskStatus salutationColumn(String salutationColumn) {
    this.salutationColumn = JsonNullable.<String>of(salutationColumn);
    return this;
  }

   /**
   * Name of the column in the input file that contains the person&#39;s salutation. 
   * @return salutationColumn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Salutation", value = "Name of the column in the input file that contains the person's salutation. ")
  @JsonIgnore

  public String getSalutationColumn() {
        return salutationColumn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SALUTATION_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSalutationColumn_JsonNullable() {
    return salutationColumn;
  }
  
  @JsonProperty(JSON_PROPERTY_SALUTATION_COLUMN)
  public void setSalutationColumn_JsonNullable(JsonNullable<String> salutationColumn) {
    this.salutationColumn = salutationColumn;
  }

  public void setSalutationColumn(String salutationColumn) {
    this.salutationColumn = JsonNullable.<String>of(salutationColumn);
  }


  public PeopleTaskStatus status(StatusEnum status) {
    this.status = JsonNullable.<StatusEnum>of(status);
    return this;
  }

   /**
   * Status of the Concordance Task. If the value is \&quot;SUCCESS\&quot;, you can move to the subsequent /entity-decisions endpoint to retrieve the results.
   * @return status
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Status of the Concordance Task. If the value is \"SUCCESS\", you can move to the subsequent /entity-decisions endpoint to retrieve the results.")
  @JsonIgnore

  public StatusEnum getStatus() {
        return status.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<StatusEnum> getStatus_JsonNullable() {
    return status;
  }
  
  @JsonProperty(JSON_PROPERTY_STATUS)
  public void setStatus_JsonNullable(JsonNullable<StatusEnum> status) {
    this.status = status;
  }

  public void setStatus(StatusEnum status) {
    this.status = JsonNullable.<StatusEnum>of(status);
  }


  public PeopleTaskStatus suffixColumn(String suffixColumn) {
    this.suffixColumn = JsonNullable.<String>of(suffixColumn);
    return this;
  }

   /**
   * Name of the column in the input file that contains the person&#39;s suffix. 
   * @return suffixColumn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Suffix", value = "Name of the column in the input file that contains the person's suffix. ")
  @JsonIgnore

  public String getSuffixColumn() {
        return suffixColumn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SUFFIX_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSuffixColumn_JsonNullable() {
    return suffixColumn;
  }
  
  @JsonProperty(JSON_PROPERTY_SUFFIX_COLUMN)
  public void setSuffixColumn_JsonNullable(JsonNullable<String> suffixColumn) {
    this.suffixColumn = suffixColumn;
  }

  public void setSuffixColumn(String suffixColumn) {
    this.suffixColumn = JsonNullable.<String>of(suffixColumn);
  }


  public PeopleTaskStatus taskAction(String taskAction) {
    this.taskAction = JsonNullable.<String>of(taskAction);
    return this;
  }

   /**
   * Action status for the Concordance Task process.
   * @return taskAction
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "processfile", value = "Action status for the Concordance Task process.")
  @JsonIgnore

  public String getTaskAction() {
        return taskAction.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TASK_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTaskAction_JsonNullable() {
    return taskAction;
  }
  
  @JsonProperty(JSON_PROPERTY_TASK_ACTION)
  public void setTaskAction_JsonNullable(JsonNullable<String> taskAction) {
    this.taskAction = taskAction;
  }

  public void setTaskAction(String taskAction) {
    this.taskAction = JsonNullable.<String>of(taskAction);
  }


  public PeopleTaskStatus autoRemap(Boolean autoRemap) {
    this.autoRemap = autoRemap;
    return this;
  }

   /**
   * When &#x60;true&#x60;, automatically re-evaluates and overwrites existing mappings using updated metadata submitted in this task. Applicable when the specified universe has auto-remap set to true. **Caution: Mapping updates cannot be undone.** 
   * @return autoRemap
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "When `true`, automatically re-evaluates and overwrites existing mappings using updated metadata submitted in this task. Applicable when the specified universe has auto-remap set to true. **Caution: Mapping updates cannot be undone.** ")
  @JsonProperty(JSON_PROPERTY_AUTO_REMAP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAutoRemap() {
    return autoRemap;
  }


  @JsonProperty(JSON_PROPERTY_AUTO_REMAP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAutoRemap(Boolean autoRemap) {
    this.autoRemap = autoRemap;
  }


  public PeopleTaskStatus taskId(Integer taskId) {
    this.taskId = JsonNullable.<Integer>of(taskId);
    return this;
  }

   /**
   * Identifier denoting a specific Concordance task submitted by the user.
   * @return taskId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "31", value = "Identifier denoting a specific Concordance task submitted by the user.")
  @JsonIgnore

  public Integer getTaskId() {
        return taskId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TASK_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getTaskId_JsonNullable() {
    return taskId;
  }
  
  @JsonProperty(JSON_PROPERTY_TASK_ID)
  public void setTaskId_JsonNullable(JsonNullable<Integer> taskId) {
    this.taskId = taskId;
  }

  public void setTaskId(Integer taskId) {
    this.taskId = JsonNullable.<Integer>of(taskId);
  }


  public PeopleTaskStatus taskName(String taskName) {
    this.taskName = JsonNullable.<String>of(taskName);
    return this;
  }

   /**
   * User-defined name for the task used to name the output file.
   * @return taskName
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "test31", value = "User-defined name for the task used to name the output file.")
  @JsonIgnore

  public String getTaskName() {
        return taskName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TASK_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTaskName_JsonNullable() {
    return taskName;
  }
  
  @JsonProperty(JSON_PROPERTY_TASK_NAME)
  public void setTaskName_JsonNullable(JsonNullable<String> taskName) {
    this.taskName = taskName;
  }

  public void setTaskName(String taskName) {
    this.taskName = JsonNullable.<String>of(taskName);
  }


  public PeopleTaskStatus taskSubmitTime(OffsetDateTime taskSubmitTime) {
    this.taskSubmitTime = JsonNullable.<OffsetDateTime>of(taskSubmitTime);
    return this;
  }

   /**
   * Time the Task was submitted in UTC.
   * @return taskSubmitTime
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Time the Task was submitted in UTC.")
  @JsonIgnore

  public OffsetDateTime getTaskSubmitTime() {
        return taskSubmitTime.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TASK_SUBMIT_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getTaskSubmitTime_JsonNullable() {
    return taskSubmitTime;
  }
  
  @JsonProperty(JSON_PROPERTY_TASK_SUBMIT_TIME)
  public void setTaskSubmitTime_JsonNullable(JsonNullable<OffsetDateTime> taskSubmitTime) {
    this.taskSubmitTime = taskSubmitTime;
  }

  public void setTaskSubmitTime(OffsetDateTime taskSubmitTime) {
    this.taskSubmitTime = JsonNullable.<OffsetDateTime>of(taskSubmitTime);
  }


  public PeopleTaskStatus universeId(Integer universeId) {
    this.universeId = JsonNullable.<Integer>of(universeId);
    return this;
  }

   /**
   * The universe identifier
   * @return universeId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "1", value = "The universe identifier")
  @JsonIgnore

  public Integer getUniverseId() {
        return universeId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UNIVERSE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getUniverseId_JsonNullable() {
    return universeId;
  }
  
  @JsonProperty(JSON_PROPERTY_UNIVERSE_ID)
  public void setUniverseId_JsonNullable(JsonNullable<Integer> universeId) {
    this.universeId = universeId;
  }

  public void setUniverseId(Integer universeId) {
    this.universeId = JsonNullable.<Integer>of(universeId);
  }


  public PeopleTaskStatus universeName(String universeName) {
    this.universeName = JsonNullable.<String>of(universeName);
    return this;
  }

   /**
   * Full name of the person associated with the &#x60;userSerial&#x60;. 
   * @return universeName
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Jane Smith", value = "Full name of the person associated with the `userSerial`. ")
  @JsonIgnore

  public String getUniverseName() {
        return universeName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UNIVERSE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUniverseName_JsonNullable() {
    return universeName;
  }
  
  @JsonProperty(JSON_PROPERTY_UNIVERSE_NAME)
  public void setUniverseName_JsonNullable(JsonNullable<String> universeName) {
    this.universeName = universeName;
  }

  public void setUniverseName(String universeName) {
    this.universeName = JsonNullable.<String>of(universeName);
  }


  public PeopleTaskStatus userFullName(String userFullName) {
    this.userFullName = JsonNullable.<String>of(userFullName);
    return this;
  }

   /**
   * Full name of the person associated with the &#x60;userSerial&#x60;. 
   * @return userFullName
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Jane Smith", value = "Full name of the person associated with the `userSerial`. ")
  @JsonIgnore

  public String getUserFullName() {
        return userFullName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USER_FULL_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUserFullName_JsonNullable() {
    return userFullName;
  }
  
  @JsonProperty(JSON_PROPERTY_USER_FULL_NAME)
  public void setUserFullName_JsonNullable(JsonNullable<String> userFullName) {
    this.userFullName = userFullName;
  }

  public void setUserFullName(String userFullName) {
    this.userFullName = JsonNullable.<String>of(userFullName);
  }


  public PeopleTaskStatus userSerial(String userSerial) {
    this.userSerial = JsonNullable.<String>of(userSerial);
    return this;
  }

   /**
   * user-serial of the person who initiated the entity task.
   * @return userSerial
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "FDSQAR_C-000000", value = "user-serial of the person who initiated the entity task.")
  @JsonIgnore

  public String getUserSerial() {
        return userSerial.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USER_SERIAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUserSerial_JsonNullable() {
    return userSerial;
  }
  
  @JsonProperty(JSON_PROPERTY_USER_SERIAL)
  public void setUserSerial_JsonNullable(JsonNullable<String> userSerial) {
    this.userSerial = userSerial;
  }

  public void setUserSerial(String userSerial) {
    this.userSerial = JsonNullable.<String>of(userSerial);
  }


  public PeopleTaskStatus additionalContextColumns(java.util.List<String> additionalContextColumns) {
    this.additionalContextColumns = additionalContextColumns;
    return this;
  }

  public PeopleTaskStatus addAdditionalContextColumnsItem(String additionalContextColumnsItem) {
    if (this.additionalContextColumns == null) {
      this.additionalContextColumns = new java.util.ArrayList<>();
    }
    this.additionalContextColumns.add(additionalContextColumnsItem);
    return this;
  }

   /**
   * Comma separated list of any additional column names in the input file.  To be used by Managed Service for any unmapped records. 
   * @return additionalContextColumns
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "[\"Address\",\"Phone\",\"City\"]", value = "Comma separated list of any additional column names in the input file.  To be used by Managed Service for any unmapped records. ")
  @JsonProperty(JSON_PROPERTY_ADDITIONAL_CONTEXT_COLUMNS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<String> getAdditionalContextColumns() {
    return additionalContextColumns;
  }


  @JsonProperty(JSON_PROPERTY_ADDITIONAL_CONTEXT_COLUMNS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdditionalContextColumns(java.util.List<String> additionalContextColumns) {
    this.additionalContextColumns = additionalContextColumns;
  }


  /**
   * Return true if this PeopleTaskStatus object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PeopleTaskStatus peopleTaskStatus = (PeopleTaskStatus) o;
    return equalsNullable(this.clientIdColumn, peopleTaskStatus.clientIdColumn) &&
        equalsNullable(this.decisionRate, peopleTaskStatus.decisionRate) &&
        equalsNullable(this.entityColumn, peopleTaskStatus.entityColumn) &&
        equalsNullable(this.firstNameColumn, peopleTaskStatus.firstNameColumn) &&
        equalsNullable(this.hasResult, peopleTaskStatus.hasResult) &&
        equalsNullable(this.inputCount, peopleTaskStatus.inputCount) &&
        equalsNullable(this.inputFile, peopleTaskStatus.inputFile) &&
        equalsNullable(this.lastNameColumn, peopleTaskStatus.lastNameColumn) &&
        equalsNullable(this.mappedCount, peopleTaskStatus.mappedCount) &&
        equalsNullable(this.unmappedCount, peopleTaskStatus.unmappedCount) &&
        equalsNullable(this.tryCount, peopleTaskStatus.tryCount) &&
        equalsNullable(this.message, peopleTaskStatus.message) &&
        equalsNullable(this.middleNameColumn, peopleTaskStatus.middleNameColumn) &&
        equalsNullable(this.personNameColumn, peopleTaskStatus.personNameColumn) &&
        equalsNullable(this.priorityColumn, peopleTaskStatus.priorityColumn) &&
        equalsNullable(this.processStartTime, peopleTaskStatus.processStartTime) &&
        equalsNullable(this.processDuration, peopleTaskStatus.processDuration) &&
        equalsNullable(this.error, peopleTaskStatus.error) &&
        equalsNullable(this.errorTitle, peopleTaskStatus.errorTitle) &&
        equalsNullable(this.indeterminateCount, peopleTaskStatus.indeterminateCount) &&
        equalsNullable(this.salutationColumn, peopleTaskStatus.salutationColumn) &&
        equalsNullable(this.status, peopleTaskStatus.status) &&
        equalsNullable(this.suffixColumn, peopleTaskStatus.suffixColumn) &&
        equalsNullable(this.taskAction, peopleTaskStatus.taskAction) &&
        Objects.equals(this.autoRemap, peopleTaskStatus.autoRemap) &&
        equalsNullable(this.taskId, peopleTaskStatus.taskId) &&
        equalsNullable(this.taskName, peopleTaskStatus.taskName) &&
        equalsNullable(this.taskSubmitTime, peopleTaskStatus.taskSubmitTime) &&
        equalsNullable(this.universeId, peopleTaskStatus.universeId) &&
        equalsNullable(this.universeName, peopleTaskStatus.universeName) &&
        equalsNullable(this.userFullName, peopleTaskStatus.userFullName) &&
        equalsNullable(this.userSerial, peopleTaskStatus.userSerial) &&
        Objects.equals(this.additionalContextColumns, peopleTaskStatus.additionalContextColumns);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(clientIdColumn), hashCodeNullable(decisionRate), hashCodeNullable(entityColumn), hashCodeNullable(firstNameColumn), hashCodeNullable(hasResult), hashCodeNullable(inputCount), hashCodeNullable(inputFile), hashCodeNullable(lastNameColumn), hashCodeNullable(mappedCount), hashCodeNullable(unmappedCount), hashCodeNullable(tryCount), hashCodeNullable(message), hashCodeNullable(middleNameColumn), hashCodeNullable(personNameColumn), hashCodeNullable(priorityColumn), hashCodeNullable(processStartTime), hashCodeNullable(processDuration), hashCodeNullable(error), hashCodeNullable(errorTitle), hashCodeNullable(indeterminateCount), hashCodeNullable(salutationColumn), hashCodeNullable(status), hashCodeNullable(suffixColumn), hashCodeNullable(taskAction), autoRemap, hashCodeNullable(taskId), hashCodeNullable(taskName), hashCodeNullable(taskSubmitTime), hashCodeNullable(universeId), hashCodeNullable(universeName), hashCodeNullable(userFullName), hashCodeNullable(userSerial), additionalContextColumns);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PeopleTaskStatus {\n");
    sb.append("    clientIdColumn: ").append(toIndentedString(clientIdColumn)).append("\n");
    sb.append("    decisionRate: ").append(toIndentedString(decisionRate)).append("\n");
    sb.append("    entityColumn: ").append(toIndentedString(entityColumn)).append("\n");
    sb.append("    firstNameColumn: ").append(toIndentedString(firstNameColumn)).append("\n");
    sb.append("    hasResult: ").append(toIndentedString(hasResult)).append("\n");
    sb.append("    inputCount: ").append(toIndentedString(inputCount)).append("\n");
    sb.append("    inputFile: ").append(toIndentedString(inputFile)).append("\n");
    sb.append("    lastNameColumn: ").append(toIndentedString(lastNameColumn)).append("\n");
    sb.append("    mappedCount: ").append(toIndentedString(mappedCount)).append("\n");
    sb.append("    unmappedCount: ").append(toIndentedString(unmappedCount)).append("\n");
    sb.append("    tryCount: ").append(toIndentedString(tryCount)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    middleNameColumn: ").append(toIndentedString(middleNameColumn)).append("\n");
    sb.append("    personNameColumn: ").append(toIndentedString(personNameColumn)).append("\n");
    sb.append("    priorityColumn: ").append(toIndentedString(priorityColumn)).append("\n");
    sb.append("    processStartTime: ").append(toIndentedString(processStartTime)).append("\n");
    sb.append("    processDuration: ").append(toIndentedString(processDuration)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    errorTitle: ").append(toIndentedString(errorTitle)).append("\n");
    sb.append("    indeterminateCount: ").append(toIndentedString(indeterminateCount)).append("\n");
    sb.append("    salutationColumn: ").append(toIndentedString(salutationColumn)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    suffixColumn: ").append(toIndentedString(suffixColumn)).append("\n");
    sb.append("    taskAction: ").append(toIndentedString(taskAction)).append("\n");
    sb.append("    autoRemap: ").append(toIndentedString(autoRemap)).append("\n");
    sb.append("    taskId: ").append(toIndentedString(taskId)).append("\n");
    sb.append("    taskName: ").append(toIndentedString(taskName)).append("\n");
    sb.append("    taskSubmitTime: ").append(toIndentedString(taskSubmitTime)).append("\n");
    sb.append("    universeId: ").append(toIndentedString(universeId)).append("\n");
    sb.append("    universeName: ").append(toIndentedString(universeName)).append("\n");
    sb.append("    userFullName: ").append(toIndentedString(userFullName)).append("\n");
    sb.append("    userSerial: ").append(toIndentedString(userSerial)).append("\n");
    sb.append("    additionalContextColumns: ").append(toIndentedString(additionalContextColumns)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

