/*
 * Invoice and Billing Endpoints
 * API endpoints for managing and downloading FactSet Invoices
 *
 * The version of the OpenAPI document: 1K
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.ProcuretoPayInvoiceandBilling.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.ProcuretoPayInvoiceandBilling.JSON;


/**
 * InvoiceDetailsBillingAdjustments
 */
@JsonPropertyOrder({
  InvoiceDetailsBillingAdjustments.JSON_PROPERTY_DESCRIPTION,
  InvoiceDetailsBillingAdjustments.JSON_PROPERTY_DATE,
  InvoiceDetailsBillingAdjustments.JSON_PROPERTY_SERVICES,
  InvoiceDetailsBillingAdjustments.JSON_PROPERTY_TAXES,
  InvoiceDetailsBillingAdjustments.JSON_PROPERTY_FEES,
  InvoiceDetailsBillingAdjustments.JSON_PROPERTY_CURRENCY_SYMBOL,
  InvoiceDetailsBillingAdjustments.JSON_PROPERTY_CONVERSION_RATIO
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class InvoiceDetailsBillingAdjustments implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_DATE = "date";
  private String date;

  public static final String JSON_PROPERTY_SERVICES = "services";
  private Integer services;

  public static final String JSON_PROPERTY_TAXES = "taxes";
  private Integer taxes;

  public static final String JSON_PROPERTY_FEES = "fees";
  private Integer fees;

  public static final String JSON_PROPERTY_CURRENCY_SYMBOL = "currencySymbol";
  private String currencySymbol;

  public static final String JSON_PROPERTY_CONVERSION_RATIO = "conversionRatio";
  private Integer conversionRatio;

  public InvoiceDetailsBillingAdjustments() { 
  }

  public InvoiceDetailsBillingAdjustments description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public InvoiceDetailsBillingAdjustments date(String date) {
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDate() {
    return date;
  }


  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDate(String date) {
    this.date = date;
  }


  public InvoiceDetailsBillingAdjustments services(Integer services) {
    this.services = services;
    return this;
  }

   /**
   * Get services
   * @return services
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SERVICES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getServices() {
    return services;
  }


  @JsonProperty(JSON_PROPERTY_SERVICES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServices(Integer services) {
    this.services = services;
  }


  public InvoiceDetailsBillingAdjustments taxes(Integer taxes) {
    this.taxes = taxes;
    return this;
  }

   /**
   * Get taxes
   * @return taxes
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TAXES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTaxes() {
    return taxes;
  }


  @JsonProperty(JSON_PROPERTY_TAXES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaxes(Integer taxes) {
    this.taxes = taxes;
  }


  public InvoiceDetailsBillingAdjustments fees(Integer fees) {
    this.fees = fees;
    return this;
  }

   /**
   * Get fees
   * @return fees
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FEES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getFees() {
    return fees;
  }


  @JsonProperty(JSON_PROPERTY_FEES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFees(Integer fees) {
    this.fees = fees;
  }


  public InvoiceDetailsBillingAdjustments currencySymbol(String currencySymbol) {
    this.currencySymbol = currencySymbol;
    return this;
  }

   /**
   * Get currencySymbol
   * @return currencySymbol
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CURRENCY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrencySymbol() {
    return currencySymbol;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrencySymbol(String currencySymbol) {
    this.currencySymbol = currencySymbol;
  }


  public InvoiceDetailsBillingAdjustments conversionRatio(Integer conversionRatio) {
    this.conversionRatio = conversionRatio;
    return this;
  }

   /**
   * Get conversionRatio
   * @return conversionRatio
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONVERSION_RATIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getConversionRatio() {
    return conversionRatio;
  }


  @JsonProperty(JSON_PROPERTY_CONVERSION_RATIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConversionRatio(Integer conversionRatio) {
    this.conversionRatio = conversionRatio;
  }


  /**
   * Return true if this invoiceDetails_billingAdjustments object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InvoiceDetailsBillingAdjustments invoiceDetailsBillingAdjustments = (InvoiceDetailsBillingAdjustments) o;
    return Objects.equals(this.description, invoiceDetailsBillingAdjustments.description) &&
        Objects.equals(this.date, invoiceDetailsBillingAdjustments.date) &&
        Objects.equals(this.services, invoiceDetailsBillingAdjustments.services) &&
        Objects.equals(this.taxes, invoiceDetailsBillingAdjustments.taxes) &&
        Objects.equals(this.fees, invoiceDetailsBillingAdjustments.fees) &&
        Objects.equals(this.currencySymbol, invoiceDetailsBillingAdjustments.currencySymbol) &&
        Objects.equals(this.conversionRatio, invoiceDetailsBillingAdjustments.conversionRatio);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, date, services, taxes, fees, currencySymbol, conversionRatio);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InvoiceDetailsBillingAdjustments {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    services: ").append(toIndentedString(services)).append("\n");
    sb.append("    taxes: ").append(toIndentedString(taxes)).append("\n");
    sb.append("    fees: ").append(toIndentedString(fees)).append("\n");
    sb.append("    currencySymbol: ").append(toIndentedString(currencySymbol)).append("\n");
    sb.append("    conversionRatio: ").append(toIndentedString(conversionRatio)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

