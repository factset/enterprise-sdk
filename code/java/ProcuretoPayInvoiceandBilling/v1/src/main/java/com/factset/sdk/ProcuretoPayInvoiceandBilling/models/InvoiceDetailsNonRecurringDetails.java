/*
 * Invoice and Billing Endpoints
 * API endpoints for managing and downloading FactSet Invoices
 *
 * The version of the OpenAPI document: 1K
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.ProcuretoPayInvoiceandBilling.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.ProcuretoPayInvoiceandBilling.JSON;


/**
 * InvoiceDetailsNonRecurringDetails
 */
@JsonPropertyOrder({
  InvoiceDetailsNonRecurringDetails.JSON_PROPERTY_WORKSTATIONS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class InvoiceDetailsNonRecurringDetails implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_WORKSTATIONS = "workstations";
  private java.util.List<Object> workstations = null;

  public InvoiceDetailsNonRecurringDetails() { 
  }

  public InvoiceDetailsNonRecurringDetails workstations(java.util.List<Object> workstations) {
    this.workstations = workstations;
    return this;
  }

  public InvoiceDetailsNonRecurringDetails addWorkstationsItem(Object workstationsItem) {
    if (this.workstations == null) {
      this.workstations = new java.util.ArrayList<>();
    }
    this.workstations.add(workstationsItem);
    return this;
  }

   /**
   * NonRecurringDetails returns arrays of objects designated by Product Groups. E.G. Workstations, for items billed for current month only.
   * @return workstations
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "[{\"accountId\":\"AB2C\",\"invoiceId\":\"AB2C1905\",\"productId\":4080,\"quanitity\":1,\"displayName\":\"Alpha Testing Daily/Weekly\",\"unitPrice\":1250,\"discount\":0,\"lastMonthAdd\":true},{\"accountId\":\"AB2C\",\"invoiceId\":\"AB2C1905\",\"productId\":1429,\"quanitity\":1,\"displayName\":\"SPAR IB\",\"unitPrice\":250,\"discount\":0,\"lastMonthAdd\":false}]", value = "NonRecurringDetails returns arrays of objects designated by Product Groups. E.G. Workstations, for items billed for current month only.")
  @JsonProperty(JSON_PROPERTY_WORKSTATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<Object> getWorkstations() {
    return workstations;
  }


  @JsonProperty(JSON_PROPERTY_WORKSTATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWorkstations(java.util.List<Object> workstations) {
    this.workstations = workstations;
  }


  /**
   * Return true if this invoiceDetails_nonRecurringDetails object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InvoiceDetailsNonRecurringDetails invoiceDetailsNonRecurringDetails = (InvoiceDetailsNonRecurringDetails) o;
    return Objects.equals(this.workstations, invoiceDetailsNonRecurringDetails.workstations);
  }

  @Override
  public int hashCode() {
    return Objects.hash(workstations);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InvoiceDetailsNonRecurringDetails {\n");
    sb.append("    workstations: ").append(toIndentedString(workstations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

