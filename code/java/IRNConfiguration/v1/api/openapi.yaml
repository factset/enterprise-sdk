openapi: 3.0.1
info:
  contact:
    email: api@factset.com
    name: FactSet Research Systems
    url: https://developer.factset.com/contact
  description: Allows users to extract, create, update and configure IRN data.
  license:
    name: Apache License, Version 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  title: IRN API v1
  version: 1.0.0
externalDocs:
  description: API Documentation
  url: https://developer.factset.com/api-catalog/irn-configuration-api#apiDocumentation
servers:
- description: Production Server
  url: https://api.factset.com/research/irn/v1
- description: Sandbox Server
  url: https://api-sandbox.factset.com/research/irn/v1
security:
- FactSetApiKey: []
- FactSetOAuth2: []
tags:
- description: Customfields for contacts types
  name: Contacts - CustomFields
- description: Phone number types for contacts
  name: Contacts - PhoneNumberTypes
- description: Relationship categories for contacts
  name: Contacts - Relationship Category
- description: Relationships for contacts
  name: Contacts - Relationships
- description: Roles for contacts
  name: Contacts - Roles
- description: Types for contacts
  name: Contacts - Types
- description: Customfields for custom symbols
  name: CustomSymbols - CustomFields
- description: Relationships for custom symbols
  name: CustomSymbols - Relationships
- description: Types for custom symbols
  name: CustomSymbols - Types
- description: Subjects, custom fields and all other preferences for notes
  name: Notes - Configuration
paths:
  /authors:
    get:
      description: Get all Authors
      operationId: GetAuthors
      parameters:
      - description: If set to true, permissions will be ignored. Default is false.
        explode: false
        in: header
        name: X-IRN-Ignore-Permissions
        required: false
        schema:
          default: false
          type: boolean
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AuthorConfigDto'
                type: array
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
      summary: Get all Authors
      tags:
      - Notes - Configuration
      x-accepts: application/json
  /contact-custom-fields:
    get:
      description: Get all the contact custom fields
      operationId: GetContactCustomFields
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ContactCustomFieldDto'
                type: array
          description: Success
      summary: Get all the contact custom fields
      tags:
      - Contacts - CustomFields
      x-accepts: application/json
    post:
      description: Create a contact custom field with given name and type
      operationId: CreateContactCustomField
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactCustomFieldSaveDto'
        description: ContactCustomFieldSaveDto object to save
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewItemDto'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Create a contact custom field
      tags:
      - Contacts - CustomFields
      x-contentType: application/json
      x-accepts: application/json
  /contact-custom-fields/{contactCustomFieldId}:
    delete:
      description: Delete a contact custom field based on guid
      operationId: DeleteContactCustomField
      parameters:
      - description: contactCustomFieldId to delete associated record
        explode: false
        in: path
        name: contactCustomFieldId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Delete a contact custom field
      tags:
      - Contacts - CustomFields
      x-accepts: application/json
    get:
      description: Get all details of custom field's defined for contacts
      operationId: GetContactCustomField
      parameters:
      - description: contactCustomFieldId to get associated record
        explode: false
        in: path
        name: contactCustomFieldId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactCustomFieldDto'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Get a specific Contact custom field's details
      tags:
      - Contacts - CustomFields
      x-accepts: application/json
    patch:
      description: Update a contact custom field configuration
      operationId: PatchContactCustomField
      parameters:
      - description: contactCustomFieldId to update associated record
        explode: false
        in: path
        name: contactCustomFieldId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/Operation'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Operation'
              type: array
        description: contactCustomFieldUpdateDto object to update
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Edit a contact custom field
      tags:
      - Contacts - CustomFields
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /contact-roles:
    get:
      description: Get all contact roles configured in your group
      operationId: GetContactRoles
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ContactRoleDto'
                type: array
          description: Success
      summary: Get list of the contact roles configured in your group
      tags:
      - Contacts - Roles
      x-accepts: application/json
    post:
      description: Create a contact role with given name and type
      operationId: CreateContactRole
      requestBody:
        content:
          application/json:
            schema:
              maxLength: 50
              minLength: 0
              type: string
        description: Contact role name
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewItemDto'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Create contact roles
      tags:
      - Contacts - Roles
      x-contentType: application/json
      x-accepts: application/json
  /contact-types:
    get:
      description: Get all contact types configured in your group
      operationId: GetContactTypes
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ContactTypeDto'
                type: array
          description: Success
      summary: Get list of the contact types configured in your group
      tags:
      - Contacts - Types
      x-accepts: application/json
    post:
      description: Create contact type with given name
      operationId: CreateContactType
      requestBody:
        content:
          application/json:
            schema:
              maxLength: 50
              minLength: 0
              type: string
        description: Contact type name
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewItemDto'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Create contact types
      tags:
      - Contacts - Types
      x-contentType: application/json
      x-accepts: application/json
  /custom-fields:
    get:
      description: Get all customfields configured in your group
      operationId: GetCustomFields
      parameters:
      - explode: false
        in: header
        name: X-IRN-Ignore-Permissions
        required: false
        schema:
          default: false
          type: boolean
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomFieldConfigDto'
                type: array
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
      summary: Get all Custom Fields
      tags:
      - Notes - Configuration
      x-accepts: application/json
  /custom-symbol-custom-fields:
    get:
      description: Get all custom fields configured for custom symbols configured
        in your group
      operationId: GetCustomSymbolCustomFields
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomSymbolCustomFieldConfigDto'
                type: array
          description: Success
      summary: Get all the Custom symbol custom fields
      tags:
      - CustomSymbols - CustomFields
      x-accepts: application/json
    post:
      description: Create a contact custom field with given name and type
      operationId: CreateCustomSymbolCustomField
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomSymbolCustomFieldDto'
        description: createCustomSymbolCustomFieldDto object to save
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewItemDto'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Create a Custom symbol custom field
      tags:
      - CustomSymbols - CustomFields
      x-contentType: application/json
      x-accepts: application/json
  /custom-symbol-custom-fields/{customSymbolCustomFieldId}:
    delete:
      description: Delete a custom field configured for custom symbols
      operationId: DeleteCustomSymbolCustomField
      parameters:
      - description: customSymbolCustomFieldId to delete associated record
        explode: false
        in: path
        name: customSymbolCustomFieldId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Delete a Custom symbol custom field
      tags:
      - CustomSymbols - CustomFields
      x-accepts: application/json
    get:
      description: Get details of a given custom field configured for custom symbols
      operationId: GetCustomSymbolCustomField
      parameters:
      - description: customSymbolCustomFieldId to get associated record
        explode: false
        in: path
        name: customSymbolCustomFieldId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomSymbolCustomFieldConfigDto'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Get a specific Custom symbol custom field's details
      tags:
      - CustomSymbols - CustomFields
      x-accepts: application/json
    patch:
      description: Update a custom field configuration for custom symbols
      operationId: PatchCustomSymbolCustomField
      parameters:
      - description: customSymbolCustomFieldId to update associated record
        explode: false
        in: path
        name: customSymbolCustomFieldId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/Operation'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Operation'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Operation'
              type: array
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/Operation'
              type: array
        description: customSymbolCustomFieldUpdateDto object to update
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Edit a Custom symbol custom field
      tags:
      - CustomSymbols - CustomFields
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /custom-symbol-types:
    get:
      description: Get all custom symbol types configured in your group
      operationId: GetCustomSymbolTypes
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomSymbolTypeDto'
                type: array
          description: Success
      summary: Get all the custom symbol types
      tags:
      - CustomSymbols - Types
      x-accepts: application/json
    post:
      description: Create a custom symbol type with given name
      operationId: CreateCustomSymbolType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveCustomSymbolTypeDto'
        description: saveCustomSymbolTypeDto object to save
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewItemDto'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Create a Custom symbol type
      tags:
      - CustomSymbols - Types
      x-contentType: application/json
      x-accepts: application/json
  /custom-symbol-types/{customSymbolTypeId}:
    delete:
      description: Delete a custom symbol type based on guid
      operationId: DeleteCustomSymbolTypeAsync
      parameters:
      - description: customSymbolTypeId to delete associated record
        explode: false
        in: path
        name: customSymbolTypeId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Delete a Custom symbol type
      tags:
      - CustomSymbols - Types
      x-accepts: application/json
    get:
      description: Get details of a given custom symbol type
      operationId: GetCustomSymbolType
      parameters:
      - description: customSymbolTypeId to get associated record
        explode: false
        in: path
        name: customSymbolTypeId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomSymbolTypeDetailDto'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Get a specific Custom symbol type's details
      tags:
      - CustomSymbols - Types
      x-accepts: application/json
    put:
      description: Update a custom symbol type configuration
      operationId: UpdateCustomSymbolType
      parameters:
      - description: customSymbolTypeId to update associated record
        explode: false
        in: path
        name: customSymbolTypeId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateCustomSymbolTypeDto'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomSymbolTypeDto'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomSymbolTypeDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateCustomSymbolTypeDto'
        description: updateCustomSymbolTypeDto object to update
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Edit a Custom symbol type
      tags:
      - CustomSymbols - Types
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /custom-symbol-types/{customSymbolTypeId}/custom-fields:
    get:
      description: Get all custom fields configured for custom symbols configured
        in your group
      operationId: GetSymbolCustomFieldsForCustomSymbolType
      parameters:
      - description: customSymbolTypeId to get associated Custom fileds
        explode: false
        in: path
        name: customSymbolTypeId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomSymbolCustomFieldConfigDto'
                type: array
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Get Custom fields for Custom Symbol type
      tags:
      - CustomSymbols - Types
      x-accepts: application/json
  /group:
    get:
      description: Get all the group details
      operationId: GetGroup
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupConfigDto'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      summary: Get Group details
      tags:
      - Notes - Configuration
      x-accepts: application/json
  /group/client-sales-representative:
    get:
      description: Get the client sales representative for the group
      operationId: GetClientsSalesRepresentative
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientSalesRepresentativeDto'
          description: Success
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      summary: Get Client Sales Representative
      tags:
      - Notes - Configuration
      x-accepts: application/json
  /phone-number-types:
    get:
      description: Get all phone types configured in your group
      operationId: GetPhoneNumberTypes
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PhoneNumberTypeDto'
                type: array
          description: Success
      summary: Get list of the phone types configured in your group
      tags:
      - Contacts - PhoneNumberTypes
      x-accepts: application/json
    post:
      description: Create a phone type with given name
      operationId: CreatePhoneNumberType
      requestBody:
        content:
          application/json:
            schema:
              maxLength: 50
              minLength: 0
              type: string
        description: To add phoneNumberType
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewItemDto'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Create a phone type
      tags:
      - Contacts - PhoneNumberTypes
      x-contentType: application/json
      x-accepts: application/json
  /recommendations:
    get:
      description: Get all recommendations configured in your group
      operationId: GetRecommendations
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RecommendationConfigDto'
                type: array
          description: Success
      summary: Get all Recommendations
      tags:
      - Notes - Configuration
      x-accepts: application/json
  /relationship-categories:
    get:
      description: Get all relationship categories configured in your group
      operationId: GetRelationshipCategories
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RelationshipCategoryDto'
                type: array
          description: Success
      summary: Get list of the relationship categories configured in your group
      tags:
      - Contacts - Relationship Category
      x-accepts: application/json
    post:
      description: Create a relationship category with given name
      operationId: CreateRelationshipCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelationshipCategorySaveDto'
        description: RelationshipCategorySaveDto object to save
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewItemDto'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Create a relationship category
      tags:
      - Contacts - Relationship Category
      x-contentType: application/json
      x-accepts: application/json
  /relationships:
    get:
      description: Get all contact relationships configured in your group
      operationId: GetRelationships
      parameters:
      - explode: true
        in: query
        name: type
        required: false
        schema:
          $ref: '#/components/schemas/RelationshipType'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RelationshipDto'
                type: array
          description: Success
      summary: Get list of the relationships configured in your group
      tags:
      - Contacts - Relationships
      x-accepts: application/json
    post:
      description: Create a contact relationship type with given name
      operationId: CreateContactRelationshipType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelationshipSaveDto'
        description: RelationshipSaveDto object to save
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewItemDto'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Create a relationship type
      tags:
      - Contacts - Relationships
      x-contentType: application/json
      x-accepts: application/json
  /sentiments:
    get:
      description: Get all sentiments configured in your group
      operationId: GetSentiments
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SentimentConfigDto'
                type: array
          description: Success
      summary: Get all Sentiments
      tags:
      - Notes - Configuration
      x-accepts: application/json
  /subjects:
    get:
      description: Get all subjects configured in your group
      operationId: GetSubjects
      parameters:
      - explode: false
        in: header
        name: X-IRN-Ignore-Permissions
        required: false
        schema:
          default: false
          type: boolean
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SubjectSummaryDto'
                type: array
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
      summary: Get all Subjects
      tags:
      - Notes - Configuration
      x-accepts: application/json
  /subjects/{subjectId}:
    get:
      description: Get all details of a given subject
      operationId: GetSubject
      parameters:
      - description: Id
        explode: false
        in: path
        name: subjectId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: X-IRN-Ignore-Permissions
        required: false
        schema:
          default: false
          type: boolean
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectConfigDto'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      summary: Get Subject details for the given Id provided
      tags:
      - Notes - Configuration
      x-accepts: application/json
  /symbols-relationships:
    get:
      description: Get all symbols relationships configured in your group
      operationId: GetSymbolsRelationships
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SymbolsRelationshipDto'
                type: array
          description: Success
      summary: Get all the Symbols Relationships
      tags:
      - CustomSymbols - Relationships
      x-accepts: application/json
    post:
      description: Create a symbol relationship with given name
      operationId: CreateSymbolRelationshipType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SymbolsRelationShipSaveDto'
        description: symbolsRelationshipSaveDto object to save
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewItemDto'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Create a symbol relationship
      tags:
      - CustomSymbols - Relationships
      x-contentType: application/json
      x-accepts: application/json
  /teams:
    get:
      description: Get all teams configured in your group
      operationId: GetTeams
      parameters:
      - description: If set to true, permissions will be ignored. Default is false.
        explode: false
        in: header
        name: X-IRN-Ignore-Permissions
        required: false
        schema:
          default: false
          type: boolean
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TeamSummaryDto'
                type: array
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
      summary: Get all Teams
      tags:
      - Notes - Configuration
      x-accepts: application/json
  /teams/{teamId}:
    get:
      description: Get all details of a given team
      operationId: GetTeam
      parameters:
      - description: Id
        explode: false
        in: path
        name: teamId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: If set to true, permissions will be ignored. Default is false.
        explode: false
        in: header
        name: X-IRN-Ignore-Permissions
        required: false
        schema:
          default: false
          type: boolean
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamConfigDto'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      summary: Get Team details for the given Id provided
      tags:
      - Notes - Configuration
      x-accepts: application/json
  /users:
    get:
      description: Get all assigned FactSet users in your group
      operationId: GetAssignedFactSetUsers
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserConfigDto'
                type: array
          description: Success
      summary: Get all assigned FactSet users
      tags:
      - Notes - Configuration
      x-accepts: application/json
  /custom-symbol-types/reorder:
    post:
      description: Reorder custom symbol types that are configured in your group
      operationId: UpdateCustomSymbolTypeOrder
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ReorderCustomSymbolTypeDto'
          application/json:
            schema:
              $ref: '#/components/schemas/ReorderCustomSymbolTypeDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ReorderCustomSymbolTypeDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReorderCustomSymbolTypeDto'
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Reorder custom symbol types
      tags:
      - CustomSymbols - Types
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /relationship-categories/reorder:
    post:
      description: Reorder relationship categories that are configured in your group
      operationId: UpdateRelationshipCategoryOrder
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RelationshipCategoryListDto'
          application/json:
            schema:
              $ref: '#/components/schemas/RelationshipCategoryListDto'
          text/json:
            schema:
              $ref: '#/components/schemas/RelationshipCategoryListDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RelationshipCategoryListDto'
        description: List of Guid
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Reorder relationship categories
      tags:
      - Contacts - Relationship Category
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /contact-roles/{contactRoleId}:
    delete:
      description: Delete a contact role based on guid
      operationId: DeleteContactRole
      parameters:
      - description: contactRoleId to delete associated record
        explode: false
        in: path
        name: contactRoleId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Delete a contact role
      tags:
      - Contacts - Roles
      x-accepts: application/json
    put:
      description: Update a contact role name and other details
      operationId: UpdateContactRole
      parameters:
      - description: contactRoleId to update associated record
        explode: false
        in: path
        name: contactRoleId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              maxLength: 50
              minLength: 0
              type: string
          application/json:
            schema:
              maxLength: 50
              minLength: 0
              type: string
          text/json:
            schema:
              maxLength: 50
              minLength: 0
              type: string
          application/*+json:
            schema:
              maxLength: 50
              minLength: 0
              type: string
        description: Updated contact role name
        required: true
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Edit a contact role
      tags:
      - Contacts - Roles
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /contact-types/{contactTypeId}:
    delete:
      description: Delete a contact type based on guid
      operationId: DeleteContactType
      parameters:
      - description: contactTypeId to delete associated record
        explode: false
        in: path
        name: contactTypeId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Delete a contact type
      tags:
      - Contacts - Types
      x-accepts: application/json
    put:
      description: Update a contact type
      operationId: UpdateContactType
      parameters:
      - description: contactTypeId to update associated record
        explode: false
        in: path
        name: contactTypeId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              maxLength: 50
              minLength: 0
              type: string
          application/json:
            schema:
              maxLength: 50
              minLength: 0
              type: string
          text/json:
            schema:
              maxLength: 50
              minLength: 0
              type: string
          application/*+json:
            schema:
              maxLength: 50
              minLength: 0
              type: string
        description: Updated contact type name
        required: true
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Edit a contact type
      tags:
      - Contacts - Types
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /phone-number-types/{phoneNumberTypeId}:
    delete:
      description: Delete a phone number type based on guid
      operationId: DeletePhoneNumberType
      parameters:
      - description: phoneNumberTypeId for deleting associated record
        explode: false
        in: path
        name: phoneNumberTypeId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Delete a phone type
      tags:
      - Contacts - PhoneNumberTypes
      x-accepts: application/json
    put:
      description: Update a phone number type
      operationId: UpdatePhoneNumberType
      parameters:
      - description: phoneNumberTypeId to update associated record
        explode: false
        in: path
        name: phoneNumberTypeId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              maxLength: 50
              minLength: 0
              type: string
          application/json:
            schema:
              maxLength: 50
              minLength: 0
              type: string
          text/json:
            schema:
              maxLength: 50
              minLength: 0
              type: string
          application/*+json:
            schema:
              maxLength: 50
              minLength: 0
              type: string
        description: Update with phoneNumberType
        required: true
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Edit a phone type
      tags:
      - Contacts - PhoneNumberTypes
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /relationship-categories/{relationshipCategoryId}:
    delete:
      description: Delete a contact relationship category based on guid
      operationId: DeleteRelationshipCategory
      parameters:
      - description: relationshipCategoryId to delete associated record
        explode: false
        in: path
        name: relationshipCategoryId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Delete a relationship category
      tags:
      - Contacts - Relationship Category
      x-accepts: application/json
    put:
      description: Update details of contact relationship category
      operationId: EditRelationshipCategory
      parameters:
      - description: relationshipCategoryId to update associated record
        explode: false
        in: path
        name: relationshipCategoryId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RelationshipCategorySaveDto'
          application/json:
            schema:
              $ref: '#/components/schemas/RelationshipCategorySaveDto'
          text/json:
            schema:
              $ref: '#/components/schemas/RelationshipCategorySaveDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RelationshipCategorySaveDto'
        description: RelationshipCategorySaveDto object to update
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Edit a relationship category
      tags:
      - Contacts - Relationship Category
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /relationships/{relationshipId}:
    delete:
      description: Delete a contact relationship type based on guid
      operationId: DeleteRelationship
      parameters:
      - description: relationshipId to delete associated record
        explode: false
        in: path
        name: relationshipId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Delete a relationship type
      tags:
      - Contacts - Relationships
      x-accepts: application/json
    put:
      description: Update a contact relationship type
      operationId: EditRelationship
      parameters:
      - description: relationshipId to update associated record
        explode: false
        in: path
        name: relationshipId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RelationshipSaveDto'
          application/json:
            schema:
              $ref: '#/components/schemas/RelationshipSaveDto'
          text/json:
            schema:
              $ref: '#/components/schemas/RelationshipSaveDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RelationshipSaveDto'
        description: RelationshipSaveDto object to update
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Edit a relationship type
      tags:
      - Contacts - Relationships
      x-contentType: application/json-patch+json
      x-accepts: application/json
  /symbols-relationships/{symbolsRelationshipId}:
    delete:
      description: Delete a symbol relationship based on guid
      operationId: DeleteSymbolsRelationship
      parameters:
      - description: symbolsRelationshipId to delete associated record
        explode: false
        in: path
        name: symbolsRelationshipId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Delete a symbol relationship
      tags:
      - CustomSymbols - Relationships
      x-accepts: application/json
    put:
      description: Update a symbol relationship
      operationId: EditSymbolsRelationship
      parameters:
      - description: symbolsRelationshipId to update associated record
        explode: false
        in: path
        name: symbolsRelationshipId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SymbolsRelationShipSaveDto'
          application/json:
            schema:
              $ref: '#/components/schemas/SymbolsRelationShipSaveDto'
          text/json:
            schema:
              $ref: '#/components/schemas/SymbolsRelationShipSaveDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SymbolsRelationShipSaveDto'
        description: SymbolsRelationShipSaveDto object to update
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
      summary: Edit a symbol relationship
      tags:
      - CustomSymbols - Relationships
      x-contentType: application/json-patch+json
      x-accepts: application/json
components:
  schemas:
    ApprovalLevelConfigDto:
      example:
        approverIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
      nullable: true
      properties:
        name:
          nullable: true
          type: string
        approverIds:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
      type: object
    ApprovalProcessConfigDto:
      example:
        shouldSendEmailAlertsWhenSubmittedForApproval: true
        deniedNotesVisible: deniedNotesVisible
        shouldSendEmailAlertsWhenApproved: true
        shouldSendEmailAlertsToAuthor: true
        viewerIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        shouldSendEmailAlertsToApprovers: true
        shouldSendEmailAlertsToViewers: true
        canAuthorEditPending: true
        approvalLevels:
        - approverIds:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
        - approverIds:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
        shouldSendEmailAlertsWhenDenied: true
        canAuthorSelfApprove: true
        pendingNotesVisible: pendingNotesVisible
      nullable: true
      properties:
        approvalLevels:
          items:
            $ref: '#/components/schemas/ApprovalLevelConfigDto'
          nullable: true
          type: array
        viewerIds:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
        pendingNotesVisible:
          nullable: true
          type: string
        deniedNotesVisible:
          nullable: true
          type: string
        shouldSendEmailAlertsWhenSubmittedForApproval:
          type: boolean
        shouldSendEmailAlertsWhenApproved:
          type: boolean
        shouldSendEmailAlertsWhenDenied:
          type: boolean
        shouldSendEmailAlertsToAuthor:
          type: boolean
        shouldSendEmailAlertsToApprovers:
          type: boolean
        shouldSendEmailAlertsToViewers:
          type: boolean
        canAuthorSelfApprove:
          type: boolean
        canAuthorEditPending:
          type: boolean
      type: object
    AuthorConfigDto:
      example:
        firstName: firstName
        lastName: lastName
        emailAddress: emailAddress
        serialNumber: serialNumber
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        team:
          code: code
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        userName: userName
        isActive: true
      nullable: true
      properties:
        id:
          format: uuid
          type: string
        userName:
          nullable: true
          type: string
        serialNumber:
          nullable: true
          type: string
        firstName:
          nullable: true
          type: string
        lastName:
          nullable: true
          type: string
        emailAddress:
          nullable: true
          type: string
        isActive:
          type: boolean
        team:
          $ref: '#/components/schemas/TeamSummaryDto'
      type: object
    ClientSalesRepresentativeDto:
      example:
        emailAddress: emailAddress
        fullname: fullname
      properties:
        fullname:
          nullable: true
          type: string
        emailAddress:
          nullable: true
          type: string
      type: object
    CommentaryConfigDto:
      example:
        shouldSendEmailAlertsToAuthor: true
        shouldSendEmailAlertsToCommenters: true
        shouldSendEmailAlertsToAll: true
      nullable: true
      properties:
        shouldSendEmailAlertsToAuthor:
          type: boolean
        shouldSendEmailAlertsToCommenters:
          type: boolean
        shouldSendEmailAlertsToAll:
          type: boolean
      type: object
    ContactCustomFieldDto:
      example:
        contactCustomFieldOptions:
        - name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          order: 0
        - name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          order: 0
        code: code
        formulaConfig:
          formulaType: formulaType
          formula: formula
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: type
        isMandatory: true
        isHidden: true
      nullable: true
      properties:
        id:
          format: uuid
          type: string
        code:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        type:
          nullable: true
          type: string
        isHidden:
          type: boolean
        isMandatory:
          type: boolean
        formulaConfig:
          $ref: '#/components/schemas/FormulaConfigDto'
        contactCustomFieldOptions:
          items:
            $ref: '#/components/schemas/ContactCustomFieldOptionDto'
          nullable: true
          type: array
      type: object
    ContactCustomFieldFormulaDto:
      example:
        symbol: symbol
        formula: formula
        isScreening: false
      nullable: true
      properties:
        formula:
          maxLength: 2040
          nullable: true
          type: string
        isScreening:
          default: false
          type: boolean
        symbol:
          nullable: true
          type: string
      type: object
    ContactCustomFieldOptionDto:
      example:
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        order: 0
      nullable: true
      properties:
        id:
          format: uuid
          type: string
        name:
          nullable: true
          type: string
        order:
          format: int32
          type: integer
      type: object
    ContactCustomFieldOptionSaveDto:
      example:
        name: name
      properties:
        name:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - name
      type: object
    ContactCustomFieldSaveDto:
      example:
        contactCustomFieldOptions:
        - name: name
        - name: name
        code: code
        fieldFormula:
          symbol: symbol
          formula: formula
          isScreening: false
        name: name
        isMandatory: false
        isHidden: false
      properties:
        code:
          maxLength: 32
          minLength: 1
          type: string
        name:
          maxLength: 100
          minLength: 1
          type: string
        type:
          $ref: '#/components/schemas/ContactCustomFieldType'
        isHidden:
          default: false
          type: boolean
        isMandatory:
          default: false
          type: boolean
        fieldFormula:
          $ref: '#/components/schemas/ContactCustomFieldFormulaDto'
        contactCustomFieldOptions:
          items:
            $ref: '#/components/schemas/ContactCustomFieldOptionSaveDto'
          nullable: true
          type: array
      required:
      - code
      - isHidden
      - isMandatory
      - name
      - type
      type: object
    ContactCustomFieldType:
      description: Type can be one of 0- None, 1-Text, 2-Email, 3-Link, 4-SingleOptions,
        5-MultiOptions, 6-Numeric, 7-Date
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      format: int32
      type: integer
    ContactRoleDto:
      example:
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      nullable: true
      properties:
        id:
          format: uuid
          type: string
        name:
          maxLength: 50
          minLength: 0
          type: string
      required:
      - id
      - name
      type: object
    ContactTypeDto:
      example:
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      nullable: true
      properties:
        id:
          format: uuid
          type: string
        name:
          maxLength: 50
          minLength: 0
          type: string
      required:
      - id
      - name
      type: object
    CreateCustomSymbolCustomFieldDto:
      example:
        code: code
        formulaConfig:
          formulaType: formulaType
          formula: formula
        optionsConfig:
        - optionsConfig
        - optionsConfig
        name: name
        customSymbolTypes:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: type
        isMandatory: false
        isHidden: false
        isShownInInfobox: true
      properties:
        code:
          maxLength: 32
          minLength: 1
          type: string
        name:
          maxLength: 100
          minLength: 1
          type: string
        type:
          description: Type can be one of Text, SingleOption, MultiOptions, Numeric,
            Date, ExtendedText, ContactLookup
          minLength: 1
          type: string
        isHidden:
          default: false
          type: boolean
        isMandatory:
          default: false
          type: boolean
        isShownInInfobox:
          default: true
          type: boolean
        formulaConfig:
          $ref: '#/components/schemas/CustomSymbolCustomFieldFormulaConfigDto'
        optionsConfig:
          items:
            type: string
          nullable: true
          type: array
        customSymbolTypes:
          items:
            format: uuid
            type: string
          type: array
      required:
      - code
      - customSymbolTypes
      - isHidden
      - isMandatory
      - isShownInInfobox
      - name
      - type
      type: object
    CustomFieldConfigDto:
      example:
        usePreviousValue: true
        code: code
        isCalculated: true
        optionsConfig:
          multiSelectEnabled: true
          options:
          - options
          - options
          onTheFlyEnabled: true
        source: source
        type: type
        isHidden: true
        hasPairedField: true
        extendedTextConfig:
          maxChars: 6
        isFilePath: true
        formulaConfig:
          formulaType: formulaType
          formula: formula
        numericConfig:
          decimals: 0
          splitType: splitType
        integerConfig:
          splitType: splitType
        userTeamConfig:
          customFieldTeams:
          - teamName: teamName
            fieldName: fieldName
            teamId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - teamName: teamName
            fieldName: fieldName
            teamId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        isMandatory: true
      nullable: true
      properties:
        id:
          format: uuid
          type: string
        code:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        source:
          nullable: true
          type: string
        type:
          nullable: true
          type: string
        usePreviousValue:
          type: boolean
        isMandatory:
          type: boolean
        isHidden:
          type: boolean
        isFilePath:
          type: boolean
        isCalculated:
          type: boolean
        hasPairedField:
          type: boolean
        formulaConfig:
          $ref: '#/components/schemas/FormulaConfigDto'
        numericConfig:
          $ref: '#/components/schemas/NumericConfigDto'
        integerConfig:
          $ref: '#/components/schemas/IntegerConfigDto'
        extendedTextConfig:
          $ref: '#/components/schemas/ExtendedTextConfigDto'
        optionsConfig:
          $ref: '#/components/schemas/OptionsConfigDto'
        userTeamConfig:
          $ref: '#/components/schemas/UserTeamConfigDto'
      type: object
    CustomFieldTeamConfigDto:
      example:
        teamName: teamName
        fieldName: fieldName
        teamId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      nullable: true
      properties:
        teamId:
          format: uuid
          type: string
        teamName:
          nullable: true
          type: string
        fieldName:
          nullable: true
          type: string
      type: object
    CustomFieldUserTeamLookupFilterType:
      description: Type can be one of 0-Users, 1-Teams, 2-Both
      enum:
      - 0
      - 1
      - 2
      format: int32
      type: integer
    CustomSymbolCustomFieldConfigDto:
      example:
        code: code
        formulaConfig:
          formulaType: formulaType
          formula: formula
        optionsConfig:
        - optionsConfig
        - optionsConfig
        name: name
        customSymbolTypes:
        - name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: type
        isMandatory: true
        isHidden: true
        isShownInInfobox: true
      nullable: true
      properties:
        id:
          format: uuid
          type: string
        code:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        type:
          nullable: true
          type: string
        isHidden:
          type: boolean
        isMandatory:
          type: boolean
        isShownInInfobox:
          type: boolean
        formulaConfig:
          $ref: '#/components/schemas/CustomSymbolCustomFieldFormulaConfigDto'
        optionsConfig:
          items:
            type: string
          nullable: true
          type: array
        customSymbolTypes:
          items:
            $ref: '#/components/schemas/CustomSymbolTypeSummaryDto'
          nullable: true
          type: array
      type: object
    CustomSymbolCustomFieldFormulaConfigDto:
      example:
        formulaType: formulaType
        formula: formula
      nullable: true
      properties:
        formula:
          maxLength: 2040
          minLength: 1
          type: string
        formulaType:
          minLength: 1
          type: string
      required:
      - formula
      - formulaType
      type: object
    CustomSymbolSubTypeDto:
      example:
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      nullable: true
      properties:
        id:
          format: uuid
          type: string
        name:
          nullable: true
          type: string
      type: object
    CustomSymbolTypeDetailDto:
      example:
        hideSymbolSubType: true
        isDefault: true
        hideAddressField: true
        name: name
        subTypes:
        - name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      nullable: true
      properties:
        id:
          format: uuid
          type: string
        name:
          nullable: true
          type: string
        hideAddressField:
          type: boolean
        hideSymbolSubType:
          type: boolean
        isDefault:
          type: boolean
        dueDiligenceSymbolEntityType:
          $ref: '#/components/schemas/EntityType'
        subTypes:
          items:
            $ref: '#/components/schemas/CustomSymbolSubTypeDto'
          nullable: true
          type: array
      type: object
    CustomSymbolTypeDto:
      example:
        hideSymbolSubType: true
        isDefault: true
        hideAddressField: true
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        order: 0
      nullable: true
      properties:
        id:
          format: uuid
          type: string
        name:
          nullable: true
          type: string
        hideAddressField:
          type: boolean
        hideSymbolSubType:
          type: boolean
        isDefault:
          type: boolean
        order:
          format: int32
          type: integer
        dueDiligenceSymbolEntityType:
          $ref: '#/components/schemas/EntityType'
      type: object
    CustomSymbolTypeSummaryDto:
      example:
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      nullable: true
      properties:
        id:
          format: uuid
          type: string
        name:
          nullable: true
          type: string
      type: object
    DateSettingsDto:
      example:
        allowEdit: true
        isLocked: true
      nullable: true
      properties:
        allowEdit:
          type: boolean
        isLocked:
          type: boolean
      type: object
    EntityType:
      description: Type can be one of 0-Unknown, 1-Contact, 2-Firm, 3-Product, 4-Project,
        5-Classification,6-Template, 7-Country
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      format: int32
      type: integer
    ExtendedTextConfigDto:
      example:
        maxChars: 6
      nullable: true
      properties:
        maxChars:
          format: int32
          type: integer
      type: object
    FormulaConfigDto:
      example:
        formulaType: formulaType
        formula: formula
      nullable: true
      properties:
        formula:
          nullable: true
          type: string
        formulaType:
          nullable: true
          type: string
      type: object
    GroupConfigDto:
      example:
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        fields:
          date:
            allowEdit: true
            isLocked: true
          identifier:
            allowEdit: true
          sentiment:
            defaultId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isMandatory: true
            isHidden: true
            usePrevious: true
          note:
            defaultStatus: defaultStatus
            alternativeCustomFieldId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            allowPersonal: true
            isMandatory: true
            isHidden: true
            usePrevious: true
          subject:
            defaultId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          link:
            isMandatory: true
            isHidden: true
            usePrevious: true
          recommendation:
            defaultId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            isMandatory: true
            isHidden: true
            usePrevious: true
          relatedSymbols:
            isMandatory: true
            isHidden: true
            usePrevious: true
          source:
            isMandatory: true
            isHidden: true
            usePrevious: true
          team:
            defaultId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          title:
            usePrevious: true
          relatedResearch:
            isMandatory: true
            isHidden: true
            usePrevious: true
          relatedContacts:
            isMandatory: true
            isHidden: true
            usePrevious: true
          organizer:
            isMandatory: true
            isHidden: true
      nullable: true
      properties:
        id:
          format: uuid
          type: string
        name:
          nullable: true
          type: string
        fields:
          $ref: '#/components/schemas/GroupFieldsDto'
      type: object
    GroupFieldsDto:
      example:
        date:
          allowEdit: true
          isLocked: true
        identifier:
          allowEdit: true
        sentiment:
          defaultId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isMandatory: true
          isHidden: true
          usePrevious: true
        note:
          defaultStatus: defaultStatus
          alternativeCustomFieldId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          allowPersonal: true
          isMandatory: true
          isHidden: true
          usePrevious: true
        subject:
          defaultId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        link:
          isMandatory: true
          isHidden: true
          usePrevious: true
        recommendation:
          defaultId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isMandatory: true
          isHidden: true
          usePrevious: true
        relatedSymbols:
          isMandatory: true
          isHidden: true
          usePrevious: true
        source:
          isMandatory: true
          isHidden: true
          usePrevious: true
        team:
          defaultId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        title:
          usePrevious: true
        relatedResearch:
          isMandatory: true
          isHidden: true
          usePrevious: true
        relatedContacts:
          isMandatory: true
          isHidden: true
          usePrevious: true
        organizer:
          isMandatory: true
          isHidden: true
      nullable: true
      properties:
        title:
          $ref: '#/components/schemas/TitleSettingsDto'
        date:
          $ref: '#/components/schemas/DateSettingsDto'
        identifier:
          $ref: '#/components/schemas/IdentifierSettingsDto'
        subject:
          $ref: '#/components/schemas/SubjectSettingsDto'
        recommendation:
          $ref: '#/components/schemas/RecommendationSettingsDto'
        sentiment:
          $ref: '#/components/schemas/SentimentSettingsDto'
        link:
          $ref: '#/components/schemas/LinkSettingsDto'
        note:
          $ref: '#/components/schemas/NoteSettingsDto'
        source:
          $ref: '#/components/schemas/SourceSettingsDto'
        relatedSymbols:
          $ref: '#/components/schemas/RelatedSymbolsSettingsDto'
        relatedResearch:
          $ref: '#/components/schemas/RelatedResearchSettingsDto'
        relatedContacts:
          $ref: '#/components/schemas/RelatedContactsSettingsDto'
        team:
          $ref: '#/components/schemas/TeamSettingsDto'
        organizer:
          $ref: '#/components/schemas/OrganizerSettingsDto'
      type: object
    HeadlineFormatConfigDto:
      example:
        name: name
        customFieldName: customFieldName
        customString: customString
      nullable: true
      properties:
        name:
          nullable: true
          type: string
        customString:
          nullable: true
          type: string
        customFieldName:
          nullable: true
          type: string
      type: object
    IdentifierSettingsDto:
      example:
        allowEdit: true
      nullable: true
      properties:
        allowEdit:
          type: boolean
      type: object
    IntegerConfigDto:
      example:
        splitType: splitType
      nullable: true
      properties:
        splitType:
          nullable: true
          type: string
      type: object
    LinkSettingsDto:
      example:
        isMandatory: true
        isHidden: true
        usePrevious: true
      nullable: true
      properties:
        isHidden:
          type: boolean
        isMandatory:
          type: boolean
        usePrevious:
          type: boolean
      type: object
    NewItemDto:
      example:
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      nullable: true
      properties:
        id:
          format: uuid
          type: string
      type: object
    NoteSettingsDto:
      example:
        defaultStatus: defaultStatus
        alternativeCustomFieldId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        allowPersonal: true
        isMandatory: true
        isHidden: true
        usePrevious: true
      nullable: true
      properties:
        isHidden:
          type: boolean
        isMandatory:
          type: boolean
        usePrevious:
          type: boolean
        allowPersonal:
          type: boolean
        defaultStatus:
          nullable: true
          type: string
        alternativeCustomFieldId:
          format: uuid
          nullable: true
          type: string
      type: object
    NumericConfigDto:
      example:
        decimals: 0
        splitType: splitType
      nullable: true
      properties:
        decimals:
          format: int32
          type: integer
        splitType:
          nullable: true
          type: string
      type: object
    Operation:
      example:
        path: path
        op: op
        from: from
        value: ""
      nullable: true
      properties:
        operationType:
          $ref: '#/components/schemas/OperationType'
        path:
          nullable: true
          type: string
        op:
          nullable: true
          type: string
        from:
          nullable: true
          type: string
        value:
          nullable: true
      type: object
    OperationType:
      description: Type can be one of 0-Add, 1-Remove, 2-Replace, 3-Move, 4-Copy,
        5-Test, 6-Get
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      format: int32
      type: integer
    OptionsConfigDto:
      example:
        multiSelectEnabled: true
        options:
        - options
        - options
        onTheFlyEnabled: true
      nullable: true
      properties:
        multiSelectEnabled:
          type: boolean
        onTheFlyEnabled:
          type: boolean
        options:
          items:
            type: string
          nullable: true
          type: array
      type: object
    OrganizerSettingsDto:
      example:
        isMandatory: true
        isHidden: true
      nullable: true
      properties:
        isHidden:
          type: boolean
        isMandatory:
          type: boolean
      type: object
    PhoneNumberTypeDto:
      example:
        isStandard: true
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      nullable: true
      properties:
        id:
          format: uuid
          type: string
        name:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        isStandard:
          type: boolean
      type: object
    ProblemDetails:
      additionalProperties: {}
      nullable: true
      properties:
        type:
          nullable: true
          type: string
        title:
          nullable: true
          type: string
        status:
          format: int32
          nullable: true
          type: integer
        detail:
          nullable: true
          type: string
        instance:
          nullable: true
          type: string
      type: object
    RatingConfigDto:
      example:
        viewerIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        ratingsVisibleToAll: true
        ratingsVisibleToViewers: true
        ratingsVisibleToAuthor: true
        optionValues:
        - 0
        - 0
      nullable: true
      properties:
        ratingsVisibleToAuthor:
          type: boolean
        ratingsVisibleToViewers:
          type: boolean
        ratingsVisibleToAll:
          type: boolean
        viewerIds:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
        optionValues:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
      type: object
    RecommendationConfigDto:
      example:
        code: 0
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        isHidden: true
      nullable: true
      properties:
        id:
          format: uuid
          type: string
        name:
          nullable: true
          type: string
        code:
          format: int32
          type: integer
        isHidden:
          type: boolean
      type: object
    RecommendationSettingsDto:
      example:
        defaultId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        isMandatory: true
        isHidden: true
        usePrevious: true
      nullable: true
      properties:
        isHidden:
          type: boolean
        isMandatory:
          type: boolean
        usePrevious:
          type: boolean
        defaultId:
          format: uuid
          nullable: true
          type: string
      type: object
    RelatedContactsSettingsDto:
      example:
        isMandatory: true
        isHidden: true
        usePrevious: true
      nullable: true
      properties:
        isHidden:
          type: boolean
        isMandatory:
          type: boolean
        usePrevious:
          type: boolean
      type: object
    RelatedResearchSettingsDto:
      example:
        isMandatory: true
        isHidden: true
        usePrevious: true
      nullable: true
      properties:
        isHidden:
          type: boolean
        isMandatory:
          type: boolean
        usePrevious:
          type: boolean
      type: object
    RelatedSymbolsSettingsDto:
      example:
        isMandatory: true
        isHidden: true
        usePrevious: true
      nullable: true
      properties:
        isHidden:
          type: boolean
        isMandatory:
          type: boolean
        usePrevious:
          type: boolean
      type: object
    RelationshipCategoryDto:
      example:
        isContactToContact: true
        relationships:
        - bidirectionalName: bidirectionalName
          hideCompany: true
          rightToLeftName: rightToLeftName
          hideComment: true
          relationshipCategoryId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          leftToRightName: leftToRightName
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          relationshipCode: relationshipCode
          hideDates: true
          isCustomisable: true
        - bidirectionalName: bidirectionalName
          hideCompany: true
          rightToLeftName: rightToLeftName
          hideComment: true
          relationshipCategoryId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          leftToRightName: leftToRightName
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          relationshipCode: relationshipCode
          hideDates: true
          isCustomisable: true
        isContactToSymbol: true
        isStandard: true
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      nullable: true
      properties:
        id:
          format: uuid
          type: string
        name:
          nullable: true
          type: string
        isStandard:
          type: boolean
        isContactToContact:
          type: boolean
        isContactToSymbol:
          type: boolean
        relationships:
          items:
            $ref: '#/components/schemas/RelationshipDto'
          nullable: true
          type: array
      type: object
    RelationshipCategoryListDto:
      example:
        ids:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      nullable: true
      properties:
        ids:
          items:
            format: uuid
            type: string
          type: array
      required:
      - ids
      type: object
    RelationshipCategorySaveDto:
      example:
        isContactToContact: false
        isContactToSymbol: false
        categoryName: categoryName
      nullable: true
      properties:
        categoryName:
          maxLength: 50
          minLength: 0
          type: string
        isContactToContact:
          default: false
          type: boolean
        isContactToSymbol:
          default: false
          type: boolean
      required:
      - categoryName
      type: object
    RelationshipDto:
      example:
        bidirectionalName: bidirectionalName
        hideCompany: true
        rightToLeftName: rightToLeftName
        hideComment: true
        relationshipCategoryId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        leftToRightName: leftToRightName
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        relationshipCode: relationshipCode
        hideDates: true
        isCustomisable: true
      nullable: true
      properties:
        id:
          format: uuid
          type: string
        relationshipCategoryId:
          format: uuid
          type: string
        relationshipCode:
          nullable: true
          type: string
        bidirectionalName:
          nullable: true
          type: string
        leftToRightName:
          nullable: true
          type: string
        rightToLeftName:
          nullable: true
          type: string
        hideDates:
          type: boolean
        hideComment:
          type: boolean
        hideCompany:
          type: boolean
        isCustomisable:
          type: boolean
      type: object
    RelationshipSaveDto:
      example:
        bidirectionalName: bidirectionalName
        hideCompany: false
        rightToLeftName: rightToLeftName
        hideComment: false
        relationshipCategoryId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        leftToRightName: leftToRightName
        relationshipCode: relationshipCode
        hideDates: false
      properties:
        relationshipCategoryId:
          format: uuid
          type: string
        relationshipCode:
          maxLength: 5
          minLength: 0
          nullable: true
          type: string
        bidirectionalName:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        leftToRightName:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        rightToLeftName:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        hideDates:
          default: false
          type: boolean
        hideComment:
          default: false
          type: boolean
        hideCompany:
          default: false
          type: boolean
      required:
      - hideComment
      - hideCompany
      - hideDates
      - relationshipCategoryId
      type: object
    RelationshipType:
      description: Type can be one of 0-All, 1-Contact-to-Contact, 2-Contact-to-Symbol
      enum:
      - 0
      - 1
      - 2
      format: int32
      type: integer
    ReorderCustomSymbolTypeDto:
      example:
        ids:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        ids:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
      type: object
    SaveCustomSymbolTypeDto:
      example:
        isDefault: false
        hideAddressField: true
        customFieldIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        subTypes:
        - subTypes
        - subTypes
        hideSymbolSubtype: true
      properties:
        name:
          maxLength: 100
          minLength: 0
          type: string
        hideAddressField:
          type: boolean
        hideSymbolSubtype:
          type: boolean
        isDefault:
          default: false
          type: boolean
        dueDiligenceSymbolEntityType:
          $ref: '#/components/schemas/EntityType'
        subTypes:
          items:
            type: string
          nullable: true
          type: array
        customFieldIds:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
      required:
      - name
      type: object
    SentimentConfigDto:
      example:
        code: 0
        color: color
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        isHidden: true
      nullable: true
      properties:
        id:
          format: uuid
          type: string
        name:
          nullable: true
          type: string
        code:
          format: int32
          type: integer
        color:
          nullable: true
          type: string
        isHidden:
          type: boolean
      type: object
    SentimentSettingsDto:
      example:
        defaultId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        isMandatory: true
        isHidden: true
        usePrevious: true
      nullable: true
      properties:
        isHidden:
          type: boolean
        isMandatory:
          type: boolean
        usePrevious:
          type: boolean
        defaultId:
          format: uuid
          nullable: true
          type: string
      type: object
    SourceSettingsDto:
      example:
        isMandatory: true
        isHidden: true
        usePrevious: true
      nullable: true
      properties:
        isHidden:
          type: boolean
        isMandatory:
          type: boolean
        usePrevious:
          type: boolean
      type: object
    SubjectConfigDto:
      example:
        code: code
        customFieldIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        identifierType: identifierType
        type: type
        newsHeadlineFormat:
        - name: name
          customFieldName: customFieldName
          customString: customString
        - name: name
          customFieldName: customFieldName
          customString: customString
        layoutId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        identifierTypes:
        - identifierTypes
        - identifierTypes
        isHidden: true
        noteLengthLimit: 6
        name: name
        commentaryConfig:
          shouldSendEmailAlertsToAuthor: true
          shouldSendEmailAlertsToCommenters: true
          shouldSendEmailAlertsToAll: true
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        approvalProcessConfig:
          shouldSendEmailAlertsWhenSubmittedForApproval: true
          deniedNotesVisible: deniedNotesVisible
          shouldSendEmailAlertsWhenApproved: true
          shouldSendEmailAlertsToAuthor: true
          viewerIds:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          shouldSendEmailAlertsToApprovers: true
          shouldSendEmailAlertsToViewers: true
          canAuthorEditPending: true
          approvalLevels:
          - approverIds:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
          - approverIds:
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            name: name
          shouldSendEmailAlertsWhenDenied: true
          canAuthorSelfApprove: true
          pendingNotesVisible: pendingNotesVisible
        ratingConfig:
          viewerIds:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          ratingsVisibleToAll: true
          ratingsVisibleToViewers: true
          ratingsVisibleToAuthor: true
          optionValues:
          - 0
          - 0
        emailHeadlineFormat:
        - name: name
          customFieldName: customFieldName
          customString: customString
        - name: name
          customFieldName: customFieldName
          customString: customString
      nullable: true
      properties:
        id:
          format: uuid
          type: string
        name:
          nullable: true
          type: string
        code:
          nullable: true
          type: string
        isHidden:
          type: boolean
        identifierType:
          nullable: true
          type: string
        identifierTypes:
          items:
            type: string
          nullable: true
          type: array
        type:
          nullable: true
          type: string
        customFieldIds:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
        approvalProcessConfig:
          $ref: '#/components/schemas/ApprovalProcessConfigDto'
        commentaryConfig:
          $ref: '#/components/schemas/CommentaryConfigDto'
        newsHeadlineFormat:
          items:
            $ref: '#/components/schemas/HeadlineFormatConfigDto'
          nullable: true
          type: array
        emailHeadlineFormat:
          items:
            $ref: '#/components/schemas/HeadlineFormatConfigDto'
          nullable: true
          type: array
        ratingConfig:
          $ref: '#/components/schemas/RatingConfigDto'
        noteLengthLimit:
          format: int32
          nullable: true
          type: integer
        layoutId:
          format: uuid
          nullable: true
          type: string
      type: object
    SubjectSettingsDto:
      example:
        defaultId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      nullable: true
      properties:
        defaultId:
          format: uuid
          nullable: true
          type: string
      type: object
    SubjectSummaryDto:
      example:
        noteLengthLimit: 0
        code: code
        customFieldIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        identifierType: identifierType
        type: type
        layoutId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        identifierTypes:
        - identifierTypes
        - identifierTypes
        isHidden: true
      nullable: true
      properties:
        id:
          format: uuid
          type: string
        name:
          nullable: true
          type: string
        code:
          nullable: true
          type: string
        identifierType:
          nullable: true
          type: string
        identifierTypes:
          items:
            type: string
          nullable: true
          type: array
        type:
          nullable: true
          type: string
        isHidden:
          type: boolean
        customFieldIds:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
        noteLengthLimit:
          format: int32
          nullable: true
          type: integer
        layoutId:
          format: uuid
          nullable: true
          type: string
      type: object
    SymbolsRelationShipSaveDto:
      example:
        peerName: peerName
        childToParentName: childToParentName
        hideComment: true
        relationshipCode: relationshipCode
        hideDates: true
        parentToChildName: parentToChildName
      properties:
        relationshipCode:
          maxLength: 3
          minLength: 0
          nullable: true
          type: string
        parentToChildName:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        childToParentName:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        peerName:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        hideDates:
          default: true
          type: boolean
        hideComment:
          default: true
          type: boolean
      required:
      - hideComment
      - hideDates
      type: object
    SymbolsRelationshipDto:
      example:
        peerName: peerName
        childToParentName: childToParentName
        hideComment: true
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        relationshipCode: relationshipCode
        hideDates: true
        parentToChildName: parentToChildName
      nullable: true
      properties:
        id:
          format: uuid
          type: string
        relationshipCode:
          nullable: true
          type: string
        parentToChildName:
          nullable: true
          type: string
        childToParentName:
          nullable: true
          type: string
        peerName:
          nullable: true
          type: string
        hideDates:
          type: boolean
        hideComment:
          type: boolean
      type: object
    TeamConfigDto:
      example:
        code: code
        userIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        defaultSubjectId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      nullable: true
      properties:
        id:
          format: uuid
          type: string
        name:
          nullable: true
          type: string
        code:
          nullable: true
          type: string
        defaultSubjectId:
          format: uuid
          nullable: true
          type: string
        userIds:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
      type: object
    TeamSettingsDto:
      example:
        defaultId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      nullable: true
      properties:
        defaultId:
          format: uuid
          nullable: true
          type: string
      type: object
    TeamSummaryDto:
      example:
        code: code
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      nullable: true
      properties:
        id:
          format: uuid
          type: string
        name:
          nullable: true
          type: string
        code:
          nullable: true
          type: string
      type: object
    TitleSettingsDto:
      example:
        usePrevious: true
      nullable: true
      properties:
        usePrevious:
          type: boolean
      type: object
    UpdateCustomSymbolTypeDto:
      example:
        isDefault: false
        hideAddressField: true
        customFieldIds:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        subTypes:
        - name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        hideSymbolSubtype: true
      properties:
        name:
          maxLength: 100
          minLength: 0
          type: string
        hideAddressField:
          type: boolean
        hideSymbolSubtype:
          type: boolean
        isDefault:
          default: false
          type: boolean
        dueDiligenceSymbolEntityType:
          $ref: '#/components/schemas/EntityType'
        subTypes:
          items:
            $ref: '#/components/schemas/CustomSymbolSubTypeDto'
          nullable: true
          type: array
        customFieldIds:
          items:
            format: uuid
            type: string
          nullable: true
          type: array
      required:
      - name
      type: object
    UserConfigDto:
      example:
        firstName: firstName
        lastName: lastName
        emailAddress: emailAddress
        serialNumber: serialNumber
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        team:
          code: code
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        userName: userName
      nullable: true
      properties:
        id:
          format: uuid
          type: string
        userName:
          nullable: true
          type: string
        serialNumber:
          nullable: true
          type: string
        firstName:
          nullable: true
          type: string
        lastName:
          nullable: true
          type: string
        emailAddress:
          nullable: true
          type: string
        team:
          $ref: '#/components/schemas/TeamSummaryDto'
      type: object
    UserTeamConfigDto:
      example:
        customFieldTeams:
        - teamName: teamName
          fieldName: fieldName
          teamId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - teamName: teamName
          fieldName: fieldName
          teamId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      nullable: true
      properties:
        userTeamLookupFilterType:
          $ref: '#/components/schemas/CustomFieldUserTeamLookupFilterType'
        customFieldTeams:
          items:
            $ref: '#/components/schemas/CustomFieldTeamConfigDto'
          nullable: true
          type: array
      type: object
  securitySchemes:
    FactSetOAuth2:
      flows:
        clientCredentials:
          scopes: {}
          tokenUrl: https://auth.factset.com/as/token.oauth2
      type: oauth2
    FactSetApiKey:
      scheme: basic
      type: http

