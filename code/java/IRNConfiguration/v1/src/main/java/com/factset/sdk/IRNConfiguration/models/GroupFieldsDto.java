/*
 * IRN API v1
 * Allows users to extract, create, update and configure IRN data.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.IRNConfiguration.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.IRNConfiguration.models.DateSettingsDto;
import com.factset.sdk.IRNConfiguration.models.IdentifierSettingsDto;
import com.factset.sdk.IRNConfiguration.models.LinkSettingsDto;
import com.factset.sdk.IRNConfiguration.models.NoteSettingsDto;
import com.factset.sdk.IRNConfiguration.models.OrganizerSettingsDto;
import com.factset.sdk.IRNConfiguration.models.RecommendationSettingsDto;
import com.factset.sdk.IRNConfiguration.models.RelatedContactsSettingsDto;
import com.factset.sdk.IRNConfiguration.models.RelatedResearchSettingsDto;
import com.factset.sdk.IRNConfiguration.models.RelatedSymbolsSettingsDto;
import com.factset.sdk.IRNConfiguration.models.SentimentSettingsDto;
import com.factset.sdk.IRNConfiguration.models.SourceSettingsDto;
import com.factset.sdk.IRNConfiguration.models.SubjectSettingsDto;
import com.factset.sdk.IRNConfiguration.models.TeamSettingsDto;
import com.factset.sdk.IRNConfiguration.models.TitleSettingsDto;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.IRNConfiguration.JSON;


/**
 * GroupFieldsDto
 */
@JsonPropertyOrder({
  GroupFieldsDto.JSON_PROPERTY_TITLE,
  GroupFieldsDto.JSON_PROPERTY_DATE,
  GroupFieldsDto.JSON_PROPERTY_IDENTIFIER,
  GroupFieldsDto.JSON_PROPERTY_SUBJECT,
  GroupFieldsDto.JSON_PROPERTY_RECOMMENDATION,
  GroupFieldsDto.JSON_PROPERTY_SENTIMENT,
  GroupFieldsDto.JSON_PROPERTY_LINK,
  GroupFieldsDto.JSON_PROPERTY_NOTE,
  GroupFieldsDto.JSON_PROPERTY_SOURCE,
  GroupFieldsDto.JSON_PROPERTY_RELATED_SYMBOLS,
  GroupFieldsDto.JSON_PROPERTY_RELATED_RESEARCH,
  GroupFieldsDto.JSON_PROPERTY_RELATED_CONTACTS,
  GroupFieldsDto.JSON_PROPERTY_TEAM,
  GroupFieldsDto.JSON_PROPERTY_ORGANIZER
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class GroupFieldsDto implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_TITLE = "title";
  private JsonNullable<TitleSettingsDto> title = JsonNullable.<TitleSettingsDto>undefined();

  public static final String JSON_PROPERTY_DATE = "date";
  private JsonNullable<DateSettingsDto> date = JsonNullable.<DateSettingsDto>undefined();

  public static final String JSON_PROPERTY_IDENTIFIER = "identifier";
  private JsonNullable<IdentifierSettingsDto> identifier = JsonNullable.<IdentifierSettingsDto>undefined();

  public static final String JSON_PROPERTY_SUBJECT = "subject";
  private JsonNullable<SubjectSettingsDto> subject = JsonNullable.<SubjectSettingsDto>undefined();

  public static final String JSON_PROPERTY_RECOMMENDATION = "recommendation";
  private JsonNullable<RecommendationSettingsDto> recommendation = JsonNullable.<RecommendationSettingsDto>undefined();

  public static final String JSON_PROPERTY_SENTIMENT = "sentiment";
  private JsonNullable<SentimentSettingsDto> sentiment = JsonNullable.<SentimentSettingsDto>undefined();

  public static final String JSON_PROPERTY_LINK = "link";
  private JsonNullable<LinkSettingsDto> link = JsonNullable.<LinkSettingsDto>undefined();

  public static final String JSON_PROPERTY_NOTE = "note";
  private JsonNullable<NoteSettingsDto> note = JsonNullable.<NoteSettingsDto>undefined();

  public static final String JSON_PROPERTY_SOURCE = "source";
  private JsonNullable<SourceSettingsDto> source = JsonNullable.<SourceSettingsDto>undefined();

  public static final String JSON_PROPERTY_RELATED_SYMBOLS = "relatedSymbols";
  private JsonNullable<RelatedSymbolsSettingsDto> relatedSymbols = JsonNullable.<RelatedSymbolsSettingsDto>undefined();

  public static final String JSON_PROPERTY_RELATED_RESEARCH = "relatedResearch";
  private JsonNullable<RelatedResearchSettingsDto> relatedResearch = JsonNullable.<RelatedResearchSettingsDto>undefined();

  public static final String JSON_PROPERTY_RELATED_CONTACTS = "relatedContacts";
  private JsonNullable<RelatedContactsSettingsDto> relatedContacts = JsonNullable.<RelatedContactsSettingsDto>undefined();

  public static final String JSON_PROPERTY_TEAM = "team";
  private JsonNullable<TeamSettingsDto> team = JsonNullable.<TeamSettingsDto>undefined();

  public static final String JSON_PROPERTY_ORGANIZER = "organizer";
  private JsonNullable<OrganizerSettingsDto> organizer = JsonNullable.<OrganizerSettingsDto>undefined();

  public GroupFieldsDto() { 
  }

  public GroupFieldsDto title(TitleSettingsDto title) {
    this.title = JsonNullable.<TitleSettingsDto>of(title);
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public TitleSettingsDto getTitle() {
        return title.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<TitleSettingsDto> getTitle_JsonNullable() {
    return title;
  }
  
  @JsonProperty(JSON_PROPERTY_TITLE)
  public void setTitle_JsonNullable(JsonNullable<TitleSettingsDto> title) {
    this.title = title;
  }

  public void setTitle(TitleSettingsDto title) {
    this.title = JsonNullable.<TitleSettingsDto>of(title);
  }


  public GroupFieldsDto date(DateSettingsDto date) {
    this.date = JsonNullable.<DateSettingsDto>of(date);
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public DateSettingsDto getDate() {
        return date.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<DateSettingsDto> getDate_JsonNullable() {
    return date;
  }
  
  @JsonProperty(JSON_PROPERTY_DATE)
  public void setDate_JsonNullable(JsonNullable<DateSettingsDto> date) {
    this.date = date;
  }

  public void setDate(DateSettingsDto date) {
    this.date = JsonNullable.<DateSettingsDto>of(date);
  }


  public GroupFieldsDto identifier(IdentifierSettingsDto identifier) {
    this.identifier = JsonNullable.<IdentifierSettingsDto>of(identifier);
    return this;
  }

   /**
   * Get identifier
   * @return identifier
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public IdentifierSettingsDto getIdentifier() {
        return identifier.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<IdentifierSettingsDto> getIdentifier_JsonNullable() {
    return identifier;
  }
  
  @JsonProperty(JSON_PROPERTY_IDENTIFIER)
  public void setIdentifier_JsonNullable(JsonNullable<IdentifierSettingsDto> identifier) {
    this.identifier = identifier;
  }

  public void setIdentifier(IdentifierSettingsDto identifier) {
    this.identifier = JsonNullable.<IdentifierSettingsDto>of(identifier);
  }


  public GroupFieldsDto subject(SubjectSettingsDto subject) {
    this.subject = JsonNullable.<SubjectSettingsDto>of(subject);
    return this;
  }

   /**
   * Get subject
   * @return subject
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public SubjectSettingsDto getSubject() {
        return subject.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SUBJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<SubjectSettingsDto> getSubject_JsonNullable() {
    return subject;
  }
  
  @JsonProperty(JSON_PROPERTY_SUBJECT)
  public void setSubject_JsonNullable(JsonNullable<SubjectSettingsDto> subject) {
    this.subject = subject;
  }

  public void setSubject(SubjectSettingsDto subject) {
    this.subject = JsonNullable.<SubjectSettingsDto>of(subject);
  }


  public GroupFieldsDto recommendation(RecommendationSettingsDto recommendation) {
    this.recommendation = JsonNullable.<RecommendationSettingsDto>of(recommendation);
    return this;
  }

   /**
   * Get recommendation
   * @return recommendation
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public RecommendationSettingsDto getRecommendation() {
        return recommendation.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RECOMMENDATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<RecommendationSettingsDto> getRecommendation_JsonNullable() {
    return recommendation;
  }
  
  @JsonProperty(JSON_PROPERTY_RECOMMENDATION)
  public void setRecommendation_JsonNullable(JsonNullable<RecommendationSettingsDto> recommendation) {
    this.recommendation = recommendation;
  }

  public void setRecommendation(RecommendationSettingsDto recommendation) {
    this.recommendation = JsonNullable.<RecommendationSettingsDto>of(recommendation);
  }


  public GroupFieldsDto sentiment(SentimentSettingsDto sentiment) {
    this.sentiment = JsonNullable.<SentimentSettingsDto>of(sentiment);
    return this;
  }

   /**
   * Get sentiment
   * @return sentiment
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public SentimentSettingsDto getSentiment() {
        return sentiment.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SENTIMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<SentimentSettingsDto> getSentiment_JsonNullable() {
    return sentiment;
  }
  
  @JsonProperty(JSON_PROPERTY_SENTIMENT)
  public void setSentiment_JsonNullable(JsonNullable<SentimentSettingsDto> sentiment) {
    this.sentiment = sentiment;
  }

  public void setSentiment(SentimentSettingsDto sentiment) {
    this.sentiment = JsonNullable.<SentimentSettingsDto>of(sentiment);
  }


  public GroupFieldsDto link(LinkSettingsDto link) {
    this.link = JsonNullable.<LinkSettingsDto>of(link);
    return this;
  }

   /**
   * Get link
   * @return link
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public LinkSettingsDto getLink() {
        return link.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LinkSettingsDto> getLink_JsonNullable() {
    return link;
  }
  
  @JsonProperty(JSON_PROPERTY_LINK)
  public void setLink_JsonNullable(JsonNullable<LinkSettingsDto> link) {
    this.link = link;
  }

  public void setLink(LinkSettingsDto link) {
    this.link = JsonNullable.<LinkSettingsDto>of(link);
  }


  public GroupFieldsDto note(NoteSettingsDto note) {
    this.note = JsonNullable.<NoteSettingsDto>of(note);
    return this;
  }

   /**
   * Get note
   * @return note
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public NoteSettingsDto getNote() {
        return note.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NOTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<NoteSettingsDto> getNote_JsonNullable() {
    return note;
  }
  
  @JsonProperty(JSON_PROPERTY_NOTE)
  public void setNote_JsonNullable(JsonNullable<NoteSettingsDto> note) {
    this.note = note;
  }

  public void setNote(NoteSettingsDto note) {
    this.note = JsonNullable.<NoteSettingsDto>of(note);
  }


  public GroupFieldsDto source(SourceSettingsDto source) {
    this.source = JsonNullable.<SourceSettingsDto>of(source);
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public SourceSettingsDto getSource() {
        return source.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<SourceSettingsDto> getSource_JsonNullable() {
    return source;
  }
  
  @JsonProperty(JSON_PROPERTY_SOURCE)
  public void setSource_JsonNullable(JsonNullable<SourceSettingsDto> source) {
    this.source = source;
  }

  public void setSource(SourceSettingsDto source) {
    this.source = JsonNullable.<SourceSettingsDto>of(source);
  }


  public GroupFieldsDto relatedSymbols(RelatedSymbolsSettingsDto relatedSymbols) {
    this.relatedSymbols = JsonNullable.<RelatedSymbolsSettingsDto>of(relatedSymbols);
    return this;
  }

   /**
   * Get relatedSymbols
   * @return relatedSymbols
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public RelatedSymbolsSettingsDto getRelatedSymbols() {
        return relatedSymbols.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RELATED_SYMBOLS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<RelatedSymbolsSettingsDto> getRelatedSymbols_JsonNullable() {
    return relatedSymbols;
  }
  
  @JsonProperty(JSON_PROPERTY_RELATED_SYMBOLS)
  public void setRelatedSymbols_JsonNullable(JsonNullable<RelatedSymbolsSettingsDto> relatedSymbols) {
    this.relatedSymbols = relatedSymbols;
  }

  public void setRelatedSymbols(RelatedSymbolsSettingsDto relatedSymbols) {
    this.relatedSymbols = JsonNullable.<RelatedSymbolsSettingsDto>of(relatedSymbols);
  }


  public GroupFieldsDto relatedResearch(RelatedResearchSettingsDto relatedResearch) {
    this.relatedResearch = JsonNullable.<RelatedResearchSettingsDto>of(relatedResearch);
    return this;
  }

   /**
   * Get relatedResearch
   * @return relatedResearch
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public RelatedResearchSettingsDto getRelatedResearch() {
        return relatedResearch.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RELATED_RESEARCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<RelatedResearchSettingsDto> getRelatedResearch_JsonNullable() {
    return relatedResearch;
  }
  
  @JsonProperty(JSON_PROPERTY_RELATED_RESEARCH)
  public void setRelatedResearch_JsonNullable(JsonNullable<RelatedResearchSettingsDto> relatedResearch) {
    this.relatedResearch = relatedResearch;
  }

  public void setRelatedResearch(RelatedResearchSettingsDto relatedResearch) {
    this.relatedResearch = JsonNullable.<RelatedResearchSettingsDto>of(relatedResearch);
  }


  public GroupFieldsDto relatedContacts(RelatedContactsSettingsDto relatedContacts) {
    this.relatedContacts = JsonNullable.<RelatedContactsSettingsDto>of(relatedContacts);
    return this;
  }

   /**
   * Get relatedContacts
   * @return relatedContacts
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public RelatedContactsSettingsDto getRelatedContacts() {
        return relatedContacts.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RELATED_CONTACTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<RelatedContactsSettingsDto> getRelatedContacts_JsonNullable() {
    return relatedContacts;
  }
  
  @JsonProperty(JSON_PROPERTY_RELATED_CONTACTS)
  public void setRelatedContacts_JsonNullable(JsonNullable<RelatedContactsSettingsDto> relatedContacts) {
    this.relatedContacts = relatedContacts;
  }

  public void setRelatedContacts(RelatedContactsSettingsDto relatedContacts) {
    this.relatedContacts = JsonNullable.<RelatedContactsSettingsDto>of(relatedContacts);
  }


  public GroupFieldsDto team(TeamSettingsDto team) {
    this.team = JsonNullable.<TeamSettingsDto>of(team);
    return this;
  }

   /**
   * Get team
   * @return team
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public TeamSettingsDto getTeam() {
        return team.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TEAM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<TeamSettingsDto> getTeam_JsonNullable() {
    return team;
  }
  
  @JsonProperty(JSON_PROPERTY_TEAM)
  public void setTeam_JsonNullable(JsonNullable<TeamSettingsDto> team) {
    this.team = team;
  }

  public void setTeam(TeamSettingsDto team) {
    this.team = JsonNullable.<TeamSettingsDto>of(team);
  }


  public GroupFieldsDto organizer(OrganizerSettingsDto organizer) {
    this.organizer = JsonNullable.<OrganizerSettingsDto>of(organizer);
    return this;
  }

   /**
   * Get organizer
   * @return organizer
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public OrganizerSettingsDto getOrganizer() {
        return organizer.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ORGANIZER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OrganizerSettingsDto> getOrganizer_JsonNullable() {
    return organizer;
  }
  
  @JsonProperty(JSON_PROPERTY_ORGANIZER)
  public void setOrganizer_JsonNullable(JsonNullable<OrganizerSettingsDto> organizer) {
    this.organizer = organizer;
  }

  public void setOrganizer(OrganizerSettingsDto organizer) {
    this.organizer = JsonNullable.<OrganizerSettingsDto>of(organizer);
  }


  /**
   * Return true if this GroupFieldsDto object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GroupFieldsDto groupFieldsDto = (GroupFieldsDto) o;
    return equalsNullable(this.title, groupFieldsDto.title) &&
        equalsNullable(this.date, groupFieldsDto.date) &&
        equalsNullable(this.identifier, groupFieldsDto.identifier) &&
        equalsNullable(this.subject, groupFieldsDto.subject) &&
        equalsNullable(this.recommendation, groupFieldsDto.recommendation) &&
        equalsNullable(this.sentiment, groupFieldsDto.sentiment) &&
        equalsNullable(this.link, groupFieldsDto.link) &&
        equalsNullable(this.note, groupFieldsDto.note) &&
        equalsNullable(this.source, groupFieldsDto.source) &&
        equalsNullable(this.relatedSymbols, groupFieldsDto.relatedSymbols) &&
        equalsNullable(this.relatedResearch, groupFieldsDto.relatedResearch) &&
        equalsNullable(this.relatedContacts, groupFieldsDto.relatedContacts) &&
        equalsNullable(this.team, groupFieldsDto.team) &&
        equalsNullable(this.organizer, groupFieldsDto.organizer);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(title), hashCodeNullable(date), hashCodeNullable(identifier), hashCodeNullable(subject), hashCodeNullable(recommendation), hashCodeNullable(sentiment), hashCodeNullable(link), hashCodeNullable(note), hashCodeNullable(source), hashCodeNullable(relatedSymbols), hashCodeNullable(relatedResearch), hashCodeNullable(relatedContacts), hashCodeNullable(team), hashCodeNullable(organizer));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GroupFieldsDto {\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    recommendation: ").append(toIndentedString(recommendation)).append("\n");
    sb.append("    sentiment: ").append(toIndentedString(sentiment)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    relatedSymbols: ").append(toIndentedString(relatedSymbols)).append("\n");
    sb.append("    relatedResearch: ").append(toIndentedString(relatedResearch)).append("\n");
    sb.append("    relatedContacts: ").append(toIndentedString(relatedContacts)).append("\n");
    sb.append("    team: ").append(toIndentedString(team)).append("\n");
    sb.append("    organizer: ").append(toIndentedString(organizer)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

