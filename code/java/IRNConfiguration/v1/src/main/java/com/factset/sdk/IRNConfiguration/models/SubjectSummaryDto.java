/*
 * IRN API v1
 * Allows users to extract, create, update and configure IRN data.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.IRNConfiguration.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.IRNConfiguration.JSON;


/**
 * SubjectSummaryDto
 */
@JsonPropertyOrder({
  SubjectSummaryDto.JSON_PROPERTY_ID,
  SubjectSummaryDto.JSON_PROPERTY_NAME,
  SubjectSummaryDto.JSON_PROPERTY_CODE,
  SubjectSummaryDto.JSON_PROPERTY_IDENTIFIER_TYPE,
  SubjectSummaryDto.JSON_PROPERTY_IDENTIFIER_TYPES,
  SubjectSummaryDto.JSON_PROPERTY_TYPE,
  SubjectSummaryDto.JSON_PROPERTY_IS_HIDDEN,
  SubjectSummaryDto.JSON_PROPERTY_CUSTOM_FIELD_IDS,
  SubjectSummaryDto.JSON_PROPERTY_NOTE_LENGTH_LIMIT,
  SubjectSummaryDto.JSON_PROPERTY_LAYOUT_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class SubjectSummaryDto implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ID = "id";
  private java.util.UUID id;

  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CODE = "code";
  private JsonNullable<String> code = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IDENTIFIER_TYPE = "identifierType";
  private JsonNullable<String> identifierType = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IDENTIFIER_TYPES = "identifierTypes";
  private JsonNullable<java.util.List<String>> identifierTypes = JsonNullable.<java.util.List<String>>undefined();

  public static final String JSON_PROPERTY_TYPE = "type";
  private JsonNullable<String> type = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IS_HIDDEN = "isHidden";
  private Boolean isHidden;

  public static final String JSON_PROPERTY_CUSTOM_FIELD_IDS = "customFieldIds";
  private JsonNullable<java.util.List<java.util.UUID>> customFieldIds = JsonNullable.<java.util.List<java.util.UUID>>undefined();

  public static final String JSON_PROPERTY_NOTE_LENGTH_LIMIT = "noteLengthLimit";
  private JsonNullable<Integer> noteLengthLimit = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_LAYOUT_ID = "layoutId";
  private JsonNullable<java.util.UUID> layoutId = JsonNullable.<java.util.UUID>undefined();

  public SubjectSummaryDto() { 
  }

  public SubjectSummaryDto id(java.util.UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(java.util.UUID id) {
    this.id = id;
  }


  public SubjectSummaryDto name(String name) {
    this.name = JsonNullable.<String>of(name);
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public SubjectSummaryDto code(String code) {
    this.code = JsonNullable.<String>of(code);
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCode() {
        return code.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCode_JsonNullable() {
    return code;
  }
  
  @JsonProperty(JSON_PROPERTY_CODE)
  public void setCode_JsonNullable(JsonNullable<String> code) {
    this.code = code;
  }

  public void setCode(String code) {
    this.code = JsonNullable.<String>of(code);
  }


  public SubjectSummaryDto identifierType(String identifierType) {
    this.identifierType = JsonNullable.<String>of(identifierType);
    return this;
  }

   /**
   * Get identifierType
   * @return identifierType
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdentifierType() {
        return identifierType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IDENTIFIER_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdentifierType_JsonNullable() {
    return identifierType;
  }
  
  @JsonProperty(JSON_PROPERTY_IDENTIFIER_TYPE)
  public void setIdentifierType_JsonNullable(JsonNullable<String> identifierType) {
    this.identifierType = identifierType;
  }

  public void setIdentifierType(String identifierType) {
    this.identifierType = JsonNullable.<String>of(identifierType);
  }


  public SubjectSummaryDto identifierTypes(java.util.List<String> identifierTypes) {
    this.identifierTypes = JsonNullable.<java.util.List<String>>of(identifierTypes);
    return this;
  }

  public SubjectSummaryDto addIdentifierTypesItem(String identifierTypesItem) {
    if (this.identifierTypes == null || !this.identifierTypes.isPresent()) {
      this.identifierTypes = JsonNullable.<java.util.List<String>>of(new java.util.ArrayList<>());
    }
    try {
      this.identifierTypes.get().add(identifierTypesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get identifierTypes
   * @return identifierTypes
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public java.util.List<String> getIdentifierTypes() {
        return identifierTypes.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IDENTIFIER_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<java.util.List<String>> getIdentifierTypes_JsonNullable() {
    return identifierTypes;
  }
  
  @JsonProperty(JSON_PROPERTY_IDENTIFIER_TYPES)
  public void setIdentifierTypes_JsonNullable(JsonNullable<java.util.List<String>> identifierTypes) {
    this.identifierTypes = identifierTypes;
  }

  public void setIdentifierTypes(java.util.List<String> identifierTypes) {
    this.identifierTypes = JsonNullable.<java.util.List<String>>of(identifierTypes);
  }


  public SubjectSummaryDto type(String type) {
    this.type = JsonNullable.<String>of(type);
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getType() {
        return type.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getType_JsonNullable() {
    return type;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPE)
  public void setType_JsonNullable(JsonNullable<String> type) {
    this.type = type;
  }

  public void setType(String type) {
    this.type = JsonNullable.<String>of(type);
  }


  public SubjectSummaryDto isHidden(Boolean isHidden) {
    this.isHidden = isHidden;
    return this;
  }

   /**
   * Get isHidden
   * @return isHidden
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_IS_HIDDEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsHidden() {
    return isHidden;
  }


  @JsonProperty(JSON_PROPERTY_IS_HIDDEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsHidden(Boolean isHidden) {
    this.isHidden = isHidden;
  }


  public SubjectSummaryDto customFieldIds(java.util.List<java.util.UUID> customFieldIds) {
    this.customFieldIds = JsonNullable.<java.util.List<java.util.UUID>>of(customFieldIds);
    return this;
  }

  public SubjectSummaryDto addCustomFieldIdsItem(java.util.UUID customFieldIdsItem) {
    if (this.customFieldIds == null || !this.customFieldIds.isPresent()) {
      this.customFieldIds = JsonNullable.<java.util.List<java.util.UUID>>of(new java.util.ArrayList<>());
    }
    try {
      this.customFieldIds.get().add(customFieldIdsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get customFieldIds
   * @return customFieldIds
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public java.util.List<java.util.UUID> getCustomFieldIds() {
        return customFieldIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CUSTOM_FIELD_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<java.util.List<java.util.UUID>> getCustomFieldIds_JsonNullable() {
    return customFieldIds;
  }
  
  @JsonProperty(JSON_PROPERTY_CUSTOM_FIELD_IDS)
  public void setCustomFieldIds_JsonNullable(JsonNullable<java.util.List<java.util.UUID>> customFieldIds) {
    this.customFieldIds = customFieldIds;
  }

  public void setCustomFieldIds(java.util.List<java.util.UUID> customFieldIds) {
    this.customFieldIds = JsonNullable.<java.util.List<java.util.UUID>>of(customFieldIds);
  }


  public SubjectSummaryDto noteLengthLimit(Integer noteLengthLimit) {
    this.noteLengthLimit = JsonNullable.<Integer>of(noteLengthLimit);
    return this;
  }

   /**
   * Get noteLengthLimit
   * @return noteLengthLimit
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Integer getNoteLengthLimit() {
        return noteLengthLimit.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NOTE_LENGTH_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getNoteLengthLimit_JsonNullable() {
    return noteLengthLimit;
  }
  
  @JsonProperty(JSON_PROPERTY_NOTE_LENGTH_LIMIT)
  public void setNoteLengthLimit_JsonNullable(JsonNullable<Integer> noteLengthLimit) {
    this.noteLengthLimit = noteLengthLimit;
  }

  public void setNoteLengthLimit(Integer noteLengthLimit) {
    this.noteLengthLimit = JsonNullable.<Integer>of(noteLengthLimit);
  }


  public SubjectSummaryDto layoutId(java.util.UUID layoutId) {
    this.layoutId = JsonNullable.<java.util.UUID>of(layoutId);
    return this;
  }

   /**
   * Get layoutId
   * @return layoutId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public java.util.UUID getLayoutId() {
        return layoutId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LAYOUT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<java.util.UUID> getLayoutId_JsonNullable() {
    return layoutId;
  }
  
  @JsonProperty(JSON_PROPERTY_LAYOUT_ID)
  public void setLayoutId_JsonNullable(JsonNullable<java.util.UUID> layoutId) {
    this.layoutId = layoutId;
  }

  public void setLayoutId(java.util.UUID layoutId) {
    this.layoutId = JsonNullable.<java.util.UUID>of(layoutId);
  }


  /**
   * Return true if this SubjectSummaryDto object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubjectSummaryDto subjectSummaryDto = (SubjectSummaryDto) o;
    return Objects.equals(this.id, subjectSummaryDto.id) &&
        equalsNullable(this.name, subjectSummaryDto.name) &&
        equalsNullable(this.code, subjectSummaryDto.code) &&
        equalsNullable(this.identifierType, subjectSummaryDto.identifierType) &&
        equalsNullable(this.identifierTypes, subjectSummaryDto.identifierTypes) &&
        equalsNullable(this.type, subjectSummaryDto.type) &&
        Objects.equals(this.isHidden, subjectSummaryDto.isHidden) &&
        equalsNullable(this.customFieldIds, subjectSummaryDto.customFieldIds) &&
        equalsNullable(this.noteLengthLimit, subjectSummaryDto.noteLengthLimit) &&
        equalsNullable(this.layoutId, subjectSummaryDto.layoutId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, hashCodeNullable(name), hashCodeNullable(code), hashCodeNullable(identifierType), hashCodeNullable(identifierTypes), hashCodeNullable(type), isHidden, hashCodeNullable(customFieldIds), hashCodeNullable(noteLengthLimit), hashCodeNullable(layoutId));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubjectSummaryDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    identifierType: ").append(toIndentedString(identifierType)).append("\n");
    sb.append("    identifierTypes: ").append(toIndentedString(identifierTypes)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    isHidden: ").append(toIndentedString(isHidden)).append("\n");
    sb.append("    customFieldIds: ").append(toIndentedString(customFieldIds)).append("\n");
    sb.append("    noteLengthLimit: ").append(toIndentedString(noteLengthLimit)).append("\n");
    sb.append("    layoutId: ").append(toIndentedString(layoutId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

