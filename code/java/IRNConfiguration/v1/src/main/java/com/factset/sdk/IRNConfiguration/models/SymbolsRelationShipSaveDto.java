/*
 * IRN API v1
 * Allows users to extract, create, update and configure IRN data.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.IRNConfiguration.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.IRNConfiguration.JSON;


/**
 * SymbolsRelationShipSaveDto
 */
@JsonPropertyOrder({
  SymbolsRelationShipSaveDto.JSON_PROPERTY_RELATIONSHIP_CODE,
  SymbolsRelationShipSaveDto.JSON_PROPERTY_PARENT_TO_CHILD_NAME,
  SymbolsRelationShipSaveDto.JSON_PROPERTY_CHILD_TO_PARENT_NAME,
  SymbolsRelationShipSaveDto.JSON_PROPERTY_PEER_NAME,
  SymbolsRelationShipSaveDto.JSON_PROPERTY_HIDE_DATES,
  SymbolsRelationShipSaveDto.JSON_PROPERTY_HIDE_COMMENT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class SymbolsRelationShipSaveDto implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_RELATIONSHIP_CODE = "relationshipCode";
  private JsonNullable<String> relationshipCode = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PARENT_TO_CHILD_NAME = "parentToChildName";
  private JsonNullable<String> parentToChildName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CHILD_TO_PARENT_NAME = "childToParentName";
  private JsonNullable<String> childToParentName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PEER_NAME = "peerName";
  private JsonNullable<String> peerName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_HIDE_DATES = "hideDates";
  private Boolean hideDates = true;

  public static final String JSON_PROPERTY_HIDE_COMMENT = "hideComment";
  private Boolean hideComment = true;

  public SymbolsRelationShipSaveDto() { 
  }

  @JsonCreator
  public SymbolsRelationShipSaveDto(
    @JsonProperty(value=JSON_PROPERTY_HIDE_DATES, required=true) Boolean hideDates, 
    @JsonProperty(value=JSON_PROPERTY_HIDE_COMMENT, required=true) Boolean hideComment
  ) {
    this();
    this.hideDates = hideDates;
    this.hideComment = hideComment;
  }

  public SymbolsRelationShipSaveDto relationshipCode(String relationshipCode) {
    this.relationshipCode = JsonNullable.<String>of(relationshipCode);
    return this;
  }

   /**
   * Get relationshipCode
   * @return relationshipCode
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getRelationshipCode() {
        return relationshipCode.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RELATIONSHIP_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getRelationshipCode_JsonNullable() {
    return relationshipCode;
  }
  
  @JsonProperty(JSON_PROPERTY_RELATIONSHIP_CODE)
  public void setRelationshipCode_JsonNullable(JsonNullable<String> relationshipCode) {
    this.relationshipCode = relationshipCode;
  }

  public void setRelationshipCode(String relationshipCode) {
    this.relationshipCode = JsonNullable.<String>of(relationshipCode);
  }


  public SymbolsRelationShipSaveDto parentToChildName(String parentToChildName) {
    this.parentToChildName = JsonNullable.<String>of(parentToChildName);
    return this;
  }

   /**
   * Get parentToChildName
   * @return parentToChildName
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getParentToChildName() {
        return parentToChildName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PARENT_TO_CHILD_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getParentToChildName_JsonNullable() {
    return parentToChildName;
  }
  
  @JsonProperty(JSON_PROPERTY_PARENT_TO_CHILD_NAME)
  public void setParentToChildName_JsonNullable(JsonNullable<String> parentToChildName) {
    this.parentToChildName = parentToChildName;
  }

  public void setParentToChildName(String parentToChildName) {
    this.parentToChildName = JsonNullable.<String>of(parentToChildName);
  }


  public SymbolsRelationShipSaveDto childToParentName(String childToParentName) {
    this.childToParentName = JsonNullable.<String>of(childToParentName);
    return this;
  }

   /**
   * Get childToParentName
   * @return childToParentName
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getChildToParentName() {
        return childToParentName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CHILD_TO_PARENT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getChildToParentName_JsonNullable() {
    return childToParentName;
  }
  
  @JsonProperty(JSON_PROPERTY_CHILD_TO_PARENT_NAME)
  public void setChildToParentName_JsonNullable(JsonNullable<String> childToParentName) {
    this.childToParentName = childToParentName;
  }

  public void setChildToParentName(String childToParentName) {
    this.childToParentName = JsonNullable.<String>of(childToParentName);
  }


  public SymbolsRelationShipSaveDto peerName(String peerName) {
    this.peerName = JsonNullable.<String>of(peerName);
    return this;
  }

   /**
   * Get peerName
   * @return peerName
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPeerName() {
        return peerName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PEER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPeerName_JsonNullable() {
    return peerName;
  }
  
  @JsonProperty(JSON_PROPERTY_PEER_NAME)
  public void setPeerName_JsonNullable(JsonNullable<String> peerName) {
    this.peerName = peerName;
  }

  public void setPeerName(String peerName) {
    this.peerName = JsonNullable.<String>of(peerName);
  }


  public SymbolsRelationShipSaveDto hideDates(Boolean hideDates) {
    this.hideDates = hideDates;
    return this;
  }

   /**
   * Get hideDates
   * @return hideDates
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_HIDE_DATES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getHideDates() {
    return hideDates;
  }


  @JsonProperty(JSON_PROPERTY_HIDE_DATES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHideDates(Boolean hideDates) {
    this.hideDates = hideDates;
  }


  public SymbolsRelationShipSaveDto hideComment(Boolean hideComment) {
    this.hideComment = hideComment;
    return this;
  }

   /**
   * Get hideComment
   * @return hideComment
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_HIDE_COMMENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getHideComment() {
    return hideComment;
  }


  @JsonProperty(JSON_PROPERTY_HIDE_COMMENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHideComment(Boolean hideComment) {
    this.hideComment = hideComment;
  }


  /**
   * Return true if this SymbolsRelationShipSaveDto object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SymbolsRelationShipSaveDto symbolsRelationShipSaveDto = (SymbolsRelationShipSaveDto) o;
    return equalsNullable(this.relationshipCode, symbolsRelationShipSaveDto.relationshipCode) &&
        equalsNullable(this.parentToChildName, symbolsRelationShipSaveDto.parentToChildName) &&
        equalsNullable(this.childToParentName, symbolsRelationShipSaveDto.childToParentName) &&
        equalsNullable(this.peerName, symbolsRelationShipSaveDto.peerName) &&
        Objects.equals(this.hideDates, symbolsRelationShipSaveDto.hideDates) &&
        Objects.equals(this.hideComment, symbolsRelationShipSaveDto.hideComment);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(relationshipCode), hashCodeNullable(parentToChildName), hashCodeNullable(childToParentName), hashCodeNullable(peerName), hideDates, hideComment);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SymbolsRelationShipSaveDto {\n");
    sb.append("    relationshipCode: ").append(toIndentedString(relationshipCode)).append("\n");
    sb.append("    parentToChildName: ").append(toIndentedString(parentToChildName)).append("\n");
    sb.append("    childToParentName: ").append(toIndentedString(childToParentName)).append("\n");
    sb.append("    peerName: ").append(toIndentedString(peerName)).append("\n");
    sb.append("    hideDates: ").append(toIndentedString(hideDates)).append("\n");
    sb.append("    hideComment: ").append(toIndentedString(hideComment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

