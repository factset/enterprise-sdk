/*
 * IRN API v1
 * Allows users to extract, create, update and configure IRN data.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.IRNConfiguration.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.IRNConfiguration.models.CustomFieldTeamConfigDto;
import com.factset.sdk.IRNConfiguration.models.CustomFieldUserTeamLookupFilterType;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.IRNConfiguration.JSON;


/**
 * UserTeamConfigDto
 */
@JsonPropertyOrder({
  UserTeamConfigDto.JSON_PROPERTY_USER_TEAM_LOOKUP_FILTER_TYPE,
  UserTeamConfigDto.JSON_PROPERTY_CUSTOM_FIELD_TEAMS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class UserTeamConfigDto implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_USER_TEAM_LOOKUP_FILTER_TYPE = "userTeamLookupFilterType";
  private CustomFieldUserTeamLookupFilterType userTeamLookupFilterType;

  public static final String JSON_PROPERTY_CUSTOM_FIELD_TEAMS = "customFieldTeams";
  private JsonNullable<java.util.List<CustomFieldTeamConfigDto>> customFieldTeams = JsonNullable.<java.util.List<CustomFieldTeamConfigDto>>undefined();

  public UserTeamConfigDto() { 
  }

  public UserTeamConfigDto userTeamLookupFilterType(CustomFieldUserTeamLookupFilterType userTeamLookupFilterType) {
    this.userTeamLookupFilterType = userTeamLookupFilterType;
    return this;
  }

   /**
   * Get userTeamLookupFilterType
   * @return userTeamLookupFilterType
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_USER_TEAM_LOOKUP_FILTER_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CustomFieldUserTeamLookupFilterType getUserTeamLookupFilterType() {
    return userTeamLookupFilterType;
  }


  @JsonProperty(JSON_PROPERTY_USER_TEAM_LOOKUP_FILTER_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserTeamLookupFilterType(CustomFieldUserTeamLookupFilterType userTeamLookupFilterType) {
    this.userTeamLookupFilterType = userTeamLookupFilterType;
  }


  public UserTeamConfigDto customFieldTeams(java.util.List<CustomFieldTeamConfigDto> customFieldTeams) {
    this.customFieldTeams = JsonNullable.<java.util.List<CustomFieldTeamConfigDto>>of(customFieldTeams);
    return this;
  }

  public UserTeamConfigDto addCustomFieldTeamsItem(CustomFieldTeamConfigDto customFieldTeamsItem) {
    if (this.customFieldTeams == null || !this.customFieldTeams.isPresent()) {
      this.customFieldTeams = JsonNullable.<java.util.List<CustomFieldTeamConfigDto>>of(new java.util.ArrayList<>());
    }
    try {
      this.customFieldTeams.get().add(customFieldTeamsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get customFieldTeams
   * @return customFieldTeams
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public java.util.List<CustomFieldTeamConfigDto> getCustomFieldTeams() {
        return customFieldTeams.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CUSTOM_FIELD_TEAMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<java.util.List<CustomFieldTeamConfigDto>> getCustomFieldTeams_JsonNullable() {
    return customFieldTeams;
  }
  
  @JsonProperty(JSON_PROPERTY_CUSTOM_FIELD_TEAMS)
  public void setCustomFieldTeams_JsonNullable(JsonNullable<java.util.List<CustomFieldTeamConfigDto>> customFieldTeams) {
    this.customFieldTeams = customFieldTeams;
  }

  public void setCustomFieldTeams(java.util.List<CustomFieldTeamConfigDto> customFieldTeams) {
    this.customFieldTeams = JsonNullable.<java.util.List<CustomFieldTeamConfigDto>>of(customFieldTeams);
  }


  /**
   * Return true if this UserTeamConfigDto object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserTeamConfigDto userTeamConfigDto = (UserTeamConfigDto) o;
    return Objects.equals(this.userTeamLookupFilterType, userTeamConfigDto.userTeamLookupFilterType) &&
        equalsNullable(this.customFieldTeams, userTeamConfigDto.customFieldTeams);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(userTeamLookupFilterType, hashCodeNullable(customFieldTeams));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserTeamConfigDto {\n");
    sb.append("    userTeamLookupFilterType: ").append(toIndentedString(userTeamLookupFilterType)).append("\n");
    sb.append("    customFieldTeams: ").append(toIndentedString(customFieldTeams)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

