/*
 * IRN API v1
 * Allows users to extract, create, update and configure IRN data.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.IRNConfiguration.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.IRNConfiguration.JSON;


/**
 * CustomFieldTeamConfigDto
 */
@JsonPropertyOrder({
  CustomFieldTeamConfigDto.JSON_PROPERTY_TEAM_ID,
  CustomFieldTeamConfigDto.JSON_PROPERTY_TEAM_NAME,
  CustomFieldTeamConfigDto.JSON_PROPERTY_FIELD_NAME
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class CustomFieldTeamConfigDto implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_TEAM_ID = "teamId";
  private java.util.UUID teamId;

  public static final String JSON_PROPERTY_TEAM_NAME = "teamName";
  private JsonNullable<String> teamName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FIELD_NAME = "fieldName";
  private JsonNullable<String> fieldName = JsonNullable.<String>undefined();

  public CustomFieldTeamConfigDto() { 
  }

  public CustomFieldTeamConfigDto teamId(java.util.UUID teamId) {
    this.teamId = teamId;
    return this;
  }

   /**
   * Get teamId
   * @return teamId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TEAM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.UUID getTeamId() {
    return teamId;
  }


  @JsonProperty(JSON_PROPERTY_TEAM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTeamId(java.util.UUID teamId) {
    this.teamId = teamId;
  }


  public CustomFieldTeamConfigDto teamName(String teamName) {
    this.teamName = JsonNullable.<String>of(teamName);
    return this;
  }

   /**
   * Get teamName
   * @return teamName
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getTeamName() {
        return teamName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TEAM_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTeamName_JsonNullable() {
    return teamName;
  }
  
  @JsonProperty(JSON_PROPERTY_TEAM_NAME)
  public void setTeamName_JsonNullable(JsonNullable<String> teamName) {
    this.teamName = teamName;
  }

  public void setTeamName(String teamName) {
    this.teamName = JsonNullable.<String>of(teamName);
  }


  public CustomFieldTeamConfigDto fieldName(String fieldName) {
    this.fieldName = JsonNullable.<String>of(fieldName);
    return this;
  }

   /**
   * Get fieldName
   * @return fieldName
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getFieldName() {
        return fieldName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FIELD_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFieldName_JsonNullable() {
    return fieldName;
  }
  
  @JsonProperty(JSON_PROPERTY_FIELD_NAME)
  public void setFieldName_JsonNullable(JsonNullable<String> fieldName) {
    this.fieldName = fieldName;
  }

  public void setFieldName(String fieldName) {
    this.fieldName = JsonNullable.<String>of(fieldName);
  }


  /**
   * Return true if this CustomFieldTeamConfigDto object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomFieldTeamConfigDto customFieldTeamConfigDto = (CustomFieldTeamConfigDto) o;
    return Objects.equals(this.teamId, customFieldTeamConfigDto.teamId) &&
        equalsNullable(this.teamName, customFieldTeamConfigDto.teamName) &&
        equalsNullable(this.fieldName, customFieldTeamConfigDto.fieldName);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(teamId, hashCodeNullable(teamName), hashCodeNullable(fieldName));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomFieldTeamConfigDto {\n");
    sb.append("    teamId: ").append(toIndentedString(teamId)).append("\n");
    sb.append("    teamName: ").append(toIndentedString(teamName)).append("\n");
    sb.append("    fieldName: ").append(toIndentedString(fieldName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

