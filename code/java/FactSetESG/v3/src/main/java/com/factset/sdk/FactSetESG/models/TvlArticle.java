/*
 * FactSet ESG API
 * FactSet ESG (powered by FactSet Truvalue) applies Natural Language Processing and Machine Learning to uncover risks and opportunities from companies' Environmental, Social and Governance (ESG) behavior, which are aggregated and categorized into continuously updated, material ESG scores. The service focuses on company ESG behavior from external sources and includes both positive and negative events that go beyond traditional sources of ESG risk data.<p> FactSet ESG extracts, analyzes, and generates scores from millions of documents each month collected from more than 200,000 data sources in over 38 languages. Sources include news, trade journals, NGOs, watchdog groups, trade blogs and industry reports. Products deliver investable insights by revealing value and risk factors from unstructured data at the speed of current events.</p> 
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetESG.models;

import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.FactSetESG.models.InvalidIdErrorObject;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDate;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetESG.JSON;


/**
 * TVL Articles All Object
 */
@ApiModel(description = "TVL Articles All Object")
@JsonPropertyOrder({
  TvlArticle.JSON_PROPERTY_DATE_PUBLICATION,
  TvlArticle.JSON_PROPERTY_FACTSET_ENTITY_ID,
  TvlArticle.JSON_PROPERTY_REQUEST_ID,
  TvlArticle.JSON_PROPERTY_ARTICLE_ID,
  TvlArticle.JSON_PROPERTY_ERROR
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class TvlArticle implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_DATE_PUBLICATION = "datePublication";
  private JsonNullable<LocalDate> datePublication = JsonNullable.<LocalDate>undefined();

  public static final String JSON_PROPERTY_FACTSET_ENTITY_ID = "factsetEntityId";
  private String factsetEntityId;

  public static final String JSON_PROPERTY_REQUEST_ID = "requestId";
  private String requestId;

  public static final String JSON_PROPERTY_ARTICLE_ID = "articleId";
  private String articleId;

  public static final String JSON_PROPERTY_ERROR = "error";
  private JsonNullable<InvalidIdErrorObject> error = JsonNullable.<InvalidIdErrorObject>undefined();

  public TvlArticle() { 
  }

  @JsonCreator
  public TvlArticle(
    @JsonProperty(value=JSON_PROPERTY_FACTSET_ENTITY_ID, required=true) String factsetEntityId, 
    @JsonProperty(value=JSON_PROPERTY_ARTICLE_ID, required=true) String articleId
  ) {
    this();
    this.factsetEntityId = factsetEntityId;
    this.articleId = articleId;
  }

  public TvlArticle datePublication(LocalDate datePublication) {
    this.datePublication = JsonNullable.<LocalDate>of(datePublication);
    return this;
  }

   /**
   * Date of article&#39;s publication based on datePublication parameter.
   * @return datePublication
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Mon Jan 04 00:00:00 UTC 2021", value = "Date of article's publication based on datePublication parameter.")
  @JsonIgnore

  public LocalDate getDatePublication() {
        return datePublication.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DATE_PUBLICATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LocalDate> getDatePublication_JsonNullable() {
    return datePublication;
  }
  
  @JsonProperty(JSON_PROPERTY_DATE_PUBLICATION)
  public void setDatePublication_JsonNullable(JsonNullable<LocalDate> datePublication) {
    this.datePublication = datePublication;
  }

  public void setDatePublication(LocalDate datePublication) {
    this.datePublication = JsonNullable.<LocalDate>of(datePublication);
  }


  public TvlArticle factsetEntityId(String factsetEntityId) {
    this.factsetEntityId = factsetEntityId;
    return this;
  }

   /**
   * FactSet Entity Identifier. Six alpha-numeric characters, excluding vowels, with a -E suffix (XXXXXX-E).
   * @return factsetEntityId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "001MF1-E", required = true, value = "FactSet Entity Identifier. Six alpha-numeric characters, excluding vowels, with a -E suffix (XXXXXX-E).")
  @JsonProperty(JSON_PROPERTY_FACTSET_ENTITY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFactsetEntityId() {
    return factsetEntityId;
  }


  @JsonProperty(JSON_PROPERTY_FACTSET_ENTITY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFactsetEntityId(String factsetEntityId) {
    this.factsetEntityId = factsetEntityId;
  }


  public TvlArticle requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

   /**
   * Identifier that was used for the request.
   * @return requestId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "US0231351067", value = "Identifier that was used for the request.")
  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRequestId() {
    return requestId;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }


  public TvlArticle articleId(String articleId) {
    this.articleId = articleId;
    return this;
  }

   /**
   * Unique identifier for the article.
   * @return articleId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "5ff2df5aecc225000fb47d4c", required = true, value = "Unique identifier for the article.")
  @JsonProperty(JSON_PROPERTY_ARTICLE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getArticleId() {
    return articleId;
  }


  @JsonProperty(JSON_PROPERTY_ARTICLE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setArticleId(String articleId) {
    this.articleId = articleId;
  }


  public TvlArticle error(InvalidIdErrorObject error) {
    this.error = JsonNullable.<InvalidIdErrorObject>of(error);
    return this;
  }

   /**
   * Get error
   * @return error
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public InvalidIdErrorObject getError() {
        return error.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<InvalidIdErrorObject> getError_JsonNullable() {
    return error;
  }
  
  @JsonProperty(JSON_PROPERTY_ERROR)
  public void setError_JsonNullable(JsonNullable<InvalidIdErrorObject> error) {
    this.error = error;
  }

  public void setError(InvalidIdErrorObject error) {
    this.error = JsonNullable.<InvalidIdErrorObject>of(error);
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   */
  @JsonAnySetter
  public TvlArticle putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   */
  @JsonAnyGetter
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }

  /**
   * Return true if this TvlArticle object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TvlArticle tvlArticle = (TvlArticle) o;
    return equalsNullable(this.datePublication, tvlArticle.datePublication) &&
        Objects.equals(this.factsetEntityId, tvlArticle.factsetEntityId) &&
        Objects.equals(this.requestId, tvlArticle.requestId) &&
        Objects.equals(this.articleId, tvlArticle.articleId) &&
        equalsNullable(this.error, tvlArticle.error)&&
        Objects.equals(this.additionalProperties, tvlArticle.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(datePublication), factsetEntityId, requestId, articleId, hashCodeNullable(error), additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TvlArticle {\n");
    sb.append("    datePublication: ").append(toIndentedString(datePublication)).append("\n");
    sb.append("    factsetEntityId: ").append(toIndentedString(factsetEntityId)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    articleId: ").append(toIndentedString(articleId)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

