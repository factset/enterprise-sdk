/*
 * FactSet ESG API
 * FactSet ESG (powered by FactSet Truvalue) applies Natural Language Processing and Machine Learning to uncover risks and opportunities from companies' Environmental, Social and Governance (ESG) behavior, which are aggregated and categorized into continuously updated, material ESG scores. The service focuses on company ESG behavior from external sources and includes both positive and negative events that go beyond traditional sources of ESG risk data.<p> FactSet ESG extracts, analyzes, and generates scores from millions of documents each month collected from more than 200,000 data sources in over 38 languages. Sources include news, trade journals, NGOs, watchdog groups, trade blogs and industry reports. Products deliver investable insights by revealing value and risk factors from unstructured data at the speed of current events.</p> 
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetESG.models;

import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.FactSetESG.models.InvalidIdErrorObject;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDate;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetESG.JSON;


/**
 * SFDR PAI Indicators Response Object
 */
@ApiModel(description = "SFDR PAI Indicators Response Object")
@JsonPropertyOrder({
  SfdrPai.JSON_PROPERTY_FSYM_ID,
  SfdrPai.JSON_PROPERTY_REQUEST_ID,
  SfdrPai.JSON_PROPERTY_SUB_TOPIC_CODE,
  SfdrPai.JSON_PROPERTY_SUB_TOPIC_NAME,
  SfdrPai.JSON_PROPERTY_INDICATOR_TYPE,
  SfdrPai.JSON_PROPERTY_PERIOD_END_DATE,
  SfdrPai.JSON_PROPERTY_REPORTING_PERIOD,
  SfdrPai.JSON_PROPERTY_STANDARDIZED_UNIT,
  SfdrPai.JSON_PROPERTY_STANDARDIZED_VALUE,
  SfdrPai.JSON_PROPERTY_CURRENCY,
  SfdrPai.JSON_PROPERTY_ERROR
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class SfdrPai implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_FSYM_ID = "fsymId";
  private JsonNullable<String> fsymId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_REQUEST_ID = "requestId";
  private String requestId;

  public static final String JSON_PROPERTY_SUB_TOPIC_CODE = "subTopicCode";
  private JsonNullable<String> subTopicCode = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SUB_TOPIC_NAME = "subTopicName";
  private JsonNullable<String> subTopicName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_INDICATOR_TYPE = "indicatorType";
  private JsonNullable<String> indicatorType = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PERIOD_END_DATE = "periodEndDate";
  private JsonNullable<LocalDate> periodEndDate = JsonNullable.<LocalDate>undefined();

  public static final String JSON_PROPERTY_REPORTING_PERIOD = "reportingPeriod";
  private JsonNullable<String> reportingPeriod = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_STANDARDIZED_UNIT = "standardizedUnit";
  private JsonNullable<String> standardizedUnit = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_STANDARDIZED_VALUE = "standardizedValue";
  private JsonNullable<String> standardizedValue = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private JsonNullable<String> currency = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ERROR = "error";
  private JsonNullable<InvalidIdErrorObject> error = JsonNullable.<InvalidIdErrorObject>undefined();

  public SfdrPai() { 
  }

  public SfdrPai fsymId(String fsymId) {
    this.fsymId = JsonNullable.<String>of(fsymId);
    return this;
  }

   /**
   * FactSet Entity Identifier. Six alpha-numeric characters, excluding vowels, with a -E suffix (XXXXXX-E).
   * @return fsymId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "001MF1-E", value = "FactSet Entity Identifier. Six alpha-numeric characters, excluding vowels, with a -E suffix (XXXXXX-E).")
  @JsonIgnore

  public String getFsymId() {
        return fsymId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFsymId_JsonNullable() {
    return fsymId;
  }
  
  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  public void setFsymId_JsonNullable(JsonNullable<String> fsymId) {
    this.fsymId = fsymId;
  }

  public void setFsymId(String fsymId) {
    this.fsymId = JsonNullable.<String>of(fsymId);
  }


  public SfdrPai requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

   /**
   * Identifier that was used for the request.
   * @return requestId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "US0231351067", value = "Identifier that was used for the request.")
  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRequestId() {
    return requestId;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }


  public SfdrPai subTopicCode(String subTopicCode) {
    this.subTopicCode = JsonNullable.<String>of(subTopicCode);
    return this;
  }

   /**
   * Codes for the General, Mandatory and Additional PAI indicators
   * @return subTopicCode
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "EN001", value = "Codes for the General, Mandatory and Additional PAI indicators")
  @JsonIgnore

  public String getSubTopicCode() {
        return subTopicCode.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SUB_TOPIC_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSubTopicCode_JsonNullable() {
    return subTopicCode;
  }
  
  @JsonProperty(JSON_PROPERTY_SUB_TOPIC_CODE)
  public void setSubTopicCode_JsonNullable(JsonNullable<String> subTopicCode) {
    this.subTopicCode = subTopicCode;
  }

  public void setSubTopicCode(String subTopicCode) {
    this.subTopicCode = JsonNullable.<String>of(subTopicCode);
  }


  public SfdrPai subTopicName(String subTopicName) {
    this.subTopicName = JsonNullable.<String>of(subTopicName);
    return this;
  }

   /**
   * Names for the General, Mandatory and Additional PAI indicators
   * @return subTopicName
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Scope 1 GHG emissions", value = "Names for the General, Mandatory and Additional PAI indicators")
  @JsonIgnore

  public String getSubTopicName() {
        return subTopicName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SUB_TOPIC_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSubTopicName_JsonNullable() {
    return subTopicName;
  }
  
  @JsonProperty(JSON_PROPERTY_SUB_TOPIC_NAME)
  public void setSubTopicName_JsonNullable(JsonNullable<String> subTopicName) {
    this.subTopicName = subTopicName;
  }

  public void setSubTopicName(String subTopicName) {
    this.subTopicName = JsonNullable.<String>of(subTopicName);
  }


  public SfdrPai indicatorType(String indicatorType) {
    this.indicatorType = JsonNullable.<String>of(indicatorType);
    return this;
  }

   /**
   * The type of indicator - General, Additional &amp; Mandatory
   * @return indicatorType
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Mandatory", value = "The type of indicator - General, Additional & Mandatory")
  @JsonIgnore

  public String getIndicatorType() {
        return indicatorType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INDICATOR_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIndicatorType_JsonNullable() {
    return indicatorType;
  }
  
  @JsonProperty(JSON_PROPERTY_INDICATOR_TYPE)
  public void setIndicatorType_JsonNullable(JsonNullable<String> indicatorType) {
    this.indicatorType = indicatorType;
  }

  public void setIndicatorType(String indicatorType) {
    this.indicatorType = JsonNullable.<String>of(indicatorType);
  }


  public SfdrPai periodEndDate(LocalDate periodEndDate) {
    this.periodEndDate = JsonNullable.<LocalDate>of(periodEndDate);
    return this;
  }

   /**
   * The Reporting period end date expressed in YYYY-MM-DD format
   * @return periodEndDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Sat Sep 26 00:00:00 UTC 2020", value = "The Reporting period end date expressed in YYYY-MM-DD format")
  @JsonIgnore

  public LocalDate getPeriodEndDate() {
        return periodEndDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PERIOD_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LocalDate> getPeriodEndDate_JsonNullable() {
    return periodEndDate;
  }
  
  @JsonProperty(JSON_PROPERTY_PERIOD_END_DATE)
  public void setPeriodEndDate_JsonNullable(JsonNullable<LocalDate> periodEndDate) {
    this.periodEndDate = periodEndDate;
  }

  public void setPeriodEndDate(LocalDate periodEndDate) {
    this.periodEndDate = JsonNullable.<LocalDate>of(periodEndDate);
  }


  public SfdrPai reportingPeriod(String reportingPeriod) {
    this.reportingPeriod = JsonNullable.<String>of(reportingPeriod);
    return this;
  }

   /**
   * The reporting period of the company expressed in YYYY format
   * @return reportingPeriod
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "2020", value = "The reporting period of the company expressed in YYYY format")
  @JsonIgnore

  public String getReportingPeriod() {
        return reportingPeriod.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REPORTING_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getReportingPeriod_JsonNullable() {
    return reportingPeriod;
  }
  
  @JsonProperty(JSON_PROPERTY_REPORTING_PERIOD)
  public void setReportingPeriod_JsonNullable(JsonNullable<String> reportingPeriod) {
    this.reportingPeriod = reportingPeriod;
  }

  public void setReportingPeriod(String reportingPeriod) {
    this.reportingPeriod = JsonNullable.<String>of(reportingPeriod);
  }


  public SfdrPai standardizedUnit(String standardizedUnit) {
    this.standardizedUnit = JsonNullable.<String>of(standardizedUnit);
    return this;
  }

   /**
   * The units of measurements for the indicators
   * @return standardizedUnit
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Metric ton CO2 e", value = "The units of measurements for the indicators")
  @JsonIgnore

  public String getStandardizedUnit() {
        return standardizedUnit.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STANDARDIZED_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getStandardizedUnit_JsonNullable() {
    return standardizedUnit;
  }
  
  @JsonProperty(JSON_PROPERTY_STANDARDIZED_UNIT)
  public void setStandardizedUnit_JsonNullable(JsonNullable<String> standardizedUnit) {
    this.standardizedUnit = standardizedUnit;
  }

  public void setStandardizedUnit(String standardizedUnit) {
    this.standardizedUnit = JsonNullable.<String>of(standardizedUnit);
  }


  public SfdrPai standardizedValue(String standardizedValue) {
    this.standardizedValue = JsonNullable.<String>of(standardizedValue);
    return this;
  }

   /**
   * The PAI calculations based on the company-reported data, some metrics sourced from Factset Databases and Truvalue SASB Spotlights
   * @return standardizedValue
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "9620000", value = "The PAI calculations based on the company-reported data, some metrics sourced from Factset Databases and Truvalue SASB Spotlights")
  @JsonIgnore

  public String getStandardizedValue() {
        return standardizedValue.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STANDARDIZED_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getStandardizedValue_JsonNullable() {
    return standardizedValue;
  }
  
  @JsonProperty(JSON_PROPERTY_STANDARDIZED_VALUE)
  public void setStandardizedValue_JsonNullable(JsonNullable<String> standardizedValue) {
    this.standardizedValue = standardizedValue;
  }

  public void setStandardizedValue(String standardizedValue) {
    this.standardizedValue = JsonNullable.<String>of(standardizedValue);
  }


  public SfdrPai currency(String currency) {
    this.currency = JsonNullable.<String>of(currency);
    return this;
  }

   /**
   * Currency code for the data. For a list of currency ISO codes, visit [Online Assistant Page #1470](https://oa.apps.factset.com/pages/1470).
   * @return currency
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "USD", value = "Currency code for the data. For a list of currency ISO codes, visit [Online Assistant Page #1470](https://oa.apps.factset.com/pages/1470).")
  @JsonIgnore

  public String getCurrency() {
        return currency.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCurrency_JsonNullable() {
    return currency;
  }
  
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  public void setCurrency_JsonNullable(JsonNullable<String> currency) {
    this.currency = currency;
  }

  public void setCurrency(String currency) {
    this.currency = JsonNullable.<String>of(currency);
  }


  public SfdrPai error(InvalidIdErrorObject error) {
    this.error = JsonNullable.<InvalidIdErrorObject>of(error);
    return this;
  }

   /**
   * Get error
   * @return error
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public InvalidIdErrorObject getError() {
        return error.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<InvalidIdErrorObject> getError_JsonNullable() {
    return error;
  }
  
  @JsonProperty(JSON_PROPERTY_ERROR)
  public void setError_JsonNullable(JsonNullable<InvalidIdErrorObject> error) {
    this.error = error;
  }

  public void setError(InvalidIdErrorObject error) {
    this.error = JsonNullable.<InvalidIdErrorObject>of(error);
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   */
  @JsonAnySetter
  public SfdrPai putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   */
  @JsonAnyGetter
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }

  /**
   * Return true if this SfdrPai object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SfdrPai sfdrPai = (SfdrPai) o;
    return equalsNullable(this.fsymId, sfdrPai.fsymId) &&
        Objects.equals(this.requestId, sfdrPai.requestId) &&
        equalsNullable(this.subTopicCode, sfdrPai.subTopicCode) &&
        equalsNullable(this.subTopicName, sfdrPai.subTopicName) &&
        equalsNullable(this.indicatorType, sfdrPai.indicatorType) &&
        equalsNullable(this.periodEndDate, sfdrPai.periodEndDate) &&
        equalsNullable(this.reportingPeriod, sfdrPai.reportingPeriod) &&
        equalsNullable(this.standardizedUnit, sfdrPai.standardizedUnit) &&
        equalsNullable(this.standardizedValue, sfdrPai.standardizedValue) &&
        equalsNullable(this.currency, sfdrPai.currency) &&
        equalsNullable(this.error, sfdrPai.error)&&
        Objects.equals(this.additionalProperties, sfdrPai.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(fsymId), requestId, hashCodeNullable(subTopicCode), hashCodeNullable(subTopicName), hashCodeNullable(indicatorType), hashCodeNullable(periodEndDate), hashCodeNullable(reportingPeriod), hashCodeNullable(standardizedUnit), hashCodeNullable(standardizedValue), hashCodeNullable(currency), hashCodeNullable(error), additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SfdrPai {\n");
    sb.append("    fsymId: ").append(toIndentedString(fsymId)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    subTopicCode: ").append(toIndentedString(subTopicCode)).append("\n");
    sb.append("    subTopicName: ").append(toIndentedString(subTopicName)).append("\n");
    sb.append("    indicatorType: ").append(toIndentedString(indicatorType)).append("\n");
    sb.append("    periodEndDate: ").append(toIndentedString(periodEndDate)).append("\n");
    sb.append("    reportingPeriod: ").append(toIndentedString(reportingPeriod)).append("\n");
    sb.append("    standardizedUnit: ").append(toIndentedString(standardizedUnit)).append("\n");
    sb.append("    standardizedValue: ").append(toIndentedString(standardizedValue)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

