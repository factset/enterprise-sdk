/*
 * GIPS API
 * Allow clients to use GIPS through APIs.
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.GIPS.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.GIPS.models.FactSetProtobufStachV3MetadataItem;
import com.factset.sdk.GIPS.models.FactSetProtobufStachV3SortColumn;
import com.factset.sdk.GIPS.models.FactSetProtobufStachV3TableTypesError;
import com.factset.sdk.GIPS.models.FactSetProtobufStachV3TableTypesFormatResult;
import com.factset.sdk.GIPS.models.FactSetProtobufStachV3TableTypesGroupResult;
import com.factset.sdk.GIPS.models.FactSetProtobufStachV3TableTypesPagination;
import com.factset.sdk.GIPS.models.FactSetProtobufStachV3TableTypesSplitResult;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.GIPS.JSON;


/**
 * FactSetProtobufStachV3Table
 */
@JsonPropertyOrder({
  FactSetProtobufStachV3Table.JSON_PROPERTY_PRIMARY_KEYS,
  FactSetProtobufStachV3Table.JSON_PROPERTY_TOTAL_NUM_ROWS,
  FactSetProtobufStachV3Table.JSON_PROPERTY_GROUP_RESULT,
  FactSetProtobufStachV3Table.JSON_PROPERTY_SPLIT_RESULT,
  FactSetProtobufStachV3Table.JSON_PROPERTY_SORT_RESULT,
  FactSetProtobufStachV3Table.JSON_PROPERTY_FORMAT_RESULT,
  FactSetProtobufStachV3Table.JSON_PROPERTY_PAGINATION,
  FactSetProtobufStachV3Table.JSON_PROPERTY_ERRORS,
  FactSetProtobufStachV3Table.JSON_PROPERTY_CUSTOM_METADATA
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class FactSetProtobufStachV3Table implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_PRIMARY_KEYS = "primaryKeys";
  private JsonNullable<java.util.List<String>> primaryKeys = JsonNullable.<java.util.List<String>>undefined();

  public static final String JSON_PROPERTY_TOTAL_NUM_ROWS = "totalNumRows";
  private Integer totalNumRows;

  public static final String JSON_PROPERTY_GROUP_RESULT = "groupResult";
  private FactSetProtobufStachV3TableTypesGroupResult groupResult;

  public static final String JSON_PROPERTY_SPLIT_RESULT = "splitResult";
  private FactSetProtobufStachV3TableTypesSplitResult splitResult;

  public static final String JSON_PROPERTY_SORT_RESULT = "sortResult";
  private JsonNullable<java.util.List<FactSetProtobufStachV3SortColumn>> sortResult = JsonNullable.<java.util.List<FactSetProtobufStachV3SortColumn>>undefined();

  public static final String JSON_PROPERTY_FORMAT_RESULT = "formatResult";
  private FactSetProtobufStachV3TableTypesFormatResult formatResult;

  public static final String JSON_PROPERTY_PAGINATION = "pagination";
  private FactSetProtobufStachV3TableTypesPagination pagination;

  public static final String JSON_PROPERTY_ERRORS = "errors";
  private JsonNullable<java.util.List<FactSetProtobufStachV3TableTypesError>> errors = JsonNullable.<java.util.List<FactSetProtobufStachV3TableTypesError>>undefined();

  public static final String JSON_PROPERTY_CUSTOM_METADATA = "customMetadata";
  private JsonNullable<java.util.Map<String, FactSetProtobufStachV3MetadataItem>> customMetadata = JsonNullable.<java.util.Map<String, FactSetProtobufStachV3MetadataItem>>undefined();

  public FactSetProtobufStachV3Table() { 
  }

  @JsonCreator
  public FactSetProtobufStachV3Table(
    @JsonProperty(JSON_PROPERTY_PRIMARY_KEYS) java.util.List<String> primaryKeys, 
    @JsonProperty(JSON_PROPERTY_SORT_RESULT) java.util.List<FactSetProtobufStachV3SortColumn> sortResult, 
    @JsonProperty(JSON_PROPERTY_ERRORS) java.util.List<FactSetProtobufStachV3TableTypesError> errors, 
    @JsonProperty(JSON_PROPERTY_CUSTOM_METADATA) java.util.Map<String, FactSetProtobufStachV3MetadataItem> customMetadata
  ) {
    this();
    this.primaryKeys = JsonNullable.<java.util.List<String>>of(primaryKeys);
    this.sortResult = JsonNullable.<java.util.List<FactSetProtobufStachV3SortColumn>>of(sortResult);
    this.errors = JsonNullable.<java.util.List<FactSetProtobufStachV3TableTypesError>>of(errors);
    this.customMetadata = JsonNullable.<java.util.Map<String, FactSetProtobufStachV3MetadataItem>>of(customMetadata);
  }

   /**
   * Get primaryKeys
   * @return primaryKeys
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public java.util.List<String> getPrimaryKeys() {
    
    if (primaryKeys == null) {
      primaryKeys = JsonNullable.<java.util.List<String>>of(new java.util.ArrayList<>());
    }
    return primaryKeys.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRIMARY_KEYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<java.util.List<String>> getPrimaryKeys_JsonNullable() {
    return primaryKeys;
  }
  
  @JsonProperty(JSON_PROPERTY_PRIMARY_KEYS)
  private void setPrimaryKeys_JsonNullable(JsonNullable<java.util.List<String>> primaryKeys) {
    this.primaryKeys = primaryKeys;
  }



  public FactSetProtobufStachV3Table totalNumRows(Integer totalNumRows) {
    this.totalNumRows = totalNumRows;
    return this;
  }

   /**
   * Get totalNumRows
   * @return totalNumRows
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TOTAL_NUM_ROWS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTotalNumRows() {
    return totalNumRows;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_NUM_ROWS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalNumRows(Integer totalNumRows) {
    this.totalNumRows = totalNumRows;
  }


  public FactSetProtobufStachV3Table groupResult(FactSetProtobufStachV3TableTypesGroupResult groupResult) {
    this.groupResult = groupResult;
    return this;
  }

   /**
   * Get groupResult
   * @return groupResult
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_GROUP_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FactSetProtobufStachV3TableTypesGroupResult getGroupResult() {
    return groupResult;
  }


  @JsonProperty(JSON_PROPERTY_GROUP_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGroupResult(FactSetProtobufStachV3TableTypesGroupResult groupResult) {
    this.groupResult = groupResult;
  }


  public FactSetProtobufStachV3Table splitResult(FactSetProtobufStachV3TableTypesSplitResult splitResult) {
    this.splitResult = splitResult;
    return this;
  }

   /**
   * Get splitResult
   * @return splitResult
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SPLIT_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FactSetProtobufStachV3TableTypesSplitResult getSplitResult() {
    return splitResult;
  }


  @JsonProperty(JSON_PROPERTY_SPLIT_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSplitResult(FactSetProtobufStachV3TableTypesSplitResult splitResult) {
    this.splitResult = splitResult;
  }


   /**
   * Get sortResult
   * @return sortResult
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public java.util.List<FactSetProtobufStachV3SortColumn> getSortResult() {
    
    if (sortResult == null) {
      sortResult = JsonNullable.<java.util.List<FactSetProtobufStachV3SortColumn>>of(new java.util.ArrayList<>());
    }
    return sortResult.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SORT_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<java.util.List<FactSetProtobufStachV3SortColumn>> getSortResult_JsonNullable() {
    return sortResult;
  }
  
  @JsonProperty(JSON_PROPERTY_SORT_RESULT)
  private void setSortResult_JsonNullable(JsonNullable<java.util.List<FactSetProtobufStachV3SortColumn>> sortResult) {
    this.sortResult = sortResult;
  }



  public FactSetProtobufStachV3Table formatResult(FactSetProtobufStachV3TableTypesFormatResult formatResult) {
    this.formatResult = formatResult;
    return this;
  }

   /**
   * Get formatResult
   * @return formatResult
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FORMAT_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FactSetProtobufStachV3TableTypesFormatResult getFormatResult() {
    return formatResult;
  }


  @JsonProperty(JSON_PROPERTY_FORMAT_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFormatResult(FactSetProtobufStachV3TableTypesFormatResult formatResult) {
    this.formatResult = formatResult;
  }


  public FactSetProtobufStachV3Table pagination(FactSetProtobufStachV3TableTypesPagination pagination) {
    this.pagination = pagination;
    return this;
  }

   /**
   * Get pagination
   * @return pagination
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PAGINATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FactSetProtobufStachV3TableTypesPagination getPagination() {
    return pagination;
  }


  @JsonProperty(JSON_PROPERTY_PAGINATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPagination(FactSetProtobufStachV3TableTypesPagination pagination) {
    this.pagination = pagination;
  }


   /**
   * Get errors
   * @return errors
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public java.util.List<FactSetProtobufStachV3TableTypesError> getErrors() {
    
    if (errors == null) {
      errors = JsonNullable.<java.util.List<FactSetProtobufStachV3TableTypesError>>of(new java.util.ArrayList<>());
    }
    return errors.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ERRORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<java.util.List<FactSetProtobufStachV3TableTypesError>> getErrors_JsonNullable() {
    return errors;
  }
  
  @JsonProperty(JSON_PROPERTY_ERRORS)
  private void setErrors_JsonNullable(JsonNullable<java.util.List<FactSetProtobufStachV3TableTypesError>> errors) {
    this.errors = errors;
  }



   /**
   * Get customMetadata
   * @return customMetadata
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public java.util.Map<String, FactSetProtobufStachV3MetadataItem> getCustomMetadata() {
    
    if (customMetadata == null) {
      customMetadata = JsonNullable.<java.util.Map<String, FactSetProtobufStachV3MetadataItem>>of(new java.util.HashMap<>());
    }
    return customMetadata.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CUSTOM_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<java.util.Map<String, FactSetProtobufStachV3MetadataItem>> getCustomMetadata_JsonNullable() {
    return customMetadata;
  }
  
  @JsonProperty(JSON_PROPERTY_CUSTOM_METADATA)
  private void setCustomMetadata_JsonNullable(JsonNullable<java.util.Map<String, FactSetProtobufStachV3MetadataItem>> customMetadata) {
    this.customMetadata = customMetadata;
  }



  /**
   * Return true if this FactSet.Protobuf.Stach.V3.Table object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FactSetProtobufStachV3Table factSetProtobufStachV3Table = (FactSetProtobufStachV3Table) o;
    return equalsNullable(this.primaryKeys, factSetProtobufStachV3Table.primaryKeys) &&
        Objects.equals(this.totalNumRows, factSetProtobufStachV3Table.totalNumRows) &&
        Objects.equals(this.groupResult, factSetProtobufStachV3Table.groupResult) &&
        Objects.equals(this.splitResult, factSetProtobufStachV3Table.splitResult) &&
        equalsNullable(this.sortResult, factSetProtobufStachV3Table.sortResult) &&
        Objects.equals(this.formatResult, factSetProtobufStachV3Table.formatResult) &&
        Objects.equals(this.pagination, factSetProtobufStachV3Table.pagination) &&
        equalsNullable(this.errors, factSetProtobufStachV3Table.errors) &&
        equalsNullable(this.customMetadata, factSetProtobufStachV3Table.customMetadata);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(primaryKeys), totalNumRows, groupResult, splitResult, hashCodeNullable(sortResult), formatResult, pagination, hashCodeNullable(errors), hashCodeNullable(customMetadata));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FactSetProtobufStachV3Table {\n");
    sb.append("    primaryKeys: ").append(toIndentedString(primaryKeys)).append("\n");
    sb.append("    totalNumRows: ").append(toIndentedString(totalNumRows)).append("\n");
    sb.append("    groupResult: ").append(toIndentedString(groupResult)).append("\n");
    sb.append("    splitResult: ").append(toIndentedString(splitResult)).append("\n");
    sb.append("    sortResult: ").append(toIndentedString(sortResult)).append("\n");
    sb.append("    formatResult: ").append(toIndentedString(formatResult)).append("\n");
    sb.append("    pagination: ").append(toIndentedString(pagination)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("    customMetadata: ").append(toIndentedString(customMetadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

