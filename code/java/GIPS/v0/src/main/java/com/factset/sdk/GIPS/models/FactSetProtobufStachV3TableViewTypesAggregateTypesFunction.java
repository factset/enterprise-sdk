/*
 * GIPS API
 * Allow clients to use GIPS through APIs.
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.GIPS.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.GIPS.models.GoogleProtobufWellKnownTypesValue;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.GIPS.JSON;


/**
 * FactSetProtobufStachV3TableViewTypesAggregateTypesFunction
 */
@JsonPropertyOrder({
  FactSetProtobufStachV3TableViewTypesAggregateTypesFunction.JSON_PROPERTY_NAME,
  FactSetProtobufStachV3TableViewTypesAggregateTypesFunction.JSON_PROPERTY_PARAMETERS,
  FactSetProtobufStachV3TableViewTypesAggregateTypesFunction.JSON_PROPERTY_EXCLUDE_FROM_TOTAL_ROWS,
  FactSetProtobufStachV3TableViewTypesAggregateTypesFunction.JSON_PROPERTY_EXCLUDE_FROM_GROUP_ROWS,
  FactSetProtobufStachV3TableViewTypesAggregateTypesFunction.JSON_PROPERTY_TARGET_COLUMN_ALIAS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class FactSetProtobufStachV3TableViewTypesAggregateTypesFunction implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PARAMETERS = "parameters";
  private JsonNullable<java.util.Map<String, GoogleProtobufWellKnownTypesValue>> parameters = JsonNullable.<java.util.Map<String, GoogleProtobufWellKnownTypesValue>>undefined();

  public static final String JSON_PROPERTY_EXCLUDE_FROM_TOTAL_ROWS = "excludeFromTotalRows";
  private Boolean excludeFromTotalRows;

  public static final String JSON_PROPERTY_EXCLUDE_FROM_GROUP_ROWS = "excludeFromGroupRows";
  private JsonNullable<java.util.List<String>> excludeFromGroupRows = JsonNullable.<java.util.List<String>>undefined();

  public static final String JSON_PROPERTY_TARGET_COLUMN_ALIAS = "targetColumnAlias";
  private JsonNullable<String> targetColumnAlias = JsonNullable.<String>undefined();

  public FactSetProtobufStachV3TableViewTypesAggregateTypesFunction() { 
  }

  @JsonCreator
  public FactSetProtobufStachV3TableViewTypesAggregateTypesFunction(
    @JsonProperty(JSON_PROPERTY_PARAMETERS) java.util.Map<String, GoogleProtobufWellKnownTypesValue> parameters, 
    @JsonProperty(JSON_PROPERTY_EXCLUDE_FROM_GROUP_ROWS) java.util.List<String> excludeFromGroupRows
  ) {
    this();
    this.parameters = JsonNullable.<java.util.Map<String, GoogleProtobufWellKnownTypesValue>>of(parameters);
    this.excludeFromGroupRows = JsonNullable.<java.util.List<String>>of(excludeFromGroupRows);
  }

  public FactSetProtobufStachV3TableViewTypesAggregateTypesFunction name(String name) {
    this.name = JsonNullable.<String>of(name);
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(String name) {
    this.name = JsonNullable.<String>of(name);
  }


   /**
   * Get parameters
   * @return parameters
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public java.util.Map<String, GoogleProtobufWellKnownTypesValue> getParameters() {
    
    if (parameters == null) {
      parameters = JsonNullable.<java.util.Map<String, GoogleProtobufWellKnownTypesValue>>of(new java.util.HashMap<>());
    }
    return parameters.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PARAMETERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<java.util.Map<String, GoogleProtobufWellKnownTypesValue>> getParameters_JsonNullable() {
    return parameters;
  }
  
  @JsonProperty(JSON_PROPERTY_PARAMETERS)
  private void setParameters_JsonNullable(JsonNullable<java.util.Map<String, GoogleProtobufWellKnownTypesValue>> parameters) {
    this.parameters = parameters;
  }



  public FactSetProtobufStachV3TableViewTypesAggregateTypesFunction excludeFromTotalRows(Boolean excludeFromTotalRows) {
    this.excludeFromTotalRows = excludeFromTotalRows;
    return this;
  }

   /**
   * Get excludeFromTotalRows
   * @return excludeFromTotalRows
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EXCLUDE_FROM_TOTAL_ROWS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getExcludeFromTotalRows() {
    return excludeFromTotalRows;
  }


  @JsonProperty(JSON_PROPERTY_EXCLUDE_FROM_TOTAL_ROWS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExcludeFromTotalRows(Boolean excludeFromTotalRows) {
    this.excludeFromTotalRows = excludeFromTotalRows;
  }


   /**
   * Get excludeFromGroupRows
   * @return excludeFromGroupRows
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public java.util.List<String> getExcludeFromGroupRows() {
    
    if (excludeFromGroupRows == null) {
      excludeFromGroupRows = JsonNullable.<java.util.List<String>>of(new java.util.ArrayList<>());
    }
    return excludeFromGroupRows.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXCLUDE_FROM_GROUP_ROWS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<java.util.List<String>> getExcludeFromGroupRows_JsonNullable() {
    return excludeFromGroupRows;
  }
  
  @JsonProperty(JSON_PROPERTY_EXCLUDE_FROM_GROUP_ROWS)
  private void setExcludeFromGroupRows_JsonNullable(JsonNullable<java.util.List<String>> excludeFromGroupRows) {
    this.excludeFromGroupRows = excludeFromGroupRows;
  }



  public FactSetProtobufStachV3TableViewTypesAggregateTypesFunction targetColumnAlias(String targetColumnAlias) {
    this.targetColumnAlias = JsonNullable.<String>of(targetColumnAlias);
    return this;
  }

   /**
   * Get targetColumnAlias
   * @return targetColumnAlias
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getTargetColumnAlias() {
        return targetColumnAlias.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TARGET_COLUMN_ALIAS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTargetColumnAlias_JsonNullable() {
    return targetColumnAlias;
  }
  
  @JsonProperty(JSON_PROPERTY_TARGET_COLUMN_ALIAS)
  public void setTargetColumnAlias_JsonNullable(JsonNullable<String> targetColumnAlias) {
    this.targetColumnAlias = targetColumnAlias;
  }

  public void setTargetColumnAlias(String targetColumnAlias) {
    this.targetColumnAlias = JsonNullable.<String>of(targetColumnAlias);
  }


  /**
   * Return true if this FactSet.Protobuf.Stach.V3.TableView.Types.Aggregate.Types.Function object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FactSetProtobufStachV3TableViewTypesAggregateTypesFunction factSetProtobufStachV3TableViewTypesAggregateTypesFunction = (FactSetProtobufStachV3TableViewTypesAggregateTypesFunction) o;
    return equalsNullable(this.name, factSetProtobufStachV3TableViewTypesAggregateTypesFunction.name) &&
        equalsNullable(this.parameters, factSetProtobufStachV3TableViewTypesAggregateTypesFunction.parameters) &&
        Objects.equals(this.excludeFromTotalRows, factSetProtobufStachV3TableViewTypesAggregateTypesFunction.excludeFromTotalRows) &&
        equalsNullable(this.excludeFromGroupRows, factSetProtobufStachV3TableViewTypesAggregateTypesFunction.excludeFromGroupRows) &&
        equalsNullable(this.targetColumnAlias, factSetProtobufStachV3TableViewTypesAggregateTypesFunction.targetColumnAlias);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(name), hashCodeNullable(parameters), excludeFromTotalRows, hashCodeNullable(excludeFromGroupRows), hashCodeNullable(targetColumnAlias));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FactSetProtobufStachV3TableViewTypesAggregateTypesFunction {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    excludeFromTotalRows: ").append(toIndentedString(excludeFromTotalRows)).append("\n");
    sb.append("    excludeFromGroupRows: ").append(toIndentedString(excludeFromGroupRows)).append("\n");
    sb.append("    targetColumnAlias: ").append(toIndentedString(targetColumnAlias)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

