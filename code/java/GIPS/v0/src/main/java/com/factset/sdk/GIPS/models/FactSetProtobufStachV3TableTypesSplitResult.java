/*
 * GIPS API
 * Allow clients to use GIPS through APIs.
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.GIPS.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.GIPS.JSON;


/**
 * FactSetProtobufStachV3TableTypesSplitResult
 */
@JsonPropertyOrder({
  FactSetProtobufStachV3TableTypesSplitResult.JSON_PROPERTY_MULTI_LEVEL_HEADERS_TABLE_REFERENCE,
  FactSetProtobufStachV3TableTypesSplitResult.JSON_PROPERTY_BY,
  FactSetProtobufStachV3TableTypesSplitResult.JSON_PROPERTY_OVER
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class FactSetProtobufStachV3TableTypesSplitResult implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_MULTI_LEVEL_HEADERS_TABLE_REFERENCE = "multiLevelHeadersTableReference";
  private JsonNullable<String> multiLevelHeadersTableReference = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_BY = "by";
  private JsonNullable<java.util.List<String>> by = JsonNullable.<java.util.List<String>>undefined();

  public static final String JSON_PROPERTY_OVER = "over";
  private JsonNullable<java.util.Map<String, String>> over = JsonNullable.<java.util.Map<String, String>>undefined();

  public FactSetProtobufStachV3TableTypesSplitResult() { 
  }

  @JsonCreator
  public FactSetProtobufStachV3TableTypesSplitResult(
    @JsonProperty(JSON_PROPERTY_BY) java.util.List<String> by, 
    @JsonProperty(JSON_PROPERTY_OVER) java.util.Map<String, String> over
  ) {
    this();
    this.by = JsonNullable.<java.util.List<String>>of(by);
    this.over = JsonNullable.<java.util.Map<String, String>>of(over);
  }

  public FactSetProtobufStachV3TableTypesSplitResult multiLevelHeadersTableReference(String multiLevelHeadersTableReference) {
    this.multiLevelHeadersTableReference = JsonNullable.<String>of(multiLevelHeadersTableReference);
    return this;
  }

   /**
   * Get multiLevelHeadersTableReference
   * @return multiLevelHeadersTableReference
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMultiLevelHeadersTableReference() {
        return multiLevelHeadersTableReference.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MULTI_LEVEL_HEADERS_TABLE_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMultiLevelHeadersTableReference_JsonNullable() {
    return multiLevelHeadersTableReference;
  }
  
  @JsonProperty(JSON_PROPERTY_MULTI_LEVEL_HEADERS_TABLE_REFERENCE)
  public void setMultiLevelHeadersTableReference_JsonNullable(JsonNullable<String> multiLevelHeadersTableReference) {
    this.multiLevelHeadersTableReference = multiLevelHeadersTableReference;
  }

  public void setMultiLevelHeadersTableReference(String multiLevelHeadersTableReference) {
    this.multiLevelHeadersTableReference = JsonNullable.<String>of(multiLevelHeadersTableReference);
  }


   /**
   * Get by
   * @return by
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public java.util.List<String> getBy() {
    
    if (by == null) {
      by = JsonNullable.<java.util.List<String>>of(new java.util.ArrayList<>());
    }
    return by.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<java.util.List<String>> getBy_JsonNullable() {
    return by;
  }
  
  @JsonProperty(JSON_PROPERTY_BY)
  private void setBy_JsonNullable(JsonNullable<java.util.List<String>> by) {
    this.by = by;
  }



   /**
   * Get over
   * @return over
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public java.util.Map<String, String> getOver() {
    
    if (over == null) {
      over = JsonNullable.<java.util.Map<String, String>>of(new java.util.HashMap<>());
    }
    return over.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<java.util.Map<String, String>> getOver_JsonNullable() {
    return over;
  }
  
  @JsonProperty(JSON_PROPERTY_OVER)
  private void setOver_JsonNullable(JsonNullable<java.util.Map<String, String>> over) {
    this.over = over;
  }



  /**
   * Return true if this FactSet.Protobuf.Stach.V3.Table.Types.SplitResult object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FactSetProtobufStachV3TableTypesSplitResult factSetProtobufStachV3TableTypesSplitResult = (FactSetProtobufStachV3TableTypesSplitResult) o;
    return equalsNullable(this.multiLevelHeadersTableReference, factSetProtobufStachV3TableTypesSplitResult.multiLevelHeadersTableReference) &&
        equalsNullable(this.by, factSetProtobufStachV3TableTypesSplitResult.by) &&
        equalsNullable(this.over, factSetProtobufStachV3TableTypesSplitResult.over);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(multiLevelHeadersTableReference), hashCodeNullable(by), hashCodeNullable(over));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FactSetProtobufStachV3TableTypesSplitResult {\n");
    sb.append("    multiLevelHeadersTableReference: ").append(toIndentedString(multiLevelHeadersTableReference)).append("\n");
    sb.append("    by: ").append(toIndentedString(by)).append("\n");
    sb.append("    over: ").append(toIndentedString(over)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

