/*
 * GIPS API
 * Allow clients to use GIPS through APIs.
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.GIPS.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.GIPS.models.FactSetProtobufStachV3Sort;
import com.factset.sdk.GIPS.models.FactSetProtobufStachV3TableTypesCollapsedColumnResult;
import com.factset.sdk.GIPS.models.FactSetProtobufStachV3TableTypesGroupResultTypesAggregateValue;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.GIPS.JSON;


/**
 * FactSetProtobufStachV3TableTypesGroupResult
 */
@JsonPropertyOrder({
  FactSetProtobufStachV3TableTypesGroupResult.JSON_PROPERTY_BY,
  FactSetProtobufStachV3TableTypesGroupResult.JSON_PROPERTY_COLLAPSED_COLUMN_RESULT,
  FactSetProtobufStachV3TableTypesGroupResult.JSON_PROPERTY_ROW_PATH,
  FactSetProtobufStachV3TableTypesGroupResult.JSON_PROPERTY_AGGREGATE_ROWS,
  FactSetProtobufStachV3TableTypesGroupResult.JSON_PROPERTY_LEVEL,
  FactSetProtobufStachV3TableTypesGroupResult.JSON_PROPERTY_AGGREGATE_VALUES,
  FactSetProtobufStachV3TableTypesGroupResult.JSON_PROPERTY_SORT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class FactSetProtobufStachV3TableTypesGroupResult implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_BY = "by";
  private JsonNullable<java.util.List<String>> by = JsonNullable.<java.util.List<String>>undefined();

  public static final String JSON_PROPERTY_COLLAPSED_COLUMN_RESULT = "collapsedColumnResult";
  private FactSetProtobufStachV3TableTypesCollapsedColumnResult collapsedColumnResult;

  public static final String JSON_PROPERTY_ROW_PATH = "rowPath";
  private JsonNullable<String> rowPath = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_AGGREGATE_ROWS = "aggregateRows";
  private JsonNullable<String> aggregateRows = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LEVEL = "level";
  private JsonNullable<String> level = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_AGGREGATE_VALUES = "aggregateValues";
  private JsonNullable<java.util.Map<String, FactSetProtobufStachV3TableTypesGroupResultTypesAggregateValue>> aggregateValues = JsonNullable.<java.util.Map<String, FactSetProtobufStachV3TableTypesGroupResultTypesAggregateValue>>undefined();

  public static final String JSON_PROPERTY_SORT = "sort";
  private JsonNullable<java.util.Map<String, FactSetProtobufStachV3Sort>> sort = JsonNullable.<java.util.Map<String, FactSetProtobufStachV3Sort>>undefined();

  public FactSetProtobufStachV3TableTypesGroupResult() { 
  }

  @JsonCreator
  public FactSetProtobufStachV3TableTypesGroupResult(
    @JsonProperty(JSON_PROPERTY_BY) java.util.List<String> by, 
    @JsonProperty(JSON_PROPERTY_AGGREGATE_VALUES) java.util.Map<String, FactSetProtobufStachV3TableTypesGroupResultTypesAggregateValue> aggregateValues, 
    @JsonProperty(JSON_PROPERTY_SORT) java.util.Map<String, FactSetProtobufStachV3Sort> sort
  ) {
    this();
    this.by = JsonNullable.<java.util.List<String>>of(by);
    this.aggregateValues = JsonNullable.<java.util.Map<String, FactSetProtobufStachV3TableTypesGroupResultTypesAggregateValue>>of(aggregateValues);
    this.sort = JsonNullable.<java.util.Map<String, FactSetProtobufStachV3Sort>>of(sort);
  }

   /**
   * Get by
   * @return by
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public java.util.List<String> getBy() {
    
    if (by == null) {
      by = JsonNullable.<java.util.List<String>>of(new java.util.ArrayList<>());
    }
    return by.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<java.util.List<String>> getBy_JsonNullable() {
    return by;
  }
  
  @JsonProperty(JSON_PROPERTY_BY)
  private void setBy_JsonNullable(JsonNullable<java.util.List<String>> by) {
    this.by = by;
  }



  public FactSetProtobufStachV3TableTypesGroupResult collapsedColumnResult(FactSetProtobufStachV3TableTypesCollapsedColumnResult collapsedColumnResult) {
    this.collapsedColumnResult = collapsedColumnResult;
    return this;
  }

   /**
   * Get collapsedColumnResult
   * @return collapsedColumnResult
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_COLLAPSED_COLUMN_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FactSetProtobufStachV3TableTypesCollapsedColumnResult getCollapsedColumnResult() {
    return collapsedColumnResult;
  }


  @JsonProperty(JSON_PROPERTY_COLLAPSED_COLUMN_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCollapsedColumnResult(FactSetProtobufStachV3TableTypesCollapsedColumnResult collapsedColumnResult) {
    this.collapsedColumnResult = collapsedColumnResult;
  }


  public FactSetProtobufStachV3TableTypesGroupResult rowPath(String rowPath) {
    this.rowPath = JsonNullable.<String>of(rowPath);
    return this;
  }

   /**
   * Get rowPath
   * @return rowPath
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getRowPath() {
        return rowPath.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ROW_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getRowPath_JsonNullable() {
    return rowPath;
  }
  
  @JsonProperty(JSON_PROPERTY_ROW_PATH)
  public void setRowPath_JsonNullable(JsonNullable<String> rowPath) {
    this.rowPath = rowPath;
  }

  public void setRowPath(String rowPath) {
    this.rowPath = JsonNullable.<String>of(rowPath);
  }


  public FactSetProtobufStachV3TableTypesGroupResult aggregateRows(String aggregateRows) {
    this.aggregateRows = JsonNullable.<String>of(aggregateRows);
    return this;
  }

   /**
   * Get aggregateRows
   * @return aggregateRows
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getAggregateRows() {
        return aggregateRows.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AGGREGATE_ROWS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getAggregateRows_JsonNullable() {
    return aggregateRows;
  }
  
  @JsonProperty(JSON_PROPERTY_AGGREGATE_ROWS)
  public void setAggregateRows_JsonNullable(JsonNullable<String> aggregateRows) {
    this.aggregateRows = aggregateRows;
  }

  public void setAggregateRows(String aggregateRows) {
    this.aggregateRows = JsonNullable.<String>of(aggregateRows);
  }


  public FactSetProtobufStachV3TableTypesGroupResult level(String level) {
    this.level = JsonNullable.<String>of(level);
    return this;
  }

   /**
   * Get level
   * @return level
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLevel() {
        return level.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLevel_JsonNullable() {
    return level;
  }
  
  @JsonProperty(JSON_PROPERTY_LEVEL)
  public void setLevel_JsonNullable(JsonNullable<String> level) {
    this.level = level;
  }

  public void setLevel(String level) {
    this.level = JsonNullable.<String>of(level);
  }


   /**
   * Get aggregateValues
   * @return aggregateValues
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public java.util.Map<String, FactSetProtobufStachV3TableTypesGroupResultTypesAggregateValue> getAggregateValues() {
    
    if (aggregateValues == null) {
      aggregateValues = JsonNullable.<java.util.Map<String, FactSetProtobufStachV3TableTypesGroupResultTypesAggregateValue>>of(new java.util.HashMap<>());
    }
    return aggregateValues.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AGGREGATE_VALUES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<java.util.Map<String, FactSetProtobufStachV3TableTypesGroupResultTypesAggregateValue>> getAggregateValues_JsonNullable() {
    return aggregateValues;
  }
  
  @JsonProperty(JSON_PROPERTY_AGGREGATE_VALUES)
  private void setAggregateValues_JsonNullable(JsonNullable<java.util.Map<String, FactSetProtobufStachV3TableTypesGroupResultTypesAggregateValue>> aggregateValues) {
    this.aggregateValues = aggregateValues;
  }



   /**
   * Get sort
   * @return sort
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public java.util.Map<String, FactSetProtobufStachV3Sort> getSort() {
    
    if (sort == null) {
      sort = JsonNullable.<java.util.Map<String, FactSetProtobufStachV3Sort>>of(new java.util.HashMap<>());
    }
    return sort.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<java.util.Map<String, FactSetProtobufStachV3Sort>> getSort_JsonNullable() {
    return sort;
  }
  
  @JsonProperty(JSON_PROPERTY_SORT)
  private void setSort_JsonNullable(JsonNullable<java.util.Map<String, FactSetProtobufStachV3Sort>> sort) {
    this.sort = sort;
  }



  /**
   * Return true if this FactSet.Protobuf.Stach.V3.Table.Types.GroupResult object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FactSetProtobufStachV3TableTypesGroupResult factSetProtobufStachV3TableTypesGroupResult = (FactSetProtobufStachV3TableTypesGroupResult) o;
    return equalsNullable(this.by, factSetProtobufStachV3TableTypesGroupResult.by) &&
        Objects.equals(this.collapsedColumnResult, factSetProtobufStachV3TableTypesGroupResult.collapsedColumnResult) &&
        equalsNullable(this.rowPath, factSetProtobufStachV3TableTypesGroupResult.rowPath) &&
        equalsNullable(this.aggregateRows, factSetProtobufStachV3TableTypesGroupResult.aggregateRows) &&
        equalsNullable(this.level, factSetProtobufStachV3TableTypesGroupResult.level) &&
        equalsNullable(this.aggregateValues, factSetProtobufStachV3TableTypesGroupResult.aggregateValues) &&
        equalsNullable(this.sort, factSetProtobufStachV3TableTypesGroupResult.sort);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(by), collapsedColumnResult, hashCodeNullable(rowPath), hashCodeNullable(aggregateRows), hashCodeNullable(level), hashCodeNullable(aggregateValues), hashCodeNullable(sort));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FactSetProtobufStachV3TableTypesGroupResult {\n");
    sb.append("    by: ").append(toIndentedString(by)).append("\n");
    sb.append("    collapsedColumnResult: ").append(toIndentedString(collapsedColumnResult)).append("\n");
    sb.append("    rowPath: ").append(toIndentedString(rowPath)).append("\n");
    sb.append("    aggregateRows: ").append(toIndentedString(aggregateRows)).append("\n");
    sb.append("    level: ").append(toIndentedString(level)).append("\n");
    sb.append("    aggregateValues: ").append(toIndentedString(aggregateValues)).append("\n");
    sb.append("    sort: ").append(toIndentedString(sort)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

