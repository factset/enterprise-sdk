/*
 * GIPS API
 * Allow clients to use GIPS through APIs.
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.GIPS.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.GIPS.models.GoogleProtobufWellKnownTypesValue;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.GIPS.JSON;


/**
 * FactSetProtobufStachV3TableTypesErrorTypesSourceTypesCell
 */
@JsonPropertyOrder({
  FactSetProtobufStachV3TableTypesErrorTypesSourceTypesCell.JSON_PROPERTY_COLUMN_NAME,
  FactSetProtobufStachV3TableTypesErrorTypesSourceTypesCell.JSON_PROPERTY_PRIMARY_KEY_VALUES
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class FactSetProtobufStachV3TableTypesErrorTypesSourceTypesCell implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_COLUMN_NAME = "columnName";
  private JsonNullable<String> columnName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PRIMARY_KEY_VALUES = "primaryKeyValues";
  private JsonNullable<java.util.Map<String, GoogleProtobufWellKnownTypesValue>> primaryKeyValues = JsonNullable.<java.util.Map<String, GoogleProtobufWellKnownTypesValue>>undefined();

  public FactSetProtobufStachV3TableTypesErrorTypesSourceTypesCell() { 
  }

  @JsonCreator
  public FactSetProtobufStachV3TableTypesErrorTypesSourceTypesCell(
    @JsonProperty(JSON_PROPERTY_PRIMARY_KEY_VALUES) java.util.Map<String, GoogleProtobufWellKnownTypesValue> primaryKeyValues
  ) {
    this();
    this.primaryKeyValues = JsonNullable.<java.util.Map<String, GoogleProtobufWellKnownTypesValue>>of(primaryKeyValues);
  }

  public FactSetProtobufStachV3TableTypesErrorTypesSourceTypesCell columnName(String columnName) {
    this.columnName = JsonNullable.<String>of(columnName);
    return this;
  }

   /**
   * Get columnName
   * @return columnName
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getColumnName() {
        return columnName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COLUMN_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getColumnName_JsonNullable() {
    return columnName;
  }
  
  @JsonProperty(JSON_PROPERTY_COLUMN_NAME)
  public void setColumnName_JsonNullable(JsonNullable<String> columnName) {
    this.columnName = columnName;
  }

  public void setColumnName(String columnName) {
    this.columnName = JsonNullable.<String>of(columnName);
  }


   /**
   * Get primaryKeyValues
   * @return primaryKeyValues
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public java.util.Map<String, GoogleProtobufWellKnownTypesValue> getPrimaryKeyValues() {
    
    if (primaryKeyValues == null) {
      primaryKeyValues = JsonNullable.<java.util.Map<String, GoogleProtobufWellKnownTypesValue>>of(new java.util.HashMap<>());
    }
    return primaryKeyValues.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRIMARY_KEY_VALUES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<java.util.Map<String, GoogleProtobufWellKnownTypesValue>> getPrimaryKeyValues_JsonNullable() {
    return primaryKeyValues;
  }
  
  @JsonProperty(JSON_PROPERTY_PRIMARY_KEY_VALUES)
  private void setPrimaryKeyValues_JsonNullable(JsonNullable<java.util.Map<String, GoogleProtobufWellKnownTypesValue>> primaryKeyValues) {
    this.primaryKeyValues = primaryKeyValues;
  }



  /**
   * Return true if this FactSet.Protobuf.Stach.V3.Table.Types.Error.Types.Source.Types.Cell object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FactSetProtobufStachV3TableTypesErrorTypesSourceTypesCell factSetProtobufStachV3TableTypesErrorTypesSourceTypesCell = (FactSetProtobufStachV3TableTypesErrorTypesSourceTypesCell) o;
    return equalsNullable(this.columnName, factSetProtobufStachV3TableTypesErrorTypesSourceTypesCell.columnName) &&
        equalsNullable(this.primaryKeyValues, factSetProtobufStachV3TableTypesErrorTypesSourceTypesCell.primaryKeyValues);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(columnName), hashCodeNullable(primaryKeyValues));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FactSetProtobufStachV3TableTypesErrorTypesSourceTypesCell {\n");
    sb.append("    columnName: ").append(toIndentedString(columnName)).append("\n");
    sb.append("    primaryKeyValues: ").append(toIndentedString(primaryKeyValues)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

