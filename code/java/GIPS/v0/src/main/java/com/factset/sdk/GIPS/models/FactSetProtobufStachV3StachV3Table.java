/*
 * GIPS API
 * Allow clients to use GIPS through APIs.
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.GIPS.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.GIPS.models.FactSetProtobufStachV3StachV3TableTypesColumn;
import com.factset.sdk.GIPS.models.FactSetProtobufStachV3Table;
import com.factset.sdk.GIPS.models.FactSetProtobufStachV3ViewsTypesView;
import com.factset.sdk.GIPS.models.GoogleProtobufWellKnownTypesStruct;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.GIPS.JSON;


/**
 * FactSetProtobufStachV3StachV3Table
 */
@JsonPropertyOrder({
  FactSetProtobufStachV3StachV3Table.JSON_PROPERTY_VERSION,
  FactSetProtobufStachV3StachV3Table.JSON_PROPERTY_NAME,
  FactSetProtobufStachV3StachV3Table.JSON_PROPERTY_COLUMNS,
  FactSetProtobufStachV3StachV3Table.JSON_PROPERTY_TABLE,
  FactSetProtobufStachV3StachV3Table.JSON_PROPERTY_MULTI_LEVEL_HEADERS_TABLE,
  FactSetProtobufStachV3StachV3Table.JSON_PROPERTY_VIEWS,
  FactSetProtobufStachV3StachV3Table.JSON_PROPERTY_ROWS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class FactSetProtobufStachV3StachV3Table implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_VERSION = "version";
  private JsonNullable<String> version = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_COLUMNS = "columns";
  private JsonNullable<java.util.List<FactSetProtobufStachV3StachV3TableTypesColumn>> columns = JsonNullable.<java.util.List<FactSetProtobufStachV3StachV3TableTypesColumn>>undefined();

  public static final String JSON_PROPERTY_TABLE = "table";
  private FactSetProtobufStachV3Table table;

  public static final String JSON_PROPERTY_MULTI_LEVEL_HEADERS_TABLE = "multiLevelHeadersTable";
  private FactSetProtobufStachV3StachV3Table multiLevelHeadersTable;

  public static final String JSON_PROPERTY_VIEWS = "views";
  private JsonNullable<java.util.List<FactSetProtobufStachV3ViewsTypesView>> views = JsonNullable.<java.util.List<FactSetProtobufStachV3ViewsTypesView>>undefined();

  public static final String JSON_PROPERTY_ROWS = "rows";
  private JsonNullable<java.util.List<GoogleProtobufWellKnownTypesStruct>> rows = JsonNullable.<java.util.List<GoogleProtobufWellKnownTypesStruct>>undefined();

  public FactSetProtobufStachV3StachV3Table() { 
  }

  @JsonCreator
  public FactSetProtobufStachV3StachV3Table(
    @JsonProperty(JSON_PROPERTY_COLUMNS) java.util.List<FactSetProtobufStachV3StachV3TableTypesColumn> columns, 
    @JsonProperty(JSON_PROPERTY_VIEWS) java.util.List<FactSetProtobufStachV3ViewsTypesView> views, 
    @JsonProperty(JSON_PROPERTY_ROWS) java.util.List<GoogleProtobufWellKnownTypesStruct> rows
  ) {
    this();
    this.columns = JsonNullable.<java.util.List<FactSetProtobufStachV3StachV3TableTypesColumn>>of(columns);
    this.views = JsonNullable.<java.util.List<FactSetProtobufStachV3ViewsTypesView>>of(views);
    this.rows = JsonNullable.<java.util.List<GoogleProtobufWellKnownTypesStruct>>of(rows);
  }

  public FactSetProtobufStachV3StachV3Table version(String version) {
    this.version = JsonNullable.<String>of(version);
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getVersion() {
        return version.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getVersion_JsonNullable() {
    return version;
  }
  
  @JsonProperty(JSON_PROPERTY_VERSION)
  public void setVersion_JsonNullable(JsonNullable<String> version) {
    this.version = version;
  }

  public void setVersion(String version) {
    this.version = JsonNullable.<String>of(version);
  }


  public FactSetProtobufStachV3StachV3Table name(String name) {
    this.name = JsonNullable.<String>of(name);
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(String name) {
    this.name = JsonNullable.<String>of(name);
  }


   /**
   * Get columns
   * @return columns
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public java.util.List<FactSetProtobufStachV3StachV3TableTypesColumn> getColumns() {
    
    if (columns == null) {
      columns = JsonNullable.<java.util.List<FactSetProtobufStachV3StachV3TableTypesColumn>>of(new java.util.ArrayList<>());
    }
    return columns.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COLUMNS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<java.util.List<FactSetProtobufStachV3StachV3TableTypesColumn>> getColumns_JsonNullable() {
    return columns;
  }
  
  @JsonProperty(JSON_PROPERTY_COLUMNS)
  private void setColumns_JsonNullable(JsonNullable<java.util.List<FactSetProtobufStachV3StachV3TableTypesColumn>> columns) {
    this.columns = columns;
  }



  public FactSetProtobufStachV3StachV3Table table(FactSetProtobufStachV3Table table) {
    this.table = table;
    return this;
  }

   /**
   * Get table
   * @return table
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FactSetProtobufStachV3Table getTable() {
    return table;
  }


  @JsonProperty(JSON_PROPERTY_TABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTable(FactSetProtobufStachV3Table table) {
    this.table = table;
  }


  public FactSetProtobufStachV3StachV3Table multiLevelHeadersTable(FactSetProtobufStachV3StachV3Table multiLevelHeadersTable) {
    this.multiLevelHeadersTable = multiLevelHeadersTable;
    return this;
  }

   /**
   * Get multiLevelHeadersTable
   * @return multiLevelHeadersTable
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MULTI_LEVEL_HEADERS_TABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FactSetProtobufStachV3StachV3Table getMultiLevelHeadersTable() {
    return multiLevelHeadersTable;
  }


  @JsonProperty(JSON_PROPERTY_MULTI_LEVEL_HEADERS_TABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMultiLevelHeadersTable(FactSetProtobufStachV3StachV3Table multiLevelHeadersTable) {
    this.multiLevelHeadersTable = multiLevelHeadersTable;
  }


   /**
   * Get views
   * @return views
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public java.util.List<FactSetProtobufStachV3ViewsTypesView> getViews() {
    
    if (views == null) {
      views = JsonNullable.<java.util.List<FactSetProtobufStachV3ViewsTypesView>>of(new java.util.ArrayList<>());
    }
    return views.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VIEWS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<java.util.List<FactSetProtobufStachV3ViewsTypesView>> getViews_JsonNullable() {
    return views;
  }
  
  @JsonProperty(JSON_PROPERTY_VIEWS)
  private void setViews_JsonNullable(JsonNullable<java.util.List<FactSetProtobufStachV3ViewsTypesView>> views) {
    this.views = views;
  }



   /**
   * Get rows
   * @return rows
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public java.util.List<GoogleProtobufWellKnownTypesStruct> getRows() {
    
    if (rows == null) {
      rows = JsonNullable.<java.util.List<GoogleProtobufWellKnownTypesStruct>>of(new java.util.ArrayList<>());
    }
    return rows.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ROWS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<java.util.List<GoogleProtobufWellKnownTypesStruct>> getRows_JsonNullable() {
    return rows;
  }
  
  @JsonProperty(JSON_PROPERTY_ROWS)
  private void setRows_JsonNullable(JsonNullable<java.util.List<GoogleProtobufWellKnownTypesStruct>> rows) {
    this.rows = rows;
  }



  /**
   * Return true if this FactSet.Protobuf.Stach.V3.StachV3Table object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FactSetProtobufStachV3StachV3Table factSetProtobufStachV3StachV3Table = (FactSetProtobufStachV3StachV3Table) o;
    return equalsNullable(this.version, factSetProtobufStachV3StachV3Table.version) &&
        equalsNullable(this.name, factSetProtobufStachV3StachV3Table.name) &&
        equalsNullable(this.columns, factSetProtobufStachV3StachV3Table.columns) &&
        Objects.equals(this.table, factSetProtobufStachV3StachV3Table.table) &&
        Objects.equals(this.multiLevelHeadersTable, factSetProtobufStachV3StachV3Table.multiLevelHeadersTable) &&
        equalsNullable(this.views, factSetProtobufStachV3StachV3Table.views) &&
        equalsNullable(this.rows, factSetProtobufStachV3StachV3Table.rows);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(version), hashCodeNullable(name), hashCodeNullable(columns), table, multiLevelHeadersTable, hashCodeNullable(views), hashCodeNullable(rows));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FactSetProtobufStachV3StachV3Table {\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    columns: ").append(toIndentedString(columns)).append("\n");
    sb.append("    table: ").append(toIndentedString(table)).append("\n");
    sb.append("    multiLevelHeadersTable: ").append(toIndentedString(multiLevelHeadersTable)).append("\n");
    sb.append("    views: ").append(toIndentedString(views)).append("\n");
    sb.append("    rows: ").append(toIndentedString(rows)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

