/*
 * GIPS API
 * Allow clients to use GIPS through APIs.
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.GIPS.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.GIPS.models.FactSetProtobufFormatV1NumberFormatTypesCurrencyStandardSpecifier;
import com.factset.sdk.GIPS.models.FactSetProtobufFormatV1NumberFormatTypesDigits;
import com.factset.sdk.GIPS.models.FactSetProtobufFormatV1NumberFormatTypesExponentialStandardSpecifier;
import com.factset.sdk.GIPS.models.FactSetProtobufFormatV1NumberFormatTypesNumericStandardSpecifier;
import com.factset.sdk.GIPS.models.FactSetProtobufFormatV1NumberFormatTypesPercentStandardSpecifier;
import com.factset.sdk.GIPS.models.FactSetProtobufFormatV1NumberFormatTypesRounding;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.GIPS.JSON;


/**
 * FactSetProtobufFormatV1NumberFormat
 */
@JsonPropertyOrder({
  FactSetProtobufFormatV1NumberFormat.JSON_PROPERTY_CURRENCY_SPECIFIER,
  FactSetProtobufFormatV1NumberFormat.JSON_PROPERTY_EXPONENTIAL_SPECIFIER,
  FactSetProtobufFormatV1NumberFormat.JSON_PROPERTY_NUMERIC_SPECIFIER,
  FactSetProtobufFormatV1NumberFormat.JSON_PROPERTY_PERCENT_SPECIFIER,
  FactSetProtobufFormatV1NumberFormat.JSON_PROPERTY_CURRENCY_CODE,
  FactSetProtobufFormatV1NumberFormat.JSON_PROPERTY_CURRENCY_SYMBOL,
  FactSetProtobufFormatV1NumberFormat.JSON_PROPERTY_ZERO_VALUE,
  FactSetProtobufFormatV1NumberFormat.JSON_PROPERTY_DIGITS,
  FactSetProtobufFormatV1NumberFormat.JSON_PROPERTY_NEGATIVE_SIGN,
  FactSetProtobufFormatV1NumberFormat.JSON_PROPERTY_POSITIVE_SIGN,
  FactSetProtobufFormatV1NumberFormat.JSON_PROPERTY_DECIMAL_DIGITS,
  FactSetProtobufFormatV1NumberFormat.JSON_PROPERTY_DECIMAL_SEPARATOR,
  FactSetProtobufFormatV1NumberFormat.JSON_PROPERTY_GROUP_SEPARATOR,
  FactSetProtobufFormatV1NumberFormat.JSON_PROPERTY_GROUP_SIZES,
  FactSetProtobufFormatV1NumberFormat.JSON_PROPERTY_NEGATIVE_INFINITY_SYMBOL,
  FactSetProtobufFormatV1NumberFormat.JSON_PROPERTY_POSITIVE_INFINITY_SYMBOL,
  FactSetProtobufFormatV1NumberFormat.JSON_PROPERTY_NAN_SYMBOL,
  FactSetProtobufFormatV1NumberFormat.JSON_PROPERTY_PERCENT_SYMBOL,
  FactSetProtobufFormatV1NumberFormat.JSON_PROPERTY_PER_MILLE_SYMBOL,
  FactSetProtobufFormatV1NumberFormat.JSON_PROPERTY_DIGIT_SUBSTITUTION,
  FactSetProtobufFormatV1NumberFormat.JSON_PROPERTY_ROUNDING
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class FactSetProtobufFormatV1NumberFormat implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_CURRENCY_SPECIFIER = "currencySpecifier";
  private FactSetProtobufFormatV1NumberFormatTypesCurrencyStandardSpecifier currencySpecifier;

  public static final String JSON_PROPERTY_EXPONENTIAL_SPECIFIER = "exponentialSpecifier";
  private FactSetProtobufFormatV1NumberFormatTypesExponentialStandardSpecifier exponentialSpecifier;

  public static final String JSON_PROPERTY_NUMERIC_SPECIFIER = "numericSpecifier";
  private FactSetProtobufFormatV1NumberFormatTypesNumericStandardSpecifier numericSpecifier;

  public static final String JSON_PROPERTY_PERCENT_SPECIFIER = "percentSpecifier";
  private FactSetProtobufFormatV1NumberFormatTypesPercentStandardSpecifier percentSpecifier;

  public static final String JSON_PROPERTY_CURRENCY_CODE = "currencyCode";
  private JsonNullable<String> currencyCode = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CURRENCY_SYMBOL = "currencySymbol";
  private JsonNullable<String> currencySymbol = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ZERO_VALUE = "zeroValue";
  private JsonNullable<String> zeroValue = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DIGITS = "digits";
  private JsonNullable<java.util.List<String>> digits = JsonNullable.<java.util.List<String>>undefined();

  public static final String JSON_PROPERTY_NEGATIVE_SIGN = "negativeSign";
  private JsonNullable<String> negativeSign = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_POSITIVE_SIGN = "positiveSign";
  private JsonNullable<String> positiveSign = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DECIMAL_DIGITS = "decimalDigits";
  private Integer decimalDigits;

  public static final String JSON_PROPERTY_DECIMAL_SEPARATOR = "decimalSeparator";
  private JsonNullable<String> decimalSeparator = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_GROUP_SEPARATOR = "groupSeparator";
  private JsonNullable<String> groupSeparator = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_GROUP_SIZES = "groupSizes";
  private JsonNullable<java.util.List<Integer>> groupSizes = JsonNullable.<java.util.List<Integer>>undefined();

  public static final String JSON_PROPERTY_NEGATIVE_INFINITY_SYMBOL = "negativeInfinitySymbol";
  private JsonNullable<String> negativeInfinitySymbol = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_POSITIVE_INFINITY_SYMBOL = "positiveInfinitySymbol";
  private JsonNullable<String> positiveInfinitySymbol = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAN_SYMBOL = "nanSymbol";
  private JsonNullable<String> nanSymbol = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PERCENT_SYMBOL = "percentSymbol";
  private JsonNullable<String> percentSymbol = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PER_MILLE_SYMBOL = "perMilleSymbol";
  private JsonNullable<String> perMilleSymbol = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DIGIT_SUBSTITUTION = "digitSubstitution";
  private FactSetProtobufFormatV1NumberFormatTypesDigits digitSubstitution;

  public static final String JSON_PROPERTY_ROUNDING = "rounding";
  private FactSetProtobufFormatV1NumberFormatTypesRounding rounding;

  public FactSetProtobufFormatV1NumberFormat() { 
  }

  @JsonCreator
  public FactSetProtobufFormatV1NumberFormat(
    @JsonProperty(JSON_PROPERTY_DIGITS) java.util.List<String> digits, 
    @JsonProperty(JSON_PROPERTY_GROUP_SIZES) java.util.List<Integer> groupSizes
  ) {
    this();
    this.digits = JsonNullable.<java.util.List<String>>of(digits);
    this.groupSizes = JsonNullable.<java.util.List<Integer>>of(groupSizes);
  }

  public FactSetProtobufFormatV1NumberFormat currencySpecifier(FactSetProtobufFormatV1NumberFormatTypesCurrencyStandardSpecifier currencySpecifier) {
    this.currencySpecifier = currencySpecifier;
    return this;
  }

   /**
   * Get currencySpecifier
   * @return currencySpecifier
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CURRENCY_SPECIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FactSetProtobufFormatV1NumberFormatTypesCurrencyStandardSpecifier getCurrencySpecifier() {
    return currencySpecifier;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY_SPECIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrencySpecifier(FactSetProtobufFormatV1NumberFormatTypesCurrencyStandardSpecifier currencySpecifier) {
    this.currencySpecifier = currencySpecifier;
  }


  public FactSetProtobufFormatV1NumberFormat exponentialSpecifier(FactSetProtobufFormatV1NumberFormatTypesExponentialStandardSpecifier exponentialSpecifier) {
    this.exponentialSpecifier = exponentialSpecifier;
    return this;
  }

   /**
   * Get exponentialSpecifier
   * @return exponentialSpecifier
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EXPONENTIAL_SPECIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FactSetProtobufFormatV1NumberFormatTypesExponentialStandardSpecifier getExponentialSpecifier() {
    return exponentialSpecifier;
  }


  @JsonProperty(JSON_PROPERTY_EXPONENTIAL_SPECIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExponentialSpecifier(FactSetProtobufFormatV1NumberFormatTypesExponentialStandardSpecifier exponentialSpecifier) {
    this.exponentialSpecifier = exponentialSpecifier;
  }


  public FactSetProtobufFormatV1NumberFormat numericSpecifier(FactSetProtobufFormatV1NumberFormatTypesNumericStandardSpecifier numericSpecifier) {
    this.numericSpecifier = numericSpecifier;
    return this;
  }

   /**
   * Get numericSpecifier
   * @return numericSpecifier
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NUMERIC_SPECIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FactSetProtobufFormatV1NumberFormatTypesNumericStandardSpecifier getNumericSpecifier() {
    return numericSpecifier;
  }


  @JsonProperty(JSON_PROPERTY_NUMERIC_SPECIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumericSpecifier(FactSetProtobufFormatV1NumberFormatTypesNumericStandardSpecifier numericSpecifier) {
    this.numericSpecifier = numericSpecifier;
  }


  public FactSetProtobufFormatV1NumberFormat percentSpecifier(FactSetProtobufFormatV1NumberFormatTypesPercentStandardSpecifier percentSpecifier) {
    this.percentSpecifier = percentSpecifier;
    return this;
  }

   /**
   * Get percentSpecifier
   * @return percentSpecifier
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PERCENT_SPECIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FactSetProtobufFormatV1NumberFormatTypesPercentStandardSpecifier getPercentSpecifier() {
    return percentSpecifier;
  }


  @JsonProperty(JSON_PROPERTY_PERCENT_SPECIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPercentSpecifier(FactSetProtobufFormatV1NumberFormatTypesPercentStandardSpecifier percentSpecifier) {
    this.percentSpecifier = percentSpecifier;
  }


  public FactSetProtobufFormatV1NumberFormat currencyCode(String currencyCode) {
    this.currencyCode = JsonNullable.<String>of(currencyCode);
    return this;
  }

   /**
   * Get currencyCode
   * @return currencyCode
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCurrencyCode() {
        return currencyCode.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CURRENCY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCurrencyCode_JsonNullable() {
    return currencyCode;
  }
  
  @JsonProperty(JSON_PROPERTY_CURRENCY_CODE)
  public void setCurrencyCode_JsonNullable(JsonNullable<String> currencyCode) {
    this.currencyCode = currencyCode;
  }

  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = JsonNullable.<String>of(currencyCode);
  }


  public FactSetProtobufFormatV1NumberFormat currencySymbol(String currencySymbol) {
    this.currencySymbol = JsonNullable.<String>of(currencySymbol);
    return this;
  }

   /**
   * Get currencySymbol
   * @return currencySymbol
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCurrencySymbol() {
        return currencySymbol.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CURRENCY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCurrencySymbol_JsonNullable() {
    return currencySymbol;
  }
  
  @JsonProperty(JSON_PROPERTY_CURRENCY_SYMBOL)
  public void setCurrencySymbol_JsonNullable(JsonNullable<String> currencySymbol) {
    this.currencySymbol = currencySymbol;
  }

  public void setCurrencySymbol(String currencySymbol) {
    this.currencySymbol = JsonNullable.<String>of(currencySymbol);
  }


  public FactSetProtobufFormatV1NumberFormat zeroValue(String zeroValue) {
    this.zeroValue = JsonNullable.<String>of(zeroValue);
    return this;
  }

   /**
   * Get zeroValue
   * @return zeroValue
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getZeroValue() {
        return zeroValue.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ZERO_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getZeroValue_JsonNullable() {
    return zeroValue;
  }
  
  @JsonProperty(JSON_PROPERTY_ZERO_VALUE)
  public void setZeroValue_JsonNullable(JsonNullable<String> zeroValue) {
    this.zeroValue = zeroValue;
  }

  public void setZeroValue(String zeroValue) {
    this.zeroValue = JsonNullable.<String>of(zeroValue);
  }


   /**
   * Get digits
   * @return digits
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public java.util.List<String> getDigits() {
    
    if (digits == null) {
      digits = JsonNullable.<java.util.List<String>>of(new java.util.ArrayList<>());
    }
    return digits.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DIGITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<java.util.List<String>> getDigits_JsonNullable() {
    return digits;
  }
  
  @JsonProperty(JSON_PROPERTY_DIGITS)
  private void setDigits_JsonNullable(JsonNullable<java.util.List<String>> digits) {
    this.digits = digits;
  }



  public FactSetProtobufFormatV1NumberFormat negativeSign(String negativeSign) {
    this.negativeSign = JsonNullable.<String>of(negativeSign);
    return this;
  }

   /**
   * Get negativeSign
   * @return negativeSign
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNegativeSign() {
        return negativeSign.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NEGATIVE_SIGN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNegativeSign_JsonNullable() {
    return negativeSign;
  }
  
  @JsonProperty(JSON_PROPERTY_NEGATIVE_SIGN)
  public void setNegativeSign_JsonNullable(JsonNullable<String> negativeSign) {
    this.negativeSign = negativeSign;
  }

  public void setNegativeSign(String negativeSign) {
    this.negativeSign = JsonNullable.<String>of(negativeSign);
  }


  public FactSetProtobufFormatV1NumberFormat positiveSign(String positiveSign) {
    this.positiveSign = JsonNullable.<String>of(positiveSign);
    return this;
  }

   /**
   * Get positiveSign
   * @return positiveSign
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPositiveSign() {
        return positiveSign.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_POSITIVE_SIGN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPositiveSign_JsonNullable() {
    return positiveSign;
  }
  
  @JsonProperty(JSON_PROPERTY_POSITIVE_SIGN)
  public void setPositiveSign_JsonNullable(JsonNullable<String> positiveSign) {
    this.positiveSign = positiveSign;
  }

  public void setPositiveSign(String positiveSign) {
    this.positiveSign = JsonNullable.<String>of(positiveSign);
  }


  public FactSetProtobufFormatV1NumberFormat decimalDigits(Integer decimalDigits) {
    this.decimalDigits = decimalDigits;
    return this;
  }

   /**
   * Get decimalDigits
   * @return decimalDigits
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DECIMAL_DIGITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDecimalDigits() {
    return decimalDigits;
  }


  @JsonProperty(JSON_PROPERTY_DECIMAL_DIGITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDecimalDigits(Integer decimalDigits) {
    this.decimalDigits = decimalDigits;
  }


  public FactSetProtobufFormatV1NumberFormat decimalSeparator(String decimalSeparator) {
    this.decimalSeparator = JsonNullable.<String>of(decimalSeparator);
    return this;
  }

   /**
   * Get decimalSeparator
   * @return decimalSeparator
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDecimalSeparator() {
        return decimalSeparator.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DECIMAL_SEPARATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDecimalSeparator_JsonNullable() {
    return decimalSeparator;
  }
  
  @JsonProperty(JSON_PROPERTY_DECIMAL_SEPARATOR)
  public void setDecimalSeparator_JsonNullable(JsonNullable<String> decimalSeparator) {
    this.decimalSeparator = decimalSeparator;
  }

  public void setDecimalSeparator(String decimalSeparator) {
    this.decimalSeparator = JsonNullable.<String>of(decimalSeparator);
  }


  public FactSetProtobufFormatV1NumberFormat groupSeparator(String groupSeparator) {
    this.groupSeparator = JsonNullable.<String>of(groupSeparator);
    return this;
  }

   /**
   * Get groupSeparator
   * @return groupSeparator
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getGroupSeparator() {
        return groupSeparator.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GROUP_SEPARATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getGroupSeparator_JsonNullable() {
    return groupSeparator;
  }
  
  @JsonProperty(JSON_PROPERTY_GROUP_SEPARATOR)
  public void setGroupSeparator_JsonNullable(JsonNullable<String> groupSeparator) {
    this.groupSeparator = groupSeparator;
  }

  public void setGroupSeparator(String groupSeparator) {
    this.groupSeparator = JsonNullable.<String>of(groupSeparator);
  }


   /**
   * Get groupSizes
   * @return groupSizes
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public java.util.List<Integer> getGroupSizes() {
    
    if (groupSizes == null) {
      groupSizes = JsonNullable.<java.util.List<Integer>>of(new java.util.ArrayList<>());
    }
    return groupSizes.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GROUP_SIZES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<java.util.List<Integer>> getGroupSizes_JsonNullable() {
    return groupSizes;
  }
  
  @JsonProperty(JSON_PROPERTY_GROUP_SIZES)
  private void setGroupSizes_JsonNullable(JsonNullable<java.util.List<Integer>> groupSizes) {
    this.groupSizes = groupSizes;
  }



  public FactSetProtobufFormatV1NumberFormat negativeInfinitySymbol(String negativeInfinitySymbol) {
    this.negativeInfinitySymbol = JsonNullable.<String>of(negativeInfinitySymbol);
    return this;
  }

   /**
   * Get negativeInfinitySymbol
   * @return negativeInfinitySymbol
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNegativeInfinitySymbol() {
        return negativeInfinitySymbol.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NEGATIVE_INFINITY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNegativeInfinitySymbol_JsonNullable() {
    return negativeInfinitySymbol;
  }
  
  @JsonProperty(JSON_PROPERTY_NEGATIVE_INFINITY_SYMBOL)
  public void setNegativeInfinitySymbol_JsonNullable(JsonNullable<String> negativeInfinitySymbol) {
    this.negativeInfinitySymbol = negativeInfinitySymbol;
  }

  public void setNegativeInfinitySymbol(String negativeInfinitySymbol) {
    this.negativeInfinitySymbol = JsonNullable.<String>of(negativeInfinitySymbol);
  }


  public FactSetProtobufFormatV1NumberFormat positiveInfinitySymbol(String positiveInfinitySymbol) {
    this.positiveInfinitySymbol = JsonNullable.<String>of(positiveInfinitySymbol);
    return this;
  }

   /**
   * Get positiveInfinitySymbol
   * @return positiveInfinitySymbol
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPositiveInfinitySymbol() {
        return positiveInfinitySymbol.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_POSITIVE_INFINITY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPositiveInfinitySymbol_JsonNullable() {
    return positiveInfinitySymbol;
  }
  
  @JsonProperty(JSON_PROPERTY_POSITIVE_INFINITY_SYMBOL)
  public void setPositiveInfinitySymbol_JsonNullable(JsonNullable<String> positiveInfinitySymbol) {
    this.positiveInfinitySymbol = positiveInfinitySymbol;
  }

  public void setPositiveInfinitySymbol(String positiveInfinitySymbol) {
    this.positiveInfinitySymbol = JsonNullable.<String>of(positiveInfinitySymbol);
  }


  public FactSetProtobufFormatV1NumberFormat nanSymbol(String nanSymbol) {
    this.nanSymbol = JsonNullable.<String>of(nanSymbol);
    return this;
  }

   /**
   * Get nanSymbol
   * @return nanSymbol
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNanSymbol() {
        return nanSymbol.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAN_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNanSymbol_JsonNullable() {
    return nanSymbol;
  }
  
  @JsonProperty(JSON_PROPERTY_NAN_SYMBOL)
  public void setNanSymbol_JsonNullable(JsonNullable<String> nanSymbol) {
    this.nanSymbol = nanSymbol;
  }

  public void setNanSymbol(String nanSymbol) {
    this.nanSymbol = JsonNullable.<String>of(nanSymbol);
  }


  public FactSetProtobufFormatV1NumberFormat percentSymbol(String percentSymbol) {
    this.percentSymbol = JsonNullable.<String>of(percentSymbol);
    return this;
  }

   /**
   * Get percentSymbol
   * @return percentSymbol
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPercentSymbol() {
        return percentSymbol.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PERCENT_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPercentSymbol_JsonNullable() {
    return percentSymbol;
  }
  
  @JsonProperty(JSON_PROPERTY_PERCENT_SYMBOL)
  public void setPercentSymbol_JsonNullable(JsonNullable<String> percentSymbol) {
    this.percentSymbol = percentSymbol;
  }

  public void setPercentSymbol(String percentSymbol) {
    this.percentSymbol = JsonNullable.<String>of(percentSymbol);
  }


  public FactSetProtobufFormatV1NumberFormat perMilleSymbol(String perMilleSymbol) {
    this.perMilleSymbol = JsonNullable.<String>of(perMilleSymbol);
    return this;
  }

   /**
   * Get perMilleSymbol
   * @return perMilleSymbol
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPerMilleSymbol() {
        return perMilleSymbol.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PER_MILLE_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPerMilleSymbol_JsonNullable() {
    return perMilleSymbol;
  }
  
  @JsonProperty(JSON_PROPERTY_PER_MILLE_SYMBOL)
  public void setPerMilleSymbol_JsonNullable(JsonNullable<String> perMilleSymbol) {
    this.perMilleSymbol = perMilleSymbol;
  }

  public void setPerMilleSymbol(String perMilleSymbol) {
    this.perMilleSymbol = JsonNullable.<String>of(perMilleSymbol);
  }


  public FactSetProtobufFormatV1NumberFormat digitSubstitution(FactSetProtobufFormatV1NumberFormatTypesDigits digitSubstitution) {
    this.digitSubstitution = digitSubstitution;
    return this;
  }

   /**
   * Get digitSubstitution
   * @return digitSubstitution
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DIGIT_SUBSTITUTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FactSetProtobufFormatV1NumberFormatTypesDigits getDigitSubstitution() {
    return digitSubstitution;
  }


  @JsonProperty(JSON_PROPERTY_DIGIT_SUBSTITUTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDigitSubstitution(FactSetProtobufFormatV1NumberFormatTypesDigits digitSubstitution) {
    this.digitSubstitution = digitSubstitution;
  }


  public FactSetProtobufFormatV1NumberFormat rounding(FactSetProtobufFormatV1NumberFormatTypesRounding rounding) {
    this.rounding = rounding;
    return this;
  }

   /**
   * Get rounding
   * @return rounding
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ROUNDING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FactSetProtobufFormatV1NumberFormatTypesRounding getRounding() {
    return rounding;
  }


  @JsonProperty(JSON_PROPERTY_ROUNDING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRounding(FactSetProtobufFormatV1NumberFormatTypesRounding rounding) {
    this.rounding = rounding;
  }


  /**
   * Return true if this FactSet.Protobuf.Format.V1.NumberFormat object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FactSetProtobufFormatV1NumberFormat factSetProtobufFormatV1NumberFormat = (FactSetProtobufFormatV1NumberFormat) o;
    return Objects.equals(this.currencySpecifier, factSetProtobufFormatV1NumberFormat.currencySpecifier) &&
        Objects.equals(this.exponentialSpecifier, factSetProtobufFormatV1NumberFormat.exponentialSpecifier) &&
        Objects.equals(this.numericSpecifier, factSetProtobufFormatV1NumberFormat.numericSpecifier) &&
        Objects.equals(this.percentSpecifier, factSetProtobufFormatV1NumberFormat.percentSpecifier) &&
        equalsNullable(this.currencyCode, factSetProtobufFormatV1NumberFormat.currencyCode) &&
        equalsNullable(this.currencySymbol, factSetProtobufFormatV1NumberFormat.currencySymbol) &&
        equalsNullable(this.zeroValue, factSetProtobufFormatV1NumberFormat.zeroValue) &&
        equalsNullable(this.digits, factSetProtobufFormatV1NumberFormat.digits) &&
        equalsNullable(this.negativeSign, factSetProtobufFormatV1NumberFormat.negativeSign) &&
        equalsNullable(this.positiveSign, factSetProtobufFormatV1NumberFormat.positiveSign) &&
        Objects.equals(this.decimalDigits, factSetProtobufFormatV1NumberFormat.decimalDigits) &&
        equalsNullable(this.decimalSeparator, factSetProtobufFormatV1NumberFormat.decimalSeparator) &&
        equalsNullable(this.groupSeparator, factSetProtobufFormatV1NumberFormat.groupSeparator) &&
        equalsNullable(this.groupSizes, factSetProtobufFormatV1NumberFormat.groupSizes) &&
        equalsNullable(this.negativeInfinitySymbol, factSetProtobufFormatV1NumberFormat.negativeInfinitySymbol) &&
        equalsNullable(this.positiveInfinitySymbol, factSetProtobufFormatV1NumberFormat.positiveInfinitySymbol) &&
        equalsNullable(this.nanSymbol, factSetProtobufFormatV1NumberFormat.nanSymbol) &&
        equalsNullable(this.percentSymbol, factSetProtobufFormatV1NumberFormat.percentSymbol) &&
        equalsNullable(this.perMilleSymbol, factSetProtobufFormatV1NumberFormat.perMilleSymbol) &&
        Objects.equals(this.digitSubstitution, factSetProtobufFormatV1NumberFormat.digitSubstitution) &&
        Objects.equals(this.rounding, factSetProtobufFormatV1NumberFormat.rounding);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(currencySpecifier, exponentialSpecifier, numericSpecifier, percentSpecifier, hashCodeNullable(currencyCode), hashCodeNullable(currencySymbol), hashCodeNullable(zeroValue), hashCodeNullable(digits), hashCodeNullable(negativeSign), hashCodeNullable(positiveSign), decimalDigits, hashCodeNullable(decimalSeparator), hashCodeNullable(groupSeparator), hashCodeNullable(groupSizes), hashCodeNullable(negativeInfinitySymbol), hashCodeNullable(positiveInfinitySymbol), hashCodeNullable(nanSymbol), hashCodeNullable(percentSymbol), hashCodeNullable(perMilleSymbol), digitSubstitution, rounding);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FactSetProtobufFormatV1NumberFormat {\n");
    sb.append("    currencySpecifier: ").append(toIndentedString(currencySpecifier)).append("\n");
    sb.append("    exponentialSpecifier: ").append(toIndentedString(exponentialSpecifier)).append("\n");
    sb.append("    numericSpecifier: ").append(toIndentedString(numericSpecifier)).append("\n");
    sb.append("    percentSpecifier: ").append(toIndentedString(percentSpecifier)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    currencySymbol: ").append(toIndentedString(currencySymbol)).append("\n");
    sb.append("    zeroValue: ").append(toIndentedString(zeroValue)).append("\n");
    sb.append("    digits: ").append(toIndentedString(digits)).append("\n");
    sb.append("    negativeSign: ").append(toIndentedString(negativeSign)).append("\n");
    sb.append("    positiveSign: ").append(toIndentedString(positiveSign)).append("\n");
    sb.append("    decimalDigits: ").append(toIndentedString(decimalDigits)).append("\n");
    sb.append("    decimalSeparator: ").append(toIndentedString(decimalSeparator)).append("\n");
    sb.append("    groupSeparator: ").append(toIndentedString(groupSeparator)).append("\n");
    sb.append("    groupSizes: ").append(toIndentedString(groupSizes)).append("\n");
    sb.append("    negativeInfinitySymbol: ").append(toIndentedString(negativeInfinitySymbol)).append("\n");
    sb.append("    positiveInfinitySymbol: ").append(toIndentedString(positiveInfinitySymbol)).append("\n");
    sb.append("    nanSymbol: ").append(toIndentedString(nanSymbol)).append("\n");
    sb.append("    percentSymbol: ").append(toIndentedString(percentSymbol)).append("\n");
    sb.append("    perMilleSymbol: ").append(toIndentedString(perMilleSymbol)).append("\n");
    sb.append("    digitSubstitution: ").append(toIndentedString(digitSubstitution)).append("\n");
    sb.append("    rounding: ").append(toIndentedString(rounding)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

