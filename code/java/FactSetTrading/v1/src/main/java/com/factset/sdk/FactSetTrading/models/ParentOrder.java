/*
 * Trading API
 * Allow clients to trade orders.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetTrading.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.FactSetTrading.models.ParentId;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetTrading.JSON;


/**
 * Parent Order
 */
@ApiModel(description = "Parent Order")
@JsonPropertyOrder({
  ParentOrder.JSON_PROPERTY_PARENT_ID,
  ParentOrder.JSON_PROPERTY_USER_GROUP,
  ParentOrder.JSON_PROPERTY_USER_DEFINED_FIELDS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class ParentOrder implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_PARENT_ID = "parentId";
  private ParentId parentId;

  public static final String JSON_PROPERTY_USER_GROUP = "userGroup";
  private JsonNullable<String> userGroup = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USER_DEFINED_FIELDS = "userDefinedFields";
  private JsonNullable<java.util.Map<String, String>> userDefinedFields = JsonNullable.<java.util.Map<String, String>>undefined();

  public ParentOrder() { 
  }

  @JsonCreator
  public ParentOrder(
    @JsonProperty(value=JSON_PROPERTY_PARENT_ID, required=true) ParentId parentId
  ) {
    this();
    this.parentId = parentId;
  }

  public ParentOrder parentId(ParentId parentId) {
    this.parentId = parentId;
    return this;
  }

   /**
   * Get parentId
   * @return parentId
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_PARENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ParentId getParentId() {
    return parentId;
  }


  @JsonProperty(JSON_PROPERTY_PARENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setParentId(ParentId parentId) {
    this.parentId = parentId;
  }


  public ParentOrder userGroup(String userGroup) {
    this.userGroup = JsonNullable.<String>of(userGroup);
    return this;
  }

   /**
   * User groups
   * @return userGroup
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "User groups")
  @JsonIgnore

  public String getUserGroup() {
        return userGroup.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USER_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUserGroup_JsonNullable() {
    return userGroup;
  }
  
  @JsonProperty(JSON_PROPERTY_USER_GROUP)
  public void setUserGroup_JsonNullable(JsonNullable<String> userGroup) {
    this.userGroup = userGroup;
  }

  public void setUserGroup(String userGroup) {
    this.userGroup = JsonNullable.<String>of(userGroup);
  }


  public ParentOrder userDefinedFields(java.util.Map<String, String> userDefinedFields) {
    this.userDefinedFields = JsonNullable.<java.util.Map<String, String>>of(userDefinedFields);
    return this;
  }

  public ParentOrder putUserDefinedFieldsItem(String key, String userDefinedFieldsItem) {
    if (this.userDefinedFields == null || !this.userDefinedFields.isPresent()) {
      this.userDefinedFields = JsonNullable.<java.util.Map<String, String>>of(new java.util.HashMap<>());
    }
    try {
      this.userDefinedFields.get().put(key, userDefinedFieldsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * User defined fields.
   * @return userDefinedFields
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "User defined fields.")
  @JsonIgnore

  public java.util.Map<String, String> getUserDefinedFields() {
        return userDefinedFields.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USER_DEFINED_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<java.util.Map<String, String>> getUserDefinedFields_JsonNullable() {
    return userDefinedFields;
  }
  
  @JsonProperty(JSON_PROPERTY_USER_DEFINED_FIELDS)
  public void setUserDefinedFields_JsonNullable(JsonNullable<java.util.Map<String, String>> userDefinedFields) {
    this.userDefinedFields = userDefinedFields;
  }

  public void setUserDefinedFields(java.util.Map<String, String> userDefinedFields) {
    this.userDefinedFields = JsonNullable.<java.util.Map<String, String>>of(userDefinedFields);
  }


  /**
   * Return true if this ParentOrder object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ParentOrder parentOrder = (ParentOrder) o;
    return Objects.equals(this.parentId, parentOrder.parentId) &&
        equalsNullable(this.userGroup, parentOrder.userGroup) &&
        equalsNullable(this.userDefinedFields, parentOrder.userDefinedFields);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(parentId, hashCodeNullable(userGroup), hashCodeNullable(userDefinedFields));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ParentOrder {\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    userGroup: ").append(toIndentedString(userGroup)).append("\n");
    sb.append("    userDefinedFields: ").append(toIndentedString(userDefinedFields)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

