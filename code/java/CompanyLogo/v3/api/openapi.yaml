openapi: 3.0.0
info:
  contact:
    email: api@factset.com
    name: FactSet Research Systems
    url: https://developer.factset.com/contact
  description: |
    Consume FactSet collected Company Logos through an API that seamlessly integrates with company fundamentals and estimates data
    (listed equities data available via the stocks API), quotes, time series, and other Digital APIs.

    The Logo API provides access to logos of US, CA and EU listed companies. The logos could be accessed by using national and
    international identifiers like ISIN, CUSIP, WKN, Valor, etc. and are a nice feature for comprehensive visualizations of equities
    on overview pages (factsheets).

    Logos are reviewed/updated twice a year.

    The Logo API for Digital Portals seamlessly integrates with the [Stocks API](https://developer.factset.com/api-catalog/stocks-api-digital-portals)
    for equities and estimates data and the [Quotes API](https://developer.factset.com/api-catalog/quotes-api-digital-portals), allowing
    access to detailed price and performance information of listings. The [Quotes API](https://developer.factset.com/api-catalog/quotes-api-digital-portals)
    also supports basic security identifier cross-reference (see for example /notation/crossReference/getByFactSetMarketSymbol to retrieve an instrument id).
    For direct access to price histories for charting, please refer to the
    [Time Series API for Digital Portals](https://developer.factset.com/api-catalog/time-series-api-digital-portals).
  license:
    name: Apache License, Version 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  title: Company Logo API
  version: 3.0.0
externalDocs:
  description: API Documentation
  url: https://developer.factset.com/api-catalog/
servers:
- url: https://api.factset.com/wealth/v3
security:
- FactSetApiKey: []
- FactSetOAuth2: []
tags:
- description: company endpoints
  name: company
paths:
  /company/logo/get:
    get:
      description: "List of URLs for transparent company logos in different sizes\
        \ and formats.   The different sizes for the rectangular and square formats\
        \ are: \n\n **Small**:\n * rectangular:  maximum width of 88 pixels and maximum\
        \ height of 31 pixels.\n * square:  31 x 31 pixels.\n\n\n **Medium**: small\
        \ logo scaled up by 200%.\n\n **Large**: small logo scaled up by 300%.\n\n\
        \ **Vector**: can be rendered at any size."
      operationId: get/company/logo/get
      parameters:
      - explode: true
        in: query
        name: identifier
        required: true
        schema:
          description: Identifier to resolve.
          exclusiveMaximum: false
          exclusiveMinimum: false
          maxLength: 50
          minLength: 3
          pattern: ^[B-DF-HJ-NP-TV-Z0-9]{6}-[SLR]$|^[A-Z0-9.#&*+]{1,47}-[A-Z0-9]{2,4}$|^[0-9]{3,20}$|^[B-DF-HJ-NP-TV-Z0-9]{6}[0-9]$|^[A-Z]{2}[A-Z0-9]{9}[0-9]$|^[A-Z1-9][A-Z0-9]{5}$|^[0-9]{1,9}$|^[A-Z0-9]{8}[0-9]$
          type: string
        style: form
      - explode: true
        in: query
        name: identifierType
        required: true
        schema:
          description: Type of the identifier.
          enum:
          - idInstrument
          - idNotation
          - fdsPermanentIdentifierSecurity
          - fdsPermanentIdentifierListing
          - fdsPermanentIdentifierRegional
          - tickerExchange
          - tickerRegion
          - sedol
          - isin
          - wkn
          - valor
          - cusip
          type: string
        style: form
      - explode: true
        in: query
        name: format
        required: false
        schema:
          default: rectangular
          description: Format of the logos.
          enum:
          - rectangular
          - square
          type: string
        style: form
      - description: Limit the attributes returned in the response to the specified
          set.
        explode: false
        in: query
        name: _attributes
        required: false
        schema:
          items:
            exclusiveMaximum: false
            maxLength: 100
            type: string
          maxItems: 50
          type: array
          uniqueItems: true
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: Successful Response
      summary: List of URLs of company logos.
      tags:
      - company
      x-accepts: application/json
components:
  callbacks: {}
  examples: {}
  headers: {}
  links: {}
  parameters: {}
  requestBodies: {}
  responses:
    ErrorResponse:
      content:
        application/json:
          schema:
            properties:
              meta:
                $ref: '#/components/schemas/ErrorMetaObject'
              errors:
                $ref: '#/components/schemas/ErrorObject'
            type: object
      description: Generic error response for all errors (400 ... 599 error codes)
    GetCompanyLogoGet200Response:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_200'
      description: Successful Response
  schemas:
    ErrorMetaObject:
      description: The meta member contains the meta information of the response.
      properties:
        status:
          $ref: '#/components/schemas/StatusObject'
      type: object
    ErrorObject:
      description: The errors member contains additional information about a failed
        request.
      items:
        properties:
          details:
            description: A human-readable, unstructured explanation specific to this
              occurrence of the failure.
            type: string
          encryptedDetails:
            description: Base64-encoded, internal details about the error, in addition
              to "details".
            type: string
          type:
            description: Internal error type of the Foundation API protocol.
            format: int32
            type: number
          attribute:
            description: For a validation error, a reference to the request parameter
              that failed validation; otherwise, an empty array.
            items:
              properties:
                name:
                  description: Element of the path denoting the request parameter.
                  type: string
                index:
                  description: If the attribute "name" designates an array, index
                    of the array element; otherwise the special value -1.
                  format: int32
                  type: number
              type: object
            type: array
        type: object
      type: array
    AttributesMember:
      description: Limit the attributes returned in the response to the specified
        set.
      items:
        exclusiveMaximum: false
        maxLength: 100
        type: string
      maxItems: 100
      type: array
      uniqueItems: true
    LanguageMember:
      description: ISO 639-1 code of the language.
      exclusiveMaximum: false
      exclusiveMinimum: false
      format: isoLanguage
      maxLength: 2
      minLength: 2
      type: string
    StatusObject:
      description: The status member contains the status code of the response.
      example:
        code: 0.8008281904610115
      properties:
        code:
          description: The HTTP status code of the response, mirroring the code from
            the Status-Line of the HTTP response message (see [RFC2616] section 6.1).
          format: int32
          type: number
      required:
      - code
      type: object
    CursorBasedPaginationOutputObject:
      description: Pagination attributes for the cursor-based pagination strategy.
      properties:
        total:
          description: Total number of entries in the result set.
          format: int32
          type: number
        isEstimatedTotal:
          description: Flag indicating that the value of `total` is estimated.
          type: boolean
        next:
          description: The next cursor position to use in the parameter `pagination.cursor`
            for an endpoint that supports cursor-based pagination, otherwise `null`.
          type: string
        previous:
          description: The previous cursor position to use in the parameter `pagination.cursor`
            for an endpoint that supports cursor-based pagination. If a previous cursor
            position is not supported or available, `previous` is `null`.
          type: string
      required:
      - isEstimatedTotal
      - next
      - previous
      - total
      type: object
    CursorBasedPaginationOutputObjectWithoutTotal:
      description: Pagination attributes for the cursor-based pagination strategy;
        a total element count is not supported.
      properties:
        next:
          description: The next cursor position to use in the parameter `pagination.cursor`
            for an endpoint that supports cursor-based pagination, otherwise `null`.
          type: string
        previous:
          description: The previous cursor position to use in the parameter `pagination.cursor`
            for an endpoint that supports cursor-based pagination. If a previous cursor
            position is not supported or available, `previous` is `null`.
          type: string
      required:
      - next
      - previous
      type: object
    OffsetBasedPaginationOutputObject:
      description: Pagination attributes for the offset-based pagination strategy.
      properties:
        total:
          description: Total number of entries in the result set.
          format: int32
          type: number
        isEstimatedTotal:
          description: Flag indicating that the value of "total" is estimated.
          type: boolean
      required:
      - isEstimatedTotal
      - total
      type: object
    OffsetBasedPaginationOutputObjectWithoutTotal:
      description: Pagination attributes for the offset-based pagination strategy;
        a total element count is not supported.
      properties:
        hasNext:
          description: Flag indicating that a subsequent request with the same parameters,
            except that the parameter `pagination.offset` is incremented by `pagination.limit`,
            would yield additional results.
          type: boolean
      required:
      - hasNext
      type: object
    PartialOutputObject:
      description: Object denoting that the endpoint response is possibly incomplete.
      properties:
        isPartial:
          description: Flag indicating that the response is a possibly incomplete
            array or an object containing a possibly incomplete array, due to hitting
            a processing time limit. If `true`, some matching results might be missing
            from the array, or elements for matching results might be incorrectly
            included (for example, when priority sorting would have removed the element).
            Depending on the use case, such a response may be unsuitable.
          type: boolean
      required:
      - isPartial
      type: object
    inline_response_200_data_small:
      description: Small logo.
      example:
        mimeType: mimeType
        url: http://example.com/aeiou
      nullable: false
      properties:
        url:
          description: URL of the logo.
          format: url
          nullable: true
          type: string
        mimeType:
          description: MIME type of the logo.
          nullable: true
          type: string
      type: object
    inline_response_200_data_medium:
      description: Medium logo.
      example:
        mimeType: mimeType
        url: http://example.com/aeiou
      nullable: false
      properties:
        url:
          description: URL of the logo.
          format: url
          nullable: true
          type: string
        mimeType:
          description: MIME type of the logo.
          nullable: true
          type: string
      type: object
    inline_response_200_data_large:
      description: Large logo.
      example:
        mimeType: mimeType
        url: http://example.com/aeiou
      nullable: false
      properties:
        url:
          description: URL of the logo.
          format: url
          nullable: true
          type: string
        mimeType:
          description: MIME type of the logo.
          nullable: true
          type: string
      type: object
    inline_response_200_data_vector:
      description: Vector logo.
      example:
        mimeType: mimeType
        url: http://example.com/aeiou
      nullable: false
      properties:
        url:
          description: URL of the logo.
          format: url
          nullable: true
          type: string
        mimeType:
          description: MIME type of the logo.
          nullable: true
          type: string
      type: object
    inline_response_200_data:
      description: URLs of company logos. All URLs are publicly available via HTTPS
        and hosted by FactSet with a top-level domain `mdgms.com`. For possible values
        of the attribute `mimeType`, see endpoint `/basic/media/type/list` with parameter
        `filter.ids=1 (image)`.
      example:
        small:
          mimeType: mimeType
          url: http://example.com/aeiou
        idInstrument: idInstrument
        sourceIdentifier: sourceIdentifier
        large:
          mimeType: mimeType
          url: http://example.com/aeiou
        vector:
          mimeType: mimeType
          url: http://example.com/aeiou
        medium:
          mimeType: mimeType
          url: http://example.com/aeiou
      nullable: false
      properties:
        idInstrument:
          description: MDG identifier of the instrument.
          format: id64
          nullable: true
          type: string
        sourceIdentifier:
          description: Identifier used in the request.
          nullable: true
          type: string
        small:
          $ref: '#/components/schemas/inline_response_200_data_small'
        medium:
          $ref: '#/components/schemas/inline_response_200_data_medium'
        large:
          $ref: '#/components/schemas/inline_response_200_data_large'
        vector:
          $ref: '#/components/schemas/inline_response_200_data_vector'
      type: object
    inline_response_200_meta:
      description: The meta member contains the meta information of the response.
      example:
        status:
          code: 0.8008281904610115
      properties:
        status:
          $ref: '#/components/schemas/StatusObject'
      type: object
    inline_response_200:
      example:
        data:
          small:
            mimeType: mimeType
            url: http://example.com/aeiou
          idInstrument: idInstrument
          sourceIdentifier: sourceIdentifier
          large:
            mimeType: mimeType
            url: http://example.com/aeiou
          vector:
            mimeType: mimeType
            url: http://example.com/aeiou
          medium:
            mimeType: mimeType
            url: http://example.com/aeiou
        meta:
          status:
            code: 0.8008281904610115
      properties:
        data:
          $ref: '#/components/schemas/inline_response_200_data'
        meta:
          $ref: '#/components/schemas/inline_response_200_meta'
      type: object
  securitySchemes:
    FactSetOAuth2:
      flows:
        clientCredentials:
          scopes: {}
          tokenUrl: https://auth.factset.com/as/token.oauth2
      type: oauth2
    FactSetApiKey:
      scheme: basic
      type: http

