/*
 * IRN API v1
 * Allows users to extract, create, update and configure IRN data.
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.IRNMeetings.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.IRNMeetings.models.AttendeeDto;
import com.factset.sdk.IRNMeetings.models.CustomFieldValueDto;
import com.factset.sdk.IRNMeetings.models.LocationDto;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.IRNMeetings.JSON;


/**
 * MeetingSummaryDto
 */
@JsonPropertyOrder({
  MeetingSummaryDto.JSON_PROPERTY_ID,
  MeetingSummaryDto.JSON_PROPERTY_START,
  MeetingSummaryDto.JSON_PROPERTY_END,
  MeetingSummaryDto.JSON_PROPERTY_CREATED_AT,
  MeetingSummaryDto.JSON_PROPERTY_AUTHOR_ID,
  MeetingSummaryDto.JSON_PROPERTY_TITLE,
  MeetingSummaryDto.JSON_PROPERTY_IDENTIFIER,
  MeetingSummaryDto.JSON_PROPERTY_ORGANIZER,
  MeetingSummaryDto.JSON_PROPERTY_ORGANIZER_ID,
  MeetingSummaryDto.JSON_PROPERTY_ATTACHMENT_IDS,
  MeetingSummaryDto.JSON_PROPERTY_RELATED_SYMBOLS,
  MeetingSummaryDto.JSON_PROPERTY_LOCATIONS,
  MeetingSummaryDto.JSON_PROPERTY_ATTENDEES,
  MeetingSummaryDto.JSON_PROPERTY_CUSTOM_FIELD_VALUES
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class MeetingSummaryDto implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ID = "id";
  private java.util.UUID id;

  public static final String JSON_PROPERTY_START = "start";
  private JsonNullable<String> start = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_END = "end";
  private JsonNullable<String> end = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CREATED_AT = "createdAt";
  private JsonNullable<String> createdAt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_AUTHOR_ID = "authorId";
  private java.util.UUID authorId;

  public static final String JSON_PROPERTY_TITLE = "title";
  private JsonNullable<String> title = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IDENTIFIER = "identifier";
  private JsonNullable<String> identifier = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ORGANIZER = "organizer";
  private JsonNullable<String> organizer = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ORGANIZER_ID = "organizerId";
  private java.util.UUID organizerId;

  public static final String JSON_PROPERTY_ATTACHMENT_IDS = "attachmentIds";
  private JsonNullable<java.util.List<java.util.UUID>> attachmentIds = JsonNullable.<java.util.List<java.util.UUID>>undefined();

  public static final String JSON_PROPERTY_RELATED_SYMBOLS = "relatedSymbols";
  private JsonNullable<java.util.List<String>> relatedSymbols = JsonNullable.<java.util.List<String>>undefined();

  public static final String JSON_PROPERTY_LOCATIONS = "locations";
  private JsonNullable<java.util.List<LocationDto>> locations = JsonNullable.<java.util.List<LocationDto>>undefined();

  public static final String JSON_PROPERTY_ATTENDEES = "attendees";
  private JsonNullable<java.util.List<AttendeeDto>> attendees = JsonNullable.<java.util.List<AttendeeDto>>undefined();

  public static final String JSON_PROPERTY_CUSTOM_FIELD_VALUES = "customFieldValues";
  private JsonNullable<java.util.List<CustomFieldValueDto>> customFieldValues = JsonNullable.<java.util.List<CustomFieldValueDto>>undefined();

  public MeetingSummaryDto() { 
  }

  public MeetingSummaryDto id(java.util.UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(java.util.UUID id) {
    this.id = id;
  }


  public MeetingSummaryDto start(String start) {
    this.start = JsonNullable.<String>of(start);
    return this;
  }

   /**
   * Get start
   * @return start
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getStart() {
        return start.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_START)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getStart_JsonNullable() {
    return start;
  }
  
  @JsonProperty(JSON_PROPERTY_START)
  public void setStart_JsonNullable(JsonNullable<String> start) {
    this.start = start;
  }

  public void setStart(String start) {
    this.start = JsonNullable.<String>of(start);
  }


  public MeetingSummaryDto end(String end) {
    this.end = JsonNullable.<String>of(end);
    return this;
  }

   /**
   * Get end
   * @return end
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEnd() {
        return end.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_END)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEnd_JsonNullable() {
    return end;
  }
  
  @JsonProperty(JSON_PROPERTY_END)
  public void setEnd_JsonNullable(JsonNullable<String> end) {
    this.end = end;
  }

  public void setEnd(String end) {
    this.end = JsonNullable.<String>of(end);
  }


  public MeetingSummaryDto createdAt(String createdAt) {
    this.createdAt = JsonNullable.<String>of(createdAt);
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCreatedAt() {
        return createdAt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCreatedAt_JsonNullable() {
    return createdAt;
  }
  
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  public void setCreatedAt_JsonNullable(JsonNullable<String> createdAt) {
    this.createdAt = createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = JsonNullable.<String>of(createdAt);
  }


  public MeetingSummaryDto authorId(java.util.UUID authorId) {
    this.authorId = authorId;
    return this;
  }

   /**
   * Get authorId
   * @return authorId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_AUTHOR_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.UUID getAuthorId() {
    return authorId;
  }


  @JsonProperty(JSON_PROPERTY_AUTHOR_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthorId(java.util.UUID authorId) {
    this.authorId = authorId;
  }


  public MeetingSummaryDto title(String title) {
    this.title = JsonNullable.<String>of(title);
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getTitle() {
        return title.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTitle_JsonNullable() {
    return title;
  }
  
  @JsonProperty(JSON_PROPERTY_TITLE)
  public void setTitle_JsonNullable(JsonNullable<String> title) {
    this.title = title;
  }

  public void setTitle(String title) {
    this.title = JsonNullable.<String>of(title);
  }


  public MeetingSummaryDto identifier(String identifier) {
    this.identifier = JsonNullable.<String>of(identifier);
    return this;
  }

   /**
   * Get identifier
   * @return identifier
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdentifier() {
        return identifier.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdentifier_JsonNullable() {
    return identifier;
  }
  
  @JsonProperty(JSON_PROPERTY_IDENTIFIER)
  public void setIdentifier_JsonNullable(JsonNullable<String> identifier) {
    this.identifier = identifier;
  }

  public void setIdentifier(String identifier) {
    this.identifier = JsonNullable.<String>of(identifier);
  }


  public MeetingSummaryDto organizer(String organizer) {
    this.organizer = JsonNullable.<String>of(organizer);
    return this;
  }

   /**
   * Get organizer
   * @return organizer
   * @deprecated
  **/
  @Deprecated
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getOrganizer() {
        return organizer.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ORGANIZER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getOrganizer_JsonNullable() {
    return organizer;
  }
  
  @JsonProperty(JSON_PROPERTY_ORGANIZER)
  public void setOrganizer_JsonNullable(JsonNullable<String> organizer) {
    this.organizer = organizer;
  }

  public void setOrganizer(String organizer) {
    this.organizer = JsonNullable.<String>of(organizer);
  }


  public MeetingSummaryDto organizerId(java.util.UUID organizerId) {
    this.organizerId = organizerId;
    return this;
  }

   /**
   * Get organizerId
   * @return organizerId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ORGANIZER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.UUID getOrganizerId() {
    return organizerId;
  }


  @JsonProperty(JSON_PROPERTY_ORGANIZER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrganizerId(java.util.UUID organizerId) {
    this.organizerId = organizerId;
  }


  public MeetingSummaryDto attachmentIds(java.util.List<java.util.UUID> attachmentIds) {
    this.attachmentIds = JsonNullable.<java.util.List<java.util.UUID>>of(attachmentIds);
    return this;
  }

  public MeetingSummaryDto addAttachmentIdsItem(java.util.UUID attachmentIdsItem) {
    if (this.attachmentIds == null || !this.attachmentIds.isPresent()) {
      this.attachmentIds = JsonNullable.<java.util.List<java.util.UUID>>of(new java.util.ArrayList<>());
    }
    try {
      this.attachmentIds.get().add(attachmentIdsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get attachmentIds
   * @return attachmentIds
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public java.util.List<java.util.UUID> getAttachmentIds() {
        return attachmentIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ATTACHMENT_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<java.util.List<java.util.UUID>> getAttachmentIds_JsonNullable() {
    return attachmentIds;
  }
  
  @JsonProperty(JSON_PROPERTY_ATTACHMENT_IDS)
  public void setAttachmentIds_JsonNullable(JsonNullable<java.util.List<java.util.UUID>> attachmentIds) {
    this.attachmentIds = attachmentIds;
  }

  public void setAttachmentIds(java.util.List<java.util.UUID> attachmentIds) {
    this.attachmentIds = JsonNullable.<java.util.List<java.util.UUID>>of(attachmentIds);
  }


  public MeetingSummaryDto relatedSymbols(java.util.List<String> relatedSymbols) {
    this.relatedSymbols = JsonNullable.<java.util.List<String>>of(relatedSymbols);
    return this;
  }

  public MeetingSummaryDto addRelatedSymbolsItem(String relatedSymbolsItem) {
    if (this.relatedSymbols == null || !this.relatedSymbols.isPresent()) {
      this.relatedSymbols = JsonNullable.<java.util.List<String>>of(new java.util.ArrayList<>());
    }
    try {
      this.relatedSymbols.get().add(relatedSymbolsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get relatedSymbols
   * @return relatedSymbols
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public java.util.List<String> getRelatedSymbols() {
        return relatedSymbols.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RELATED_SYMBOLS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<java.util.List<String>> getRelatedSymbols_JsonNullable() {
    return relatedSymbols;
  }
  
  @JsonProperty(JSON_PROPERTY_RELATED_SYMBOLS)
  public void setRelatedSymbols_JsonNullable(JsonNullable<java.util.List<String>> relatedSymbols) {
    this.relatedSymbols = relatedSymbols;
  }

  public void setRelatedSymbols(java.util.List<String> relatedSymbols) {
    this.relatedSymbols = JsonNullable.<java.util.List<String>>of(relatedSymbols);
  }


  public MeetingSummaryDto locations(java.util.List<LocationDto> locations) {
    this.locations = JsonNullable.<java.util.List<LocationDto>>of(locations);
    return this;
  }

  public MeetingSummaryDto addLocationsItem(LocationDto locationsItem) {
    if (this.locations == null || !this.locations.isPresent()) {
      this.locations = JsonNullable.<java.util.List<LocationDto>>of(new java.util.ArrayList<>());
    }
    try {
      this.locations.get().add(locationsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get locations
   * @return locations
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public java.util.List<LocationDto> getLocations() {
        return locations.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<java.util.List<LocationDto>> getLocations_JsonNullable() {
    return locations;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCATIONS)
  public void setLocations_JsonNullable(JsonNullable<java.util.List<LocationDto>> locations) {
    this.locations = locations;
  }

  public void setLocations(java.util.List<LocationDto> locations) {
    this.locations = JsonNullable.<java.util.List<LocationDto>>of(locations);
  }


  public MeetingSummaryDto attendees(java.util.List<AttendeeDto> attendees) {
    this.attendees = JsonNullable.<java.util.List<AttendeeDto>>of(attendees);
    return this;
  }

  public MeetingSummaryDto addAttendeesItem(AttendeeDto attendeesItem) {
    if (this.attendees == null || !this.attendees.isPresent()) {
      this.attendees = JsonNullable.<java.util.List<AttendeeDto>>of(new java.util.ArrayList<>());
    }
    try {
      this.attendees.get().add(attendeesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get attendees
   * @return attendees
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public java.util.List<AttendeeDto> getAttendees() {
        return attendees.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ATTENDEES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<java.util.List<AttendeeDto>> getAttendees_JsonNullable() {
    return attendees;
  }
  
  @JsonProperty(JSON_PROPERTY_ATTENDEES)
  public void setAttendees_JsonNullable(JsonNullable<java.util.List<AttendeeDto>> attendees) {
    this.attendees = attendees;
  }

  public void setAttendees(java.util.List<AttendeeDto> attendees) {
    this.attendees = JsonNullable.<java.util.List<AttendeeDto>>of(attendees);
  }


  public MeetingSummaryDto customFieldValues(java.util.List<CustomFieldValueDto> customFieldValues) {
    this.customFieldValues = JsonNullable.<java.util.List<CustomFieldValueDto>>of(customFieldValues);
    return this;
  }

  public MeetingSummaryDto addCustomFieldValuesItem(CustomFieldValueDto customFieldValuesItem) {
    if (this.customFieldValues == null || !this.customFieldValues.isPresent()) {
      this.customFieldValues = JsonNullable.<java.util.List<CustomFieldValueDto>>of(new java.util.ArrayList<>());
    }
    try {
      this.customFieldValues.get().add(customFieldValuesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get customFieldValues
   * @return customFieldValues
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public java.util.List<CustomFieldValueDto> getCustomFieldValues() {
        return customFieldValues.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CUSTOM_FIELD_VALUES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<java.util.List<CustomFieldValueDto>> getCustomFieldValues_JsonNullable() {
    return customFieldValues;
  }
  
  @JsonProperty(JSON_PROPERTY_CUSTOM_FIELD_VALUES)
  public void setCustomFieldValues_JsonNullable(JsonNullable<java.util.List<CustomFieldValueDto>> customFieldValues) {
    this.customFieldValues = customFieldValues;
  }

  public void setCustomFieldValues(java.util.List<CustomFieldValueDto> customFieldValues) {
    this.customFieldValues = JsonNullable.<java.util.List<CustomFieldValueDto>>of(customFieldValues);
  }


  /**
   * Return true if this MeetingSummaryDto object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MeetingSummaryDto meetingSummaryDto = (MeetingSummaryDto) o;
    return Objects.equals(this.id, meetingSummaryDto.id) &&
        equalsNullable(this.start, meetingSummaryDto.start) &&
        equalsNullable(this.end, meetingSummaryDto.end) &&
        equalsNullable(this.createdAt, meetingSummaryDto.createdAt) &&
        Objects.equals(this.authorId, meetingSummaryDto.authorId) &&
        equalsNullable(this.title, meetingSummaryDto.title) &&
        equalsNullable(this.identifier, meetingSummaryDto.identifier) &&
        equalsNullable(this.organizer, meetingSummaryDto.organizer) &&
        Objects.equals(this.organizerId, meetingSummaryDto.organizerId) &&
        equalsNullable(this.attachmentIds, meetingSummaryDto.attachmentIds) &&
        equalsNullable(this.relatedSymbols, meetingSummaryDto.relatedSymbols) &&
        equalsNullable(this.locations, meetingSummaryDto.locations) &&
        equalsNullable(this.attendees, meetingSummaryDto.attendees) &&
        equalsNullable(this.customFieldValues, meetingSummaryDto.customFieldValues);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, hashCodeNullable(start), hashCodeNullable(end), hashCodeNullable(createdAt), authorId, hashCodeNullable(title), hashCodeNullable(identifier), hashCodeNullable(organizer), organizerId, hashCodeNullable(attachmentIds), hashCodeNullable(relatedSymbols), hashCodeNullable(locations), hashCodeNullable(attendees), hashCodeNullable(customFieldValues));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MeetingSummaryDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    end: ").append(toIndentedString(end)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    authorId: ").append(toIndentedString(authorId)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    organizer: ").append(toIndentedString(organizer)).append("\n");
    sb.append("    organizerId: ").append(toIndentedString(organizerId)).append("\n");
    sb.append("    attachmentIds: ").append(toIndentedString(attachmentIds)).append("\n");
    sb.append("    relatedSymbols: ").append(toIndentedString(relatedSymbols)).append("\n");
    sb.append("    locations: ").append(toIndentedString(locations)).append("\n");
    sb.append("    attendees: ").append(toIndentedString(attendees)).append("\n");
    sb.append("    customFieldValues: ").append(toIndentedString(customFieldValues)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

