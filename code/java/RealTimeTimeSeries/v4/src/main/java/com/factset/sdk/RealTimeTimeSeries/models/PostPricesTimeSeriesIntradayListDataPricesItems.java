/*
 * Real-Time Time Series API
 * Time series data, end-of-day or intraday, tick-by-tick or subsampled. Additional vendor-specific endpoints provide a modified interface for seamless integration with the ChartIQ chart library.  This API is focused on high-performance applications that are  * serving millions of end-users, * accessible by client browsers via the internet, * integrated into complex infrastructures such as existing frontend frameworks or authentication services.  This API has been designed for direct use by client web applications and feature extreme low latency: The average response time across all endpoints is 30 ms whereas 99% of all requests are answered in close to under 300ms.  See the [Real-Time Quotes API for Digital Portals](https://developer.factset.com/api-catalog/real-time-quotes-api) for access to detailed price information. 
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.RealTimeTimeSeries.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.RealTimeTimeSeries.JSON;


/**
 * A list of objects. For semantical context see the description of the parent array.
 */
@ApiModel(description = "A list of objects. For semantical context see the description of the parent array.")
@JsonPropertyOrder({
  PostPricesTimeSeriesIntradayListDataPricesItems.JSON_PROPERTY_TIME,
  PostPricesTimeSeriesIntradayListDataPricesItems.JSON_PROPERTY_TICK_ID,
  PostPricesTimeSeriesIntradayListDataPricesItems.JSON_PROPERTY_PRICE,
  PostPricesTimeSeriesIntradayListDataPricesItems.JSON_PROPERTY_QUOTE_CONDITION,
  PostPricesTimeSeriesIntradayListDataPricesItems.JSON_PROPERTY_TRADING_VOLUME,
  PostPricesTimeSeriesIntradayListDataPricesItems.JSON_PROPERTY_TRADING_VALUE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class PostPricesTimeSeriesIntradayListDataPricesItems implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_TIME = "time";
  private JsonNullable<OffsetDateTime> time = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_TICK_ID = "tickId";
  private JsonNullable<BigDecimal> tickId = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_PRICE = "price";
  private JsonNullable<BigDecimal> price = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_QUOTE_CONDITION = "quoteCondition";
  private JsonNullable<String> quoteCondition = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TRADING_VOLUME = "tradingVolume";
  private JsonNullable<BigDecimal> tradingVolume = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_TRADING_VALUE = "tradingValue";
  private JsonNullable<BigDecimal> tradingValue = JsonNullable.<BigDecimal>undefined();

  public PostPricesTimeSeriesIntradayListDataPricesItems() { 
  }

  public PostPricesTimeSeriesIntradayListDataPricesItems time(OffsetDateTime time) {
    this.time = JsonNullable.<OffsetDateTime>of(time);
    return this;
  }

   /**
   * Date and time.
   * @return time
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "2024-12-24T18:00Z", value = "Date and time.")
  @JsonIgnore

  public OffsetDateTime getTime() {
        return time.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getTime_JsonNullable() {
    return time;
  }
  
  @JsonProperty(JSON_PROPERTY_TIME)
  public void setTime_JsonNullable(JsonNullable<OffsetDateTime> time) {
    this.time = time;
  }

  public void setTime(OffsetDateTime time) {
    this.time = JsonNullable.<OffsetDateTime>of(time);
  }


  public PostPricesTimeSeriesIntradayListDataPricesItems tickId(BigDecimal tickId) {
    this.tickId = JsonNullable.<BigDecimal>of(tickId);
    return this;
  }

   /**
   * Intraday tick identifier created by a feed handler, unique within a trading day.
   * @return tickId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "3.1415", value = "Intraday tick identifier created by a feed handler, unique within a trading day.")
  @JsonIgnore

  public BigDecimal getTickId() {
        return tickId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TICK_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getTickId_JsonNullable() {
    return tickId;
  }
  
  @JsonProperty(JSON_PROPERTY_TICK_ID)
  public void setTickId_JsonNullable(JsonNullable<BigDecimal> tickId) {
    this.tickId = tickId;
  }

  public void setTickId(BigDecimal tickId) {
    this.tickId = JsonNullable.<BigDecimal>of(tickId);
  }


  public PostPricesTimeSeriesIntradayListDataPricesItems price(BigDecimal price) {
    this.price = JsonNullable.<BigDecimal>of(price);
    return this;
  }

   /**
   * Price value. See attribute &#x60;valueUnit&#x60; in endpoint &#x60;/prices/get&#x60; for its unit, except for price type yield, where the &#x60;valueUnit&#x60; is always &#x60;percent&#x60; (id&#x3D;258).
   * @return price
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "3.1415", value = "Price value. See attribute `valueUnit` in endpoint `/prices/get` for its unit, except for price type yield, where the `valueUnit` is always `percent` (id=258).")
  @JsonIgnore

  public BigDecimal getPrice() {
        return price.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getPrice_JsonNullable() {
    return price;
  }
  
  @JsonProperty(JSON_PROPERTY_PRICE)
  public void setPrice_JsonNullable(JsonNullable<BigDecimal> price) {
    this.price = price;
  }

  public void setPrice(BigDecimal price) {
    this.price = JsonNullable.<BigDecimal>of(price);
  }


  public PostPricesTimeSeriesIntradayListDataPricesItems quoteCondition(String quoteCondition) {
    this.quoteCondition = JsonNullable.<String>of(quoteCondition);
    return this;
  }

   /**
   * Quote condition. Possible values depend on the values delivered by the supplier of the price information.
   * @return quoteCondition
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Lorem ipsum", value = "Quote condition. Possible values depend on the values delivered by the supplier of the price information.")
  @JsonIgnore

  public String getQuoteCondition() {
        return quoteCondition.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_QUOTE_CONDITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getQuoteCondition_JsonNullable() {
    return quoteCondition;
  }
  
  @JsonProperty(JSON_PROPERTY_QUOTE_CONDITION)
  public void setQuoteCondition_JsonNullable(JsonNullable<String> quoteCondition) {
    this.quoteCondition = quoteCondition;
  }

  public void setQuoteCondition(String quoteCondition) {
    this.quoteCondition = JsonNullable.<String>of(quoteCondition);
  }


  public PostPricesTimeSeriesIntradayListDataPricesItems tradingVolume(BigDecimal tradingVolume) {
    this.tradingVolume = JsonNullable.<BigDecimal>of(tradingVolume);
    return this;
  }

   /**
   * Number of units (e.g. shares) traded, offered (price type ask), solicited (price type bid), or empty (price type yield).
   * @return tradingVolume
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "4.04", value = "Number of units (e.g. shares) traded, offered (price type ask), solicited (price type bid), or empty (price type yield).")
  @JsonIgnore

  public BigDecimal getTradingVolume() {
        return tradingVolume.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TRADING_VOLUME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getTradingVolume_JsonNullable() {
    return tradingVolume;
  }
  
  @JsonProperty(JSON_PROPERTY_TRADING_VOLUME)
  public void setTradingVolume_JsonNullable(JsonNullable<BigDecimal> tradingVolume) {
    this.tradingVolume = tradingVolume;
  }

  public void setTradingVolume(BigDecimal tradingVolume) {
    this.tradingVolume = JsonNullable.<BigDecimal>of(tradingVolume);
  }


  public PostPricesTimeSeriesIntradayListDataPricesItems tradingValue(BigDecimal tradingValue) {
    this.tradingValue = JsonNullable.<BigDecimal>of(tradingValue);
    return this;
  }

   /**
   * Monetary equivalent (cash value) of the trade. See attribute &#x60;currency&#x60; in endpoint &#x60;/prices/get&#x60; for its unit. Empty for price type yield.
   * @return tradingValue
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "2.02", value = "Monetary equivalent (cash value) of the trade. See attribute `currency` in endpoint `/prices/get` for its unit. Empty for price type yield.")
  @JsonIgnore

  public BigDecimal getTradingValue() {
        return tradingValue.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TRADING_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getTradingValue_JsonNullable() {
    return tradingValue;
  }
  
  @JsonProperty(JSON_PROPERTY_TRADING_VALUE)
  public void setTradingValue_JsonNullable(JsonNullable<BigDecimal> tradingValue) {
    this.tradingValue = tradingValue;
  }

  public void setTradingValue(BigDecimal tradingValue) {
    this.tradingValue = JsonNullable.<BigDecimal>of(tradingValue);
  }


  /**
   * Return true if this PostPricesTimeSeriesIntradayListDataPricesItems object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostPricesTimeSeriesIntradayListDataPricesItems postPricesTimeSeriesIntradayListDataPricesItems = (PostPricesTimeSeriesIntradayListDataPricesItems) o;
    return equalsNullable(this.time, postPricesTimeSeriesIntradayListDataPricesItems.time) &&
        equalsNullable(this.tickId, postPricesTimeSeriesIntradayListDataPricesItems.tickId) &&
        equalsNullable(this.price, postPricesTimeSeriesIntradayListDataPricesItems.price) &&
        equalsNullable(this.quoteCondition, postPricesTimeSeriesIntradayListDataPricesItems.quoteCondition) &&
        equalsNullable(this.tradingVolume, postPricesTimeSeriesIntradayListDataPricesItems.tradingVolume) &&
        equalsNullable(this.tradingValue, postPricesTimeSeriesIntradayListDataPricesItems.tradingValue);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(time), hashCodeNullable(tickId), hashCodeNullable(price), hashCodeNullable(quoteCondition), hashCodeNullable(tradingVolume), hashCodeNullable(tradingValue));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostPricesTimeSeriesIntradayListDataPricesItems {\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    tickId: ").append(toIndentedString(tickId)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    quoteCondition: ").append(toIndentedString(quoteCondition)).append("\n");
    sb.append("    tradingVolume: ").append(toIndentedString(tradingVolume)).append("\n");
    sb.append("    tradingValue: ").append(toIndentedString(tradingValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

