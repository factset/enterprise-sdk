/*
 * Security Explanation API
 * Allow clients to use Security Explanation through APIs.
 *
 * The version of the OpenAPI document: 1.4.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.SecurityExplanation.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.SecurityExplanation.JSON;


/**
 * Broker research summary configuration object.
 */
@ApiModel(description = "Broker research summary configuration object.")
@JsonPropertyOrder({
  BrokerResearchSummary.JSON_PROPERTY_STYLE,
  BrokerResearchSummary.JSON_PROPERTY_BROKER_IDS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class BrokerResearchSummary implements Serializable {
  private static final long serialVersionUID = 1L;

  /**
   * Include summarized broker research notes on the company, or just the footnote, or none. Only available for Broker Research users
   */
  public enum StyleEnum {
    NONE("none"),
    
    SUMMARY("summary"),
    
    FOOTNOTE("footnote");

    private String value;

    StyleEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StyleEnum fromValue(String value) {
      for (StyleEnum b : StyleEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STYLE = "style";
  private StyleEnum style = StyleEnum.NONE;

  public static final String JSON_PROPERTY_BROKER_IDS = "brokerIds";
  private java.util.List<Integer> brokerIds = null;

  public BrokerResearchSummary() { 
  }

  public BrokerResearchSummary style(StyleEnum style) {
    this.style = style;
    return this;
  }

   /**
   * Include summarized broker research notes on the company, or just the footnote, or none. Only available for Broker Research users
   * @return style
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Include summarized broker research notes on the company, or just the footnote, or none. Only available for Broker Research users")
  @JsonProperty(JSON_PROPERTY_STYLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StyleEnum getStyle() {
    return style;
  }


  @JsonProperty(JSON_PROPERTY_STYLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStyle(StyleEnum style) {
    this.style = style;
  }


  public BrokerResearchSummary brokerIds(java.util.List<Integer> brokerIds) {
    this.brokerIds = brokerIds;
    return this;
  }

  public BrokerResearchSummary addBrokerIdsItem(Integer brokerIdsItem) {
    if (this.brokerIds == null) {
      this.brokerIds = new java.util.ArrayList<>();
    }
    this.brokerIds.add(brokerIdsItem);
    return this;
  }

   /**
   * List of broker IDs covering the company to receive individual research summaries for each over the specified period.Summaries are presented separately by broker, not combined.
   * @return brokerIds
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "List of broker IDs covering the company to receive individual research summaries for each over the specified period.Summaries are presented separately by broker, not combined.")
  @JsonProperty(JSON_PROPERTY_BROKER_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<Integer> getBrokerIds() {
    return brokerIds;
  }


  @JsonProperty(JSON_PROPERTY_BROKER_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBrokerIds(java.util.List<Integer> brokerIds) {
    this.brokerIds = brokerIds;
  }


  /**
   * Return true if this BrokerResearchSummary object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BrokerResearchSummary brokerResearchSummary = (BrokerResearchSummary) o;
    return Objects.equals(this.style, brokerResearchSummary.style) &&
        Objects.equals(this.brokerIds, brokerResearchSummary.brokerIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(style, brokerIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BrokerResearchSummary {\n");
    sb.append("    style: ").append(toIndentedString(style)).append("\n");
    sb.append("    brokerIds: ").append(toIndentedString(brokerIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

