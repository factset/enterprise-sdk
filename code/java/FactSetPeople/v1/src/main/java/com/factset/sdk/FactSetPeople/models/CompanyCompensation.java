/*
 * FactSet People API
 * The FactSet People API exposes FactSet data for individuals and their jobs.<p>This API is rate-limited to 10 requests per second and 10 concurrent requests per user.</p> 
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetPeople.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetPeople.JSON;


/**
 * List of executives and their compensation details for the specified company identifier.
 */
@ApiModel(description = "List of executives and their compensation details for the specified company identifier.")
@JsonPropertyOrder({
  CompanyCompensation.JSON_PROPERTY_NAME,
  CompanyCompensation.JSON_PROPERTY_PERSON_ID,
  CompanyCompensation.JSON_PROPERTY_TITLE,
  CompanyCompensation.JSON_PROPERTY_SALARY,
  CompanyCompensation.JSON_PROPERTY_BONUS,
  CompanyCompensation.JSON_PROPERTY_STOCK_AWARDS,
  CompanyCompensation.JSON_PROPERTY_OPTIONS_AWARDS,
  CompanyCompensation.JSON_PROPERTY_OTHER_COMPENSATION,
  CompanyCompensation.JSON_PROPERTY_TOTAL_COMPENSATION,
  CompanyCompensation.JSON_PROPERTY_NON_EQUITY_INCENTIVE_PLAN_COMP,
  CompanyCompensation.JSON_PROPERTY_NON_QUALIFIED_COMP_EARNINGS,
  CompanyCompensation.JSON_PROPERTY_COMPENSATION_YEAR,
  CompanyCompensation.JSON_PROPERTY_REQUEST_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class CompanyCompensation implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PERSON_ID = "personId";
  private JsonNullable<String> personId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TITLE = "title";
  private JsonNullable<String> title = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SALARY = "salary";
  private JsonNullable<BigDecimal> salary = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_BONUS = "bonus";
  private JsonNullable<BigDecimal> bonus = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_STOCK_AWARDS = "stockAwards";
  private JsonNullable<BigDecimal> stockAwards = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_OPTIONS_AWARDS = "optionsAwards";
  private JsonNullable<BigDecimal> optionsAwards = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_OTHER_COMPENSATION = "otherCompensation";
  private JsonNullable<BigDecimal> otherCompensation = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_TOTAL_COMPENSATION = "totalCompensation";
  private JsonNullable<BigDecimal> totalCompensation = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_NON_EQUITY_INCENTIVE_PLAN_COMP = "nonEquityIncentivePlanComp";
  private JsonNullable<BigDecimal> nonEquityIncentivePlanComp = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_NON_QUALIFIED_COMP_EARNINGS = "nonQualifiedCompEarnings";
  private JsonNullable<BigDecimal> nonQualifiedCompEarnings = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_COMPENSATION_YEAR = "compensationYear";
  private JsonNullable<String> compensationYear = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_REQUEST_ID = "requestId";
  private String requestId;

  public CompanyCompensation() { 
  }

  public CompanyCompensation name(String name) {
    this.name = JsonNullable.<String>of(name);
    return this;
  }

   /**
   * FactSet Name of the person
   * @return name
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Tim Cook", value = "FactSet Name of the person")
  @JsonIgnore

  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public CompanyCompensation personId(String personId) {
    this.personId = JsonNullable.<String>of(personId);
    return this;
  }

   /**
   * Factset Entity Identifier for the Person
   * @return personId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "05F520-E", value = "Factset Entity Identifier for the Person")
  @JsonIgnore

  public String getPersonId() {
        return personId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PERSON_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPersonId_JsonNullable() {
    return personId;
  }
  
  @JsonProperty(JSON_PROPERTY_PERSON_ID)
  public void setPersonId_JsonNullable(JsonNullable<String> personId) {
    this.personId = personId;
  }

  public void setPersonId(String personId) {
    this.personId = JsonNullable.<String>of(personId);
  }


  public CompanyCompensation title(String title) {
    this.title = JsonNullable.<String>of(title);
    return this;
  }

   /**
   * The requested Position Title
   * @return title
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Chief Executive Officer & Director", value = "The requested Position Title")
  @JsonIgnore

  public String getTitle() {
        return title.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTitle_JsonNullable() {
    return title;
  }
  
  @JsonProperty(JSON_PROPERTY_TITLE)
  public void setTitle_JsonNullable(JsonNullable<String> title) {
    this.title = title;
  }

  public void setTitle(String title) {
    this.title = JsonNullable.<String>of(title);
  }


  public CompanyCompensation salary(BigDecimal salary) {
    this.salary = JsonNullable.<BigDecimal>of(salary);
    return this;
  }

   /**
   * Salary of the person. Expressed in USD and raw units.
   * @return salary
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "525846", value = "Salary of the person. Expressed in USD and raw units.")
  @JsonIgnore

  public BigDecimal getSalary() {
        return salary.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SALARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getSalary_JsonNullable() {
    return salary;
  }
  
  @JsonProperty(JSON_PROPERTY_SALARY)
  public void setSalary_JsonNullable(JsonNullable<BigDecimal> salary) {
    this.salary = salary;
  }

  public void setSalary(BigDecimal salary) {
    this.salary = JsonNullable.<BigDecimal>of(salary);
  }


  public CompanyCompensation bonus(BigDecimal bonus) {
    this.bonus = JsonNullable.<BigDecimal>of(bonus);
    return this;
  }

   /**
   * Bonus of the executive during the fiscal year. Expressed in USD and raw units.
   * @return bonus
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "48", value = "Bonus of the executive during the fiscal year. Expressed in USD and raw units.")
  @JsonIgnore

  public BigDecimal getBonus() {
        return bonus.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BONUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getBonus_JsonNullable() {
    return bonus;
  }
  
  @JsonProperty(JSON_PROPERTY_BONUS)
  public void setBonus_JsonNullable(JsonNullable<BigDecimal> bonus) {
    this.bonus = bonus;
  }

  public void setBonus(BigDecimal bonus) {
    this.bonus = JsonNullable.<BigDecimal>of(bonus);
  }


  public CompanyCompensation stockAwards(BigDecimal stockAwards) {
    this.stockAwards = JsonNullable.<BigDecimal>of(stockAwards);
    return this;
  }

   /**
   * Stock awards for the person. Expressed in USD and raw units.
   * @return stockAwards
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Stock awards for the person. Expressed in USD and raw units.")
  @JsonIgnore

  public BigDecimal getStockAwards() {
        return stockAwards.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STOCK_AWARDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getStockAwards_JsonNullable() {
    return stockAwards;
  }
  
  @JsonProperty(JSON_PROPERTY_STOCK_AWARDS)
  public void setStockAwards_JsonNullable(JsonNullable<BigDecimal> stockAwards) {
    this.stockAwards = stockAwards;
  }

  public void setStockAwards(BigDecimal stockAwards) {
    this.stockAwards = JsonNullable.<BigDecimal>of(stockAwards);
  }


  public CompanyCompensation optionsAwards(BigDecimal optionsAwards) {
    this.optionsAwards = JsonNullable.<BigDecimal>of(optionsAwards);
    return this;
  }

   /**
   * Option Awards for the person. Expressed in USD and raw units.
   * @return optionsAwards
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Option Awards for the person. Expressed in USD and raw units.")
  @JsonIgnore

  public BigDecimal getOptionsAwards() {
        return optionsAwards.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OPTIONS_AWARDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getOptionsAwards_JsonNullable() {
    return optionsAwards;
  }
  
  @JsonProperty(JSON_PROPERTY_OPTIONS_AWARDS)
  public void setOptionsAwards_JsonNullable(JsonNullable<BigDecimal> optionsAwards) {
    this.optionsAwards = optionsAwards;
  }

  public void setOptionsAwards(BigDecimal optionsAwards) {
    this.optionsAwards = JsonNullable.<BigDecimal>of(optionsAwards);
  }


  public CompanyCompensation otherCompensation(BigDecimal otherCompensation) {
    this.otherCompensation = JsonNullable.<BigDecimal>of(otherCompensation);
    return this;
  }

   /**
   * All the other compensations which are not explicitly defined as salary, bonus, stock awards, or options awards. Expressed in USD and raw units.
   * @return otherCompensation
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "11200", value = "All the other compensations which are not explicitly defined as salary, bonus, stock awards, or options awards. Expressed in USD and raw units.")
  @JsonIgnore

  public BigDecimal getOtherCompensation() {
        return otherCompensation.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OTHER_COMPENSATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getOtherCompensation_JsonNullable() {
    return otherCompensation;
  }
  
  @JsonProperty(JSON_PROPERTY_OTHER_COMPENSATION)
  public void setOtherCompensation_JsonNullable(JsonNullable<BigDecimal> otherCompensation) {
    this.otherCompensation = otherCompensation;
  }

  public void setOtherCompensation(BigDecimal otherCompensation) {
    this.otherCompensation = JsonNullable.<BigDecimal>of(otherCompensation);
  }


  public CompanyCompensation totalCompensation(BigDecimal totalCompensation) {
    this.totalCompensation = JsonNullable.<BigDecimal>of(totalCompensation);
    return this;
  }

   /**
   * The sum of all compensation for the requested person as reported by the company. Expressed in USD and raw units.
   * @return totalCompensation
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "4719062", value = "The sum of all compensation for the requested person as reported by the company. Expressed in USD and raw units.")
  @JsonIgnore

  public BigDecimal getTotalCompensation() {
        return totalCompensation.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TOTAL_COMPENSATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getTotalCompensation_JsonNullable() {
    return totalCompensation;
  }
  
  @JsonProperty(JSON_PROPERTY_TOTAL_COMPENSATION)
  public void setTotalCompensation_JsonNullable(JsonNullable<BigDecimal> totalCompensation) {
    this.totalCompensation = totalCompensation;
  }

  public void setTotalCompensation(BigDecimal totalCompensation) {
    this.totalCompensation = JsonNullable.<BigDecimal>of(totalCompensation);
  }


  public CompanyCompensation nonEquityIncentivePlanComp(BigDecimal nonEquityIncentivePlanComp) {
    this.nonEquityIncentivePlanComp = JsonNullable.<BigDecimal>of(nonEquityIncentivePlanComp);
    return this;
  }

   /**
   * All the earnings pursuant to awards under non-equity incentive plans. Expressed in USD and raw units.
   * @return nonEquityIncentivePlanComp
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "10731000", value = "All the earnings pursuant to awards under non-equity incentive plans. Expressed in USD and raw units.")
  @JsonIgnore

  public BigDecimal getNonEquityIncentivePlanComp() {
        return nonEquityIncentivePlanComp.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NON_EQUITY_INCENTIVE_PLAN_COMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getNonEquityIncentivePlanComp_JsonNullable() {
    return nonEquityIncentivePlanComp;
  }
  
  @JsonProperty(JSON_PROPERTY_NON_EQUITY_INCENTIVE_PLAN_COMP)
  public void setNonEquityIncentivePlanComp_JsonNullable(JsonNullable<BigDecimal> nonEquityIncentivePlanComp) {
    this.nonEquityIncentivePlanComp = nonEquityIncentivePlanComp;
  }

  public void setNonEquityIncentivePlanComp(BigDecimal nonEquityIncentivePlanComp) {
    this.nonEquityIncentivePlanComp = JsonNullable.<BigDecimal>of(nonEquityIncentivePlanComp);
  }


  public CompanyCompensation nonQualifiedCompEarnings(BigDecimal nonQualifiedCompEarnings) {
    this.nonQualifiedCompEarnings = JsonNullable.<BigDecimal>of(nonQualifiedCompEarnings);
    return this;
  }

   /**
   * All the other nonqualified defined contribution which are not tax qualified and other contributions. Expressed in USD and raw units.
   * @return nonQualifiedCompEarnings
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "All the other nonqualified defined contribution which are not tax qualified and other contributions. Expressed in USD and raw units.")
  @JsonIgnore

  public BigDecimal getNonQualifiedCompEarnings() {
        return nonQualifiedCompEarnings.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NON_QUALIFIED_COMP_EARNINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getNonQualifiedCompEarnings_JsonNullable() {
    return nonQualifiedCompEarnings;
  }
  
  @JsonProperty(JSON_PROPERTY_NON_QUALIFIED_COMP_EARNINGS)
  public void setNonQualifiedCompEarnings_JsonNullable(JsonNullable<BigDecimal> nonQualifiedCompEarnings) {
    this.nonQualifiedCompEarnings = nonQualifiedCompEarnings;
  }

  public void setNonQualifiedCompEarnings(BigDecimal nonQualifiedCompEarnings) {
    this.nonQualifiedCompEarnings = JsonNullable.<BigDecimal>of(nonQualifiedCompEarnings);
  }


  public CompanyCompensation compensationYear(String compensationYear) {
    this.compensationYear = JsonNullable.<String>of(compensationYear);
    return this;
  }

   /**
   * The most recent year of compensation is expressed as &#39;YYYY&#39; as opposed to &#39;YYYY-MM-DD&#39; format.
   * @return compensationYear
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "2020", value = "The most recent year of compensation is expressed as 'YYYY' as opposed to 'YYYY-MM-DD' format.")
  @JsonIgnore

  public String getCompensationYear() {
        return compensationYear.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COMPENSATION_YEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCompensationYear_JsonNullable() {
    return compensationYear;
  }
  
  @JsonProperty(JSON_PROPERTY_COMPENSATION_YEAR)
  public void setCompensationYear_JsonNullable(JsonNullable<String> compensationYear) {
    this.compensationYear = compensationYear;
  }

  public void setCompensationYear(String compensationYear) {
    this.compensationYear = JsonNullable.<String>of(compensationYear);
  }


  public CompanyCompensation requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

   /**
   * Original identifier used for the request.
   * @return requestId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "TSLA-US", value = "Original identifier used for the request.")
  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRequestId() {
    return requestId;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }


  /**
   * Return true if this companyCompensation object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CompanyCompensation companyCompensation = (CompanyCompensation) o;
    return equalsNullable(this.name, companyCompensation.name) &&
        equalsNullable(this.personId, companyCompensation.personId) &&
        equalsNullable(this.title, companyCompensation.title) &&
        equalsNullable(this.salary, companyCompensation.salary) &&
        equalsNullable(this.bonus, companyCompensation.bonus) &&
        equalsNullable(this.stockAwards, companyCompensation.stockAwards) &&
        equalsNullable(this.optionsAwards, companyCompensation.optionsAwards) &&
        equalsNullable(this.otherCompensation, companyCompensation.otherCompensation) &&
        equalsNullable(this.totalCompensation, companyCompensation.totalCompensation) &&
        equalsNullable(this.nonEquityIncentivePlanComp, companyCompensation.nonEquityIncentivePlanComp) &&
        equalsNullable(this.nonQualifiedCompEarnings, companyCompensation.nonQualifiedCompEarnings) &&
        equalsNullable(this.compensationYear, companyCompensation.compensationYear) &&
        Objects.equals(this.requestId, companyCompensation.requestId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(name), hashCodeNullable(personId), hashCodeNullable(title), hashCodeNullable(salary), hashCodeNullable(bonus), hashCodeNullable(stockAwards), hashCodeNullable(optionsAwards), hashCodeNullable(otherCompensation), hashCodeNullable(totalCompensation), hashCodeNullable(nonEquityIncentivePlanComp), hashCodeNullable(nonQualifiedCompEarnings), hashCodeNullable(compensationYear), requestId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CompanyCompensation {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    personId: ").append(toIndentedString(personId)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    salary: ").append(toIndentedString(salary)).append("\n");
    sb.append("    bonus: ").append(toIndentedString(bonus)).append("\n");
    sb.append("    stockAwards: ").append(toIndentedString(stockAwards)).append("\n");
    sb.append("    optionsAwards: ").append(toIndentedString(optionsAwards)).append("\n");
    sb.append("    otherCompensation: ").append(toIndentedString(otherCompensation)).append("\n");
    sb.append("    totalCompensation: ").append(toIndentedString(totalCompensation)).append("\n");
    sb.append("    nonEquityIncentivePlanComp: ").append(toIndentedString(nonEquityIncentivePlanComp)).append("\n");
    sb.append("    nonQualifiedCompEarnings: ").append(toIndentedString(nonQualifiedCompEarnings)).append("\n");
    sb.append("    compensationYear: ").append(toIndentedString(compensationYear)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

