/*
 * Investment Research API
 *  The Investment Research API provides a comprehensive set of functionalities for searching and retrieving research reports and documents from various contributors.  This API is designed to expose document search and document retrieval functionality. A document search will allow a request to query FactSet document databases based on certain search criteria specified in the request.  FactSet collects research reports and models from brokers, independent research providers, market research firms, rating agencies, and other publishers of research. These documents are processed and made available to clients within about two minutes of receipt.  FactSet delivers this content through two main products:  **FactSet Research Connect** – real-time research for investment managers entitled by the contributors to access the content.  **FactSet Aftermarket Research** – delayed research for investment bankers permitted by contributors to purchase the research.  The meta endpoints namely time-zones, categories, research-contributors, research-analysts, security-types and asset-types provide comprehensive lists of data that is used in the research endpoints.    
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.InvestmentResearch.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.InvestmentResearch.JSON;


/**
 * Pagination Object
 */
@ApiModel(description = "Pagination Object")
@JsonPropertyOrder({
  InvestmentResearchResponseMetaPagination.JSON_PROPERTY_IS_ESTIMATED_TOTAL,
  InvestmentResearchResponseMetaPagination.JSON_PROPERTY_TOTAL
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class InvestmentResearchResponseMetaPagination implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_IS_ESTIMATED_TOTAL = "isEstimatedTotal";
  private Boolean isEstimatedTotal;

  public static final String JSON_PROPERTY_TOTAL = "total";
  private Integer total;

  public InvestmentResearchResponseMetaPagination() { 
  }

  public InvestmentResearchResponseMetaPagination isEstimatedTotal(Boolean isEstimatedTotal) {
    this.isEstimatedTotal = isEstimatedTotal;
    return this;
  }

   /**
   * This field acts as a flag for the exact count of results and is defaulted to false as the API should always return the exact count of results.
   * @return isEstimatedTotal
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "This field acts as a flag for the exact count of results and is defaulted to false as the API should always return the exact count of results.")
  @JsonProperty(JSON_PROPERTY_IS_ESTIMATED_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsEstimatedTotal() {
    return isEstimatedTotal;
  }


  @JsonProperty(JSON_PROPERTY_IS_ESTIMATED_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsEstimatedTotal(Boolean isEstimatedTotal) {
    this.isEstimatedTotal = isEstimatedTotal;
  }


  public InvestmentResearchResponseMetaPagination total(Integer total) {
    this.total = total;
    return this;
  }

   /**
   * Total number of files the API returns for a particular query.    
   * @return total
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Total number of files the API returns for a particular query.    ")
  @JsonProperty(JSON_PROPERTY_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTotal() {
    return total;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotal(Integer total) {
    this.total = total;
  }


  /**
   * Return true if this InvestmentResearchResponse_meta_pagination object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InvestmentResearchResponseMetaPagination investmentResearchResponseMetaPagination = (InvestmentResearchResponseMetaPagination) o;
    return Objects.equals(this.isEstimatedTotal, investmentResearchResponseMetaPagination.isEstimatedTotal) &&
        Objects.equals(this.total, investmentResearchResponseMetaPagination.total);
  }

  @Override
  public int hashCode() {
    return Objects.hash(isEstimatedTotal, total);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InvestmentResearchResponseMetaPagination {\n");
    sb.append("    isEstimatedTotal: ").append(toIndentedString(isEstimatedTotal)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

