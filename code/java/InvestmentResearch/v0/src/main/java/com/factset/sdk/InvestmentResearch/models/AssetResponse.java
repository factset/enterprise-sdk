/*
 * Investment Research API
 *  The Investment Research API provides a comprehensive set of functionalities for searching and retrieving research reports and documents from various contributors.  This API is designed to expose document search and document retrieval functionality. A document search will allow a request to query FactSet document databases based on certain search criteria specified in the request.  FactSet collects research reports and models from brokers, independent research providers, market research firms, rating agencies, and other publishers of research. These documents are processed and made available to clients within about two minutes of receipt.  FactSet delivers this content through two main products:  **FactSet Research Connect** – real-time research for investment managers entitled by the contributors to access the content.  **FactSet Aftermarket Research** – delayed research for investment bankers permitted by contributors to purchase the research.  The meta endpoints namely time-zones, categories, research-contributors, research-analysts, security-types and asset-types provide comprehensive lists of data that is used in the research endpoints.    
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.InvestmentResearch.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.InvestmentResearch.JSON;


/**
 * Asset Type
 */
@ApiModel(description = "Asset Type")
@JsonPropertyOrder({
  AssetResponse.JSON_PROPERTY_ASSET_TYPES
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class AssetResponse implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ASSET_TYPES = "assetTypes";
  private java.util.List<String> assetTypes = null;

  public AssetResponse() { 
  }

  public AssetResponse assetTypes(java.util.List<String> assetTypes) {
    this.assetTypes = assetTypes;
    return this;
  }

  public AssetResponse addAssetTypesItem(String assetTypesItem) {
    if (this.assetTypes == null) {
      this.assetTypes = new java.util.ArrayList<>();
    }
    this.assetTypes.add(assetTypesItem);
    return this;
  }

   /**
   * Array of supported asset types.
   * @return assetTypes
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Array of supported asset types.")
  @JsonProperty(JSON_PROPERTY_ASSET_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<String> getAssetTypes() {
    return assetTypes;
  }


  @JsonProperty(JSON_PROPERTY_ASSET_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAssetTypes(java.util.List<String> assetTypes) {
    this.assetTypes = assetTypes;
  }


  /**
   * Return true if this AssetResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AssetResponse assetResponse = (AssetResponse) o;
    return Objects.equals(this.assetTypes, assetResponse.assetTypes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assetTypes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AssetResponse {\n");
    sb.append("    assetTypes: ").append(toIndentedString(assetTypes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

