/*
 * FactSet Fundamentals API
 * Gain access to current, comprehensive, and comparative information on securities in worldwide developed and emerging markets. In addition to the latest reported data, this API provides Point-in-Time (PIT) views to access fundamentals data as it was known on any given date. Composed of annual and interim/quarterly data, detailed historical financial statement content, per-share data, and calculated ratios, FactSet Fundamentals provides you with the information you need for a global investment perspective.<p>This API is rate-limited to 10 requests per second and 10 concurrent requests per user.</p> 
 *
 * The version of the OpenAPI document: 2.5.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetFundamentals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetFundamentals.JSON;


/**
 * Detailed information about a single fiscal period for a security, including its Point-in-Time validity.
 */
@ApiModel(description = "Detailed information about a single fiscal period for a security, including its Point-in-Time validity.")
@JsonPropertyOrder({
  PeriodInfo.JSON_PROPERTY_REQUEST_ID,
  PeriodInfo.JSON_PROPERTY_FSYM_ID,
  PeriodInfo.JSON_PROPERTY_FISCAL_INTERIM_NUMBER,
  PeriodInfo.JSON_PROPERTY_PERIODICITY,
  PeriodInfo.JSON_PROPERTY_FISCAL_DATE,
  PeriodInfo.JSON_PROPERTY_FYE_CHANGE,
  PeriodInfo.JSON_PROPERTY_PIT_START,
  PeriodInfo.JSON_PROPERTY_PIT_END
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class PeriodInfo implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_REQUEST_ID = "requestId";
  private String requestId;

  public static final String JSON_PROPERTY_FSYM_ID = "fsymId";
  private JsonNullable<String> fsymId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FISCAL_INTERIM_NUMBER = "fiscalInterimNumber";
  private JsonNullable<Integer> fiscalInterimNumber = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_PERIODICITY = "periodicity";
  private JsonNullable<String> periodicity = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FISCAL_DATE = "fiscalDate";
  private JsonNullable<LocalDate> fiscalDate = JsonNullable.<LocalDate>undefined();

  public static final String JSON_PROPERTY_FYE_CHANGE = "fyeChange";
  private JsonNullable<Boolean> fyeChange = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_PIT_START = "pitStart";
  private JsonNullable<OffsetDateTime> pitStart = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_PIT_END = "pitEnd";
  private JsonNullable<OffsetDateTime> pitEnd = JsonNullable.<OffsetDateTime>undefined();

  public PeriodInfo() { 
  }

  public PeriodInfo requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

   /**
   * The identifier provided in the input request that corresponds to this period information.
   * @return requestId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "FDS-US", value = "The identifier provided in the input request that corresponds to this period information.")
  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRequestId() {
    return requestId;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }


  public PeriodInfo fsymId(String fsymId) {
    this.fsymId = JsonNullable.<String>of(fsymId);
    return this;
  }

   /**
   * FactSet Regional Security Identifier representing the specific data series for the requested &#x60;requestId&#x60;.
   * @return fsymId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "SQFMK3-R", value = "FactSet Regional Security Identifier representing the specific data series for the requested `requestId`.")
  @JsonIgnore

  public String getFsymId() {
        return fsymId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFsymId_JsonNullable() {
    return fsymId;
  }
  
  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  public void setFsymId_JsonNullable(JsonNullable<String> fsymId) {
    this.fsymId = fsymId;
  }

  public void setFsymId(String fsymId) {
    this.fsymId = JsonNullable.<String>of(fsymId);
  }


  public PeriodInfo fiscalInterimNumber(Integer fiscalInterimNumber) {
    this.fiscalInterimNumber = JsonNullable.<Integer>of(fiscalInterimNumber);
    return this;
  }

   /**
   * The sequential number of the interim period within the fiscal year (e.g., 1 for Q1, 2 for Q2).
   * @return fiscalInterimNumber
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "1", value = "The sequential number of the interim period within the fiscal year (e.g., 1 for Q1, 2 for Q2).")
  @JsonIgnore

  public Integer getFiscalInterimNumber() {
        return fiscalInterimNumber.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FISCAL_INTERIM_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getFiscalInterimNumber_JsonNullable() {
    return fiscalInterimNumber;
  }
  
  @JsonProperty(JSON_PROPERTY_FISCAL_INTERIM_NUMBER)
  public void setFiscalInterimNumber_JsonNullable(JsonNullable<Integer> fiscalInterimNumber) {
    this.fiscalInterimNumber = fiscalInterimNumber;
  }

  public void setFiscalInterimNumber(Integer fiscalInterimNumber) {
    this.fiscalInterimNumber = JsonNullable.<Integer>of(fiscalInterimNumber);
  }


  public PeriodInfo periodicity(String periodicity) {
    this.periodicity = JsonNullable.<String>of(periodicity);
    return this;
  }

   /**
   * Periodicity code for this fiscal period (e.g., &#x60;QTR&#x60;, &#x60;ANN&#x60;).
   * @return periodicity
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "QTR", value = "Periodicity code for this fiscal period (e.g., `QTR`, `ANN`).")
  @JsonIgnore

  public String getPeriodicity() {
        return periodicity.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PERIODICITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPeriodicity_JsonNullable() {
    return periodicity;
  }
  
  @JsonProperty(JSON_PROPERTY_PERIODICITY)
  public void setPeriodicity_JsonNullable(JsonNullable<String> periodicity) {
    this.periodicity = periodicity;
  }

  public void setPeriodicity(String periodicity) {
    this.periodicity = JsonNullable.<String>of(periodicity);
  }


  public PeriodInfo fiscalDate(LocalDate fiscalDate) {
    this.fiscalDate = JsonNullable.<LocalDate>of(fiscalDate);
    return this;
  }

   /**
   * The specific date used for reporting the period end, which may occasionally differ slightly from the period&#39;s actual calendar end date (YYYY-MM-DD).
   * @return fiscalDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Thu Nov 30 00:00:00 UTC 2017", value = "The specific date used for reporting the period end, which may occasionally differ slightly from the period's actual calendar end date (YYYY-MM-DD).")
  @JsonIgnore

  public LocalDate getFiscalDate() {
        return fiscalDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FISCAL_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LocalDate> getFiscalDate_JsonNullable() {
    return fiscalDate;
  }
  
  @JsonProperty(JSON_PROPERTY_FISCAL_DATE)
  public void setFiscalDate_JsonNullable(JsonNullable<LocalDate> fiscalDate) {
    this.fiscalDate = fiscalDate;
  }

  public void setFiscalDate(LocalDate fiscalDate) {
    this.fiscalDate = JsonNullable.<LocalDate>of(fiscalDate);
  }


  public PeriodInfo fyeChange(Boolean fyeChange) {
    this.fyeChange = JsonNullable.<Boolean>of(fyeChange);
    return this;
  }

   /**
   * Flag indicating if a Fiscal Year End (FYE) change occurred during or impacted this specific period (&#x60;true&#x60; if changed, &#x60;false&#x60; otherwise).
   * @return fyeChange
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "false", value = "Flag indicating if a Fiscal Year End (FYE) change occurred during or impacted this specific period (`true` if changed, `false` otherwise).")
  @JsonIgnore

  public Boolean getFyeChange() {
        return fyeChange.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FYE_CHANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getFyeChange_JsonNullable() {
    return fyeChange;
  }
  
  @JsonProperty(JSON_PROPERTY_FYE_CHANGE)
  public void setFyeChange_JsonNullable(JsonNullable<Boolean> fyeChange) {
    this.fyeChange = fyeChange;
  }

  public void setFyeChange(Boolean fyeChange) {
    this.fyeChange = JsonNullable.<Boolean>of(fyeChange);
  }


  public PeriodInfo pitStart(OffsetDateTime pitStart) {
    this.pitStart = JsonNullable.<OffsetDateTime>of(pitStart);
    return this;
  }

   /**
   * The UTC timestamp for when the fiscal period information was first published and became available.
   * @return pitStart
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "2018-03-27T14:01:17Z", value = "The UTC timestamp for when the fiscal period information was first published and became available.")
  @JsonIgnore

  public OffsetDateTime getPitStart() {
        return pitStart.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PIT_START)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getPitStart_JsonNullable() {
    return pitStart;
  }
  
  @JsonProperty(JSON_PROPERTY_PIT_START)
  public void setPitStart_JsonNullable(JsonNullable<OffsetDateTime> pitStart) {
    this.pitStart = pitStart;
  }

  public void setPitStart(OffsetDateTime pitStart) {
    this.pitStart = JsonNullable.<OffsetDateTime>of(pitStart);
  }


  public PeriodInfo pitEnd(OffsetDateTime pitEnd) {
    this.pitEnd = JsonNullable.<OffsetDateTime>of(pitEnd);
    return this;
  }

   /**
   * The UTC timestamp for when this version of the fiscal period information was superseded by a newer version. A &#x60;null&#x60; value indicates that this is the latest available version.
   * @return pitEnd
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The UTC timestamp for when this version of the fiscal period information was superseded by a newer version. A `null` value indicates that this is the latest available version.")
  @JsonIgnore

  public OffsetDateTime getPitEnd() {
        return pitEnd.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PIT_END)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getPitEnd_JsonNullable() {
    return pitEnd;
  }
  
  @JsonProperty(JSON_PROPERTY_PIT_END)
  public void setPitEnd_JsonNullable(JsonNullable<OffsetDateTime> pitEnd) {
    this.pitEnd = pitEnd;
  }

  public void setPitEnd(OffsetDateTime pitEnd) {
    this.pitEnd = JsonNullable.<OffsetDateTime>of(pitEnd);
  }


  /**
   * Return true if this PeriodInfo object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PeriodInfo periodInfo = (PeriodInfo) o;
    return Objects.equals(this.requestId, periodInfo.requestId) &&
        equalsNullable(this.fsymId, periodInfo.fsymId) &&
        equalsNullable(this.fiscalInterimNumber, periodInfo.fiscalInterimNumber) &&
        equalsNullable(this.periodicity, periodInfo.periodicity) &&
        equalsNullable(this.fiscalDate, periodInfo.fiscalDate) &&
        equalsNullable(this.fyeChange, periodInfo.fyeChange) &&
        equalsNullable(this.pitStart, periodInfo.pitStart) &&
        equalsNullable(this.pitEnd, periodInfo.pitEnd);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestId, hashCodeNullable(fsymId), hashCodeNullable(fiscalInterimNumber), hashCodeNullable(periodicity), hashCodeNullable(fiscalDate), hashCodeNullable(fyeChange), hashCodeNullable(pitStart), hashCodeNullable(pitEnd));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PeriodInfo {\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    fsymId: ").append(toIndentedString(fsymId)).append("\n");
    sb.append("    fiscalInterimNumber: ").append(toIndentedString(fiscalInterimNumber)).append("\n");
    sb.append("    periodicity: ").append(toIndentedString(periodicity)).append("\n");
    sb.append("    fiscalDate: ").append(toIndentedString(fiscalDate)).append("\n");
    sb.append("    fyeChange: ").append(toIndentedString(fyeChange)).append("\n");
    sb.append("    pitStart: ").append(toIndentedString(pitStart)).append("\n");
    sb.append("    pitEnd: ").append(toIndentedString(pitEnd)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

