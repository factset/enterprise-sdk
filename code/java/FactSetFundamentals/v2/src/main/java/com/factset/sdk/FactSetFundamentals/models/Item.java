/*
 * FactSet Fundamentals API
 * Gain access to current, comprehensive, and comparative information on securities in worldwide developed and emerging markets. Composed of annual and interim/quarterly data, detailed historical financial statement content, per-share data, and calculated ratios, FactSet Fundamentals provides you with the information you need for a global investment perspective.<p>This API is rate-limited to 10 requests per second and 10 concurrent requests per user.</p> 
 *
 * The version of the OpenAPI document: 2.4.1
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetFundamentals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetFundamentals.JSON;


/**
 * Item
 */
@JsonPropertyOrder({
  Item.JSON_PROPERTY_NAME,
  Item.JSON_PROPERTY_FF_CODE,
  Item.JSON_PROPERTY_DISPLAY_LEVEL,
  Item.JSON_PROPERTY_DISPLAY_ORDER,
  Item.JSON_PROPERTY_VALUE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class Item implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_FF_CODE = "ffCode";
  private String ffCode;

  public static final String JSON_PROPERTY_DISPLAY_LEVEL = "displayLevel";
  private String displayLevel;

  public static final String JSON_PROPERTY_DISPLAY_ORDER = "displayOrder";
  private Integer displayOrder;

  public static final String JSON_PROPERTY_VALUE = "value";
  private java.util.List<Double> value = null;

  public Item() { 
  }

  public Item name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the metric
   * @return name
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Name of the metric")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public Item ffCode(String ffCode) {
    this.ffCode = ffCode;
    return this;
  }

   /**
   * FactSet Fundamental code representing the corresponding financial metric
   * @return ffCode
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "FactSet Fundamental code representing the corresponding financial metric")
  @JsonProperty(JSON_PROPERTY_FF_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFfCode() {
    return ffCode;
  }


  @JsonProperty(JSON_PROPERTY_FF_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFfCode(String ffCode) {
    this.ffCode = ffCode;
  }


  public Item displayLevel(String displayLevel) {
    this.displayLevel = displayLevel;
    return this;
  }

   /**
   * Describes the level of displaying the item
   * @return displayLevel
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Describes the level of displaying the item")
  @JsonProperty(JSON_PROPERTY_DISPLAY_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplayLevel() {
    return displayLevel;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayLevel(String displayLevel) {
    this.displayLevel = displayLevel;
  }


  public Item displayOrder(Integer displayOrder) {
    this.displayOrder = displayOrder;
    return this;
  }

   /**
   * Describes the order of displaying the item
   * @return displayOrder
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Describes the order of displaying the item")
  @JsonProperty(JSON_PROPERTY_DISPLAY_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDisplayOrder() {
    return displayOrder;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayOrder(Integer displayOrder) {
    this.displayOrder = displayOrder;
  }


  public Item value(java.util.List<Double> value) {
    this.value = value;
    return this;
  }

  public Item addValueItem(Double valueItem) {
    if (this.value == null) {
      this.value = new java.util.ArrayList<>();
    }
    this.value.add(valueItem);
    return this;
  }

   /**
   * Get value
   * @return value
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<Double> getValue() {
    return value;
  }


  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValue(java.util.List<Double> value) {
    this.value = value;
  }


  /**
   * Return true if this Item object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Item item = (Item) o;
    return Objects.equals(this.name, item.name) &&
        Objects.equals(this.ffCode, item.ffCode) &&
        Objects.equals(this.displayLevel, item.displayLevel) &&
        Objects.equals(this.displayOrder, item.displayOrder) &&
        Objects.equals(this.value, item.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, ffCode, displayLevel, displayOrder, value);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Item {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    ffCode: ").append(toIndentedString(ffCode)).append("\n");
    sb.append("    displayLevel: ").append(toIndentedString(displayLevel)).append("\n");
    sb.append("    displayOrder: ").append(toIndentedString(displayOrder)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

