/*
 * FactSet Fundamentals API
 * Gain access to current, comprehensive, and comparative information on securities in worldwide developed and emerging markets. Composed of annual and interim/quarterly data, detailed historical financial statement content, per-share data, and calculated ratios, FactSet Fundamentals provides you with the information you need for a global investment perspective.<p>This API is rate-limited to 10 requests per second and 10 concurrent requests per user.</p> 
 *
 * The version of the OpenAPI document: 2.2.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetFundamentals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetFundamentals.JSON;


/**
 * Address
 */
@JsonPropertyOrder({
  Address.JSON_PROPERTY_STREET_LINE1,
  Address.JSON_PROPERTY_STREET_LINE2,
  Address.JSON_PROPERTY_CITY,
  Address.JSON_PROPERTY_STATE,
  Address.JSON_PROPERTY_STATE_NAME,
  Address.JSON_PROPERTY_COUNTRY,
  Address.JSON_PROPERTY_ZIP,
  Address.JSON_PROPERTY_PHONE_NUMBER,
  Address.JSON_PROPERTY_WEBSITE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class Address implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_STREET_LINE1 = "streetLine1";
  private JsonNullable<String> streetLine1 = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_STREET_LINE2 = "streetLine2";
  private JsonNullable<String> streetLine2 = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CITY = "city";
  private JsonNullable<String> city = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_STATE = "state";
  private JsonNullable<String> state = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_STATE_NAME = "stateName";
  private JsonNullable<String> stateName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_COUNTRY = "country";
  private JsonNullable<String> country = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ZIP = "zip";
  private JsonNullable<String> zip = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PHONE_NUMBER = "phoneNumber";
  private JsonNullable<String> phoneNumber = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_WEBSITE = "website";
  private JsonNullable<String> website = JsonNullable.<String>undefined();

  public Address() { 
  }

  public Address streetLine1(String streetLine1) {
    this.streetLine1 = JsonNullable.<String>of(streetLine1);
    return this;
  }

   /**
   * Street line where the company head quarters are located
   * @return streetLine1
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "One Apple Park Way", value = "Street line where the company head quarters are located")
  @JsonIgnore

  public String getStreetLine1() {
        return streetLine1.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STREET_LINE1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getStreetLine1_JsonNullable() {
    return streetLine1;
  }
  
  @JsonProperty(JSON_PROPERTY_STREET_LINE1)
  public void setStreetLine1_JsonNullable(JsonNullable<String> streetLine1) {
    this.streetLine1 = streetLine1;
  }

  public void setStreetLine1(String streetLine1) {
    this.streetLine1 = JsonNullable.<String>of(streetLine1);
  }


  public Address streetLine2(String streetLine2) {
    this.streetLine2 = JsonNullable.<String>of(streetLine2);
    return this;
  }

   /**
   * Additional Street line where the company head quarters are located, if available
   * @return streetLine2
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Suite 100", value = "Additional Street line where the company head quarters are located, if available")
  @JsonIgnore

  public String getStreetLine2() {
        return streetLine2.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STREET_LINE2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getStreetLine2_JsonNullable() {
    return streetLine2;
  }
  
  @JsonProperty(JSON_PROPERTY_STREET_LINE2)
  public void setStreetLine2_JsonNullable(JsonNullable<String> streetLine2) {
    this.streetLine2 = streetLine2;
  }

  public void setStreetLine2(String streetLine2) {
    this.streetLine2 = JsonNullable.<String>of(streetLine2);
  }


  public Address city(String city) {
    this.city = JsonNullable.<String>of(city);
    return this;
  }

   /**
   * City where the company head quarters are located
   * @return city
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Cupertino", value = "City where the company head quarters are located")
  @JsonIgnore

  public String getCity() {
        return city.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCity_JsonNullable() {
    return city;
  }
  
  @JsonProperty(JSON_PROPERTY_CITY)
  public void setCity_JsonNullable(JsonNullable<String> city) {
    this.city = city;
  }

  public void setCity(String city) {
    this.city = JsonNullable.<String>of(city);
  }


  public Address state(String state) {
    this.state = JsonNullable.<String>of(state);
    return this;
  }

   /**
   * State code for which state the company head quarters are located
   * @return state
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "CA", value = "State code for which state the company head quarters are located")
  @JsonIgnore

  public String getState() {
        return state.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getState_JsonNullable() {
    return state;
  }
  
  @JsonProperty(JSON_PROPERTY_STATE)
  public void setState_JsonNullable(JsonNullable<String> state) {
    this.state = state;
  }

  public void setState(String state) {
    this.state = JsonNullable.<String>of(state);
  }


  public Address stateName(String stateName) {
    this.stateName = JsonNullable.<String>of(stateName);
    return this;
  }

   /**
   * Full State Name of the state where the company head quarters are located
   * @return stateName
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "California", value = "Full State Name of the state where the company head quarters are located")
  @JsonIgnore

  public String getStateName() {
        return stateName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STATE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getStateName_JsonNullable() {
    return stateName;
  }
  
  @JsonProperty(JSON_PROPERTY_STATE_NAME)
  public void setStateName_JsonNullable(JsonNullable<String> stateName) {
    this.stateName = stateName;
  }

  public void setStateName(String stateName) {
    this.stateName = JsonNullable.<String>of(stateName);
  }


  public Address country(String country) {
    this.country = JsonNullable.<String>of(country);
    return this;
  }

   /**
   * Full Country Name of the country where the company head quarters are located
   * @return country
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "US", value = "Full Country Name of the country where the company head quarters are located")
  @JsonIgnore

  public String getCountry() {
        return country.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCountry_JsonNullable() {
    return country;
  }
  
  @JsonProperty(JSON_PROPERTY_COUNTRY)
  public void setCountry_JsonNullable(JsonNullable<String> country) {
    this.country = country;
  }

  public void setCountry(String country) {
    this.country = JsonNullable.<String>of(country);
  }


  public Address zip(String zip) {
    this.zip = JsonNullable.<String>of(zip);
    return this;
  }

   /**
   * Zipcode of the city where the company head quarters are located
   * @return zip
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "95014-2083", value = "Zipcode of the city where the company head quarters are located")
  @JsonIgnore

  public String getZip() {
        return zip.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ZIP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getZip_JsonNullable() {
    return zip;
  }
  
  @JsonProperty(JSON_PROPERTY_ZIP)
  public void setZip_JsonNullable(JsonNullable<String> zip) {
    this.zip = zip;
  }

  public void setZip(String zip) {
    this.zip = JsonNullable.<String>of(zip);
  }


  public Address phoneNumber(String phoneNumber) {
    this.phoneNumber = JsonNullable.<String>of(phoneNumber);
    return this;
  }

   /**
   * Phone number of the company
   * @return phoneNumber
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "1.408.996.1010", value = "Phone number of the company")
  @JsonIgnore

  public String getPhoneNumber() {
        return phoneNumber.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PHONE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPhoneNumber_JsonNullable() {
    return phoneNumber;
  }
  
  @JsonProperty(JSON_PROPERTY_PHONE_NUMBER)
  public void setPhoneNumber_JsonNullable(JsonNullable<String> phoneNumber) {
    this.phoneNumber = phoneNumber;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = JsonNullable.<String>of(phoneNumber);
  }


  public Address website(String website) {
    this.website = JsonNullable.<String>of(website);
    return this;
  }

   /**
   * Website of the company
   * @return website
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "http://www.apple.com", value = "Website of the company")
  @JsonIgnore

  public String getWebsite() {
        return website.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WEBSITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getWebsite_JsonNullable() {
    return website;
  }
  
  @JsonProperty(JSON_PROPERTY_WEBSITE)
  public void setWebsite_JsonNullable(JsonNullable<String> website) {
    this.website = website;
  }

  public void setWebsite(String website) {
    this.website = JsonNullable.<String>of(website);
  }


  /**
   * Return true if this Address object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Address address = (Address) o;
    return equalsNullable(this.streetLine1, address.streetLine1) &&
        equalsNullable(this.streetLine2, address.streetLine2) &&
        equalsNullable(this.city, address.city) &&
        equalsNullable(this.state, address.state) &&
        equalsNullable(this.stateName, address.stateName) &&
        equalsNullable(this.country, address.country) &&
        equalsNullable(this.zip, address.zip) &&
        equalsNullable(this.phoneNumber, address.phoneNumber) &&
        equalsNullable(this.website, address.website);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(streetLine1), hashCodeNullable(streetLine2), hashCodeNullable(city), hashCodeNullable(state), hashCodeNullable(stateName), hashCodeNullable(country), hashCodeNullable(zip), hashCodeNullable(phoneNumber), hashCodeNullable(website));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Address {\n");
    sb.append("    streetLine1: ").append(toIndentedString(streetLine1)).append("\n");
    sb.append("    streetLine2: ").append(toIndentedString(streetLine2)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    stateName: ").append(toIndentedString(stateName)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    zip: ").append(toIndentedString(zip)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    website: ").append(toIndentedString(website)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

