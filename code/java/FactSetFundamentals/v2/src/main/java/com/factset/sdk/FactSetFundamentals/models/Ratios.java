/*
 * FactSet Fundamentals API
 * Gain access to current, comprehensive, and comparative information on securities in worldwide developed and emerging markets. Composed of annual and interim/quarterly data, detailed historical financial statement content, per-share data, and calculated ratios, FactSet Fundamentals provides you with the information you need for a global investment perspective.<p>This API is rate-limited to 10 requests per second and 10 concurrent requests per user.</p> 
 *
 * The version of the OpenAPI document: 2.3.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetFundamentals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetFundamentals.JSON;


/**
 * Ratios
 */
@JsonPropertyOrder({
  Ratios.JSON_PROPERTY_ASSET_TURNOVER_RATIO,
  Ratios.JSON_PROPERTY_CURRENT_RATIO,
  Ratios.JSON_PROPERTY_QUICK_RATIO,
  Ratios.JSON_PROPERTY_EBIT_MARGIN,
  Ratios.JSON_PROPERTY_EBITDA_MARGIN,
  Ratios.JSON_PROPERTY_GROSS_MARGIN,
  Ratios.JSON_PROPERTY_INVENTORY_TURNOVER,
  Ratios.JSON_PROPERTY_LONG_TERM_DEBT_TO_EQUITY,
  Ratios.JSON_PROPERTY_PAYOUT_RATIO,
  Ratios.JSON_PROPERTY_PRETAX_MARGIN,
  Ratios.JSON_PROPERTY_PRICE_TO_BOOK_RATIO,
  Ratios.JSON_PROPERTY_PRICE_TO_CASH_FLOW_RATIO,
  Ratios.JSON_PROPERTY_PRICE_TO_EARNINGS_RATIO,
  Ratios.JSON_PROPERTY_PRICE_TO_SALES_RATIO,
  Ratios.JSON_PROPERTY_RETURN_ON_ASSETS,
  Ratios.JSON_PROPERTY_RETURN_ON_EQUITY,
  Ratios.JSON_PROPERTY_RETURN_ON_INVESTED_CAPITAL,
  Ratios.JSON_PROPERTY_TOTAL_DEBT_TO_EQUITY
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class Ratios implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ASSET_TURNOVER_RATIO = "assetTurnoverRatio";
  private JsonNullable<Double> assetTurnoverRatio = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_CURRENT_RATIO = "currentRatio";
  private JsonNullable<Double> currentRatio = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_QUICK_RATIO = "quickRatio";
  private JsonNullable<Double> quickRatio = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_EBIT_MARGIN = "ebitMargin";
  private JsonNullable<Double> ebitMargin = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_EBITDA_MARGIN = "ebitdaMargin";
  private JsonNullable<Double> ebitdaMargin = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_GROSS_MARGIN = "grossMargin";
  private JsonNullable<Double> grossMargin = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_INVENTORY_TURNOVER = "inventoryTurnover";
  private JsonNullable<Double> inventoryTurnover = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_LONG_TERM_DEBT_TO_EQUITY = "longTermDebtToEquity";
  private JsonNullable<Double> longTermDebtToEquity = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_PAYOUT_RATIO = "payoutRatio";
  private JsonNullable<Double> payoutRatio = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_PRETAX_MARGIN = "pretaxMargin";
  private JsonNullable<Double> pretaxMargin = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_PRICE_TO_BOOK_RATIO = "priceToBookRatio";
  private JsonNullable<Double> priceToBookRatio = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_PRICE_TO_CASH_FLOW_RATIO = "priceToCashFlowRatio";
  private JsonNullable<Double> priceToCashFlowRatio = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_PRICE_TO_EARNINGS_RATIO = "priceToEarningsRatio";
  private JsonNullable<Double> priceToEarningsRatio = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_PRICE_TO_SALES_RATIO = "priceToSalesRatio";
  private JsonNullable<Double> priceToSalesRatio = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_RETURN_ON_ASSETS = "returnOnAssets";
  private JsonNullable<Double> returnOnAssets = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_RETURN_ON_EQUITY = "returnOnEquity";
  private JsonNullable<Double> returnOnEquity = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_RETURN_ON_INVESTED_CAPITAL = "returnOnInvestedCapital";
  private JsonNullable<Double> returnOnInvestedCapital = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_TOTAL_DEBT_TO_EQUITY = "totalDebtToEquity";
  private JsonNullable<Double> totalDebtToEquity = JsonNullable.<Double>undefined();

  public Ratios() { 
  }

  public Ratios assetTurnoverRatio(Double assetTurnoverRatio) {
    this.assetTurnoverRatio = JsonNullable.<Double>of(assetTurnoverRatio);
    return this;
  }

   /**
   * The asset turnover ratio measures the value of a company&#39;s sales or revenues relative to the value of its assets
   * @return assetTurnoverRatio
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "0.479435359033746", value = "The asset turnover ratio measures the value of a company's sales or revenues relative to the value of its assets")
  @JsonIgnore

  public Double getAssetTurnoverRatio() {
        return assetTurnoverRatio.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ASSET_TURNOVER_RATIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getAssetTurnoverRatio_JsonNullable() {
    return assetTurnoverRatio;
  }
  
  @JsonProperty(JSON_PROPERTY_ASSET_TURNOVER_RATIO)
  public void setAssetTurnoverRatio_JsonNullable(JsonNullable<Double> assetTurnoverRatio) {
    this.assetTurnoverRatio = assetTurnoverRatio;
  }

  public void setAssetTurnoverRatio(Double assetTurnoverRatio) {
    this.assetTurnoverRatio = JsonNullable.<Double>of(assetTurnoverRatio);
  }


  public Ratios currentRatio(Double currentRatio) {
    this.currentRatio = JsonNullable.<Double>of(currentRatio);
    return this;
  }

   /**
   * The current ratio is a liquidity ratio that measures a company&#39;s ability to pay short-term and long-term obligations. The ratio is calculated by comparing current assets to current liabilities
   * @return currentRatio
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "0.874795791674835", value = "The current ratio is a liquidity ratio that measures a company's ability to pay short-term and long-term obligations. The ratio is calculated by comparing current assets to current liabilities")
  @JsonIgnore

  public Double getCurrentRatio() {
        return currentRatio.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CURRENT_RATIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getCurrentRatio_JsonNullable() {
    return currentRatio;
  }
  
  @JsonProperty(JSON_PROPERTY_CURRENT_RATIO)
  public void setCurrentRatio_JsonNullable(JsonNullable<Double> currentRatio) {
    this.currentRatio = currentRatio;
  }

  public void setCurrentRatio(Double currentRatio) {
    this.currentRatio = JsonNullable.<Double>of(currentRatio);
  }


  public Ratios quickRatio(Double quickRatio) {
    this.quickRatio = JsonNullable.<Double>of(quickRatio);
    return this;
  }

   /**
   * The quick ratio measures the dollar amount of liquid assets available with the company against the dollar amount of its current liabilities
   * @return quickRatio
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "0.829085800169901", value = "The quick ratio measures the dollar amount of liquid assets available with the company against the dollar amount of its current liabilities")
  @JsonIgnore

  public Double getQuickRatio() {
        return quickRatio.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_QUICK_RATIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getQuickRatio_JsonNullable() {
    return quickRatio;
  }
  
  @JsonProperty(JSON_PROPERTY_QUICK_RATIO)
  public void setQuickRatio_JsonNullable(JsonNullable<Double> quickRatio) {
    this.quickRatio = quickRatio;
  }

  public void setQuickRatio(Double quickRatio) {
    this.quickRatio = JsonNullable.<Double>of(quickRatio);
  }


  public Ratios ebitMargin(Double ebitMargin) {
    this.ebitMargin = JsonNullable.<Double>of(ebitMargin);
    return this;
  }

   /**
   * EBIT margin is an assessment of a firm&#39;s operating profitability as a percentage of its total revenue. It is equal to earnings before interest and tax (EBIT) divided by total revenue
   * @return ebitMargin
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "16.4113340563991", value = "EBIT margin is an assessment of a firm's operating profitability as a percentage of its total revenue. It is equal to earnings before interest and tax (EBIT) divided by total revenue")
  @JsonIgnore

  public Double getEbitMargin() {
        return ebitMargin.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EBIT_MARGIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getEbitMargin_JsonNullable() {
    return ebitMargin;
  }
  
  @JsonProperty(JSON_PROPERTY_EBIT_MARGIN)
  public void setEbitMargin_JsonNullable(JsonNullable<Double> ebitMargin) {
    this.ebitMargin = ebitMargin;
  }

  public void setEbitMargin(Double ebitMargin) {
    this.ebitMargin = JsonNullable.<Double>of(ebitMargin);
  }


  public Ratios ebitdaMargin(Double ebitdaMargin) {
    this.ebitdaMargin = JsonNullable.<Double>of(ebitdaMargin);
    return this;
  }

   /**
   * EBITDA margin is an assessment of a firm&#39;s operating profitability as a percentage of its total revenue. It is equal to earnings before interest, tax, depreciation and amortization (EBITDA) divided by total revenue
   * @return ebitdaMargin
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "23.8204989154013", value = "EBITDA margin is an assessment of a firm's operating profitability as a percentage of its total revenue. It is equal to earnings before interest, tax, depreciation and amortization (EBITDA) divided by total revenue")
  @JsonIgnore

  public Double getEbitdaMargin() {
        return ebitdaMargin.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EBITDA_MARGIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getEbitdaMargin_JsonNullable() {
    return ebitdaMargin;
  }
  
  @JsonProperty(JSON_PROPERTY_EBITDA_MARGIN)
  public void setEbitdaMargin_JsonNullable(JsonNullable<Double> ebitdaMargin) {
    this.ebitdaMargin = ebitdaMargin;
  }

  public void setEbitdaMargin(Double ebitdaMargin) {
    this.ebitdaMargin = JsonNullable.<Double>of(ebitdaMargin);
  }


  public Ratios grossMargin(Double grossMargin) {
    this.grossMargin = JsonNullable.<Double>of(grossMargin);
    return this;
  }

   /**
   * Gross profit margin is the proportion of money left over from revenues after accounting for the cost of goods sold, calculated by dividing gross profit by revenues.
   * @return grossMargin
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "53.843546637744", value = "Gross profit margin is the proportion of money left over from revenues after accounting for the cost of goods sold, calculated by dividing gross profit by revenues.")
  @JsonIgnore

  public Double getGrossMargin() {
        return grossMargin.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GROSS_MARGIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getGrossMargin_JsonNullable() {
    return grossMargin;
  }
  
  @JsonProperty(JSON_PROPERTY_GROSS_MARGIN)
  public void setGrossMargin_JsonNullable(JsonNullable<Double> grossMargin) {
    this.grossMargin = grossMargin;
  }

  public void setGrossMargin(Double grossMargin) {
    this.grossMargin = JsonNullable.<Double>of(grossMargin);
  }


  public Ratios inventoryTurnover(Double inventoryTurnover) {
    this.inventoryTurnover = JsonNullable.<Double>of(inventoryTurnover);
    return this;
  }

   /**
   * Inventory turnover is a ratio showing how many times a company has sold and replaced inventory during a given period
   * @return inventoryTurnover
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "17.6586282492953", value = "Inventory turnover is a ratio showing how many times a company has sold and replaced inventory during a given period")
  @JsonIgnore

  public Double getInventoryTurnover() {
        return inventoryTurnover.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INVENTORY_TURNOVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getInventoryTurnover_JsonNullable() {
    return inventoryTurnover;
  }
  
  @JsonProperty(JSON_PROPERTY_INVENTORY_TURNOVER)
  public void setInventoryTurnover_JsonNullable(JsonNullable<Double> inventoryTurnover) {
    this.inventoryTurnover = inventoryTurnover;
  }

  public void setInventoryTurnover(Double inventoryTurnover) {
    this.inventoryTurnover = JsonNullable.<Double>of(inventoryTurnover);
  }


  public Ratios longTermDebtToEquity(Double longTermDebtToEquity) {
    this.longTermDebtToEquity = JsonNullable.<Double>of(longTermDebtToEquity);
    return this;
  }

   /**
   * Long-term debt consists of loans and financial obligations lasting over one year. The Debt/Equity (D/E) Ratio is calculated by dividing a company’s total liabilities lasting over one year by its shareholder equity
   * @return longTermDebtToEquity
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "2.22278064208656", value = "Long-term debt consists of loans and financial obligations lasting over one year. The Debt/Equity (D/E) Ratio is calculated by dividing a company’s total liabilities lasting over one year by its shareholder equity")
  @JsonIgnore

  public Double getLongTermDebtToEquity() {
        return longTermDebtToEquity.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LONG_TERM_DEBT_TO_EQUITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getLongTermDebtToEquity_JsonNullable() {
    return longTermDebtToEquity;
  }
  
  @JsonProperty(JSON_PROPERTY_LONG_TERM_DEBT_TO_EQUITY)
  public void setLongTermDebtToEquity_JsonNullable(JsonNullable<Double> longTermDebtToEquity) {
    this.longTermDebtToEquity = longTermDebtToEquity;
  }

  public void setLongTermDebtToEquity(Double longTermDebtToEquity) {
    this.longTermDebtToEquity = JsonNullable.<Double>of(longTermDebtToEquity);
  }


  public Ratios payoutRatio(Double payoutRatio) {
    this.payoutRatio = JsonNullable.<Double>of(payoutRatio);
    return this;
  }

   /**
   * The dividend payout ratio is the ratio of the total amount of dividends paid out to shareholders relative to the net income of the company
   * @return payoutRatio
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "89.98265394622723", value = "The dividend payout ratio is the ratio of the total amount of dividends paid out to shareholders relative to the net income of the company")
  @JsonIgnore

  public Double getPayoutRatio() {
        return payoutRatio.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAYOUT_RATIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getPayoutRatio_JsonNullable() {
    return payoutRatio;
  }
  
  @JsonProperty(JSON_PROPERTY_PAYOUT_RATIO)
  public void setPayoutRatio_JsonNullable(JsonNullable<Double> payoutRatio) {
    this.payoutRatio = payoutRatio;
  }

  public void setPayoutRatio(Double payoutRatio) {
    this.payoutRatio = JsonNullable.<Double>of(payoutRatio);
  }


  public Ratios pretaxMargin(Double pretaxMargin) {
    this.pretaxMargin = JsonNullable.<Double>of(pretaxMargin);
    return this;
  }

   /**
   * The pretax margin is the ratio of a company&#39;s pre-tax earnings to its total sales
   * @return pretaxMargin
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "12.7236984815618", value = "The pretax margin is the ratio of a company's pre-tax earnings to its total sales")
  @JsonIgnore

  public Double getPretaxMargin() {
        return pretaxMargin.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRETAX_MARGIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getPretaxMargin_JsonNullable() {
    return pretaxMargin;
  }
  
  @JsonProperty(JSON_PROPERTY_PRETAX_MARGIN)
  public void setPretaxMargin_JsonNullable(JsonNullable<Double> pretaxMargin) {
    this.pretaxMargin = pretaxMargin;
  }

  public void setPretaxMargin(Double pretaxMargin) {
    this.pretaxMargin = JsonNullable.<Double>of(pretaxMargin);
  }


  public Ratios priceToBookRatio(Double priceToBookRatio) {
    this.priceToBookRatio = JsonNullable.<Double>of(priceToBookRatio);
    return this;
  }

   /**
   * Companies use the price-to-book ratio to compare a firm&#39;s market to book value by dividing price per share by book value per share (BVPS) .
   * @return priceToBookRatio
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "6.38918", value = "Companies use the price-to-book ratio to compare a firm's market to book value by dividing price per share by book value per share (BVPS) .")
  @JsonIgnore

  public Double getPriceToBookRatio() {
        return priceToBookRatio.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRICE_TO_BOOK_RATIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getPriceToBookRatio_JsonNullable() {
    return priceToBookRatio;
  }
  
  @JsonProperty(JSON_PROPERTY_PRICE_TO_BOOK_RATIO)
  public void setPriceToBookRatio_JsonNullable(JsonNullable<Double> priceToBookRatio) {
    this.priceToBookRatio = priceToBookRatio;
  }

  public void setPriceToBookRatio(Double priceToBookRatio) {
    this.priceToBookRatio = JsonNullable.<Double>of(priceToBookRatio);
  }


  public Ratios priceToCashFlowRatio(Double priceToCashFlowRatio) {
    this.priceToCashFlowRatio = JsonNullable.<Double>of(priceToCashFlowRatio);
    return this;
  }

   /**
   * The price-to-cash flow ratio is a stock valuation indicator or multiple that measures the value of a stock’s price relative to its operating cash flow per share.
   * @return priceToCashFlowRatio
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "11.105", value = "The price-to-cash flow ratio is a stock valuation indicator or multiple that measures the value of a stock’s price relative to its operating cash flow per share.")
  @JsonIgnore

  public Double getPriceToCashFlowRatio() {
        return priceToCashFlowRatio.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRICE_TO_CASH_FLOW_RATIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getPriceToCashFlowRatio_JsonNullable() {
    return priceToCashFlowRatio;
  }
  
  @JsonProperty(JSON_PROPERTY_PRICE_TO_CASH_FLOW_RATIO)
  public void setPriceToCashFlowRatio_JsonNullable(JsonNullable<Double> priceToCashFlowRatio) {
    this.priceToCashFlowRatio = priceToCashFlowRatio;
  }

  public void setPriceToCashFlowRatio(Double priceToCashFlowRatio) {
    this.priceToCashFlowRatio = JsonNullable.<Double>of(priceToCashFlowRatio);
  }


  public Ratios priceToEarningsRatio(Double priceToEarningsRatio) {
    this.priceToEarningsRatio = JsonNullable.<Double>of(priceToEarningsRatio);
    return this;
  }

   /**
   * The price-to-earnings ratio (P/E ratio) is the ratio for valuing a company that measures its current share price relative to its per-share earnings
   * @return priceToEarningsRatio
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "21.4293", value = "The price-to-earnings ratio (P/E ratio) is the ratio for valuing a company that measures its current share price relative to its per-share earnings")
  @JsonIgnore

  public Double getPriceToEarningsRatio() {
        return priceToEarningsRatio.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRICE_TO_EARNINGS_RATIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getPriceToEarningsRatio_JsonNullable() {
    return priceToEarningsRatio;
  }
  
  @JsonProperty(JSON_PROPERTY_PRICE_TO_EARNINGS_RATIO)
  public void setPriceToEarningsRatio_JsonNullable(JsonNullable<Double> priceToEarningsRatio) {
    this.priceToEarningsRatio = priceToEarningsRatio;
  }

  public void setPriceToEarningsRatio(Double priceToEarningsRatio) {
    this.priceToEarningsRatio = JsonNullable.<Double>of(priceToEarningsRatio);
  }


  public Ratios priceToSalesRatio(Double priceToSalesRatio) {
    this.priceToSalesRatio = JsonNullable.<Double>of(priceToSalesRatio);
    return this;
  }

   /**
   * The price-to-sales ratio (P/S ratio) is a valuation ratio that compares a company’s stock price to its revenues
   * @return priceToSalesRatio
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "2.43871", value = "The price-to-sales ratio (P/S ratio) is a valuation ratio that compares a company’s stock price to its revenues")
  @JsonIgnore

  public Double getPriceToSalesRatio() {
        return priceToSalesRatio.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRICE_TO_SALES_RATIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getPriceToSalesRatio_JsonNullable() {
    return priceToSalesRatio;
  }
  
  @JsonProperty(JSON_PROPERTY_PRICE_TO_SALES_RATIO)
  public void setPriceToSalesRatio_JsonNullable(JsonNullable<Double> priceToSalesRatio) {
    this.priceToSalesRatio = priceToSalesRatio;
  }

  public void setPriceToSalesRatio(Double priceToSalesRatio) {
    this.priceToSalesRatio = JsonNullable.<Double>of(priceToSalesRatio);
  }


  public Ratios returnOnAssets(Double returnOnAssets) {
    this.returnOnAssets = JsonNullable.<Double>of(returnOnAssets);
    return this;
  }

   /**
   * Return on net assets (RONA) is a measure of financial performance calculated as net income divided by the sum of fixed assets and net working capital
   * @return returnOnAssets
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "5.56332812114229", value = "Return on net assets (RONA) is a measure of financial performance calculated as net income divided by the sum of fixed assets and net working capital")
  @JsonIgnore

  public Double getReturnOnAssets() {
        return returnOnAssets.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RETURN_ON_ASSETS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getReturnOnAssets_JsonNullable() {
    return returnOnAssets;
  }
  
  @JsonProperty(JSON_PROPERTY_RETURN_ON_ASSETS)
  public void setReturnOnAssets_JsonNullable(JsonNullable<Double> returnOnAssets) {
    this.returnOnAssets = returnOnAssets;
  }

  public void setReturnOnAssets(Double returnOnAssets) {
    this.returnOnAssets = JsonNullable.<Double>of(returnOnAssets);
  }


  public Ratios returnOnEquity(Double returnOnEquity) {
    this.returnOnEquity = JsonNullable.<Double>of(returnOnEquity);
    return this;
  }

   /**
   * Return on equity (ROE) is a measure of financial performance calculated as net income divided by shareholders&#39; equity
   * @return returnOnEquity
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "32.8938526774336", value = "Return on equity (ROE) is a measure of financial performance calculated as net income divided by shareholders' equity")
  @JsonIgnore

  public Double getReturnOnEquity() {
        return returnOnEquity.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RETURN_ON_EQUITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getReturnOnEquity_JsonNullable() {
    return returnOnEquity;
  }
  
  @JsonProperty(JSON_PROPERTY_RETURN_ON_EQUITY)
  public void setReturnOnEquity_JsonNullable(JsonNullable<Double> returnOnEquity) {
    this.returnOnEquity = returnOnEquity;
  }

  public void setReturnOnEquity(Double returnOnEquity) {
    this.returnOnEquity = JsonNullable.<Double>of(returnOnEquity);
  }


  public Ratios returnOnInvestedCapital(Double returnOnInvestedCapital) {
    this.returnOnInvestedCapital = JsonNullable.<Double>of(returnOnInvestedCapital);
    return this;
  }

   /**
   * Return on Investment (ROI) measures how well an investment is performing
   * @return returnOnInvestedCapital
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "10.0320834452249", value = "Return on Investment (ROI) measures how well an investment is performing")
  @JsonIgnore

  public Double getReturnOnInvestedCapital() {
        return returnOnInvestedCapital.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RETURN_ON_INVESTED_CAPITAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getReturnOnInvestedCapital_JsonNullable() {
    return returnOnInvestedCapital;
  }
  
  @JsonProperty(JSON_PROPERTY_RETURN_ON_INVESTED_CAPITAL)
  public void setReturnOnInvestedCapital_JsonNullable(JsonNullable<Double> returnOnInvestedCapital) {
    this.returnOnInvestedCapital = returnOnInvestedCapital;
  }

  public void setReturnOnInvestedCapital(Double returnOnInvestedCapital) {
    this.returnOnInvestedCapital = JsonNullable.<Double>of(returnOnInvestedCapital);
  }


  public Ratios totalDebtToEquity(Double totalDebtToEquity) {
    this.totalDebtToEquity = JsonNullable.<Double>of(totalDebtToEquity);
    return this;
  }

   /**
   * The Debt/Equity (D/E) Ratio is calculated by dividing a company’s total liabilities by its shareholder equity
   * @return totalDebtToEquity
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "2.53563537108444", value = "The Debt/Equity (D/E) Ratio is calculated by dividing a company’s total liabilities by its shareholder equity")
  @JsonIgnore

  public Double getTotalDebtToEquity() {
        return totalDebtToEquity.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TOTAL_DEBT_TO_EQUITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getTotalDebtToEquity_JsonNullable() {
    return totalDebtToEquity;
  }
  
  @JsonProperty(JSON_PROPERTY_TOTAL_DEBT_TO_EQUITY)
  public void setTotalDebtToEquity_JsonNullable(JsonNullable<Double> totalDebtToEquity) {
    this.totalDebtToEquity = totalDebtToEquity;
  }

  public void setTotalDebtToEquity(Double totalDebtToEquity) {
    this.totalDebtToEquity = JsonNullable.<Double>of(totalDebtToEquity);
  }


  /**
   * Return true if this Ratios object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Ratios ratios = (Ratios) o;
    return equalsNullable(this.assetTurnoverRatio, ratios.assetTurnoverRatio) &&
        equalsNullable(this.currentRatio, ratios.currentRatio) &&
        equalsNullable(this.quickRatio, ratios.quickRatio) &&
        equalsNullable(this.ebitMargin, ratios.ebitMargin) &&
        equalsNullable(this.ebitdaMargin, ratios.ebitdaMargin) &&
        equalsNullable(this.grossMargin, ratios.grossMargin) &&
        equalsNullable(this.inventoryTurnover, ratios.inventoryTurnover) &&
        equalsNullable(this.longTermDebtToEquity, ratios.longTermDebtToEquity) &&
        equalsNullable(this.payoutRatio, ratios.payoutRatio) &&
        equalsNullable(this.pretaxMargin, ratios.pretaxMargin) &&
        equalsNullable(this.priceToBookRatio, ratios.priceToBookRatio) &&
        equalsNullable(this.priceToCashFlowRatio, ratios.priceToCashFlowRatio) &&
        equalsNullable(this.priceToEarningsRatio, ratios.priceToEarningsRatio) &&
        equalsNullable(this.priceToSalesRatio, ratios.priceToSalesRatio) &&
        equalsNullable(this.returnOnAssets, ratios.returnOnAssets) &&
        equalsNullable(this.returnOnEquity, ratios.returnOnEquity) &&
        equalsNullable(this.returnOnInvestedCapital, ratios.returnOnInvestedCapital) &&
        equalsNullable(this.totalDebtToEquity, ratios.totalDebtToEquity);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(assetTurnoverRatio), hashCodeNullable(currentRatio), hashCodeNullable(quickRatio), hashCodeNullable(ebitMargin), hashCodeNullable(ebitdaMargin), hashCodeNullable(grossMargin), hashCodeNullable(inventoryTurnover), hashCodeNullable(longTermDebtToEquity), hashCodeNullable(payoutRatio), hashCodeNullable(pretaxMargin), hashCodeNullable(priceToBookRatio), hashCodeNullable(priceToCashFlowRatio), hashCodeNullable(priceToEarningsRatio), hashCodeNullable(priceToSalesRatio), hashCodeNullable(returnOnAssets), hashCodeNullable(returnOnEquity), hashCodeNullable(returnOnInvestedCapital), hashCodeNullable(totalDebtToEquity));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Ratios {\n");
    sb.append("    assetTurnoverRatio: ").append(toIndentedString(assetTurnoverRatio)).append("\n");
    sb.append("    currentRatio: ").append(toIndentedString(currentRatio)).append("\n");
    sb.append("    quickRatio: ").append(toIndentedString(quickRatio)).append("\n");
    sb.append("    ebitMargin: ").append(toIndentedString(ebitMargin)).append("\n");
    sb.append("    ebitdaMargin: ").append(toIndentedString(ebitdaMargin)).append("\n");
    sb.append("    grossMargin: ").append(toIndentedString(grossMargin)).append("\n");
    sb.append("    inventoryTurnover: ").append(toIndentedString(inventoryTurnover)).append("\n");
    sb.append("    longTermDebtToEquity: ").append(toIndentedString(longTermDebtToEquity)).append("\n");
    sb.append("    payoutRatio: ").append(toIndentedString(payoutRatio)).append("\n");
    sb.append("    pretaxMargin: ").append(toIndentedString(pretaxMargin)).append("\n");
    sb.append("    priceToBookRatio: ").append(toIndentedString(priceToBookRatio)).append("\n");
    sb.append("    priceToCashFlowRatio: ").append(toIndentedString(priceToCashFlowRatio)).append("\n");
    sb.append("    priceToEarningsRatio: ").append(toIndentedString(priceToEarningsRatio)).append("\n");
    sb.append("    priceToSalesRatio: ").append(toIndentedString(priceToSalesRatio)).append("\n");
    sb.append("    returnOnAssets: ").append(toIndentedString(returnOnAssets)).append("\n");
    sb.append("    returnOnEquity: ").append(toIndentedString(returnOnEquity)).append("\n");
    sb.append("    returnOnInvestedCapital: ").append(toIndentedString(returnOnInvestedCapital)).append("\n");
    sb.append("    totalDebtToEquity: ").append(toIndentedString(totalDebtToEquity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

