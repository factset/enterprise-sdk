/*
 * FactSet Funds API
 * FactSet Mutual Funds data offers over 50 fund- and share class-specific data points for mutual funds listed in the United States. <p>FactSet Mutual Funds Reference provides fund-specific reference information as well as FactSet's proprietary classification system. It includes but is not limited to the following coverage    * Fund descriptions    * A seven-tier classification system   * Leverage information   * Fees and expenses    * Portfolio managers       FactSet Mutual Funds Time Series provides quantitative data items on a historical basis. It includes but is not limited to the following coverage    * Net asset value   * Fund flows    * Assets under management   * Total return  <p>This API is rate-limited to 10 requests per second and 10 concurrent requests per user.</p> 
 *
 * The version of the OpenAPI document: 1.6.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetFunds.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetFunds.JSON;


/**
 * Field
 */
@ApiModel(description = "Field")
@JsonPropertyOrder({
  Field.JSON_PROPERTY_FIELD_NAME,
  Field.JSON_PROPERTY_DISPLAY_NAME,
  Field.JSON_PROPERTY_TYPE,
  Field.JSON_PROPERTY_DESCRIPTION
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class Field implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_FIELD_NAME = "fieldName";
  private String fieldName;

  public static final String JSON_PROPERTY_DISPLAY_NAME = "displayName";
  private String displayName;

  /**
   * Field data type, where field datatype can be one of the following: * &#x60;text&#x60;  &#x3D; String, * &#x60;float&#x60; &#x3D; Floating point number, * &#x60;long&#x60;  &#x3D; integer, * &#x60;date&#x60; &#x3D; Date. * &#x60;boolean&#x60; &#x3D; &#x60;true&#x60; or &#x60;false&#x60;.  &lt;br&gt; 
   */
  public enum TypeEnum {
    TEXT("text"),
    
    FLOAT("float"),
    
    LONG("long"),
    
    DATE("date"),
    
    BOOLEAN("boolean");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public Field() { 
  }

  public Field fieldName(String fieldName) {
    this.fieldName = fieldName;
    return this;
  }

   /**
   * Field name.
   * @return fieldName
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Factset Fundamentals - FF_SALES", value = "Field name.")
  @JsonProperty(JSON_PROPERTY_FIELD_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFieldName() {
    return fieldName;
  }


  @JsonProperty(JSON_PROPERTY_FIELD_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFieldName(String fieldName) {
    this.fieldName = fieldName;
  }


  public Field displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * Field display name as provided during the creation of the content set. This is returned only for custom content sets.
   * @return displayName
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Sales", value = "Field display name as provided during the creation of the content set. This is returned only for custom content sets.")
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplayName() {
    return displayName;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public Field type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Field data type, where field datatype can be one of the following: * &#x60;text&#x60;  &#x3D; String, * &#x60;float&#x60; &#x3D; Floating point number, * &#x60;long&#x60;  &#x3D; integer, * &#x60;date&#x60; &#x3D; Date. * &#x60;boolean&#x60; &#x3D; &#x60;true&#x60; or &#x60;false&#x60;.  &lt;br&gt; 
   * @return type
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "text", value = "Field data type, where field datatype can be one of the following: * `text`  = String, * `float` = Floating point number, * `long`  = integer, * `date` = Date. * `boolean` = `true` or `false`.  <br> ")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(TypeEnum type) {
    this.type = type;
  }


  public Field description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Field description.
   * @return description
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "The sales of the company.", value = "Field description.")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  /**
   * Return true if this Field object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Field field = (Field) o;
    return Objects.equals(this.fieldName, field.fieldName) &&
        Objects.equals(this.displayName, field.displayName) &&
        Objects.equals(this.type, field.type) &&
        Objects.equals(this.description, field.description);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fieldName, displayName, type, description);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Field {\n");
    sb.append("    fieldName: ").append(toIndentedString(fieldName)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

