/*
 * FactSet Funds API
 * FactSet Mutual Funds data offers over 50 fund- and share class-specific data points for mutual funds listed in the United States. <p>FactSet Mutual Funds Reference provides fund-specific reference information as well as FactSet's proprietary classification system. It includes but is not limited to the following coverage    * Fund descriptions    * A seven-tier classification system   * Leverage information   * Fees and expenses    * Portfolio managers       FactSet Mutual Funds Time Series provides quantitative data items on a historical basis. It includes but is not limited to the following coverage    * Net asset value   * Fund flows    * Assets under management   * Total return  <p>This API is rate-limited to 10 requests per second and 10 concurrent requests per user.</p> 
 *
 * The version of the OpenAPI document: 1.6.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetFunds.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDate;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetFunds.JSON;


/**
 * ReturnsSnapshot
 */
@JsonPropertyOrder({
  ReturnsSnapshot.JSON_PROPERTY_FSYM_ID,
  ReturnsSnapshot.JSON_PROPERTY_ONE_WEEK,
  ReturnsSnapshot.JSON_PROPERTY_ONE_MONTH,
  ReturnsSnapshot.JSON_PROPERTY_THREE_MONTH,
  ReturnsSnapshot.JSON_PROPERTY_YEAR_TO_DATE,
  ReturnsSnapshot.JSON_PROPERTY_ONE_YEAR,
  ReturnsSnapshot.JSON_PROPERTY_THREE_YEAR,
  ReturnsSnapshot.JSON_PROPERTY_THREE_YEAR_ANNUALIZED,
  ReturnsSnapshot.JSON_PROPERTY_FIVE_YEAR,
  ReturnsSnapshot.JSON_PROPERTY_FIVE_YEAR_ANNUALIZED,
  ReturnsSnapshot.JSON_PROPERTY_TEN_YEAR,
  ReturnsSnapshot.JSON_PROPERTY_TEN_YEAR_ANNUALIZED,
  ReturnsSnapshot.JSON_PROPERTY_DATE,
  ReturnsSnapshot.JSON_PROPERTY_REQUEST_ID,
  ReturnsSnapshot.JSON_PROPERTY_SINCE_INCEPTION_ANNUALIZED
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class ReturnsSnapshot implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_FSYM_ID = "fsymId";
  private JsonNullable<String> fsymId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ONE_WEEK = "oneWeek";
  private JsonNullable<Double> oneWeek = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_ONE_MONTH = "oneMonth";
  private JsonNullable<Double> oneMonth = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_THREE_MONTH = "threeMonth";
  private JsonNullable<Double> threeMonth = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_YEAR_TO_DATE = "yearToDate";
  private JsonNullable<Double> yearToDate = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_ONE_YEAR = "oneYear";
  private JsonNullable<Double> oneYear = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_THREE_YEAR = "threeYear";
  private JsonNullable<Double> threeYear = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_THREE_YEAR_ANNUALIZED = "threeYearAnnualized";
  private JsonNullable<Double> threeYearAnnualized = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_FIVE_YEAR = "fiveYear";
  private JsonNullable<Double> fiveYear = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_FIVE_YEAR_ANNUALIZED = "fiveYearAnnualized";
  private JsonNullable<Double> fiveYearAnnualized = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_TEN_YEAR = "tenYear";
  private JsonNullable<Double> tenYear = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_TEN_YEAR_ANNUALIZED = "tenYearAnnualized";
  private JsonNullable<Double> tenYearAnnualized = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_DATE = "date";
  private JsonNullable<LocalDate> date = JsonNullable.<LocalDate>undefined();

  public static final String JSON_PROPERTY_REQUEST_ID = "requestId";
  private String requestId;

  public static final String JSON_PROPERTY_SINCE_INCEPTION_ANNUALIZED = "sinceInceptionAnnualized";
  private JsonNullable<Double> sinceInceptionAnnualized = JsonNullable.<Double>undefined();

  public ReturnsSnapshot() { 
  }

  public ReturnsSnapshot fsymId(String fsymId) {
    this.fsymId = JsonNullable.<String>of(fsymId);
    return this;
  }

   /**
   * FactSet Security Identifier. Six alpha-numeric characters, excluding vowels, with a -S suffix (XXXXXX-S), resolved from the requestId of the Fund requested.
   * @return fsymId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "FNK7XP-S", value = "FactSet Security Identifier. Six alpha-numeric characters, excluding vowels, with a -S suffix (XXXXXX-S), resolved from the requestId of the Fund requested.")
  @JsonIgnore

  public String getFsymId() {
        return fsymId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFsymId_JsonNullable() {
    return fsymId;
  }
  
  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  public void setFsymId_JsonNullable(JsonNullable<String> fsymId) {
    this.fsymId = fsymId;
  }

  public void setFsymId(String fsymId) {
    this.fsymId = JsonNullable.<String>of(fsymId);
  }


  public ReturnsSnapshot oneWeek(Double oneWeek) {
    this.oneWeek = JsonNullable.<Double>of(oneWeek);
    return this;
  }

   /**
   * The one-week return for the requested id and date. The return type is determined by including or excluding dividends through the dividendAdjust parameter.
   * @return oneWeek
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "2.38777459407833", value = "The one-week return for the requested id and date. The return type is determined by including or excluding dividends through the dividendAdjust parameter.")
  @JsonIgnore

  public Double getOneWeek() {
        return oneWeek.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ONE_WEEK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getOneWeek_JsonNullable() {
    return oneWeek;
  }
  
  @JsonProperty(JSON_PROPERTY_ONE_WEEK)
  public void setOneWeek_JsonNullable(JsonNullable<Double> oneWeek) {
    this.oneWeek = oneWeek;
  }

  public void setOneWeek(Double oneWeek) {
    this.oneWeek = JsonNullable.<Double>of(oneWeek);
  }


  public ReturnsSnapshot oneMonth(Double oneMonth) {
    this.oneMonth = JsonNullable.<Double>of(oneMonth);
    return this;
  }

   /**
   * The one-month return for the requested id and date. The return type is determined by including or excluding dividends through the dividendAdjust parameter.
   * @return oneMonth
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "7.52256770310935", value = "The one-month return for the requested id and date. The return type is determined by including or excluding dividends through the dividendAdjust parameter.")
  @JsonIgnore

  public Double getOneMonth() {
        return oneMonth.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ONE_MONTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getOneMonth_JsonNullable() {
    return oneMonth;
  }
  
  @JsonProperty(JSON_PROPERTY_ONE_MONTH)
  public void setOneMonth_JsonNullable(JsonNullable<Double> oneMonth) {
    this.oneMonth = oneMonth;
  }

  public void setOneMonth(Double oneMonth) {
    this.oneMonth = JsonNullable.<Double>of(oneMonth);
  }


  public ReturnsSnapshot threeMonth(Double threeMonth) {
    this.threeMonth = JsonNullable.<Double>of(threeMonth);
    return this;
  }

   /**
   * The three-month return for the requested id and date. The return type is determined by including or excluding dividends through the dividendAdjust parameter.
   * @return threeMonth
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "13.8004246284501", value = "The three-month return for the requested id and date. The return type is determined by including or excluding dividends through the dividendAdjust parameter.")
  @JsonIgnore

  public Double getThreeMonth() {
        return threeMonth.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_THREE_MONTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getThreeMonth_JsonNullable() {
    return threeMonth;
  }
  
  @JsonProperty(JSON_PROPERTY_THREE_MONTH)
  public void setThreeMonth_JsonNullable(JsonNullable<Double> threeMonth) {
    this.threeMonth = threeMonth;
  }

  public void setThreeMonth(Double threeMonth) {
    this.threeMonth = JsonNullable.<Double>of(threeMonth);
  }


  public ReturnsSnapshot yearToDate(Double yearToDate) {
    this.yearToDate = JsonNullable.<Double>of(yearToDate);
    return this;
  }

   /**
   * The year-to-date return for the requested id and date. The return type is determined by including or excluding dividends through the dividendAdjust parameter.
   * @return yearToDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "13.1398416886544", value = "The year-to-date return for the requested id and date. The return type is determined by including or excluding dividends through the dividendAdjust parameter.")
  @JsonIgnore

  public Double getYearToDate() {
        return yearToDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_YEAR_TO_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getYearToDate_JsonNullable() {
    return yearToDate;
  }
  
  @JsonProperty(JSON_PROPERTY_YEAR_TO_DATE)
  public void setYearToDate_JsonNullable(JsonNullable<Double> yearToDate) {
    this.yearToDate = yearToDate;
  }

  public void setYearToDate(Double yearToDate) {
    this.yearToDate = JsonNullable.<Double>of(yearToDate);
  }


  public ReturnsSnapshot oneYear(Double oneYear) {
    this.oneYear = JsonNullable.<Double>of(oneYear);
    return this;
  }

   /**
   * The one-year return for the requested id and date. The return type is determined by including or excluding dividends through the dividendAdjust parameter.
   * @return oneYear
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "40.2223675604972", value = "The one-year return for the requested id and date. The return type is determined by including or excluding dividends through the dividendAdjust parameter.")
  @JsonIgnore

  public Double getOneYear() {
        return oneYear.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ONE_YEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getOneYear_JsonNullable() {
    return oneYear;
  }
  
  @JsonProperty(JSON_PROPERTY_ONE_YEAR)
  public void setOneYear_JsonNullable(JsonNullable<Double> oneYear) {
    this.oneYear = oneYear;
  }

  public void setOneYear(Double oneYear) {
    this.oneYear = JsonNullable.<Double>of(oneYear);
  }


  public ReturnsSnapshot threeYear(Double threeYear) {
    this.threeYear = JsonNullable.<Double>of(threeYear);
    return this;
  }

   /**
   * The three-year return for the requested id and date. The return type is determined by including or excluding dividends through the dividendAdjust parameter.
   * @return threeYear
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The three-year return for the requested id and date. The return type is determined by including or excluding dividends through the dividendAdjust parameter.")
  @JsonIgnore

  public Double getThreeYear() {
        return threeYear.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_THREE_YEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getThreeYear_JsonNullable() {
    return threeYear;
  }
  
  @JsonProperty(JSON_PROPERTY_THREE_YEAR)
  public void setThreeYear_JsonNullable(JsonNullable<Double> threeYear) {
    this.threeYear = threeYear;
  }

  public void setThreeYear(Double threeYear) {
    this.threeYear = JsonNullable.<Double>of(threeYear);
  }


  public ReturnsSnapshot threeYearAnnualized(Double threeYearAnnualized) {
    this.threeYearAnnualized = JsonNullable.<Double>of(threeYearAnnualized);
    return this;
  }

   /**
   * The three-year annualized return for the requested id and date. The return type is determined by including or excluding dividends through the dividendAdjust parameter.
   * @return threeYearAnnualized
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The three-year annualized return for the requested id and date. The return type is determined by including or excluding dividends through the dividendAdjust parameter.")
  @JsonIgnore

  public Double getThreeYearAnnualized() {
        return threeYearAnnualized.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_THREE_YEAR_ANNUALIZED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getThreeYearAnnualized_JsonNullable() {
    return threeYearAnnualized;
  }
  
  @JsonProperty(JSON_PROPERTY_THREE_YEAR_ANNUALIZED)
  public void setThreeYearAnnualized_JsonNullable(JsonNullable<Double> threeYearAnnualized) {
    this.threeYearAnnualized = threeYearAnnualized;
  }

  public void setThreeYearAnnualized(Double threeYearAnnualized) {
    this.threeYearAnnualized = JsonNullable.<Double>of(threeYearAnnualized);
  }


  public ReturnsSnapshot fiveYear(Double fiveYear) {
    this.fiveYear = JsonNullable.<Double>of(fiveYear);
    return this;
  }

   /**
   * The five-year return for the requested id and date. The return type is determined by including or excluding dividends through the dividendAdjust parameter.
   * @return fiveYear
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "25.2970433246628", value = "The five-year return for the requested id and date. The return type is determined by including or excluding dividends through the dividendAdjust parameter.")
  @JsonIgnore

  public Double getFiveYear() {
        return fiveYear.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FIVE_YEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getFiveYear_JsonNullable() {
    return fiveYear;
  }
  
  @JsonProperty(JSON_PROPERTY_FIVE_YEAR)
  public void setFiveYear_JsonNullable(JsonNullable<Double> fiveYear) {
    this.fiveYear = fiveYear;
  }

  public void setFiveYear(Double fiveYear) {
    this.fiveYear = JsonNullable.<Double>of(fiveYear);
  }


  public ReturnsSnapshot fiveYearAnnualized(Double fiveYearAnnualized) {
    this.fiveYearAnnualized = JsonNullable.<Double>of(fiveYearAnnualized);
    return this;
  }

   /**
   * The five year annualized return for the requested id and date. The return type is determined by including or excluding dividends through the dividendAdjust parameter.
   * @return fiveYearAnnualized
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The five year annualized return for the requested id and date. The return type is determined by including or excluding dividends through the dividendAdjust parameter.")
  @JsonIgnore

  public Double getFiveYearAnnualized() {
        return fiveYearAnnualized.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FIVE_YEAR_ANNUALIZED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getFiveYearAnnualized_JsonNullable() {
    return fiveYearAnnualized;
  }
  
  @JsonProperty(JSON_PROPERTY_FIVE_YEAR_ANNUALIZED)
  public void setFiveYearAnnualized_JsonNullable(JsonNullable<Double> fiveYearAnnualized) {
    this.fiveYearAnnualized = fiveYearAnnualized;
  }

  public void setFiveYearAnnualized(Double fiveYearAnnualized) {
    this.fiveYearAnnualized = JsonNullable.<Double>of(fiveYearAnnualized);
  }


  public ReturnsSnapshot tenYear(Double tenYear) {
    this.tenYear = JsonNullable.<Double>of(tenYear);
    return this;
  }

   /**
   * The ten-year return for the requested id and date. The return type is determined by including or excluding dividends through the dividendAdjust parameter.
   * @return tenYear
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "113.246193627327", value = "The ten-year return for the requested id and date. The return type is determined by including or excluding dividends through the dividendAdjust parameter.")
  @JsonIgnore

  public Double getTenYear() {
        return tenYear.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TEN_YEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getTenYear_JsonNullable() {
    return tenYear;
  }
  
  @JsonProperty(JSON_PROPERTY_TEN_YEAR)
  public void setTenYear_JsonNullable(JsonNullable<Double> tenYear) {
    this.tenYear = tenYear;
  }

  public void setTenYear(Double tenYear) {
    this.tenYear = JsonNullable.<Double>of(tenYear);
  }


  public ReturnsSnapshot tenYearAnnualized(Double tenYearAnnualized) {
    this.tenYearAnnualized = JsonNullable.<Double>of(tenYearAnnualized);
    return this;
  }

   /**
   * The ten year annualized return for the requested id and date. The return type is determined by including or excluding dividends through the dividendAdjust parameter.
   * @return tenYearAnnualized
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "7.86688289207509", value = "The ten year annualized return for the requested id and date. The return type is determined by including or excluding dividends through the dividendAdjust parameter.")
  @JsonIgnore

  public Double getTenYearAnnualized() {
        return tenYearAnnualized.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TEN_YEAR_ANNUALIZED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getTenYearAnnualized_JsonNullable() {
    return tenYearAnnualized;
  }
  
  @JsonProperty(JSON_PROPERTY_TEN_YEAR_ANNUALIZED)
  public void setTenYearAnnualized_JsonNullable(JsonNullable<Double> tenYearAnnualized) {
    this.tenYearAnnualized = tenYearAnnualized;
  }

  public void setTenYearAnnualized(Double tenYearAnnualized) {
    this.tenYearAnnualized = JsonNullable.<Double>of(tenYearAnnualized);
  }


  public ReturnsSnapshot date(LocalDate date) {
    this.date = JsonNullable.<LocalDate>of(date);
    return this;
  }

   /**
   * The date of the return in YYYY-MM-DD format.
   * @return date
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Tue Mar 30 00:00:00 UTC 2021", value = "The date of the return in YYYY-MM-DD format.")
  @JsonIgnore

  public LocalDate getDate() {
        return date.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LocalDate> getDate_JsonNullable() {
    return date;
  }
  
  @JsonProperty(JSON_PROPERTY_DATE)
  public void setDate_JsonNullable(JsonNullable<LocalDate> date) {
    this.date = date;
  }

  public void setDate(LocalDate date) {
    this.date = JsonNullable.<LocalDate>of(date);
  }


  public ReturnsSnapshot requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

   /**
   * The requested Id sent as input.
   * @return requestId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "MABAX", value = "The requested Id sent as input.")
  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRequestId() {
    return requestId;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }


  public ReturnsSnapshot sinceInceptionAnnualized(Double sinceInceptionAnnualized) {
    this.sinceInceptionAnnualized = JsonNullable.<Double>of(sinceInceptionAnnualized);
    return this;
  }

   /**
   * The average annual rate of return since the fund&#39;s inception date, calculated using compounding. This is always a total return (dividends are included) and is not affected by the dividendAdjust parameter.
   * @return sinceInceptionAnnualized
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "7.86688289207509", value = "The average annual rate of return since the fund's inception date, calculated using compounding. This is always a total return (dividends are included) and is not affected by the dividendAdjust parameter.")
  @JsonIgnore

  public Double getSinceInceptionAnnualized() {
        return sinceInceptionAnnualized.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SINCE_INCEPTION_ANNUALIZED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getSinceInceptionAnnualized_JsonNullable() {
    return sinceInceptionAnnualized;
  }
  
  @JsonProperty(JSON_PROPERTY_SINCE_INCEPTION_ANNUALIZED)
  public void setSinceInceptionAnnualized_JsonNullable(JsonNullable<Double> sinceInceptionAnnualized) {
    this.sinceInceptionAnnualized = sinceInceptionAnnualized;
  }

  public void setSinceInceptionAnnualized(Double sinceInceptionAnnualized) {
    this.sinceInceptionAnnualized = JsonNullable.<Double>of(sinceInceptionAnnualized);
  }


  /**
   * Return true if this returnsSnapshot object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReturnsSnapshot returnsSnapshot = (ReturnsSnapshot) o;
    return equalsNullable(this.fsymId, returnsSnapshot.fsymId) &&
        equalsNullable(this.oneWeek, returnsSnapshot.oneWeek) &&
        equalsNullable(this.oneMonth, returnsSnapshot.oneMonth) &&
        equalsNullable(this.threeMonth, returnsSnapshot.threeMonth) &&
        equalsNullable(this.yearToDate, returnsSnapshot.yearToDate) &&
        equalsNullable(this.oneYear, returnsSnapshot.oneYear) &&
        equalsNullable(this.threeYear, returnsSnapshot.threeYear) &&
        equalsNullable(this.threeYearAnnualized, returnsSnapshot.threeYearAnnualized) &&
        equalsNullable(this.fiveYear, returnsSnapshot.fiveYear) &&
        equalsNullable(this.fiveYearAnnualized, returnsSnapshot.fiveYearAnnualized) &&
        equalsNullable(this.tenYear, returnsSnapshot.tenYear) &&
        equalsNullable(this.tenYearAnnualized, returnsSnapshot.tenYearAnnualized) &&
        equalsNullable(this.date, returnsSnapshot.date) &&
        Objects.equals(this.requestId, returnsSnapshot.requestId) &&
        equalsNullable(this.sinceInceptionAnnualized, returnsSnapshot.sinceInceptionAnnualized);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(fsymId), hashCodeNullable(oneWeek), hashCodeNullable(oneMonth), hashCodeNullable(threeMonth), hashCodeNullable(yearToDate), hashCodeNullable(oneYear), hashCodeNullable(threeYear), hashCodeNullable(threeYearAnnualized), hashCodeNullable(fiveYear), hashCodeNullable(fiveYearAnnualized), hashCodeNullable(tenYear), hashCodeNullable(tenYearAnnualized), hashCodeNullable(date), requestId, hashCodeNullable(sinceInceptionAnnualized));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReturnsSnapshot {\n");
    sb.append("    fsymId: ").append(toIndentedString(fsymId)).append("\n");
    sb.append("    oneWeek: ").append(toIndentedString(oneWeek)).append("\n");
    sb.append("    oneMonth: ").append(toIndentedString(oneMonth)).append("\n");
    sb.append("    threeMonth: ").append(toIndentedString(threeMonth)).append("\n");
    sb.append("    yearToDate: ").append(toIndentedString(yearToDate)).append("\n");
    sb.append("    oneYear: ").append(toIndentedString(oneYear)).append("\n");
    sb.append("    threeYear: ").append(toIndentedString(threeYear)).append("\n");
    sb.append("    threeYearAnnualized: ").append(toIndentedString(threeYearAnnualized)).append("\n");
    sb.append("    fiveYear: ").append(toIndentedString(fiveYear)).append("\n");
    sb.append("    fiveYearAnnualized: ").append(toIndentedString(fiveYearAnnualized)).append("\n");
    sb.append("    tenYear: ").append(toIndentedString(tenYear)).append("\n");
    sb.append("    tenYearAnnualized: ").append(toIndentedString(tenYearAnnualized)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    sinceInceptionAnnualized: ").append(toIndentedString(sinceInceptionAnnualized)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

