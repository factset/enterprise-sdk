/*
 * FactSet Funds API
 * FactSet Mutual Funds data offers over 50 fund- and share class-specific data points for mutual funds listed in the United States. <p>FactSet Mutual Funds Reference provides fund-specific reference information as well as FactSet's proprietary classification system. It includes but is not limited to the following coverage    * Fund descriptions    * A seven-tier classification system   * Leverage information   * Fees and expenses    * Portfolio managers       FactSet Mutual Funds Time Series provides quantitative data items on a historical basis. It includes but is not limited to the following coverage    * Net asset value   * Fund flows    * Assets under management   * Total return  <p>This API is rate-limited to 10 requests per second and 10 concurrent requests per user.</p> 
 *
 * The version of the OpenAPI document: 1.5.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetFunds.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDate;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetFunds.JSON;


/**
 * CostsFees
 */
@JsonPropertyOrder({
  CostsFees.JSON_PROPERTY_FSYM_ID,
  CostsFees.JSON_PROPERTY_MANAGEMENT_EXPENSES,
  CostsFees.JSON_PROPERTY_DATE,
  CostsFees.JSON_PROPERTY_CURRENCY,
  CostsFees.JSON_PROPERTY_ENTRY_EXPENSES,
  CostsFees.JSON_PROPERTY_EXIT_EXPENSES,
  CostsFees.JSON_PROPERTY_FRONT_EXPENSES_MAX,
  CostsFees.JSON_PROPERTY_BACK_EXPENSES_MAX,
  CostsFees.JSON_PROPERTY_EXPENSE_RATIO,
  CostsFees.JSON_PROPERTY_EXPENSE_RATIO_PROSPECTUS,
  CostsFees.JSON_PROPERTY_INIT_INVESTMENT_MIN,
  CostsFees.JSON_PROPERTY_INIT_INVESTMENT_IRA,
  CostsFees.JSON_PROPERTY_SWING_PRICE,
  CostsFees.JSON_PROPERTY_SWING_PRICE_DATE,
  CostsFees.JSON_PROPERTY_SRI_PRIIPS,
  CostsFees.JSON_PROPERTY_SRRI_UCITS,
  CostsFees.JSON_PROPERTY_PERFORMANCE_FEE,
  CostsFees.JSON_PROPERTY_TRADING_EXPENSE_RATIO,
  CostsFees.JSON_PROPERTY_REQUEST_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class CostsFees implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_FSYM_ID = "fsymId";
  private JsonNullable<String> fsymId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MANAGEMENT_EXPENSES = "managementExpenses";
  private JsonNullable<Double> managementExpenses = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_DATE = "date";
  private JsonNullable<LocalDate> date = JsonNullable.<LocalDate>undefined();

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private JsonNullable<String> currency = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ENTRY_EXPENSES = "entryExpenses";
  private JsonNullable<Double> entryExpenses = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_EXIT_EXPENSES = "exitExpenses";
  private JsonNullable<Double> exitExpenses = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_FRONT_EXPENSES_MAX = "frontExpensesMax";
  private JsonNullable<Double> frontExpensesMax = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_BACK_EXPENSES_MAX = "backExpensesMax";
  private JsonNullable<Double> backExpensesMax = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_EXPENSE_RATIO = "expenseRatio";
  private JsonNullable<Double> expenseRatio = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_EXPENSE_RATIO_PROSPECTUS = "expenseRatioProspectus";
  private JsonNullable<Double> expenseRatioProspectus = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_INIT_INVESTMENT_MIN = "initInvestmentMin";
  private JsonNullable<Double> initInvestmentMin = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_INIT_INVESTMENT_IRA = "initInvestmentIra";
  private JsonNullable<Double> initInvestmentIra = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_SWING_PRICE = "swingPrice";
  private JsonNullable<Double> swingPrice = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_SWING_PRICE_DATE = "swingPriceDate";
  private JsonNullable<LocalDate> swingPriceDate = JsonNullable.<LocalDate>undefined();

  public static final String JSON_PROPERTY_SRI_PRIIPS = "sriPriips";
  private JsonNullable<Integer> sriPriips = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_SRRI_UCITS = "srriUcits";
  private JsonNullable<Integer> srriUcits = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_PERFORMANCE_FEE = "performanceFee";
  private JsonNullable<Double> performanceFee = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_TRADING_EXPENSE_RATIO = "tradingExpenseRatio";
  private JsonNullable<Double> tradingExpenseRatio = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_REQUEST_ID = "requestId";
  private String requestId;

  public CostsFees() { 
  }

  public CostsFees fsymId(String fsymId) {
    this.fsymId = JsonNullable.<String>of(fsymId);
    return this;
  }

   /**
   * FactSet Security Identifier. Six alpha-numeric characters, excluding vowels, with a -S suffix (XXXXXX-S), resolved from the requestId of the Fund requested.
   * @return fsymId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "FNK7XP-S", value = "FactSet Security Identifier. Six alpha-numeric characters, excluding vowels, with a -S suffix (XXXXXX-S), resolved from the requestId of the Fund requested.")
  @JsonIgnore

  public String getFsymId() {
        return fsymId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFsymId_JsonNullable() {
    return fsymId;
  }
  
  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  public void setFsymId_JsonNullable(JsonNullable<String> fsymId) {
    this.fsymId = fsymId;
  }

  public void setFsymId(String fsymId) {
    this.fsymId = JsonNullable.<String>of(fsymId);
  }


  public CostsFees managementExpenses(Double managementExpenses) {
    this.managementExpenses = JsonNullable.<Double>of(managementExpenses);
    return this;
  }

   /**
   * The management fee, or maintenance fee, is charged by the fund manager. This cost is usually between 0.5% and 2% of assets on average and is a periodic fee.
   * @return managementExpenses
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "0.42", value = "The management fee, or maintenance fee, is charged by the fund manager. This cost is usually between 0.5% and 2% of assets on average and is a periodic fee.")
  @JsonIgnore

  public Double getManagementExpenses() {
        return managementExpenses.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MANAGEMENT_EXPENSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getManagementExpenses_JsonNullable() {
    return managementExpenses;
  }
  
  @JsonProperty(JSON_PROPERTY_MANAGEMENT_EXPENSES)
  public void setManagementExpenses_JsonNullable(JsonNullable<Double> managementExpenses) {
    this.managementExpenses = managementExpenses;
  }

  public void setManagementExpenses(Double managementExpenses) {
    this.managementExpenses = JsonNullable.<Double>of(managementExpenses);
  }


  public CostsFees date(LocalDate date) {
    this.date = JsonNullable.<LocalDate>of(date);
    return this;
  }

   /**
   * The Expense Date expressed in YYYY-MM-DD.
   * @return date
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Wed Oct 28 00:00:00 UTC 2020", value = "The Expense Date expressed in YYYY-MM-DD.")
  @JsonIgnore

  public LocalDate getDate() {
        return date.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LocalDate> getDate_JsonNullable() {
    return date;
  }
  
  @JsonProperty(JSON_PROPERTY_DATE)
  public void setDate_JsonNullable(JsonNullable<LocalDate> date) {
    this.date = date;
  }

  public void setDate(LocalDate date) {
    this.date = JsonNullable.<LocalDate>of(date);
  }


  public CostsFees currency(String currency) {
    this.currency = JsonNullable.<String>of(currency);
    return this;
  }

   /**
   * ISO3 Currency
   * @return currency
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "USD", value = "ISO3 Currency")
  @JsonIgnore

  public String getCurrency() {
        return currency.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCurrency_JsonNullable() {
    return currency;
  }
  
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  public void setCurrency_JsonNullable(JsonNullable<String> currency) {
    this.currency = currency;
  }

  public void setCurrency(String currency) {
    this.currency = JsonNullable.<String>of(currency);
  }


  public CostsFees entryExpenses(Double entryExpenses) {
    this.entryExpenses = JsonNullable.<Double>of(entryExpenses);
    return this;
  }

   /**
   * The transaction entry fee or purchase fee collected from investors when they join or leave a scheme. The fee is paid to the fund
   * @return entryExpenses
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The transaction entry fee or purchase fee collected from investors when they join or leave a scheme. The fee is paid to the fund")
  @JsonIgnore

  public Double getEntryExpenses() {
        return entryExpenses.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTRY_EXPENSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getEntryExpenses_JsonNullable() {
    return entryExpenses;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTRY_EXPENSES)
  public void setEntryExpenses_JsonNullable(JsonNullable<Double> entryExpenses) {
    this.entryExpenses = entryExpenses;
  }

  public void setEntryExpenses(Double entryExpenses) {
    this.entryExpenses = JsonNullable.<Double>of(entryExpenses);
  }


  public CostsFees exitExpenses(Double exitExpenses) {
    this.exitExpenses = JsonNullable.<Double>of(exitExpenses);
    return this;
  }

   /**
   * The transaction exit fee is charged to investors when they redeem shares from a fund.
   * @return exitExpenses
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The transaction exit fee is charged to investors when they redeem shares from a fund.")
  @JsonIgnore

  public Double getExitExpenses() {
        return exitExpenses.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXIT_EXPENSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getExitExpenses_JsonNullable() {
    return exitExpenses;
  }
  
  @JsonProperty(JSON_PROPERTY_EXIT_EXPENSES)
  public void setExitExpenses_JsonNullable(JsonNullable<Double> exitExpenses) {
    this.exitExpenses = exitExpenses;
  }

  public void setExitExpenses(Double exitExpenses) {
    this.exitExpenses = JsonNullable.<Double>of(exitExpenses);
  }


  public CostsFees frontExpensesMax(Double frontExpensesMax) {
    this.frontExpensesMax = JsonNullable.<Double>of(frontExpensesMax);
    return this;
  }

   /**
   * The Maximum sales load or initial Sales Fee is a reduction made from each investment in the fund, the maximum paid is dependent on the size of the purchase, it decreases as the investment increases. Often associated with class &#39;A&#39; shares of a mutual fund it is also known as Sales Charge, this is a fee paid when shares are purchased. Also known as a \&quot;front-end load\&quot;, this fee typically goes to the brokers that sell the fund&#39;s shares.  (Under the Investment Company Act of 1940 is 9%. The maximum sales load under NASD Rules is 81⁄2%).\&quot; 
   * @return frontExpensesMax
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The Maximum sales load or initial Sales Fee is a reduction made from each investment in the fund, the maximum paid is dependent on the size of the purchase, it decreases as the investment increases. Often associated with class 'A' shares of a mutual fund it is also known as Sales Charge, this is a fee paid when shares are purchased. Also known as a \"front-end load\", this fee typically goes to the brokers that sell the fund's shares.  (Under the Investment Company Act of 1940 is 9%. The maximum sales load under NASD Rules is 81⁄2%).\" ")
  @JsonIgnore

  public Double getFrontExpensesMax() {
        return frontExpensesMax.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FRONT_EXPENSES_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getFrontExpensesMax_JsonNullable() {
    return frontExpensesMax;
  }
  
  @JsonProperty(JSON_PROPERTY_FRONT_EXPENSES_MAX)
  public void setFrontExpensesMax_JsonNullable(JsonNullable<Double> frontExpensesMax) {
    this.frontExpensesMax = frontExpensesMax;
  }

  public void setFrontExpensesMax(Double frontExpensesMax) {
    this.frontExpensesMax = JsonNullable.<Double>of(frontExpensesMax);
  }


  public CostsFees backExpensesMax(Double backExpensesMax) {
    this.backExpensesMax = JsonNullable.<Double>of(backExpensesMax);
    return this;
  }

   /**
   * The Back Expense Maximum
   * @return backExpensesMax
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The Back Expense Maximum")
  @JsonIgnore

  public Double getBackExpensesMax() {
        return backExpensesMax.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BACK_EXPENSES_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getBackExpensesMax_JsonNullable() {
    return backExpensesMax;
  }
  
  @JsonProperty(JSON_PROPERTY_BACK_EXPENSES_MAX)
  public void setBackExpensesMax_JsonNullable(JsonNullable<Double> backExpensesMax) {
    this.backExpensesMax = backExpensesMax;
  }

  public void setBackExpensesMax(Double backExpensesMax) {
    this.backExpensesMax = JsonNullable.<Double>of(backExpensesMax);
  }


  public CostsFees expenseRatio(Double expenseRatio) {
    this.expenseRatio = JsonNullable.<Double>of(expenseRatio);
    return this;
  }

   /**
   * The Expense Ratio
   * @return expenseRatio
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "0.53", value = "The Expense Ratio")
  @JsonIgnore

  public Double getExpenseRatio() {
        return expenseRatio.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXPENSE_RATIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getExpenseRatio_JsonNullable() {
    return expenseRatio;
  }
  
  @JsonProperty(JSON_PROPERTY_EXPENSE_RATIO)
  public void setExpenseRatio_JsonNullable(JsonNullable<Double> expenseRatio) {
    this.expenseRatio = expenseRatio;
  }

  public void setExpenseRatio(Double expenseRatio) {
    this.expenseRatio = JsonNullable.<Double>of(expenseRatio);
  }


  public CostsFees expenseRatioProspectus(Double expenseRatioProspectus) {
    this.expenseRatioProspectus = JsonNullable.<Double>of(expenseRatioProspectus);
    return this;
  }

   /**
   * The Expense Ratio Prospectus
   * @return expenseRatioProspectus
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "0.53", value = "The Expense Ratio Prospectus")
  @JsonIgnore

  public Double getExpenseRatioProspectus() {
        return expenseRatioProspectus.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXPENSE_RATIO_PROSPECTUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getExpenseRatioProspectus_JsonNullable() {
    return expenseRatioProspectus;
  }
  
  @JsonProperty(JSON_PROPERTY_EXPENSE_RATIO_PROSPECTUS)
  public void setExpenseRatioProspectus_JsonNullable(JsonNullable<Double> expenseRatioProspectus) {
    this.expenseRatioProspectus = expenseRatioProspectus;
  }

  public void setExpenseRatioProspectus(Double expenseRatioProspectus) {
    this.expenseRatioProspectus = JsonNullable.<Double>of(expenseRatioProspectus);
  }


  public CostsFees initInvestmentMin(Double initInvestmentMin) {
    this.initInvestmentMin = JsonNullable.<Double>of(initInvestmentMin);
    return this;
  }

   /**
   * The Initial Investment Minimum
   * @return initInvestmentMin
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "2000000", value = "The Initial Investment Minimum")
  @JsonIgnore

  public Double getInitInvestmentMin() {
        return initInvestmentMin.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INIT_INVESTMENT_MIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getInitInvestmentMin_JsonNullable() {
    return initInvestmentMin;
  }
  
  @JsonProperty(JSON_PROPERTY_INIT_INVESTMENT_MIN)
  public void setInitInvestmentMin_JsonNullable(JsonNullable<Double> initInvestmentMin) {
    this.initInvestmentMin = initInvestmentMin;
  }

  public void setInitInvestmentMin(Double initInvestmentMin) {
    this.initInvestmentMin = JsonNullable.<Double>of(initInvestmentMin);
  }


  public CostsFees initInvestmentIra(Double initInvestmentIra) {
    this.initInvestmentIra = JsonNullable.<Double>of(initInvestmentIra);
    return this;
  }

   /**
   * The Initial Investment Individual Retirement Accounts
   * @return initInvestmentIra
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The Initial Investment Individual Retirement Accounts")
  @JsonIgnore

  public Double getInitInvestmentIra() {
        return initInvestmentIra.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INIT_INVESTMENT_IRA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getInitInvestmentIra_JsonNullable() {
    return initInvestmentIra;
  }
  
  @JsonProperty(JSON_PROPERTY_INIT_INVESTMENT_IRA)
  public void setInitInvestmentIra_JsonNullable(JsonNullable<Double> initInvestmentIra) {
    this.initInvestmentIra = initInvestmentIra;
  }

  public void setInitInvestmentIra(Double initInvestmentIra) {
    this.initInvestmentIra = JsonNullable.<Double>of(initInvestmentIra);
  }


  public CostsFees swingPrice(Double swingPrice) {
    this.swingPrice = JsonNullable.<Double>of(swingPrice);
    return this;
  }

   /**
   * Swing Price. Swing pricing occurs when a fund provider adjusts the net asset value (NAV) of a fund in order to pass on trading costs to purchasing or redeeming shareholders. This anti-dilution technique is used to protect long-term shareholder&#39;s interests.
   * @return swingPrice
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Swing Price. Swing pricing occurs when a fund provider adjusts the net asset value (NAV) of a fund in order to pass on trading costs to purchasing or redeeming shareholders. This anti-dilution technique is used to protect long-term shareholder's interests.")
  @JsonIgnore

  public Double getSwingPrice() {
        return swingPrice.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SWING_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getSwingPrice_JsonNullable() {
    return swingPrice;
  }
  
  @JsonProperty(JSON_PROPERTY_SWING_PRICE)
  public void setSwingPrice_JsonNullable(JsonNullable<Double> swingPrice) {
    this.swingPrice = swingPrice;
  }

  public void setSwingPrice(Double swingPrice) {
    this.swingPrice = JsonNullable.<Double>of(swingPrice);
  }


  public CostsFees swingPriceDate(LocalDate swingPriceDate) {
    this.swingPriceDate = JsonNullable.<LocalDate>of(swingPriceDate);
    return this;
  }

   /**
   * Swing Price Date. Swing pricing occurs when a fund provider adjusts the net asset value (NAV) of a fund in order to pass on trading costs to purchasing or redeeming shareholders. This anti-dilution technique is used to protect long-term shareholder&#39;s interests.
   * @return swingPriceDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Swing Price Date. Swing pricing occurs when a fund provider adjusts the net asset value (NAV) of a fund in order to pass on trading costs to purchasing or redeeming shareholders. This anti-dilution technique is used to protect long-term shareholder's interests.")
  @JsonIgnore

  public LocalDate getSwingPriceDate() {
        return swingPriceDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SWING_PRICE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LocalDate> getSwingPriceDate_JsonNullable() {
    return swingPriceDate;
  }
  
  @JsonProperty(JSON_PROPERTY_SWING_PRICE_DATE)
  public void setSwingPriceDate_JsonNullable(JsonNullable<LocalDate> swingPriceDate) {
    this.swingPriceDate = swingPriceDate;
  }

  public void setSwingPriceDate(LocalDate swingPriceDate) {
    this.swingPriceDate = JsonNullable.<LocalDate>of(swingPriceDate);
  }


  public CostsFees sriPriips(Integer sriPriips) {
    this.sriPriips = JsonNullable.<Integer>of(sriPriips);
    return this;
  }

   /**
   * The SRI (Summary Risk Indicator) illustrates PRIIPs&#39; risk and reward profile by measuring the market and credit risk level. Returns 1 for low risk up to 7 for higher risk.
   * @return sriPriips
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The SRI (Summary Risk Indicator) illustrates PRIIPs' risk and reward profile by measuring the market and credit risk level. Returns 1 for low risk up to 7 for higher risk.")
  @JsonIgnore

  public Integer getSriPriips() {
        return sriPriips.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SRI_PRIIPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getSriPriips_JsonNullable() {
    return sriPriips;
  }
  
  @JsonProperty(JSON_PROPERTY_SRI_PRIIPS)
  public void setSriPriips_JsonNullable(JsonNullable<Integer> sriPriips) {
    this.sriPriips = sriPriips;
  }

  public void setSriPriips(Integer sriPriips) {
    this.sriPriips = JsonNullable.<Integer>of(sriPriips);
  }


  public CostsFees srriUcits(Integer srriUcits) {
    this.srriUcits = JsonNullable.<Integer>of(srriUcits);
    return this;
  }

   /**
   * Synthetic Risk and Reward Indicator illustrates a UCITS or NURS (Non-UCITS Retail Scheme) fund&#39;s risk and reward profile by measuring the market risk level. Returns 1 for low risk up to 7 for high risk.
   * @return srriUcits
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Synthetic Risk and Reward Indicator illustrates a UCITS or NURS (Non-UCITS Retail Scheme) fund's risk and reward profile by measuring the market risk level. Returns 1 for low risk up to 7 for high risk.")
  @JsonIgnore

  public Integer getSrriUcits() {
        return srriUcits.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SRRI_UCITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getSrriUcits_JsonNullable() {
    return srriUcits;
  }
  
  @JsonProperty(JSON_PROPERTY_SRRI_UCITS)
  public void setSrriUcits_JsonNullable(JsonNullable<Integer> srriUcits) {
    this.srriUcits = srriUcits;
  }

  public void setSrriUcits(Integer srriUcits) {
    this.srriUcits = JsonNullable.<Integer>of(srriUcits);
  }


  public CostsFees performanceFee(Double performanceFee) {
    this.performanceFee = JsonNullable.<Double>of(performanceFee);
    return this;
  }

   /**
   * Represents fees made to an investment manager as a percentage of investment profits for generating positive returns.
   * @return performanceFee
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Represents fees made to an investment manager as a percentage of investment profits for generating positive returns.")
  @JsonIgnore

  public Double getPerformanceFee() {
        return performanceFee.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PERFORMANCE_FEE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getPerformanceFee_JsonNullable() {
    return performanceFee;
  }
  
  @JsonProperty(JSON_PROPERTY_PERFORMANCE_FEE)
  public void setPerformanceFee_JsonNullable(JsonNullable<Double> performanceFee) {
    this.performanceFee = performanceFee;
  }

  public void setPerformanceFee(Double performanceFee) {
    this.performanceFee = JsonNullable.<Double>of(performanceFee);
  }


  public CostsFees tradingExpenseRatio(Double tradingExpenseRatio) {
    this.tradingExpenseRatio = JsonNullable.<Double>of(tradingExpenseRatio);
    return this;
  }

   /**
   * Represents the amount of trading commissions incurred to manage the portfolio as a percentage of the total assets of the fund.
   * @return tradingExpenseRatio
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Represents the amount of trading commissions incurred to manage the portfolio as a percentage of the total assets of the fund.")
  @JsonIgnore

  public Double getTradingExpenseRatio() {
        return tradingExpenseRatio.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TRADING_EXPENSE_RATIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getTradingExpenseRatio_JsonNullable() {
    return tradingExpenseRatio;
  }
  
  @JsonProperty(JSON_PROPERTY_TRADING_EXPENSE_RATIO)
  public void setTradingExpenseRatio_JsonNullable(JsonNullable<Double> tradingExpenseRatio) {
    this.tradingExpenseRatio = tradingExpenseRatio;
  }

  public void setTradingExpenseRatio(Double tradingExpenseRatio) {
    this.tradingExpenseRatio = JsonNullable.<Double>of(tradingExpenseRatio);
  }


  public CostsFees requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

   /**
   * The requested Id sent as input.
   * @return requestId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "MABAX", value = "The requested Id sent as input.")
  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRequestId() {
    return requestId;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }


  /**
   * Return true if this costsFees object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CostsFees costsFees = (CostsFees) o;
    return equalsNullable(this.fsymId, costsFees.fsymId) &&
        equalsNullable(this.managementExpenses, costsFees.managementExpenses) &&
        equalsNullable(this.date, costsFees.date) &&
        equalsNullable(this.currency, costsFees.currency) &&
        equalsNullable(this.entryExpenses, costsFees.entryExpenses) &&
        equalsNullable(this.exitExpenses, costsFees.exitExpenses) &&
        equalsNullable(this.frontExpensesMax, costsFees.frontExpensesMax) &&
        equalsNullable(this.backExpensesMax, costsFees.backExpensesMax) &&
        equalsNullable(this.expenseRatio, costsFees.expenseRatio) &&
        equalsNullable(this.expenseRatioProspectus, costsFees.expenseRatioProspectus) &&
        equalsNullable(this.initInvestmentMin, costsFees.initInvestmentMin) &&
        equalsNullable(this.initInvestmentIra, costsFees.initInvestmentIra) &&
        equalsNullable(this.swingPrice, costsFees.swingPrice) &&
        equalsNullable(this.swingPriceDate, costsFees.swingPriceDate) &&
        equalsNullable(this.sriPriips, costsFees.sriPriips) &&
        equalsNullable(this.srriUcits, costsFees.srriUcits) &&
        equalsNullable(this.performanceFee, costsFees.performanceFee) &&
        equalsNullable(this.tradingExpenseRatio, costsFees.tradingExpenseRatio) &&
        Objects.equals(this.requestId, costsFees.requestId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(fsymId), hashCodeNullable(managementExpenses), hashCodeNullable(date), hashCodeNullable(currency), hashCodeNullable(entryExpenses), hashCodeNullable(exitExpenses), hashCodeNullable(frontExpensesMax), hashCodeNullable(backExpensesMax), hashCodeNullable(expenseRatio), hashCodeNullable(expenseRatioProspectus), hashCodeNullable(initInvestmentMin), hashCodeNullable(initInvestmentIra), hashCodeNullable(swingPrice), hashCodeNullable(swingPriceDate), hashCodeNullable(sriPriips), hashCodeNullable(srriUcits), hashCodeNullable(performanceFee), hashCodeNullable(tradingExpenseRatio), requestId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CostsFees {\n");
    sb.append("    fsymId: ").append(toIndentedString(fsymId)).append("\n");
    sb.append("    managementExpenses: ").append(toIndentedString(managementExpenses)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    entryExpenses: ").append(toIndentedString(entryExpenses)).append("\n");
    sb.append("    exitExpenses: ").append(toIndentedString(exitExpenses)).append("\n");
    sb.append("    frontExpensesMax: ").append(toIndentedString(frontExpensesMax)).append("\n");
    sb.append("    backExpensesMax: ").append(toIndentedString(backExpensesMax)).append("\n");
    sb.append("    expenseRatio: ").append(toIndentedString(expenseRatio)).append("\n");
    sb.append("    expenseRatioProspectus: ").append(toIndentedString(expenseRatioProspectus)).append("\n");
    sb.append("    initInvestmentMin: ").append(toIndentedString(initInvestmentMin)).append("\n");
    sb.append("    initInvestmentIra: ").append(toIndentedString(initInvestmentIra)).append("\n");
    sb.append("    swingPrice: ").append(toIndentedString(swingPrice)).append("\n");
    sb.append("    swingPriceDate: ").append(toIndentedString(swingPriceDate)).append("\n");
    sb.append("    sriPriips: ").append(toIndentedString(sriPriips)).append("\n");
    sb.append("    srriUcits: ").append(toIndentedString(srriUcits)).append("\n");
    sb.append("    performanceFee: ").append(toIndentedString(performanceFee)).append("\n");
    sb.append("    tradingExpenseRatio: ").append(toIndentedString(tradingExpenseRatio)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

