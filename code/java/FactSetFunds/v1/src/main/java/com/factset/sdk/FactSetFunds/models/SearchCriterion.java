/*
 * FactSet Funds API
 * FactSet Mutual Funds data offers over 50 fund- and share class-specific data points for mutual funds listed in the United States. <p>FactSet Mutual Funds Reference provides fund-specific reference information as well as FactSet's proprietary classification system. It includes but is not limited to the following coverage    * Fund descriptions    * A seven-tier classification system   * Leverage information   * Fees and expenses    * Portfolio managers       FactSet Mutual Funds Time Series provides quantitative data items on a historical basis. It includes but is not limited to the following coverage    * Net asset value   * Fund flows    * Assets under management   * Total return  <p>This API is rate-limited to 10 requests per second and 10 concurrent requests per user.</p> 
 *
 * The version of the OpenAPI document: 1.5.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetFunds.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.FactSetFunds.models.Operator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetFunds.JSON;


/**
 * Criteria to filter by
 */
@ApiModel(description = "Criteria to filter by")
@JsonPropertyOrder({
  SearchCriterion.JSON_PROPERTY_CONTENT_SET,
  SearchCriterion.JSON_PROPERTY_FIELD_NAME,
  SearchCriterion.JSON_PROPERTY_OPERATOR,
  SearchCriterion.JSON_PROPERTY_VALUES
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class SearchCriterion implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_CONTENT_SET = "contentSet";
  private String contentSet;

  public static final String JSON_PROPERTY_FIELD_NAME = "fieldName";
  private String fieldName;

  public static final String JSON_PROPERTY_OPERATOR = "operator";
  private Operator operator;

  public static final String JSON_PROPERTY_VALUES = "values";
  private java.util.List<String> values = new java.util.ArrayList<>();

  public SearchCriterion() { 
  }

  @JsonCreator
  public SearchCriterion(
    @JsonProperty(value=JSON_PROPERTY_CONTENT_SET, required=true) String contentSet, 
    @JsonProperty(value=JSON_PROPERTY_FIELD_NAME, required=true) String fieldName, 
    @JsonProperty(value=JSON_PROPERTY_OPERATOR, required=true) Operator operator, 
    @JsonProperty(value=JSON_PROPERTY_VALUES, required=true) java.util.List<String> values
  ) {
    this();
    this.contentSet = contentSet;
    this.fieldName = fieldName;
    this.operator = operator;
    this.values = values;
  }

  public SearchCriterion contentSet(String contentSet) {
    this.contentSet = contentSet;
    return this;
  }

   /**
   * The content set the field belongs to, e.g., \&quot;Factset Fundamentals\&quot; or \&quot;Factset Estimates\&quot;.
   * @return contentSet
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "Factset Fundamentals", required = true, value = "The content set the field belongs to, e.g., \"Factset Fundamentals\" or \"Factset Estimates\".")
  @JsonProperty(JSON_PROPERTY_CONTENT_SET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getContentSet() {
    return contentSet;
  }


  @JsonProperty(JSON_PROPERTY_CONTENT_SET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setContentSet(String contentSet) {
    this.contentSet = contentSet;
  }


  public SearchCriterion fieldName(String fieldName) {
    this.fieldName = fieldName;
    return this;
  }

   /**
   * The field name to be used in the filter criteria. For custom content sets, display name should be used as a field name. The inputField must be a member of the contentSet specified above.
   * @return fieldName
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "Company Name", required = true, value = "The field name to be used in the filter criteria. For custom content sets, display name should be used as a field name. The inputField must be a member of the contentSet specified above.")
  @JsonProperty(JSON_PROPERTY_FIELD_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFieldName() {
    return fieldName;
  }


  @JsonProperty(JSON_PROPERTY_FIELD_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFieldName(String fieldName) {
    this.fieldName = fieldName;
  }


  public SearchCriterion operator(Operator operator) {
    this.operator = operator;
    return this;
  }

   /**
   * Get operator
   * @return operator
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_OPERATOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Operator getOperator() {
    return operator;
  }


  @JsonProperty(JSON_PROPERTY_OPERATOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOperator(Operator operator) {
    this.operator = operator;
  }


  public SearchCriterion values(java.util.List<String> values) {
    this.values = values;
    return this;
  }

  public SearchCriterion addValuesItem(String valuesItem) {
    this.values.add(valuesItem);
    return this;
  }

   /**
   * The value to be used in the filter criteria.
   * @return values
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "[\"Apple Inc.\"]", required = true, value = "The value to be used in the filter criteria.")
  @JsonProperty(JSON_PROPERTY_VALUES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public java.util.List<String> getValues() {
    return values;
  }


  @JsonProperty(JSON_PROPERTY_VALUES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setValues(java.util.List<String> values) {
    this.values = values;
  }


  /**
   * Return true if this SearchCriterion object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchCriterion searchCriterion = (SearchCriterion) o;
    return Objects.equals(this.contentSet, searchCriterion.contentSet) &&
        Objects.equals(this.fieldName, searchCriterion.fieldName) &&
        Objects.equals(this.operator, searchCriterion.operator) &&
        Objects.equals(this.values, searchCriterion.values);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contentSet, fieldName, operator, values);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchCriterion {\n");
    sb.append("    contentSet: ").append(toIndentedString(contentSet)).append("\n");
    sb.append("    fieldName: ").append(toIndentedString(fieldName)).append("\n");
    sb.append("    operator: ").append(toIndentedString(operator)).append("\n");
    sb.append("    values: ").append(toIndentedString(values)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

