/*
 * FactSet Funds API
 * FactSet Mutual Funds data offers over 50 fund- and share class-specific data points for mutual funds listed in the United States. <p>FactSet Mutual Funds Reference provides fund-specific reference information as well as FactSet's proprietary classification system. It includes but is not limited to the following coverage    * Fund descriptions    * A seven-tier classification system   * Leverage information   * Fees and expenses    * Portfolio managers       FactSet Mutual Funds Time Series provides quantitative data items on a historical basis. It includes but is not limited to the following coverage    * Net asset value   * Fund flows    * Assets under management   * Total return  <p>This API is rate-limited to 10 requests per second and 10 concurrent requests per user.</p> 
 *
 * The version of the OpenAPI document: 1.5.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetFunds.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.FactSetFunds.models.ContentSetItem;
import com.factset.sdk.FactSetFunds.models.JoinType;
import com.factset.sdk.FactSetFunds.models.SearchFilter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetFunds.JSON;


/**
 * Search Request Body
 */
@ApiModel(description = "Search Request Body")
@JsonPropertyOrder({
  SearchRequestBody.JSON_PROPERTY_CONTENT_SETS,
  SearchRequestBody.JSON_PROPERTY_FILTERS,
  SearchRequestBody.JSON_PROPERTY_JOIN_TYPE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class SearchRequestBody implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_CONTENT_SETS = "contentSets";
  private java.util.List<ContentSetItem> contentSets = new java.util.ArrayList<>();

  public static final String JSON_PROPERTY_FILTERS = "filters";
  private java.util.List<SearchFilter> filters = null;

  public static final String JSON_PROPERTY_JOIN_TYPE = "joinType";
  private JoinType joinType = JoinType.AND;

  public SearchRequestBody() { 
  }

  @JsonCreator
  public SearchRequestBody(
    @JsonProperty(value=JSON_PROPERTY_CONTENT_SETS, required=true) java.util.List<ContentSetItem> contentSets
  ) {
    this();
    this.contentSets = contentSets;
  }

  public SearchRequestBody contentSets(java.util.List<ContentSetItem> contentSets) {
    this.contentSets = contentSets;
    return this;
  }

  public SearchRequestBody addContentSetsItem(ContentSetItem contentSetsItem) {
    this.contentSets.add(contentSetsItem);
    return this;
  }

   /**
   * The content sets from which the fields are requested. For example: Factset Fundamentals, Factset Estimates, Partner Funds Fundata, etc. 
   * @return contentSets
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "[{\"contentSet\":\"Factset Fundamentals\",\"fields\":[\"ticker_region\",\"FF_SALES\",\"FF_EPS\"]},{\"contentSet\":\"Factset Estimates\",\"fields\":[\"EST_EPS\",\"EST_REVENUE\"]}]", required = true, value = "The content sets from which the fields are requested. For example: Factset Fundamentals, Factset Estimates, Partner Funds Fundata, etc. ")
  @JsonProperty(JSON_PROPERTY_CONTENT_SETS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public java.util.List<ContentSetItem> getContentSets() {
    return contentSets;
  }


  @JsonProperty(JSON_PROPERTY_CONTENT_SETS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setContentSets(java.util.List<ContentSetItem> contentSets) {
    this.contentSets = contentSets;
  }


  public SearchRequestBody filters(java.util.List<SearchFilter> filters) {
    this.filters = filters;
    return this;
  }

  public SearchRequestBody addFiltersItem(SearchFilter filtersItem) {
    if (this.filters == null) {
      this.filters = new java.util.ArrayList<>();
    }
    this.filters.add(filtersItem);
    return this;
  }

   /**
   * Filters to be applied to the request.
   * @return filters
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Filters to be applied to the request.")
  @JsonProperty(JSON_PROPERTY_FILTERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<SearchFilter> getFilters() {
    return filters;
  }


  @JsonProperty(JSON_PROPERTY_FILTERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFilters(java.util.List<SearchFilter> filters) {
    this.filters = filters;
  }


  public SearchRequestBody joinType(JoinType joinType) {
    this.joinType = joinType;
    return this;
  }

   /**
   * Get joinType
   * @return joinType
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_JOIN_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JoinType getJoinType() {
    return joinType;
  }


  @JsonProperty(JSON_PROPERTY_JOIN_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setJoinType(JoinType joinType) {
    this.joinType = joinType;
  }


  /**
   * Return true if this SearchRequestBody object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchRequestBody searchRequestBody = (SearchRequestBody) o;
    return Objects.equals(this.contentSets, searchRequestBody.contentSets) &&
        Objects.equals(this.filters, searchRequestBody.filters) &&
        Objects.equals(this.joinType, searchRequestBody.joinType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contentSets, filters, joinType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchRequestBody {\n");
    sb.append("    contentSets: ").append(toIndentedString(contentSets)).append("\n");
    sb.append("    filters: ").append(toIndentedString(filters)).append("\n");
    sb.append("    joinType: ").append(toIndentedString(joinType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

