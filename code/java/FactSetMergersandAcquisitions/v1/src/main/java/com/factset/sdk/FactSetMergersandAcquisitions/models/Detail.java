/*
 * FactSet Mergers and Acquisitions API
 * The FactSet Mergers and Acquisitions API provides access to key transactions and pricing metrics on over 60,000 globally traded deals. Reference a Global Universe of Mergers and Acquisitions (M&A) transactions where the target of the deal is a Publicly traded Company. Review premiums, multiples and fundamental data to gather insights on deals and create predictive models based on different deal characteristics.    Monetary values returned by this API are converted and represented in USD.    This API is allows a limit of 10 requests per second and a maximum of 10 concurrent requests. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetMergersandAcquisitions.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.FactSetMergersandAcquisitions.models.DealValue;
import com.factset.sdk.FactSetMergersandAcquisitions.models.Participant;
import com.factset.sdk.FactSetMergersandAcquisitions.models.Target;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.time.LocalDate;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetMergersandAcquisitions.JSON;


/**
 * Detail
 */
@JsonPropertyOrder({
  Detail.JSON_PROPERTY_DEAL_ID,
  Detail.JSON_PROPERTY_TARGET,
  Detail.JSON_PROPERTY_BUYERS,
  Detail.JSON_PROPERTY_SELLERS,
  Detail.JSON_PROPERTY_STATUS,
  Detail.JSON_PROPERTY_RUMOR_DATE,
  Detail.JSON_PROPERTY_ANNOUNCE_DATE,
  Detail.JSON_PROPERTY_REFERENCE_DATE,
  Detail.JSON_PROPERTY_EXPECTED_CLOSE_DATE,
  Detail.JSON_PROPERTY_CLOSE_DATE,
  Detail.JSON_PROPERTY_CANCEL_DATE,
  Detail.JSON_PROPERTY_DEAL_TYPE,
  Detail.JSON_PROPERTY_SOURCE_FUNDS,
  Detail.JSON_PROPERTY_DEAL_VALUE,
  Detail.JSON_PROPERTY_PURPOSE,
  Detail.JSON_PROPERTY_EV_SALES,
  Detail.JSON_PROPERTY_EV_E_B_I_T,
  Detail.JSON_PROPERTY_EV_E_B_I_T_D_A,
  Detail.JSON_PROPERTY_BEP_B_V,
  Detail.JSON_PROPERTY_SALES,
  Detail.JSON_PROPERTY_EBIT,
  Detail.JSON_PROPERTY_EBITDA,
  Detail.JSON_PROPERTY_NET_INCOME,
  Detail.JSON_PROPERTY_CASH,
  Detail.JSON_PROPERTY_INT_BEARING_DEBT,
  Detail.JSON_PROPERTY_PREF_STOCK_VALUE,
  Detail.JSON_PROPERTY_TOTAL_ASSETS,
  Detail.JSON_PROPERTY_SHARES_OUTSTANDING,
  Detail.JSON_PROPERTY_EPS,
  Detail.JSON_PROPERTY_BOOK_VALUE_SHARE,
  Detail.JSON_PROPERTY_TARGET_POST_MERGER_OWN,
  Detail.JSON_PROPERTY_BUYER_POST_MERGER_OWN,
  Detail.JSON_PROPERTY_ATTITUDE,
  Detail.JSON_PROPERTY_DEAL_SUMMARY,
  Detail.JSON_PROPERTY_DEAL_CHARACTERISTICS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class Detail implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_DEAL_ID = "dealId";
  private String dealId;

  public static final String JSON_PROPERTY_TARGET = "target";
  private Target target;

  public static final String JSON_PROPERTY_BUYERS = "buyers";
  private java.util.List<Participant> buyers = null;

  public static final String JSON_PROPERTY_SELLERS = "sellers";
  private JsonNullable<java.util.List<Participant>> sellers = JsonNullable.<java.util.List<Participant>>undefined();

  /**
   * Status of the deal.
   */
  public enum StatusEnum {
    PENDING("Pending"),
    
    COMPLETE("Complete"),
    
    CANCELLED("Cancelled"),
    
    RUMOR("Rumor"),
    
    RUMOR_CANCELLED("Rumor Cancelled");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public static final String JSON_PROPERTY_RUMOR_DATE = "rumorDate";
  private JsonNullable<LocalDate> rumorDate = JsonNullable.<LocalDate>undefined();

  public static final String JSON_PROPERTY_ANNOUNCE_DATE = "announceDate";
  private JsonNullable<LocalDate> announceDate = JsonNullable.<LocalDate>undefined();

  public static final String JSON_PROPERTY_REFERENCE_DATE = "referenceDate";
  private JsonNullable<LocalDate> referenceDate = JsonNullable.<LocalDate>undefined();

  public static final String JSON_PROPERTY_EXPECTED_CLOSE_DATE = "expectedCloseDate";
  private JsonNullable<LocalDate> expectedCloseDate = JsonNullable.<LocalDate>undefined();

  public static final String JSON_PROPERTY_CLOSE_DATE = "closeDate";
  private JsonNullable<LocalDate> closeDate = JsonNullable.<LocalDate>undefined();

  public static final String JSON_PROPERTY_CANCEL_DATE = "cancelDate";
  private JsonNullable<LocalDate> cancelDate = JsonNullable.<LocalDate>undefined();

  /**
   * Type of deal.
   */
  public enum DealTypeEnum {
    ACQUISITION_MERGER("Acquisition / Merger"),
    
    MAJORITY_STAKE("Majority Stake"),
    
    MINORITY_STAKE("Minority Stake"),
    
    SPINOFF("Spinoff");

    private String value;

    DealTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DealTypeEnum fromValue(String value) {
      for (DealTypeEnum b : DealTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_DEAL_TYPE = "dealType";
  private DealTypeEnum dealType;

  /**
   * Gets or Sets sourceFunds
   */
  public enum SourceFundsEnum {
    BANK_LOAN("Bank Loan"),
    
    BOND_NOTE_ISSUANCE("Bond/Note Issuance"),
    
    INTERNALLY_GENERATED_FUNDS("Internally Generated Funds"),
    
    MEZZANINE("Mezzanine"),
    
    PRIVATE_COMPANY_DEBT("Private Company Debt"),
    
    PRIVATE_EQUITY_VENTURE_FUNDING("Private Equity/Venture Funding"),
    
    PRIVATE_WARRANT_OPTION("Private Warrant Option"),
    
    SOURCE_OF_FUNDING_NOT_DISCLOSED("Source of Funding Not Disclosed"),
    
    STOCK_ISSUANCE_PREF_COM_PUBLIC_("Stock Issuance: Pref & Com (Public)");

    private String value;

    SourceFundsEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SourceFundsEnum fromValue(String value) {
      for (SourceFundsEnum b : SourceFundsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SOURCE_FUNDS = "sourceFunds";
  private JsonNullable<java.util.List<SourceFundsEnum>> sourceFunds = JsonNullable.<java.util.List<SourceFundsEnum>>undefined();

  public static final String JSON_PROPERTY_DEAL_VALUE = "dealValue";
  private DealValue dealValue;

  /**
   * Transaction purpose code or description.
   */
  public enum PurposeEnum {
    FINANCIAL("Financial"),
    
    STRATEGIC("Strategic");

    private String value;

    PurposeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PurposeEnum fromValue(String value) {
      for (PurposeEnum b : PurposeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_PURPOSE = "purpose";
  private JsonNullable<PurposeEnum> purpose = JsonNullable.<PurposeEnum>undefined();

  public static final String JSON_PROPERTY_EV_SALES = "evSales";
  private JsonNullable<BigDecimal> evSales = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_EV_E_B_I_T = "evEBIT";
  private JsonNullable<BigDecimal> evEBIT = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_EV_E_B_I_T_D_A = "evEBITDA";
  private JsonNullable<BigDecimal> evEBITDA = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_BEP_B_V = "bepBV";
  private JsonNullable<BigDecimal> bepBV = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_SALES = "sales";
  private JsonNullable<BigDecimal> sales = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_EBIT = "ebit";
  private JsonNullable<BigDecimal> ebit = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_EBITDA = "ebitda";
  private JsonNullable<BigDecimal> ebitda = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_NET_INCOME = "netIncome";
  private JsonNullable<BigDecimal> netIncome = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_CASH = "cash";
  private JsonNullable<BigDecimal> cash = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_INT_BEARING_DEBT = "intBearingDebt";
  private JsonNullable<BigDecimal> intBearingDebt = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_PREF_STOCK_VALUE = "prefStockValue";
  private JsonNullable<BigDecimal> prefStockValue = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_TOTAL_ASSETS = "totalAssets";
  private JsonNullable<BigDecimal> totalAssets = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_SHARES_OUTSTANDING = "sharesOutstanding";
  private JsonNullable<BigDecimal> sharesOutstanding = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_EPS = "eps";
  private JsonNullable<BigDecimal> eps = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_BOOK_VALUE_SHARE = "bookValueShare";
  private JsonNullable<BigDecimal> bookValueShare = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_TARGET_POST_MERGER_OWN = "targetPostMergerOwn";
  private JsonNullable<BigDecimal> targetPostMergerOwn = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_BUYER_POST_MERGER_OWN = "buyerPostMergerOwn";
  private JsonNullable<BigDecimal> buyerPostMergerOwn = JsonNullable.<BigDecimal>undefined();

  /**
   * The way the target&#39;s board of directors viewed the acquirer&#39;s proposal to enter into the transaction - Friendly, Hostile, Neutral.
   */
  public enum AttitudeEnum {
    FRIENDLY("Friendly"),
    
    HOSTILE("Hostile"),
    
    NEUTRAL("Neutral");

    private String value;

    AttitudeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AttitudeEnum fromValue(String value) {
      for (AttitudeEnum b : AttitudeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_ATTITUDE = "attitude";
  private JsonNullable<AttitudeEnum> attitude = JsonNullable.<AttitudeEnum>undefined();

  public static final String JSON_PROPERTY_DEAL_SUMMARY = "dealSummary";
  private JsonNullable<String> dealSummary = JsonNullable.<String>undefined();

  /**
   * Gets or Sets dealCharacteristics
   */
  public enum DealCharacteristicsEnum {
    DIVESTMENT("Divestment"),
    
    EMPLOYEE_BUY_OUT("Employee Buy-Out"),
    
    EXIT("Exit"),
    
    INVESTOR_BUY_IN("Investor Buy-In"),
    
    INVESTOR_BUY_OUT("Investor Buy-Out"),
    
    INSOLVENCY("Insolvency"),
    
    MANAGEMENT_BUY_OUT("Management Buy-Out"),
    
    REVERSE_TAKEOVER("Reverse Takeover"),
    
    SECONDARY_BUY_OUT("Secondary Buy-Out"),
    
    LEVERAGED_BUY_OUT("Leveraged Buy-Out"),
    
    GOING_PRIVATE("Going Private"),
    
    EXIT_PARTIAL_("Exit (Partial)"),
    
    CONTROL_PREMIUM_STUDY("Control Premium Study"),
    
    PRIVATE_EQUITY_GROUP("Private Equity Group"),
    
    ASSET_PURCHASE("Asset Purchase"),
    
    RELATED_PARTY("Related Party"),
    
    TENDER_OFFER("Tender Offer"),
    
    UNEQUAL_VOTING("Unequal Voting"),
    
    TARGET_CONTROLLING_SHAREHOLDER("Target Controlling Shareholder"),
    
    AUCTION("Auction"),
    
    CLUB_DEAL_PE_GROUP("Club Deal - PE Group"),
    
    CLUB_DEAL_CORP_PE("Club Deal - Corp/PE"),
    
    VENTURE_BACKED_ACQUIRER("Venture Backed Acquirer"),
    
    UNSOLICITED_BID("Unsolicited Bid"),
    
    RUMOR("Rumor"),
    
    SCHEME_OF_ARRANGEMENT("Scheme of Arrangement"),
    
    GOLDEN_SHARE("Golden Share"),
    
    MERGER_OF_EQUALS("Merger of Equals"),
    
    PRIVATIZATION("Privatization"),
    
    INDICATIVE_TENTATIVE_PROPOSAL("Indicative / Tentative Proposal"),
    
    CLUB_DEAL_CORPORATE_GROUP("Club Deal - Corporate Group"),
    
    MULTIPLE_TARGET_DEAL("Multiple Target Deal"),
    
    SPAC("SPAC"),
    
    SQUEEZE_OUT("Squeeze Out"),
    
    SPECIAL_COMMITTEE("Special Committee"),
    
    COLLAR("Collar"),
    
    FORCED_REGULATORY_DIVESTITURE("Forced Regulatory Divestiture"),
    
    VENTURE_BACKED_TARGET("Venture-Backed Target"),
    
    BANK_BRANCH_PURCHASE("Bank Branch Purchase"),
    
    BIDDER_SPECIAL_COMMITTEE("Bidder Special Committee"),
    
    TARGET_SPECIAL_COMMITTEE("Target Special Committee"),
    
    BIDDER_CONTROLLING_SHAREHOLDER("Bidder Controlling Shareholder"),
    
    PROPERTY_TRANSACTION("Property Transaction"),
    
    POWER_PLANT_PURCHASE("Power Plant Purchase");

    private String value;

    DealCharacteristicsEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DealCharacteristicsEnum fromValue(String value) {
      for (DealCharacteristicsEnum b : DealCharacteristicsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_DEAL_CHARACTERISTICS = "dealCharacteristics";
  private JsonNullable<java.util.List<DealCharacteristicsEnum>> dealCharacteristics = JsonNullable.<java.util.List<DealCharacteristicsEnum>>undefined();

  public Detail() { 
  }

  public Detail dealId(String dealId) {
    this.dealId = dealId;
    return this;
  }

   /**
   * FactSet unique deal Identifier.
   * @return dealId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "32870367MM", value = "FactSet unique deal Identifier.")
  @JsonProperty(JSON_PROPERTY_DEAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDealId() {
    return dealId;
  }


  @JsonProperty(JSON_PROPERTY_DEAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDealId(String dealId) {
    this.dealId = dealId;
  }


  public Detail target(Target target) {
    this.target = target;
    return this;
  }

   /**
   * Get target
   * @return target
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TARGET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Target getTarget() {
    return target;
  }


  @JsonProperty(JSON_PROPERTY_TARGET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTarget(Target target) {
    this.target = target;
  }


  public Detail buyers(java.util.List<Participant> buyers) {
    this.buyers = buyers;
    return this;
  }

  public Detail addBuyersItem(Participant buyersItem) {
    if (this.buyers == null) {
      this.buyers = new java.util.ArrayList<>();
    }
    this.buyers.add(buyersItem);
    return this;
  }

   /**
   * Array of participants in the deal who are buyers.
   * @return buyers
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Array of participants in the deal who are buyers.")
  @JsonProperty(JSON_PROPERTY_BUYERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<Participant> getBuyers() {
    return buyers;
  }


  @JsonProperty(JSON_PROPERTY_BUYERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBuyers(java.util.List<Participant> buyers) {
    this.buyers = buyers;
  }


  public Detail sellers(java.util.List<Participant> sellers) {
    this.sellers = JsonNullable.<java.util.List<Participant>>of(sellers);
    return this;
  }

  public Detail addSellersItem(Participant sellersItem) {
    if (this.sellers == null || !this.sellers.isPresent()) {
      this.sellers = JsonNullable.<java.util.List<Participant>>of(new java.util.ArrayList<>());
    }
    try {
      this.sellers.get().add(sellersItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Array of participants in the deal who are sellers.
   * @return sellers
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Array of participants in the deal who are sellers.")
  @JsonIgnore

  public java.util.List<Participant> getSellers() {
        return sellers.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SELLERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<java.util.List<Participant>> getSellers_JsonNullable() {
    return sellers;
  }
  
  @JsonProperty(JSON_PROPERTY_SELLERS)
  public void setSellers_JsonNullable(JsonNullable<java.util.List<Participant>> sellers) {
    this.sellers = sellers;
  }

  public void setSellers(java.util.List<Participant> sellers) {
    this.sellers = JsonNullable.<java.util.List<Participant>>of(sellers);
  }


  public Detail status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Status of the deal.
   * @return status
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Complete", value = "Status of the deal.")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public Detail rumorDate(LocalDate rumorDate) {
    this.rumorDate = JsonNullable.<LocalDate>of(rumorDate);
    return this;
  }

   /**
   * For a transaction that initially start out as a rumor, the date on which talks of the transaction first appeared in a major financial or trade publication. For so long as the transaction remains a rumor, the Rumor Date and the Announcement Date will be the same. Once confirmed and the transaction is no longer a rumor, the Rumor Date will remain unchanged and the Announcement Date will be updated to reflect the date upon which one of the parties involved in the deal disclosed the formal offer or a definitive agreement.
   * @return rumorDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Thu Nov 19 00:00:00 UTC 2020", value = "For a transaction that initially start out as a rumor, the date on which talks of the transaction first appeared in a major financial or trade publication. For so long as the transaction remains a rumor, the Rumor Date and the Announcement Date will be the same. Once confirmed and the transaction is no longer a rumor, the Rumor Date will remain unchanged and the Announcement Date will be updated to reflect the date upon which one of the parties involved in the deal disclosed the formal offer or a definitive agreement.")
  @JsonIgnore

  public LocalDate getRumorDate() {
        return rumorDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RUMOR_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LocalDate> getRumorDate_JsonNullable() {
    return rumorDate;
  }
  
  @JsonProperty(JSON_PROPERTY_RUMOR_DATE)
  public void setRumorDate_JsonNullable(JsonNullable<LocalDate> rumorDate) {
    this.rumorDate = rumorDate;
  }

  public void setRumorDate(LocalDate rumorDate) {
    this.rumorDate = JsonNullable.<LocalDate>of(rumorDate);
  }


  public Detail announceDate(LocalDate announceDate) {
    this.announceDate = JsonNullable.<LocalDate>of(announceDate);
    return this;
  }

   /**
   * Date the deal was announced.
   * @return announceDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Thu Nov 19 00:00:00 UTC 2020", value = "Date the deal was announced.")
  @JsonIgnore

  public LocalDate getAnnounceDate() {
        return announceDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ANNOUNCE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LocalDate> getAnnounceDate_JsonNullable() {
    return announceDate;
  }
  
  @JsonProperty(JSON_PROPERTY_ANNOUNCE_DATE)
  public void setAnnounceDate_JsonNullable(JsonNullable<LocalDate> announceDate) {
    this.announceDate = announceDate;
  }

  public void setAnnounceDate(LocalDate announceDate) {
    this.announceDate = JsonNullable.<LocalDate>of(announceDate);
  }


  public Detail referenceDate(LocalDate referenceDate) {
    this.referenceDate = JsonNullable.<LocalDate>of(referenceDate);
    return this;
  }

   /**
   * In a competing bid situation, the common date (earliest announcement date) used across all related transactions in order to determine the target&#39;s share prices, financials, premiums/multiples and all currency conversions (allowing for a common basis of comparison). For all other transactions, the Competing Bid Reference Date will be the same as the Announcement Date. For example, Peet&#39;s Coffee &amp; Tea, Inc. announced its intent to acquire Diedrich Coffee, Inc. on 2009-11-02. Green Mountain Coffee Roasters jumped this transaction, announcing its own competing bid on 2009-11-23. Green Mountain eventually won its bid, completing the acquisition on 2010-05-11. For both transactions, the Competing Bid Reference Date is 2009-11-02.
   * @return referenceDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Thu Nov 19 00:00:00 UTC 2020", value = "In a competing bid situation, the common date (earliest announcement date) used across all related transactions in order to determine the target's share prices, financials, premiums/multiples and all currency conversions (allowing for a common basis of comparison). For all other transactions, the Competing Bid Reference Date will be the same as the Announcement Date. For example, Peet's Coffee & Tea, Inc. announced its intent to acquire Diedrich Coffee, Inc. on 2009-11-02. Green Mountain Coffee Roasters jumped this transaction, announcing its own competing bid on 2009-11-23. Green Mountain eventually won its bid, completing the acquisition on 2010-05-11. For both transactions, the Competing Bid Reference Date is 2009-11-02.")
  @JsonIgnore

  public LocalDate getReferenceDate() {
        return referenceDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REFERENCE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LocalDate> getReferenceDate_JsonNullable() {
    return referenceDate;
  }
  
  @JsonProperty(JSON_PROPERTY_REFERENCE_DATE)
  public void setReferenceDate_JsonNullable(JsonNullable<LocalDate> referenceDate) {
    this.referenceDate = referenceDate;
  }

  public void setReferenceDate(LocalDate referenceDate) {
    this.referenceDate = JsonNullable.<LocalDate>of(referenceDate);
  }


  public Detail expectedCloseDate(LocalDate expectedCloseDate) {
    this.expectedCloseDate = JsonNullable.<LocalDate>of(expectedCloseDate);
    return this;
  }

   /**
   * Expected close date of the deal.
   * @return expectedCloseDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Thu Nov 19 00:00:00 UTC 2020", value = "Expected close date of the deal.")
  @JsonIgnore

  public LocalDate getExpectedCloseDate() {
        return expectedCloseDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXPECTED_CLOSE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LocalDate> getExpectedCloseDate_JsonNullable() {
    return expectedCloseDate;
  }
  
  @JsonProperty(JSON_PROPERTY_EXPECTED_CLOSE_DATE)
  public void setExpectedCloseDate_JsonNullable(JsonNullable<LocalDate> expectedCloseDate) {
    this.expectedCloseDate = expectedCloseDate;
  }

  public void setExpectedCloseDate(LocalDate expectedCloseDate) {
    this.expectedCloseDate = JsonNullable.<LocalDate>of(expectedCloseDate);
  }


  public Detail closeDate(LocalDate closeDate) {
    this.closeDate = JsonNullable.<LocalDate>of(closeDate);
    return this;
  }

   /**
   * Date the deal was closed.
   * @return closeDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Thu Nov 19 00:00:00 UTC 2020", value = "Date the deal was closed.")
  @JsonIgnore

  public LocalDate getCloseDate() {
        return closeDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLOSE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LocalDate> getCloseDate_JsonNullable() {
    return closeDate;
  }
  
  @JsonProperty(JSON_PROPERTY_CLOSE_DATE)
  public void setCloseDate_JsonNullable(JsonNullable<LocalDate> closeDate) {
    this.closeDate = closeDate;
  }

  public void setCloseDate(LocalDate closeDate) {
    this.closeDate = JsonNullable.<LocalDate>of(closeDate);
  }


  public Detail cancelDate(LocalDate cancelDate) {
    this.cancelDate = JsonNullable.<LocalDate>of(cancelDate);
    return this;
  }

   /**
   * Date the deal was cancelled.
   * @return cancelDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Thu Nov 19 00:00:00 UTC 2020", value = "Date the deal was cancelled.")
  @JsonIgnore

  public LocalDate getCancelDate() {
        return cancelDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CANCEL_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LocalDate> getCancelDate_JsonNullable() {
    return cancelDate;
  }
  
  @JsonProperty(JSON_PROPERTY_CANCEL_DATE)
  public void setCancelDate_JsonNullable(JsonNullable<LocalDate> cancelDate) {
    this.cancelDate = cancelDate;
  }

  public void setCancelDate(LocalDate cancelDate) {
    this.cancelDate = JsonNullable.<LocalDate>of(cancelDate);
  }


  public Detail dealType(DealTypeEnum dealType) {
    this.dealType = dealType;
    return this;
  }

   /**
   * Type of deal.
   * @return dealType
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Acquisition / Merger", value = "Type of deal.")
  @JsonProperty(JSON_PROPERTY_DEAL_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DealTypeEnum getDealType() {
    return dealType;
  }


  @JsonProperty(JSON_PROPERTY_DEAL_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDealType(DealTypeEnum dealType) {
    this.dealType = dealType;
  }


  public Detail sourceFunds(java.util.List<SourceFundsEnum> sourceFunds) {
    this.sourceFunds = JsonNullable.<java.util.List<SourceFundsEnum>>of(sourceFunds);
    return this;
  }

  public Detail addSourceFundsItem(SourceFundsEnum sourceFundsItem) {
    if (this.sourceFunds == null || !this.sourceFunds.isPresent()) {
      this.sourceFunds = JsonNullable.<java.util.List<SourceFundsEnum>>of(new java.util.ArrayList<>());
    }
    try {
      this.sourceFunds.get().add(sourceFundsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Method by which the acquirer was to finance the cash portion of the consideration offered in transaction (e.g., cash, bank debt, issuance of notes/bonds, etc.). For example, VF Corp financed its $2.2 bil all cash offer for The Timberland Company by issuing $900 mil in term notes and funding the balance through a combination of cash on hand and commercial paper.
   * @return sourceFunds
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "[\"Bank Loan\"]", value = "Method by which the acquirer was to finance the cash portion of the consideration offered in transaction (e.g., cash, bank debt, issuance of notes/bonds, etc.). For example, VF Corp financed its $2.2 bil all cash offer for The Timberland Company by issuing $900 mil in term notes and funding the balance through a combination of cash on hand and commercial paper.")
  @JsonIgnore

  public java.util.List<SourceFundsEnum> getSourceFunds() {
        return sourceFunds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SOURCE_FUNDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<java.util.List<SourceFundsEnum>> getSourceFunds_JsonNullable() {
    return sourceFunds;
  }
  
  @JsonProperty(JSON_PROPERTY_SOURCE_FUNDS)
  public void setSourceFunds_JsonNullable(JsonNullable<java.util.List<SourceFundsEnum>> sourceFunds) {
    this.sourceFunds = sourceFunds;
  }

  public void setSourceFunds(java.util.List<SourceFundsEnum> sourceFunds) {
    this.sourceFunds = JsonNullable.<java.util.List<SourceFundsEnum>>of(sourceFunds);
  }


  public Detail dealValue(DealValue dealValue) {
    this.dealValue = dealValue;
    return this;
  }

   /**
   * Get dealValue
   * @return dealValue
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DEAL_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DealValue getDealValue() {
    return dealValue;
  }


  @JsonProperty(JSON_PROPERTY_DEAL_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDealValue(DealValue dealValue) {
    this.dealValue = dealValue;
  }


  public Detail purpose(PurposeEnum purpose) {
    this.purpose = JsonNullable.<PurposeEnum>of(purpose);
    return this;
  }

   /**
   * Transaction purpose code or description.
   * @return purpose
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Strategic", value = "Transaction purpose code or description.")
  @JsonIgnore

  public PurposeEnum getPurpose() {
        return purpose.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PURPOSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<PurposeEnum> getPurpose_JsonNullable() {
    return purpose;
  }
  
  @JsonProperty(JSON_PROPERTY_PURPOSE)
  public void setPurpose_JsonNullable(JsonNullable<PurposeEnum> purpose) {
    this.purpose = purpose;
  }

  public void setPurpose(PurposeEnum purpose) {
    this.purpose = JsonNullable.<PurposeEnum>of(purpose);
  }


  public Detail evSales(BigDecimal evSales) {
    this.evSales = JsonNullable.<BigDecimal>of(evSales);
    return this;
  }

   /**
   * Ratio: Enterprise value/sales.
   * @return evSales
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "6.78243384816915", value = "Ratio: Enterprise value/sales.")
  @JsonIgnore

  public BigDecimal getEvSales() {
        return evSales.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EV_SALES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getEvSales_JsonNullable() {
    return evSales;
  }
  
  @JsonProperty(JSON_PROPERTY_EV_SALES)
  public void setEvSales_JsonNullable(JsonNullable<BigDecimal> evSales) {
    this.evSales = evSales;
  }

  public void setEvSales(BigDecimal evSales) {
    this.evSales = JsonNullable.<BigDecimal>of(evSales);
  }


  public Detail evEBIT(BigDecimal evEBIT) {
    this.evEBIT = JsonNullable.<BigDecimal>of(evEBIT);
    return this;
  }

   /**
   * Ratio: Enterprise value/EBIT.
   * @return evEBIT
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "-57.2732903899721", value = "Ratio: Enterprise value/EBIT.")
  @JsonIgnore

  public BigDecimal getEvEBIT() {
        return evEBIT.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EV_E_B_I_T)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getEvEBIT_JsonNullable() {
    return evEBIT;
  }
  
  @JsonProperty(JSON_PROPERTY_EV_E_B_I_T)
  public void setEvEBIT_JsonNullable(JsonNullable<BigDecimal> evEBIT) {
    this.evEBIT = evEBIT;
  }

  public void setEvEBIT(BigDecimal evEBIT) {
    this.evEBIT = JsonNullable.<BigDecimal>of(evEBIT);
  }


  public Detail evEBITDA(BigDecimal evEBITDA) {
    this.evEBITDA = JsonNullable.<BigDecimal>of(evEBITDA);
    return this;
  }

   /**
   * Ratio: Enterprise value/EBITDA.
   * @return evEBITDA
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "77.1398629173355", value = "Ratio: Enterprise value/EBITDA.")
  @JsonIgnore

  public BigDecimal getEvEBITDA() {
        return evEBITDA.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EV_E_B_I_T_D_A)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getEvEBITDA_JsonNullable() {
    return evEBITDA;
  }
  
  @JsonProperty(JSON_PROPERTY_EV_E_B_I_T_D_A)
  public void setEvEBITDA_JsonNullable(JsonNullable<BigDecimal> evEBITDA) {
    this.evEBITDA = evEBITDA;
  }

  public void setEvEBITDA(BigDecimal evEBITDA) {
    this.evEBITDA = JsonNullable.<BigDecimal>of(evEBITDA);
  }


  public Detail bepBV(BigDecimal bepBV) {
    this.bepBV = JsonNullable.<BigDecimal>of(bepBV);
    return this;
  }

   /**
   * Ratio: BEP/BV.
   * @return bepBV
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "-14.967663752252", value = "Ratio: BEP/BV.")
  @JsonIgnore

  public BigDecimal getBepBV() {
        return bepBV.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BEP_B_V)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getBepBV_JsonNullable() {
    return bepBV;
  }
  
  @JsonProperty(JSON_PROPERTY_BEP_B_V)
  public void setBepBV_JsonNullable(JsonNullable<BigDecimal> bepBV) {
    this.bepBV = bepBV;
  }

  public void setBepBV(BigDecimal bepBV) {
    this.bepBV = JsonNullable.<BigDecimal>of(bepBV);
  }


  public Detail sales(BigDecimal sales) {
    this.sales = JsonNullable.<BigDecimal>of(sales);
    return this;
  }

   /**
   * Sales at the time of the deal in USD.
   * @return sales
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "516.405", value = "Sales at the time of the deal in USD.")
  @JsonIgnore

  public BigDecimal getSales() {
        return sales.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SALES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getSales_JsonNullable() {
    return sales;
  }
  
  @JsonProperty(JSON_PROPERTY_SALES)
  public void setSales_JsonNullable(JsonNullable<BigDecimal> sales) {
    this.sales = sales;
  }

  public void setSales(BigDecimal sales) {
    this.sales = JsonNullable.<BigDecimal>of(sales);
  }


  public Detail ebit(BigDecimal ebit) {
    this.ebit = JsonNullable.<BigDecimal>of(ebit);
    return this;
  }

   /**
   * EBIT at the time of the deal in USD.
   * @return ebit
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "-74.672", value = "EBIT at the time of the deal in USD.")
  @JsonIgnore

  public BigDecimal getEbit() {
        return ebit.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EBIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getEbit_JsonNullable() {
    return ebit;
  }
  
  @JsonProperty(JSON_PROPERTY_EBIT)
  public void setEbit_JsonNullable(JsonNullable<BigDecimal> ebit) {
    this.ebit = ebit;
  }

  public void setEbit(BigDecimal ebit) {
    this.ebit = JsonNullable.<BigDecimal>of(ebit);
  }


  public Detail ebitda(BigDecimal ebitda) {
    this.ebitda = JsonNullable.<BigDecimal>of(ebitda);
    return this;
  }

   /**
   * EBITDA at the time of the deal in USD.
   * @return ebitda
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "55.441", value = "EBITDA at the time of the deal in USD.")
  @JsonIgnore

  public BigDecimal getEbitda() {
        return ebitda.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EBITDA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getEbitda_JsonNullable() {
    return ebitda;
  }
  
  @JsonProperty(JSON_PROPERTY_EBITDA)
  public void setEbitda_JsonNullable(JsonNullable<BigDecimal> ebitda) {
    this.ebitda = ebitda;
  }

  public void setEbitda(BigDecimal ebitda) {
    this.ebitda = JsonNullable.<BigDecimal>of(ebitda);
  }


  public Detail netIncome(BigDecimal netIncome) {
    this.netIncome = JsonNullable.<BigDecimal>of(netIncome);
    return this;
  }

   /**
   * Net income at the time of the deal in USD.
   * @return netIncome
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "235.865", value = "Net income at the time of the deal in USD.")
  @JsonIgnore

  public BigDecimal getNetIncome() {
        return netIncome.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NET_INCOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getNetIncome_JsonNullable() {
    return netIncome;
  }
  
  @JsonProperty(JSON_PROPERTY_NET_INCOME)
  public void setNetIncome_JsonNullable(JsonNullable<BigDecimal> netIncome) {
    this.netIncome = netIncome;
  }

  public void setNetIncome(BigDecimal netIncome) {
    this.netIncome = JsonNullable.<BigDecimal>of(netIncome);
  }


  public Detail cash(BigDecimal cash) {
    this.cash = JsonNullable.<BigDecimal>of(cash);
    return this;
  }

   /**
   * Cash at the time of the deal in USD.
   * @return cash
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "140.848", value = "Cash at the time of the deal in USD.")
  @JsonIgnore

  public BigDecimal getCash() {
        return cash.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CASH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getCash_JsonNullable() {
    return cash;
  }
  
  @JsonProperty(JSON_PROPERTY_CASH)
  public void setCash_JsonNullable(JsonNullable<BigDecimal> cash) {
    this.cash = cash;
  }

  public void setCash(BigDecimal cash) {
    this.cash = JsonNullable.<BigDecimal>of(cash);
  }


  public Detail intBearingDebt(BigDecimal intBearingDebt) {
    this.intBearingDebt = JsonNullable.<BigDecimal>of(intBearingDebt);
    return this;
  }

   /**
   * Interest bearing debt at the time of the deal in USD.
   * @return intBearingDebt
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "238.782", value = "Interest bearing debt at the time of the deal in USD.")
  @JsonIgnore

  public BigDecimal getIntBearingDebt() {
        return intBearingDebt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INT_BEARING_DEBT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getIntBearingDebt_JsonNullable() {
    return intBearingDebt;
  }
  
  @JsonProperty(JSON_PROPERTY_INT_BEARING_DEBT)
  public void setIntBearingDebt_JsonNullable(JsonNullable<BigDecimal> intBearingDebt) {
    this.intBearingDebt = intBearingDebt;
  }

  public void setIntBearingDebt(BigDecimal intBearingDebt) {
    this.intBearingDebt = JsonNullable.<BigDecimal>of(intBearingDebt);
  }


  public Detail prefStockValue(BigDecimal prefStockValue) {
    this.prefStockValue = JsonNullable.<BigDecimal>of(prefStockValue);
    return this;
  }

   /**
   * Preferred stock value at the time of the deal in USD.
   * @return prefStockValue
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "82.497", value = "Preferred stock value at the time of the deal in USD.")
  @JsonIgnore

  public BigDecimal getPrefStockValue() {
        return prefStockValue.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PREF_STOCK_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getPrefStockValue_JsonNullable() {
    return prefStockValue;
  }
  
  @JsonProperty(JSON_PROPERTY_PREF_STOCK_VALUE)
  public void setPrefStockValue_JsonNullable(JsonNullable<BigDecimal> prefStockValue) {
    this.prefStockValue = prefStockValue;
  }

  public void setPrefStockValue(BigDecimal prefStockValue) {
    this.prefStockValue = JsonNullable.<BigDecimal>of(prefStockValue);
  }


  public Detail totalAssets(BigDecimal totalAssets) {
    this.totalAssets = JsonNullable.<BigDecimal>of(totalAssets);
    return this;
  }

   /**
   * Total assets at the time of the deal in USD.
   * @return totalAssets
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "2265.933", value = "Total assets at the time of the deal in USD.")
  @JsonIgnore

  public BigDecimal getTotalAssets() {
        return totalAssets.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TOTAL_ASSETS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getTotalAssets_JsonNullable() {
    return totalAssets;
  }
  
  @JsonProperty(JSON_PROPERTY_TOTAL_ASSETS)
  public void setTotalAssets_JsonNullable(JsonNullable<BigDecimal> totalAssets) {
    this.totalAssets = totalAssets;
  }

  public void setTotalAssets(BigDecimal totalAssets) {
    this.totalAssets = JsonNullable.<BigDecimal>of(totalAssets);
  }


  public Detail sharesOutstanding(BigDecimal sharesOutstanding) {
    this.sharesOutstanding = JsonNullable.<BigDecimal>of(sharesOutstanding);
    return this;
  }

   /**
   * Shares outstanding at the time of the deal.
   * @return sharesOutstanding
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "485.772963", value = "Shares outstanding at the time of the deal.")
  @JsonIgnore

  public BigDecimal getSharesOutstanding() {
        return sharesOutstanding.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SHARES_OUTSTANDING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getSharesOutstanding_JsonNullable() {
    return sharesOutstanding;
  }
  
  @JsonProperty(JSON_PROPERTY_SHARES_OUTSTANDING)
  public void setSharesOutstanding_JsonNullable(JsonNullable<BigDecimal> sharesOutstanding) {
    this.sharesOutstanding = sharesOutstanding;
  }

  public void setSharesOutstanding(BigDecimal sharesOutstanding) {
    this.sharesOutstanding = JsonNullable.<BigDecimal>of(sharesOutstanding);
  }


  public Detail eps(BigDecimal eps) {
    this.eps = JsonNullable.<BigDecimal>of(eps);
    return this;
  }

   /**
   * Earnings per share at the time of the deal in USD.
   * @return eps
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "-0.206411240717816", value = "Earnings per share at the time of the deal in USD.")
  @JsonIgnore

  public BigDecimal getEps() {
        return eps.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getEps_JsonNullable() {
    return eps;
  }
  
  @JsonProperty(JSON_PROPERTY_EPS)
  public void setEps_JsonNullable(JsonNullable<BigDecimal> eps) {
    this.eps = eps;
  }

  public void setEps(BigDecimal eps) {
    this.eps = JsonNullable.<BigDecimal>of(eps);
  }


  public Detail bookValueShare(BigDecimal bookValueShare) {
    this.bookValueShare = JsonNullable.<BigDecimal>of(bookValueShare);
    return this;
  }

   /**
   * Book value per share at the time of the deal in USD.
   * @return bookValueShare
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "-0.574727334094137", value = "Book value per share at the time of the deal in USD.")
  @JsonIgnore

  public BigDecimal getBookValueShare() {
        return bookValueShare.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BOOK_VALUE_SHARE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getBookValueShare_JsonNullable() {
    return bookValueShare;
  }
  
  @JsonProperty(JSON_PROPERTY_BOOK_VALUE_SHARE)
  public void setBookValueShare_JsonNullable(JsonNullable<BigDecimal> bookValueShare) {
    this.bookValueShare = bookValueShare;
  }

  public void setBookValueShare(BigDecimal bookValueShare) {
    this.bookValueShare = JsonNullable.<BigDecimal>of(bookValueShare);
  }


  public Detail targetPostMergerOwn(BigDecimal targetPostMergerOwn) {
    this.targetPostMergerOwn = JsonNullable.<BigDecimal>of(targetPostMergerOwn);
    return this;
  }

   /**
   * Post Merger Ownership % - Target: The pro forma percentage of ownership to be held by target shareholders in the newly merged company. This data item is designed to reflect the expected ownership of the newly merged company at the time the transaction was announced. This data item will not be populated for Going Private transactions as they are not applicable since the acquirer in a going private transaction is not publicly traded.
   * @return targetPostMergerOwn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "0.52", value = "Post Merger Ownership % - Target: The pro forma percentage of ownership to be held by target shareholders in the newly merged company. This data item is designed to reflect the expected ownership of the newly merged company at the time the transaction was announced. This data item will not be populated for Going Private transactions as they are not applicable since the acquirer in a going private transaction is not publicly traded.")
  @JsonIgnore

  public BigDecimal getTargetPostMergerOwn() {
        return targetPostMergerOwn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TARGET_POST_MERGER_OWN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getTargetPostMergerOwn_JsonNullable() {
    return targetPostMergerOwn;
  }
  
  @JsonProperty(JSON_PROPERTY_TARGET_POST_MERGER_OWN)
  public void setTargetPostMergerOwn_JsonNullable(JsonNullable<BigDecimal> targetPostMergerOwn) {
    this.targetPostMergerOwn = targetPostMergerOwn;
  }

  public void setTargetPostMergerOwn(BigDecimal targetPostMergerOwn) {
    this.targetPostMergerOwn = JsonNullable.<BigDecimal>of(targetPostMergerOwn);
  }


  public Detail buyerPostMergerOwn(BigDecimal buyerPostMergerOwn) {
    this.buyerPostMergerOwn = JsonNullable.<BigDecimal>of(buyerPostMergerOwn);
    return this;
  }

   /**
   * Post Merger Ownership % - Acquirer: The pro forma percentage of ownership to be held by acquirer shareholders in the newly merged company. This data item is designed to reflect the expected ownership of the newly merged company at the time the transaction was announced. This data item will not be populated for Going Private transactions as they are not applicable since the acquirer in a going private transaction is not publicly traded.
   * @return buyerPostMergerOwn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "0.48", value = "Post Merger Ownership % - Acquirer: The pro forma percentage of ownership to be held by acquirer shareholders in the newly merged company. This data item is designed to reflect the expected ownership of the newly merged company at the time the transaction was announced. This data item will not be populated for Going Private transactions as they are not applicable since the acquirer in a going private transaction is not publicly traded.")
  @JsonIgnore

  public BigDecimal getBuyerPostMergerOwn() {
        return buyerPostMergerOwn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BUYER_POST_MERGER_OWN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getBuyerPostMergerOwn_JsonNullable() {
    return buyerPostMergerOwn;
  }
  
  @JsonProperty(JSON_PROPERTY_BUYER_POST_MERGER_OWN)
  public void setBuyerPostMergerOwn_JsonNullable(JsonNullable<BigDecimal> buyerPostMergerOwn) {
    this.buyerPostMergerOwn = buyerPostMergerOwn;
  }

  public void setBuyerPostMergerOwn(BigDecimal buyerPostMergerOwn) {
    this.buyerPostMergerOwn = JsonNullable.<BigDecimal>of(buyerPostMergerOwn);
  }


  public Detail attitude(AttitudeEnum attitude) {
    this.attitude = JsonNullable.<AttitudeEnum>of(attitude);
    return this;
  }

   /**
   * The way the target&#39;s board of directors viewed the acquirer&#39;s proposal to enter into the transaction - Friendly, Hostile, Neutral.
   * @return attitude
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Friendly", value = "The way the target's board of directors viewed the acquirer's proposal to enter into the transaction - Friendly, Hostile, Neutral.")
  @JsonIgnore

  public AttitudeEnum getAttitude() {
        return attitude.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ATTITUDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<AttitudeEnum> getAttitude_JsonNullable() {
    return attitude;
  }
  
  @JsonProperty(JSON_PROPERTY_ATTITUDE)
  public void setAttitude_JsonNullable(JsonNullable<AttitudeEnum> attitude) {
    this.attitude = attitude;
  }

  public void setAttitude(AttitudeEnum attitude) {
    this.attitude = JsonNullable.<AttitudeEnum>of(attitude);
  }


  public Detail dealSummary(String dealSummary) {
    this.dealSummary = JsonNullable.<String>of(dealSummary);
    return this;
  }

   /**
   * Summary of the deal.
   * @return dealSummary
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "The private equity arm of Blackstone Inc acquired Cvent Holding Corp, a portfolio company of Vista Equity Partners Management LLC, for US$4.2 billion in cash. Under the terms of the agreement, Blackstone would pay US$8.5 in cash for every shares acquired in Cvent Holding Corp, representing a premium of 52% to the VWAP over the 90 days prior to January 30, 2023. The transaction would be funded through a fully committed credit facility. It was initially reported that Cvent Holding Corp was exploring a sale of the firm, and a number of private equity firms, including Blackstone, are considering a bid.", value = "Summary of the deal.")
  @JsonIgnore

  public String getDealSummary() {
        return dealSummary.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DEAL_SUMMARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDealSummary_JsonNullable() {
    return dealSummary;
  }
  
  @JsonProperty(JSON_PROPERTY_DEAL_SUMMARY)
  public void setDealSummary_JsonNullable(JsonNullable<String> dealSummary) {
    this.dealSummary = dealSummary;
  }

  public void setDealSummary(String dealSummary) {
    this.dealSummary = JsonNullable.<String>of(dealSummary);
  }


  public Detail dealCharacteristics(java.util.List<DealCharacteristicsEnum> dealCharacteristics) {
    this.dealCharacteristics = JsonNullable.<java.util.List<DealCharacteristicsEnum>>of(dealCharacteristics);
    return this;
  }

  public Detail addDealCharacteristicsItem(DealCharacteristicsEnum dealCharacteristicsItem) {
    if (this.dealCharacteristics == null || !this.dealCharacteristics.isPresent()) {
      this.dealCharacteristics = JsonNullable.<java.util.List<DealCharacteristicsEnum>>of(new java.util.ArrayList<>());
    }
    try {
      this.dealCharacteristics.get().add(dealCharacteristicsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * The secondary deal type(s).
   * @return dealCharacteristics
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "[\"Exit\",\"Going Private\"]", value = "The secondary deal type(s).")
  @JsonIgnore

  public java.util.List<DealCharacteristicsEnum> getDealCharacteristics() {
        return dealCharacteristics.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DEAL_CHARACTERISTICS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<java.util.List<DealCharacteristicsEnum>> getDealCharacteristics_JsonNullable() {
    return dealCharacteristics;
  }
  
  @JsonProperty(JSON_PROPERTY_DEAL_CHARACTERISTICS)
  public void setDealCharacteristics_JsonNullable(JsonNullable<java.util.List<DealCharacteristicsEnum>> dealCharacteristics) {
    this.dealCharacteristics = dealCharacteristics;
  }

  public void setDealCharacteristics(java.util.List<DealCharacteristicsEnum> dealCharacteristics) {
    this.dealCharacteristics = JsonNullable.<java.util.List<DealCharacteristicsEnum>>of(dealCharacteristics);
  }


  /**
   * Return true if this Detail object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Detail detail = (Detail) o;
    return Objects.equals(this.dealId, detail.dealId) &&
        Objects.equals(this.target, detail.target) &&
        Objects.equals(this.buyers, detail.buyers) &&
        equalsNullable(this.sellers, detail.sellers) &&
        Objects.equals(this.status, detail.status) &&
        equalsNullable(this.rumorDate, detail.rumorDate) &&
        equalsNullable(this.announceDate, detail.announceDate) &&
        equalsNullable(this.referenceDate, detail.referenceDate) &&
        equalsNullable(this.expectedCloseDate, detail.expectedCloseDate) &&
        equalsNullable(this.closeDate, detail.closeDate) &&
        equalsNullable(this.cancelDate, detail.cancelDate) &&
        Objects.equals(this.dealType, detail.dealType) &&
        equalsNullable(this.sourceFunds, detail.sourceFunds) &&
        Objects.equals(this.dealValue, detail.dealValue) &&
        equalsNullable(this.purpose, detail.purpose) &&
        equalsNullable(this.evSales, detail.evSales) &&
        equalsNullable(this.evEBIT, detail.evEBIT) &&
        equalsNullable(this.evEBITDA, detail.evEBITDA) &&
        equalsNullable(this.bepBV, detail.bepBV) &&
        equalsNullable(this.sales, detail.sales) &&
        equalsNullable(this.ebit, detail.ebit) &&
        equalsNullable(this.ebitda, detail.ebitda) &&
        equalsNullable(this.netIncome, detail.netIncome) &&
        equalsNullable(this.cash, detail.cash) &&
        equalsNullable(this.intBearingDebt, detail.intBearingDebt) &&
        equalsNullable(this.prefStockValue, detail.prefStockValue) &&
        equalsNullable(this.totalAssets, detail.totalAssets) &&
        equalsNullable(this.sharesOutstanding, detail.sharesOutstanding) &&
        equalsNullable(this.eps, detail.eps) &&
        equalsNullable(this.bookValueShare, detail.bookValueShare) &&
        equalsNullable(this.targetPostMergerOwn, detail.targetPostMergerOwn) &&
        equalsNullable(this.buyerPostMergerOwn, detail.buyerPostMergerOwn) &&
        equalsNullable(this.attitude, detail.attitude) &&
        equalsNullable(this.dealSummary, detail.dealSummary) &&
        equalsNullable(this.dealCharacteristics, detail.dealCharacteristics);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(dealId, target, buyers, hashCodeNullable(sellers), status, hashCodeNullable(rumorDate), hashCodeNullable(announceDate), hashCodeNullable(referenceDate), hashCodeNullable(expectedCloseDate), hashCodeNullable(closeDate), hashCodeNullable(cancelDate), dealType, hashCodeNullable(sourceFunds), dealValue, hashCodeNullable(purpose), hashCodeNullable(evSales), hashCodeNullable(evEBIT), hashCodeNullable(evEBITDA), hashCodeNullable(bepBV), hashCodeNullable(sales), hashCodeNullable(ebit), hashCodeNullable(ebitda), hashCodeNullable(netIncome), hashCodeNullable(cash), hashCodeNullable(intBearingDebt), hashCodeNullable(prefStockValue), hashCodeNullable(totalAssets), hashCodeNullable(sharesOutstanding), hashCodeNullable(eps), hashCodeNullable(bookValueShare), hashCodeNullable(targetPostMergerOwn), hashCodeNullable(buyerPostMergerOwn), hashCodeNullable(attitude), hashCodeNullable(dealSummary), hashCodeNullable(dealCharacteristics));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Detail {\n");
    sb.append("    dealId: ").append(toIndentedString(dealId)).append("\n");
    sb.append("    target: ").append(toIndentedString(target)).append("\n");
    sb.append("    buyers: ").append(toIndentedString(buyers)).append("\n");
    sb.append("    sellers: ").append(toIndentedString(sellers)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    rumorDate: ").append(toIndentedString(rumorDate)).append("\n");
    sb.append("    announceDate: ").append(toIndentedString(announceDate)).append("\n");
    sb.append("    referenceDate: ").append(toIndentedString(referenceDate)).append("\n");
    sb.append("    expectedCloseDate: ").append(toIndentedString(expectedCloseDate)).append("\n");
    sb.append("    closeDate: ").append(toIndentedString(closeDate)).append("\n");
    sb.append("    cancelDate: ").append(toIndentedString(cancelDate)).append("\n");
    sb.append("    dealType: ").append(toIndentedString(dealType)).append("\n");
    sb.append("    sourceFunds: ").append(toIndentedString(sourceFunds)).append("\n");
    sb.append("    dealValue: ").append(toIndentedString(dealValue)).append("\n");
    sb.append("    purpose: ").append(toIndentedString(purpose)).append("\n");
    sb.append("    evSales: ").append(toIndentedString(evSales)).append("\n");
    sb.append("    evEBIT: ").append(toIndentedString(evEBIT)).append("\n");
    sb.append("    evEBITDA: ").append(toIndentedString(evEBITDA)).append("\n");
    sb.append("    bepBV: ").append(toIndentedString(bepBV)).append("\n");
    sb.append("    sales: ").append(toIndentedString(sales)).append("\n");
    sb.append("    ebit: ").append(toIndentedString(ebit)).append("\n");
    sb.append("    ebitda: ").append(toIndentedString(ebitda)).append("\n");
    sb.append("    netIncome: ").append(toIndentedString(netIncome)).append("\n");
    sb.append("    cash: ").append(toIndentedString(cash)).append("\n");
    sb.append("    intBearingDebt: ").append(toIndentedString(intBearingDebt)).append("\n");
    sb.append("    prefStockValue: ").append(toIndentedString(prefStockValue)).append("\n");
    sb.append("    totalAssets: ").append(toIndentedString(totalAssets)).append("\n");
    sb.append("    sharesOutstanding: ").append(toIndentedString(sharesOutstanding)).append("\n");
    sb.append("    eps: ").append(toIndentedString(eps)).append("\n");
    sb.append("    bookValueShare: ").append(toIndentedString(bookValueShare)).append("\n");
    sb.append("    targetPostMergerOwn: ").append(toIndentedString(targetPostMergerOwn)).append("\n");
    sb.append("    buyerPostMergerOwn: ").append(toIndentedString(buyerPostMergerOwn)).append("\n");
    sb.append("    attitude: ").append(toIndentedString(attitude)).append("\n");
    sb.append("    dealSummary: ").append(toIndentedString(dealSummary)).append("\n");
    sb.append("    dealCharacteristics: ").append(toIndentedString(dealCharacteristics)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

