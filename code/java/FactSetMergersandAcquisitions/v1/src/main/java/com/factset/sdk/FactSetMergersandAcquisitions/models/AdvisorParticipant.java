/*
 * FactSet Mergers and Acquisitions API
 * The FactSet Mergers and Acquisitions API provides access to key transactions and pricing metrics on over 60,000 globally traded deals. Reference a Global Universe of Mergers and Acquisitions (M&A) transactions where the target of the deal is a Publicly traded Company. Review premiums, multiples and fundamental data to gather insights on deals and create predictive models based on different deal characteristics.    Monetary values returned by this API are converted and represented in USD.    This API is allows a limit of 10 requests per second and a maximum of 10 concurrent requests. 
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetMergersandAcquisitions.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetMergersandAcquisitions.JSON;


/**
 * Advisor Participant Object
 */
@ApiModel(description = "Advisor Participant Object")
@JsonPropertyOrder({
  AdvisorParticipant.JSON_PROPERTY_FSYM_ID,
  AdvisorParticipant.JSON_PROPERTY_NAME,
  AdvisorParticipant.JSON_PROPERTY_FEES
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class AdvisorParticipant implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_FSYM_ID = "fsymId";
  private JsonNullable<String> fsymId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FEES = "fees";
  private JsonNullable<BigDecimal> fees = JsonNullable.<BigDecimal>undefined();

  public AdvisorParticipant() { 
  }

  public AdvisorParticipant fsymId(String fsymId) {
    this.fsymId = JsonNullable.<String>of(fsymId);
    return this;
  }

   /**
   * FactSet Permanent Identifier of the participant. Six alpha-numeric characters, excluding vowels, with an -E suffix (XXXXXX-E). Null values indicate that no data is available.
   * @return fsymId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "000N1N-E", value = "FactSet Permanent Identifier of the participant. Six alpha-numeric characters, excluding vowels, with an -E suffix (XXXXXX-E). Null values indicate that no data is available.")
  @JsonIgnore

  public String getFsymId() {
        return fsymId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFsymId_JsonNullable() {
    return fsymId;
  }
  
  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  public void setFsymId_JsonNullable(JsonNullable<String> fsymId) {
    this.fsymId = fsymId;
  }

  public void setFsymId(String fsymId) {
    this.fsymId = JsonNullable.<String>of(fsymId);
  }


  public AdvisorParticipant name(String name) {
    this.name = JsonNullable.<String>of(name);
    return this;
  }

   /**
   * Entity name of the advisor. Null values indicate that no data is available.
   * @return name
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Morgan Stanley & Co. LLC", value = "Entity name of the advisor. Null values indicate that no data is available.")
  @JsonIgnore

  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public AdvisorParticipant fees(BigDecimal fees) {
    this.fees = JsonNullable.<BigDecimal>of(fees);
    return this;
  }

   /**
   * Fees of the advisor. All values in millions of USD. Null values indicate that no data is available.
   * @return fees
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "50", value = "Fees of the advisor. All values in millions of USD. Null values indicate that no data is available.")
  @JsonIgnore

  public BigDecimal getFees() {
        return fees.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FEES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getFees_JsonNullable() {
    return fees;
  }
  
  @JsonProperty(JSON_PROPERTY_FEES)
  public void setFees_JsonNullable(JsonNullable<BigDecimal> fees) {
    this.fees = fees;
  }

  public void setFees(BigDecimal fees) {
    this.fees = JsonNullable.<BigDecimal>of(fees);
  }


  /**
   * Return true if this AdvisorParticipant object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdvisorParticipant advisorParticipant = (AdvisorParticipant) o;
    return equalsNullable(this.fsymId, advisorParticipant.fsymId) &&
        equalsNullable(this.name, advisorParticipant.name) &&
        equalsNullable(this.fees, advisorParticipant.fees);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(fsymId), hashCodeNullable(name), hashCodeNullable(fees));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdvisorParticipant {\n");
    sb.append("    fsymId: ").append(toIndentedString(fsymId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    fees: ").append(toIndentedString(fees)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

