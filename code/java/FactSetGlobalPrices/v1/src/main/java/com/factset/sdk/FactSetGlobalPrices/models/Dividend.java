/*
 * FactSet Global Prices API
 * The FactSet Global Prices API provides end of day market pricing content using cloud and microservices technology, encompassing both pricing as well as corporate actions and events data.</p> 
 *
 * The version of the OpenAPI document: 1.8.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetGlobalPrices.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetGlobalPrices.JSON;


/**
 * Dividend
 */
@JsonPropertyOrder({
  Dividend.JSON_PROPERTY_FSYM_ID,
  Dividend.JSON_PROPERTY_EVENT_ID,
  Dividend.JSON_PROPERTY_EVENT_TYPE_CODE,
  Dividend.JSON_PROPERTY_EVENT_TYPE_DESC,
  Dividend.JSON_PROPERTY_DIV_TYPE_CODE,
  Dividend.JSON_PROPERTY_ANNOUNCEMENT_DATE,
  Dividend.JSON_PROPERTY_RECORD_DATE,
  Dividend.JSON_PROPERTY_PAY_DATE,
  Dividend.JSON_PROPERTY_EFFECTIVE_DATE,
  Dividend.JSON_PROPERTY_CURRENCY,
  Dividend.JSON_PROPERTY_AMT_DEF_NET_GROSS_INDICATOR,
  Dividend.JSON_PROPERTY_AMT_DEF_TRADING_ADJ,
  Dividend.JSON_PROPERTY_AMT_DEF_TRADING_UNADJ,
  Dividend.JSON_PROPERTY_AMT_GROSS_TRADING_ADJ,
  Dividend.JSON_PROPERTY_AMT_GROSS_TRADING_UNADJ,
  Dividend.JSON_PROPERTY_AMT_NET_TRADING_ADJ,
  Dividend.JSON_PROPERTY_AMT_NET_TRADING_UNADJ,
  Dividend.JSON_PROPERTY_DECLARED_CURRENCY,
  Dividend.JSON_PROPERTY_AMT_DEF_DEC_ADJ,
  Dividend.JSON_PROPERTY_AMT_DEF_DEC_UNADJ,
  Dividend.JSON_PROPERTY_AMT_GROSS_DEC_ADJ,
  Dividend.JSON_PROPERTY_AMT_GROSS_DEC_UNADJ,
  Dividend.JSON_PROPERTY_AMT_NET_DEC_ADJ,
  Dividend.JSON_PROPERTY_AMT_NET_DEC_UNADJ,
  Dividend.JSON_PROPERTY_DIVIDEND_STATUS,
  Dividend.JSON_PROPERTY_DIVIDEND_ACTIVE_FLAG,
  Dividend.JSON_PROPERTY_DIVIDENDS_SPEC_FLAG,
  Dividend.JSON_PROPERTY_FRANK_DEF_TRADING_ADJ,
  Dividend.JSON_PROPERTY_FRANK_DEF_TRADING_UNADJ,
  Dividend.JSON_PROPERTY_FRANK_DEF_DEC_ADJ,
  Dividend.JSON_PROPERTY_FRANK_DEF_DEC_UNADJ,
  Dividend.JSON_PROPERTY_FRANK_PCT,
  Dividend.JSON_PROPERTY_TAX_RATE,
  Dividend.JSON_PROPERTY_REQUEST_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class Dividend implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_FSYM_ID = "fsymId";
  private String fsymId;

  public static final String JSON_PROPERTY_EVENT_ID = "eventId";
  private String eventId;

  /**
   * Corporate Actions Event type code.
   */
  public enum EventTypeCodeEnum {
    DVC("DVC"),
    
    DVCD("DVCD"),
    
    DRP("DRP");

    private String value;

    EventTypeCodeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static EventTypeCodeEnum fromValue(String value) {
      for (EventTypeCodeEnum b : EventTypeCodeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_EVENT_TYPE_CODE = "eventTypeCode";
  private EventTypeCodeEnum eventTypeCode;

  public static final String JSON_PROPERTY_EVENT_TYPE_DESC = "eventTypeDesc";
  private String eventTypeDesc;

  public static final String JSON_PROPERTY_DIV_TYPE_CODE = "divTypeCode";
  private String divTypeCode;

  public static final String JSON_PROPERTY_ANNOUNCEMENT_DATE = "announcementDate";
  private String announcementDate;

  public static final String JSON_PROPERTY_RECORD_DATE = "recordDate";
  private String recordDate;

  public static final String JSON_PROPERTY_PAY_DATE = "payDate";
  private String payDate;

  public static final String JSON_PROPERTY_EFFECTIVE_DATE = "effectiveDate";
  private String effectiveDate;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private String currency;

  /**
   * Net/Gross Marker Code. For details describing Net vs. Gross dividends, visit [Online Assistant Page #11512](https://oa.apps.factset.com/pages/11512).
   */
  public enum AmtDefNetGrossIndicatorEnum {
    N("N"),
    
    G("G");

    private String value;

    AmtDefNetGrossIndicatorEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static AmtDefNetGrossIndicatorEnum fromValue(String value) {
      for (AmtDefNetGrossIndicatorEnum b : AmtDefNetGrossIndicatorEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_AMT_DEF_NET_GROSS_INDICATOR = "amtDefNetGrossIndicator";
  private AmtDefNetGrossIndicatorEnum amtDefNetGrossIndicator;

  public static final String JSON_PROPERTY_AMT_DEF_TRADING_ADJ = "amtDefTradingAdj";
  private Double amtDefTradingAdj;

  public static final String JSON_PROPERTY_AMT_DEF_TRADING_UNADJ = "amtDefTradingUnadj";
  private Double amtDefTradingUnadj;

  public static final String JSON_PROPERTY_AMT_GROSS_TRADING_ADJ = "amtGrossTradingAdj";
  private Double amtGrossTradingAdj;

  public static final String JSON_PROPERTY_AMT_GROSS_TRADING_UNADJ = "amtGrossTradingUnadj";
  private Double amtGrossTradingUnadj;

  public static final String JSON_PROPERTY_AMT_NET_TRADING_ADJ = "amtNetTradingAdj";
  private Double amtNetTradingAdj;

  public static final String JSON_PROPERTY_AMT_NET_TRADING_UNADJ = "amtNetTradingUnadj";
  private Double amtNetTradingUnadj;

  public static final String JSON_PROPERTY_DECLARED_CURRENCY = "declaredCurrency";
  private String declaredCurrency;

  public static final String JSON_PROPERTY_AMT_DEF_DEC_ADJ = "amtDefDecAdj";
  private Double amtDefDecAdj;

  public static final String JSON_PROPERTY_AMT_DEF_DEC_UNADJ = "amtDefDecUnadj";
  private Double amtDefDecUnadj;

  public static final String JSON_PROPERTY_AMT_GROSS_DEC_ADJ = "amtGrossDecAdj";
  private Double amtGrossDecAdj;

  public static final String JSON_PROPERTY_AMT_GROSS_DEC_UNADJ = "amtGrossDecUnadj";
  private Double amtGrossDecUnadj;

  public static final String JSON_PROPERTY_AMT_NET_DEC_ADJ = "amtNetDecAdj";
  private Double amtNetDecAdj;

  public static final String JSON_PROPERTY_AMT_NET_DEC_UNADJ = "amtNetDecUnadj";
  private Double amtNetDecUnadj;

  public static final String JSON_PROPERTY_DIVIDEND_STATUS = "dividendStatus";
  private Integer dividendStatus;

  public static final String JSON_PROPERTY_DIVIDEND_ACTIVE_FLAG = "dividendActiveFlag";
  private Integer dividendActiveFlag;

  public static final String JSON_PROPERTY_DIVIDENDS_SPEC_FLAG = "dividendsSpecFlag";
  private Integer dividendsSpecFlag;

  public static final String JSON_PROPERTY_FRANK_DEF_TRADING_ADJ = "frankDefTradingAdj";
  private Double frankDefTradingAdj;

  public static final String JSON_PROPERTY_FRANK_DEF_TRADING_UNADJ = "frankDefTradingUnadj";
  private Double frankDefTradingUnadj;

  public static final String JSON_PROPERTY_FRANK_DEF_DEC_ADJ = "frankDefDecAdj";
  private Double frankDefDecAdj;

  public static final String JSON_PROPERTY_FRANK_DEF_DEC_UNADJ = "frankDefDecUnadj";
  private Double frankDefDecUnadj;

  public static final String JSON_PROPERTY_FRANK_PCT = "frankPct";
  private Double frankPct;

  public static final String JSON_PROPERTY_TAX_RATE = "taxRate";
  private Double taxRate;

  public static final String JSON_PROPERTY_REQUEST_ID = "requestId";
  private String requestId;

  public Dividend() { 
  }

  public Dividend fsymId(String fsymId) {
    this.fsymId = fsymId;
    return this;
  }

   /**
   * Factset Regional Security Identifier. Six alpha-numeric characters, excluding vowels, with an -R suffix (XXXXXX-R). Identifies the security&#39;s best regional security data series per currency. For equities, all primary listings per region and currency are allocated a regional-level permanent identifier. The regional-level permanent identifier will be available once a SEDOL representing the region/currency has been allocated and the identifiers are on FactSet.
   * @return fsymId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "SJY281-R", value = "Factset Regional Security Identifier. Six alpha-numeric characters, excluding vowels, with an -R suffix (XXXXXX-R). Identifies the security's best regional security data series per currency. For equities, all primary listings per region and currency are allocated a regional-level permanent identifier. The regional-level permanent identifier will be available once a SEDOL representing the region/currency has been allocated and the identifiers are on FactSet.")
  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFsymId() {
    return fsymId;
  }


  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFsymId(String fsymId) {
    this.fsymId = fsymId;
  }


  public Dividend eventId(String eventId) {
    this.eventId = eventId;
    return this;
  }

   /**
   * FactSet identifier that uniquely identifies the Event.
   * @return eventId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "JTHPFN-A", value = "FactSet identifier that uniquely identifies the Event.")
  @JsonProperty(JSON_PROPERTY_EVENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEventId() {
    return eventId;
  }


  @JsonProperty(JSON_PROPERTY_EVENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEventId(String eventId) {
    this.eventId = eventId;
  }


  public Dividend eventTypeCode(EventTypeCodeEnum eventTypeCode) {
    this.eventTypeCode = eventTypeCode;
    return this;
  }

   /**
   * Corporate Actions Event type code.
   * @return eventTypeCode
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Corporate Actions Event type code.")
  @JsonProperty(JSON_PROPERTY_EVENT_TYPE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EventTypeCodeEnum getEventTypeCode() {
    return eventTypeCode;
  }


  @JsonProperty(JSON_PROPERTY_EVENT_TYPE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEventTypeCode(EventTypeCodeEnum eventTypeCode) {
    this.eventTypeCode = eventTypeCode;
  }


  public Dividend eventTypeDesc(String eventTypeDesc) {
    this.eventTypeDesc = eventTypeDesc;
    return this;
  }

   /**
   * Corporate Actions Event type description.
   * @return eventTypeDesc
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Corporate Actions Event type description.")
  @JsonProperty(JSON_PROPERTY_EVENT_TYPE_DESC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEventTypeDesc() {
    return eventTypeDesc;
  }


  @JsonProperty(JSON_PROPERTY_EVENT_TYPE_DESC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEventTypeDesc(String eventTypeDesc) {
    this.eventTypeDesc = eventTypeDesc;
  }


  public Dividend divTypeCode(String divTypeCode) {
    this.divTypeCode = divTypeCode;
    return this;
  }

   /**
   * Dividend Type Code. For code descriptions, visit [Online Assistant Page #8764] (https://oa.apps.factset.com/pages/8764). 
   * @return divTypeCode
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Dividend Type Code. For code descriptions, visit [Online Assistant Page #8764] (https://oa.apps.factset.com/pages/8764). ")
  @JsonProperty(JSON_PROPERTY_DIV_TYPE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDivTypeCode() {
    return divTypeCode;
  }


  @JsonProperty(JSON_PROPERTY_DIV_TYPE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDivTypeCode(String divTypeCode) {
    this.divTypeCode = divTypeCode;
  }


  public Dividend announcementDate(String announcementDate) {
    this.announcementDate = announcementDate;
    return this;
  }

   /**
   * Date Event was announced in YYYY-MM-DD format.
   * @return announcementDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Date Event was announced in YYYY-MM-DD format.")
  @JsonProperty(JSON_PROPERTY_ANNOUNCEMENT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAnnouncementDate() {
    return announcementDate;
  }


  @JsonProperty(JSON_PROPERTY_ANNOUNCEMENT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAnnouncementDate(String announcementDate) {
    this.announcementDate = announcementDate;
  }


  public Dividend recordDate(String recordDate) {
    this.recordDate = recordDate;
    return this;
  }

   /**
   * Date of Record for distribution in YYYY-MM-DD format.
   * @return recordDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Date of Record for distribution in YYYY-MM-DD format.")
  @JsonProperty(JSON_PROPERTY_RECORD_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRecordDate() {
    return recordDate;
  }


  @JsonProperty(JSON_PROPERTY_RECORD_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecordDate(String recordDate) {
    this.recordDate = recordDate;
  }


  public Dividend payDate(String payDate) {
    this.payDate = payDate;
    return this;
  }

   /**
   * Date of Payment for distribution in YYYY-MM-DD format.
   * @return payDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Date of Payment for distribution in YYYY-MM-DD format.")
  @JsonProperty(JSON_PROPERTY_PAY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPayDate() {
    return payDate;
  }


  @JsonProperty(JSON_PROPERTY_PAY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPayDate(String payDate) {
    this.payDate = payDate;
  }


  public Dividend effectiveDate(String effectiveDate) {
    this.effectiveDate = effectiveDate;
    return this;
  }

   /**
   * Effective Date or Ex-Date of distribution in YYYY-MM-DD format.
   * @return effectiveDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Effective Date or Ex-Date of distribution in YYYY-MM-DD format.")
  @JsonProperty(JSON_PROPERTY_EFFECTIVE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEffectiveDate() {
    return effectiveDate;
  }


  @JsonProperty(JSON_PROPERTY_EFFECTIVE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEffectiveDate(String effectiveDate) {
    this.effectiveDate = effectiveDate;
  }


  public Dividend currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Currency ISO code. For more details, visit [Online Assistant Page #1470](https://oa.apps.factset.com/pages/1470).
   * @return currency
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "USD", value = "Currency ISO code. For more details, visit [Online Assistant Page #1470](https://oa.apps.factset.com/pages/1470).")
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public Dividend amtDefNetGrossIndicator(AmtDefNetGrossIndicatorEnum amtDefNetGrossIndicator) {
    this.amtDefNetGrossIndicator = amtDefNetGrossIndicator;
    return this;
  }

   /**
   * Net/Gross Marker Code. For details describing Net vs. Gross dividends, visit [Online Assistant Page #11512](https://oa.apps.factset.com/pages/11512).
   * @return amtDefNetGrossIndicator
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Net/Gross Marker Code. For details describing Net vs. Gross dividends, visit [Online Assistant Page #11512](https://oa.apps.factset.com/pages/11512).")
  @JsonProperty(JSON_PROPERTY_AMT_DEF_NET_GROSS_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AmtDefNetGrossIndicatorEnum getAmtDefNetGrossIndicator() {
    return amtDefNetGrossIndicator;
  }


  @JsonProperty(JSON_PROPERTY_AMT_DEF_NET_GROSS_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmtDefNetGrossIndicator(AmtDefNetGrossIndicatorEnum amtDefNetGrossIndicator) {
    this.amtDefNetGrossIndicator = amtDefNetGrossIndicator;
  }


  public Dividend amtDefTradingAdj(Double amtDefTradingAdj) {
    this.amtDefTradingAdj = amtDefTradingAdj;
    return this;
  }

   /**
   * Default Amount - Trading Currency, Split Adjusted
   * @return amtDefTradingAdj
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Default Amount - Trading Currency, Split Adjusted")
  @JsonProperty(JSON_PROPERTY_AMT_DEF_TRADING_ADJ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getAmtDefTradingAdj() {
    return amtDefTradingAdj;
  }


  @JsonProperty(JSON_PROPERTY_AMT_DEF_TRADING_ADJ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmtDefTradingAdj(Double amtDefTradingAdj) {
    this.amtDefTradingAdj = amtDefTradingAdj;
  }


  public Dividend amtDefTradingUnadj(Double amtDefTradingUnadj) {
    this.amtDefTradingUnadj = amtDefTradingUnadj;
    return this;
  }

   /**
   * Default Amount - Trading Currency, Unadjusted
   * @return amtDefTradingUnadj
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Default Amount - Trading Currency, Unadjusted")
  @JsonProperty(JSON_PROPERTY_AMT_DEF_TRADING_UNADJ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getAmtDefTradingUnadj() {
    return amtDefTradingUnadj;
  }


  @JsonProperty(JSON_PROPERTY_AMT_DEF_TRADING_UNADJ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmtDefTradingUnadj(Double amtDefTradingUnadj) {
    this.amtDefTradingUnadj = amtDefTradingUnadj;
  }


  public Dividend amtGrossTradingAdj(Double amtGrossTradingAdj) {
    this.amtGrossTradingAdj = amtGrossTradingAdj;
    return this;
  }

   /**
   * Gross Amount - Trading Currency, Split Adjusted 
   * @return amtGrossTradingAdj
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Gross Amount - Trading Currency, Split Adjusted ")
  @JsonProperty(JSON_PROPERTY_AMT_GROSS_TRADING_ADJ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getAmtGrossTradingAdj() {
    return amtGrossTradingAdj;
  }


  @JsonProperty(JSON_PROPERTY_AMT_GROSS_TRADING_ADJ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmtGrossTradingAdj(Double amtGrossTradingAdj) {
    this.amtGrossTradingAdj = amtGrossTradingAdj;
  }


  public Dividend amtGrossTradingUnadj(Double amtGrossTradingUnadj) {
    this.amtGrossTradingUnadj = amtGrossTradingUnadj;
    return this;
  }

   /**
   * Gross Amount - Trading Currency, Unadjusted 
   * @return amtGrossTradingUnadj
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Gross Amount - Trading Currency, Unadjusted ")
  @JsonProperty(JSON_PROPERTY_AMT_GROSS_TRADING_UNADJ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getAmtGrossTradingUnadj() {
    return amtGrossTradingUnadj;
  }


  @JsonProperty(JSON_PROPERTY_AMT_GROSS_TRADING_UNADJ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmtGrossTradingUnadj(Double amtGrossTradingUnadj) {
    this.amtGrossTradingUnadj = amtGrossTradingUnadj;
  }


  public Dividend amtNetTradingAdj(Double amtNetTradingAdj) {
    this.amtNetTradingAdj = amtNetTradingAdj;
    return this;
  }

   /**
   * Net Amount - Trading Currency, Split Adjusted
   * @return amtNetTradingAdj
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Net Amount - Trading Currency, Split Adjusted")
  @JsonProperty(JSON_PROPERTY_AMT_NET_TRADING_ADJ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getAmtNetTradingAdj() {
    return amtNetTradingAdj;
  }


  @JsonProperty(JSON_PROPERTY_AMT_NET_TRADING_ADJ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmtNetTradingAdj(Double amtNetTradingAdj) {
    this.amtNetTradingAdj = amtNetTradingAdj;
  }


  public Dividend amtNetTradingUnadj(Double amtNetTradingUnadj) {
    this.amtNetTradingUnadj = amtNetTradingUnadj;
    return this;
  }

   /**
   * Net Amount - Trading Currency, Unadjusted
   * @return amtNetTradingUnadj
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Net Amount - Trading Currency, Unadjusted")
  @JsonProperty(JSON_PROPERTY_AMT_NET_TRADING_UNADJ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getAmtNetTradingUnadj() {
    return amtNetTradingUnadj;
  }


  @JsonProperty(JSON_PROPERTY_AMT_NET_TRADING_UNADJ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmtNetTradingUnadj(Double amtNetTradingUnadj) {
    this.amtNetTradingUnadj = amtNetTradingUnadj;
  }


  public Dividend declaredCurrency(String declaredCurrency) {
    this.declaredCurrency = declaredCurrency;
    return this;
  }

   /**
   * Currency code for declared dividend.
   * @return declaredCurrency
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "USD", value = "Currency code for declared dividend.")
  @JsonProperty(JSON_PROPERTY_DECLARED_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDeclaredCurrency() {
    return declaredCurrency;
  }


  @JsonProperty(JSON_PROPERTY_DECLARED_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeclaredCurrency(String declaredCurrency) {
    this.declaredCurrency = declaredCurrency;
  }


  public Dividend amtDefDecAdj(Double amtDefDecAdj) {
    this.amtDefDecAdj = amtDefDecAdj;
    return this;
  }

   /**
   * Default Amount - Declared Currency, Split Adjusted
   * @return amtDefDecAdj
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Default Amount - Declared Currency, Split Adjusted")
  @JsonProperty(JSON_PROPERTY_AMT_DEF_DEC_ADJ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getAmtDefDecAdj() {
    return amtDefDecAdj;
  }


  @JsonProperty(JSON_PROPERTY_AMT_DEF_DEC_ADJ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmtDefDecAdj(Double amtDefDecAdj) {
    this.amtDefDecAdj = amtDefDecAdj;
  }


  public Dividend amtDefDecUnadj(Double amtDefDecUnadj) {
    this.amtDefDecUnadj = amtDefDecUnadj;
    return this;
  }

   /**
   * Default Amount - Declared Currency, Unadjusted
   * @return amtDefDecUnadj
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Default Amount - Declared Currency, Unadjusted")
  @JsonProperty(JSON_PROPERTY_AMT_DEF_DEC_UNADJ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getAmtDefDecUnadj() {
    return amtDefDecUnadj;
  }


  @JsonProperty(JSON_PROPERTY_AMT_DEF_DEC_UNADJ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmtDefDecUnadj(Double amtDefDecUnadj) {
    this.amtDefDecUnadj = amtDefDecUnadj;
  }


  public Dividend amtGrossDecAdj(Double amtGrossDecAdj) {
    this.amtGrossDecAdj = amtGrossDecAdj;
    return this;
  }

   /**
   * Gross Amount - Declared Currency, Split Adjusted 
   * @return amtGrossDecAdj
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Gross Amount - Declared Currency, Split Adjusted ")
  @JsonProperty(JSON_PROPERTY_AMT_GROSS_DEC_ADJ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getAmtGrossDecAdj() {
    return amtGrossDecAdj;
  }


  @JsonProperty(JSON_PROPERTY_AMT_GROSS_DEC_ADJ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmtGrossDecAdj(Double amtGrossDecAdj) {
    this.amtGrossDecAdj = amtGrossDecAdj;
  }


  public Dividend amtGrossDecUnadj(Double amtGrossDecUnadj) {
    this.amtGrossDecUnadj = amtGrossDecUnadj;
    return this;
  }

   /**
   * Gross Amount - Declared Currency, Unadjusted 
   * @return amtGrossDecUnadj
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Gross Amount - Declared Currency, Unadjusted ")
  @JsonProperty(JSON_PROPERTY_AMT_GROSS_DEC_UNADJ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getAmtGrossDecUnadj() {
    return amtGrossDecUnadj;
  }


  @JsonProperty(JSON_PROPERTY_AMT_GROSS_DEC_UNADJ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmtGrossDecUnadj(Double amtGrossDecUnadj) {
    this.amtGrossDecUnadj = amtGrossDecUnadj;
  }


  public Dividend amtNetDecAdj(Double amtNetDecAdj) {
    this.amtNetDecAdj = amtNetDecAdj;
    return this;
  }

   /**
   * Net Amount - Declared Currency, Split Adjusted 
   * @return amtNetDecAdj
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Net Amount - Declared Currency, Split Adjusted ")
  @JsonProperty(JSON_PROPERTY_AMT_NET_DEC_ADJ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getAmtNetDecAdj() {
    return amtNetDecAdj;
  }


  @JsonProperty(JSON_PROPERTY_AMT_NET_DEC_ADJ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmtNetDecAdj(Double amtNetDecAdj) {
    this.amtNetDecAdj = amtNetDecAdj;
  }


  public Dividend amtNetDecUnadj(Double amtNetDecUnadj) {
    this.amtNetDecUnadj = amtNetDecUnadj;
    return this;
  }

   /**
   * Net Amount - Declared Currency, Unadjusted 
   * @return amtNetDecUnadj
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Net Amount - Declared Currency, Unadjusted ")
  @JsonProperty(JSON_PROPERTY_AMT_NET_DEC_UNADJ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getAmtNetDecUnadj() {
    return amtNetDecUnadj;
  }


  @JsonProperty(JSON_PROPERTY_AMT_NET_DEC_UNADJ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmtNetDecUnadj(Double amtNetDecUnadj) {
    this.amtNetDecUnadj = amtNetDecUnadj;
  }


  public Dividend dividendStatus(Integer dividendStatus) {
    this.dividendStatus = dividendStatus;
    return this;
  }

   /**
   * Dividend Status Flag - 1&#x3D;Yes, 0&#x3D;No
   * @return dividendStatus
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "0", value = "Dividend Status Flag - 1=Yes, 0=No")
  @JsonProperty(JSON_PROPERTY_DIVIDEND_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDividendStatus() {
    return dividendStatus;
  }


  @JsonProperty(JSON_PROPERTY_DIVIDEND_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDividendStatus(Integer dividendStatus) {
    this.dividendStatus = dividendStatus;
  }


  public Dividend dividendActiveFlag(Integer dividendActiveFlag) {
    this.dividendActiveFlag = dividendActiveFlag;
    return this;
  }

   /**
   * Dividend active Flag - 1&#x3D;Yes, 0&#x3D;No
   * @return dividendActiveFlag
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "1", value = "Dividend active Flag - 1=Yes, 0=No")
  @JsonProperty(JSON_PROPERTY_DIVIDEND_ACTIVE_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDividendActiveFlag() {
    return dividendActiveFlag;
  }


  @JsonProperty(JSON_PROPERTY_DIVIDEND_ACTIVE_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDividendActiveFlag(Integer dividendActiveFlag) {
    this.dividendActiveFlag = dividendActiveFlag;
  }


  public Dividend dividendsSpecFlag(Integer dividendsSpecFlag) {
    this.dividendsSpecFlag = dividendsSpecFlag;
    return this;
  }

   /**
   * Special Dividend Flag - 1&#x3D;Yes, 0&#x3D;No
   * @return dividendsSpecFlag
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "0", value = "Special Dividend Flag - 1=Yes, 0=No")
  @JsonProperty(JSON_PROPERTY_DIVIDENDS_SPEC_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDividendsSpecFlag() {
    return dividendsSpecFlag;
  }


  @JsonProperty(JSON_PROPERTY_DIVIDENDS_SPEC_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDividendsSpecFlag(Integer dividendsSpecFlag) {
    this.dividendsSpecFlag = dividendsSpecFlag;
  }


  public Dividend frankDefTradingAdj(Double frankDefTradingAdj) {
    this.frankDefTradingAdj = frankDefTradingAdj;
    return this;
  }

   /**
   * Default Frank - Trading Currency, Split Adjusted
   * @return frankDefTradingAdj
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Default Frank - Trading Currency, Split Adjusted")
  @JsonProperty(JSON_PROPERTY_FRANK_DEF_TRADING_ADJ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getFrankDefTradingAdj() {
    return frankDefTradingAdj;
  }


  @JsonProperty(JSON_PROPERTY_FRANK_DEF_TRADING_ADJ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFrankDefTradingAdj(Double frankDefTradingAdj) {
    this.frankDefTradingAdj = frankDefTradingAdj;
  }


  public Dividend frankDefTradingUnadj(Double frankDefTradingUnadj) {
    this.frankDefTradingUnadj = frankDefTradingUnadj;
    return this;
  }

   /**
   * Default Frank - Trading Currency, Unadjusted
   * @return frankDefTradingUnadj
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Default Frank - Trading Currency, Unadjusted")
  @JsonProperty(JSON_PROPERTY_FRANK_DEF_TRADING_UNADJ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getFrankDefTradingUnadj() {
    return frankDefTradingUnadj;
  }


  @JsonProperty(JSON_PROPERTY_FRANK_DEF_TRADING_UNADJ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFrankDefTradingUnadj(Double frankDefTradingUnadj) {
    this.frankDefTradingUnadj = frankDefTradingUnadj;
  }


  public Dividend frankDefDecAdj(Double frankDefDecAdj) {
    this.frankDefDecAdj = frankDefDecAdj;
    return this;
  }

   /**
   * Default Frank - Declared Currency, Split Adjusted
   * @return frankDefDecAdj
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Default Frank - Declared Currency, Split Adjusted")
  @JsonProperty(JSON_PROPERTY_FRANK_DEF_DEC_ADJ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getFrankDefDecAdj() {
    return frankDefDecAdj;
  }


  @JsonProperty(JSON_PROPERTY_FRANK_DEF_DEC_ADJ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFrankDefDecAdj(Double frankDefDecAdj) {
    this.frankDefDecAdj = frankDefDecAdj;
  }


  public Dividend frankDefDecUnadj(Double frankDefDecUnadj) {
    this.frankDefDecUnadj = frankDefDecUnadj;
    return this;
  }

   /**
   * Default Frank - Declared Currency, Unadjusted
   * @return frankDefDecUnadj
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Default Frank - Declared Currency, Unadjusted")
  @JsonProperty(JSON_PROPERTY_FRANK_DEF_DEC_UNADJ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getFrankDefDecUnadj() {
    return frankDefDecUnadj;
  }


  @JsonProperty(JSON_PROPERTY_FRANK_DEF_DEC_UNADJ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFrankDefDecUnadj(Double frankDefDecUnadj) {
    this.frankDefDecUnadj = frankDefDecUnadj;
  }


  public Dividend frankPct(Double frankPct) {
    this.frankPct = frankPct;
    return this;
  }

   /**
   * Default Amount - Declared Currency, Unadjusted
   * @return frankPct
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Default Amount - Declared Currency, Unadjusted")
  @JsonProperty(JSON_PROPERTY_FRANK_PCT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getFrankPct() {
    return frankPct;
  }


  @JsonProperty(JSON_PROPERTY_FRANK_PCT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFrankPct(Double frankPct) {
    this.frankPct = frankPct;
  }


  public Dividend taxRate(Double taxRate) {
    this.taxRate = taxRate;
    return this;
  }

   /**
   * Tax Rate for on gross dividend for net dividend.
   * @return taxRate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Tax Rate for on gross dividend for net dividend.")
  @JsonProperty(JSON_PROPERTY_TAX_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getTaxRate() {
    return taxRate;
  }


  @JsonProperty(JSON_PROPERTY_TAX_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaxRate(Double taxRate) {
    this.taxRate = taxRate;
  }


  public Dividend requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

   /**
   * Identifier that was used for the request.
   * @return requestId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "AAPL-US", value = "Identifier that was used for the request.")
  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRequestId() {
    return requestId;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }


  /**
   * Return true if this Dividend object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Dividend dividend = (Dividend) o;
    return Objects.equals(this.fsymId, dividend.fsymId) &&
        Objects.equals(this.eventId, dividend.eventId) &&
        Objects.equals(this.eventTypeCode, dividend.eventTypeCode) &&
        Objects.equals(this.eventTypeDesc, dividend.eventTypeDesc) &&
        Objects.equals(this.divTypeCode, dividend.divTypeCode) &&
        Objects.equals(this.announcementDate, dividend.announcementDate) &&
        Objects.equals(this.recordDate, dividend.recordDate) &&
        Objects.equals(this.payDate, dividend.payDate) &&
        Objects.equals(this.effectiveDate, dividend.effectiveDate) &&
        Objects.equals(this.currency, dividend.currency) &&
        Objects.equals(this.amtDefNetGrossIndicator, dividend.amtDefNetGrossIndicator) &&
        Objects.equals(this.amtDefTradingAdj, dividend.amtDefTradingAdj) &&
        Objects.equals(this.amtDefTradingUnadj, dividend.amtDefTradingUnadj) &&
        Objects.equals(this.amtGrossTradingAdj, dividend.amtGrossTradingAdj) &&
        Objects.equals(this.amtGrossTradingUnadj, dividend.amtGrossTradingUnadj) &&
        Objects.equals(this.amtNetTradingAdj, dividend.amtNetTradingAdj) &&
        Objects.equals(this.amtNetTradingUnadj, dividend.amtNetTradingUnadj) &&
        Objects.equals(this.declaredCurrency, dividend.declaredCurrency) &&
        Objects.equals(this.amtDefDecAdj, dividend.amtDefDecAdj) &&
        Objects.equals(this.amtDefDecUnadj, dividend.amtDefDecUnadj) &&
        Objects.equals(this.amtGrossDecAdj, dividend.amtGrossDecAdj) &&
        Objects.equals(this.amtGrossDecUnadj, dividend.amtGrossDecUnadj) &&
        Objects.equals(this.amtNetDecAdj, dividend.amtNetDecAdj) &&
        Objects.equals(this.amtNetDecUnadj, dividend.amtNetDecUnadj) &&
        Objects.equals(this.dividendStatus, dividend.dividendStatus) &&
        Objects.equals(this.dividendActiveFlag, dividend.dividendActiveFlag) &&
        Objects.equals(this.dividendsSpecFlag, dividend.dividendsSpecFlag) &&
        Objects.equals(this.frankDefTradingAdj, dividend.frankDefTradingAdj) &&
        Objects.equals(this.frankDefTradingUnadj, dividend.frankDefTradingUnadj) &&
        Objects.equals(this.frankDefDecAdj, dividend.frankDefDecAdj) &&
        Objects.equals(this.frankDefDecUnadj, dividend.frankDefDecUnadj) &&
        Objects.equals(this.frankPct, dividend.frankPct) &&
        Objects.equals(this.taxRate, dividend.taxRate) &&
        Objects.equals(this.requestId, dividend.requestId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fsymId, eventId, eventTypeCode, eventTypeDesc, divTypeCode, announcementDate, recordDate, payDate, effectiveDate, currency, amtDefNetGrossIndicator, amtDefTradingAdj, amtDefTradingUnadj, amtGrossTradingAdj, amtGrossTradingUnadj, amtNetTradingAdj, amtNetTradingUnadj, declaredCurrency, amtDefDecAdj, amtDefDecUnadj, amtGrossDecAdj, amtGrossDecUnadj, amtNetDecAdj, amtNetDecUnadj, dividendStatus, dividendActiveFlag, dividendsSpecFlag, frankDefTradingAdj, frankDefTradingUnadj, frankDefDecAdj, frankDefDecUnadj, frankPct, taxRate, requestId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Dividend {\n");
    sb.append("    fsymId: ").append(toIndentedString(fsymId)).append("\n");
    sb.append("    eventId: ").append(toIndentedString(eventId)).append("\n");
    sb.append("    eventTypeCode: ").append(toIndentedString(eventTypeCode)).append("\n");
    sb.append("    eventTypeDesc: ").append(toIndentedString(eventTypeDesc)).append("\n");
    sb.append("    divTypeCode: ").append(toIndentedString(divTypeCode)).append("\n");
    sb.append("    announcementDate: ").append(toIndentedString(announcementDate)).append("\n");
    sb.append("    recordDate: ").append(toIndentedString(recordDate)).append("\n");
    sb.append("    payDate: ").append(toIndentedString(payDate)).append("\n");
    sb.append("    effectiveDate: ").append(toIndentedString(effectiveDate)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    amtDefNetGrossIndicator: ").append(toIndentedString(amtDefNetGrossIndicator)).append("\n");
    sb.append("    amtDefTradingAdj: ").append(toIndentedString(amtDefTradingAdj)).append("\n");
    sb.append("    amtDefTradingUnadj: ").append(toIndentedString(amtDefTradingUnadj)).append("\n");
    sb.append("    amtGrossTradingAdj: ").append(toIndentedString(amtGrossTradingAdj)).append("\n");
    sb.append("    amtGrossTradingUnadj: ").append(toIndentedString(amtGrossTradingUnadj)).append("\n");
    sb.append("    amtNetTradingAdj: ").append(toIndentedString(amtNetTradingAdj)).append("\n");
    sb.append("    amtNetTradingUnadj: ").append(toIndentedString(amtNetTradingUnadj)).append("\n");
    sb.append("    declaredCurrency: ").append(toIndentedString(declaredCurrency)).append("\n");
    sb.append("    amtDefDecAdj: ").append(toIndentedString(amtDefDecAdj)).append("\n");
    sb.append("    amtDefDecUnadj: ").append(toIndentedString(amtDefDecUnadj)).append("\n");
    sb.append("    amtGrossDecAdj: ").append(toIndentedString(amtGrossDecAdj)).append("\n");
    sb.append("    amtGrossDecUnadj: ").append(toIndentedString(amtGrossDecUnadj)).append("\n");
    sb.append("    amtNetDecAdj: ").append(toIndentedString(amtNetDecAdj)).append("\n");
    sb.append("    amtNetDecUnadj: ").append(toIndentedString(amtNetDecUnadj)).append("\n");
    sb.append("    dividendStatus: ").append(toIndentedString(dividendStatus)).append("\n");
    sb.append("    dividendActiveFlag: ").append(toIndentedString(dividendActiveFlag)).append("\n");
    sb.append("    dividendsSpecFlag: ").append(toIndentedString(dividendsSpecFlag)).append("\n");
    sb.append("    frankDefTradingAdj: ").append(toIndentedString(frankDefTradingAdj)).append("\n");
    sb.append("    frankDefTradingUnadj: ").append(toIndentedString(frankDefTradingUnadj)).append("\n");
    sb.append("    frankDefDecAdj: ").append(toIndentedString(frankDefDecAdj)).append("\n");
    sb.append("    frankDefDecUnadj: ").append(toIndentedString(frankDefDecUnadj)).append("\n");
    sb.append("    frankPct: ").append(toIndentedString(frankPct)).append("\n");
    sb.append("    taxRate: ").append(toIndentedString(taxRate)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

