/*
 * FactSet Global Prices API
 * The FactSet Global Prices API provides end of day market pricing content using cloud and microservices technology, encompassing both pricing as well as corporate actions and events data.</p> 
 *
 * The version of the OpenAPI document: 1.8.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetGlobalPrices.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetGlobalPrices.JSON;


/**
 * AnnualizedDividendsObject
 */
@JsonPropertyOrder({
  AnnualizedDividendsObject.JSON_PROPERTY_FSYM_ID,
  AnnualizedDividendsObject.JSON_PROPERTY_EVENT_ID,
  AnnualizedDividendsObject.JSON_PROPERTY_EFFECTIVE_DATE,
  AnnualizedDividendsObject.JSON_PROPERTY_IAD_DEF_TRADING_ADJ,
  AnnualizedDividendsObject.JSON_PROPERTY_CURRENCY,
  AnnualizedDividendsObject.JSON_PROPERTY_REQUEST_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class AnnualizedDividendsObject implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_FSYM_ID = "fsymId";
  private JsonNullable<String> fsymId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EVENT_ID = "eventId";
  private JsonNullable<String> eventId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EFFECTIVE_DATE = "effectiveDate";
  private JsonNullable<String> effectiveDate = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IAD_DEF_TRADING_ADJ = "iadDefTradingAdj";
  private JsonNullable<Float> iadDefTradingAdj = JsonNullable.<Float>undefined();

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private JsonNullable<String> currency = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_REQUEST_ID = "requestId";
  private String requestId;

  public AnnualizedDividendsObject() { 
  }

  public AnnualizedDividendsObject fsymId(String fsymId) {
    this.fsymId = JsonNullable.<String>of(fsymId);
    return this;
  }

   /**
   * Factset Regional Security Identifier. Six alpha-numeric characters, excluding vowels, with an -R suffix (XXXXXX-R). Identifies the security&#39;s best regional security data series per currency. For equities, all primary listings per region and currency are allocated a regional-level permanent identifier. The regional-level permanent identifier will be available once a SEDOL representing the region/currency has been allocated and the identifiers are on FactSet.
   * @return fsymId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "SJY281-R", value = "Factset Regional Security Identifier. Six alpha-numeric characters, excluding vowels, with an -R suffix (XXXXXX-R). Identifies the security's best regional security data series per currency. For equities, all primary listings per region and currency are allocated a regional-level permanent identifier. The regional-level permanent identifier will be available once a SEDOL representing the region/currency has been allocated and the identifiers are on FactSet.")
  @JsonIgnore

  public String getFsymId() {
        return fsymId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFsymId_JsonNullable() {
    return fsymId;
  }
  
  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  public void setFsymId_JsonNullable(JsonNullable<String> fsymId) {
    this.fsymId = fsymId;
  }

  public void setFsymId(String fsymId) {
    this.fsymId = JsonNullable.<String>of(fsymId);
  }


  public AnnualizedDividendsObject eventId(String eventId) {
    this.eventId = JsonNullable.<String>of(eventId);
    return this;
  }

   /**
   * FactSet identifier that uniquely identifies the Event.
   * @return eventId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "JTHPFN-A", value = "FactSet identifier that uniquely identifies the Event.")
  @JsonIgnore

  public String getEventId() {
        return eventId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EVENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEventId_JsonNullable() {
    return eventId;
  }
  
  @JsonProperty(JSON_PROPERTY_EVENT_ID)
  public void setEventId_JsonNullable(JsonNullable<String> eventId) {
    this.eventId = eventId;
  }

  public void setEventId(String eventId) {
    this.eventId = JsonNullable.<String>of(eventId);
  }


  public AnnualizedDividendsObject effectiveDate(String effectiveDate) {
    this.effectiveDate = JsonNullable.<String>of(effectiveDate);
    return this;
  }

   /**
   * Effective Date or Ex-Date of Annualized Dividend in YYYY-MM-DD format.
   * @return effectiveDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "2022-03-11", value = "Effective Date or Ex-Date of Annualized Dividend in YYYY-MM-DD format.")
  @JsonIgnore

  public String getEffectiveDate() {
        return effectiveDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EFFECTIVE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEffectiveDate_JsonNullable() {
    return effectiveDate;
  }
  
  @JsonProperty(JSON_PROPERTY_EFFECTIVE_DATE)
  public void setEffectiveDate_JsonNullable(JsonNullable<String> effectiveDate) {
    this.effectiveDate = effectiveDate;
  }

  public void setEffectiveDate(String effectiveDate) {
    this.effectiveDate = JsonNullable.<String>of(effectiveDate);
  }


  public AnnualizedDividendsObject iadDefTradingAdj(Float iadDefTradingAdj) {
    this.iadDefTradingAdj = JsonNullable.<Float>of(iadDefTradingAdj);
    return this;
  }

   /**
   * Annualized Dividend value in the trading currency. The value is adjusted for splits
   * @return iadDefTradingAdj
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "0.7584434", value = "Annualized Dividend value in the trading currency. The value is adjusted for splits")
  @JsonIgnore

  public Float getIadDefTradingAdj() {
        return iadDefTradingAdj.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IAD_DEF_TRADING_ADJ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Float> getIadDefTradingAdj_JsonNullable() {
    return iadDefTradingAdj;
  }
  
  @JsonProperty(JSON_PROPERTY_IAD_DEF_TRADING_ADJ)
  public void setIadDefTradingAdj_JsonNullable(JsonNullable<Float> iadDefTradingAdj) {
    this.iadDefTradingAdj = iadDefTradingAdj;
  }

  public void setIadDefTradingAdj(Float iadDefTradingAdj) {
    this.iadDefTradingAdj = JsonNullable.<Float>of(iadDefTradingAdj);
  }


  public AnnualizedDividendsObject currency(String currency) {
    this.currency = JsonNullable.<String>of(currency);
    return this;
  }

   /**
   * Currency ISO code associated with the annualized dividends.For more details, visit [Online Assistant Page #1470](https://oa.apps.factset.com/pages/1470).
   * @return currency
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "USD", value = "Currency ISO code associated with the annualized dividends.For more details, visit [Online Assistant Page #1470](https://oa.apps.factset.com/pages/1470).")
  @JsonIgnore

  public String getCurrency() {
        return currency.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCurrency_JsonNullable() {
    return currency;
  }
  
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  public void setCurrency_JsonNullable(JsonNullable<String> currency) {
    this.currency = currency;
  }

  public void setCurrency(String currency) {
    this.currency = JsonNullable.<String>of(currency);
  }


  public AnnualizedDividendsObject requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

   /**
   * Identifier that was used for the request.
   * @return requestId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "AAPL-US", value = "Identifier that was used for the request.")
  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRequestId() {
    return requestId;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }


  /**
   * Return true if this annualizedDividendsObject object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AnnualizedDividendsObject annualizedDividendsObject = (AnnualizedDividendsObject) o;
    return equalsNullable(this.fsymId, annualizedDividendsObject.fsymId) &&
        equalsNullable(this.eventId, annualizedDividendsObject.eventId) &&
        equalsNullable(this.effectiveDate, annualizedDividendsObject.effectiveDate) &&
        equalsNullable(this.iadDefTradingAdj, annualizedDividendsObject.iadDefTradingAdj) &&
        equalsNullable(this.currency, annualizedDividendsObject.currency) &&
        Objects.equals(this.requestId, annualizedDividendsObject.requestId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(fsymId), hashCodeNullable(eventId), hashCodeNullable(effectiveDate), hashCodeNullable(iadDefTradingAdj), hashCodeNullable(currency), requestId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AnnualizedDividendsObject {\n");
    sb.append("    fsymId: ").append(toIndentedString(fsymId)).append("\n");
    sb.append("    eventId: ").append(toIndentedString(eventId)).append("\n");
    sb.append("    effectiveDate: ").append(toIndentedString(effectiveDate)).append("\n");
    sb.append("    iadDefTradingAdj: ").append(toIndentedString(iadDefTradingAdj)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

