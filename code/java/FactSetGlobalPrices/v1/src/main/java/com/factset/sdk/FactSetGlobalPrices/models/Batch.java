/*
 * FactSet Global Prices API
 * The FactSet Global Prices API provides end of day market pricing content using cloud and microservices technology, encompassing both pricing as well as corporate actions and events data.</p> 
 *
 * The version of the OpenAPI document: 1.8.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetGlobalPrices.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import io.swagger.annotations.ApiModel;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetGlobalPrices.JSON;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Enables asynchronous \&quot;batch\&quot; processing for long-running requests, supporting durations up to 20 minutes. When batch&#x3D;Y is specified, the service responds with HTTP Status Code 202 (Accepted) indicating that the request has been received and is being processed. Use the batch status endpoint to check job progress, and retrieve results using the batch-result endpoint once processing is complete. Request Limits:   - Non-batch (real-time) requests:       * Single day: up to 500 IDs per request       * Multi-day: up to 50 IDs per request    - Batch requests:       * Single day: up to 2000 IDs per request       * Multi-day: up to 50 IDs per request  When using batch mode, the number of unique currencies present in the requested IDs is limited to 50 per request. It is recommended to use the POST method for large ID lists, as GET requests are still subject to URL query string length limits. 
 */
public enum Batch {
  
  Y("Y"),
  
  N("N");

  private String value;

  Batch(String value) {
    this.value = value;
  }

  @JsonValue
  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static Batch fromValue(String value) {
    for (Batch b : Batch.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }
}

