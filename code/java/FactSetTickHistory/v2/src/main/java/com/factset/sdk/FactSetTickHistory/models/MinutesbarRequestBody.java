/*
 * Tick History
 * Tick History provides dynamic access to historical tick data for a specific security for specific dates or date range.
 *
 * The version of the OpenAPI document: 2.4.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetTickHistory.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.FactSetTickHistory.models.DateTimePeriodMin;
import com.factset.sdk.FactSetTickHistory.models.Granularity;
import com.factset.sdk.FactSetTickHistory.models.Type;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetTickHistory.JSON;


/**
 * Level1 Minute bars request body elements
 */
@ApiModel(description = "Level1 Minute bars request body elements")
@JsonPropertyOrder({
  MinutesbarRequestBody.JSON_PROPERTY_TICKERS,
  MinutesbarRequestBody.JSON_PROPERTY_FACTSET_EXCHANGE_CODE,
  MinutesbarRequestBody.JSON_PROPERTY_DATE_TIME_RANGE,
  MinutesbarRequestBody.JSON_PROPERTY_GRANULARITY,
  MinutesbarRequestBody.JSON_PROPERTY_TYPE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class MinutesbarRequestBody implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_TICKERS = "tickers";
  private java.util.List<String> tickers = new java.util.ArrayList<>();

  public static final String JSON_PROPERTY_FACTSET_EXCHANGE_CODE = "factsetExchangeCode";
  private String factsetExchangeCode;

  public static final String JSON_PROPERTY_DATE_TIME_RANGE = "dateTimeRange";
  private DateTimePeriodMin dateTimeRange;

  public static final String JSON_PROPERTY_GRANULARITY = "granularity";
  private Granularity granularity;

  public static final String JSON_PROPERTY_TYPE = "type";
  private Type type;

  public MinutesbarRequestBody() { 
  }

  @JsonCreator
  public MinutesbarRequestBody(
    @JsonProperty(value=JSON_PROPERTY_TICKERS, required=true) java.util.List<String> tickers, 
    @JsonProperty(value=JSON_PROPERTY_FACTSET_EXCHANGE_CODE, required=true) String factsetExchangeCode, 
    @JsonProperty(value=JSON_PROPERTY_DATE_TIME_RANGE, required=true) DateTimePeriodMin dateTimeRange, 
    @JsonProperty(value=JSON_PROPERTY_GRANULARITY, required=true) Granularity granularity, 
    @JsonProperty(value=JSON_PROPERTY_TYPE, required=true) Type type
  ) {
    this();
    this.tickers = tickers;
    this.factsetExchangeCode = factsetExchangeCode;
    this.dateTimeRange = dateTimeRange;
    this.granularity = granularity;
    this.type = type;
  }

  public MinutesbarRequestBody tickers(java.util.List<String> tickers) {
    this.tickers = tickers;
    return this;
  }

  public MinutesbarRequestBody addTickersItem(String tickersItem) {
    this.tickers.add(tickersItem);
    return this;
  }

   /**
   * The requested list of one or more tickers. &lt;p&gt; NOTE: Maximum 500 tickers per request.&lt;/p&gt;.   
   * @return tickers
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "[\"FDS\"]", required = true, value = "The requested list of one or more tickers. <p> NOTE: Maximum 500 tickers per request.</p>.   ")
  @JsonProperty(JSON_PROPERTY_TICKERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public java.util.List<String> getTickers() {
    return tickers;
  }


  @JsonProperty(JSON_PROPERTY_TICKERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTickers(java.util.List<String> tickers) {
    this.tickers = tickers;
  }


  public MinutesbarRequestBody factsetExchangeCode(String factsetExchangeCode) {
    this.factsetExchangeCode = factsetExchangeCode;
    return this;
  }

   /**
   * FactSet specific regional or composite exchange code and last exchange code. &lt;p&gt; NOTE:Does not support multiple factsetExchangeCodes&lt;/p&gt;. 
   * @return factsetExchangeCode
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "USA", required = true, value = "FactSet specific regional or composite exchange code and last exchange code. <p> NOTE:Does not support multiple factsetExchangeCodes</p>. ")
  @JsonProperty(JSON_PROPERTY_FACTSET_EXCHANGE_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFactsetExchangeCode() {
    return factsetExchangeCode;
  }


  @JsonProperty(JSON_PROPERTY_FACTSET_EXCHANGE_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFactsetExchangeCode(String factsetExchangeCode) {
    this.factsetExchangeCode = factsetExchangeCode;
  }


  public MinutesbarRequestBody dateTimeRange(DateTimePeriodMin dateTimeRange) {
    this.dateTimeRange = dateTimeRange;
    return this;
  }

   /**
   * Get dateTimeRange
   * @return dateTimeRange
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DATE_TIME_RANGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public DateTimePeriodMin getDateTimeRange() {
    return dateTimeRange;
  }


  @JsonProperty(JSON_PROPERTY_DATE_TIME_RANGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDateTimeRange(DateTimePeriodMin dateTimeRange) {
    this.dateTimeRange = dateTimeRange;
  }


  public MinutesbarRequestBody granularity(Granularity granularity) {
    this.granularity = granularity;
    return this;
  }

   /**
   * Get granularity
   * @return granularity
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_GRANULARITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Granularity getGranularity() {
    return granularity;
  }


  @JsonProperty(JSON_PROPERTY_GRANULARITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setGranularity(Granularity granularity) {
    this.granularity = granularity;
  }


  public MinutesbarRequestBody type(Type type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Type getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(Type type) {
    this.type = type;
  }


  /**
   * Return true if this MinutesbarRequestBody object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MinutesbarRequestBody minutesbarRequestBody = (MinutesbarRequestBody) o;
    return Objects.equals(this.tickers, minutesbarRequestBody.tickers) &&
        Objects.equals(this.factsetExchangeCode, minutesbarRequestBody.factsetExchangeCode) &&
        Objects.equals(this.dateTimeRange, minutesbarRequestBody.dateTimeRange) &&
        Objects.equals(this.granularity, minutesbarRequestBody.granularity) &&
        Objects.equals(this.type, minutesbarRequestBody.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tickers, factsetExchangeCode, dateTimeRange, granularity, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MinutesbarRequestBody {\n");
    sb.append("    tickers: ").append(toIndentedString(tickers)).append("\n");
    sb.append("    factsetExchangeCode: ").append(toIndentedString(factsetExchangeCode)).append("\n");
    sb.append("    dateTimeRange: ").append(toIndentedString(dateTimeRange)).append("\n");
    sb.append("    granularity: ").append(toIndentedString(granularity)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

