/*
 * FactSet Debt Capital Structure API
 * The FactSet Debt Capital Structure API offers insights into public and private company debt financing for 69,000+ entities globally. Analyze at the individual-instrument level through summary and detailed information of the debt structure with history available back through 2006. Instrument types covered include Revolving Credit, Term Loans, Notes, and Bonds.   **How to Programmatically Download API Specification file:**  Please use the below link to download the FactSet Debt Capital Structure API Specification file in .yaml. You must be authorized for this API to extract. This specification can then be used for Codegen to create your own SDKs. You can also access by selecting the \"Download Spec\" button to the right of the version below.  [https://api.factset.com/content/factset-dcs/v1/spec/swagger.yaml](https://api.factset.com/content/factset-dcs/v1/spec/swagger.yaml)  This API is rate-limited to 10 requests per second and 10 concurrent requests per user. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetDebtCapitalStructure.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.time.LocalDate;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetDebtCapitalStructure.JSON;


/**
 * Detail
 */
@JsonPropertyOrder({
  Detail.JSON_PROPERTY_INSTRUMENT_ID,
  Detail.JSON_PROPERTY_INSTRUMENT_TYPE,
  Detail.JSON_PROPERTY_DESCRIPTION,
  Detail.JSON_PROPERTY_SENIORITY,
  Detail.JSON_PROPERTY_AMOUNT_OUTSTANDING,
  Detail.JSON_PROPERTY_CURRENCY,
  Detail.JSON_PROPERTY_COUPON_RATE,
  Detail.JSON_PROPERTY_COUPON_TYPE,
  Detail.JSON_PROPERTY_YIELD_TO_WORST,
  Detail.JSON_PROPERTY_ISSUE_DATE,
  Detail.JSON_PROPERTY_REPORT_DATE,
  Detail.JSON_PROPERTY_MATURITY_DATE,
  Detail.JSON_PROPERTY_REQUEST_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class Detail implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_INSTRUMENT_ID = "instrumentId";
  private JsonNullable<String> instrumentId = JsonNullable.<String>undefined();

  /**
   * Type of debt instrument.
   */
  public enum InstrumentTypeEnum {
    REVOLVING_CREDIT("Revolving Credit"),
    
    TERM_LOANS("Term Loans"),
    
    ST_DEBT_TOTAL("ST Debt Total"),
    
    NOTES_BONDS("Notes/Bonds"),
    
    OTHER("Other");

    private String value;

    InstrumentTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static InstrumentTypeEnum fromValue(String value) {
      for (InstrumentTypeEnum b : InstrumentTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_INSTRUMENT_TYPE = "instrumentType";
  private JsonNullable<InstrumentTypeEnum> instrumentType = JsonNullable.<InstrumentTypeEnum>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private JsonNullable<String> description = JsonNullable.<String>undefined();

  /**
   * Textual description of the instrument seniority type: * **Senior Unsecured** * **Senior Secured** * **Senior Subordinated** * **Collateralized** * **Subordinated** * **Junior** * **Junior Subordinated** * **Senior Conv.** &#x3D; Senior Convertible * **Senior Sub. Conv.** &#x3D; Senior Subordinated Convertible * **Sub. Conv.** &#x3D; Subordinated Convertible * **Junior Conv.** &#x3D; Junior Convertible * **Junior Sub. Conv.** &#x3D; Junior Subordinated Convertible * **Preferred** * **Other** 
   */
  public enum SeniorityEnum {
    SENIOR_UNSECURED("Senior Unsecured"),
    
    SENIOR_SECURED("Senior Secured"),
    
    SENIOR_SUBORDINATED("Senior Subordinated"),
    
    COLLATERALIZED("Collateralized"),
    
    SUBORDINATED("Subordinated"),
    
    JUNIOR("Junior"),
    
    JUNION_SUBORDINATED("Junion Subordinated"),
    
    SENIOR_CONV_("Senior Conv."),
    
    SENIOR_SUB_CONV_("Senior Sub. Conv."),
    
    SUB_CONV_("Sub. Conv."),
    
    JUNIOR_CONV_("Junior Conv."),
    
    JUNION_SUB_CONV_("Junion Sub. Conv."),
    
    PREFERRED("Preferred"),
    
    OTHER("Other");

    private String value;

    SeniorityEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SeniorityEnum fromValue(String value) {
      for (SeniorityEnum b : SeniorityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_SENIORITY = "seniority";
  private JsonNullable<SeniorityEnum> seniority = JsonNullable.<SeniorityEnum>undefined();

  public static final String JSON_PROPERTY_AMOUNT_OUTSTANDING = "amountOutstanding";
  private JsonNullable<BigDecimal> amountOutstanding = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private JsonNullable<String> currency = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_COUPON_RATE = "couponRate";
  private JsonNullable<BigDecimal> couponRate = JsonNullable.<BigDecimal>undefined();

  /**
   * Type of debt instrument.
   */
  public enum CouponTypeEnum {
    VARIABLE("Variable"),
    
    FIXED("Fixed"),
    
    COND("Cond"),
    
    ZERO("Zero");

    private String value;

    CouponTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CouponTypeEnum fromValue(String value) {
      for (CouponTypeEnum b : CouponTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_COUPON_TYPE = "couponType";
  private JsonNullable<CouponTypeEnum> couponType = JsonNullable.<CouponTypeEnum>undefined();

  public static final String JSON_PROPERTY_YIELD_TO_WORST = "yieldToWorst";
  private JsonNullable<BigDecimal> yieldToWorst = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_ISSUE_DATE = "issueDate";
  private JsonNullable<LocalDate> issueDate = JsonNullable.<LocalDate>undefined();

  public static final String JSON_PROPERTY_REPORT_DATE = "reportDate";
  private JsonNullable<LocalDate> reportDate = JsonNullable.<LocalDate>undefined();

  public static final String JSON_PROPERTY_MATURITY_DATE = "maturityDate";
  private JsonNullable<LocalDate> maturityDate = JsonNullable.<LocalDate>undefined();

  public static final String JSON_PROPERTY_REQUEST_ID = "requestId";
  private String requestId;

  public Detail() { 
  }

  public Detail instrumentId(String instrumentId) {
    this.instrumentId = JsonNullable.<String>of(instrumentId);
    return this;
  }

   /**
   * Identifier for the debt instrument.
   * @return instrumentId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "FDS1R56X6", value = "Identifier for the debt instrument.")
  @JsonIgnore

  public String getInstrumentId() {
        return instrumentId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INSTRUMENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getInstrumentId_JsonNullable() {
    return instrumentId;
  }
  
  @JsonProperty(JSON_PROPERTY_INSTRUMENT_ID)
  public void setInstrumentId_JsonNullable(JsonNullable<String> instrumentId) {
    this.instrumentId = instrumentId;
  }

  public void setInstrumentId(String instrumentId) {
    this.instrumentId = JsonNullable.<String>of(instrumentId);
  }


  public Detail instrumentType(InstrumentTypeEnum instrumentType) {
    this.instrumentType = JsonNullable.<InstrumentTypeEnum>of(instrumentType);
    return this;
  }

   /**
   * Type of debt instrument.
   * @return instrumentType
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Revolving Credit", value = "Type of debt instrument.")
  @JsonIgnore

  public InstrumentTypeEnum getInstrumentType() {
        return instrumentType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INSTRUMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<InstrumentTypeEnum> getInstrumentType_JsonNullable() {
    return instrumentType;
  }
  
  @JsonProperty(JSON_PROPERTY_INSTRUMENT_TYPE)
  public void setInstrumentType_JsonNullable(JsonNullable<InstrumentTypeEnum> instrumentType) {
    this.instrumentType = instrumentType;
  }

  public void setInstrumentType(InstrumentTypeEnum instrumentType) {
    this.instrumentType = JsonNullable.<InstrumentTypeEnum>of(instrumentType);
  }


  public Detail description(String description) {
    this.description = JsonNullable.<String>of(description);
    return this;
  }

   /**
   * Desription of the debt instrument.
   * @return description
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Unsec. Rev. Facility", value = "Desription of the debt instrument.")
  @JsonIgnore

  public String getDescription() {
        return description.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescription_JsonNullable() {
    return description;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  public void setDescription_JsonNullable(JsonNullable<String> description) {
    this.description = description;
  }

  public void setDescription(String description) {
    this.description = JsonNullable.<String>of(description);
  }


  public Detail seniority(SeniorityEnum seniority) {
    this.seniority = JsonNullable.<SeniorityEnum>of(seniority);
    return this;
  }

   /**
   * Textual description of the instrument seniority type: * **Senior Unsecured** * **Senior Secured** * **Senior Subordinated** * **Collateralized** * **Subordinated** * **Junior** * **Junior Subordinated** * **Senior Conv.** &#x3D; Senior Convertible * **Senior Sub. Conv.** &#x3D; Senior Subordinated Convertible * **Sub. Conv.** &#x3D; Subordinated Convertible * **Junior Conv.** &#x3D; Junior Convertible * **Junior Sub. Conv.** &#x3D; Junior Subordinated Convertible * **Preferred** * **Other** 
   * @return seniority
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Senior Secured", value = "Textual description of the instrument seniority type: * **Senior Unsecured** * **Senior Secured** * **Senior Subordinated** * **Collateralized** * **Subordinated** * **Junior** * **Junior Subordinated** * **Senior Conv.** = Senior Convertible * **Senior Sub. Conv.** = Senior Subordinated Convertible * **Sub. Conv.** = Subordinated Convertible * **Junior Conv.** = Junior Convertible * **Junior Sub. Conv.** = Junior Subordinated Convertible * **Preferred** * **Other** ")
  @JsonIgnore

  public SeniorityEnum getSeniority() {
        return seniority.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SENIORITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<SeniorityEnum> getSeniority_JsonNullable() {
    return seniority;
  }
  
  @JsonProperty(JSON_PROPERTY_SENIORITY)
  public void setSeniority_JsonNullable(JsonNullable<SeniorityEnum> seniority) {
    this.seniority = seniority;
  }

  public void setSeniority(SeniorityEnum seniority) {
    this.seniority = JsonNullable.<SeniorityEnum>of(seniority);
  }


  public Detail amountOutstanding(BigDecimal amountOutstanding) {
    this.amountOutstanding = JsonNullable.<BigDecimal>of(amountOutstanding);
    return this;
  }

   /**
   * Balance sheet amount outstanding.
   * @return amountOutstanding
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "250", value = "Balance sheet amount outstanding.")
  @JsonIgnore

  public BigDecimal getAmountOutstanding() {
        return amountOutstanding.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AMOUNT_OUTSTANDING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getAmountOutstanding_JsonNullable() {
    return amountOutstanding;
  }
  
  @JsonProperty(JSON_PROPERTY_AMOUNT_OUTSTANDING)
  public void setAmountOutstanding_JsonNullable(JsonNullable<BigDecimal> amountOutstanding) {
    this.amountOutstanding = amountOutstanding;
  }

  public void setAmountOutstanding(BigDecimal amountOutstanding) {
    this.amountOutstanding = JsonNullable.<BigDecimal>of(amountOutstanding);
  }


  public Detail currency(String currency) {
    this.currency = JsonNullable.<String>of(currency);
    return this;
  }

   /**
   * Currency code for the data. For a list of currency ISO codes, visit [Online Assistant Page #1470](https://oa.apps.factset.com/pages/1470).
   * @return currency
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "USD", value = "Currency code for the data. For a list of currency ISO codes, visit [Online Assistant Page #1470](https://oa.apps.factset.com/pages/1470).")
  @JsonIgnore

  public String getCurrency() {
        return currency.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCurrency_JsonNullable() {
    return currency;
  }
  
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  public void setCurrency_JsonNullable(JsonNullable<String> currency) {
    this.currency = currency;
  }

  public void setCurrency(String currency) {
    this.currency = JsonNullable.<String>of(currency);
  }


  public Detail couponRate(BigDecimal couponRate) {
    this.couponRate = JsonNullable.<BigDecimal>of(couponRate);
    return this;
  }

   /**
   * Coupon rate for the debt instrument.
   * @return couponRate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "2.9", value = "Coupon rate for the debt instrument.")
  @JsonIgnore

  public BigDecimal getCouponRate() {
        return couponRate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COUPON_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getCouponRate_JsonNullable() {
    return couponRate;
  }
  
  @JsonProperty(JSON_PROPERTY_COUPON_RATE)
  public void setCouponRate_JsonNullable(JsonNullable<BigDecimal> couponRate) {
    this.couponRate = couponRate;
  }

  public void setCouponRate(BigDecimal couponRate) {
    this.couponRate = JsonNullable.<BigDecimal>of(couponRate);
  }


  public Detail couponType(CouponTypeEnum couponType) {
    this.couponType = JsonNullable.<CouponTypeEnum>of(couponType);
    return this;
  }

   /**
   * Type of debt instrument.
   * @return couponType
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Variable", value = "Type of debt instrument.")
  @JsonIgnore

  public CouponTypeEnum getCouponType() {
        return couponType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COUPON_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<CouponTypeEnum> getCouponType_JsonNullable() {
    return couponType;
  }
  
  @JsonProperty(JSON_PROPERTY_COUPON_TYPE)
  public void setCouponType_JsonNullable(JsonNullable<CouponTypeEnum> couponType) {
    this.couponType = couponType;
  }

  public void setCouponType(CouponTypeEnum couponType) {
    this.couponType = JsonNullable.<CouponTypeEnum>of(couponType);
  }


  public Detail yieldToWorst(BigDecimal yieldToWorst) {
    this.yieldToWorst = JsonNullable.<BigDecimal>of(yieldToWorst);
    return this;
  }

   /**
   * Most recent annual yield to worst value for the debt instrument.
   * @return yieldToWorst
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "2.9", value = "Most recent annual yield to worst value for the debt instrument.")
  @JsonIgnore

  public BigDecimal getYieldToWorst() {
        return yieldToWorst.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_YIELD_TO_WORST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getYieldToWorst_JsonNullable() {
    return yieldToWorst;
  }
  
  @JsonProperty(JSON_PROPERTY_YIELD_TO_WORST)
  public void setYieldToWorst_JsonNullable(JsonNullable<BigDecimal> yieldToWorst) {
    this.yieldToWorst = yieldToWorst;
  }

  public void setYieldToWorst(BigDecimal yieldToWorst) {
    this.yieldToWorst = JsonNullable.<BigDecimal>of(yieldToWorst);
  }


  public Detail issueDate(LocalDate issueDate) {
    this.issueDate = JsonNullable.<LocalDate>of(issueDate);
    return this;
  }

   /**
   * Issue date for the debt instrument.
   * @return issueDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Thu Nov 19 00:00:00 UTC 2020", value = "Issue date for the debt instrument.")
  @JsonIgnore

  public LocalDate getIssueDate() {
        return issueDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ISSUE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LocalDate> getIssueDate_JsonNullable() {
    return issueDate;
  }
  
  @JsonProperty(JSON_PROPERTY_ISSUE_DATE)
  public void setIssueDate_JsonNullable(JsonNullable<LocalDate> issueDate) {
    this.issueDate = issueDate;
  }

  public void setIssueDate(LocalDate issueDate) {
    this.issueDate = JsonNullable.<LocalDate>of(issueDate);
  }


  public Detail reportDate(LocalDate reportDate) {
    this.reportDate = JsonNullable.<LocalDate>of(reportDate);
    return this;
  }

   /**
   * Reporting date for the debt instrument.
   * @return reportDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Thu Nov 19 00:00:00 UTC 2020", value = "Reporting date for the debt instrument.")
  @JsonIgnore

  public LocalDate getReportDate() {
        return reportDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REPORT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LocalDate> getReportDate_JsonNullable() {
    return reportDate;
  }
  
  @JsonProperty(JSON_PROPERTY_REPORT_DATE)
  public void setReportDate_JsonNullable(JsonNullable<LocalDate> reportDate) {
    this.reportDate = reportDate;
  }

  public void setReportDate(LocalDate reportDate) {
    this.reportDate = JsonNullable.<LocalDate>of(reportDate);
  }


  public Detail maturityDate(LocalDate maturityDate) {
    this.maturityDate = JsonNullable.<LocalDate>of(maturityDate);
    return this;
  }

   /**
   * Maturity date for the debt instrument.
   * @return maturityDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Thu Nov 19 00:00:00 UTC 2020", value = "Maturity date for the debt instrument.")
  @JsonIgnore

  public LocalDate getMaturityDate() {
        return maturityDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MATURITY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LocalDate> getMaturityDate_JsonNullable() {
    return maturityDate;
  }
  
  @JsonProperty(JSON_PROPERTY_MATURITY_DATE)
  public void setMaturityDate_JsonNullable(JsonNullable<LocalDate> maturityDate) {
    this.maturityDate = maturityDate;
  }

  public void setMaturityDate(LocalDate maturityDate) {
    this.maturityDate = JsonNullable.<LocalDate>of(maturityDate);
  }


  public Detail requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

   /**
   * Identifier that was used for the request.
   * @return requestId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "IBM-USA", value = "Identifier that was used for the request.")
  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRequestId() {
    return requestId;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }


  /**
   * Return true if this Detail object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Detail detail = (Detail) o;
    return equalsNullable(this.instrumentId, detail.instrumentId) &&
        equalsNullable(this.instrumentType, detail.instrumentType) &&
        equalsNullable(this.description, detail.description) &&
        equalsNullable(this.seniority, detail.seniority) &&
        equalsNullable(this.amountOutstanding, detail.amountOutstanding) &&
        equalsNullable(this.currency, detail.currency) &&
        equalsNullable(this.couponRate, detail.couponRate) &&
        equalsNullable(this.couponType, detail.couponType) &&
        equalsNullable(this.yieldToWorst, detail.yieldToWorst) &&
        equalsNullable(this.issueDate, detail.issueDate) &&
        equalsNullable(this.reportDate, detail.reportDate) &&
        equalsNullable(this.maturityDate, detail.maturityDate) &&
        Objects.equals(this.requestId, detail.requestId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(instrumentId), hashCodeNullable(instrumentType), hashCodeNullable(description), hashCodeNullable(seniority), hashCodeNullable(amountOutstanding), hashCodeNullable(currency), hashCodeNullable(couponRate), hashCodeNullable(couponType), hashCodeNullable(yieldToWorst), hashCodeNullable(issueDate), hashCodeNullable(reportDate), hashCodeNullable(maturityDate), requestId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Detail {\n");
    sb.append("    instrumentId: ").append(toIndentedString(instrumentId)).append("\n");
    sb.append("    instrumentType: ").append(toIndentedString(instrumentType)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    seniority: ").append(toIndentedString(seniority)).append("\n");
    sb.append("    amountOutstanding: ").append(toIndentedString(amountOutstanding)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    couponRate: ").append(toIndentedString(couponRate)).append("\n");
    sb.append("    couponType: ").append(toIndentedString(couponType)).append("\n");
    sb.append("    yieldToWorst: ").append(toIndentedString(yieldToWorst)).append("\n");
    sb.append("    issueDate: ").append(toIndentedString(issueDate)).append("\n");
    sb.append("    reportDate: ").append(toIndentedString(reportDate)).append("\n");
    sb.append("    maturityDate: ").append(toIndentedString(maturityDate)).append("\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

