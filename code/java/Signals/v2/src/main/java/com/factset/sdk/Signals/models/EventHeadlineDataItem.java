/*
 * Signals API
 * Collection of endpoints for providing Signal Events, Definitions and Metadata
 *
 * The version of the OpenAPI document: 2.6.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.Signals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.Signals.JSON;


/**
 * Return object that includes details about an event headline
 */
@ApiModel(description = "Return object that includes details about an event headline")
@JsonPropertyOrder({
  EventHeadlineDataItem.JSON_PROPERTY_REQUEST_ID,
  EventHeadlineDataItem.JSON_PROPERTY_COMPANY_NAME,
  EventHeadlineDataItem.JSON_PROPERTY_SIGNAL_ID,
  EventHeadlineDataItem.JSON_PROPERTY_SIGNAL_NAME,
  EventHeadlineDataItem.JSON_PROPERTY_THEME,
  EventHeadlineDataItem.JSON_PROPERTY_SOURCE,
  EventHeadlineDataItem.JSON_PROPERTY_EVENT_ID,
  EventHeadlineDataItem.JSON_PROPERTY_EVENT_DATE,
  EventHeadlineDataItem.JSON_PROPERTY_SUMMARY,
  EventHeadlineDataItem.JSON_PROPERTY_USER_RELEVANCE_SCORE,
  EventHeadlineDataItem.JSON_PROPERTY_CREATED
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class EventHeadlineDataItem implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_REQUEST_ID = "requestId";
  private String requestId;

  public static final String JSON_PROPERTY_COMPANY_NAME = "companyName";
  private String companyName;

  public static final String JSON_PROPERTY_SIGNAL_ID = "signalId";
  private String signalId;

  public static final String JSON_PROPERTY_SIGNAL_NAME = "signalName";
  private String signalName;

  public static final String JSON_PROPERTY_THEME = "theme";
  private String theme;

  public static final String JSON_PROPERTY_SOURCE = "source";
  private String source;

  public static final String JSON_PROPERTY_EVENT_ID = "eventId";
  private java.util.UUID eventId;

  public static final String JSON_PROPERTY_EVENT_DATE = "eventDate";
  private LocalDate eventDate;

  public static final String JSON_PROPERTY_SUMMARY = "summary";
  private String summary;

  public static final String JSON_PROPERTY_USER_RELEVANCE_SCORE = "userRelevanceScore";
  private Float userRelevanceScore;

  public static final String JSON_PROPERTY_CREATED = "created";
  private OffsetDateTime created;

  public EventHeadlineDataItem() { 
  }

  @JsonCreator
  public EventHeadlineDataItem(
    @JsonProperty(value=JSON_PROPERTY_REQUEST_ID, required=true) String requestId, 
    @JsonProperty(value=JSON_PROPERTY_SIGNAL_ID, required=true) String signalId, 
    @JsonProperty(value=JSON_PROPERTY_SIGNAL_NAME, required=true) String signalName, 
    @JsonProperty(value=JSON_PROPERTY_THEME, required=true) String theme, 
    @JsonProperty(value=JSON_PROPERTY_SOURCE, required=true) String source, 
    @JsonProperty(value=JSON_PROPERTY_EVENT_ID, required=true) java.util.UUID eventId, 
    @JsonProperty(value=JSON_PROPERTY_EVENT_DATE, required=true) LocalDate eventDate, 
    @JsonProperty(value=JSON_PROPERTY_SUMMARY, required=true) String summary, 
    @JsonProperty(value=JSON_PROPERTY_USER_RELEVANCE_SCORE, required=true) Float userRelevanceScore
  ) {
    this();
    this.requestId = requestId;
    this.signalId = signalId;
    this.signalName = signalName;
    this.theme = theme;
    this.source = source;
    this.eventId = eventId;
    this.eventDate = eventDate;
    this.summary = summary;
    this.userRelevanceScore = userRelevanceScore;
  }

  public EventHeadlineDataItem requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

   /**
   * The id that was requested. This can be a ticker, cusip or factset entity id.
   * @return requestId
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The id that was requested. This can be a ticker, cusip or factset entity id.")
  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRequestId() {
    return requestId;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }


  public EventHeadlineDataItem companyName(String companyName) {
    this.companyName = companyName;
    return this;
  }

   /**
   * Name of the company reported in signal. Omitted if null.
   * @return companyName
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Name of the company reported in signal. Omitted if null.")
  @JsonProperty(JSON_PROPERTY_COMPANY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCompanyName() {
    return companyName;
  }


  @JsonProperty(JSON_PROPERTY_COMPANY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCompanyName(String companyName) {
    this.companyName = companyName;
  }


  public EventHeadlineDataItem signalId(String signalId) {
    this.signalId = signalId;
    return this;
  }

   /**
   * Signal Id for this event. e.g. dilutionTrigger
   * @return signalId
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Signal Id for this event. e.g. dilutionTrigger")
  @JsonProperty(JSON_PROPERTY_SIGNAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSignalId() {
    return signalId;
  }


  @JsonProperty(JSON_PROPERTY_SIGNAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSignalId(String signalId) {
    this.signalId = signalId;
  }


  public EventHeadlineDataItem signalName(String signalName) {
    this.signalName = signalName;
    return this;
  }

   /**
   * Signal Name for this event. e.g. dilutionTrigger
   * @return signalName
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Signal Name for this event. e.g. dilutionTrigger")
  @JsonProperty(JSON_PROPERTY_SIGNAL_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSignalName() {
    return signalName;
  }


  @JsonProperty(JSON_PROPERTY_SIGNAL_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSignalName(String signalName) {
    this.signalName = signalName;
  }


  public EventHeadlineDataItem theme(String theme) {
    this.theme = theme;
    return this;
  }

   /**
   * Theme name of the signal for this event. e.g. Debt Capital Structure
   * @return theme
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Theme name of the signal for this event. e.g. Debt Capital Structure")
  @JsonProperty(JSON_PROPERTY_THEME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTheme() {
    return theme;
  }


  @JsonProperty(JSON_PROPERTY_THEME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTheme(String theme) {
    this.theme = theme;
  }


  public EventHeadlineDataItem source(String source) {
    this.source = source;
    return this;
  }

   /**
   * Primary data provider for the signal this event belongs to. e.g. FactSet, Bitvore
   * @return source
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Primary data provider for the signal this event belongs to. e.g. FactSet, Bitvore")
  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSource() {
    return source;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSource(String source) {
    this.source = source;
  }


  public EventHeadlineDataItem eventId(java.util.UUID eventId) {
    this.eventId = eventId;
    return this;
  }

   /**
   * A unique id for this event.
   * @return eventId
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "A unique id for this event.")
  @JsonProperty(JSON_PROPERTY_EVENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public java.util.UUID getEventId() {
    return eventId;
  }


  @JsonProperty(JSON_PROPERTY_EVENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEventId(java.util.UUID eventId) {
    this.eventId = eventId;
  }


  public EventHeadlineDataItem eventDate(LocalDate eventDate) {
    this.eventDate = eventDate;
    return this;
  }

   /**
   * The UTC date/time of the event in ISO 8601 format.
   * @return eventDate
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The UTC date/time of the event in ISO 8601 format.")
  @JsonProperty(JSON_PROPERTY_EVENT_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public LocalDate getEventDate() {
    return eventDate;
  }


  @JsonProperty(JSON_PROPERTY_EVENT_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEventDate(LocalDate eventDate) {
    this.eventDate = eventDate;
  }


  public EventHeadlineDataItem summary(String summary) {
    this.summary = summary;
    return this;
  }

   /**
   * One sentence summary of the event.
   * @return summary
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "One sentence summary of the event.")
  @JsonProperty(JSON_PROPERTY_SUMMARY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSummary() {
    return summary;
  }


  @JsonProperty(JSON_PROPERTY_SUMMARY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSummary(String summary) {
    this.summary = summary;
  }


  public EventHeadlineDataItem userRelevanceScore(Float userRelevanceScore) {
    this.userRelevanceScore = userRelevanceScore;
    return this;
  }

   /**
   * Relevancy score of this event for the requesting user on a scale of 0 to 1. Higher value indicates more relevancy.
   * @return userRelevanceScore
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Relevancy score of this event for the requesting user on a scale of 0 to 1. Higher value indicates more relevancy.")
  @JsonProperty(JSON_PROPERTY_USER_RELEVANCE_SCORE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Float getUserRelevanceScore() {
    return userRelevanceScore;
  }


  @JsonProperty(JSON_PROPERTY_USER_RELEVANCE_SCORE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUserRelevanceScore(Float userRelevanceScore) {
    this.userRelevanceScore = userRelevanceScore;
  }


  public EventHeadlineDataItem created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

   /**
   * Date/Time in UTC the event was first recorded in our data store.
   * @return created
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "2021-04-26T06:39:40.094Z", value = "Date/Time in UTC the event was first recorded in our data store.")
  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCreated() {
    return created;
  }


  @JsonProperty(JSON_PROPERTY_CREATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }


  /**
   * Return true if this eventHeadlineDataItem object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EventHeadlineDataItem eventHeadlineDataItem = (EventHeadlineDataItem) o;
    return Objects.equals(this.requestId, eventHeadlineDataItem.requestId) &&
        Objects.equals(this.companyName, eventHeadlineDataItem.companyName) &&
        Objects.equals(this.signalId, eventHeadlineDataItem.signalId) &&
        Objects.equals(this.signalName, eventHeadlineDataItem.signalName) &&
        Objects.equals(this.theme, eventHeadlineDataItem.theme) &&
        Objects.equals(this.source, eventHeadlineDataItem.source) &&
        Objects.equals(this.eventId, eventHeadlineDataItem.eventId) &&
        Objects.equals(this.eventDate, eventHeadlineDataItem.eventDate) &&
        Objects.equals(this.summary, eventHeadlineDataItem.summary) &&
        Objects.equals(this.userRelevanceScore, eventHeadlineDataItem.userRelevanceScore) &&
        Objects.equals(this.created, eventHeadlineDataItem.created);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestId, companyName, signalId, signalName, theme, source, eventId, eventDate, summary, userRelevanceScore, created);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EventHeadlineDataItem {\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    companyName: ").append(toIndentedString(companyName)).append("\n");
    sb.append("    signalId: ").append(toIndentedString(signalId)).append("\n");
    sb.append("    signalName: ").append(toIndentedString(signalName)).append("\n");
    sb.append("    theme: ").append(toIndentedString(theme)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    eventId: ").append(toIndentedString(eventId)).append("\n");
    sb.append("    eventDate: ").append(toIndentedString(eventDate)).append("\n");
    sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
    sb.append("    userRelevanceScore: ").append(toIndentedString(userRelevanceScore)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

