/*
 * Real-Time News API
 * Consume FactSetâ€™s StreetAccount news and 3rd party content through an API that seamlessly integrates with [quotes](https://developer.factset.com/api-catalog/real-time-quotes-api), [time series](https://developer.factset.com/api-catalog/real-time-time-series-api), [watchlists](https://developer.factset.com/api-catalog/watchlist-api-digital-portals), and other Functional APIs.  Search for news articles from various news distributors and publishers. Incorporate a multitude of search parameters such as region, category, source, article type and provider-specific meta data, to easily filter out the noise.  All search and list endpoints can be subscribed to receive streamed updates.  News providers include:  * APA * AWP  * Businesswire * Cercle Finance * Direkt News SE * Dow Jones News * dpa * dpa-AFX  * EUWAX * GlobenewsWire * Kauppalehti * MT Newswires * MoneyAM * newsaktuell * OMX * PR Newswire  * Ritzau Finans * StreetAccount News * TDN News        See the [Real-Time Quotes API](https://developer.factset.com/api-catalog/real-time-quotes-api) for access to detailed price and performance information, plus basic support for security identifier cross-reference. 
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.RealTimeNews.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.RealTimeNews.models.InlineResponse20045DataDistributor;
import com.factset.sdk.RealTimeNews.models.InlineResponse20045DataPublisher;
import com.factset.sdk.RealTimeNews.models.PostNewsArticleListByChainDataArticlesItems;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.RealTimeNews.JSON;


/**
 * News articles, their publisher, and distributor as refrenced by the article chain.
 */
@ApiModel(description = "News articles, their publisher, and distributor as refrenced by the article chain.")
@JsonPropertyOrder({
  InlineResponse20045Data.JSON_PROPERTY_DISTRIBUTOR,
  InlineResponse20045Data.JSON_PROPERTY_PUBLISHER,
  InlineResponse20045Data.JSON_PROPERTY_ARTICLES
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class InlineResponse20045Data implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_DISTRIBUTOR = "distributor";
  private InlineResponse20045DataDistributor distributor;

  public static final String JSON_PROPERTY_PUBLISHER = "publisher";
  private InlineResponse20045DataPublisher publisher;

  public static final String JSON_PROPERTY_ARTICLES = "articles";
  private java.util.List<PostNewsArticleListByChainDataArticlesItems> articles = null;

  public InlineResponse20045Data() { 
  }

  public InlineResponse20045Data distributor(InlineResponse20045DataDistributor distributor) {
    this.distributor = distributor;
    return this;
  }

   /**
   * Get distributor
   * @return distributor
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DISTRIBUTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20045DataDistributor getDistributor() {
    return distributor;
  }


  @JsonProperty(JSON_PROPERTY_DISTRIBUTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDistributor(InlineResponse20045DataDistributor distributor) {
    this.distributor = distributor;
  }


  public InlineResponse20045Data publisher(InlineResponse20045DataPublisher publisher) {
    this.publisher = publisher;
    return this;
  }

   /**
   * Get publisher
   * @return publisher
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PUBLISHER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse20045DataPublisher getPublisher() {
    return publisher;
  }


  @JsonProperty(JSON_PROPERTY_PUBLISHER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPublisher(InlineResponse20045DataPublisher publisher) {
    this.publisher = publisher;
  }


  public InlineResponse20045Data articles(java.util.List<PostNewsArticleListByChainDataArticlesItems> articles) {
    this.articles = articles;
    return this;
  }

  public InlineResponse20045Data addArticlesItem(PostNewsArticleListByChainDataArticlesItems articlesItem) {
    if (this.articles == null) {
      this.articles = new java.util.ArrayList<>();
    }
    this.articles.add(articlesItem);
    return this;
  }

   /**
   * News articles that match the filter criteria ordered by descending article time.
   * @return articles
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "News articles that match the filter criteria ordered by descending article time.")
  @JsonProperty(JSON_PROPERTY_ARTICLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<PostNewsArticleListByChainDataArticlesItems> getArticles() {
    return articles;
  }


  @JsonProperty(JSON_PROPERTY_ARTICLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setArticles(java.util.List<PostNewsArticleListByChainDataArticlesItems> articles) {
    this.articles = articles;
  }


  /**
   * Return true if this inline_response_200_45_data object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20045Data inlineResponse20045Data = (InlineResponse20045Data) o;
    return Objects.equals(this.distributor, inlineResponse20045Data.distributor) &&
        Objects.equals(this.publisher, inlineResponse20045Data.publisher) &&
        Objects.equals(this.articles, inlineResponse20045Data.articles);
  }

  @Override
  public int hashCode() {
    return Objects.hash(distributor, publisher, articles);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20045Data {\n");
    sb.append("    distributor: ").append(toIndentedString(distributor)).append("\n");
    sb.append("    publisher: ").append(toIndentedString(publisher)).append("\n");
    sb.append("    articles: ").append(toIndentedString(articles)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

