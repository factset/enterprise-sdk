/*
 * Real-Time News API
 * Consume FactSetâ€™s StreetAccount news and 3rd party content through an API that seamlessly integrates with [quotes](https://developer.factset.com/api-catalog/real-time-quotes-api), [time series](https://developer.factset.com/api-catalog/real-time-time-series-api), [watchlists](https://developer.factset.com/api-catalog/watchlist-api-digital-portals), and other Functional APIs.  Search for news articles from various news distributors and publishers. Incorporate a multitude of search parameters such as region, category, source, article type and provider-specific meta data, to easily filter out the noise.  All search and list endpoints can be subscribed to receive streamed updates.  News providers include:  * APA * AWP  * Businesswire * Cercle Finance * Direkt News SE * Dow Jones News * dpa * dpa-AFX  * EUWAX * GlobenewsWire * Kauppalehti * MT Newswires * MoneyAM * newsaktuell * OMX * PR Newswire  * Ritzau Finans * StreetAccount News * TDN News        See the [Real-Time Quotes API](https://developer.factset.com/api-catalog/real-time-quotes-api) for access to detailed price and performance information, plus basic support for security identifier cross-reference. 
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.RealTimeNews.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.RealTimeNews.models.PostNewsArticleListRequestDataFilterCategories;
import com.factset.sdk.RealTimeNews.models.PostNewsArticleListRequestDataFilterDistributor;
import com.factset.sdk.RealTimeNews.models.PostNewsArticleListRequestDataFilterLanguage;
import com.factset.sdk.RealTimeNews.models.PostNewsArticleListRequestDataFilterPublisher;
import com.factset.sdk.RealTimeNews.models.PostNewsArticleListRequestDataFilterRange;
import com.factset.sdk.RealTimeNews.models.PostNewsArticleListRequestDataFilterRegions;
import com.factset.sdk.RealTimeNews.models.PostNewsArticleListRequestDataFilterTypes;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.RealTimeNews.JSON;


/**
 * Criteria that filter the items in the response list; only items that match all of the criteria are returned.
 */
@ApiModel(description = "Criteria that filter the items in the response list; only items that match all of the criteria are returned.")
@JsonPropertyOrder({
  PostNewsArticleListRequestDataFilter.JSON_PROPERTY_RANGE,
  PostNewsArticleListRequestDataFilter.JSON_PROPERTY_CATEGORIES,
  PostNewsArticleListRequestDataFilter.JSON_PROPERTY_REGIONS,
  PostNewsArticleListRequestDataFilter.JSON_PROPERTY_DISTRIBUTOR,
  PostNewsArticleListRequestDataFilter.JSON_PROPERTY_PUBLISHER,
  PostNewsArticleListRequestDataFilter.JSON_PROPERTY_LANGUAGE,
  PostNewsArticleListRequestDataFilter.JSON_PROPERTY_TYPES
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class PostNewsArticleListRequestDataFilter implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_RANGE = "range";
  private PostNewsArticleListRequestDataFilterRange range;

  public static final String JSON_PROPERTY_CATEGORIES = "categories";
  private PostNewsArticleListRequestDataFilterCategories categories;

  public static final String JSON_PROPERTY_REGIONS = "regions";
  private PostNewsArticleListRequestDataFilterRegions regions;

  public static final String JSON_PROPERTY_DISTRIBUTOR = "distributor";
  private PostNewsArticleListRequestDataFilterDistributor distributor;

  public static final String JSON_PROPERTY_PUBLISHER = "publisher";
  private PostNewsArticleListRequestDataFilterPublisher publisher;

  public static final String JSON_PROPERTY_LANGUAGE = "language";
  private PostNewsArticleListRequestDataFilterLanguage language;

  public static final String JSON_PROPERTY_TYPES = "types";
  private PostNewsArticleListRequestDataFilterTypes types;

  public PostNewsArticleListRequestDataFilter() { 
  }

  public PostNewsArticleListRequestDataFilter range(PostNewsArticleListRequestDataFilterRange range) {
    this.range = range;
    return this;
  }

   /**
   * Get range
   * @return range
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostNewsArticleListRequestDataFilterRange getRange() {
    return range;
  }


  @JsonProperty(JSON_PROPERTY_RANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRange(PostNewsArticleListRequestDataFilterRange range) {
    this.range = range;
  }


  public PostNewsArticleListRequestDataFilter categories(PostNewsArticleListRequestDataFilterCategories categories) {
    this.categories = categories;
    return this;
  }

   /**
   * Get categories
   * @return categories
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CATEGORIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostNewsArticleListRequestDataFilterCategories getCategories() {
    return categories;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategories(PostNewsArticleListRequestDataFilterCategories categories) {
    this.categories = categories;
  }


  public PostNewsArticleListRequestDataFilter regions(PostNewsArticleListRequestDataFilterRegions regions) {
    this.regions = regions;
    return this;
  }

   /**
   * Get regions
   * @return regions
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_REGIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostNewsArticleListRequestDataFilterRegions getRegions() {
    return regions;
  }


  @JsonProperty(JSON_PROPERTY_REGIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRegions(PostNewsArticleListRequestDataFilterRegions regions) {
    this.regions = regions;
  }


  public PostNewsArticleListRequestDataFilter distributor(PostNewsArticleListRequestDataFilterDistributor distributor) {
    this.distributor = distributor;
    return this;
  }

   /**
   * Get distributor
   * @return distributor
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DISTRIBUTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostNewsArticleListRequestDataFilterDistributor getDistributor() {
    return distributor;
  }


  @JsonProperty(JSON_PROPERTY_DISTRIBUTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDistributor(PostNewsArticleListRequestDataFilterDistributor distributor) {
    this.distributor = distributor;
  }


  public PostNewsArticleListRequestDataFilter publisher(PostNewsArticleListRequestDataFilterPublisher publisher) {
    this.publisher = publisher;
    return this;
  }

   /**
   * Get publisher
   * @return publisher
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PUBLISHER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostNewsArticleListRequestDataFilterPublisher getPublisher() {
    return publisher;
  }


  @JsonProperty(JSON_PROPERTY_PUBLISHER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPublisher(PostNewsArticleListRequestDataFilterPublisher publisher) {
    this.publisher = publisher;
  }


  public PostNewsArticleListRequestDataFilter language(PostNewsArticleListRequestDataFilterLanguage language) {
    this.language = language;
    return this;
  }

   /**
   * Get language
   * @return language
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostNewsArticleListRequestDataFilterLanguage getLanguage() {
    return language;
  }


  @JsonProperty(JSON_PROPERTY_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLanguage(PostNewsArticleListRequestDataFilterLanguage language) {
    this.language = language;
  }


  public PostNewsArticleListRequestDataFilter types(PostNewsArticleListRequestDataFilterTypes types) {
    this.types = types;
    return this;
  }

   /**
   * Get types
   * @return types
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostNewsArticleListRequestDataFilterTypes getTypes() {
    return types;
  }


  @JsonProperty(JSON_PROPERTY_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTypes(PostNewsArticleListRequestDataFilterTypes types) {
    this.types = types;
  }


  /**
   * Return true if this PostNewsArticleListRequest_data_filter object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostNewsArticleListRequestDataFilter postNewsArticleListRequestDataFilter = (PostNewsArticleListRequestDataFilter) o;
    return Objects.equals(this.range, postNewsArticleListRequestDataFilter.range) &&
        Objects.equals(this.categories, postNewsArticleListRequestDataFilter.categories) &&
        Objects.equals(this.regions, postNewsArticleListRequestDataFilter.regions) &&
        Objects.equals(this.distributor, postNewsArticleListRequestDataFilter.distributor) &&
        Objects.equals(this.publisher, postNewsArticleListRequestDataFilter.publisher) &&
        Objects.equals(this.language, postNewsArticleListRequestDataFilter.language) &&
        Objects.equals(this.types, postNewsArticleListRequestDataFilter.types);
  }

  @Override
  public int hashCode() {
    return Objects.hash(range, categories, regions, distributor, publisher, language, types);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostNewsArticleListRequestDataFilter {\n");
    sb.append("    range: ").append(toIndentedString(range)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    regions: ").append(toIndentedString(regions)).append("\n");
    sb.append("    distributor: ").append(toIndentedString(distributor)).append("\n");
    sb.append("    publisher: ").append(toIndentedString(publisher)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    types: ").append(toIndentedString(types)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

