openapi: 3.0.0
info:
  contact:
    email: api@factset.com
    name: FactSet Research Systems
    url: https://developer.factset.com/contact
  description: |2

    **FactSet Formula API**

    FactSet’s Formula API is a modern, flexible, formula-based API that enables users to access FactSet’s wide range of financial data and content. The API offers two endpoints, one optimized for time-series analysis and one designed for cross-sectional analysis, providing users a simplified interface into FactSet’s expansive offering. By providing two endpoints, it allows for the optimization of user workflows, while reducing complexity.

    Leverage the power and flexibility of the Formula API to -
      * Pull data from across most content sets that a user has access to in a single request
      * Include business logic and mathematical operations in request
      * Submit a dynamic universe in both endpoints
      * Return the fsymId to easily combine with other FactSet content / products
      * Set the trading calendar
      * Define custom display names

    **Formula API Request Builder**

    The Formula API Request Builder provides users everything they need to form a Formula API request. In the Request Builder, you can select identifiers, build a universe expression, select FQL or Screening formulas, easily apply business logic and mathematical functions to the FQL or Screening formulas, specify optional parameters, and construct a GET or POST request. The Request Builder eliminates the need to have previous FQL and Screening knowledge and allows you to quickly find your desired data items and form the request.

    The Formula API Request Builder can be accessed by navigating to [https://developer.factset.com/formula-api-request-builder](https://developer.factset.com/formula-api-request-builder) and logging in using your FactSet.net ID. When using the Request Builder to construct requests for the one of the Formula API's endpoints, be sure to toggle to the correct endpoint at the top of the page.

    **How to Check the Health and Availability of the Formula API**

    Please use the below endpoint to check the health and availability of the Formula API. You must be authorized for this API to use the Health endpoint.

    [https://api.factset.com/formula-api/health](https://api.factset.com/formula-api/health)

    **How to Programmatically Download API Specification File**

    You can download the FactSet Formula API Specification File in .yaml. using the "Download Spec" button to the right of the version number. This specification can then be used for Codegen to create your own SDKs.
  license:
    name: Apache License, Version 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  title: FactSet Formula API
  version: 1.8.0
externalDocs:
  description: API Documentation
  url: https://developer.factset.com/api-catalog/formula-api
servers:
- description: Production
  url: https://api.factset.com/formula-api/v1
security:
- FactSetApiKey: []
- FactSetOAuth2: []
tags:
- name: Time-Series
- name: Cross-Sectional
- name: Batch Processing
paths:
  /time-series:
    get:
      description: |
        The `/time-series` endpoint is closely aligned with FactSet’s powerful data retrieval language **FactSet Query Language (FQL)** which is optimized for time-series analysis. FQL can also perform sophisticated statistical, mathematical, logical, and other complex operations on the data.

          This endpoint has a unique **TIMESERIES** data object that pairs the requested data with FactSet provided dates. This helps reduce the need for additional data requests and reduces the work required by users.

        The `/time-series` endpoint supports Long Running asynchronous requests up to **30 minutes** via the `batch` parameter. *This feature is available to Individual Users subscribed to the Performance Package and Performance Package Plus Performance Tiers and all Production Users. If you are unsure which Performance Tier you are subscribed to or you would like to gain access to the batch capabilities, please contact your FactSet Account Team or "Report Issue" above and our support teams can assist.*
      operationId: getTimeSeriesData
      parameters:
      - description: |
          List of entity identifiers. This request value is sent back in the response as the field *requestId*. By default, accepted symbol types include Market Tickers, SEDOLs, ISINs, CUSIPs, or FactSet Permanent Ids. Use the `symbolType` parameter to submit other supported third-party identifier types.

          The `ids` and `universe` parameters provide two different ways to specify the identifiers for which you want data retrieved. Please enter either the `ids` or `universe` parameter.
        examples:
          singleId:
            summary: Single id
            value:
            - IBM
          multipleIds:
            summary: Multiple ids
            value:
            - IBM
            - AAPL
            - MSFT
        explode: false
        in: query
        name: ids
        required: false
        schema:
          items:
            example: FDS-US
            type: string
          type: array
        style: form
      - description: "Specify the type of symbols submitted in the `ids` parameter.\
          \ This is only required when submitting ids that are not supported by default.\
          \ \n\nAvailable symbol types -\n* DEFAULT - Accepted symbol types include\
          \ Market Tickers, SEDOLs, ISINs, CUSIPs, or FactSet Permanent Ids.\n\n*\
          \ BLOOMBERG - Accepted symbol types include Bloomberg Tickers and Bloomberg\
          \ FIGIs. \n  * When submitting Bloomberg symbols, the Bloomberg symbol is\
          \ translated to a FactSet Permanent Identifier which is then used to retrieve\
          \ the requested FQL and Screening formulas. The Bloomberg symbol submitted\
          \ will be returned in the response in the field *requestId*. To see the\
          \ FactSet Permanent Identifer that the Bloomberg symbol resolved to, use\
          \ the `fsymId` parameter in addition to the `symbolType` parameter.\n  *\
          \ Bloomberg symbols can not be submitted with other symbol types. \n  *\
          \ Bloomberg Symbol Resolution is not available via Batch Requests.\n\nBloomberg\
          \ Symbol Resolution is included with the Individual User subscription. Users\
          \ with a Production User subscription require additional access to submit\
          \ Bloomberg symbols. If you would like to gain access to Bloomberg Symbol\
          \ Resolution, please contact your FactSet Account Team or \"Report Issue\"\
          \ above and our support teams can assist.\n"
        explode: false
        in: query
        name: symbolType
        required: false
        schema:
          default: DEFAULT
          enum:
          - DEFAULT
          - BLOOMBERG
          type: string
        style: form
      - description: |
          Screening expression to limit the universe

          Please enter either the `ids` or `universe` parameter.
        examples:
          noUniverse:
            summary: '---'
            value: ""
          oneCriteria:
            summary: Equity Universe - S&P 500 Constituents
            value: FG_CONSTITUENTS(SP50,0,CLOSE)
          twoCriteria:
            summary: Equity Universe -  S&P 500 Constituents with Price < 10 USD
            value: (FG_CONSTITUENTS(SP50,0,CLOSE) AND P_PRICE(0,USD)<10)=1
          debtUniverse:
            description: |
              The issuer name and amount out for all debt instruments for the Starbucks Corporation

              To calculate fixed income universe, `universeType` must be set to **DEBT**.
            summary: Debt Universe - Starbucks Debt
            value: EQUITY(P_SYMBOL)='SBUX-US'
        explode: false
        in: query
        name: universe
        required: false
        schema:
          type: string
        style: form
      - description: |
          Specify the universe type to calculate the `universe` in.

          Find documentation below on how to build a screen for each universe type -
          * Equity Screen - [Online Assistant Page 20606](https://my.apps.factset.com/oa/pages/20606)

          * Debt Screen - [Online Assistant Page 20888](https://my.apps.factset.com/oa/pages/20888)

          * Fund Screen - [Online Assistant Page 21384](https://my.apps.factset.com/oa/pages/21384)

          This parameter may only be used in conjunction with the `universe` parameter.
        explode: false
        in: query
        name: universeType
        required: false
        schema:
          default: EQUITY
          enum:
          - EQUITY
          - DEBT
          - FUND
          type: string
        style: form
      - description: List of FQL formulas
        examples:
          singleItem:
            summary: Single Data Item
            value:
            - P_PRICE(0)
          multipleItems:
            summary: Multiple Data Items
            value:
            - P_PRICE(0,-2,D)
            - FG_COMPANY_NAME
            - FF_SEGMENT_RPT_LABELS(ANN_R,0,-1AY,,,,BUS,"SEG")
            - FF_SEGMENT_RPT_DATA(ANN_R,0,-1AY,,,"SALES",,BUS,"SEG")
          multipleItemsFlatten:
            summary: Multiple TIMESERIES Data Items
            value:
            - P_PRICE_OPEN(0,-2,D)
            - P_PRICE(0,-2,D)
            - FG_COMPANY_NAME
          debtDataItems:
            summary: Multiple Debt Data Items
            value:
            - FI_NAME(ISSR)
            - FI_AMOUNT_OUT(AMT,0,USD)
          calculatedDataItems:
            description: |
              These data items showcase the ability to include logic, mathematical operations, and other functions in the request itself.

              The first data item using the division operator to calculate a P/E ratio from the last trading day of the company’s most recent fiscal year.

              The second data item uses the addition operator to calculate percentage of revenue exposure in the US and Japan for the same date as the first data item. Note that due to URI defintion of the plus sign, the **+** symbol must be URL percent encoded as **%2B** in GET requests. This means you should use **%2B** in place of the symbol **+** in the request.

              The third data item uses the average function (**AVG**) and the **IF** function to indicate whether the average daily price change over the company’s most recent fiscal year is postive or negative.

              You can find more information about the different functions you can use in FQL at the following Online Assistant pages -
              * Mathematical Operators - [Online Assistant Page 10600](https://my.apps.factset.com/oa/pages/10600)
              * Logical Functions - [Online Assistant Page 11485](https://my.apps.factset.com/oa/pages/1485)
              * Categorical List of All Functions - [Online Assistant Page 1411](https://my.apps.factset.com/oa/pages/1411)
            summary: Multiple Calculated Data Items
            value:
            - P_PRICE(0Y)/FF_EPS(ANN_R,0Y)
            - FF_GEOREV_COUNTRY_PCT("840",ANN,0,,,RF)%2BFF_GEOREV_COUNTRY_PCT("392",ANN,0,,,RF)
            - IF(AVG(P_PRICE_CHANGE(0Y,-1Y,D,USD))>0,"POSITIVE","NEGATIVE")
        explode: false
        in: query
        name: formulas
        required: true
        schema:
          items:
            example: P_PRICE(0,-2,D)
            type: string
          type: array
        style: form
      - description: Calendar of data returned. The default value is FIVEDAY which
          displays Monday through Friday, regardless of whether there were trading
          holidays.
        examples:
          fiveday:
            description: Displays Monday through Friday, regardless of whether there
              were trading holidays. This is the default for `calendar`.
            summary: FIVEDAY
            value: FIVEDAY
          sevenday:
            description: Displays Monday through Sunday.
            summary: SEVENDAY
            value: SEVENDAY
          local:
            description: Uses the local trading calendar for each security. Local
              exchange holidays will be skipped.
            summary: LOCAL
            value: LOCAL
          region:
            description: The calendar of a specific region. The example shown here
              'NAY' is for the UNITED STATES calendar. You can find the calendar codes
              for regions on [Online Assistant Page 16610](https://my.apps.factset.com/oa/pages/16610#country).
            summary: Region Specific
            value: NAY
        explode: true
        in: query
        name: calendar
        required: false
        schema:
          type: string
        style: form
      - description: |
          Specify **Y** for the `fsymId` parameter to return the **fsymId** (FactSet Default Permanent Identifier) of the `requestId`, in addition to the **requestId** field, in each response object. The default value for the `fsymId` parameter is **N**.

          The **fsymId** field returned is the FactSet Default Permanent Identifier for the `requestId`. For all supported `requestId` symbol types, the `fsymId` parameter will return the Regional Level PermId '-R' which identifies the security’s best regional security data series per currency. Currently, the fsymId parameter only supports equities. Accepted `requestId` symbol types include all FactSet Permanent Identifiers types, CUSIP, SEDOL, ISIN, and Tickers. Further documentation can be found at this [Online Assistant attachment](https://oa.apps.factset.com/cms/oaAttachment/64c3213a-f415-4c27-a336-92c73a72deed/24881).
        explode: false
        in: query
        name: fsymId
        required: false
        schema:
          default: "N"
          enum:
          - "Y"
          - "N"
          type: string
        style: form
      - description: |
          Define display names for the formulas inputted. Enter the list of display names in the same order as the formulas inputted. An additional field **displayName** will be returned in the data object for a formula.

          If the number of display names does not match the number of formulas provided, an error will be returned.

          To define the display name for a subset of the formulas, leave a blank in the position of the formula that won't be renamed. For example - If three formulas are inputted, to define display names only for the first and third formula, enter *displayName=FORMULA_1,,FORMULA_3*. The **displayName** field will still be included in that formula, but will contain the formula as inputted.
        examples:
          noNames:
            summary: '---'
            value: []
          singleItem:
            summary: Single Data Item
            value:
            - PRICE
          multipleItems:
            summary: Multiple Data Items
            value:
            - PRICE
            - COMPANY NAME
            - BUSINESS SEGMENT
            - SALES SEGMENT
        explode: false
        in: query
        name: displayName
        required: false
        schema:
          items:
            example: PRICE
            type: string
          type: array
        style: form
      - description: |
          Specify **Y** for `flatten` to return a flat, table-like JSON response model instead of the standard nested JSON response model. This option is provided for easier data processing and visualization. The default value for `flatten` is **N**.

          See the **Time-Series Result Object Flattened** schema for more detail on the response structure for flattened output.
        explode: false
        in: query
        name: flatten
        required: false
        schema:
          default: "N"
          enum:
          - "Y"
          - "N"
          type: string
        style: form
      - description: |
          Specify **N** for the `dates` parameter to suppress the **dates** of the response. The default value for the `dates` parameter is **Y**. Setting the parameter to **Y** will only return dates if the formula has a date value associated with it.

          In the non-flattened response model, setting dates to **N** will remove the "dates" array from the TIMESERIES objectType, meaning that the results will be returned as an ARRAY objectType.

          In the flattened response mode, setting dates to **N** will remove the "dates" attribute from the response objects. The flatten parameter first attempts to flatten the response by dates. Removing the dates can make it easier to align multiple data items when the date definition differs from the desired alignment.
        explode: false
        in: query
        name: dates
        required: false
        schema:
          default: "Y"
          enum:
          - "Y"
          - "N"
          type: string
        style: form
      - description: |
          Enables the ability to asynchronously "batch" the request,  supporting a long-running request up to **30 minutes**. Upon requesting batch=Y, the service will respond back with an HTTP Status Code of 202.

          Individual users are allowed 5 concurrent Batch Requests, while Production users are allowed 10 concurrent Batch Requests.
          *This feature is available to Individual Users subscribed to the Performance Package and Performance Package Plus Performance Tiers and all Production Users. If you are unsure which Performance Tier you are subscribed to or you would like to gain access to the batch capabilities, please contact your FactSet Account Team or "Report Issue" above and our support teams can assist.*

          Once a batch request is submitted, use `/batch-status` to see if the job has completed. Once completed, retrieve the results of the request via `/batch-result`. See the endpoints listed under *Batch Processing* for more information.
        explode: true
        in: query
        name: batch
        required: false
        schema:
          default: "N"
          enum:
          - "Y"
          - "N"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Single Id and Single Data Item:
                  $ref: '#/components/examples/time-series-singleId-singleItem'
                Single Id and Single Data Item with fsymId=Y:
                  $ref: '#/components/examples/time-series-singleId-singleItem-fsymId'
                Multiple Ids and Multiple Data Items with SEVENDAY Calendar:
                  $ref: '#/components/examples/time-series-multipleId-multipleItem'
                Multiple Ids and Multiple Data Items with flatten=Y:
                  $ref: '#/components/examples/time-series-multipleId-multipleItem-flatten'
                Multiple Ids and Multiple Calculated Data Items:
                  $ref: '#/components/examples/time-series-multipleId-multipleCalculatedItem'
                Small Universe and Single Data Item:
                  $ref: '#/components/examples/time-series-smallUniv-singleItem'
                Debt Universe and Multiple Data Items:
                  $ref: '#/components/examples/time-series-debtUniv-multipleItem'
              schema:
                $ref: '#/components/schemas/time_series_response'
          description: Gets an array of `Response Objects` for a list of IDs and FQL
            formulas.
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
            X-RateLimit-Limit-second:
              $ref: '#/components/headers/X-RateLimit-Limit-second'
            X-RateLimit-Remaining-second:
              $ref: '#/components/headers/X-RateLimit-Remaining-second'
            X-RateLimit-Limit-day:
              $ref: '#/components/headers/X-RateLimit-Limit-day'
            X-RateLimit-Remaining-day:
              $ref: '#/components/headers/X-RateLimit-Remaining-day'
        "202":
          content:
            application/json:
              examples:
                Batch Request Accepted:
                  $ref: '#/components/examples/BatchStatusAcceptedResponse'
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
          description: Batch request has been accepted.
        "400":
          content:
            application/json:
              examples:
                parameterError - Missing Formulas:
                  value:
                    id: 5EFCCA8940CAEB6E
                    code: parameterError
                    title: The parameter 'formulas' is required and may not be empty.
                    timeStamp: 2019-11-01 11:09:41.918
                parameterError - Ids and Universe:
                  description: The `ids` or `universe` parameter must be included.
                    Including `ids` and `universe` parameters in the same request
                    is not allowed.
                  value:
                    id: 5EFCCA8940CAEB6E
                    code: parameterError
                    title: Please enter either the ids or universe parameter.
                    timeStamp: 2019-11-01 11:09:41.918
                parameterError - Invalid displayName Input:
                  value:
                    id: 5EFCCA8940CAEB6E
                    code: parameterError
                    title: The length of the list provided for the displayName parameter
                      must be equal to the number of formulas requested.
                    timeStamp: 2019-11-01 11:09:41.918
                requestBodyInvalid:
                  value:
                    id: 5EFCCA8940CAEB6E
                    code: requestBodyInvalid
                    title: The request body could not be read.
                    timeStamp: 2019-11-01 11:09:41.918
                invalidCharacter:
                  value:
                    id: 5EFCCA8940CAEB6E
                    code: invalidCharacter
                    title: The request contains an invalid character. Allowed characters
                      are Unicode code points in the ranges [0x09-0x0a],[0x0d], [0x20-0x7e],
                      [0x85], [0xa0-0xd7ff], [0xe000-0xfffd], and [0x10000-0x10ffff].
                    timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Bad Request
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Unauthenticated USERNAME-SERIAL. This error will also occur
            if the API request is made from IP address not specified in the API Key
            configuration. Note that additional IP addresses can be added to an existing
            API Key configuration.
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
        "403":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: Unauthorized
                title: USERNAME-SERIAL does not have permission to use /v1/{endpoint}
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Not Authorized.
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
        "404":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: endpointNotFound
                title: '''/formula-api/v1/{invalid endpoint}'' is not a valid endpoint.'
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Endpoint Not Found
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
        "405":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: methodNotAllowed
                title: The HTTP method {unsupported method} is not allowed. Please
                  resubmit the request using the HTTP methods GET or POST.
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: badAccept
                title: 'Accept: {unsupported Accept header} is not supported. The
                  Accept header must include application/json.'
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Bad Accept Header
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
        "408":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: requestTimeout
                title: The request took too long. Try again with a smaller request.
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Request Timeout. This error may be returned if it takes more
            than 29 seconds for the request to process or if a batch request takes
            more than 30 minutes to process.
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
        "413":
          content:
            application/json:
              example:
                id: 64EA0B1B0B592002
                code: ContentTooLarge
                title: The request is too large. Please reduce the payload size or
                  leverage batching to ensure successful processing.
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Content Too Large. This error may be returned if the request
            payload size is too large to be processed in the alloted amount of time.
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
        "415":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: badContentType
                title: 'Content-Type: {unsupported Content-Type} is not supported.
                  The Content-Type header must include application/json'
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Bad Content-Type Header
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
        "429":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: toomanyrequests
                title: Rate limit is exceeded
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Rate Limits Exceeded
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
            X-RateLimit-Limit-second:
              $ref: '#/components/headers/X-RateLimit-Limit-second'
            X-RateLimit-Remaining-second:
              $ref: '#/components/headers/X-RateLimit-Remaining-second'
            X-RateLimit-Limit-day:
              $ref: '#/components/headers/X-RateLimit-Limit-day'
            X-RateLimit-Remaining-day:
              $ref: '#/components/headers/X-RateLimit-Remaining-day'
            Retry-After:
              $ref: '#/components/headers/Retry-After'
        "500":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: genericServerError
                title: An unexpected error happened.
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Generic Server Error
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
        "501":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: notImplemented
                title: The requested endpoint or functionality has not been implemented
                  yet.
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Not Implemented
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
        "503":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: serviceTemporarilyUnavailable
                title: Will be sent in case the requested service is currently overloaded
                  or can't temporarily handle the request for some other reason. Clients
                  are expected to retry the request.
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Service Temporarily Unavailable
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
      summary: Retrieve data items (FQL formulas) for a list of identifiers or defined
        universe.
      tags:
      - Time-Series
      x-factset-different-success-responses: true
      x-accepts: application/json
    post:
      description: |
        The `/time-series` endpoint is closely aligned with FactSet’s powerful data retrieval language **FactSet Query Language (FQL)** which is optimized for time-series analysis. FQL can also perform sophisticated statistical, mathematical, logical, and other complex operations on the data.

          This endpoint has a unique **TIMESERIES** data object that pairs the requested data with FactSet provided dates. This helps reduce the need for additional data requests and reduces the work required by users.

        The `/time-series` endpoint supports Long Running asynchronous requests up to **30 minutes** via the `batch` parameter. *This feature is available to Individual Users subscribed to the Performance Package and Performance Package Plus Performance Tiers and all Production Users. If you are unsure which Performance Tier you are subscribed to or you would like to gain access to the batch capabilities, please contact your FactSet Account Team or "Report Issue" above and our support teams can assist.*
      operationId: getTimeSeriesDataForList
      requestBody:
        $ref: '#/components/requestBodies/time-series-postBody'
      responses:
        "200":
          content:
            application/json:
              examples:
                Single Id and Single Data Item:
                  $ref: '#/components/examples/time-series-singleId-singleItem'
                Single Id and Single Data Item with fsymId=Y:
                  $ref: '#/components/examples/time-series-singleId-singleItem-fsymId'
                Multiple Ids and Multiple Data Items with SEVENDAY Calendar:
                  $ref: '#/components/examples/time-series-multipleId-multipleItem'
                Multiple Ids and Multiple Data Items with flatten=Y:
                  $ref: '#/components/examples/time-series-multipleId-multipleItem-flatten'
                Multiple Ids and Multiple Calculated Data Items:
                  $ref: '#/components/examples/time-series-multipleId-multipleCalculatedItem'
                Small Universe and Single Data Item:
                  $ref: '#/components/examples/time-series-smallUniv-singleItem'
                Debt Universe and Multiple Data Items:
                  $ref: '#/components/examples/time-series-debtUniv-multipleItem'
              schema:
                $ref: '#/components/schemas/time_series_response'
          description: Gets an array of `Response Objects` for a list of IDs and FQL
            formulas.
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
            X-RateLimit-Limit-second:
              $ref: '#/components/headers/X-RateLimit-Limit-second'
            X-RateLimit-Remaining-second:
              $ref: '#/components/headers/X-RateLimit-Remaining-second'
            X-RateLimit-Limit-day:
              $ref: '#/components/headers/X-RateLimit-Limit-day'
            X-RateLimit-Remaining-day:
              $ref: '#/components/headers/X-RateLimit-Remaining-day'
        "202":
          content:
            application/json:
              examples:
                Batch Request Accepted:
                  $ref: '#/components/examples/BatchStatusAcceptedResponse'
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
          description: Batch request has been accepted.
        "400":
          content:
            application/json:
              examples:
                parameterError - Missing Formulas:
                  value:
                    id: 5EFCCA8940CAEB6E
                    code: parameterError
                    title: The parameter 'formulas' is required and may not be empty.
                    timeStamp: 2019-11-01 11:09:41.918
                parameterError - Ids and Universe:
                  description: The `ids` or `universe` parameter must be included.
                    Including `ids` and `universe` parameters in the same request
                    is not allowed.
                  value:
                    id: 5EFCCA8940CAEB6E
                    code: parameterError
                    title: Please enter either the ids or universe parameter.
                    timeStamp: 2019-11-01 11:09:41.918
                parameterError - Invalid displayName Input:
                  value:
                    id: 5EFCCA8940CAEB6E
                    code: parameterError
                    title: The length of the list provided for the displayName parameter
                      must be equal to the number of formulas requested.
                    timeStamp: 2019-11-01 11:09:41.918
                requestBodyInvalid:
                  value:
                    id: 5EFCCA8940CAEB6E
                    code: requestBodyInvalid
                    title: The request body could not be read.
                    timeStamp: 2019-11-01 11:09:41.918
                invalidCharacter:
                  value:
                    id: 5EFCCA8940CAEB6E
                    code: invalidCharacter
                    title: The request contains an invalid character. Allowed characters
                      are Unicode code points in the ranges [0x09-0x0a],[0x0d], [0x20-0x7e],
                      [0x85], [0xa0-0xd7ff], [0xe000-0xfffd], and [0x10000-0x10ffff].
                    timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Bad Request
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Unauthenticated USERNAME-SERIAL. This error will also occur
            if the API request is made from IP address not specified in the API Key
            configuration. Note that additional IP addresses can be added to an existing
            API Key configuration.
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
        "403":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: Unauthorized
                title: USERNAME-SERIAL does not have permission to use /v1/{endpoint}
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Not Authorized.
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
        "404":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: endpointNotFound
                title: '''/formula-api/v1/{invalid endpoint}'' is not a valid endpoint.'
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Endpoint Not Found
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
        "405":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: methodNotAllowed
                title: The HTTP method {unsupported method} is not allowed. Please
                  resubmit the request using the HTTP methods GET or POST.
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: badAccept
                title: 'Accept: {unsupported Accept header} is not supported. The
                  Accept header must include application/json.'
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Bad Accept Header
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
        "408":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: requestTimeout
                title: The request took too long. Try again with a smaller request.
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Request Timeout. This error may be returned if it takes more
            than 29 seconds for the request to process or if a batch request takes
            more than 30 minutes to process.
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
        "413":
          content:
            application/json:
              example:
                id: 64EA0B1B0B592002
                code: ContentTooLarge
                title: The request is too large. Please reduce the payload size or
                  leverage batching to ensure successful processing.
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Content Too Large. This error may be returned if the request
            payload size is too large to be processed in the alloted amount of time.
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
        "415":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: badContentType
                title: 'Content-Type: {unsupported Content-Type} is not supported.
                  The Content-Type header must include application/json'
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Bad Content-Type Header
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
        "429":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: toomanyrequests
                title: Rate limit is exceeded
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Rate Limits Exceeded
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
            X-RateLimit-Limit-second:
              $ref: '#/components/headers/X-RateLimit-Limit-second'
            X-RateLimit-Remaining-second:
              $ref: '#/components/headers/X-RateLimit-Remaining-second'
            X-RateLimit-Limit-day:
              $ref: '#/components/headers/X-RateLimit-Limit-day'
            X-RateLimit-Remaining-day:
              $ref: '#/components/headers/X-RateLimit-Remaining-day'
            Retry-After:
              $ref: '#/components/headers/Retry-After'
        "500":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: genericServerError
                title: An unexpected error happened.
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Generic Server Error
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
        "501":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: notImplemented
                title: The requested endpoint or functionality has not been implemented
                  yet.
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Not Implemented
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
        "503":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: serviceTemporarilyUnavailable
                title: Will be sent in case the requested service is currently overloaded
                  or can't temporarily handle the request for some other reason. Clients
                  are expected to retry the request.
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Service Temporarily Unavailable
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
      summary: Retrieve data items (FQL formulas) for a list of identifiers or defined
        universe.
      tags:
      - Time-Series
      x-factset-different-success-responses: true
      x-contentType: application/json
      x-accepts: application/json
  /cross-sectional:
    get:
      description: "The `/cross-sectional` endpoint is closely aligned with FactSet’\
        s powerful data retrieval **Screening language** which is optimized for analysis\
        \ of data items at single point in time for different entities and is extremely\
        \ efficient for large universes.\n\n\nThe `/cross-sectional` endpoint supports\
        \ Long Running asynchronous requests up to **30 minutes** via the `batch`\
        \ parameter. *This feature is available to Individual Users subscribed to\
        \ the Performance Package and Performance Package Plus Performance Tiers and\
        \ all Production Users. If you are unsure which Performance Tier you are subscribed\
        \ to or you would like to gain access to the batch capabilities, please contact\
        \ your FactSet Account Team or \"Report Issue\" above and our support teams\
        \ can assist.*\n\n***\n\n### Iterated Cross-Sectional Functionality\n\n\n\
        This endpoint supports the ability to automatically iterate through different\
        \ cross sections over time. The **Iterated Cross-Sectional Functionality (ICSF)**\
        \ expands the Cross-Sectional endpoint to support retrieving data items for\
        \ *multiple dates*, allowing users to take advantage of the Screening engine’\
        s efficiency even when history is required. \n\n\nUse the parameters `startDate`,\
        \ `endDate`, and `frequency` in the Cross-Sectional endpoint to provide your\
        \ desired dates. Specify “0” in date argument of the Screening formulas provided\
        \ in the formulas parameter and/or the universe parameter. Lastly, the Iterated\
        \ Cross-Sectional Functionality is required to run as a `batch` request. Therefore,\
        \ the batch parameter must be set to “Y”. \n\n\nAccess to backtesting and\
        \ batch functionality is required to leverage the Iterated Cross-Sectional\
        \ Functionality. \n\n**When to use ICSF:**\n\nThe ICSF can offer better performance\
        \ than Time-Series requests when the date range is relatively small, and so\
        \ it is recommended to use ICSF if the number of IDs requested is greater\
        \ than the number of dates. If the number of dates is greater than the number\
        \ of IDs in the request, it is recommended to use Time-Series.\n\n*Note: This\
        \ is a general rule of thumb and performance may vary depending on the formulas\
        \ in use.*\n"
      operationId: getCrossSectionalData
      parameters:
      - description: |
          List of entity identifiers. This request value is sent back in the response as the field *requestId*. By default, accepted symbol types include Market Tickers, SEDOLs, ISINs, CUSIPs, or FactSet Permanent Ids. Use the `symbolType` parameter to submit other supported third-party identifier types.

          The `ids` and `universe` parameters provide two different ways to specify the identifiers for which you want data retrieved. Please enter either the `ids` or `universe` parameter.
        examples:
          singleId:
            summary: Single id
            value:
            - IBM
          multipleIds:
            summary: Multiple ids
            value:
            - IBM
            - AAPL
            - MSFT
        explode: false
        in: query
        name: ids
        required: false
        schema:
          items:
            example: FDS-US
            type: string
          type: array
        style: form
      - description: "Specify the type of symbols submitted in the `ids` parameter.\
          \ This is only required when submitting ids that are not supported by default.\
          \ \n\nAvailable symbol types -\n* DEFAULT - Accepted symbol types include\
          \ Market Tickers, SEDOLs, ISINs, CUSIPs, or FactSet Permanent Ids.\n\n*\
          \ BLOOMBERG - Accepted symbol types include Bloomberg Tickers and Bloomberg\
          \ FIGIs. \n  * When submitting Bloomberg symbols, the Bloomberg symbol is\
          \ translated to a FactSet Permanent Identifier which is then used to retrieve\
          \ the requested FQL and Screening formulas. The Bloomberg symbol submitted\
          \ will be returned in the response in the field *requestId*. To see the\
          \ FactSet Permanent Identifer that the Bloomberg symbol resolved to, use\
          \ the `fsymId` parameter in addition to the `symbolType` parameter.\n  *\
          \ Bloomberg symbols can not be submitted with other symbol types. \n  *\
          \ Bloomberg Symbol Resolution is not available via Batch Requests.\n\nBloomberg\
          \ Symbol Resolution is included with the Individual User subscription. Users\
          \ with a Production User subscription require additional access to submit\
          \ Bloomberg symbols. If you would like to gain access to Bloomberg Symbol\
          \ Resolution, please contact your FactSet Account Team or \"Report Issue\"\
          \ above and our support teams can assist.\n"
        explode: false
        in: query
        name: symbolType
        required: false
        schema:
          default: DEFAULT
          enum:
          - DEFAULT
          - BLOOMBERG
          type: string
        style: form
      - description: |
          Screening expression to limit the universe

          Please enter either the `ids` or `universe` parameter.
        examples:
          noUniverse:
            summary: '---'
            value: ""
          oneCriteria:
            summary: Equity Universe - S&P 500 Constituents
            value: FG_CONSTITUENTS(SP50,0,CLOSE)
          twoCriteria:
            summary: Equity Universe -  S&P 500 Constituents with Price < 10 USD
            value: (FG_CONSTITUENTS(SP50,0,CLOSE) AND P_PRICE(0,USD)<10)=1
          debtUniverse:
            description: |
              The issuer name and amount out for all debt instruments for the Starbucks Corporation

              To calculate fixed income universe, `universeType` must be set to **DEBT**.
            summary: Debt Universe - Starbucks Debt
            value: EQUITY(P_SYMBOL)='SBUX-US'
        explode: false
        in: query
        name: universe
        required: false
        schema:
          type: string
        style: form
      - description: |
          Specify the universe type to calculate the `universe` in.

          Find documentation below on how to build a screen for each universe type -
          * Equity Screen - [Online Assistant Page 20606](https://my.apps.factset.com/oa/pages/20606)

          * Debt Screen - [Online Assistant Page 20888](https://my.apps.factset.com/oa/pages/20888)

          * Fund Screen - [Online Assistant Page 21384](https://my.apps.factset.com/oa/pages/21384)
        explode: false
        in: query
        name: universeType
        required: false
        schema:
          default: EQUITY
          enum:
          - EQUITY
          - DEBT
          - FUND
          type: string
        style: form
      - description: List of Screening formulas
        examples:
          singleItem:
            summary: Single Equity Data Item
            value:
            - P_PRICE(0)
          multipleItems:
            summary: Multiple Equity Data Items
            value:
            - FF_SALES(ANN_R,0)
            - PROPER_NAME(0,SECURITY,NAME)
            - P_PRICE(0)
            - FF_ASSETS(ANN_R,0)
          calculatedItems:
            description: |
              These data items showcase the ability to include logic, mathematical operations, and other functions in the request itself.

              The first data item using the division operator to calculate a P/E ratio from the last trading day of the company’s most recent fiscal year.

              The second data item uses the addition operator to calculate percentage of revenue exposure in the US and Japan for the same date as the first data item. Note that due to URI defintion of the plus sign, the **+** symbol must be URL percent encoded as **%2B** in GET requests. This means you should use **%2B** in place of the symbol **+** in the request.

              The third data item uses the **IF** function and greater than operator (**>**) to indicate whether the latest fiscal year's sales were higher or lower than the previous year's sales.

              You can find more information about the different functions you can use in FQL at the following Online Assistant pages -
              * Mathematical Operators - [Online Assistant Page 10600](https://my.apps.factset.com/oa/pages/10600)
              * Logical Functions - [Online Assistant Page 11485](https://my.apps.factset.com/oa/pages/1485)
              * Categorical List of All Functions - [Online Assistant Page 1411](https://my.apps.factset.com/oa/pages/1411)
            summary: Multiple Calculated Data Items
            value:
            - P_PRICE(0Y)/FF_EPS(ANN_R,0Y)
            - FF_GEOREV_COUNTRY_PCT(840,ANN,0,RF)%2BFF_GEOREV_COUNTRY_PCT(392,ANN,0,RF)
            - IF(FF_SALES(ANN_R,0)>FF_SALES(ANN_R,-1),"HIGHER","LOWER")
          multipleFixedIncomeItems:
            description: |
              To retrieve fixed income data, `universeType` must be set to **DEBT**.
            summary: Multiple Fixed Income Data Items
            value:
            - FI_NAME(ISSR)
            - FI_AMOUNT_OUT(AMT,0,USD)
        explode: false
        in: query
        name: formulas
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |
          Specify the backtest date either in **YYYY-MM-DD**, **YYYYMMDD** or **MM/DD/YYYY** format.

          To learn more about backtesting, please visit [Online Assistant Page 20610](https://my.apps.factset.com/oa/pages/20610#backtest). User must have access to backtesting functionality.
        explode: false
        in: query
        name: backTestDate
        required: false
        schema:
          type: string
        style: form
      - description: Calendar of data returned. The default value is FIVEDAY which
          displays Monday through Friday, regardless of whether there were trading
          holidays.
        examples:
          fiveday:
            description: Displays Monday through Friday, regardless of whether there
              were trading holidays. This is the default for `calendar`.
            summary: FIVEDAY
            value: FIVEDAY
          sevenday:
            description: Displays Monday through Sunday.
            summary: SEVENDAY
            value: SEVENDAY
          region:
            description: The calendar of a specific region. The example shown here
              'NAY' is for the UNITED STATES calendar. You can find the calendar codes
              for regions on [Online Assistant Page 16610](https://my.apps.factset.com/oa/pages/16610#country).
            summary: Region Specific
            value: NAY
        explode: true
        in: query
        name: calendar
        required: false
        schema:
          type: string
        style: form
      - description: |
          Specify **Y** for `fsymId` to return an additional response object containing the data
          item **fsymId** which will contain the fsymIds of the requestIds. This is in addition to the
          response object containing the data item **requestId**. The default value for `fsymId`
          is **N**.

          The **fsymId** field returned is the FactSet Default Permanent Identifier for the `requestId`. For all supported `requestId` symbol types, the `fsymId` parameter will return the Regional Level PermId '-R' which identifies the security’s best regional security data series per currency. Currently, the fsymId parameter only supports equities. Accepted `requestId` symbol types include all FactSet Permanent Identifiers types, CUSIP, SEDOL, ISIN, and Tickers. Further documentation can be found at this [Online Assistant attachment](https://oa.apps.factset.com/cms/oaAttachment/64c3213a-f415-4c27-a336-92c73a72deed/24881).
        explode: false
        in: query
        name: fsymId
        required: false
        schema:
          default: "N"
          enum:
          - "Y"
          - "N"
          type: string
        style: form
      - description: |
          Define display names for the formulas inputted. Enter the list of display names in the same order as the formulas inputted. An additional field **displayName** will be returned in the data object for a formula.

          If the number of display names does not match the number of formulas provided, an error will be returned.

          To define the display name for a subset of the formulas, leave a blank in the position of the formula that won't be renamed. For example - If three formulas are inputted, to define display names only for the first and third formula, enter *displayName=FORMULA_1,,FORMULA_3*. The **displayName** field will still be included in that formula, but will contain the formula as inputted.
        examples:
          noNames:
            summary: '---'
            value: []
          singleItem:
            summary: Single Data Item
            value:
            - PRICE
          multipleItems:
            summary: Multiple Data Items
            value:
            - SALES
            - COMPANY NAME
            - PRICE
            - ASSETS
        explode: false
        in: query
        name: displayName
        required: false
        schema:
          items:
            example: PRICE
            type: string
          type: array
        style: form
      - description: |
          Specify **Y** for `flatten` to return a flat, table-like JSON response model instead of the standard nested JSON response model. This option is provided for easier data processing and visualization. The default value for `flatten` is **N**.

          See the **Cross-Sectional Result Object Flattened** schema for more detail on the response structure for flattened output.
        explode: false
        in: query
        name: flatten
        required: false
        schema:
          default: "N"
          enum:
          - "Y"
          - "N"
          type: string
        style: form
      - description: |
          Enables the ability to asynchronously "batch" the request,  supporting a long-running request up to **30 minutes**. Upon requesting batch=Y, the service will respond back with an HTTP Status Code of 202.

          Individual users are allowed 5 concurrent Batch Requests, while Production users are allowed 10 concurrent Batch Requests.
          *This feature is available to Individual Users subscribed to the Performance Package and Performance Package Plus Performance Tiers and all Production Users. If you are unsure which Performance Tier you are subscribed to or you would like to gain access to the batch capabilities, please contact your FactSet Account Team or "Report Issue" above and our support teams can assist.*

          Once a batch request is submitted, use `/batch-status` to see if the job has completed. Once completed, retrieve the results of the request via `/batch-result`. See the endpoints listed under *Batch Processing* for more information.
        explode: true
        in: query
        name: batch
        required: false
        schema:
          default: "N"
          enum:
          - "Y"
          - "N"
          type: string
        style: form
      - description: |-
          Specify the start date for running the Iterated Cross Sectional Functionality request either in **YYYY-MM-DD**, **YYYYMMDD** or **MM/DD/YYYY** format.
          User must have access to backtesting functionality.
        explode: false
        in: query
        name: startDate
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Specify the end date for running the Iterated Cross Sectional Functionality request either in **YYYY-MM-DD**, **YYYYMMDD** or **MM/DD/YYYY** format.
          User must have access to backtesting functionality.
        explode: false
        in: query
        name: endDate
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Specify the frequency for running the Iterated Cross Sectional Functionality request. The following frequencies are supported **D**, **W**, **M**, **AM**, **CQ**, **AY**, or **CY**.
          To learn more about frequency, please visit [Online Assistant Page 1964](https://my.apps.factset.com/oa/pages/1964#frequency). User must have access to backtesting functionality.
        examples:
          noFrequency:
            summary: '---'
            value: ""
          D:
            description: Displays data on a daily basis.
            summary: Daily
            value: D
          W:
            description: Displays data weekly, based on the last day of the completed
              trading week (usually Friday).
            summary: Weekly
            value: W
          M:
            description: Displays data monthly, based on the last trading day of the
              month.
            summary: Monthly
            value: M
          AM:
            description: Displays data monthly, based on the start date (e.g., if
              the start date is June 16th, data is displayed for June 16th, May 16th,
              April 16th, etc.).
            summary: Monthly-Actual
            value: AM
          CQ:
            description: Displays data quarterly based on the last trading day of
              the calendar quarter (March, June, September, or December).
            summary: Quarterly-Calendar
            value: CQ
          AY:
            description: Displays data annually, based on the start date (e.g, if
              the start date is October 31, 2019, data is displayed for October 31,
              2019, October 31, 2018, October 31, 2017, etc.).
            summary: Yearly-Actual
            value: AY
          CY:
            description: Displays data annually based on the last trading day of the
              calendar year.
            summary: Yearly-Calendar
            value: CY
        explode: false
        in: query
        name: frequency
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Single Equity Id and Single Equity Data Item:
                  $ref: '#/components/examples/cross-sectional-singleId-singleItem'
                Single Equity Id and Single Equity Data Item with fsymId=Y:
                  $ref: '#/components/examples/cross-sectional-singleId-singleItem-fsymId'
                Multiple Equity Ids and Multiple Equity Data Items:
                  $ref: '#/components/examples/cross-sectional-multipleId-multipleItem'
                Multiple Equity Ids and Multiple Equity Data Items with flatten=Y:
                  $ref: '#/components/examples/cross-sectional-multipleId-multipleItem-flatten'
                Multiple Equity Ids and Multiple Calculated Equity Data Items:
                  $ref: '#/components/examples/cross-sectional-multipleId-multipleCalculatedItem'
                Multiple Fixed Income Ids and Multiple Fixed Income Data Items:
                  $ref: '#/components/examples/cross-sectional-multipleFixedIncomeId-multipleItem'
                Small Equity Universe and Single Equity Data Item:
                  $ref: '#/components/examples/cross-sectional-smallUniv-singleItem'
                Debt Universe and Multiple Debt Data Items:
                  $ref: '#/components/examples/cross-sectional-debtUniv-multipleItem'
                Single ID and Multiple dates using ICSF with flatten = N:
                  $ref: '#/components/examples/cross-sectional-ICSF-singleItem-nonflatten'
                Multiple IDs and Multiple dates using ICSF with flatten = Y:
                  $ref: '#/components/examples/cross-sectional-ICSF-multipleItem-Flatten'
              schema:
                $ref: '#/components/schemas/cross_sectional_response'
          description: Gets an array of `Response Objects` for a list of IDs and Screening
            formulas.
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
            X-RateLimit-Limit-second:
              $ref: '#/components/headers/X-RateLimit-Limit-second'
            X-RateLimit-Remaining-second:
              $ref: '#/components/headers/X-RateLimit-Remaining-second'
            X-RateLimit-Limit-day:
              $ref: '#/components/headers/X-RateLimit-Limit-day'
            X-RateLimit-Remaining-day:
              $ref: '#/components/headers/X-RateLimit-Remaining-day'
        "202":
          content:
            application/json:
              examples:
                Batch Request Accepted:
                  $ref: '#/components/examples/BatchStatusAcceptedResponse'
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
          description: Batch request has been accepted.
        "400":
          content:
            application/json:
              examples:
                parameterError - Missing Formulas:
                  value:
                    id: 5EFCCA8940CAEB6E
                    code: parameterError
                    title: The parameter 'formulas' is required and may not be empty.
                    timeStamp: 2019-11-01 11:09:41.918
                parameterError - Ids and Universe:
                  description: The `ids` or `universe` parameter must be included.
                    Including `ids` and `universe` parameters in the same request
                    is not allowed.
                  value:
                    id: 5EFCCA8940CAEB6E
                    code: parameterError
                    title: Please enter either the ids or universe parameter.
                    timeStamp: 2019-11-01 11:09:41.918
                parameterError - Invalid displayName Input:
                  value:
                    id: 5EFCCA8940CAEB6E
                    code: parameterError
                    title: The length of the list provided for the displayName parameter
                      must be equal to the number of formulas requested.
                    timeStamp: 2019-11-01 11:09:41.918
                requestBodyInvalid:
                  value:
                    id: 5EFCCA8940CAEB6E
                    code: requestBodyInvalid
                    title: The request body could not be read.
                    timeStamp: 2019-11-01 11:09:41.918
                invalidCharacter:
                  value:
                    id: 5EFCCA8940CAEB6E
                    code: invalidCharacter
                    title: The request contains an invalid character. Allowed characters
                      are Unicode code points in the ranges [0x09-0x0a],[0x0d], [0x20-0x7e],
                      [0x85], [0xa0-0xd7ff], [0xe000-0xfffd], and [0x10000-0x10ffff].
                    timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Bad Request
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Unauthenticated USERNAME-SERIAL. This error will also occur
            if the API request is made from IP address not specified in the API Key
            configuration. Note that additional IP addresses can be added to an existing
            API Key configuration.
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
        "403":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: Unauthorized
                title: USERNAME-SERIAL does not have permission to use /v1/{endpoint}
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Not Authorized.
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
        "404":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: endpointNotFound
                title: '''/formula-api/v1/{invalid endpoint}'' is not a valid endpoint.'
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Endpoint Not Found
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
        "405":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: methodNotAllowed
                title: The HTTP method {unsupported method} is not allowed. Please
                  resubmit the request using the HTTP methods GET or POST.
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: badAccept
                title: 'Accept: {unsupported Accept header} is not supported. The
                  Accept header must include application/json.'
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Bad Accept Header
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
        "408":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: requestTimeout
                title: The request took too long. Try again with a smaller request.
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Request Timeout. This error may be returned if it takes more
            than 29 seconds for the request to process or if a batch request takes
            more than 30 minutes to process.
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
        "413":
          content:
            application/json:
              example:
                id: 64EA0B1B0B592002
                code: ContentTooLarge
                title: The request is too large. Please reduce the payload size or
                  leverage batching to ensure successful processing.
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Content Too Large. This error may be returned if the request
            payload size is too large to be processed in the alloted amount of time.
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
        "415":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: badContentType
                title: 'Content-Type: {unsupported Content-Type} is not supported.
                  The Content-Type header must include application/json'
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Bad Content-Type Header
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
        "429":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: toomanyrequests
                title: Rate limit is exceeded
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Rate Limits Exceeded
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
            X-RateLimit-Limit-second:
              $ref: '#/components/headers/X-RateLimit-Limit-second'
            X-RateLimit-Remaining-second:
              $ref: '#/components/headers/X-RateLimit-Remaining-second'
            X-RateLimit-Limit-day:
              $ref: '#/components/headers/X-RateLimit-Limit-day'
            X-RateLimit-Remaining-day:
              $ref: '#/components/headers/X-RateLimit-Remaining-day'
            Retry-After:
              $ref: '#/components/headers/Retry-After'
        "500":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: genericServerError
                title: An unexpected error happened.
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Generic Server Error
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
        "501":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: notImplemented
                title: The requested endpoint or functionality has not been implemented
                  yet.
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Not Implemented
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
        "503":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: serviceTemporarilyUnavailable
                title: Will be sent in case the requested service is currently overloaded
                  or can't temporarily handle the request for some other reason. Clients
                  are expected to retry the request.
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Service Temporarily Unavailable
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
      summary: Retrieve data items (Screening formulas) for a list of identifiers
        or defined universe.
      tags:
      - Cross-Sectional
      x-factset-different-success-responses: true
      x-accepts: application/json
    post:
      description: "The `/cross-sectional` endpoint is closely aligned with FactSet’\
        s powerful data retrieval **Screening language** which is optimized for analysis\
        \ of data items at single point in time for different entities and is extremely\
        \ efficient for large universes.\n\n\nThe `/cross-sectional` endpoint supports\
        \ Long Running asynchronous requests up to **30 minutes** via the `batch`\
        \ parameter. *This feature is available to Individual Users subscribed to\
        \ the Performance Package and Performance Package Plus Performance Tiers and\
        \ all Production Users. If you are unsure which Performance Tier you are subscribed\
        \ to or you would like to gain access to the batch capabilities, please contact\
        \ your FactSet Account Team or \"Report Issue\" above and our support teams\
        \ can assist.*\n\n***\n\n### Iterated Cross-Sectional Functionality\n\n\n\
        This endpoint supports the ability to automatically iterate through different\
        \ cross sections over time. The **Iterated Cross-Sectional Functionality (ICSF)**\
        \ expands the Cross-Sectional endpoint to support retrieving data items for\
        \ *multiple dates*, allowing users to take advantage of the Screening engine’\
        s efficiency even when history is required. \n\n\nUse the parameters `startDate`,\
        \ `endDate`, and `frequency` in the Cross-Sectional endpoint to provide your\
        \ desired dates. Specify “0” in date argument of the Screening formulas provided\
        \ in the formulas parameter and/or the universe parameter. Lastly, the Iterated\
        \ Cross-Sectional Functionality is required to run as a `batch` request. Therefore,\
        \ the batch parameter must be set to “Y”. \n\n\nAccess to backtesting and\
        \ batch functionality is required to leverage the Iterated Cross-Sectional\
        \ Functionality. \n\n**When to use ICSF:**\n\nThe ICSF can offer better performance\
        \ than Time-Series requests when the date range is relatively small, and so\
        \ it is recommended to use ICSF if the number of IDs requested is greater\
        \ than the number of dates. If the number of dates is greater than the number\
        \ of IDs in the request, it is recommended to use Time-Series. \n\n*Note:\
        \ This is a general rule of thumb and performance may vary depending on the\
        \ formulas in use.*\n"
      operationId: getCrossSectionalDataForList
      requestBody:
        $ref: '#/components/requestBodies/cross-sectional-postBody'
      responses:
        "200":
          content:
            application/json:
              examples:
                Single Equity Id and Single Equity Data Item:
                  $ref: '#/components/examples/cross-sectional-singleId-singleItem'
                Single Equity Id and Single Equity Data Item with fsymId=Y:
                  $ref: '#/components/examples/cross-sectional-singleId-singleItem-fsymId'
                Multiple Equity Ids and Multiple Equity Data Items:
                  $ref: '#/components/examples/cross-sectional-multipleId-multipleItem'
                Multiple Equity Ids and Multiple Equity Data Items with flatten=Y:
                  $ref: '#/components/examples/cross-sectional-multipleId-multipleItem-flatten'
                Multiple Equity Ids and Multiple Calculated Equity Data Items:
                  $ref: '#/components/examples/cross-sectional-multipleId-multipleCalculatedItem'
                Multiple Fixed Income Ids and Multiple Fixed Income Data Items:
                  $ref: '#/components/examples/cross-sectional-multipleFixedIncomeId-multipleItem'
                Small Equity Universe and Single Equity Data Item:
                  $ref: '#/components/examples/cross-sectional-smallUniv-singleItem'
                Debt Universe and Multiple Debt Data Items:
                  $ref: '#/components/examples/cross-sectional-debtUniv-multipleItem'
                Single ID and Multiple dates using ICSF with flatten = N:
                  $ref: '#/components/examples/cross-sectional-ICSF-singleItem-nonflatten'
                Multiple IDs and Multiple dates using ICSF with flatten = Y:
                  $ref: '#/components/examples/cross-sectional-ICSF-multipleItem-Flatten'
              schema:
                $ref: '#/components/schemas/cross_sectional_response'
          description: Gets an array of `Response Objects` for a list of IDs and Screening
            formulas.
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
            X-RateLimit-Limit-second:
              $ref: '#/components/headers/X-RateLimit-Limit-second'
            X-RateLimit-Remaining-second:
              $ref: '#/components/headers/X-RateLimit-Remaining-second'
            X-RateLimit-Limit-day:
              $ref: '#/components/headers/X-RateLimit-Limit-day'
            X-RateLimit-Remaining-day:
              $ref: '#/components/headers/X-RateLimit-Remaining-day'
        "202":
          content:
            application/json:
              examples:
                Batch Request Accepted:
                  $ref: '#/components/examples/BatchStatusAcceptedResponse'
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
          description: Batch request has been accepted.
        "400":
          content:
            application/json:
              examples:
                parameterError - Missing Formulas:
                  value:
                    id: 5EFCCA8940CAEB6E
                    code: parameterError
                    title: The parameter 'formulas' is required and may not be empty.
                    timeStamp: 2019-11-01 11:09:41.918
                parameterError - Ids and Universe:
                  description: The `ids` or `universe` parameter must be included.
                    Including `ids` and `universe` parameters in the same request
                    is not allowed.
                  value:
                    id: 5EFCCA8940CAEB6E
                    code: parameterError
                    title: Please enter either the ids or universe parameter.
                    timeStamp: 2019-11-01 11:09:41.918
                parameterError - Invalid displayName Input:
                  value:
                    id: 5EFCCA8940CAEB6E
                    code: parameterError
                    title: The length of the list provided for the displayName parameter
                      must be equal to the number of formulas requested.
                    timeStamp: 2019-11-01 11:09:41.918
                requestBodyInvalid:
                  value:
                    id: 5EFCCA8940CAEB6E
                    code: requestBodyInvalid
                    title: The request body could not be read.
                    timeStamp: 2019-11-01 11:09:41.918
                invalidCharacter:
                  value:
                    id: 5EFCCA8940CAEB6E
                    code: invalidCharacter
                    title: The request contains an invalid character. Allowed characters
                      are Unicode code points in the ranges [0x09-0x0a],[0x0d], [0x20-0x7e],
                      [0x85], [0xa0-0xd7ff], [0xe000-0xfffd], and [0x10000-0x10ffff].
                    timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Bad Request
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Unauthenticated USERNAME-SERIAL. This error will also occur
            if the API request is made from IP address not specified in the API Key
            configuration. Note that additional IP addresses can be added to an existing
            API Key configuration.
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
        "403":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: Unauthorized
                title: USERNAME-SERIAL does not have permission to use /v1/{endpoint}
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Not Authorized.
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
        "404":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: endpointNotFound
                title: '''/formula-api/v1/{invalid endpoint}'' is not a valid endpoint.'
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Endpoint Not Found
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
        "405":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: methodNotAllowed
                title: The HTTP method {unsupported method} is not allowed. Please
                  resubmit the request using the HTTP methods GET or POST.
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Method Not Allowed
        "406":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: badAccept
                title: 'Accept: {unsupported Accept header} is not supported. The
                  Accept header must include application/json.'
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Bad Accept Header
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
        "408":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: requestTimeout
                title: The request took too long. Try again with a smaller request.
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Request Timeout. This error may be returned if it takes more
            than 29 seconds for the request to process or if a batch request takes
            more than 30 minutes to process.
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
        "413":
          content:
            application/json:
              example:
                id: 64EA0B1B0B592002
                code: ContentTooLarge
                title: The request is too large. Please reduce the payload size or
                  leverage batching to ensure successful processing.
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Content Too Large. This error may be returned if the request
            payload size is too large to be processed in the alloted amount of time.
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
        "415":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: badContentType
                title: 'Content-Type: {unsupported Content-Type} is not supported.
                  The Content-Type header must include application/json'
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Bad Content-Type Header
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
        "429":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: toomanyrequests
                title: Rate limit is exceeded
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Rate Limits Exceeded
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
            X-RateLimit-Limit-second:
              $ref: '#/components/headers/X-RateLimit-Limit-second'
            X-RateLimit-Remaining-second:
              $ref: '#/components/headers/X-RateLimit-Remaining-second'
            X-RateLimit-Limit-day:
              $ref: '#/components/headers/X-RateLimit-Limit-day'
            X-RateLimit-Remaining-day:
              $ref: '#/components/headers/X-RateLimit-Remaining-day'
            Retry-After:
              $ref: '#/components/headers/Retry-After'
        "500":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: genericServerError
                title: An unexpected error happened.
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Generic Server Error
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
        "501":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: notImplemented
                title: The requested endpoint or functionality has not been implemented
                  yet.
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Not Implemented
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
        "503":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: serviceTemporarilyUnavailable
                title: Will be sent in case the requested service is currently overloaded
                  or can't temporarily handle the request for some other reason. Clients
                  are expected to retry the request.
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Service Temporarily Unavailable
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
      summary: Retrieve data items (Screening formulas) for a list of identifiers
        or defined universe.
      tags:
      - Cross-Sectional
      x-factset-different-success-responses: true
      x-contentType: application/json
      x-accepts: application/json
  /batch-status:
    get:
      deprecated: false
      description: |
        Return the status for the underlying batch request that is specified by the id.

          The Formula API supports Long Running asynchronous requests up to **30 minutes** via the `batch` parameter for both the `/time-series` and `/cross-sectional` endpoint.

          *This feature is available to Individual Users subscribed to the Performance Package and Performance Package Plus Performance Tiers and all Production Users. If you are unsure which Performance Tier you are subscribed to or you would like to gain access to the batch capabilities, please contact your FactSet Account Team or "Report Issue" above and our support teams can assist.*
      operationId: getBatchStatus
      parameters:
      - allowEmptyValue: false
        description: Batch Request identifier.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "201":
          content:
            application/json:
              examples:
                Batch Status Done:
                  $ref: '#/components/examples/BatchStatusDoneResponse'
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
          description: Batch Request has been completed and the response has been
            created.
          headers:
            Location:
              description: Path to Batch Request result.
              example: batch/v1/result?id=2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c
              explode: false
              schema:
                type: string
              style: simple
        "202":
          content:
            application/json:
              examples:
                Batch Status Queued:
                  $ref: '#/components/examples/BatchStatusQueuedResponse'
                Batch Status Executing:
                  $ref: '#/components/examples/BatchStatusExecutingResponse'
                Batch Status Failed - Timeout:
                  $ref: '#/components/examples/BatchStatusFailedResponseTimeout'
                Batch Status Failed - Memory Limit:
                  $ref: '#/components/examples/BatchStatusFailedResponseMemoryLimit'
                Batch Status Failed - Other:
                  $ref: '#/components/examples/BatchStatusFailedResponseOther'
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
          description: Batch Request has not finished and the result has NOT been
            created.
        "404":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: batchRequestNotFound
                title: The Batch Request was not found. It has probably expired.
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Not Found
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
      summary: Returns the status for a Batch Request
      tags:
      - Batch Processing
      x-accepts: application/json
    post:
      deprecated: false
      description: |
        Return the status for the underlying batch request that is specified by the id.

          The Formula API supports Long Running asynchronous requests up to **30 minutes** via the `batch` parameter for both the `/time-series` and `/cross-sectional` endpoint.

          *This feature is available to Individual Users subscribed to the Performance Package and Performance Package Plus Performance Tiers and all Production Users. If you are unsure which Performance Tier you are subscribed to or you would like to gain access to the batch capabilities, please contact your FactSet Account Team or "Report Issue" above and our support teams can assist.*
      operationId: getBatchStatusWithPost
      requestBody:
        $ref: '#/components/requestBodies/batch-status-postBody'
      responses:
        "201":
          content:
            application/json:
              examples:
                Batch Status Done:
                  $ref: '#/components/examples/BatchStatusDoneResponse'
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
          description: Batch Request has been completed and the response has been
            created.
          headers:
            Location:
              description: Path to Batch Request result.
              example: batch/v1/result?id=2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c
              explode: false
              schema:
                type: string
              style: simple
        "202":
          content:
            application/json:
              examples:
                Batch Status Queued:
                  $ref: '#/components/examples/BatchStatusQueuedResponse'
                Batch Status Executing:
                  $ref: '#/components/examples/BatchStatusExecutingResponse'
                Batch Status Failed - Timeout:
                  $ref: '#/components/examples/BatchStatusFailedResponseTimeout'
                Batch Status Failed - Memory Limit:
                  $ref: '#/components/examples/BatchStatusFailedResponseMemoryLimit'
                Batch Status Failed - Other:
                  $ref: '#/components/examples/BatchStatusFailedResponseOther'
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
          description: Batch Request has not finished and the result has NOT been
            created.
        "404":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: batchRequestNotFound
                title: The Batch Request was not found. It has probably expired.
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Not Found
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
      summary: Returns the status for a Batch Request
      tags:
      - Batch Processing
      x-contentType: application/json
      x-accepts: application/json
  /batch-result:
    get:
      deprecated: false
      description: |
        Returns the response data for the underlying batch request that is specified by the id.

          The Formula API supports Long Running asynchronous requests up to **30 minutes** via the `batch` parameter for both the `/time-series` and `/cross-sectional` endpoint.

          *This feature is available to Individual Users subscribed to the Performance Package and Performance Package Plus Performance Tiers and all Production Users. If you are unsure which Performance Tier you are subscribed to or you would like to gain access to the batch capabilities, please contact your FactSet Account Team or "Report Issue" above and our support teams can assist.*
      operationId: getBatchData
      parameters:
      - allowEmptyValue: false
        description: Batch Request identifier.
        explode: true
        in: query
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Time-Series Single Id and Single Data Item:
                  $ref: '#/components/examples/time-series-singleId-singleItem'
                Cross-Sectional Single Id and Single Data Item:
                  $ref: '#/components/examples/cross-sectional-singleId-singleItem'
              schema:
                $ref: '#/components/schemas/BatchDataResponse'
          description: Request Response Object when batch request has completed and
            response is created
        "202":
          content:
            application/json:
              examples:
                Batch Request Queued:
                  $ref: '#/components/examples/BatchResultQueuedResponse'
                Batch Request Executing:
                  $ref: '#/components/examples/BatchResultExecutingResponse'
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
          description: Batch Request has not finished and the result has NOT been
            created.
        "404":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: batchRequestNotFound
                title: The Batch Request was not found. It has probably expired.
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Not Found
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
      summary: Returns the response for a Batch Request
      tags:
      - Batch Processing
      x-factset-different-success-responses: true
      x-accepts: application/json
    post:
      deprecated: false
      description: |
        Returns the response data for the underlying batch request that is specified by the id.

          The Formula API supports Long Running asynchronous requests up to **30 minutes** via the `batch` parameter for both the `/time-series` and `/cross-sectional` endpoint.

          *This feature is available to Individual Users subscribed to the Performance Package and Performance Package Plus Performance Tiers and all Production Users. If you are unsure which Performance Tier you are subscribed to or you would like to gain access to the batch capabilities, please contact your FactSet Account Team or "Report Issue" above and our support teams can assist.*
      operationId: getBatchDataWithPost
      requestBody:
        $ref: '#/components/requestBodies/batch-result-postBody'
      responses:
        "200":
          content:
            application/json:
              examples:
                Time-Series Single Id and Single Data Item:
                  $ref: '#/components/examples/time-series-singleId-singleItem'
                Cross-Sectional Single Id and Single Data Item:
                  $ref: '#/components/examples/cross-sectional-singleId-singleItem'
              schema:
                $ref: '#/components/schemas/BatchDataResponse'
          description: Request Response Object when batch request has completed and
            response is created
        "202":
          content:
            application/json:
              examples:
                Batch Request Queued:
                  $ref: '#/components/examples/BatchResultQueuedResponse'
                Batch Request Executing:
                  $ref: '#/components/examples/BatchResultExecutingResponse'
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
          description: Batch Request has not finished and the result has NOT been
            created.
        "404":
          content:
            application/json:
              example:
                id: 5EFCCA8940CAEB6E
                code: batchRequestNotFound
                title: The Batch Request was not found. It has probably expired.
                timeStamp: 2019-11-01 11:09:41.918
              schema:
                $ref: '#/components/schemas/error_detail'
          description: Not Found
          headers:
            api-version:
              $ref: '#/components/headers/api-version'
            api-supported-versions:
              $ref: '#/components/headers/api-supported-versions'
            api-deprecated-versions:
              $ref: '#/components/headers/api-deprecated-versions'
            chain-id:
              $ref: '#/components/headers/chain-id'
      summary: Returns the status for a Batch Request
      tags:
      - Batch Processing
      x-factset-different-success-responses: true
      x-contentType: application/json
      x-accepts: application/json
components:
  examples:
    time-series-singleId-singleItem:
      description: |
        `time-series` Request for Single Price Record for IBM
      summary: Single Id and Single Data Item
      value:
        data:
        - error: 0
          formula: P_PRICE(0)
          requestId: IBM
          result:
            values:
            - 120.77
            dates:
            - 2020-07-09
          dataType: DOUBLE
          objectType: TIMESERIES
        meta: {}
    time-series-singleId-singleItem-fsymId:
      description: |
        `time-series` Request for Single Price Record for IBM and the fsymId for IBM
      summary: Single Id and Single Data Item with fsymId=Y
      value:
        data:
        - error: 0
          formula: P_PRICE(0)
          requestId: IBM
          fsymId: SJY281-R
          result:
            values:
            - 120.77
            dates:
            - 2020-07-09
          dataType: DOUBLE
          objectType: TIMESERIES
        meta: {}
    time-series-multipleId-multipleItem:
      description: |
        `time-series` Request for last 3 days of Price, the Company Name, the last 2 years of Business Segment Data and Business Segment Labels for IBM, AAPL, and MSFT using a SEVENDAY trading calendar
      summary: Mutiple Ids and Multiple Data Items with SEVENDAY Calendar
      value:
        data:
        - error: 0
          formula: P_PRICE(0,-2D,D)
          requestId: IBM
          result:
            dates:
            - 2021-01-18
            - 2021-01-17
            - 2021-01-16
            values:
            - 128.39
            - 128.39
            - 128.39
          dataType: DOUBLE
          objectType: TIMESERIES
        - error: 0
          formula: FG_COMPANY_NAME
          requestId: IBM
          result: International Business Machines Corporation
          dataType: STRING
          objectType: SCALAR
        - error: 0
          formula: FF_SEGMENT_RPT_LABELS(ANN_R,0,-1AY,,,,BUS,"SEG")
          requestId: IBM
          result:
          - ""
          - Global Technology Services
          - Cloud & Cognitive Software
          - Global Business Services
          - Systems
          - Global Financing
          - Other
          dataType: STRING
          objectType: ARRAY
        - error: 0
          formula: FF_SEGMENT_RPT_DATA(ANN_R,0,-1AY,,,"SALES",,BUS,"SEG")
          requestId: IBM
          result:
          - 20191231
          - 20181231
          - 27361
          - 29146
          - 23200
          - 22209
          - 16634
          - 16595
          - 7604
          - 8034
          - 1400
          - 1590
          - 948
          - 2017
          dataType: DOUBLE
          objectType: MATRIX
        - error: 0
          formula: P_PRICE(0,-2D,D)
          requestId: AAPL
          result:
            dates:
            - 2021-01-18
            - 2021-01-17
            - 2021-01-16
            values:
            - 127.14
            - 127.14
            - 127.14
          dataType: DOUBLE
          objectType: TIMESERIES
        - error: 0
          formula: FG_COMPANY_NAME
          requestId: AAPL
          result: Apple Inc.
          dataType: STRING
          objectType: SCALAR
        - error: 0
          formula: FF_SEGMENT_RPT_LABELS(ANN_R,0,-1AY,,,,BUS,"SEG")
          requestId: AAPL
          result:
          - ""
          - iPhone
          - Services
          - Wearables, Home & Accessories
          - Mac
          - iPad
          dataType: STRING
          objectType: ARRAY
        - error: 0
          formula: FF_SEGMENT_RPT_DATA(ANN_R,0,-1AY,,,"SALES",,BUS,"SEG")
          requestId: AAPL
          result:
          - 20200930
          - 20190930
          - 137781
          - 142381
          - 53768
          - 46291
          - 30620
          - 24482
          - 28622
          - 25740
          - 23724
          - 21280
          dataType: DOUBLE
          objectType: MATRIX
        - error: 0
          formula: P_PRICE(0,-2D,D)
          requestId: MSFT
          result:
            dates:
            - 2021-01-18
            - 2021-01-17
            - 2021-01-16
            values:
            - 212.65
            - 212.65
            - 212.65
          dataType: DOUBLE
          objectType: TIMESERIES
        - error: 0
          formula: FG_COMPANY_NAME
          requestId: MSFT
          result: Microsoft Corporation
          dataType: STRING
          objectType: SCALAR
        - error: 0
          formula: FF_SEGMENT_RPT_LABELS(ANN_R,0,-1AY,,,,BUS,"SEG")
          requestId: MSFT
          result:
          - ""
          - Intelligent Cloud
          - More Personal Computing
          - Productivity & Business Processes
          dataType: STRING
          objectType: ARRAY
        - error: 0
          formula: FF_SEGMENT_RPT_DATA(ANN_R,0,-1AY,,,"SALES",,BUS,"SEG")
          requestId: MSFT
          result:
          - 20200630
          - 20190630
          - 48366
          - 38985
          - 48251
          - 45698
          - 46398
          - 41160
          dataType: DOUBLE
          objectType: MATRIX
        meta: {}
    time-series-multipleId-multipleItem-flatten:
      description: |
        `time-series` Request for Flattened Response Model for the last 3 days of Price Open, Price Close, and the Company Name for IBM, AAPL, and MSFT
      summary: Mutiple Ids and Multiple Data Items with flatten=Y
      value:
        data:
        - requestId: IBM
          P_PRICE_OPEN(0,-2,D): 134.57
          date: 2021-04-08
          P_PRICE(0,-2,D): 135.12
          FG_COMPANY_NAME: International Business Machines Corporation
        - requestId: IBM
          P_PRICE_OPEN(0,-2,D): 133.84
          date: 2021-04-07
          P_PRICE(0,-2,D): 134.93
          FG_COMPANY_NAME: International Business Machines Corporation
        - requestId: IBM
          P_PRICE_OPEN(0,-2,D): 135.58
          date: 2021-04-06
          P_PRICE(0,-2,D): 134.22
          FG_COMPANY_NAME: International Business Machines Corporation
        - requestId: AAPL
          P_PRICE_OPEN(0,-2,D): 128.95
          date: 2021-04-08
          P_PRICE(0,-2,D): 130.36
          FG_COMPANY_NAME: Apple Inc.
        - requestId: AAPL
          P_PRICE_OPEN(0,-2,D): 125.83
          date: 2021-04-07
          P_PRICE(0,-2,D): 127.9
          FG_COMPANY_NAME: Apple Inc.
        - requestId: AAPL
          P_PRICE_OPEN(0,-2,D): 126.5
          date: 2021-04-06
          P_PRICE(0,-2,D): 126.21
          FG_COMPANY_NAME: Apple Inc.
        - requestId: MSFT
          P_PRICE_OPEN(0,-2,D): 252.77
          date: 2021-04-08
          P_PRICE(0,-2,D): 253.25
          FG_COMPANY_NAME: Microsoft Corporation
        - requestId: MSFT
          P_PRICE_OPEN(0,-2,D): 247.81
          date: 2021-04-07
          P_PRICE(0,-2,D): 249.9
          FG_COMPANY_NAME: Microsoft Corporation
        - requestId: MSFT
          P_PRICE_OPEN(0,-2,D): 247.61
          date: 2021-04-06
          P_PRICE(0,-2,D): 247.86
          FG_COMPANY_NAME: Microsoft Corporation
    time-series-multipleId-multipleCalculatedItem:
      description: |
        `time-series` Request to retrieve your own P/E ratio calculation from the last trading day of the company’s most recent fiscal year, the percentage of revenue exposure in the US and Japan for the same date as the first data item, and indicator of whether the average daily price change over the company’s most recent fiscal year was postive or negative for IBM,FDS, and MSFT.
      summary: Mutiple Ids and Multiple Calculated Data Items
      value:
        data:
        - error: 0
          formula: P_PRICE(0Y)/FF_EPS(ANN_R,0Y)
          requestId: IBM
          result: 12.6893365646774
          dataType: DOUBLE
          objectType: SCALAR
        - error: 0
          formula: FF_GEOREV_COUNTRY_PCT("840",ANN,0,,,RF)+FF_GEOREV_COUNTRY_PCT("392",ANN,0,,,RF)
          requestId: IBM
          result: 48.0589
          dataType: DOUBLE
          objectType: SCALAR
        - error: 0
          formula: IF(AVG(P_PRICE_CHANGE(0Y,-1Y,D,USD))>0,"POSITIVE","NEGATIVE")
          requestId: IBM
          result: POSITIVE
          dataType: STRING
          objectType: SCALAR
        - error: 0
          formula: P_PRICE(0Y)/FF_EPS(ANN_R,0Y)
          requestId: AAPL
          result: 35.3575135861269
          dataType: DOUBLE
          objectType: SCALAR
        - error: 0
          formula: FF_GEOREV_COUNTRY_PCT("840",ANN,0,,,RF)+FF_GEOREV_COUNTRY_PCT("392",ANN,0,,,RF)
          requestId: AAPL
          result: 47.580278
          dataType: DOUBLE
          objectType: SCALAR
        - error: 0
          formula: IF(AVG(P_PRICE_CHANGE(0Y,-1Y,D,USD))>0,"POSITIVE","NEGATIVE")
          requestId: AAPL
          result: POSITIVE
          dataType: STRING
          objectType: SCALAR
        - error: 0
          formula: P_PRICE(0Y)/FF_EPS(ANN_R,0Y)
          requestId: MSFT
          result: 35.3101414071311
          dataType: DOUBLE
          objectType: SCALAR
        - error: 0
          formula: FF_GEOREV_COUNTRY_PCT("840",ANN,0,,,RF)+FF_GEOREV_COUNTRY_PCT("392",ANN,0,,,RF)
          requestId: MSFT
          result: 54.971108
          dataType: DOUBLE
          objectType: SCALAR
        - error: 0
          formula: IF(AVG(P_PRICE_CHANGE(0Y,-1Y,D,USD))>0,"POSITIVE","NEGATIVE")
          requestId: MSFT
          result: POSITIVE
          dataType: STRING
          objectType: SCALAR
        meta: {}
    time-series-smallUniv-singleItem:
      description: '`time-series` Request for the last 4 quarters of sales for each
        S&P 500 constituent with a price less than 10 USD'
      summary: Small Universe and Single Data Item
      value:
        data:
        - error: 0
          formula: FF_SALES(QTR_R,0,-3,FQ)
          requestId: 25179M10
          result:
            values:
            - 162
            - 1266
            - 1705
            - 1720
            dates:
            - 2020-06-30
            - 2020-03-31
            - 2019-12-31
            - 2019-09-30
          dataType: DOUBLE
          objectType: TIMESERIES
        - error: 0
          formula: FF_SALES(QTR_R,0,-3,FQ)
          requestId: "56584910"
          result:
            values:
            - 490
            - 1024
            - 1233
            - 1249
            dates:
            - 2020-06-30
            - 2020-03-31
            - 2019-12-31
            - 2019-09-30
          dataType: DOUBLE
          objectType: TIMESERIES
        - error: 0
          formula: FF_SALES(QTR_R,0,-3,FQ)
          requestId: "63707110"
          result:
            values:
            - 1496
            - 1883
            - 2281
            - 2126
            dates:
            - 2020-06-30
            - 2020-03-31
            - 2019-12-31
            - 2019-09-30
          dataType: DOUBLE
          objectType: TIMESERIES
        - error: 0
          formula: FF_SALES(QTR_R,0,-3,FQ)
          requestId: "36960410"
          result:
            values:
            - 17830
            - 21066
            - 26159
            - 23493
            dates:
            - 2020-06-30
            - 2020-03-31
            - 2019-12-31
            - 2019-09-30
          dataType: DOUBLE
          objectType: TIMESERIES
        - error: 0
          formula: FF_SALES(QTR_R,0,-3,FQ)
          requestId: "44615010"
          result:
            values:
            - 1265
            - 1187
            - 1364
            - 1372
            dates:
            - 2020-06-30
            - 2020-03-31
            - 2019-12-31
            - 2019-09-30
          dataType: DOUBLE
          objectType: TIMESERIES
        - error: 0
          formula: FF_SALES(QTR_R,0,-3,FQ)
          requestId: "34537086"
          result:
            values:
            - 19371
            - 34320
            - 39715
            - 36990
            dates:
            - 2020-06-30
            - 2020-03-31
            - 2019-12-31
            - 2019-09-30
          dataType: DOUBLE
          objectType: TIMESERIES
        - error: 0
          formula: FF_SALES(QTR_R,0,-3,FQ)
          requestId: "03741110"
          result:
            values:
            - 752
            - 1344
            - 1625
            - 1438
            dates:
            - 2020-06-30
            - 2020-03-31
            - 2019-12-31
            - 2019-09-30
          dataType: DOUBLE
          objectType: TIMESERIES
        - error: 0
          formula: FF_SALES(QTR_R,0,-3,FQ)
          requestId: 42824C10
          result:
            values:
            - 6793
            - 5961
            - 6923
            - 7150
            dates:
            - 2020-07-31
            - 2020-04-30
            - 2020-01-31
            - 2019-10-31
          dataType: DOUBLE
          objectType: TIMESERIES
        - error: 0
          formula: FF_SALES(QTR_R,0,-3,FQ)
          requestId: G8711010
          result:
            values:
            - 3170.1000000379
            - 3140.30000000431
            - 3739.10000004292
            - 3335.7000000242
            dates:
            - 2020-06-30
            - 2020-03-31
            - 2019-12-31
            - 2019-09-30
          dataType: DOUBLE
          objectType: TIMESERIES
        meta: {}
    time-series-debtUniv-multipleItem:
      description: |
        `time-series` Request for the issuer name and amount out for all debt instruments for the Starbucks Corporation
      summary: Debt Universe and Multiple Debt Data Items
      value:
        data:
        - error: 0
          formula: FI_NAME(ISSR)
          requestId: 855244AD
          result: Starbucks Corporation
          dataType: STRING
          objectType: SCALAR
        - error: 0
          formula: FI_AMOUNT_OUT(AMT,0)
          requestId: 855244AD
          result: 750
          dataType: DOUBLE
          objectType: SCALAR
        - error: 0
          formula: FI_NAME(ISSR)
          requestId: 855244AG
          result: Starbucks Corporation
          dataType: STRING
          objectType: SCALAR
        - error: 0
          formula: FI_AMOUNT_OUT(AMT,0)
          requestId: 855244AG
          result: 500
          dataType: DOUBLE
          objectType: SCALAR
        - error: 0
          formula: FI_NAME(ISSR)
          requestId: 855244AH
          result: Starbucks Corporation
          dataType: STRING
          objectType: SCALAR
        - error: 0
          formula: FI_AMOUNT_OUT(AMT,0)
          requestId: 855244AH
          result: 350
          dataType: DOUBLE
          objectType: SCALAR
        - error: 0
          formula: FI_NAME(ISSR)
          requestId: 855244AJ
          result: Starbucks Corporation
          dataType: STRING
          objectType: SCALAR
        - error: 0
          formula: FI_AMOUNT_OUT(AMT,0)
          requestId: 855244AJ
          result: 750
          dataType: DOUBLE
          objectType: SCALAR
        - error: 0
          formula: FI_NAME(ISSR)
          requestId: 855244AK
          result: Starbucks Corporation
          dataType: STRING
          objectType: SCALAR
        - error: 0
          formula: FI_AMOUNT_OUT(AMT,0)
          requestId: 855244AK
          result: 500
          dataType: DOUBLE
          objectType: SCALAR
        - error: 0
          formula: FI_NAME(ISSR)
          requestId: 855244AM
          result: Starbucks Corporation
          dataType: STRING
          objectType: SCALAR
        - error: 0
          formula: FI_AMOUNT_OUT(AMT,0)
          requestId: 855244AM
          result: 500
          dataType: DOUBLE
          objectType: SCALAR
        - error: 0
          formula: FI_NAME(ISSR)
          requestId: 855244AN
          result: Starbucks Corporation
          dataType: STRING
          objectType: SCALAR
        - error: 0
          formula: FI_AMOUNT_OUT(AMT,0)
          requestId: 855244AN
          result: 1000
          dataType: DOUBLE
          objectType: SCALAR
        - error: 0
          formula: FI_NAME(ISSR)
          requestId: 855244AP
          result: Starbucks Corporation
          dataType: STRING
          objectType: SCALAR
        - error: 0
          formula: FI_AMOUNT_OUT(AMT,0)
          requestId: 855244AP
          result: 600
          dataType: DOUBLE
          objectType: SCALAR
        - error: 0
          formula: FI_NAME(ISSR)
          requestId: 855244AQ
          result: Starbucks Corporation
          dataType: STRING
          objectType: SCALAR
        - error: 0
          formula: FI_AMOUNT_OUT(AMT,0)
          requestId: 855244AQ
          result: 1250
          dataType: DOUBLE
          objectType: SCALAR
        - error: 0
          formula: FI_NAME(ISSR)
          requestId: 855244AR
          result: Starbucks Corporation
          dataType: STRING
          objectType: SCALAR
        - error: 0
          formula: FI_AMOUNT_OUT(AMT,0)
          requestId: 855244AR
          result: 750
          dataType: DOUBLE
          objectType: SCALAR
        - error: 0
          formula: FI_NAME(ISSR)
          requestId: 855244AS
          result: Starbucks Corporation
          dataType: STRING
          objectType: SCALAR
        - error: 0
          formula: FI_AMOUNT_OUT(AMT,0)
          requestId: 855244AS
          result: 1000
          dataType: DOUBLE
          objectType: SCALAR
        - error: 0
          formula: FI_NAME(ISSR)
          requestId: 855244AT
          result: Starbucks Corporation
          dataType: STRING
          objectType: SCALAR
        - error: 0
          formula: FI_AMOUNT_OUT(AMT,0)
          requestId: 855244AT
          result: 1000
          dataType: DOUBLE
          objectType: SCALAR
        - error: 0
          formula: FI_NAME(ISSR)
          requestId: 855244AU
          result: Starbucks Corporation
          dataType: STRING
          objectType: SCALAR
        - error: 0
          formula: FI_AMOUNT_OUT(AMT,0)
          requestId: 855244AU
          result: 1000
          dataType: DOUBLE
          objectType: SCALAR
        - error: 0
          formula: FI_NAME(ISSR)
          requestId: 855244AV
          result: Starbucks Corporation
          dataType: STRING
          objectType: SCALAR
        - error: 0
          formula: FI_AMOUNT_OUT(AMT,0)
          requestId: 855244AV
          result: 500
          dataType: DOUBLE
          objectType: SCALAR
        - error: 0
          formula: FI_NAME(ISSR)
          requestId: 855244AW
          result: Starbucks Corporation
          dataType: STRING
          objectType: SCALAR
        - error: 0
          formula: FI_AMOUNT_OUT(AMT,0)
          requestId: 855244AW
          result: 750
          dataType: DOUBLE
          objectType: SCALAR
        - error: 0
          formula: FI_NAME(ISSR)
          requestId: 855244AX
          result: Starbucks Corporation
          dataType: STRING
          objectType: SCALAR
        - error: 0
          formula: FI_AMOUNT_OUT(AMT,0)
          requestId: 855244AX
          result: 500
          dataType: DOUBLE
          objectType: SCALAR
        - error: 0
          formula: FI_NAME(ISSR)
          requestId: 855244AY
          result: Starbucks Corporation
          dataType: STRING
          objectType: SCALAR
        - error: 0
          formula: FI_AMOUNT_OUT(AMT,0)
          requestId: 855244AY
          result: 500
          dataType: DOUBLE
          objectType: SCALAR
        - error: 0
          formula: FI_NAME(ISSR)
          requestId: 855244AZ
          result: Starbucks Corporation
          dataType: STRING
          objectType: SCALAR
        - error: 0
          formula: FI_AMOUNT_OUT(AMT,0)
          requestId: 855244AZ
          result: 1250
          dataType: DOUBLE
          objectType: SCALAR
        - error: 0
          formula: FI_NAME(ISSR)
          requestId: 855244BA
          result: Starbucks Corporation
          dataType: STRING
          objectType: SCALAR
        - error: 0
          formula: FI_AMOUNT_OUT(AMT,0)
          requestId: 855244BA
          result: 1250
          dataType: DOUBLE
          objectType: SCALAR
        - error: 0
          formula: FI_NAME(ISSR)
          requestId: U8547PAA
          result: Starbucks Corporation
          dataType: STRING
          objectType: SCALAR
        - error: 0
          formula: FI_AMOUNT_OUT(AMT,0)
          requestId: U8547PAA
          result: 85000
          dataType: DOUBLE
          objectType: SCALAR
        - error: 0
          formula: FI_NAME(ISSR)
          requestId: FDS01U70
          result: Starbucks Corporation
          dataType: STRING
          objectType: SCALAR
        - error: 0
          formula: FI_AMOUNT_OUT(AMT,0)
          requestId: FDS01U70
          result: 0
          dataType: DOUBLE
          objectType: SCALAR
        - error: 0
          formula: FI_NAME(ISSR)
          requestId: FDS02JIW
          result: Starbucks Corporation
          dataType: STRING
          objectType: SCALAR
        - error: 0
          formula: FI_AMOUNT_OUT(AMT,0)
          requestId: FDS02JIW
          result: 0
          dataType: DOUBLE
          objectType: SCALAR
        - error: 0
          formula: FI_NAME(ISSR)
          requestId: FDS0F9W5
          result: Starbucks Corporation
          dataType: STRING
          objectType: SCALAR
        - error: 0
          formula: FI_AMOUNT_OUT(AMT,0)
          requestId: FDS0F9W5
          result: 0
          dataType: DOUBLE
          objectType: SCALAR
        - error: 0
          formula: FI_NAME(ISSR)
          requestId: FDS0QANF
          result: Starbucks Corporation
          dataType: STRING
          objectType: SCALAR
        - error: 0
          formula: FI_AMOUNT_OUT(AMT,0)
          requestId: FDS0QANF
          result: 0
          dataType: DOUBLE
          objectType: SCALAR
        - error: 0
          formula: FI_NAME(ISSR)
          requestId: FDS1B17O
          result: Starbucks Corporation
          dataType: STRING
          objectType: SCALAR
        - error: 0
          formula: FI_AMOUNT_OUT(AMT,0)
          requestId: FDS1B17O
          result: 0
          dataType: DOUBLE
          objectType: SCALAR
        - error: 0
          formula: FI_NAME(ISSR)
          requestId: FDSA82FD
          result: Starbucks Corporation
          dataType: STRING
          objectType: SCALAR
        - error: 0
          formula: FI_AMOUNT_OUT(AMT,0)
          requestId: FDSA82FD
          result: 0
          dataType: DOUBLE
          objectType: SCALAR
        - error: 0
          formula: FI_NAME(ISSR)
          requestId: FDSB0FB5
          result: Starbucks Corporation
          dataType: STRING
          objectType: SCALAR
        - error: 0
          formula: FI_AMOUNT_OUT(AMT,0)
          requestId: FDSB0FB5
          result: 0
          dataType: DOUBLE
          objectType: SCALAR
        - error: 0
          formula: FI_NAME(ISSR)
          requestId: 855244AA
          result: Starbucks Corporation
          dataType: STRING
          objectType: SCALAR
        - error: 0
          formula: FI_AMOUNT_OUT(AMT,0)
          requestId: 855244AA
          result: 0
          dataType: DOUBLE
          objectType: SCALAR
        - error: 0
          formula: FI_NAME(ISSR)
          requestId: 855244AB
          result: Starbucks Corporation
          dataType: STRING
          objectType: SCALAR
        - error: 0
          formula: FI_AMOUNT_OUT(AMT,0)
          requestId: 855244AB
          result: 0
          dataType: DOUBLE
          objectType: SCALAR
        - error: 0
          formula: FI_NAME(ISSR)
          requestId: 855244AC
          result: Starbucks Corporation
          dataType: STRING
          objectType: SCALAR
        - error: 0
          formula: FI_AMOUNT_OUT(AMT,0)
          requestId: 855244AC
          result: 0
          dataType: DOUBLE
          objectType: SCALAR
        - error: 0
          formula: FI_NAME(ISSR)
          requestId: 855244AE
          result: Starbucks Corporation
          dataType: STRING
          objectType: SCALAR
        - error: 0
          formula: FI_AMOUNT_OUT(AMT,0)
          requestId: 855244AE
          result: 0
          dataType: DOUBLE
          objectType: SCALAR
        - error: 0
          formula: FI_NAME(ISSR)
          requestId: 855244AF
          result: Starbucks Corporation
          dataType: STRING
          objectType: SCALAR
        - error: 0
          formula: FI_AMOUNT_OUT(AMT,0)
          requestId: 855244AF
          result: 0
          dataType: DOUBLE
          objectType: SCALAR
        - error: 0
          formula: FI_NAME(ISSR)
          requestId: 855244AL
          result: Starbucks Corporation
          dataType: STRING
          objectType: SCALAR
        - error: 0
          formula: FI_AMOUNT_OUT(AMT,0)
          requestId: 855244AL
          result: 0
          dataType: DOUBLE
          objectType: SCALAR
        - error: 0
          formula: FI_NAME(ISSR)
          requestId: FDS0QARA
          result: Starbucks Corporation
          dataType: STRING
          objectType: SCALAR
        - error: 0
          formula: FI_AMOUNT_OUT(AMT,0)
          requestId: FDS0QARA
          result: 0
          dataType: DOUBLE
          objectType: SCALAR
        - error: 0
          formula: FI_NAME(ISSR)
          requestId: FDS0VUVD
          result: Starbucks Corporation
          dataType: STRING
          objectType: SCALAR
        - error: 0
          formula: FI_AMOUNT_OUT(AMT,0)
          requestId: FDS0VUVD
          result: 0
          dataType: DOUBLE
          objectType: SCALAR
        meta: {}
    cross-sectional-singleId-singleItem:
      description: |
        `cross-sectional` Request for Single Price Record for IBM
      summary: Single Equity Id and Single Equity Data Item
      value:
        data:
        - dataItemName: requestId
          result:
          - IBM
          dataType: STRING
          error: 0
        - dataItemName: P_PRICE(0)
          result:
          - 120.77
          dataType: DOUBLE
          error: 0
        meta: {}
    cross-sectional-singleId-singleItem-fsymId:
      description: |
        `cross-sectional` Request for Single Price Record for IBM and the fsymId for IBM
      summary: Single Equity Id and Single Equity Data Item with fsymId=Y
      value:
        data:
        - dataItemName: requestId
          result:
          - IBM
          dataType: STRING
          error: 0
        - dataItemName: P_PRICE(0)
          result:
          - 120.77
          dataType: DOUBLE
          error: 0
        - dataItemName: fsymId
          result:
          - SJY281-R
          dataType: STRING
          error: 0
        meta: {}
    cross-sectional-multipleId-multipleItem:
      description: |
        `cross-sectional` Request for last fiscal year's sales, the name of the company, the price for the last completed trading day, and last fiscal year's total assets for the requested 7 identifiers
      summary: Mutiple Equity Ids and Multiple Equity Data Items
      value:
        data:
        - dataItemName: requestId
          result:
          - IBM
          - FDS
          - GE
          - GOOG
          - AAPL
          - MSFT
          - TSLA
          dataType: STRING
          error: 0
        - dataItemName: FF_SALES(ANN_R,0)
          result:
          - 77147
          - 1494.111
          - 95055
          - 161402
          - 259968
          - 143015
          - 24578
          dataType: DOUBLE
          error: 0
        - dataItemName: PROPER_NAME(0,SECURITY,NAME)
          result:
          - International Business Machines Corporation
          - FactSet Research Systems Inc.
          - General Electric Company
          - Alphabet Inc. Class C
          - Apple Inc.
          - Microsoft Corporation
          - Tesla Inc
          dataType: STRING
          error: 0
        - dataItemName: P_PRICE(0)
          result:
          - 125.52
          - 333.93
          - 7.29
          - 1534.61
          - 115.98
          - 214.22
          - 430.83
          dataType: DOUBLE
          error: 0
        - dataItemName: FF_ASSETS(ANN_R,0)
          result:
          - 152186
          - 2083.388
          - 274090
          - 275909
          - 338516
          - 301311
          - 34309
          dataType: DOUBLE
          error: 0
        meta: {}
    cross-sectional-multipleId-multipleItem-flatten:
      description: |
        `cross-sectional` Request for last fiscal year's sales, the name of the company, the price for the last completed trading day, and last fiscal year's total assets for the requested 7 identifiers
      summary: Mutiple Equity Ids and Multiple Equity Data Items with flatten=Y
      value:
        data:
        - requestId: IBM
          FF_SALES(ANN_R,0): 73620
          PROPER_NAME(0,SECURITY,NAME): International Business Machines Corporation
          P_PRICE(0): 134.93
          FF_ASSETS(ANN_R,0): 155971
        - requestId: FDS
          FF_SALES(ANN_R,0): 1494.111
          PROPER_NAME(0,SECURITY,NAME): FactSet Research Systems Inc.
          P_PRICE(0): 309.36
          FF_ASSETS(ANN_R,0): 2083.388
        - requestId: GE
          FF_SALES(ANN_R,0): 79893
          PROPER_NAME(0,SECURITY,NAME): General Electric Company
          P_PRICE(0): 13.39
          FF_ASSETS(ANN_R,0): 255050
        - requestId: GOOG
          FF_SALES(ANN_R,0): 182350
          PROPER_NAME(0,SECURITY,NAME): Alphabet Inc. Class C
          P_PRICE(0): 2249.68
          FF_ASSETS(ANN_R,0): 319616
        - requestId: AAPL
          FF_SALES(ANN_R,0): 274150
          PROPER_NAME(0,SECURITY,NAME): Apple Inc.
          P_PRICE(0): 127.9
          FF_ASSETS(ANN_R,0): 323888
        - requestId: MSFT
          FF_SALES(ANN_R,0): 143015
          PROPER_NAME(0,SECURITY,NAME): Microsoft Corporation
          P_PRICE(0): 249.9
          FF_ASSETS(ANN_R,0): 301311
        - requestId: TSLA
          FF_SALES(ANN_R,0): 31536
          PROPER_NAME(0,SECURITY,NAME): Tesla Inc
          P_PRICE(0): 670.97
          FF_ASSETS(ANN_R,0): 52148
    cross-sectional-multipleId-multipleCalculatedItem:
      description: |
        `cross-sectional` Request for to retrieve your own P/E ratio calculation from the last trading day of the company’s most recent fiscal year, the percentage of revenue exposure in the US and Japan for the same date as the first data item, and indicator of indicate whether the latest fiscal year's sales were higher or lower than the previous year's sales for IBM, FDS, GE, GOOG, AAPL, MSFT, and TSLA
      summary: Mutiple Ids and Multiple Calculated Equity Data Items
      value:
        data:
        - dataItemName: requestId
          result:
          - IBM
          - FDS
          - GE
          - GOOG
          - AAPL
          - MSFT
          - TSLA
          dataType: STRING
          error: 0
        - dataItemName: P_PRICE(0Y)/FF_EPS(ANN_R,0Y)
          result:
          - 12.3145
          - 33.9323
          - -388.737
          - 38.3806
          - 40.3096
          - 38.9243
          - -873.152
          dataType: DOUBLE
          error: 0
        - dataItemName: FF_GEOREV_COUNTRY_PCT(840,ANN,0,RF)+FF_GEOREV_COUNTRY_PCT(392,ANN,0,RF)
          result:
          - 48.0589
          - 60.992432
          - 46.614087
          - 49.366951
          - 47.580278
          - 54.971108
          - 54.065827
          dataType: DOUBLE
          error: 0
        - dataItemName: IF(FF_SALES(ANN_R,0)>FF_SALES(ANN_R,-1),"HIGHER","LOWER")
          result:
          - LOWER
          - HIGHER
          - LOWER
          - HIGHER
          - HIGHER
          - HIGHER
          - HIGHER
          dataType: STRING
          error: 0
        meta: {}
    cross-sectional-multipleFixedIncomeId-multipleItem:
      description: |
        `cross-sectional` Request for the name of the issuer and the amount outstanding for the requested 2 fixed income identifiers
      summary: Mutiple Fixed Income Ids and Multiple Fixed Income Data Items
      value:
        data:
        - dataItemName: requestId
          result:
          - U88803AB
          - 00138GAC
          dataType: STRING
          error: 0
        - dataItemName: FI_NAME(ISSR)
          result:
          - 21st Century Fox America, Inc.
          - AIG Life Holdings, Inc.
          dataType: STRING
          error: 0
        - dataItemName: FI_AMOUNT_OUT(AMT,0,USD)
          result:
          - 0.2,
          - 212
          dataType: DOUBLE
          error: 0
        meta: {}
    cross-sectional-smallUniv-singleItem:
      description: |
        `cross-sectional` Request for the company name for each S&P 500 constituent with a price less than 10 USD
      summary: Small Equity Universe and Single Equity Data Item
      value:
        data:
        - universe: (FG_CONSTITUENTS(SP50,0,CLOSE) AND P_PRICE(0,USD)<10)=1
          dataItemName: requestId
          result:
          - "56584910"
          - "63707110"
          - "36960410"
          - "44615010"
          - "34537086"
          - "03741110"
          - 42824C10
          - G8711010
          dataType: STRING
          error: 0
        - dataItemName: FG_COMPANY_NAME
          result:
          - Marathon Oil Corporation
          - National Oilwell Varco, Inc.
          - General Electric Company
          - Huntington Bancshares Incorporated
          - Ford Motor Company
          - Apache Corporation
          - Hewlett Packard Enterprise Co.
          - TechnipFMC Plc
          dataType: STRING
          error: 0
        meta: {}
    cross-sectional-debtUniv-multipleItem:
      description: |
        `cross-sectional` Request for the issuer name and amount out for all debt instruments for the Starbucks Corporation
      summary: Debt Universe and Multiple Debt Data Items
      value:
        data:
        - dataItemName: requestId
          result:
          - 855244AD
          - 855244AG
          - 855244AH
          - 855244AJ
          - 855244AK
          - 855244AM
          - 855244AN
          - 855244AP
          - 855244AQ
          - 855244AR
          - 855244AS
          - 855244AT
          - 855244AU
          - 855244AV
          - 855244AW
          - 855244AX
          - 855244AY
          - 855244AZ
          - 855244BA
          - U8547PAA
          - FDS01U70
          - FDS02JIW
          - FDS0F9W5
          - FDS0QANF
          - FDS1B17O
          - FDSA82FD
          - FDSB0FB5
          - 855244AA
          - 855244AB
          - 855244AC
          - 855244AE
          - 855244AF
          - 855244AL
          - FDS0QARA
          - FDS0VUVD
          dataType: STRING
          universe: EQUITY(P_SYMBOL)="SBUX-US"
          error: 0
        - dataItemName: FI_NAME(ISSR)
          result:
          - Starbucks Corporation
          - Starbucks Corporation
          - Starbucks Corporation
          - Starbucks Corporation
          - Starbucks Corporation
          - Starbucks Corporation
          - Starbucks Corporation
          - Starbucks Corporation
          - Starbucks Corporation
          - Starbucks Corporation
          - Starbucks Corporation
          - Starbucks Corporation
          - Starbucks Corporation
          - Starbucks Corporation
          - Starbucks Corporation
          - Starbucks Corporation
          - Starbucks Corporation
          - Starbucks Corporation
          - Starbucks Corporation
          - Starbucks Corporation
          - Starbucks Corporation
          - Starbucks Corporation
          - Starbucks Corporation
          - Starbucks Corporation
          - Starbucks Corporation
          - Starbucks Corporation
          - Starbucks Corporation
          - Starbucks Corporation
          - Starbucks Corporation
          - Starbucks Corporation
          - Starbucks Corporation
          - Starbucks Corporation
          - Starbucks Corporation
          - Starbucks Corporation
          - Starbucks Corporation
          dataType: STRING
          error: 0
        - dataItemName: FI_AMOUNT_OUT(AMT,0,USD)
          result:
          - 750
          - 500
          - 350
          - 750
          - 500
          - 500
          - 1000
          - 600
          - 1250
          - 750
          - 1000
          - 1000
          - 1000
          - 500
          - 750
          - 500
          - 500
          - 1250
          - 1250
          - 815.699808132134
          - null
          - null
          - null
          - null
          - null
          - null
          - null
          - 0
          - 0
          - 0
          - 0
          - 0
          - 0
          - null
          - null
          dataType: DOUBLE
          error: 0
        meta: {}
    cross-sectional-ICSF-singleItem-nonflatten:
      description: |
        `Iterated Cross-Sectional Functionality` Request for the monthly price of Netflix Inc. for the year of 2022.
      summary: Single ID and Multiple Dates using ICSF with flatten = N
      value:
        data:
        - dataItemName: requestId
          result:
          - NFLX-USA
          - NFLX-USA
          - NFLX-USA
          - NFLX-USA
          - NFLX-USA
          - NFLX-USA
          - NFLX-USA
          - NFLX-USA
          - NFLX-USA
          - NFLX-USA
          - NFLX-USA
          - NFLX-USA
          dataType: STRING
          error: 0
        - dataItemName: P_PRICE(0)
          result:
          - 427.14
          - 394.52
          - 374.59
          - 190.36
          - 197.44
          - 174.87
          - 224.9
          - 223.56
          - 235.44
          - 291.88
          - 305.53
          - 294.88
          dataType: DOUBLE
          error: 0
        - dataItemName: PROPER_NAME
          result:
          - Netflix, Inc.
          - Netflix, Inc.
          - Netflix, Inc.
          - Netflix, Inc.
          - Netflix, Inc.
          - Netflix, Inc.
          - Netflix, Inc.
          - Netflix, Inc.
          - Netflix, Inc.
          - Netflix, Inc.
          - Netflix, Inc.
          - Netflix, Inc.
          dataType: STRING
          error: 0
        - dataItemName: date
          result:
          - 2022-01-31
          - 2022-02-28
          - 2022-03-31
          - 2022-04-29
          - 2022-05-31
          - 2022-06-30
          - 2022-07-29
          - 2022-08-31
          - 2022-09-30
          - 2022-10-31
          - 2022-11-30
          - 2022-12-30
          dataType: STRING
          error: 0
        meta: {}
    cross-sectional-ICSF-multipleItem-Flatten:
      description: |
        `Iterated Cross-Sectional Functionality` Request for the weekly sales of Netflix Inc., Walt Disney Company, and Warner Bros. Discovery Inc. for the month of March 2020.
      summary: Multiple IDs and Multiple Dates using ICSF with flatten = Y
      value:
        data:
        - requestId: NFLX-USA
          date: 2020-02-28
          FF_SALES(ANN_R,0): 20156.447
        - requestId: DIS-USA
          date: 2020-02-28
          FF_SALES(ANN_R,0): 69422
        - requestId: WBD-USA
          date: 2020-02-28
          FF_SALES(ANN_R,0): 11133
        - requestId: NFLX-USA
          date: 2020-03-06
          FF_SALES(ANN_R,0): 20156.447
        - requestId: DIS-USA
          date: 2020-03-06
          FF_SALES(ANN_R,0): 69422
        - requestId: WBD-USA
          date: 2020-03-06
          FF_SALES(ANN_R,0): 11133
        - requestId: NFLX-USA
          date: 2020-03-13
          FF_SALES(ANN_R,0): 20156.447
        - requestId: DIS-USA
          date: 2020-03-13
          FF_SALES(ANN_R,0): 69422
        - requestId: WBD-USA
          date: 2020-03-13
          FF_SALES(ANN_R,0): 11133
        - requestId: NFLX-USA
          date: 2020-03-20
          FF_SALES(ANN_R,0): 20156.447
        - requestId: DIS-USA
          date: 2020-03-20
          FF_SALES(ANN_R,0): 69422
        - requestId: WBD-USA
          date: 2020-03-20
          FF_SALES(ANN_R,0): 11133
        - requestId: NFLX-USA
          date: 2020-03-27
          FF_SALES(ANN_R,0): 20156.447
        - requestId: DIS-USA
          date: 2020-03-27
          FF_SALES(ANN_R,0): 69422
        - requestId: WBD-USA
          date: 2020-03-27
          FF_SALES(ANN_R,0): 11133
    BatchStatusAcceptedResponse:
      description: Batch Status Accepted Response
      value:
        data:
          id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c
          status: QUEUED
          startTime: 2021-06-29T18:34:52.168Z
          endTime: null
          error: null
    BatchStatusQueuedResponse:
      description: Batch Status Queued Response
      value:
        data:
          id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c
          status: QUEUED
          startTime: 2021-06-29T18:34:52.168Z
          endTime: null
          error: null
    BatchStatusExecutingResponse:
      description: Batch Status Executing Response
      value:
        data:
          id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c
          status: EXECUTING
          startTime: 2021-06-29T18:34:52.168Z
          endTime: null
          error: null
    BatchResultQueuedResponse:
      description: Batch Result Queued Response
      value:
        errors:
          id: 618AC9B50DE76980
          code: Accepted
          title: Please check the status endpoint until the batch request has a status
            of DONE and then retrieve the results from the results endpoint.
          timestamp: 2022-01-18 18:29:59.189
    BatchResultExecutingResponse:
      description: Batch Result Executing Response
      value:
        errors:
          id: 618AC9B50DE76980
          code: Accepted
          title: Please check the status endpoint until the batch request has a status
            of DONE and then retrieve the results from the results endpoint.
          timestamp: 2022-01-18 18:29:59.189
    BatchStatusDoneResponse:
      description: Batch Status Done Response
      value:
        data:
          id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c
          status: DONE
          startTime: 2021-06-29T18:34:52.168Z
          endTime: 2021-06-29T18:34:55.402Z
          error: null
    BatchStatusFailedResponseTimeout:
      description: Batch Status Failed Response - Timeout. The example response shows
        the result of checking the status of a batch request that took longer than
        30 minutes to calculate and timed out.
      value:
        data:
          id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c
          status: FAILED
          startTime: 2021-06-29T18:34:52.168Z
          endTime: 2021-06-29T18:44:55.402Z
          error: timeout
    BatchStatusFailedResponseMemoryLimit:
      description: Batch Status Failed Response - MemoryLimit. The example response
        shows the result of checking the status of a batch request that exceeded the
        memory limit.
      value:
        data:
          id: 0a0452e2-3937-441d-b376-f2733a938587
          status: FAILED
          startTime: 2023-09-15T00:07:46.501947Z
          endTime: 2023-09-15T00:08:53.936218Z
          error: The request size is too large. Try again with a smaller request.
    BatchStatusFailedResponseOther:
      description: Batch Status Failed Response - Other. The example response shows
        the result of checking the status of a batch request that failed unexpectedly.
        If you encounter this error, please contact FactSet support.
      value:
        data:
          id: 43839790-a64e-452a-b8f0-fc26117bd9f4
          status: FAILED
          startTime: 2023-09-20T13:37:13.653411Z
          endTime: 2023-09-20T13:38:25.841134Z
          error: Something went wrong. Contact FactSet for support.
  headers:
    api-version:
      description: the full semantic version of the API.
      explode: false
      schema:
        example: 1.0.0
        type: string
      style: simple
    api-supported-versions:
      description: the comma-separated list of supported major versions.
      explode: false
      schema:
        example: "1"
        type: string
      style: simple
    api-deprecated-versions:
      description: the comma-separated list of deprecated major versions.
      explode: false
      schema:
        example: 1,2
        type: string
      style: simple
    chain-id:
      description: Unique identifier for the request. Also known as the chain id.
      explode: false
      schema:
        example: 5EFCCA8940CAEA6B
        type: string
      style: simple
    X-RateLimit-Limit-second:
      description: Number of allowed requests per second.
      explode: false
      schema:
        example: 5
        type: integer
      style: simple
    X-RateLimit-Remaining-second:
      description: Number of requests currently available in second.
      explode: false
      schema:
        example: 4
        type: integer
      style: simple
    X-RateLimit-Limit-day:
      description: Number of allowed requests per day.
      explode: false
      schema:
        example: 1000
        type: integer
      style: simple
    X-RateLimit-Remaining-day:
      description: Number of requests currently available in day.
      explode: false
      schema:
        example: 854
        type: integer
      style: simple
    Retry-After:
      description: Number of seconds the service is expected to be unavailable to
        the client. This header will be present on 429 errors.
      explode: false
      schema:
        example: 62
        type: integer
      style: simple
  parameters:
    ids:
      description: |
        List of entity identifiers. This request value is sent back in the response as the field *requestId*. By default, accepted symbol types include Market Tickers, SEDOLs, ISINs, CUSIPs, or FactSet Permanent Ids. Use the `symbolType` parameter to submit other supported third-party identifier types.

        The `ids` and `universe` parameters provide two different ways to specify the identifiers for which you want data retrieved. Please enter either the `ids` or `universe` parameter.
      examples:
        singleId:
          summary: Single id
          value:
          - IBM
        multipleIds:
          summary: Multiple ids
          value:
          - IBM
          - AAPL
          - MSFT
      explode: false
      in: query
      name: ids
      required: false
      schema:
        items:
          example: FDS-US
          type: string
        type: array
      style: form
    symbolType:
      description: "Specify the type of symbols submitted in the `ids` parameter.\
        \ This is only required when submitting ids that are not supported by default.\
        \ \n\nAvailable symbol types -\n* DEFAULT - Accepted symbol types include\
        \ Market Tickers, SEDOLs, ISINs, CUSIPs, or FactSet Permanent Ids.\n\n* BLOOMBERG\
        \ - Accepted symbol types include Bloomberg Tickers and Bloomberg FIGIs. \n\
        \  * When submitting Bloomberg symbols, the Bloomberg symbol is translated\
        \ to a FactSet Permanent Identifier which is then used to retrieve the requested\
        \ FQL and Screening formulas. The Bloomberg symbol submitted will be returned\
        \ in the response in the field *requestId*. To see the FactSet Permanent Identifer\
        \ that the Bloomberg symbol resolved to, use the `fsymId` parameter in addition\
        \ to the `symbolType` parameter.\n  * Bloomberg symbols can not be submitted\
        \ with other symbol types. \n  * Bloomberg Symbol Resolution is not available\
        \ via Batch Requests.\n\nBloomberg Symbol Resolution is included with the\
        \ Individual User subscription. Users with a Production User subscription\
        \ require additional access to submit Bloomberg symbols. If you would like\
        \ to gain access to Bloomberg Symbol Resolution, please contact your FactSet\
        \ Account Team or \"Report Issue\" above and our support teams can assist.\n"
      explode: false
      in: query
      name: symbolType
      required: false
      schema:
        default: DEFAULT
        enum:
        - DEFAULT
        - BLOOMBERG
        type: string
      style: form
    universe:
      description: |
        Screening expression to limit the universe

        Please enter either the `ids` or `universe` parameter.
      examples:
        noUniverse:
          summary: '---'
          value: ""
        oneCriteria:
          summary: Equity Universe - S&P 500 Constituents
          value: FG_CONSTITUENTS(SP50,0,CLOSE)
        twoCriteria:
          summary: Equity Universe -  S&P 500 Constituents with Price < 10 USD
          value: (FG_CONSTITUENTS(SP50,0,CLOSE) AND P_PRICE(0,USD)<10)=1
        debtUniverse:
          description: |
            The issuer name and amount out for all debt instruments for the Starbucks Corporation

            To calculate fixed income universe, `universeType` must be set to **DEBT**.
          summary: Debt Universe - Starbucks Debt
          value: EQUITY(P_SYMBOL)='SBUX-US'
      explode: false
      in: query
      name: universe
      required: false
      schema:
        type: string
      style: form
    universeType_time_series:
      description: |
        Specify the universe type to calculate the `universe` in.

        Find documentation below on how to build a screen for each universe type -
        * Equity Screen - [Online Assistant Page 20606](https://my.apps.factset.com/oa/pages/20606)

        * Debt Screen - [Online Assistant Page 20888](https://my.apps.factset.com/oa/pages/20888)

        * Fund Screen - [Online Assistant Page 21384](https://my.apps.factset.com/oa/pages/21384)

        This parameter may only be used in conjunction with the `universe` parameter.
      explode: false
      in: query
      name: universeType
      required: false
      schema:
        default: EQUITY
        enum:
        - EQUITY
        - DEBT
        - FUND
        type: string
      style: form
    universeType_cross_sectional:
      description: |
        Specify the universe type to calculate the `universe` in.

        Find documentation below on how to build a screen for each universe type -
        * Equity Screen - [Online Assistant Page 20606](https://my.apps.factset.com/oa/pages/20606)

        * Debt Screen - [Online Assistant Page 20888](https://my.apps.factset.com/oa/pages/20888)

        * Fund Screen - [Online Assistant Page 21384](https://my.apps.factset.com/oa/pages/21384)
      explode: false
      in: query
      name: universeType
      required: false
      schema:
        default: EQUITY
        enum:
        - EQUITY
        - DEBT
        - FUND
        type: string
      style: form
    formulas_time_series:
      description: List of FQL formulas
      examples:
        singleItem:
          summary: Single Data Item
          value:
          - P_PRICE(0)
        multipleItems:
          summary: Multiple Data Items
          value:
          - P_PRICE(0,-2,D)
          - FG_COMPANY_NAME
          - FF_SEGMENT_RPT_LABELS(ANN_R,0,-1AY,,,,BUS,"SEG")
          - FF_SEGMENT_RPT_DATA(ANN_R,0,-1AY,,,"SALES",,BUS,"SEG")
        multipleItemsFlatten:
          summary: Multiple TIMESERIES Data Items
          value:
          - P_PRICE_OPEN(0,-2,D)
          - P_PRICE(0,-2,D)
          - FG_COMPANY_NAME
        debtDataItems:
          summary: Multiple Debt Data Items
          value:
          - FI_NAME(ISSR)
          - FI_AMOUNT_OUT(AMT,0,USD)
        calculatedDataItems:
          description: |
            These data items showcase the ability to include logic, mathematical operations, and other functions in the request itself.

            The first data item using the division operator to calculate a P/E ratio from the last trading day of the company’s most recent fiscal year.

            The second data item uses the addition operator to calculate percentage of revenue exposure in the US and Japan for the same date as the first data item. Note that due to URI defintion of the plus sign, the **+** symbol must be URL percent encoded as **%2B** in GET requests. This means you should use **%2B** in place of the symbol **+** in the request.

            The third data item uses the average function (**AVG**) and the **IF** function to indicate whether the average daily price change over the company’s most recent fiscal year is postive or negative.

            You can find more information about the different functions you can use in FQL at the following Online Assistant pages -
            * Mathematical Operators - [Online Assistant Page 10600](https://my.apps.factset.com/oa/pages/10600)
            * Logical Functions - [Online Assistant Page 11485](https://my.apps.factset.com/oa/pages/1485)
            * Categorical List of All Functions - [Online Assistant Page 1411](https://my.apps.factset.com/oa/pages/1411)
          summary: Multiple Calculated Data Items
          value:
          - P_PRICE(0Y)/FF_EPS(ANN_R,0Y)
          - FF_GEOREV_COUNTRY_PCT("840",ANN,0,,,RF)%2BFF_GEOREV_COUNTRY_PCT("392",ANN,0,,,RF)
          - IF(AVG(P_PRICE_CHANGE(0Y,-1Y,D,USD))>0,"POSITIVE","NEGATIVE")
      explode: false
      in: query
      name: formulas
      required: true
      schema:
        items:
          example: P_PRICE(0,-2,D)
          type: string
        type: array
      style: form
    formulas_cross_sectional:
      description: List of Screening formulas
      examples:
        singleItem:
          summary: Single Equity Data Item
          value:
          - P_PRICE(0)
        multipleItems:
          summary: Multiple Equity Data Items
          value:
          - FF_SALES(ANN_R,0)
          - PROPER_NAME(0,SECURITY,NAME)
          - P_PRICE(0)
          - FF_ASSETS(ANN_R,0)
        calculatedItems:
          description: |
            These data items showcase the ability to include logic, mathematical operations, and other functions in the request itself.

            The first data item using the division operator to calculate a P/E ratio from the last trading day of the company’s most recent fiscal year.

            The second data item uses the addition operator to calculate percentage of revenue exposure in the US and Japan for the same date as the first data item. Note that due to URI defintion of the plus sign, the **+** symbol must be URL percent encoded as **%2B** in GET requests. This means you should use **%2B** in place of the symbol **+** in the request.

            The third data item uses the **IF** function and greater than operator (**>**) to indicate whether the latest fiscal year's sales were higher or lower than the previous year's sales.

            You can find more information about the different functions you can use in FQL at the following Online Assistant pages -
            * Mathematical Operators - [Online Assistant Page 10600](https://my.apps.factset.com/oa/pages/10600)
            * Logical Functions - [Online Assistant Page 11485](https://my.apps.factset.com/oa/pages/1485)
            * Categorical List of All Functions - [Online Assistant Page 1411](https://my.apps.factset.com/oa/pages/1411)
          summary: Multiple Calculated Data Items
          value:
          - P_PRICE(0Y)/FF_EPS(ANN_R,0Y)
          - FF_GEOREV_COUNTRY_PCT(840,ANN,0,RF)%2BFF_GEOREV_COUNTRY_PCT(392,ANN,0,RF)
          - IF(FF_SALES(ANN_R,0)>FF_SALES(ANN_R,-1),"HIGHER","LOWER")
        multipleFixedIncomeItems:
          description: |
            To retrieve fixed income data, `universeType` must be set to **DEBT**.
          summary: Multiple Fixed Income Data Items
          value:
          - FI_NAME(ISSR)
          - FI_AMOUNT_OUT(AMT,0,USD)
      explode: false
      in: query
      name: formulas
      required: true
      schema:
        items:
          type: string
        type: array
      style: form
    backTestDate:
      description: |
        Specify the backtest date either in **YYYY-MM-DD**, **YYYYMMDD** or **MM/DD/YYYY** format.

        To learn more about backtesting, please visit [Online Assistant Page 20610](https://my.apps.factset.com/oa/pages/20610#backtest). User must have access to backtesting functionality.
      explode: false
      in: query
      name: backTestDate
      required: false
      schema:
        type: string
      style: form
    calendar_time_series:
      description: Calendar of data returned. The default value is FIVEDAY which displays
        Monday through Friday, regardless of whether there were trading holidays.
      examples:
        fiveday:
          description: Displays Monday through Friday, regardless of whether there
            were trading holidays. This is the default for `calendar`.
          summary: FIVEDAY
          value: FIVEDAY
        sevenday:
          description: Displays Monday through Sunday.
          summary: SEVENDAY
          value: SEVENDAY
        local:
          description: Uses the local trading calendar for each security. Local exchange
            holidays will be skipped.
          summary: LOCAL
          value: LOCAL
        region:
          description: The calendar of a specific region. The example shown here 'NAY'
            is for the UNITED STATES calendar. You can find the calendar codes for
            regions on [Online Assistant Page 16610](https://my.apps.factset.com/oa/pages/16610#country).
          summary: Region Specific
          value: NAY
      explode: true
      in: query
      name: calendar
      required: false
      schema:
        type: string
      style: form
    calendar_cross_sectional:
      description: Calendar of data returned. The default value is FIVEDAY which displays
        Monday through Friday, regardless of whether there were trading holidays.
      examples:
        fiveday:
          description: Displays Monday through Friday, regardless of whether there
            were trading holidays. This is the default for `calendar`.
          summary: FIVEDAY
          value: FIVEDAY
        sevenday:
          description: Displays Monday through Sunday.
          summary: SEVENDAY
          value: SEVENDAY
        region:
          description: The calendar of a specific region. The example shown here 'NAY'
            is for the UNITED STATES calendar. You can find the calendar codes for
            regions on [Online Assistant Page 16610](https://my.apps.factset.com/oa/pages/16610#country).
          summary: Region Specific
          value: NAY
      explode: true
      in: query
      name: calendar
      required: false
      schema:
        type: string
      style: form
    fsymId_time_series:
      description: |
        Specify **Y** for the `fsymId` parameter to return the **fsymId** (FactSet Default Permanent Identifier) of the `requestId`, in addition to the **requestId** field, in each response object. The default value for the `fsymId` parameter is **N**.

        The **fsymId** field returned is the FactSet Default Permanent Identifier for the `requestId`. For all supported `requestId` symbol types, the `fsymId` parameter will return the Regional Level PermId '-R' which identifies the security’s best regional security data series per currency. Currently, the fsymId parameter only supports equities. Accepted `requestId` symbol types include all FactSet Permanent Identifiers types, CUSIP, SEDOL, ISIN, and Tickers. Further documentation can be found at this [Online Assistant attachment](https://oa.apps.factset.com/cms/oaAttachment/64c3213a-f415-4c27-a336-92c73a72deed/24881).
      explode: false
      in: query
      name: fsymId
      required: false
      schema:
        default: "N"
        enum:
        - "Y"
        - "N"
        type: string
      style: form
    fsymId_cross_sectional:
      description: |
        Specify **Y** for `fsymId` to return an additional response object containing the data
        item **fsymId** which will contain the fsymIds of the requestIds. This is in addition to the
        response object containing the data item **requestId**. The default value for `fsymId`
        is **N**.

        The **fsymId** field returned is the FactSet Default Permanent Identifier for the `requestId`. For all supported `requestId` symbol types, the `fsymId` parameter will return the Regional Level PermId '-R' which identifies the security’s best regional security data series per currency. Currently, the fsymId parameter only supports equities. Accepted `requestId` symbol types include all FactSet Permanent Identifiers types, CUSIP, SEDOL, ISIN, and Tickers. Further documentation can be found at this [Online Assistant attachment](https://oa.apps.factset.com/cms/oaAttachment/64c3213a-f415-4c27-a336-92c73a72deed/24881).
      explode: false
      in: query
      name: fsymId
      required: false
      schema:
        default: "N"
        enum:
        - "Y"
        - "N"
        type: string
      style: form
    displayName_time_series:
      description: |
        Define display names for the formulas inputted. Enter the list of display names in the same order as the formulas inputted. An additional field **displayName** will be returned in the data object for a formula.

        If the number of display names does not match the number of formulas provided, an error will be returned.

        To define the display name for a subset of the formulas, leave a blank in the position of the formula that won't be renamed. For example - If three formulas are inputted, to define display names only for the first and third formula, enter *displayName=FORMULA_1,,FORMULA_3*. The **displayName** field will still be included in that formula, but will contain the formula as inputted.
      examples:
        noNames:
          summary: '---'
          value: []
        singleItem:
          summary: Single Data Item
          value:
          - PRICE
        multipleItems:
          summary: Multiple Data Items
          value:
          - PRICE
          - COMPANY NAME
          - BUSINESS SEGMENT
          - SALES SEGMENT
      explode: false
      in: query
      name: displayName
      required: false
      schema:
        items:
          example: PRICE
          type: string
        type: array
      style: form
    displayName_cross_sectional:
      description: |
        Define display names for the formulas inputted. Enter the list of display names in the same order as the formulas inputted. An additional field **displayName** will be returned in the data object for a formula.

        If the number of display names does not match the number of formulas provided, an error will be returned.

        To define the display name for a subset of the formulas, leave a blank in the position of the formula that won't be renamed. For example - If three formulas are inputted, to define display names only for the first and third formula, enter *displayName=FORMULA_1,,FORMULA_3*. The **displayName** field will still be included in that formula, but will contain the formula as inputted.
      examples:
        noNames:
          summary: '---'
          value: []
        singleItem:
          summary: Single Data Item
          value:
          - PRICE
        multipleItems:
          summary: Multiple Data Items
          value:
          - SALES
          - COMPANY NAME
          - PRICE
          - ASSETS
      explode: false
      in: query
      name: displayName
      required: false
      schema:
        items:
          example: PRICE
          type: string
        type: array
      style: form
    flatten_time_series:
      description: |
        Specify **Y** for `flatten` to return a flat, table-like JSON response model instead of the standard nested JSON response model. This option is provided for easier data processing and visualization. The default value for `flatten` is **N**.

        See the **Time-Series Result Object Flattened** schema for more detail on the response structure for flattened output.
      explode: false
      in: query
      name: flatten
      required: false
      schema:
        default: "N"
        enum:
        - "Y"
        - "N"
        type: string
      style: form
    flatten_cross_sectional:
      description: |
        Specify **Y** for `flatten` to return a flat, table-like JSON response model instead of the standard nested JSON response model. This option is provided for easier data processing and visualization. The default value for `flatten` is **N**.

        See the **Cross-Sectional Result Object Flattened** schema for more detail on the response structure for flattened output.
      explode: false
      in: query
      name: flatten
      required: false
      schema:
        default: "N"
        enum:
        - "Y"
        - "N"
        type: string
      style: form
    dates_time_series:
      description: |
        Specify **N** for the `dates` parameter to suppress the **dates** of the response. The default value for the `dates` parameter is **Y**. Setting the parameter to **Y** will only return dates if the formula has a date value associated with it.

        In the non-flattened response model, setting dates to **N** will remove the "dates" array from the TIMESERIES objectType, meaning that the results will be returned as an ARRAY objectType.

        In the flattened response mode, setting dates to **N** will remove the "dates" attribute from the response objects. The flatten parameter first attempts to flatten the response by dates. Removing the dates can make it easier to align multiple data items when the date definition differs from the desired alignment.
      explode: false
      in: query
      name: dates
      required: false
      schema:
        default: "Y"
        enum:
        - "Y"
        - "N"
        type: string
      style: form
    batch:
      description: |
        Enables the ability to asynchronously "batch" the request,  supporting a long-running request up to **30 minutes**. Upon requesting batch=Y, the service will respond back with an HTTP Status Code of 202.

        Individual users are allowed 5 concurrent Batch Requests, while Production users are allowed 10 concurrent Batch Requests.
        *This feature is available to Individual Users subscribed to the Performance Package and Performance Package Plus Performance Tiers and all Production Users. If you are unsure which Performance Tier you are subscribed to or you would like to gain access to the batch capabilities, please contact your FactSet Account Team or "Report Issue" above and our support teams can assist.*

        Once a batch request is submitted, use `/batch-status` to see if the job has completed. Once completed, retrieve the results of the request via `/batch-result`. See the endpoints listed under *Batch Processing* for more information.
      explode: true
      in: query
      name: batch
      required: false
      schema:
        default: "N"
        enum:
        - "Y"
        - "N"
        type: string
      style: form
    batchId:
      allowEmptyValue: false
      description: Batch Request identifier.
      explode: true
      in: query
      name: id
      required: true
      schema:
        format: uuid
        type: string
      style: form
    startDate:
      description: |-
        Specify the start date for running the Iterated Cross Sectional Functionality request either in **YYYY-MM-DD**, **YYYYMMDD** or **MM/DD/YYYY** format.
        User must have access to backtesting functionality.
      explode: false
      in: query
      name: startDate
      required: false
      schema:
        type: string
      style: form
    endDate:
      description: |-
        Specify the end date for running the Iterated Cross Sectional Functionality request either in **YYYY-MM-DD**, **YYYYMMDD** or **MM/DD/YYYY** format.
        User must have access to backtesting functionality.
      explode: false
      in: query
      name: endDate
      required: false
      schema:
        type: string
      style: form
    frequency:
      description: |-
        Specify the frequency for running the Iterated Cross Sectional Functionality request. The following frequencies are supported **D**, **W**, **M**, **AM**, **CQ**, **AY**, or **CY**.
        To learn more about frequency, please visit [Online Assistant Page 1964](https://my.apps.factset.com/oa/pages/1964#frequency). User must have access to backtesting functionality.
      examples:
        noFrequency:
          summary: '---'
          value: ""
        D:
          description: Displays data on a daily basis.
          summary: Daily
          value: D
        W:
          description: Displays data weekly, based on the last day of the completed
            trading week (usually Friday).
          summary: Weekly
          value: W
        M:
          description: Displays data monthly, based on the last trading day of the
            month.
          summary: Monthly
          value: M
        AM:
          description: Displays data monthly, based on the start date (e.g., if the
            start date is June 16th, data is displayed for June 16th, May 16th, April
            16th, etc.).
          summary: Monthly-Actual
          value: AM
        CQ:
          description: Displays data quarterly based on the last trading day of the
            calendar quarter (March, June, September, or December).
          summary: Quarterly-Calendar
          value: CQ
        AY:
          description: Displays data annually, based on the start date (e.g, if the
            start date is October 31, 2019, data is displayed for October 31, 2019,
            October 31, 2018, October 31, 2017, etc.).
          summary: Yearly-Actual
          value: AY
        CY:
          description: Displays data annually based on the last trading day of the
            calendar year.
          summary: Yearly-Calendar
          value: CY
      explode: false
      in: query
      name: frequency
      required: false
      schema:
        type: string
      style: form
  requestBodies:
    time-series-postBody:
      content:
        application/json:
          examples:
            time-series-singleId-singleItem:
              summary: |
                Single Id and Single formula
              value:
                data:
                  ids:
                  - IBM
                  formulas:
                  - P_PRICE(0)
            time-series-singleId-singleItem-fsymId:
              summary: |
                Single Id and Single Data Item with fsymId=Y
              value:
                data:
                  ids:
                  - IBM
                  formulas:
                  - P_PRICE(0)
                  fsymId: "Y"
            time-series-multipleId-mulipleItem:
              summary: |
                Multiple Ids and Multiple Data Items with SEVENDAY Calendar
              value:
                data:
                  ids:
                  - IBM
                  - AAPL
                  - MSFT
                  formulas:
                  - P_PRICE(0,-2D,D)
                  - FG_COMPANY_NAME
                  - FF_SEGMENT_RPT_LABELS(ANN_R,0,-1AY,,,,BUS,"SEG")
                  - FF_SEGMENT_RPT_DATA(ANN_R,0,-1AY,,,"SALES",,BUS,"SEG")
                  calendar: SEVENDAY
            time-series-multipleItemsFlatten:
              summary: |
                Multiple Ids and Multiple Data Items with flatten=Y
              value:
                data:
                  ids:
                  - IBM
                  - AAPL
                  - MSFT
                  formulas:
                  - P_PRICE_OPEN(0,-2,D)
                  - P_PRICE(0,-2,D)
                  - FG_COMPANY_NAME
                  flatten: "Y"
            time-series-multipleId-mulipleCalculatedItem:
              description: |
                The first data item using the division operator to calculate a P/E ratio from the last trading day of the company’s most recent fiscal year.

                The second data item uses the addition operator to calculate percentage of revenue exposure in the US and Japan for the same date as the first data item.

                The third data item uses the average function (**AVG**) and the **IF** function to indicate whether the average daily price change over the company’s most recent fiscal year was postive or negative.

                You can find more information about the different functions you can use in FQL at the following Online Assistant pages -
                * Mathematical Operators - [Online Assistant Page 10600](https://my.apps.factset.com/oa/pages/10600)
                * Logical Functions - [Online Assistant Page 11485](https://my.apps.factset.com/oa/pages/1485)
                * Categorical List of All Functions - [Online Assistant Page 1411](https://my.apps.factset.com/oa/pages/1411)
              summary: |
                Multiple Ids and Multiple Calculated Data Items
              value:
                data:
                  ids:
                  - IBM
                  - AAPL
                  - MSFT
                  formulas:
                  - P_PRICE(0Y)/FF_EPS(ANN_R,0Y)
                  - FF_GEOREV_COUNTRY_PCT("840",ANN,0,,,RF)+FF_GEOREV_COUNTRY_PCT("392",ANN,0,,,RF)
                  - IF(AVG(P_PRICE_CHANGE(0Y,-1Y,D,USD))>0,"POSITIVE","NEGATIVE")
            time-series-smallUniv-singleItem:
              summary: |
                Small Universe and Single Data Item
              value:
                data:
                  universe: (FG_CONSTITUENTS(SP50,0,CLOSE) AND P_PRICE(0,USD)<10)=1
                  formulas:
                  - FF_SALES(QTR_R,0,-3,FQ)
            time-series-debtUniv-multipleItem:
              summary: |
                Debt Universe and Multiple Debt Data Items
              value:
                data:
                  universe: EQUITY(P_SYMBOL)='SBUX-US'
                  universeType: DEBT
                  formulas:
                  - FI_NAME(ISSR)
                  - FI_AMOUNT_OUT(AMT,0,USD)
            time-series-batch:
              summary: |
                Batch Request for Multiple Ids and Multiple Data Items with SEVENDAY Calendar
              value:
                data:
                  ids:
                  - IBM
                  - AAPL
                  - MSFT
                  formulas:
                  - P_PRICE(0,-2D,D)
                  - FG_COMPANY_NAME
                  - FF_SEGMENT_RPT_LABELS(ANN_R,0,-1AY,,,,BUS,"SEG")
                  - FF_SEGMENT_RPT_DATA(ANN_R,0,-1AY,,,"SALES",,BUS,"SEG")
                  calendar: SEVENDAY
                  batch: "Y"
          schema:
            $ref: '#/components/schemas/time_series_request'
      required: true
    cross-sectional-postBody:
      content:
        application/json:
          examples:
            cross-sectional-singleId-singleItem:
              summary: Single Equity Id and Single Equity Data Item
              value:
                data:
                  ids:
                  - IBM
                  formulas:
                  - P_PRICE(0)
            cross-sectional-singleId-singleItem-fsymId:
              summary: Single Equity Id and Single Equity Data Item with fsymId=Y
              value:
                data:
                  ids:
                  - IBM
                  formulas:
                  - P_PRICE(0)
                  fsymId: "Y"
            cross-sectional-multipleId-mulipleItem:
              summary: Multiple Equity Ids and Multiple Equity Data Items with SEVENDAY
                Calendar
              value:
                data:
                  ids:
                  - IBM
                  - FDS
                  - GE
                  - GOOG
                  - AAPL
                  - MSFT
                  - TSLA
                  formulas:
                  - FF_SALES(ANN_R,0)
                  - PROPER_NAME(0,SECURITY,NAME)
                  - P_PRICE(0)
                  - FF_ASSETS(ANN_R,0)
                  calendar: SEVENDAY
            cross-sectional-multipleId-mulipleItem-flatten:
              summary: Multiple Equity Ids and Multiple Equity Data Items with flatten=Y
              value:
                data:
                  ids:
                  - IBM
                  - FDS
                  - GE
                  - GOOG
                  - AAPL
                  - MSFT
                  - TSLA
                  formulas:
                  - FF_SALES(ANN_R,0)
                  - PROPER_NAME(0,SECURITY,NAME)
                  - P_PRICE(0)
                  - FF_ASSETS(ANN_R,0)
                  flatten: "Y"
            cross-sectional-multipleId-mulipleCalculatedItem:
              description: |
                The first data item using the division operator to calculate a P/E ratio from the last trading day of the company’s most recent fiscal year.

                The second data item uses the addition operator to calculate percentage of revenue exposure in the US and Japan for the same date as the first data item.

                The third data item uses the **IF** function and greater than operator (**>**) to indicate whether the latest fiscal year's sales were higher or lower than the previous year's sales.

                You can find more information about the different functions you can use in FQL at the following Online Assistant pages -
                * Mathematical Operators - [Online Assistant Page 10600](https://my.apps.factset.com/oa/pages/10600)
                * Logical Functions - [Online Assistant Page 11485](https://my.apps.factset.com/oa/pages/1485)
                * Categorical List of All Functions - [Online Assistant Page 1411](https://my.apps.factset.com/oa/pages/1411)
              summary: Multiple Ids and Multiple Calculated Data Items
              value:
                data:
                  ids:
                  - IBM
                  - FDS
                  - GE
                  - GOOG
                  - AAPL
                  - MSFT
                  - TSLA
                  formulas:
                  - P_PRICE(0Y)/FF_EPS(ANN_R,0Y)
                  - FF_GEOREV_COUNTRY_PCT(840,ANN,0,RF)%2BFF_GEOREV_COUNTRY_PCT(392,ANN,0,RF)
                  - IF(FF_SALES(ANN_R,0)>FF_SALES(ANN_R,-1),"HIGHER","LOWER")
            cross-sectional-multipleFixedIncomeId-mulipleItem:
              summary: Multiple Fixed Income Ids and Multiple Fixed Data Items
              value:
                data:
                  ids:
                  - U88803AB
                  - 00138GAC
                  formulas:
                  - FI_NAME(ISSR)
                  - FI_AMOUNT_OUT(AMT,0,USD)
            cross-sectional-smallUniv-singleItem:
              summary: Small Equity Universe and Single Equity Data Item
              value:
                data:
                  universe: (FG_CONSTITUENTS(SP50,0,CLOSE) AND P_PRICE(0,USD)<10)=1
                  formulas:
                  - P_PRICE(0)
            cross-sectional-debtUniv-multipleItem:
              summary: Debt Universe and Multiple Debt Data Items
              value:
                data:
                  universe: EQUITY(P_SYMBOL)='SBUX-US'
                  universeType: DEBT
                  formulas:
                  - FI_NAME(ISSR)
                  - FI_AMOUNT_OUT(AMT,0,USD)
            cross-sectional-ICSF-singleItem-nonflatten:
              summary: Single ID and Multiple Dates using ICSF with flatten = N
              value:
                data:
                  ids:
                  - NFLX-USA
                  formulas:
                  - PROPER_NAME
                  - P_PRICE(0)
                  startDate: 01/01/2022
                  endDate: 12/31/2022
                  frequency: M
                  batch: "Y"
                  flatten: "N"
            cross-sectional-ICSF-multipleItem-Flatten:
              summary: Multiple IDs and Multiple Dates using ICSF with flatten = Y
              value:
                data:
                  ids:
                  - NFLX-USA
                  - DIS-USA
                  - WBD-USA
                  formulas:
                  - FF_SALES(ANN_R,0)
                  startDate: 03/01/2020
                  endDate: 03/31/2020
                  frequency: W
                  batch: "Y"
                  flatten: "Y"
            cross-sectional-batch:
              summary: Batch Request for Multiple Equity Ids and Multiple Equity Data
                Items with SEVENDAY Calendar
              value:
                data:
                  ids:
                  - IBM
                  - FDS
                  - GE
                  - GOOG
                  - AAPL
                  - MSFT
                  - TSLA
                  formulas:
                  - FF_SALES(ANN_R,0)
                  - PROPER_NAME(0,SECURITY,NAME)
                  - P_PRICE(0)
                  - FF_ASSETS(ANN_R,0)
                  calendar: SEVENDAY
                  batch: "Y"
          schema:
            $ref: '#/components/schemas/cross_sectional_request'
      required: true
    batch-status-postBody:
      content:
        application/json:
          examples:
            BatchStatusRequest:
              summary: Batch Status Request
              value:
                data:
                  id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c
          schema:
            $ref: '#/components/schemas/BatchDataRequest'
      required: true
    batch-result-postBody:
      content:
        application/json:
          examples:
            BatchDataRequest:
              summary: Batch Result Request
              value:
                data:
                  id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c
          schema:
            $ref: '#/components/schemas/BatchDataRequest'
      required: true
  responses:
    "400":
      content:
        application/json:
          examples:
            parameterError - Missing Formulas:
              value:
                id: 5EFCCA8940CAEB6E
                code: parameterError
                title: The parameter 'formulas' is required and may not be empty.
                timeStamp: 2019-11-01 11:09:41.918
            parameterError - Ids and Universe:
              description: The `ids` or `universe` parameter must be included. Including
                `ids` and `universe` parameters in the same request is not allowed.
              value:
                id: 5EFCCA8940CAEB6E
                code: parameterError
                title: Please enter either the ids or universe parameter.
                timeStamp: 2019-11-01 11:09:41.918
            parameterError - Invalid displayName Input:
              value:
                id: 5EFCCA8940CAEB6E
                code: parameterError
                title: The length of the list provided for the displayName parameter
                  must be equal to the number of formulas requested.
                timeStamp: 2019-11-01 11:09:41.918
            requestBodyInvalid:
              value:
                id: 5EFCCA8940CAEB6E
                code: requestBodyInvalid
                title: The request body could not be read.
                timeStamp: 2019-11-01 11:09:41.918
            invalidCharacter:
              value:
                id: 5EFCCA8940CAEB6E
                code: invalidCharacter
                title: The request contains an invalid character. Allowed characters
                  are Unicode code points in the ranges [0x09-0x0a],[0x0d], [0x20-0x7e],
                  [0x85], [0xa0-0xd7ff], [0xe000-0xfffd], and [0x10000-0x10ffff].
                timeStamp: 2019-11-01 11:09:41.918
          schema:
            $ref: '#/components/schemas/error_detail'
      description: Bad Request
      headers:
        api-version:
          $ref: '#/components/headers/api-version'
        api-supported-versions:
          $ref: '#/components/headers/api-supported-versions'
        api-deprecated-versions:
          $ref: '#/components/headers/api-deprecated-versions'
        chain-id:
          $ref: '#/components/headers/chain-id'
    "401":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_detail'
      description: Unauthenticated USERNAME-SERIAL. This error will also occur if
        the API request is made from IP address not specified in the API Key configuration.
        Note that additional IP addresses can be added to an existing API Key configuration.
      headers:
        api-version:
          $ref: '#/components/headers/api-version'
        api-supported-versions:
          $ref: '#/components/headers/api-supported-versions'
        api-deprecated-versions:
          $ref: '#/components/headers/api-deprecated-versions'
        chain-id:
          $ref: '#/components/headers/chain-id'
    "403":
      content:
        application/json:
          example:
            id: 5EFCCA8940CAEB6E
            code: Unauthorized
            title: USERNAME-SERIAL does not have permission to use /v1/{endpoint}
            timeStamp: 2019-11-01 11:09:41.918
          schema:
            $ref: '#/components/schemas/error_detail'
      description: Not Authorized.
      headers:
        api-version:
          $ref: '#/components/headers/api-version'
        api-supported-versions:
          $ref: '#/components/headers/api-supported-versions'
        api-deprecated-versions:
          $ref: '#/components/headers/api-deprecated-versions'
        chain-id:
          $ref: '#/components/headers/chain-id'
    "404":
      content:
        application/json:
          example:
            id: 5EFCCA8940CAEB6E
            code: endpointNotFound
            title: '''/formula-api/v1/{invalid endpoint}'' is not a valid endpoint.'
            timeStamp: 2019-11-01 11:09:41.918
          schema:
            $ref: '#/components/schemas/error_detail'
      description: Endpoint Not Found
      headers:
        api-version:
          $ref: '#/components/headers/api-version'
        api-supported-versions:
          $ref: '#/components/headers/api-supported-versions'
        api-deprecated-versions:
          $ref: '#/components/headers/api-deprecated-versions'
        chain-id:
          $ref: '#/components/headers/chain-id'
    "405":
      content:
        application/json:
          example:
            id: 5EFCCA8940CAEB6E
            code: methodNotAllowed
            title: The HTTP method {unsupported method} is not allowed. Please resubmit
              the request using the HTTP methods GET or POST.
            timeStamp: 2019-11-01 11:09:41.918
          schema:
            $ref: '#/components/schemas/error_detail'
      description: Method Not Allowed
    "406":
      content:
        application/json:
          example:
            id: 5EFCCA8940CAEB6E
            code: badAccept
            title: 'Accept: {unsupported Accept header} is not supported. The Accept
              header must include application/json.'
            timeStamp: 2019-11-01 11:09:41.918
          schema:
            $ref: '#/components/schemas/error_detail'
      description: Bad Accept Header
      headers:
        api-version:
          $ref: '#/components/headers/api-version'
        api-supported-versions:
          $ref: '#/components/headers/api-supported-versions'
        api-deprecated-versions:
          $ref: '#/components/headers/api-deprecated-versions'
        chain-id:
          $ref: '#/components/headers/chain-id'
    "408":
      content:
        application/json:
          example:
            id: 5EFCCA8940CAEB6E
            code: requestTimeout
            title: The request took too long. Try again with a smaller request.
            timeStamp: 2019-11-01 11:09:41.918
          schema:
            $ref: '#/components/schemas/error_detail'
      description: Request Timeout. This error may be returned if it takes more than
        29 seconds for the request to process or if a batch request takes more than
        30 minutes to process.
      headers:
        api-version:
          $ref: '#/components/headers/api-version'
        api-supported-versions:
          $ref: '#/components/headers/api-supported-versions'
        api-deprecated-versions:
          $ref: '#/components/headers/api-deprecated-versions'
        chain-id:
          $ref: '#/components/headers/chain-id'
    "413":
      content:
        application/json:
          example:
            id: 64EA0B1B0B592002
            code: ContentTooLarge
            title: The request is too large. Please reduce the payload size or leverage
              batching to ensure successful processing.
            timeStamp: 2019-11-01 11:09:41.918
          schema:
            $ref: '#/components/schemas/error_detail'
      description: Content Too Large. This error may be returned if the request payload
        size is too large to be processed in the alloted amount of time.
      headers:
        api-version:
          $ref: '#/components/headers/api-version'
        api-supported-versions:
          $ref: '#/components/headers/api-supported-versions'
        api-deprecated-versions:
          $ref: '#/components/headers/api-deprecated-versions'
        chain-id:
          $ref: '#/components/headers/chain-id'
    "415":
      content:
        application/json:
          example:
            id: 5EFCCA8940CAEB6E
            code: badContentType
            title: 'Content-Type: {unsupported Content-Type} is not supported. The
              Content-Type header must include application/json'
            timeStamp: 2019-11-01 11:09:41.918
          schema:
            $ref: '#/components/schemas/error_detail'
      description: Bad Content-Type Header
      headers:
        api-version:
          $ref: '#/components/headers/api-version'
        api-supported-versions:
          $ref: '#/components/headers/api-supported-versions'
        api-deprecated-versions:
          $ref: '#/components/headers/api-deprecated-versions'
        chain-id:
          $ref: '#/components/headers/chain-id'
    "429":
      content:
        application/json:
          example:
            id: 5EFCCA8940CAEB6E
            code: toomanyrequests
            title: Rate limit is exceeded
            timeStamp: 2019-11-01 11:09:41.918
          schema:
            $ref: '#/components/schemas/error_detail'
      description: Rate Limits Exceeded
      headers:
        api-version:
          $ref: '#/components/headers/api-version'
        api-supported-versions:
          $ref: '#/components/headers/api-supported-versions'
        api-deprecated-versions:
          $ref: '#/components/headers/api-deprecated-versions'
        chain-id:
          $ref: '#/components/headers/chain-id'
        X-RateLimit-Limit-second:
          $ref: '#/components/headers/X-RateLimit-Limit-second'
        X-RateLimit-Remaining-second:
          $ref: '#/components/headers/X-RateLimit-Remaining-second'
        X-RateLimit-Limit-day:
          $ref: '#/components/headers/X-RateLimit-Limit-day'
        X-RateLimit-Remaining-day:
          $ref: '#/components/headers/X-RateLimit-Remaining-day'
        Retry-After:
          $ref: '#/components/headers/Retry-After'
    "500":
      content:
        application/json:
          example:
            id: 5EFCCA8940CAEB6E
            code: genericServerError
            title: An unexpected error happened.
            timeStamp: 2019-11-01 11:09:41.918
          schema:
            $ref: '#/components/schemas/error_detail'
      description: Generic Server Error
      headers:
        api-version:
          $ref: '#/components/headers/api-version'
        api-supported-versions:
          $ref: '#/components/headers/api-supported-versions'
        api-deprecated-versions:
          $ref: '#/components/headers/api-deprecated-versions'
        chain-id:
          $ref: '#/components/headers/chain-id'
    "501":
      content:
        application/json:
          example:
            id: 5EFCCA8940CAEB6E
            code: notImplemented
            title: The requested endpoint or functionality has not been implemented
              yet.
            timeStamp: 2019-11-01 11:09:41.918
          schema:
            $ref: '#/components/schemas/error_detail'
      description: Not Implemented
      headers:
        api-version:
          $ref: '#/components/headers/api-version'
        api-supported-versions:
          $ref: '#/components/headers/api-supported-versions'
        api-deprecated-versions:
          $ref: '#/components/headers/api-deprecated-versions'
        chain-id:
          $ref: '#/components/headers/chain-id'
    "503":
      content:
        application/json:
          example:
            id: 5EFCCA8940CAEB6E
            code: serviceTemporarilyUnavailable
            title: Will be sent in case the requested service is currently overloaded
              or can't temporarily handle the request for some other reason. Clients
              are expected to retry the request.
            timeStamp: 2019-11-01 11:09:41.918
          schema:
            $ref: '#/components/schemas/error_detail'
      description: Service Temporarily Unavailable
      headers:
        api-version:
          $ref: '#/components/headers/api-version'
        api-supported-versions:
          $ref: '#/components/headers/api-supported-versions'
        api-deprecated-versions:
          $ref: '#/components/headers/api-deprecated-versions'
        chain-id:
          $ref: '#/components/headers/chain-id'
  schemas:
    time_series_request:
      description: '`/time-series` Request Body'
      properties:
        data:
          $ref: '#/components/schemas/time_series_request_data'
      required:
      - data
      title: Time-Series Request Body
      type: object
    time_series_response_object_items:
      anyOf:
      - $ref: '#/components/schemas/time_series_result_object_nonflattened'
      - $ref: '#/components/schemas/time_series_result_object_flattened'
      title: Time-Series Response Object
    time_series_response:
      example:
        data:
        - null
        - null
        meta: '{}'
      properties:
        data:
          description: Array of Time-Series `Response Objects`
          items:
            $ref: '#/components/schemas/time_series_response_object_items'
          type: array
        meta:
          type: object
      title: Time-Series Response
      type: object
    time_series_result_object_nonflattened:
      discriminator:
        mapping:
          SCALAR: '#/components/schemas/time_series_result_object_nonflattened_scalar'
          ARRAY: '#/components/schemas/time_series_result_object_nonflattened_array'
          MATRIX: '#/components/schemas/time_series_result_object_nonflattened_matrix'
          TIMESERIES: '#/components/schemas/time_series_result_object_nonflattened_timeseries_object'
        propertyName: objectType
      oneOf:
      - $ref: '#/components/schemas/time_series_result_object_nonflattened_scalar'
      - $ref: '#/components/schemas/time_series_result_object_nonflattened_array'
      - $ref: '#/components/schemas/time_series_result_object_nonflattened_matrix'
      - $ref: '#/components/schemas/time_series_result_object_nonflattened_timeseries_object'
      title: Time-Series Non-Flattened Response Object
    time_series_result_object_nonflattened_scalar:
      allOf:
      - $ref: '#/components/schemas/time_series_result_object_nonflattened_base'
      properties:
        result:
          $ref: '#/components/schemas/time_series_scalar_value'
      title: Time-Series Non-Flattened Response Object with SCALAR Result Attribute
      type: object
    time_series_result_object_nonflattened_array:
      allOf:
      - $ref: '#/components/schemas/time_series_result_object_nonflattened_base'
      description: The `result` attribute in the Time-Series Non-Flattened Response
        Object will be an ARRAY.
      properties:
        result:
          items:
            $ref: '#/components/schemas/time_series_scalar_value'
          type: array
      title: Time-Series Non-Flattened Response Object with ARRAY Result Attribute
      type: object
    time_series_result_object_nonflattened_matrix:
      allOf:
      - $ref: '#/components/schemas/time_series_result_object_nonflattened_base'
      description: The `result` attribute in the Time-Series Non-Flattened Response
        Object will be a MATRIX, which will be represented as an array of arrays.
        Each array can be thought of as a row in the matrix.
      properties:
        result:
          items:
            items:
              $ref: '#/components/schemas/time_series_scalar_value'
            type: array
          type: array
      title: Time-Series Non-Flattened Response Object with MATRIX Result Attribute
      type: object
    time_series_result_object_nonflattened_timeseries_object:
      allOf:
      - $ref: '#/components/schemas/time_series_result_object_nonflattened_base'
      properties:
        result:
          $ref: '#/components/schemas/time_series_timeseries_object'
      title: Time-Series Non-Flattened Response Object with TIMESERIES Result Attribute
      type: object
    time_series_result_object_nonflattened_base:
      description: An object returning the results for a single identifier and formula.
        This is the base of the response object. The result attribute depends on the
        formula requested. Response objects with the various result attribute types
        are outlined in separate schemas.
      properties:
        error:
          description: |
            Indicates that there was an error in the execution of the FQL Formula.
            * Zero – success
            * Non-zero – failure
          example: 0
          type: integer
        errorMessage:
          description: If error is non-zero, errorMessage will display the FQL formula
            error.
          example: |
            parse error, unexpected ','
          nullable: true
          type: string
        formula:
          description: FQL formula requested.
          example: P_PRICE(0,-1,D)
          type: string
        displayName:
          description: Display Name.
          example: PRICE
          nullable: true
          type: string
        requestId:
          description: Identifier requested.
          example: IBM-US
          type: string
        fsymId:
          description: |
            The **fsymId** field returned is the FactSet Default Permanent Identifier for the `requestId`. For all supported `requestId` symbol types, the `fsymId` parameter will return the Regional Level PermId '-R' which identifies the security’s best regional security data series per currency. Currently, the fsymId parameter only supports equities. Accepted `requestId` symbol types include all FactSet Permanent Identifiers types, CUSIP, SEDOL, ISIN, and Tickers. Further documentation can be found at this [Online Assistant attachment](https://oa.apps.factset.com/cms/oaAttachment/64c3213a-f415-4c27-a336-92c73a72deed/24881). Included only if the `fsymId` parameter is set to Y.
          example: SJY281-R
          nullable: true
          type: string
        dataType:
          description: Type of data returned in `result`
          enum:
          - STRING
          - INTEGER
          - DOUBLE
          example: STRING
          nullable: true
          type: string
        objectType:
          description: Type of object returned in `result`
          enum:
          - SCALAR
          - ARRAY
          - MATRIX
          - TIMESERIES
          example: ARRAY
          type: string
      required:
      - dataType
      - error
      - formula
      - objectType
      - requestId
      - result
      title: Time-Series Non-Flattened Base Response Object
      type: object
    time_series_scalar_value:
      description: The `result` attribute in the Time-Series Non-Flattened Response
        Object will be a SCALAR.
      nullable: true
      oneOf:
      - example: International Business Machines Corporation
        nullable: true
        type: string
      - example: 354.98
        format: double
        nullable: true
        type: number
      - example: 4
        nullable: true
        type: integer
      title: Time-Series SCALAR Result
    time_series_timeseries_object:
      description: The `result` attribute in the Time-Series Non-Flattened Response
        Object will be a TIMESERIES object. A TIMESERIES object has a values attribute
        and a dates attribute that contain arrays of equal length so that the values
        and dates can be align to form a time series.
      properties:
        values:
          description: Representing the data returned from the requested FQL formula
            for the requestId
          example:
          - 124.92
          - 124.22
          - 122.44
          items:
            $ref: '#/components/schemas/time_series_scalar_value'
          title: values
          type: array
        dates:
          description: Representing the dates corresponding the requested FQL formula
            for the requestId
          example:
          - 2020-09-17
          - 2020-09-16
          - 2020-09-15
          items:
            format: date
            nullable: true
            type: string
          title: dates
          type: array
      title: Time-Series TIMESERIES Result
      type: object
    time_series_result_object_flattened_addl:
      description: |
        The Key in the Key-Value pair will be the formula. If the `displayName` parameter is used, then the Key will be displayName specified for that formula. The Value in the Key-Value pair will be the result of the formula for that "row".
      example: '"P_PRICE(0)": 142.32'
      nullable: true
      oneOf:
      - nullable: true
        type: string
      - format: double
        nullable: true
        type: number
      - nullable: true
        type: integer
      title: Key-Value Pair for Time-Series Flattened Response Object
    time_series_result_object_flattened:
      additionalProperties:
        $ref: '#/components/schemas/time_series_result_object_flattened_addl'
      description: |2

        Data model returned when the parameter **flatten=Y** is used in the request. This flattened, simplified JSON output returned from **flatten=Y** can be conceptualized as a table (rows and columns) where each data object in the result is a row in the table and each field names is a column name. The response will contain at least one data object for each requestId containing the requestId, fsymId (if requested), date (if applicable) and Key-Value pairs for each data item (formula). The number of data objects (rows) per requestId is dependent the the objectTypes of the formulas requested.

        ---
        Formulas that have associated dates (TIMESERIES objectType in the standard **flatten=N** response model) will result in a data object for each date for each requestId.

        **flatten=N TIMESERIES Representation**
        ```json
        [
          {
            "requestId": "id",
            "formula": "formulaName1",
            "result": {
                "values": [a,b],
                "dates": [DATE1,DATE2]
              },
            "objectType": "TIMESERIES",
            "dataType": "DOUBLE"
          },
          {
            "requestId": "id",
            "formula": "formulaName2",
            "result": {
                "values": [c,d],
                "dates": [DATE2,DATE3]
              },
            "objectType": "TIMESERIES",
            "dataType": "DOUBLE"
          }
        ]
        ```

        **flatten=Y TIMESERIES Representation**
        ```json
        [
          {
            "requestId": "id",
            "formulaName1": a,
            "formulaName2": null,
            "date": DATE1
          },
          {
            "requestId": "id",
            "formulaName1": b,
            "formulaName2": c,
            "date": DATE2
          },
          {
            "requestId": "id",
            "formulaName1": null,
            "formulaName2": d,
            "date": DATE3
          }
        ]
        ```
        ---

        Formulas that result in an array (no associated dates, ARRAY objectType in the standard **flatten=N** response model) can be thought of as a column in a table. Each element in the array will be in a separate data object. The first element of the array starts in the first data object for that requestId and then then the second element of the array in the second data object for that requestId and so on (regardless of dates from other formulas).

        **flatten=N ARRAY Representation**
        ```json
        [
          {
            "requestId": "id",
            "formula": "formulaName",
            "result": [a,b,c],
            "objectType": "ARRAY",
            "dataType": "DOUBLE"
          }
        ]
        ```

        **flatten=Y ARRAY Representation**
        ```json
        [
          {
            "requestId": "id",
            "formulaName": a,
          },
          {
            "requestId": "id",
            "formulaName": b,
          },
          {
            "requestId": "id",
            "formulaName": c,
          }
        ]
        ```
        ---
        Scalar data items (SCALAR objectType in the standard **flatten=N** response model) will be repeated in each data object for the requestId.

        **flatten=N SCALAR Representation**
        ```json
        [
          {
            "requestId": "id",
            "formula": "formulaName",
            "result": a,
            "objectType": "ARRAY",
            "dataType": "DOUBLE"
          }
        ]
        ```

        **flatten=Y SCALAR Representation**
        ```json
        [
          {
            "requestId": "id",
            "formulaName": a,
          }
        ]
        ```
        ---
        Formulas that result in a matrix (2 dimensional array, MATRIX objectType in the standard **flatten=N** response model) can be thought of as returning a table where each array in the array of arrays is a row in the table. This can be extended to the flattened result structure where each data object is a row in a table.  The formula will have as many attributes (appended by [n]) as number of columns in the matrix result.

        **flatten=N MATRIX Representation**
        ```json
        [
          {
            "requestId": "id"
            "formula": "formulaName",
            "result": [
                [a,b,c],
                [d,e,f]
              ],
            "objectType": "MATRIX",
            "dataType": "DOUBLE"
          }
        ]
        ```

        **flatten=Y MATRIX Representation**
        ```json
        [
          {
            "requestId": "id"
            "formulaName[0]": a,
            "formulaName[1]": b,
            "formulaName[2]": c
          },
          {
            "requestId": "id"
            "formulaName[0]": d,
            "formulaName[1]": e,
            "formulaName[2]": f
          }
        ]
        ```
        ---
      properties:
        requestId:
          description: Identifier requested.
          example: IBM-US
          type: string
        fsymId:
          description: |
            The **fsymId** field returned is the FactSet Default Permanent Identifier for the `requestId`. For all supported `requestId` symbol types, the `fsymId` parameter will return the Regional Level PermId '-R' which identifies the security’s best regional security data series per currency. Currently, the fsymId parameter only supports equities. Accepted `requestId` symbol types include all FactSet Permanent Identifiers types, CUSIP, SEDOL, ISIN, and Tickers. Further documentation can be found at this [Online Assistant attachment](https://oa.apps.factset.com/cms/oaAttachment/64c3213a-f415-4c27-a336-92c73a72deed/24881). Included only if the `fsymId` parameter is set to Y.
          example: SJY281-R
          nullable: true
          type: string
        date:
          description: Date associated with FQL formula.
          example: 2021-10-18
          format: date
          nullable: true
          type: string
      required:
      - requestId
      title: Time-Series Flattened Response Object
      type: object
    cross_sectional_request:
      description: '`/cross-sectional` Request Body'
      properties:
        data:
          $ref: '#/components/schemas/cross_sectional_request_data'
      required:
      - data
      title: Cross-Sectional Request Body
      type: object
    cross_sectional_response_object_items:
      oneOf:
      - $ref: '#/components/schemas/cross_sectional_result_object_nonflattened'
      - $ref: '#/components/schemas/cross_sectional_result_object_flattened'
      title: Cross-Sectional Response Object
    cross_sectional_response:
      example:
        data:
        - null
        - null
        meta: '{}'
      properties:
        data:
          description: Array of Cross-Sectional `Response Objects`
          items:
            $ref: '#/components/schemas/cross_sectional_response_object_items'
          type: array
        meta:
          type: object
      title: Cross-Sectional Response
      type: object
    cross_sectional_result_object_nonflattened_result_attribute:
      description: An array containing the values for the data item
      example:
      - IBM
      - FDS
      - AAPL
      - MSFT
      nullable: true
      oneOf:
      - description: Array of strings
        nullable: true
        type: string
      - description: Array of doubles
        format: double
        type: number
      - description: Array of integers
        type: integer
      title: Result Attribute in Cross-Sectional Non-Flattened Response Object
    cross_sectional_result_object_nonflattened:
      description: An object returning the results for a single formula.
      properties:
        universe:
          description: If `universe` is submitted instead of `ids`, then the universe
            attribute will display the universe expression requested.
          example: (FG_CONSTITUENTS(SP50,0,CLOSE) AND P_PRICE(0,USD)<10)=1
          type: string
        dataItemName:
          description: Name of data item (requestId, requested Screening formula,
            or fsymId)
          example: P_PRICE(0)
          type: string
        displayName:
          description: Display Name.
          example: PRICE
          nullable: true
          type: string
        result:
          items:
            $ref: '#/components/schemas/cross_sectional_result_object_nonflattened_result_attribute'
          type: array
        dataType:
          description: Data type of the data item
          enum:
          - STRING
          - INTEGER
          - DOUBLE
          example: STRING
          type: string
        error:
          description: |
            Data item error indicator.
             * Zero – success
             * Non-zero – failure
          example: 0
          type: integer
        errorMessage:
          description: If error is non-zero, errorMessage will display the Screening
            formula error.
          example: |
            Error parsing formula arguments
          nullable: true
          type: string
        warnings:
          description: Screening formula warnings. This attribute is only displayed
            if warnings are generated in the execution of the Screening formula.
          items:
            $ref: '#/components/schemas/warningsObject'
          type: array
      required:
      - dataItemName
      - dataType
      - error
      - result
      title: Cross-Sectional Non-Flattened Response Object
      type: object
    warningsObject:
      properties:
        description:
          description: Human readable message explaining the warning
          nullable: true
          type: string
        effect:
          description: Human readable message explaining the effect on the `result`
          nullable: true
          type: string
      type: object
    cross_sectional_result_object_flattened_addl:
      description: |
        The Key in the Key-Value pair will be the formula. If the `displayName` parameter is used, then the Key will be displayName specified for that formula. The Value in the Key-Value pair will be the result of the formula for that "row".
      example: '"P_PRICE(0)": 142.32'
      nullable: true
      oneOf:
      - nullable: true
        type: string
      - format: double
        nullable: true
        type: number
      - nullable: true
        type: integer
      title: Key-Value Pair for Cross-Sectional Flattened Response Object
    cross_sectional_result_object_flattened:
      additionalProperties:
        $ref: '#/components/schemas/cross_sectional_result_object_flattened_addl'
      description: |2

        Data model returned when the parameter **flatten=Y** is used in the request. This flattened, simplified JSON data returned from **flatten=Y** can be conceptualized as a table (rows and columns) where each data object in the result is a row in the table and the field names are the column names.

        There will be one data object for each request containing the request, fsymId if requested, and Key-Value pairs for each data item (formula).
      properties:
        requestId:
          description: Identifier requested.
          example: IBM-US
          type: string
        fsymId:
          description: |
            The **fsymId** field returned is the FactSet Default Permanent Identifier for the `requestId`. For all supported `requestId` symbol types, the `fsymId` parameter will return the Regional Level PermId '-R' which identifies the security’s best regional security data series per currency. Currently, the fsymId parameter only supports equities. Accepted `requestId` symbol types include all FactSet Permanent Identifiers types, CUSIP, SEDOL, ISIN, and Tickers. Further documentation can be found at this [Online Assistant attachment](https://oa.apps.factset.com/cms/oaAttachment/64c3213a-f415-4c27-a336-92c73a72deed/24881). Included only if the `fsymId` parameter is set to Y.
          example: SJY281-R
          nullable: true
          type: string
      required:
      - requestId
      title: Cross-Sectional Flattened Result Object
      type: object
    error_detail:
      description: |
        `Error Object` is the response returned for an unsuccessful request.
      properties:
        meta:
          type: object
        errors:
          description: An array containing errors
          items:
            $ref: '#/components/schemas/errorObject'
          type: array
      title: Error Object
      type: object
    errorObject:
      properties:
        id:
          description: Unique identifier for the request. Also known as the chain
            id.
          example: 5EFCCA8940CAEA6B
          nullable: true
          type: string
        code:
          description: Textual error code
          example: notAuthenticated
          nullable: true
          type: string
        title:
          description: A short, human-readable summary of the problem
          example: There were either no, invalid, or expired credentials present in
            the request.
          nullable: true
          type: string
        timestamp:
          description: timestamp in YYYY-MM-DD HH:MM:SS.SSS
          format: date-time
          nullable: true
          type: string
      type: object
    BatchDataRequest:
      example:
        data:
          id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c
      properties:
        data:
          $ref: '#/components/schemas/BatchDataRequest_data'
      required:
      - data
      title: Batch Data Request
      type: object
    BatchStatusResponse:
      example:
        data:
          startTime: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          endTime: 2000-01-23T04:56:07.000+00:00
          error: The parameter 'formulas' is required and may not be empty.
          status: QUEUED
      properties:
        data:
          $ref: '#/components/schemas/BatchStatus'
      title: Batch Status Response
      type: object
    BatchStatus:
      example:
        startTime: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        endTime: 2000-01-23T04:56:07.000+00:00
        error: The parameter 'formulas' is required and may not be empty.
        status: QUEUED
      properties:
        id:
          description: the id of batch request.
          format: uuid
          type: string
        startTime:
          description: Time when the batch request is started. This is in Eastern
            Time Zone. The date-time format is expressed as [YYYY-MM-DD]T[HH:MM:SSS],
            following ISO 8601.
          format: date-time
          nullable: true
          type: string
        endTime:
          description: Time when the batch request is ended. This is in Eastern Time
            Zone. The date-time format is expressed as [YYYY-MM-DD]T[HH:MM:SSS], following
            ISO 8601.
          format: date-time
          nullable: true
          type: string
        status:
          enum:
          - QUEUED
          - EXECUTING
          - DONE
          - FAILED
          type: string
        error:
          description: Error message.
          example: The parameter 'formulas' is required and may not be empty.
          nullable: true
          type: string
      title: Batch Status
      type: object
    BatchDataResponse:
      example:
        data:
        - null
        - null
      properties:
        data:
          items:
            $ref: '#/components/schemas/BatchData'
          type: array
      title: Batch Data Response
      type: object
    BatchData:
      anyOf:
      - $ref: '#/components/schemas/cross_sectional_response_object_items'
      - $ref: '#/components/schemas/time_series_response_object_items'
      description: |
        The schema for the batched result is determined by the endpoint you used with the _batch_ parameter.
        Please see the schema for that endpoint for the definition.
      title: Batch Data
      type: object
    time_series_request_data:
      properties:
        ids:
          description: |
            Array of entity identifiers.

            The `ids` and `universe` parameters provide two different ways to specify the identifiers for which you want data retrieved. Please enter either the `ids` or `universe` parameter.
          example:
          - FDS-US
          - IBM-US
          - XOM-US
          items:
            type: string
          title: ids
          type: array
        symbolType:
          description: "Specify the type of symbols submitted in the `ids` parameter.\
            \ This is only required when submitting ids that are not supported by\
            \ default. \n\nAvailable symbol types -\n* DEFAULT - Accepted symbol types\
            \ include Market Tickers, SEDOLs, ISINs, CUSIPs, or FactSet Permanent\
            \ Ids.\n\n* BLOOMBERG - Accepted symbol types include Bloomberg Tickers\
            \ and Bloomberg FIGIs. \n  * When submitting Bloomberg symbols, the Bloomberg\
            \ symbol is translated to a FactSet Permanent Identifier which is then\
            \ used to retrieve the requested FQL and Screening formulas. The Bloomberg\
            \ symbol submitted will be returned in the response in the field *requestId*.\
            \ To see the FactSet Permanent Identifer that the Bloomberg symbol resolved\
            \ to, use the `fsymId` parameter in addition to the `\n  ` parameter.\n\
            \  * Bloomberg symbols can not be submitted with other symbol types. \n\
            \  * Bloomberg Symbol Resolution is not available via Batch Requests.\n\
            \nBloomberg Symbol Resolution is included with the Individual User subscription.\
            \ Users with a Production User subscription require additional access\
            \ to submit Bloomberg symbols. If you would like to gain access to Bloomberg\
            \ Symbol Resolution, please contact your FactSet Account Team or \"Report\
            \ Issue\" above and our support teams can assist.\n"
          title: symbolType
          type: string
        universe:
          description: |
            Screening expression to limit the universe

            Please enter either the `ids` or `universe` parameter.
          example: FG_CONSTITUENTS(SP50,0,CLOSE)
          title: universe
          type: string
        universeType:
          default: EQUITY
          description: |
            Specify the universe type to calculate the `universe` in.

            Find documentation below on how to build a screen for each universe type -
            * Equity Screen - [Online Assistant Page 20606](https://my.apps.factset.com/oa/pages/20606)

            * Debt Screen - [Online Assistant Page 20888](https://my.apps.factset.com/oa/pages/20888)

            * Fund Screen - [Online Assistant Page 21384](https://my.apps.factset.com/oa/pages/21384)

            This parameter may only be used in conjunction with the `universe` parameter.
          enum:
          - EQUITY
          - DEBT
          - FUND
          example: DEBT
          title: universeType
          type: string
        formulas:
          description: Array of FQL formulas
          example:
          - P_PRICE(0,-2,D)
          - FG_COMPANY_NAME
          items:
            type: string
          title: FQL formulas
          type: array
        calendar:
          default: FIVEDAY
          description: Calendar of data returned. The default value is FIVEDAY which
            displays Monday through Friday, regardless of whether there were trading
            holidays.
          example: SEVENDAY
          title: Calendar Setting
          type: string
        fsymId:
          default: "N"
          description: |
            Specify **Y** for the `fsymId` parameter to return the **fsymId** (FactSet Default Permanent Identifier) of the `requestId`, in addition to the **requestId** field, in each response object. The default value for the `fsymId` parameter is **N**.

            The **fsymId** field returned is the FactSet Default Permanent Identifier for the `requestId`. For all supported `requestId` symbol types, the `fsymId` parameter will return the Regional Level PermId '-R' which identifies the security’s best regional security data series per currency. Currently, the fsymId parameter only supports equities. Accepted `requestId` symbol types include all FactSet Permanent Identifiers types, CUSIP, SEDOL, ISIN, and Tickers. Further documentation can be found at this [Online Assistant attachment](https://oa.apps.factset.com/cms/oaAttachment/64c3213a-f415-4c27-a336-92c73a72deed/24881).
          enum:
          - "Y"
          - "N"
          example: "Y"
          title: fsymId
          type: string
        displayName:
          description: |
            Define display names for the formulas inputted. Enter the list of display names in the same order as the formulas inputted. An additional field **displayName** will be returned in the data object for a formula.

            If the number of display names does not match the number of formulas provided, an error will be returned.

            To define the display name for a subset of the formulas, leave a blank in the position of the formula that won't be renamed. For example - If three formulas are inputted, to define display names only for the first and third formula, enter *displayName=FORMULA_1,,FORMULA_3*. The **displayName** field will still be included in that formula, but will contain the formula as inputted.
          example:
          - PRICE
          - COMPANY_NAME
          items:
            type: string
          title: displayName
          type: array
        flatten:
          default: "N"
          description: |
            Specify **Y** for `flatten` to return a flat, table-like JSON response model instead of the standard nested JSON response model. This option is provided for easier data processing and visualization. The default value for `flatten` is **N**.

            See the **Time-Series Result Object Flattened** schema for more detail on the response structure for flattened output.
          enum:
          - "Y"
          - "N"
          example: "Y"
          title: flatten
          type: string
        dates:
          default: "Y"
          description: |
            Specify **N** for the `dates` parameter to suppress the **dates** of the response. The default value for the `dates` parameter is **Y**.

            In the non-flattened response model, setting dates to **N** will remove the "dates" array from the TIMESERIES objectType, meaning that the results will be returned as an ARRAY objectType.

            In the flattened response mode, setting dates to **N** will remove the "dates" attribute from the response objects. The flatten parameter first attempts to flatten the response by dates. Removing the dates can make it easier to align multiple data items when the date definition differs from the desired alignment.
          enum:
          - "Y"
          - "N"
          example: "N"
          title: dates
          type: string
        batch:
          default: "N"
          description: |
            Enables the ability to asynchronously "batch" the request, supporting a long-running request up to **30 minutes**. Upon requesting "batch": "Y", the service will respond back with an HTTP Status Code of 202.

            Individual users are allowed 5 concurrent Batch Requests, while Production users are allowed 10 concurrent Batch Requests.

            *This feature is available to Individual Users subscribed to the Performance Package and Performance Package Plus Performance Tiers and all Production Users. If you are unsure which Performance Tier you are subscribed to or you would like to gain access to the batch capabilities, please contact your FactSet Account Team or "Report Issue" above and our support teams can assist.*

            Once a batch request is submitted, use `/batch-status` to see if the job has completed. Once completed, retrieve the results of the request via `/batch-result`. See the endpoints listed under *Batch Processing* for more information.
          enum:
          - "Y"
          - "N"
          example: "Y"
          title: batch
          type: string
      required:
      - formulas
      type: object
    cross_sectional_request_data:
      properties:
        ids:
          description: |
            Array of entity identifiers.

            The `ids` and `universe` parameters provide two different ways to specify
            the identifiers for which you want data retrieved. Please enter either the
            `ids` or `universe` parameter.
          example:
          - FDS-US
          - IBM-US
          - XOM-US
          items:
            type: string
          title: ids
          type: array
        symbolType:
          description: "Specify the type of symbols submitted in the `ids` parameter.\
            \ This is only required when submitting ids that are not supported by\
            \ default. \n\nAvailable symbol types -\n* DEFAULT - Accepted symbol types\
            \ include Market Tickers, SEDOLs, ISINs, CUSIPs, or FactSet Permanent\
            \ Ids.\n\n* BLOOMBERG - Accepted symbol types include Bloomberg Tickers\
            \ and Bloomberg FIGIs. \n  * When submitting Bloomberg symbols, the Bloomberg\
            \ symbol is translated to a FactSet Permanent Identifier which is then\
            \ used to retrieve the requested FQL and Screening formulas. The Bloomberg\
            \ symbol submitted will be returned in the response in the field *requestId*.\
            \ To see the FactSet Permanent Identifer that the Bloomberg symbol resolved\
            \ to, use the `fsymId` parameter in addition to the `symbolType` parameter.\n\
            \  * Bloomberg symbols can not be submitted with other symbol types. \n\
            \  * Bloomberg Symbol Resolution is not available via Batch Requests.\n\
            \  \nBloomberg Symbol Resolution is included with the Individual User\
            \ subscription. Users with a Production User subscription require additional\
            \ access to submit Bloomberg symbols. If you would like to gain access\
            \ to Bloomberg Symbol Resolution, please contact your FactSet Account\
            \ Team or \"Report Issue\" above and our support teams can assist.\n"
          title: symbolType
          type: string
        universe:
          description: |
            Screening expression to limit the universe

            Please enter either the `ids` or `universe` parameter.
          example: FG_CONSTITUENTS(SP50,0,CLOSE)
          title: universe
          type: string
        universeType:
          default: EQUITY
          description: |
            Specify the universe type to calculate the `universe` in.

            Find documentation below on how to build a screen for each universe type -
              * Equity Screen - [Online Assistant Page 20606](https://my.apps.factset.com/oa/pages/20606)

              * Debt Screen - [Online Assistant Page 20888](https://my.apps.factset.com/oa/pages/20888)

              * Fund Screen - [Online Assistant Page 21384](https://my.apps.factset.com/oa/pages/21384)
          enum:
          - EQUITY
          - DEBT
          - FUND
          example: DEBT
          title: universeType
          type: string
        formulas:
          description: Array of Screening formulas
          example:
          - P_PRICE(0)
          - FG_COMPANY_NAME
          items:
            type: string
          title: Screening formulas
          type: array
        backTestDate:
          description: |
            Specify the backtest date either in **YYYY-MM-DD**, **YYYYMMDD** or **MM/DD/YYYY** format.

            To learn more about backtesting, please visit [Online Assistant Page 20610](https://my.apps.factset.com/oa/pages/20610#backtest). User must have access to backtesting functionality.
          example: 2020-06-01
          title: backTestDate
          type: string
        calendar:
          default: FIVEDAY
          description: Calendar of data returned.
          example: SEVENDAY
          title: Calendar Setting
          type: string
        fsymId:
          default: "N"
          description: |
            Specify **Y** for `fsymId` to return an additional response object for the data item fsymId which will contain the fsymIds of the requestIds, in addition to the response object containing the data item requestId. The default value for `fsymId` is **N**.

            The **fsymId** field returned is the FactSet Default Permanent Identifier for the `requestId`. For all supported `requestId` symbol types, the `fsymId` parameter will return the Regional Level PermId '-R' which identifies the security’s best regional security data series per currency. Currently, the fsymId parameter only supports equities. Accepted `requestId` symbol types include all FactSet Permanent Identifiers types, CUSIP, SEDOL, ISIN, and Tickers. Further documentation can be found at this [Online Assistant attachment](https://oa.apps.factset.com/cms/oaAttachment/64c3213a-f415-4c27-a336-92c73a72deed/24881).
          enum:
          - "Y"
          - "N"
          example: "Y"
          title: fsymId
          type: string
        displayName:
          description: |
            Define display names for the formulas inputted. Enter the list of display names in the same order as the formulas inputted. An additional field **displayName** will be returned in the data object for a formula.

            If the number of display names does not match the number of formulas provided, an error will be returned.

            To define the display name for a subset of the formulas, leave a blank in the position of the formula that won't be renamed. For example - If three formulas are inputted, to define display names only for the first and third formula, enter *displayName=FORMULA_1,,FORMULA_3*. The **displayName** field will still be included in that formula, but will contain the formula as inputted.
          example:
          - PRICE
          - COMPANY_NAME
          items:
            type: string
          title: displayName
          type: array
        flatten:
          default: "N"
          description: |
            Specify **Y** for `flatten` to return a flat, table-like JSON response model instead of the standard nested JSON response model. This option is provided for easier data processing and visualization. The default value for `flatten` is **N**.

            See the **Cross-Sectional Result Object Flattened** schema for more detail on the response structure for flattened output.
          enum:
          - "Y"
          - "N"
          example: "Y"
          title: flatten
          type: string
        batch:
          default: "N"
          description: |
            Enables the ability to asynchronously "batch" the request, supporting a long-running request up to 30 minutes. Upon requesting "batch": "Y", the service will respond back with an HTTP Status Code of 202.

            Individual users are allowed 5 concurrent Batch Requests, while Production users are allowed 10 concurrent Batch Requests.

            *This feature is available to Individual Users subscribed to the Performance Package and Performance Package Plus Performance Tiers and all Production Users. If you are unsure which Performance Tier you are subscribed to or you would like to gain access to the batch capabilities, please contact your FactSet Account Team or "Report Issue" above and our support teams can assist.*

            Once a batch request is submitted, use `/batch-status` to see if the job has completed. Once completed, retrieve the results of the request via `/batch-result`. See the endpoints listed under *Batch Processing* for more information.
          enum:
          - "Y"
          - "N"
          example: "Y"
          title: batch
          type: string
        startDate:
          description: |
            Specify the start date for running the Iterated Cross Sectional Functionality request either in **YYYY-MM-DD**, **YYYYMMDD** or **MM/DD/YYYY** format.
          example: 2020-05-01
          title: statDate
          type: string
        endDate:
          description: |
            Specify the end date for running the Iterated Cross Sectional Functionality request either in **YYYY-MM-DD**, **YYYYMMDD** or **MM/DD/YYYY** format.
          example: 2020-05-31
          title: endDate
          type: string
        frequency:
          description: |
            Specify the frequency for running the Iterated Cross Sectional Functionality request. The following frequencies are supported **D**, **W**, **M**, **AM**, **CQ**, **AY**, or **CY**.

            To learn more about frequency, please visit [Online Assistant Page 1964](https://my.apps.factset.com/oa/pages/1964#frequency). User must have access to backtesting functionality.
          enum:
          - D
          - W
          - M
          - AM
          - CQ
          - AY
          - CY
          example: AM
          title: frequency
          type: string
      required:
      - formulas
      type: object
    BatchDataRequest_data:
      example:
        id: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c
      properties:
        id:
          description: Batch Request identifier.
          example: 2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c
          format: uuid
          type: string
      type: object
  securitySchemes:
    FactSetOAuth2:
      flows:
        clientCredentials:
          scopes: {}
          tokenUrl: https://auth.factset.com/as/token.oauth2
      type: oauth2
    FactSetApiKey:
      scheme: basic
      type: http

