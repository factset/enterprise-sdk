/*
 * FactSet RIBCS
 * FactSet Revere Business Industry Classification System (RBICS) is a comprehensive structured taxonomy to classify companies by what they primarily do. It delivers a granular view for investors by classifying companies using a bottom-up approach according to the products and services they provide. By combining this approach with a top-level grouping based on companies' behavior similarities and stock co-movement, FactSet RBICS delivers unprecedented precision for 1,400+ sector groups.  RBICS Focus is a six level classification which highlights the companys main business. It is based on the company business line/s that stand for majority of a the revenue that the company generates. Updated monthly. For more details, visit [Online Assitant Page #20710](https://oa.apps.factset.com/pages/20710).<p><b>Rate limit is set to 40 requests per second</b>.</p> 
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetRBICS.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetRBICS.JSON;


/**
 * Entity Focus Request Body
 */
@ApiModel(description = "Entity Focus Request Body")
@JsonPropertyOrder({
  EntityFocusRequest.JSON_PROPERTY_IDS,
  EntityFocusRequest.JSON_PROPERTY_DATE,
  EntityFocusRequest.JSON_PROPERTY_LEVELS,
  EntityFocusRequest.JSON_PROPERTY_INCLUDE_NAMES
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class EntityFocusRequest implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_IDS = "ids";
  private java.util.List<String> ids = null;

  public static final String JSON_PROPERTY_DATE = "date";
  private String date;

  public static final String JSON_PROPERTY_LEVELS = "levels";
  private java.util.List<Integer> levels = null;

  public static final String JSON_PROPERTY_INCLUDE_NAMES = "includeNames";
  private Boolean includeNames = true;

  public EntityFocusRequest() { 
  }

  public EntityFocusRequest ids(java.util.List<String> ids) {
    this.ids = ids;
    return this;
  }

  public EntityFocusRequest addIdsItem(String idsItem) {
    if (this.ids == null) {
      this.ids = new java.util.ArrayList<>();
    }
    this.ids.add(idsItem);
    return this;
  }

   /**
   * Security or Entity identifiers. FactSet Identifiers, tickers, CUSIP and SEDOL are accepted input. Max Ids of 2500. 
   * @return ids
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "[\"FDS-US\",\"0FPWZZ-E\",\"TSLA-US\"]", value = "Security or Entity identifiers. FactSet Identifiers, tickers, CUSIP and SEDOL are accepted input. Max Ids of 2500. ")
  @JsonProperty(JSON_PROPERTY_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<String> getIds() {
    return ids;
  }


  @JsonProperty(JSON_PROPERTY_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIds(java.util.List<String> ids) {
    this.ids = ids;
  }


  public EntityFocusRequest date(String date) {
    this.date = date;
    return this;
  }

   /**
   * Effective date for data expressed in YYYY-MM-DD format. If no date is requested, the default behavior is to return the full history for the requested entity. 
   * @return date
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "2020-09-30", value = "Effective date for data expressed in YYYY-MM-DD format. If no date is requested, the default behavior is to return the full history for the requested entity. ")
  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDate() {
    return date;
  }


  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDate(String date) {
    this.date = date;
  }


  public EntityFocusRequest levels(java.util.List<Integer> levels) {
    this.levels = levels;
    return this;
  }

  public EntityFocusRequest addLevelsItem(Integer levelsItem) {
    if (this.levels == null) {
      this.levels = new java.util.ArrayList<>();
    }
    this.levels.add(levelsItem);
    return this;
  }

   /**
   * List of RBICS industry levels to include in the response. **By default if left blank, all levels are returned.** 
   * @return levels
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "[1,3,6]", value = "List of RBICS industry levels to include in the response. **By default if left blank, all levels are returned.** ")
  @JsonProperty(JSON_PROPERTY_LEVELS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<Integer> getLevels() {
    return levels;
  }


  @JsonProperty(JSON_PROPERTY_LEVELS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLevels(java.util.List<Integer> levels) {
    this.levels = levels;
  }


  public EntityFocusRequest includeNames(Boolean includeNames) {
    this.includeNames = includeNames;
    return this;
  }

   /**
   * Option to include or exclude industry Names and the L6 Description. True &#x3D; Include Names; False &#x3D; Exclude Names. 
   * @return includeNames
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Option to include or exclude industry Names and the L6 Description. True = Include Names; False = Exclude Names. ")
  @JsonProperty(JSON_PROPERTY_INCLUDE_NAMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIncludeNames() {
    return includeNames;
  }


  @JsonProperty(JSON_PROPERTY_INCLUDE_NAMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncludeNames(Boolean includeNames) {
    this.includeNames = includeNames;
  }


  /**
   * Return true if this entityFocusRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EntityFocusRequest entityFocusRequest = (EntityFocusRequest) o;
    return Objects.equals(this.ids, entityFocusRequest.ids) &&
        Objects.equals(this.date, entityFocusRequest.date) &&
        Objects.equals(this.levels, entityFocusRequest.levels) &&
        Objects.equals(this.includeNames, entityFocusRequest.includeNames);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ids, date, levels, includeNames);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EntityFocusRequest {\n");
    sb.append("    ids: ").append(toIndentedString(ids)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    levels: ").append(toIndentedString(levels)).append("\n");
    sb.append("    includeNames: ").append(toIndentedString(includeNames)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

