/*
 * Cabot Models API
 * Cabot Models API
 *
 * The version of the OpenAPI document: 0.4.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.Cabot.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.Cabot.JSON;


/**
 * ConstructionRequestBody
 */
@JsonPropertyOrder({
  ConstructionRequestBody.JSON_PROPERTY_ACCOUNT_PATH,
  ConstructionRequestBody.JSON_PROPERTY_BENCHMARK_PATH,
  ConstructionRequestBody.JSON_PROPERTY_PERIOD
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class ConstructionRequestBody implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ACCOUNT_PATH = "accountPath";
  private String accountPath;

  public static final String JSON_PROPERTY_BENCHMARK_PATH = "benchmarkPath";
  private String benchmarkPath;

  public static final String JSON_PROPERTY_PERIOD = "period";
  private String period;

  public ConstructionRequestBody() { 
  }

  @JsonCreator
  public ConstructionRequestBody(
    @JsonProperty(value=JSON_PROPERTY_ACCOUNT_PATH, required=true) String accountPath, 
    @JsonProperty(value=JSON_PROPERTY_BENCHMARK_PATH, required=true) String benchmarkPath, 
    @JsonProperty(value=JSON_PROPERTY_PERIOD, required=true) String period
  ) {
    this();
    this.accountPath = accountPath;
    this.benchmarkPath = benchmarkPath;
    this.period = period;
  }

  public ConstructionRequestBody accountPath(String accountPath) {
    this.accountPath = accountPath;
    return this;
  }

   /**
   * The account path of the portfolio you want to retrieve the data for.
   * @return accountPath
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The account path of the portfolio you want to retrieve the data for.")
  @JsonProperty(JSON_PROPERTY_ACCOUNT_PATH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAccountPath() {
    return accountPath;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_PATH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAccountPath(String accountPath) {
    this.accountPath = accountPath;
  }


  public ConstructionRequestBody benchmarkPath(String benchmarkPath) {
    this.benchmarkPath = benchmarkPath;
    return this;
  }

   /**
   * The path of the benchmark you want to retrieve the data for.
   * @return benchmarkPath
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The path of the benchmark you want to retrieve the data for.")
  @JsonProperty(JSON_PROPERTY_BENCHMARK_PATH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBenchmarkPath() {
    return benchmarkPath;
  }


  @JsonProperty(JSON_PROPERTY_BENCHMARK_PATH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBenchmarkPath(String benchmarkPath) {
    this.benchmarkPath = benchmarkPath;
  }


  public ConstructionRequestBody period(String period) {
    this.period = period;
    return this;
  }

   /**
   * For which period you want to retrieve the data.
   * @return period
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "2015-2017", required = true, value = "For which period you want to retrieve the data.")
  @JsonProperty(JSON_PROPERTY_PERIOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPeriod() {
    return period;
  }


  @JsonProperty(JSON_PROPERTY_PERIOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPeriod(String period) {
    this.period = period;
  }


  /**
   * Return true if this ConstructionRequestBody object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConstructionRequestBody constructionRequestBody = (ConstructionRequestBody) o;
    return Objects.equals(this.accountPath, constructionRequestBody.accountPath) &&
        Objects.equals(this.benchmarkPath, constructionRequestBody.benchmarkPath) &&
        Objects.equals(this.period, constructionRequestBody.period);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountPath, benchmarkPath, period);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConstructionRequestBody {\n");
    sb.append("    accountPath: ").append(toIndentedString(accountPath)).append("\n");
    sb.append("    benchmarkPath: ").append(toIndentedString(benchmarkPath)).append("\n");
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

