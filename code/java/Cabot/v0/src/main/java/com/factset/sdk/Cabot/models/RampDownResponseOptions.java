/*
 * Cabot Models API
 * Cabot Models API
 *
 * The version of the OpenAPI document: 0.2.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.Cabot.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.Cabot.models.RampDownModelAnalytics;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.Cabot.JSON;


/**
 * RampDownResponseOptions
 */
@JsonPropertyOrder({
  RampDownResponseOptions.JSON_PROPERTY_ATTRIBUTE,
  RampDownResponseOptions.JSON_PROPERTY_HIGH_RAMP_DOWN_VALUES,
  RampDownResponseOptions.JSON_PROPERTY_LOW_RAMP_DOWN_VALUES,
  RampDownResponseOptions.JSON_PROPERTY_RAMP_DOWN_VALUES
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class RampDownResponseOptions implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ATTRIBUTE = "attribute";
  private JsonNullable<String> attribute = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_HIGH_RAMP_DOWN_VALUES = "highRampDownValues";
  private java.util.List<RampDownModelAnalytics> highRampDownValues = null;

  public static final String JSON_PROPERTY_LOW_RAMP_DOWN_VALUES = "lowRampDownValues";
  private java.util.List<RampDownModelAnalytics> lowRampDownValues = null;

  public static final String JSON_PROPERTY_RAMP_DOWN_VALUES = "rampDownValues";
  private java.util.List<RampDownModelAnalytics> rampDownValues = null;

  public RampDownResponseOptions() { 
  }

  public RampDownResponseOptions attribute(String attribute) {
    this.attribute = JsonNullable.<String>of(attribute);
    return this;
  }

   /**
   * Get attribute
   * @return attribute
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getAttribute() {
        return attribute.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ATTRIBUTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getAttribute_JsonNullable() {
    return attribute;
  }
  
  @JsonProperty(JSON_PROPERTY_ATTRIBUTE)
  public void setAttribute_JsonNullable(JsonNullable<String> attribute) {
    this.attribute = attribute;
  }

  public void setAttribute(String attribute) {
    this.attribute = JsonNullable.<String>of(attribute);
  }


  public RampDownResponseOptions highRampDownValues(java.util.List<RampDownModelAnalytics> highRampDownValues) {
    this.highRampDownValues = highRampDownValues;
    return this;
  }

  public RampDownResponseOptions addHighRampDownValuesItem(RampDownModelAnalytics highRampDownValuesItem) {
    if (this.highRampDownValues == null) {
      this.highRampDownValues = new java.util.ArrayList<>();
    }
    this.highRampDownValues.add(highRampDownValuesItem);
    return this;
  }

   /**
   * Get highRampDownValues
   * @return highRampDownValues
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_HIGH_RAMP_DOWN_VALUES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<RampDownModelAnalytics> getHighRampDownValues() {
    return highRampDownValues;
  }


  @JsonProperty(JSON_PROPERTY_HIGH_RAMP_DOWN_VALUES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHighRampDownValues(java.util.List<RampDownModelAnalytics> highRampDownValues) {
    this.highRampDownValues = highRampDownValues;
  }


  public RampDownResponseOptions lowRampDownValues(java.util.List<RampDownModelAnalytics> lowRampDownValues) {
    this.lowRampDownValues = lowRampDownValues;
    return this;
  }

  public RampDownResponseOptions addLowRampDownValuesItem(RampDownModelAnalytics lowRampDownValuesItem) {
    if (this.lowRampDownValues == null) {
      this.lowRampDownValues = new java.util.ArrayList<>();
    }
    this.lowRampDownValues.add(lowRampDownValuesItem);
    return this;
  }

   /**
   * Get lowRampDownValues
   * @return lowRampDownValues
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LOW_RAMP_DOWN_VALUES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<RampDownModelAnalytics> getLowRampDownValues() {
    return lowRampDownValues;
  }


  @JsonProperty(JSON_PROPERTY_LOW_RAMP_DOWN_VALUES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLowRampDownValues(java.util.List<RampDownModelAnalytics> lowRampDownValues) {
    this.lowRampDownValues = lowRampDownValues;
  }


  public RampDownResponseOptions rampDownValues(java.util.List<RampDownModelAnalytics> rampDownValues) {
    this.rampDownValues = rampDownValues;
    return this;
  }

  public RampDownResponseOptions addRampDownValuesItem(RampDownModelAnalytics rampDownValuesItem) {
    if (this.rampDownValues == null) {
      this.rampDownValues = new java.util.ArrayList<>();
    }
    this.rampDownValues.add(rampDownValuesItem);
    return this;
  }

   /**
   * Get rampDownValues
   * @return rampDownValues
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RAMP_DOWN_VALUES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<RampDownModelAnalytics> getRampDownValues() {
    return rampDownValues;
  }


  @JsonProperty(JSON_PROPERTY_RAMP_DOWN_VALUES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRampDownValues(java.util.List<RampDownModelAnalytics> rampDownValues) {
    this.rampDownValues = rampDownValues;
  }


  /**
   * Return true if this RampDownResponseOptions object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RampDownResponseOptions rampDownResponseOptions = (RampDownResponseOptions) o;
    return equalsNullable(this.attribute, rampDownResponseOptions.attribute) &&
        Objects.equals(this.highRampDownValues, rampDownResponseOptions.highRampDownValues) &&
        Objects.equals(this.lowRampDownValues, rampDownResponseOptions.lowRampDownValues) &&
        Objects.equals(this.rampDownValues, rampDownResponseOptions.rampDownValues);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(attribute), highRampDownValues, lowRampDownValues, rampDownValues);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RampDownResponseOptions {\n");
    sb.append("    attribute: ").append(toIndentedString(attribute)).append("\n");
    sb.append("    highRampDownValues: ").append(toIndentedString(highRampDownValues)).append("\n");
    sb.append("    lowRampDownValues: ").append(toIndentedString(lowRampDownValues)).append("\n");
    sb.append("    rampDownValues: ").append(toIndentedString(rampDownValues)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

