/*
 * Cabot Models API
 * Cabot Models API
 *
 * The version of the OpenAPI document: 0.4.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.Cabot.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.Cabot.JSON;


/**
 * SkillsModelAnalytics
 */
@JsonPropertyOrder({
  SkillsModelAnalytics.JSON_PROPERTY_BUY_SKILL,
  SkillsModelAnalytics.JSON_PROPERTY_SELL_SKILL,
  SkillsModelAnalytics.JSON_PROPERTY_SIZING_SKILL
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class SkillsModelAnalytics implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_BUY_SKILL = "buySkill";
  private BigDecimal buySkill;

  public static final String JSON_PROPERTY_SELL_SKILL = "sellSkill";
  private BigDecimal sellSkill;

  public static final String JSON_PROPERTY_SIZING_SKILL = "sizingSkill";
  private BigDecimal sizingSkill;

  public SkillsModelAnalytics() { 
  }

  public SkillsModelAnalytics buySkill(BigDecimal buySkill) {
    this.buySkill = buySkill;
    return this;
  }

   /**
   * This measures effectiveness in name selection.
   * @return buySkill
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "This measures effectiveness in name selection.")
  @JsonProperty(JSON_PROPERTY_BUY_SKILL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getBuySkill() {
    return buySkill;
  }


  @JsonProperty(JSON_PROPERTY_BUY_SKILL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBuySkill(BigDecimal buySkill) {
    this.buySkill = buySkill;
  }


  public SkillsModelAnalytics sellSkill(BigDecimal sellSkill) {
    this.sellSkill = sellSkill;
    return this;
  }

   /**
   * This quantifies the effectiveness of the sell discipline (final sells). It considers the impact from selling younger positions (i.e., too quickly, too slowly, done well) and from selling older positions (i.e., too quickly, too slowly, done well).
   * @return sellSkill
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "This quantifies the effectiveness of the sell discipline (final sells). It considers the impact from selling younger positions (i.e., too quickly, too slowly, done well) and from selling older positions (i.e., too quickly, too slowly, done well).")
  @JsonProperty(JSON_PROPERTY_SELL_SKILL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getSellSkill() {
    return sellSkill;
  }


  @JsonProperty(JSON_PROPERTY_SELL_SKILL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSellSkill(BigDecimal sellSkill) {
    this.sellSkill = sellSkill;
  }


  public SkillsModelAnalytics sizingSkill(BigDecimal sizingSkill) {
    this.sizingSkill = sizingSkill;
    return this;
  }

   /**
   * This quantifies the benefit of active sizing decisions including initial position build up and subsequent trims and adds.
   * @return sizingSkill
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "This quantifies the benefit of active sizing decisions including initial position build up and subsequent trims and adds.")
  @JsonProperty(JSON_PROPERTY_SIZING_SKILL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getSizingSkill() {
    return sizingSkill;
  }


  @JsonProperty(JSON_PROPERTY_SIZING_SKILL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSizingSkill(BigDecimal sizingSkill) {
    this.sizingSkill = sizingSkill;
  }


  /**
   * Return true if this SkillsModelAnalytics object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SkillsModelAnalytics skillsModelAnalytics = (SkillsModelAnalytics) o;
    return Objects.equals(this.buySkill, skillsModelAnalytics.buySkill) &&
        Objects.equals(this.sellSkill, skillsModelAnalytics.sellSkill) &&
        Objects.equals(this.sizingSkill, skillsModelAnalytics.sizingSkill);
  }

  @Override
  public int hashCode() {
    return Objects.hash(buySkill, sellSkill, sizingSkill);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SkillsModelAnalytics {\n");
    sb.append("    buySkill: ").append(toIndentedString(buySkill)).append("\n");
    sb.append("    sellSkill: ").append(toIndentedString(sellSkill)).append("\n");
    sb.append("    sizingSkill: ").append(toIndentedString(sizingSkill)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

