/*
 * Cabot Models API
 * Cabot Models API
 *
 * The version of the OpenAPI document: 0.2.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.Cabot.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.Cabot.models.BuyContextModelAnalyticsContext;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.Cabot.JSON;


/**
 * BuyContextModelAnalytics
 */
@JsonPropertyOrder({
  BuyContextModelAnalytics.JSON_PROPERTY_AFFECT,
  BuyContextModelAnalytics.JSON_PROPERTY_CONTEXT,
  BuyContextModelAnalytics.JSON_PROPERTY_RANGE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class BuyContextModelAnalytics implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_AFFECT = "affect";
  private BigDecimal affect;

  public static final String JSON_PROPERTY_CONTEXT = "context";
  private BuyContextModelAnalyticsContext context;

  public static final String JSON_PROPERTY_RANGE = "range";
  private BigDecimal range;

  public BuyContextModelAnalytics() { 
  }

  public BuyContextModelAnalytics affect(BigDecimal affect) {
    this.affect = affect;
    return this;
  }

   /**
   * Get affect
   * @return affect
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_AFFECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAffect() {
    return affect;
  }


  @JsonProperty(JSON_PROPERTY_AFFECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAffect(BigDecimal affect) {
    this.affect = affect;
  }


  public BuyContextModelAnalytics context(BuyContextModelAnalyticsContext context) {
    this.context = context;
    return this;
  }

   /**
   * Get context
   * @return context
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONTEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BuyContextModelAnalyticsContext getContext() {
    return context;
  }


  @JsonProperty(JSON_PROPERTY_CONTEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContext(BuyContextModelAnalyticsContext context) {
    this.context = context;
  }


  public BuyContextModelAnalytics range(BigDecimal range) {
    this.range = range;
    return this;
  }

   /**
   * The relevance of an attribute with regard to the manager’s buy process is quantified and listed from largest to smallest. A large range indicates that the attribute is not pertinent, or targeted, in the manager’s buy process. A small range indicates that a particular level of the attribute (high, lower average) is targeted in the manager’s buy process.
   * @return range
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The relevance of an attribute with regard to the manager’s buy process is quantified and listed from largest to smallest. A large range indicates that the attribute is not pertinent, or targeted, in the manager’s buy process. A small range indicates that a particular level of the attribute (high, lower average) is targeted in the manager’s buy process.")
  @JsonProperty(JSON_PROPERTY_RANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getRange() {
    return range;
  }


  @JsonProperty(JSON_PROPERTY_RANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRange(BigDecimal range) {
    this.range = range;
  }


  /**
   * Return true if this BuyContextModelAnalytics object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BuyContextModelAnalytics buyContextModelAnalytics = (BuyContextModelAnalytics) o;
    return Objects.equals(this.affect, buyContextModelAnalytics.affect) &&
        Objects.equals(this.context, buyContextModelAnalytics.context) &&
        Objects.equals(this.range, buyContextModelAnalytics.range);
  }

  @Override
  public int hashCode() {
    return Objects.hash(affect, context, range);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BuyContextModelAnalytics {\n");
    sb.append("    affect: ").append(toIndentedString(affect)).append("\n");
    sb.append("    context: ").append(toIndentedString(context)).append("\n");
    sb.append("    range: ").append(toIndentedString(range)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

