/*
 * Cabot Models API
 * Cabot Models API
 *
 * The version of the OpenAPI document: 0.4.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.Cabot.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.Cabot.JSON;


/**
 * HitRateRequestBody
 */
@JsonPropertyOrder({
  HitRateRequestBody.JSON_PROPERTY_ACCOUNT_PATH,
  HitRateRequestBody.JSON_PROPERTY_BENCHMARK_PATH,
  HitRateRequestBody.JSON_PROPERTY_PERIOD,
  HitRateRequestBody.JSON_PROPERTY_SECTOR,
  HitRateRequestBody.JSON_PROPERTY_REGION,
  HitRateRequestBody.JSON_PROPERTY_CUSTOM_CLASSIFICATIONS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class HitRateRequestBody implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ACCOUNT_PATH = "accountPath";
  private String accountPath;

  public static final String JSON_PROPERTY_BENCHMARK_PATH = "benchmarkPath";
  private String benchmarkPath;

  public static final String JSON_PROPERTY_PERIOD = "period";
  private String period;

  public static final String JSON_PROPERTY_SECTOR = "sector";
  private String sector;

  public static final String JSON_PROPERTY_REGION = "region";
  private String region;

  public static final String JSON_PROPERTY_CUSTOM_CLASSIFICATIONS = "customClassifications";
  private java.util.Map<String, String> customClassifications = null;

  public HitRateRequestBody() { 
  }

  @JsonCreator
  public HitRateRequestBody(
    @JsonProperty(value=JSON_PROPERTY_ACCOUNT_PATH, required=true) String accountPath, 
    @JsonProperty(value=JSON_PROPERTY_BENCHMARK_PATH, required=true) String benchmarkPath, 
    @JsonProperty(value=JSON_PROPERTY_PERIOD, required=true) String period, 
    @JsonProperty(value=JSON_PROPERTY_SECTOR, required=true) String sector, 
    @JsonProperty(value=JSON_PROPERTY_REGION, required=true) String region
  ) {
    this();
    this.accountPath = accountPath;
    this.benchmarkPath = benchmarkPath;
    this.period = period;
    this.sector = sector;
    this.region = region;
  }

  public HitRateRequestBody accountPath(String accountPath) {
    this.accountPath = accountPath;
    return this;
  }

   /**
   * The account path of the portfolio you want to retrieve the data for.
   * @return accountPath
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The account path of the portfolio you want to retrieve the data for.")
  @JsonProperty(JSON_PROPERTY_ACCOUNT_PATH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAccountPath() {
    return accountPath;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_PATH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAccountPath(String accountPath) {
    this.accountPath = accountPath;
  }


  public HitRateRequestBody benchmarkPath(String benchmarkPath) {
    this.benchmarkPath = benchmarkPath;
    return this;
  }

   /**
   * The path of the benchmark you want to retrieve the data for.
   * @return benchmarkPath
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The path of the benchmark you want to retrieve the data for.")
  @JsonProperty(JSON_PROPERTY_BENCHMARK_PATH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBenchmarkPath() {
    return benchmarkPath;
  }


  @JsonProperty(JSON_PROPERTY_BENCHMARK_PATH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBenchmarkPath(String benchmarkPath) {
    this.benchmarkPath = benchmarkPath;
  }


  public HitRateRequestBody period(String period) {
    this.period = period;
    return this;
  }

   /**
   * For which period you want to retrieve the data.
   * @return period
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "2015-2017", required = true, value = "For which period you want to retrieve the data.")
  @JsonProperty(JSON_PROPERTY_PERIOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPeriod() {
    return period;
  }


  @JsonProperty(JSON_PROPERTY_PERIOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPeriod(String period) {
    this.period = period;
  }


  public HitRateRequestBody sector(String sector) {
    this.sector = sector;
    return this;
  }

   /**
   * Represents the sector based on the company&#39;s industry breakdown.
   * @return sector
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "energy", required = true, value = "Represents the sector based on the company's industry breakdown.")
  @JsonProperty(JSON_PROPERTY_SECTOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSector() {
    return sector;
  }


  @JsonProperty(JSON_PROPERTY_SECTOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSector(String sector) {
    this.sector = sector;
  }


  public HitRateRequestBody region(String region) {
    this.region = region;
    return this;
  }

   /**
   * Region of domicile represents the region based on the company&#39;s primary listing.
   * @return region
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "northAmerica", required = true, value = "Region of domicile represents the region based on the company's primary listing.")
  @JsonProperty(JSON_PROPERTY_REGION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRegion() {
    return region;
  }


  @JsonProperty(JSON_PROPERTY_REGION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRegion(String region) {
    this.region = region;
  }


  public HitRateRequestBody customClassifications(java.util.Map<String, String> customClassifications) {
    this.customClassifications = customClassifications;
    return this;
  }

  public HitRateRequestBody putCustomClassificationsItem(String key, String customClassificationsItem) {
    if (this.customClassifications == null) {
      this.customClassifications = new java.util.HashMap<>();
    }
    this.customClassifications.put(key, customClassificationsItem);
    return this;
  }

   /**
   * A map-like structure representing key-value pairs of custom classifications. This differs from the default classifications such as region and sector, for which we have different query parameters. If both are provided, the API will choose which one to use based on your portfolio.
   * @return customClassifications
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "{\"mySector\":\"tourism\",\"myRegion\":\"germany\"}", value = "A map-like structure representing key-value pairs of custom classifications. This differs from the default classifications such as region and sector, for which we have different query parameters. If both are provided, the API will choose which one to use based on your portfolio.")
  @JsonProperty(JSON_PROPERTY_CUSTOM_CLASSIFICATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.Map<String, String> getCustomClassifications() {
    return customClassifications;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOM_CLASSIFICATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomClassifications(java.util.Map<String, String> customClassifications) {
    this.customClassifications = customClassifications;
  }


  /**
   * Return true if this HitRateRequestBody object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HitRateRequestBody hitRateRequestBody = (HitRateRequestBody) o;
    return Objects.equals(this.accountPath, hitRateRequestBody.accountPath) &&
        Objects.equals(this.benchmarkPath, hitRateRequestBody.benchmarkPath) &&
        Objects.equals(this.period, hitRateRequestBody.period) &&
        Objects.equals(this.sector, hitRateRequestBody.sector) &&
        Objects.equals(this.region, hitRateRequestBody.region) &&
        Objects.equals(this.customClassifications, hitRateRequestBody.customClassifications);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountPath, benchmarkPath, period, sector, region, customClassifications);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HitRateRequestBody {\n");
    sb.append("    accountPath: ").append(toIndentedString(accountPath)).append("\n");
    sb.append("    benchmarkPath: ").append(toIndentedString(benchmarkPath)).append("\n");
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("    sector: ").append(toIndentedString(sector)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    customClassifications: ").append(toIndentedString(customClassifications)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

