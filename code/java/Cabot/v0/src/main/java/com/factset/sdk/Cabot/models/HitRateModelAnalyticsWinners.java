/*
 * Cabot Models API
 * Cabot Models API
 *
 * The version of the OpenAPI document: 0.4.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.Cabot.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.Cabot.JSON;


/**
 * Winner are Positions that detracted from portfolio results.
 */
@ApiModel(description = "Winner are Positions that detracted from portfolio results.")
@JsonPropertyOrder({
  HitRateModelAnalyticsWinners.JSON_PROPERTY_BENEFIT,
  HitRateModelAnalyticsWinners.JSON_PROPERTY_PERCENT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class HitRateModelAnalyticsWinners implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_BENEFIT = "benefit";
  private BigDecimal benefit;

  public static final String JSON_PROPERTY_PERCENT = "percent";
  private BigDecimal percent;

  public HitRateModelAnalyticsWinners() { 
  }

  public HitRateModelAnalyticsWinners benefit(BigDecimal benefit) {
    this.benefit = benefit;
    return this;
  }

   /**
   * Get benefit
   * @return benefit
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_BENEFIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getBenefit() {
    return benefit;
  }


  @JsonProperty(JSON_PROPERTY_BENEFIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBenefit(BigDecimal benefit) {
    this.benefit = benefit;
  }


  public HitRateModelAnalyticsWinners percent(BigDecimal percent) {
    this.percent = percent;
    return this;
  }

   /**
   * Get percent
   * @return percent
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PERCENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPercent() {
    return percent;
  }


  @JsonProperty(JSON_PROPERTY_PERCENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPercent(BigDecimal percent) {
    this.percent = percent;
  }


  /**
   * Return true if this HitRateModelAnalytics_winners object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HitRateModelAnalyticsWinners hitRateModelAnalyticsWinners = (HitRateModelAnalyticsWinners) o;
    return Objects.equals(this.benefit, hitRateModelAnalyticsWinners.benefit) &&
        Objects.equals(this.percent, hitRateModelAnalyticsWinners.percent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(benefit, percent);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HitRateModelAnalyticsWinners {\n");
    sb.append("    benefit: ").append(toIndentedString(benefit)).append("\n");
    sb.append("    percent: ").append(toIndentedString(percent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

