/*
 * IRN API v1
 * Allows users to extract, create, update and configure IRN data.
 *
 * The version of the OpenAPI document: 1
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.IRNContacts.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.IRNContacts.models.AlternativeEmailAddressDto;
import com.factset.sdk.IRNContacts.models.ContactAddressDto;
import com.factset.sdk.IRNContacts.models.ContactCustomFieldValueSaveDto;
import com.factset.sdk.IRNContacts.models.ContactPhoneSaveDto;
import com.factset.sdk.IRNContacts.models.ContactRelationshipSaveDto;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.net.URI;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.IRNContacts.JSON;


/**
 * ContactSaveDto
 */
@JsonPropertyOrder({
  ContactSaveDto.JSON_PROPERTY_PRIMARY_EMAIL_ADDRESS,
  ContactSaveDto.JSON_PROPERTY_FULL_NAME,
  ContactSaveDto.JSON_PROPERTY_NOTES,
  ContactSaveDto.JSON_PROPERTY_LINKED_IN_PROFILE,
  ContactSaveDto.JSON_PROPERTY_PERSON_SYMBOL,
  ContactSaveDto.JSON_PROPERTY_ROLE_ID,
  ContactSaveDto.JSON_PROPERTY_TYPE_ID,
  ContactSaveDto.JSON_PROPERTY_ADDRESS,
  ContactSaveDto.JSON_PROPERTY_PHONE_NUMBERS,
  ContactSaveDto.JSON_PROPERTY_LEFT_RELATIONSHIPS,
  ContactSaveDto.JSON_PROPERTY_RIGHT_RELATIONSHIPS,
  ContactSaveDto.JSON_PROPERTY_ALTERNATIVE_EMAIL_ADDRESSES,
  ContactSaveDto.JSON_PROPERTY_CUSTOM_FIELDS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class ContactSaveDto implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_PRIMARY_EMAIL_ADDRESS = "primaryEmailAddress";
  private JsonNullable<String> primaryEmailAddress = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FULL_NAME = "fullName";
  private JsonNullable<String> fullName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NOTES = "notes";
  private JsonNullable<String> notes = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LINKED_IN_PROFILE = "linkedInProfile";
  private JsonNullable<URI> linkedInProfile = JsonNullable.<URI>undefined();

  public static final String JSON_PROPERTY_PERSON_SYMBOL = "personSymbol";
  private JsonNullable<String> personSymbol = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ROLE_ID = "roleId";
  private java.util.UUID roleId;

  public static final String JSON_PROPERTY_TYPE_ID = "typeId";
  private java.util.UUID typeId;

  public static final String JSON_PROPERTY_ADDRESS = "address";
  private JsonNullable<ContactAddressDto> address = JsonNullable.<ContactAddressDto>undefined();

  public static final String JSON_PROPERTY_PHONE_NUMBERS = "phoneNumbers";
  private JsonNullable<java.util.List<ContactPhoneSaveDto>> phoneNumbers = JsonNullable.<java.util.List<ContactPhoneSaveDto>>undefined();

  public static final String JSON_PROPERTY_LEFT_RELATIONSHIPS = "leftRelationships";
  private JsonNullable<java.util.List<ContactRelationshipSaveDto>> leftRelationships = JsonNullable.<java.util.List<ContactRelationshipSaveDto>>undefined();

  public static final String JSON_PROPERTY_RIGHT_RELATIONSHIPS = "rightRelationships";
  private JsonNullable<java.util.List<ContactRelationshipSaveDto>> rightRelationships = JsonNullable.<java.util.List<ContactRelationshipSaveDto>>undefined();

  public static final String JSON_PROPERTY_ALTERNATIVE_EMAIL_ADDRESSES = "alternativeEmailAddresses";
  private JsonNullable<java.util.List<AlternativeEmailAddressDto>> alternativeEmailAddresses = JsonNullable.<java.util.List<AlternativeEmailAddressDto>>undefined();

  public static final String JSON_PROPERTY_CUSTOM_FIELDS = "customFields";
  private JsonNullable<java.util.List<ContactCustomFieldValueSaveDto>> customFields = JsonNullable.<java.util.List<ContactCustomFieldValueSaveDto>>undefined();

  public ContactSaveDto() { 
  }

  public ContactSaveDto primaryEmailAddress(String primaryEmailAddress) {
    this.primaryEmailAddress = JsonNullable.<String>of(primaryEmailAddress);
    return this;
  }

   /**
   * Get primaryEmailAddress
   * @return primaryEmailAddress
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPrimaryEmailAddress() {
        return primaryEmailAddress.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRIMARY_EMAIL_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPrimaryEmailAddress_JsonNullable() {
    return primaryEmailAddress;
  }
  
  @JsonProperty(JSON_PROPERTY_PRIMARY_EMAIL_ADDRESS)
  public void setPrimaryEmailAddress_JsonNullable(JsonNullable<String> primaryEmailAddress) {
    this.primaryEmailAddress = primaryEmailAddress;
  }

  public void setPrimaryEmailAddress(String primaryEmailAddress) {
    this.primaryEmailAddress = JsonNullable.<String>of(primaryEmailAddress);
  }


  public ContactSaveDto fullName(String fullName) {
    this.fullName = JsonNullable.<String>of(fullName);
    return this;
  }

   /**
   * Get fullName
   * @return fullName
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getFullName() {
        return fullName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FULL_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFullName_JsonNullable() {
    return fullName;
  }
  
  @JsonProperty(JSON_PROPERTY_FULL_NAME)
  public void setFullName_JsonNullable(JsonNullable<String> fullName) {
    this.fullName = fullName;
  }

  public void setFullName(String fullName) {
    this.fullName = JsonNullable.<String>of(fullName);
  }


  public ContactSaveDto notes(String notes) {
    this.notes = JsonNullable.<String>of(notes);
    return this;
  }

   /**
   * Get notes
   * @return notes
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNotes() {
        return notes.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NOTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNotes_JsonNullable() {
    return notes;
  }
  
  @JsonProperty(JSON_PROPERTY_NOTES)
  public void setNotes_JsonNullable(JsonNullable<String> notes) {
    this.notes = notes;
  }

  public void setNotes(String notes) {
    this.notes = JsonNullable.<String>of(notes);
  }


  public ContactSaveDto linkedInProfile(URI linkedInProfile) {
    this.linkedInProfile = JsonNullable.<URI>of(linkedInProfile);
    return this;
  }

   /**
   * Get linkedInProfile
   * @return linkedInProfile
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public URI getLinkedInProfile() {
        return linkedInProfile.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LINKED_IN_PROFILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<URI> getLinkedInProfile_JsonNullable() {
    return linkedInProfile;
  }
  
  @JsonProperty(JSON_PROPERTY_LINKED_IN_PROFILE)
  public void setLinkedInProfile_JsonNullable(JsonNullable<URI> linkedInProfile) {
    this.linkedInProfile = linkedInProfile;
  }

  public void setLinkedInProfile(URI linkedInProfile) {
    this.linkedInProfile = JsonNullable.<URI>of(linkedInProfile);
  }


  public ContactSaveDto personSymbol(String personSymbol) {
    this.personSymbol = JsonNullable.<String>of(personSymbol);
    return this;
  }

   /**
   * Get personSymbol
   * @return personSymbol
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPersonSymbol() {
        return personSymbol.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PERSON_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPersonSymbol_JsonNullable() {
    return personSymbol;
  }
  
  @JsonProperty(JSON_PROPERTY_PERSON_SYMBOL)
  public void setPersonSymbol_JsonNullable(JsonNullable<String> personSymbol) {
    this.personSymbol = personSymbol;
  }

  public void setPersonSymbol(String personSymbol) {
    this.personSymbol = JsonNullable.<String>of(personSymbol);
  }


  public ContactSaveDto roleId(java.util.UUID roleId) {
    this.roleId = roleId;
    return this;
  }

   /**
   * Get roleId
   * @return roleId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ROLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.UUID getRoleId() {
    return roleId;
  }


  @JsonProperty(JSON_PROPERTY_ROLE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRoleId(java.util.UUID roleId) {
    this.roleId = roleId;
  }


  public ContactSaveDto typeId(java.util.UUID typeId) {
    this.typeId = typeId;
    return this;
  }

   /**
   * Get typeId
   * @return typeId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TYPE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.UUID getTypeId() {
    return typeId;
  }


  @JsonProperty(JSON_PROPERTY_TYPE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTypeId(java.util.UUID typeId) {
    this.typeId = typeId;
  }


  public ContactSaveDto address(ContactAddressDto address) {
    this.address = JsonNullable.<ContactAddressDto>of(address);
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public ContactAddressDto getAddress() {
        return address.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ContactAddressDto> getAddress_JsonNullable() {
    return address;
  }
  
  @JsonProperty(JSON_PROPERTY_ADDRESS)
  public void setAddress_JsonNullable(JsonNullable<ContactAddressDto> address) {
    this.address = address;
  }

  public void setAddress(ContactAddressDto address) {
    this.address = JsonNullable.<ContactAddressDto>of(address);
  }


  public ContactSaveDto phoneNumbers(java.util.List<ContactPhoneSaveDto> phoneNumbers) {
    this.phoneNumbers = JsonNullable.<java.util.List<ContactPhoneSaveDto>>of(phoneNumbers);
    return this;
  }

  public ContactSaveDto addPhoneNumbersItem(ContactPhoneSaveDto phoneNumbersItem) {
    if (this.phoneNumbers == null || !this.phoneNumbers.isPresent()) {
      this.phoneNumbers = JsonNullable.<java.util.List<ContactPhoneSaveDto>>of(new java.util.ArrayList<>());
    }
    try {
      this.phoneNumbers.get().add(phoneNumbersItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get phoneNumbers
   * @return phoneNumbers
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public java.util.List<ContactPhoneSaveDto> getPhoneNumbers() {
        return phoneNumbers.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PHONE_NUMBERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<java.util.List<ContactPhoneSaveDto>> getPhoneNumbers_JsonNullable() {
    return phoneNumbers;
  }
  
  @JsonProperty(JSON_PROPERTY_PHONE_NUMBERS)
  public void setPhoneNumbers_JsonNullable(JsonNullable<java.util.List<ContactPhoneSaveDto>> phoneNumbers) {
    this.phoneNumbers = phoneNumbers;
  }

  public void setPhoneNumbers(java.util.List<ContactPhoneSaveDto> phoneNumbers) {
    this.phoneNumbers = JsonNullable.<java.util.List<ContactPhoneSaveDto>>of(phoneNumbers);
  }


  public ContactSaveDto leftRelationships(java.util.List<ContactRelationshipSaveDto> leftRelationships) {
    this.leftRelationships = JsonNullable.<java.util.List<ContactRelationshipSaveDto>>of(leftRelationships);
    return this;
  }

  public ContactSaveDto addLeftRelationshipsItem(ContactRelationshipSaveDto leftRelationshipsItem) {
    if (this.leftRelationships == null || !this.leftRelationships.isPresent()) {
      this.leftRelationships = JsonNullable.<java.util.List<ContactRelationshipSaveDto>>of(new java.util.ArrayList<>());
    }
    try {
      this.leftRelationships.get().add(leftRelationshipsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get leftRelationships
   * @return leftRelationships
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public java.util.List<ContactRelationshipSaveDto> getLeftRelationships() {
        return leftRelationships.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LEFT_RELATIONSHIPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<java.util.List<ContactRelationshipSaveDto>> getLeftRelationships_JsonNullable() {
    return leftRelationships;
  }
  
  @JsonProperty(JSON_PROPERTY_LEFT_RELATIONSHIPS)
  public void setLeftRelationships_JsonNullable(JsonNullable<java.util.List<ContactRelationshipSaveDto>> leftRelationships) {
    this.leftRelationships = leftRelationships;
  }

  public void setLeftRelationships(java.util.List<ContactRelationshipSaveDto> leftRelationships) {
    this.leftRelationships = JsonNullable.<java.util.List<ContactRelationshipSaveDto>>of(leftRelationships);
  }


  public ContactSaveDto rightRelationships(java.util.List<ContactRelationshipSaveDto> rightRelationships) {
    this.rightRelationships = JsonNullable.<java.util.List<ContactRelationshipSaveDto>>of(rightRelationships);
    return this;
  }

  public ContactSaveDto addRightRelationshipsItem(ContactRelationshipSaveDto rightRelationshipsItem) {
    if (this.rightRelationships == null || !this.rightRelationships.isPresent()) {
      this.rightRelationships = JsonNullable.<java.util.List<ContactRelationshipSaveDto>>of(new java.util.ArrayList<>());
    }
    try {
      this.rightRelationships.get().add(rightRelationshipsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get rightRelationships
   * @return rightRelationships
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public java.util.List<ContactRelationshipSaveDto> getRightRelationships() {
        return rightRelationships.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RIGHT_RELATIONSHIPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<java.util.List<ContactRelationshipSaveDto>> getRightRelationships_JsonNullable() {
    return rightRelationships;
  }
  
  @JsonProperty(JSON_PROPERTY_RIGHT_RELATIONSHIPS)
  public void setRightRelationships_JsonNullable(JsonNullable<java.util.List<ContactRelationshipSaveDto>> rightRelationships) {
    this.rightRelationships = rightRelationships;
  }

  public void setRightRelationships(java.util.List<ContactRelationshipSaveDto> rightRelationships) {
    this.rightRelationships = JsonNullable.<java.util.List<ContactRelationshipSaveDto>>of(rightRelationships);
  }


  public ContactSaveDto alternativeEmailAddresses(java.util.List<AlternativeEmailAddressDto> alternativeEmailAddresses) {
    this.alternativeEmailAddresses = JsonNullable.<java.util.List<AlternativeEmailAddressDto>>of(alternativeEmailAddresses);
    return this;
  }

  public ContactSaveDto addAlternativeEmailAddressesItem(AlternativeEmailAddressDto alternativeEmailAddressesItem) {
    if (this.alternativeEmailAddresses == null || !this.alternativeEmailAddresses.isPresent()) {
      this.alternativeEmailAddresses = JsonNullable.<java.util.List<AlternativeEmailAddressDto>>of(new java.util.ArrayList<>());
    }
    try {
      this.alternativeEmailAddresses.get().add(alternativeEmailAddressesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get alternativeEmailAddresses
   * @return alternativeEmailAddresses
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public java.util.List<AlternativeEmailAddressDto> getAlternativeEmailAddresses() {
        return alternativeEmailAddresses.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ALTERNATIVE_EMAIL_ADDRESSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<java.util.List<AlternativeEmailAddressDto>> getAlternativeEmailAddresses_JsonNullable() {
    return alternativeEmailAddresses;
  }
  
  @JsonProperty(JSON_PROPERTY_ALTERNATIVE_EMAIL_ADDRESSES)
  public void setAlternativeEmailAddresses_JsonNullable(JsonNullable<java.util.List<AlternativeEmailAddressDto>> alternativeEmailAddresses) {
    this.alternativeEmailAddresses = alternativeEmailAddresses;
  }

  public void setAlternativeEmailAddresses(java.util.List<AlternativeEmailAddressDto> alternativeEmailAddresses) {
    this.alternativeEmailAddresses = JsonNullable.<java.util.List<AlternativeEmailAddressDto>>of(alternativeEmailAddresses);
  }


  public ContactSaveDto customFields(java.util.List<ContactCustomFieldValueSaveDto> customFields) {
    this.customFields = JsonNullable.<java.util.List<ContactCustomFieldValueSaveDto>>of(customFields);
    return this;
  }

  public ContactSaveDto addCustomFieldsItem(ContactCustomFieldValueSaveDto customFieldsItem) {
    if (this.customFields == null || !this.customFields.isPresent()) {
      this.customFields = JsonNullable.<java.util.List<ContactCustomFieldValueSaveDto>>of(new java.util.ArrayList<>());
    }
    try {
      this.customFields.get().add(customFieldsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get customFields
   * @return customFields
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public java.util.List<ContactCustomFieldValueSaveDto> getCustomFields() {
        return customFields.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CUSTOM_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<java.util.List<ContactCustomFieldValueSaveDto>> getCustomFields_JsonNullable() {
    return customFields;
  }
  
  @JsonProperty(JSON_PROPERTY_CUSTOM_FIELDS)
  public void setCustomFields_JsonNullable(JsonNullable<java.util.List<ContactCustomFieldValueSaveDto>> customFields) {
    this.customFields = customFields;
  }

  public void setCustomFields(java.util.List<ContactCustomFieldValueSaveDto> customFields) {
    this.customFields = JsonNullable.<java.util.List<ContactCustomFieldValueSaveDto>>of(customFields);
  }


  /**
   * Return true if this ContactSaveDto object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContactSaveDto contactSaveDto = (ContactSaveDto) o;
    return equalsNullable(this.primaryEmailAddress, contactSaveDto.primaryEmailAddress) &&
        equalsNullable(this.fullName, contactSaveDto.fullName) &&
        equalsNullable(this.notes, contactSaveDto.notes) &&
        equalsNullable(this.linkedInProfile, contactSaveDto.linkedInProfile) &&
        equalsNullable(this.personSymbol, contactSaveDto.personSymbol) &&
        Objects.equals(this.roleId, contactSaveDto.roleId) &&
        Objects.equals(this.typeId, contactSaveDto.typeId) &&
        equalsNullable(this.address, contactSaveDto.address) &&
        equalsNullable(this.phoneNumbers, contactSaveDto.phoneNumbers) &&
        equalsNullable(this.leftRelationships, contactSaveDto.leftRelationships) &&
        equalsNullable(this.rightRelationships, contactSaveDto.rightRelationships) &&
        equalsNullable(this.alternativeEmailAddresses, contactSaveDto.alternativeEmailAddresses) &&
        equalsNullable(this.customFields, contactSaveDto.customFields);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(primaryEmailAddress), hashCodeNullable(fullName), hashCodeNullable(notes), hashCodeNullable(linkedInProfile), hashCodeNullable(personSymbol), roleId, typeId, hashCodeNullable(address), hashCodeNullable(phoneNumbers), hashCodeNullable(leftRelationships), hashCodeNullable(rightRelationships), hashCodeNullable(alternativeEmailAddresses), hashCodeNullable(customFields));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContactSaveDto {\n");
    sb.append("    primaryEmailAddress: ").append(toIndentedString(primaryEmailAddress)).append("\n");
    sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    linkedInProfile: ").append(toIndentedString(linkedInProfile)).append("\n");
    sb.append("    personSymbol: ").append(toIndentedString(personSymbol)).append("\n");
    sb.append("    roleId: ").append(toIndentedString(roleId)).append("\n");
    sb.append("    typeId: ").append(toIndentedString(typeId)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    phoneNumbers: ").append(toIndentedString(phoneNumbers)).append("\n");
    sb.append("    leftRelationships: ").append(toIndentedString(leftRelationships)).append("\n");
    sb.append("    rightRelationships: ").append(toIndentedString(rightRelationships)).append("\n");
    sb.append("    alternativeEmailAddresses: ").append(toIndentedString(alternativeEmailAddresses)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

