/*
 * IRN API v1
 * Allows users to extract, create, update and configure IRN data.
 *
 * The version of the OpenAPI document: 1
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.IRNContacts.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.IRNContacts.JSON;


/**
 * ContactRelationshipSaveDto
 */
@JsonPropertyOrder({
  ContactRelationshipSaveDto.JSON_PROPERTY_RELATIONSHIP_ID,
  ContactRelationshipSaveDto.JSON_PROPERTY_CONTACT_ID,
  ContactRelationshipSaveDto.JSON_PROPERTY_START,
  ContactRelationshipSaveDto.JSON_PROPERTY_END,
  ContactRelationshipSaveDto.JSON_PROPERTY_COMMENT,
  ContactRelationshipSaveDto.JSON_PROPERTY_IS_CURRENT,
  ContactRelationshipSaveDto.JSON_PROPERTY_SYMBOL,
  ContactRelationshipSaveDto.JSON_PROPERTY_TITLE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class ContactRelationshipSaveDto implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_RELATIONSHIP_ID = "relationshipId";
  private java.util.UUID relationshipId;

  public static final String JSON_PROPERTY_CONTACT_ID = "contactId";
  private JsonNullable<java.util.UUID> contactId = JsonNullable.<java.util.UUID>undefined();

  public static final String JSON_PROPERTY_START = "start";
  private JsonNullable<OffsetDateTime> start = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_END = "end";
  private JsonNullable<OffsetDateTime> end = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_COMMENT = "comment";
  private JsonNullable<String> comment = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IS_CURRENT = "isCurrent";
  private Boolean isCurrent;

  public static final String JSON_PROPERTY_SYMBOL = "symbol";
  private JsonNullable<String> symbol = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TITLE = "title";
  private JsonNullable<String> title = JsonNullable.<String>undefined();

  public ContactRelationshipSaveDto() { 
  }

  public ContactRelationshipSaveDto relationshipId(java.util.UUID relationshipId) {
    this.relationshipId = relationshipId;
    return this;
  }

   /**
   * Get relationshipId
   * @return relationshipId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RELATIONSHIP_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.UUID getRelationshipId() {
    return relationshipId;
  }


  @JsonProperty(JSON_PROPERTY_RELATIONSHIP_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRelationshipId(java.util.UUID relationshipId) {
    this.relationshipId = relationshipId;
  }


  public ContactRelationshipSaveDto contactId(java.util.UUID contactId) {
    this.contactId = JsonNullable.<java.util.UUID>of(contactId);
    return this;
  }

   /**
   * Get contactId
   * @return contactId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public java.util.UUID getContactId() {
        return contactId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CONTACT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<java.util.UUID> getContactId_JsonNullable() {
    return contactId;
  }
  
  @JsonProperty(JSON_PROPERTY_CONTACT_ID)
  public void setContactId_JsonNullable(JsonNullable<java.util.UUID> contactId) {
    this.contactId = contactId;
  }

  public void setContactId(java.util.UUID contactId) {
    this.contactId = JsonNullable.<java.util.UUID>of(contactId);
  }


  public ContactRelationshipSaveDto start(OffsetDateTime start) {
    this.start = JsonNullable.<OffsetDateTime>of(start);
    return this;
  }

   /**
   * Get start
   * @return start
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public OffsetDateTime getStart() {
        return start.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_START)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getStart_JsonNullable() {
    return start;
  }
  
  @JsonProperty(JSON_PROPERTY_START)
  public void setStart_JsonNullable(JsonNullable<OffsetDateTime> start) {
    this.start = start;
  }

  public void setStart(OffsetDateTime start) {
    this.start = JsonNullable.<OffsetDateTime>of(start);
  }


  public ContactRelationshipSaveDto end(OffsetDateTime end) {
    this.end = JsonNullable.<OffsetDateTime>of(end);
    return this;
  }

   /**
   * Get end
   * @return end
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public OffsetDateTime getEnd() {
        return end.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_END)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getEnd_JsonNullable() {
    return end;
  }
  
  @JsonProperty(JSON_PROPERTY_END)
  public void setEnd_JsonNullable(JsonNullable<OffsetDateTime> end) {
    this.end = end;
  }

  public void setEnd(OffsetDateTime end) {
    this.end = JsonNullable.<OffsetDateTime>of(end);
  }


  public ContactRelationshipSaveDto comment(String comment) {
    this.comment = JsonNullable.<String>of(comment);
    return this;
  }

   /**
   * Get comment
   * @return comment
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getComment() {
        return comment.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getComment_JsonNullable() {
    return comment;
  }
  
  @JsonProperty(JSON_PROPERTY_COMMENT)
  public void setComment_JsonNullable(JsonNullable<String> comment) {
    this.comment = comment;
  }

  public void setComment(String comment) {
    this.comment = JsonNullable.<String>of(comment);
  }


  public ContactRelationshipSaveDto isCurrent(Boolean isCurrent) {
    this.isCurrent = isCurrent;
    return this;
  }

   /**
   * Get isCurrent
   * @return isCurrent
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_IS_CURRENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsCurrent() {
    return isCurrent;
  }


  @JsonProperty(JSON_PROPERTY_IS_CURRENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsCurrent(Boolean isCurrent) {
    this.isCurrent = isCurrent;
  }


  public ContactRelationshipSaveDto symbol(String symbol) {
    this.symbol = JsonNullable.<String>of(symbol);
    return this;
  }

   /**
   * Get symbol
   * @return symbol
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSymbol() {
        return symbol.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSymbol_JsonNullable() {
    return symbol;
  }
  
  @JsonProperty(JSON_PROPERTY_SYMBOL)
  public void setSymbol_JsonNullable(JsonNullable<String> symbol) {
    this.symbol = symbol;
  }

  public void setSymbol(String symbol) {
    this.symbol = JsonNullable.<String>of(symbol);
  }


  public ContactRelationshipSaveDto title(String title) {
    this.title = JsonNullable.<String>of(title);
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getTitle() {
        return title.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTitle_JsonNullable() {
    return title;
  }
  
  @JsonProperty(JSON_PROPERTY_TITLE)
  public void setTitle_JsonNullable(JsonNullable<String> title) {
    this.title = title;
  }

  public void setTitle(String title) {
    this.title = JsonNullable.<String>of(title);
  }


  /**
   * Return true if this ContactRelationshipSaveDto object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContactRelationshipSaveDto contactRelationshipSaveDto = (ContactRelationshipSaveDto) o;
    return Objects.equals(this.relationshipId, contactRelationshipSaveDto.relationshipId) &&
        equalsNullable(this.contactId, contactRelationshipSaveDto.contactId) &&
        equalsNullable(this.start, contactRelationshipSaveDto.start) &&
        equalsNullable(this.end, contactRelationshipSaveDto.end) &&
        equalsNullable(this.comment, contactRelationshipSaveDto.comment) &&
        Objects.equals(this.isCurrent, contactRelationshipSaveDto.isCurrent) &&
        equalsNullable(this.symbol, contactRelationshipSaveDto.symbol) &&
        equalsNullable(this.title, contactRelationshipSaveDto.title);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(relationshipId, hashCodeNullable(contactId), hashCodeNullable(start), hashCodeNullable(end), hashCodeNullable(comment), isCurrent, hashCodeNullable(symbol), hashCodeNullable(title));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContactRelationshipSaveDto {\n");
    sb.append("    relationshipId: ").append(toIndentedString(relationshipId)).append("\n");
    sb.append("    contactId: ").append(toIndentedString(contactId)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    end: ").append(toIndentedString(end)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    isCurrent: ").append(toIndentedString(isCurrent)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

