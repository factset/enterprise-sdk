/*
 * IRN API v1
 * Allows users to extract, create, update and configure IRN data.
 *
 * The version of the OpenAPI document: 1
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.IRNContacts.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.IRNContacts.models.AlternativeEmailAddressDto;
import com.factset.sdk.IRNContacts.models.ContactAddressDto;
import com.factset.sdk.IRNContacts.models.ContactCustomFieldValueDto;
import com.factset.sdk.IRNContacts.models.ContactPhoneDto;
import com.factset.sdk.IRNContacts.models.ContactRoleDto;
import com.factset.sdk.IRNContacts.models.ContactTypeDto;
import com.factset.sdk.IRNContacts.models.EmployerDto;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.IRNContacts.JSON;


/**
 * ContactDto
 */
@JsonPropertyOrder({
  ContactDto.JSON_PROPERTY_ID,
  ContactDto.JSON_PROPERTY_PRIMARY_EMAIL_ADDRESS,
  ContactDto.JSON_PROPERTY_IDENTIFIER,
  ContactDto.JSON_PROPERTY_FULL_NAME,
  ContactDto.JSON_PROPERTY_ADDRESS,
  ContactDto.JSON_PROPERTY_LINKED_IN_PROFILE,
  ContactDto.JSON_PROPERTY_IS_DELETED,
  ContactDto.JSON_PROPERTY_EMPLOYER,
  ContactDto.JSON_PROPERTY_ROLE,
  ContactDto.JSON_PROPERTY_TYPE,
  ContactDto.JSON_PROPERTY_PHONE_NUMBERS,
  ContactDto.JSON_PROPERTY_ALTERNATIVE_EMAIL_ADDRESSES,
  ContactDto.JSON_PROPERTY_CUSTOM_FIELDS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class ContactDto implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ID = "id";
  private java.util.UUID id;

  public static final String JSON_PROPERTY_PRIMARY_EMAIL_ADDRESS = "primaryEmailAddress";
  private JsonNullable<String> primaryEmailAddress = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IDENTIFIER = "identifier";
  private JsonNullable<String> identifier = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FULL_NAME = "fullName";
  private JsonNullable<String> fullName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ADDRESS = "address";
  private JsonNullable<ContactAddressDto> address = JsonNullable.<ContactAddressDto>undefined();

  public static final String JSON_PROPERTY_LINKED_IN_PROFILE = "linkedInProfile";
  private JsonNullable<String> linkedInProfile = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IS_DELETED = "isDeleted";
  private Boolean isDeleted;

  public static final String JSON_PROPERTY_EMPLOYER = "employer";
  private JsonNullable<EmployerDto> employer = JsonNullable.<EmployerDto>undefined();

  public static final String JSON_PROPERTY_ROLE = "role";
  private JsonNullable<ContactRoleDto> role = JsonNullable.<ContactRoleDto>undefined();

  public static final String JSON_PROPERTY_TYPE = "type";
  private JsonNullable<ContactTypeDto> type = JsonNullable.<ContactTypeDto>undefined();

  public static final String JSON_PROPERTY_PHONE_NUMBERS = "phoneNumbers";
  private JsonNullable<java.util.List<ContactPhoneDto>> phoneNumbers = JsonNullable.<java.util.List<ContactPhoneDto>>undefined();

  public static final String JSON_PROPERTY_ALTERNATIVE_EMAIL_ADDRESSES = "alternativeEmailAddresses";
  private JsonNullable<java.util.List<AlternativeEmailAddressDto>> alternativeEmailAddresses = JsonNullable.<java.util.List<AlternativeEmailAddressDto>>undefined();

  public static final String JSON_PROPERTY_CUSTOM_FIELDS = "customFields";
  private JsonNullable<java.util.List<ContactCustomFieldValueDto>> customFields = JsonNullable.<java.util.List<ContactCustomFieldValueDto>>undefined();

  public ContactDto() { 
  }

  public ContactDto id(java.util.UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(java.util.UUID id) {
    this.id = id;
  }


  public ContactDto primaryEmailAddress(String primaryEmailAddress) {
    this.primaryEmailAddress = JsonNullable.<String>of(primaryEmailAddress);
    return this;
  }

   /**
   * Get primaryEmailAddress
   * @return primaryEmailAddress
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPrimaryEmailAddress() {
        return primaryEmailAddress.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRIMARY_EMAIL_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPrimaryEmailAddress_JsonNullable() {
    return primaryEmailAddress;
  }
  
  @JsonProperty(JSON_PROPERTY_PRIMARY_EMAIL_ADDRESS)
  public void setPrimaryEmailAddress_JsonNullable(JsonNullable<String> primaryEmailAddress) {
    this.primaryEmailAddress = primaryEmailAddress;
  }

  public void setPrimaryEmailAddress(String primaryEmailAddress) {
    this.primaryEmailAddress = JsonNullable.<String>of(primaryEmailAddress);
  }


  public ContactDto identifier(String identifier) {
    this.identifier = JsonNullable.<String>of(identifier);
    return this;
  }

   /**
   * Get identifier
   * @return identifier
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdentifier() {
        return identifier.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdentifier_JsonNullable() {
    return identifier;
  }
  
  @JsonProperty(JSON_PROPERTY_IDENTIFIER)
  public void setIdentifier_JsonNullable(JsonNullable<String> identifier) {
    this.identifier = identifier;
  }

  public void setIdentifier(String identifier) {
    this.identifier = JsonNullable.<String>of(identifier);
  }


  public ContactDto fullName(String fullName) {
    this.fullName = JsonNullable.<String>of(fullName);
    return this;
  }

   /**
   * Get fullName
   * @return fullName
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getFullName() {
        return fullName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FULL_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFullName_JsonNullable() {
    return fullName;
  }
  
  @JsonProperty(JSON_PROPERTY_FULL_NAME)
  public void setFullName_JsonNullable(JsonNullable<String> fullName) {
    this.fullName = fullName;
  }

  public void setFullName(String fullName) {
    this.fullName = JsonNullable.<String>of(fullName);
  }


  public ContactDto address(ContactAddressDto address) {
    this.address = JsonNullable.<ContactAddressDto>of(address);
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public ContactAddressDto getAddress() {
        return address.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ContactAddressDto> getAddress_JsonNullable() {
    return address;
  }
  
  @JsonProperty(JSON_PROPERTY_ADDRESS)
  public void setAddress_JsonNullable(JsonNullable<ContactAddressDto> address) {
    this.address = address;
  }

  public void setAddress(ContactAddressDto address) {
    this.address = JsonNullable.<ContactAddressDto>of(address);
  }


  public ContactDto linkedInProfile(String linkedInProfile) {
    this.linkedInProfile = JsonNullable.<String>of(linkedInProfile);
    return this;
  }

   /**
   * Get linkedInProfile
   * @return linkedInProfile
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLinkedInProfile() {
        return linkedInProfile.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LINKED_IN_PROFILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLinkedInProfile_JsonNullable() {
    return linkedInProfile;
  }
  
  @JsonProperty(JSON_PROPERTY_LINKED_IN_PROFILE)
  public void setLinkedInProfile_JsonNullable(JsonNullable<String> linkedInProfile) {
    this.linkedInProfile = linkedInProfile;
  }

  public void setLinkedInProfile(String linkedInProfile) {
    this.linkedInProfile = JsonNullable.<String>of(linkedInProfile);
  }


  public ContactDto isDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
    return this;
  }

   /**
   * Get isDeleted
   * @return isDeleted
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_IS_DELETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsDeleted() {
    return isDeleted;
  }


  @JsonProperty(JSON_PROPERTY_IS_DELETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
  }


  public ContactDto employer(EmployerDto employer) {
    this.employer = JsonNullable.<EmployerDto>of(employer);
    return this;
  }

   /**
   * Get employer
   * @return employer
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public EmployerDto getEmployer() {
        return employer.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMPLOYER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<EmployerDto> getEmployer_JsonNullable() {
    return employer;
  }
  
  @JsonProperty(JSON_PROPERTY_EMPLOYER)
  public void setEmployer_JsonNullable(JsonNullable<EmployerDto> employer) {
    this.employer = employer;
  }

  public void setEmployer(EmployerDto employer) {
    this.employer = JsonNullable.<EmployerDto>of(employer);
  }


  public ContactDto role(ContactRoleDto role) {
    this.role = JsonNullable.<ContactRoleDto>of(role);
    return this;
  }

   /**
   * Get role
   * @return role
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public ContactRoleDto getRole() {
        return role.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ROLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ContactRoleDto> getRole_JsonNullable() {
    return role;
  }
  
  @JsonProperty(JSON_PROPERTY_ROLE)
  public void setRole_JsonNullable(JsonNullable<ContactRoleDto> role) {
    this.role = role;
  }

  public void setRole(ContactRoleDto role) {
    this.role = JsonNullable.<ContactRoleDto>of(role);
  }


  public ContactDto type(ContactTypeDto type) {
    this.type = JsonNullable.<ContactTypeDto>of(type);
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public ContactTypeDto getType() {
        return type.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ContactTypeDto> getType_JsonNullable() {
    return type;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPE)
  public void setType_JsonNullable(JsonNullable<ContactTypeDto> type) {
    this.type = type;
  }

  public void setType(ContactTypeDto type) {
    this.type = JsonNullable.<ContactTypeDto>of(type);
  }


  public ContactDto phoneNumbers(java.util.List<ContactPhoneDto> phoneNumbers) {
    this.phoneNumbers = JsonNullable.<java.util.List<ContactPhoneDto>>of(phoneNumbers);
    return this;
  }

  public ContactDto addPhoneNumbersItem(ContactPhoneDto phoneNumbersItem) {
    if (this.phoneNumbers == null || !this.phoneNumbers.isPresent()) {
      this.phoneNumbers = JsonNullable.<java.util.List<ContactPhoneDto>>of(new java.util.ArrayList<>());
    }
    try {
      this.phoneNumbers.get().add(phoneNumbersItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get phoneNumbers
   * @return phoneNumbers
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public java.util.List<ContactPhoneDto> getPhoneNumbers() {
        return phoneNumbers.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PHONE_NUMBERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<java.util.List<ContactPhoneDto>> getPhoneNumbers_JsonNullable() {
    return phoneNumbers;
  }
  
  @JsonProperty(JSON_PROPERTY_PHONE_NUMBERS)
  public void setPhoneNumbers_JsonNullable(JsonNullable<java.util.List<ContactPhoneDto>> phoneNumbers) {
    this.phoneNumbers = phoneNumbers;
  }

  public void setPhoneNumbers(java.util.List<ContactPhoneDto> phoneNumbers) {
    this.phoneNumbers = JsonNullable.<java.util.List<ContactPhoneDto>>of(phoneNumbers);
  }


  public ContactDto alternativeEmailAddresses(java.util.List<AlternativeEmailAddressDto> alternativeEmailAddresses) {
    this.alternativeEmailAddresses = JsonNullable.<java.util.List<AlternativeEmailAddressDto>>of(alternativeEmailAddresses);
    return this;
  }

  public ContactDto addAlternativeEmailAddressesItem(AlternativeEmailAddressDto alternativeEmailAddressesItem) {
    if (this.alternativeEmailAddresses == null || !this.alternativeEmailAddresses.isPresent()) {
      this.alternativeEmailAddresses = JsonNullable.<java.util.List<AlternativeEmailAddressDto>>of(new java.util.ArrayList<>());
    }
    try {
      this.alternativeEmailAddresses.get().add(alternativeEmailAddressesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get alternativeEmailAddresses
   * @return alternativeEmailAddresses
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public java.util.List<AlternativeEmailAddressDto> getAlternativeEmailAddresses() {
        return alternativeEmailAddresses.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ALTERNATIVE_EMAIL_ADDRESSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<java.util.List<AlternativeEmailAddressDto>> getAlternativeEmailAddresses_JsonNullable() {
    return alternativeEmailAddresses;
  }
  
  @JsonProperty(JSON_PROPERTY_ALTERNATIVE_EMAIL_ADDRESSES)
  public void setAlternativeEmailAddresses_JsonNullable(JsonNullable<java.util.List<AlternativeEmailAddressDto>> alternativeEmailAddresses) {
    this.alternativeEmailAddresses = alternativeEmailAddresses;
  }

  public void setAlternativeEmailAddresses(java.util.List<AlternativeEmailAddressDto> alternativeEmailAddresses) {
    this.alternativeEmailAddresses = JsonNullable.<java.util.List<AlternativeEmailAddressDto>>of(alternativeEmailAddresses);
  }


  public ContactDto customFields(java.util.List<ContactCustomFieldValueDto> customFields) {
    this.customFields = JsonNullable.<java.util.List<ContactCustomFieldValueDto>>of(customFields);
    return this;
  }

  public ContactDto addCustomFieldsItem(ContactCustomFieldValueDto customFieldsItem) {
    if (this.customFields == null || !this.customFields.isPresent()) {
      this.customFields = JsonNullable.<java.util.List<ContactCustomFieldValueDto>>of(new java.util.ArrayList<>());
    }
    try {
      this.customFields.get().add(customFieldsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get customFields
   * @return customFields
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public java.util.List<ContactCustomFieldValueDto> getCustomFields() {
        return customFields.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CUSTOM_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<java.util.List<ContactCustomFieldValueDto>> getCustomFields_JsonNullable() {
    return customFields;
  }
  
  @JsonProperty(JSON_PROPERTY_CUSTOM_FIELDS)
  public void setCustomFields_JsonNullable(JsonNullable<java.util.List<ContactCustomFieldValueDto>> customFields) {
    this.customFields = customFields;
  }

  public void setCustomFields(java.util.List<ContactCustomFieldValueDto> customFields) {
    this.customFields = JsonNullable.<java.util.List<ContactCustomFieldValueDto>>of(customFields);
  }


  /**
   * Return true if this ContactDto object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContactDto contactDto = (ContactDto) o;
    return Objects.equals(this.id, contactDto.id) &&
        equalsNullable(this.primaryEmailAddress, contactDto.primaryEmailAddress) &&
        equalsNullable(this.identifier, contactDto.identifier) &&
        equalsNullable(this.fullName, contactDto.fullName) &&
        equalsNullable(this.address, contactDto.address) &&
        equalsNullable(this.linkedInProfile, contactDto.linkedInProfile) &&
        Objects.equals(this.isDeleted, contactDto.isDeleted) &&
        equalsNullable(this.employer, contactDto.employer) &&
        equalsNullable(this.role, contactDto.role) &&
        equalsNullable(this.type, contactDto.type) &&
        equalsNullable(this.phoneNumbers, contactDto.phoneNumbers) &&
        equalsNullable(this.alternativeEmailAddresses, contactDto.alternativeEmailAddresses) &&
        equalsNullable(this.customFields, contactDto.customFields);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, hashCodeNullable(primaryEmailAddress), hashCodeNullable(identifier), hashCodeNullable(fullName), hashCodeNullable(address), hashCodeNullable(linkedInProfile), isDeleted, hashCodeNullable(employer), hashCodeNullable(role), hashCodeNullable(type), hashCodeNullable(phoneNumbers), hashCodeNullable(alternativeEmailAddresses), hashCodeNullable(customFields));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContactDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    primaryEmailAddress: ").append(toIndentedString(primaryEmailAddress)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    linkedInProfile: ").append(toIndentedString(linkedInProfile)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("    employer: ").append(toIndentedString(employer)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    phoneNumbers: ").append(toIndentedString(phoneNumbers)).append("\n");
    sb.append("    alternativeEmailAddresses: ").append(toIndentedString(alternativeEmailAddresses)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

