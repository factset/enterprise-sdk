/*
 * Event Calendar API
 * Retrieves events for companies
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.EventCalendar.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.EventCalendar.JSON;


/**
 * CompanyEventRequestDataUniverse
 */
@JsonPropertyOrder({
  CompanyEventRequestDataUniverse.JSON_PROPERTY_SYMBOLS,
  CompanyEventRequestDataUniverse.JSON_PROPERTY_TYPE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class CompanyEventRequestDataUniverse implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_SYMBOLS = "symbols";
  private java.util.List<String> symbols = null;

  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    TICKERS("Tickers"),
    
    INDEX("Index"),
    
    ETF("Etf"),
    
    ALLCOMPANIES("AllCompanies");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public CompanyEventRequestDataUniverse() { 
  }

  public CompanyEventRequestDataUniverse symbols(java.util.List<String> symbols) {
    this.symbols = symbols;
    return this;
  }

  public CompanyEventRequestDataUniverse addSymbolsItem(String symbolsItem) {
    if (this.symbols == null) {
      this.symbols = new java.util.ArrayList<>();
    }
    this.symbols.add(symbolsItem);
    return this;
  }

   /**
   * Companies to return in the response
   * @return symbols
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "[\"AAPL-US\",\"MSFT-US\",\"FDS-US\"]", value = "Companies to return in the response")
  @JsonProperty(JSON_PROPERTY_SYMBOLS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<String> getSymbols() {
    return symbols;
  }


  @JsonProperty(JSON_PROPERTY_SYMBOLS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSymbols(java.util.List<String> symbols) {
    this.symbols = symbols;
  }


  public CompanyEventRequestDataUniverse type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Tickers", value = "")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(TypeEnum type) {
    this.type = type;
  }


  /**
   * Return true if this companyEventRequest_data_universe object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CompanyEventRequestDataUniverse companyEventRequestDataUniverse = (CompanyEventRequestDataUniverse) o;
    return Objects.equals(this.symbols, companyEventRequestDataUniverse.symbols) &&
        Objects.equals(this.type, companyEventRequestDataUniverse.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(symbols, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CompanyEventRequestDataUniverse {\n");
    sb.append("    symbols: ").append(toIndentedString(symbols)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

