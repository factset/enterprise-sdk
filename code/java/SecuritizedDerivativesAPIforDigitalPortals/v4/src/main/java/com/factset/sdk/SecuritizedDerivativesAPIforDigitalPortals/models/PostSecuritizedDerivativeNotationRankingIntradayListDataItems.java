/*
 * Securitized Derivatives API For Digital Portals
 * Search for securitized derivative instruments, using a criteria-based screener. The API provides also fundamental data, notation-based key figures, list of barrier types, and details regarding the underlyings, their respective barriers and related cash flows, coupon lists and derived basic interest rate information.  The screener is based on securitized derivatives-specific parameters. The result is limited to the notations that satisfy all the selected filters. If more than one notation of an instrument matches the parameters, and no market priority has been specified, only the notation with the highest trading volume, averaged over one month, is considered. All identifier types used as parameters must be valid and application must have permissions for them.  Available search criteria include:  * validation: filter for only active listings, by price quality and latest/previous available price dates * traded markets: filter and indicate a market priority for the validation * life cycle: important dates in and features of the life cycle of the securitized derivatives instruments * filter by issuer, country of registration of the securitized derivatives * underlying and related barriers, including level and distance, and resulting cash flows * coupon data: where applicable, occurrence and frequency of coupon payments, current interest rate range * performance and volatility * product-specific ask-based key figures (not all key figures are available for all product types):     * bonus yield, sideways yield, maximum yield based on the ask price     * agio, discount     * spread     * break even, outperformance point, parity     * delta, weekly theta, vega, implied volatility     * leverage, omega     * intrinsic value, time value         Since some underlyings, e.g. an index or a performance difference of a stock and an index (alpha structure), do not represent a directly tradable asset, they do not have a price in the classical sense. Therefore, the term *level* is used instead of *price*, e.g. underlying level instead of underlying price. The endpoint does not support the search for securitized derivatives with multiple underlyings, thus only securitized derivatives with a single underlying are returned in the result.  The search can be restricted to a specific set of products by using customer-specific instrument or notation lists. Such restriction lists are set up by FactSet upon request.  This API is fully integrated with the corresponding [Quotes API](https://developer.factset.com/api-catalog/quotes-api-digital-portals), allowing access to detailed price and performance information of instruments, as well as basic security identifier cross-reference. For direct access to price histories, please refer to the [Time Series API for Digital Portals](https://developer.factset.com/api-catalog/time-series-api-digital-portals).  Similar criteria based screener APIs exist for equity and fixed income instruments: See the [Stocks API](https://developer.factset.com/api-catalog/stocks-api-digital-portals) and the [Bonds API](https://developer.factset.com/api-catalog/bonds-api-digital-portals) for details.  
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.PostSecuritizedDerivativeNotationRankingIntradayListDataItemsAccumulated;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.PostSecuritizedDerivativeNotationRankingIntradayListDataItemsCategorization;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.PostSecuritizedDerivativeNotationRankingIntradayListDataItemsExercise;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.PostSecuritizedDerivativeNotationRankingIntradayListDataItemsFsym;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.PostSecuritizedDerivativeNotationRankingIntradayListDataItemsInstrument;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.PostSecuritizedDerivativeNotationRankingIntradayListDataItemsIssuer;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.PostSecuritizedDerivativeNotationRankingIntradayListDataItemsLifeCycle;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.PostSecuritizedDerivativeNotationRankingIntradayListDataItemsMarket;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.PostSecuritizedDerivativeNotationRankingIntradayListDataItemsTrade;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.PostSecuritizedDerivativeNotationRankingIntradayListDataItemsUnderlying;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.PostSecuritizedDerivativeNotationRankingIntradayListDataItemsValueUnit;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.JSON;


/**
 * A list of objects. For semantical context see the description of the parent array.
 */
@ApiModel(description = "A list of objects. For semantical context see the description of the parent array.")
@JsonPropertyOrder({
  PostSecuritizedDerivativeNotationRankingIntradayListDataItems.JSON_PROPERTY_ID,
  PostSecuritizedDerivativeNotationRankingIntradayListDataItems.JSON_PROPERTY_SYMBOL,
  PostSecuritizedDerivativeNotationRankingIntradayListDataItems.JSON_PROPERTY_FSYM,
  PostSecuritizedDerivativeNotationRankingIntradayListDataItems.JSON_PROPERTY_MARKET,
  PostSecuritizedDerivativeNotationRankingIntradayListDataItems.JSON_PROPERTY_VALUE_UNIT,
  PostSecuritizedDerivativeNotationRankingIntradayListDataItems.JSON_PROPERTY_TRADE,
  PostSecuritizedDerivativeNotationRankingIntradayListDataItems.JSON_PROPERTY_QUALITY,
  PostSecuritizedDerivativeNotationRankingIntradayListDataItems.JSON_PROPERTY_ACCUMULATED,
  PostSecuritizedDerivativeNotationRankingIntradayListDataItems.JSON_PROPERTY_INSTRUMENT,
  PostSecuritizedDerivativeNotationRankingIntradayListDataItems.JSON_PROPERTY_CATEGORIZATION,
  PostSecuritizedDerivativeNotationRankingIntradayListDataItems.JSON_PROPERTY_LIFE_CYCLE,
  PostSecuritizedDerivativeNotationRankingIntradayListDataItems.JSON_PROPERTY_ISSUER,
  PostSecuritizedDerivativeNotationRankingIntradayListDataItems.JSON_PROPERTY_EXERCISE,
  PostSecuritizedDerivativeNotationRankingIntradayListDataItems.JSON_PROPERTY_PARTICIPATION,
  PostSecuritizedDerivativeNotationRankingIntradayListDataItems.JSON_PROPERTY_UNDERLYING,
  PostSecuritizedDerivativeNotationRankingIntradayListDataItems.JSON_PROPERTY_KNOCKED_OUT,
  PostSecuritizedDerivativeNotationRankingIntradayListDataItems.JSON_PROPERTY_KNOCKED_IN
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class PostSecuritizedDerivativeNotationRankingIntradayListDataItems implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ID = "id";
  private JsonNullable<String> id = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SYMBOL = "symbol";
  private JsonNullable<String> symbol = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FSYM = "fsym";
  private PostSecuritizedDerivativeNotationRankingIntradayListDataItemsFsym fsym;

  public static final String JSON_PROPERTY_MARKET = "market";
  private PostSecuritizedDerivativeNotationRankingIntradayListDataItemsMarket market;

  public static final String JSON_PROPERTY_VALUE_UNIT = "valueUnit";
  private PostSecuritizedDerivativeNotationRankingIntradayListDataItemsValueUnit valueUnit;

  public static final String JSON_PROPERTY_TRADE = "trade";
  private PostSecuritizedDerivativeNotationRankingIntradayListDataItemsTrade trade;

  /**
   * Quality of the trade-related attributes, see attributes &#x60;trade&#x60; and &#x60;accumulated&#x60;. | Value | Description | | --- | --- | | RLT | Real-time: intraday prices with minimal technical processing delays. | | DLY | Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes. |  
   */
  public enum QualityEnum {
    RLT("RLT"),
    
    DLY("DLY");

    private String value;

    QualityEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static QualityEnum fromValue(String value) {
      for (QualityEnum b : QualityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_QUALITY = "quality";
  private JsonNullable<QualityEnum> quality = JsonNullable.<QualityEnum>undefined();

  public static final String JSON_PROPERTY_ACCUMULATED = "accumulated";
  private PostSecuritizedDerivativeNotationRankingIntradayListDataItemsAccumulated accumulated;

  public static final String JSON_PROPERTY_INSTRUMENT = "instrument";
  private PostSecuritizedDerivativeNotationRankingIntradayListDataItemsInstrument instrument;

  public static final String JSON_PROPERTY_CATEGORIZATION = "categorization";
  private PostSecuritizedDerivativeNotationRankingIntradayListDataItemsCategorization categorization;

  public static final String JSON_PROPERTY_LIFE_CYCLE = "lifeCycle";
  private PostSecuritizedDerivativeNotationRankingIntradayListDataItemsLifeCycle lifeCycle;

  public static final String JSON_PROPERTY_ISSUER = "issuer";
  private PostSecuritizedDerivativeNotationRankingIntradayListDataItemsIssuer issuer;

  public static final String JSON_PROPERTY_EXERCISE = "exercise";
  private PostSecuritizedDerivativeNotationRankingIntradayListDataItemsExercise exercise;

  /**
   * Participation direction of a factor certificate at the level movement of its effective underlying. | Value | Description | | --- | --- | | long | The factor certificate participates positively with rising levels of its effective underlying. | | short | The factor certificate participates negatively with rising levels of its effective underlying. |  
   */
  public enum ParticipationEnum {
    LONG("long"),
    
    SHORT("short");

    private String value;

    ParticipationEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ParticipationEnum fromValue(String value) {
      for (ParticipationEnum b : ParticipationEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_PARTICIPATION = "participation";
  private JsonNullable<ParticipationEnum> participation = JsonNullable.<ParticipationEnum>undefined();

  public static final String JSON_PROPERTY_UNDERLYING = "underlying";
  private PostSecuritizedDerivativeNotationRankingIntradayListDataItemsUnderlying underlying;

  public static final String JSON_PROPERTY_KNOCKED_OUT = "knockedOut";
  private JsonNullable<Boolean> knockedOut = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_KNOCKED_IN = "knockedIn";
  private JsonNullable<Boolean> knockedIn = JsonNullable.<Boolean>undefined();

  public PostSecuritizedDerivativeNotationRankingIntradayListDataItems() { 
  }

  public PostSecuritizedDerivativeNotationRankingIntradayListDataItems id(String id) {
    this.id = JsonNullable.<String>of(id);
    return this;
  }

   /**
   * Identifier of a notation.
   * @return id
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "1532562", value = "Identifier of a notation.")
  @JsonIgnore

  public String getId() {
        return id.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getId_JsonNullable() {
    return id;
  }
  
  @JsonProperty(JSON_PROPERTY_ID)
  public void setId_JsonNullable(JsonNullable<String> id) {
    this.id = id;
  }

  public void setId(String id) {
    this.id = JsonNullable.<String>of(id);
  }


  public PostSecuritizedDerivativeNotationRankingIntradayListDataItems symbol(String symbol) {
    this.symbol = JsonNullable.<String>of(symbol);
    return this;
  }

   /**
   * The symbol of the notation. It is a market-specific code to identify the notation. Which characters can be part of a symbol depends on the market. If a market does not define a proprietary symbol, but uses a different identifier (for example, the ISIN or the WKN) to identify instruments, no symbol will be set for the notations of that market.
   * @return symbol
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "FDS", value = "The symbol of the notation. It is a market-specific code to identify the notation. Which characters can be part of a symbol depends on the market. If a market does not define a proprietary symbol, but uses a different identifier (for example, the ISIN or the WKN) to identify instruments, no symbol will be set for the notations of that market.")
  @JsonIgnore

  public String getSymbol() {
        return symbol.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSymbol_JsonNullable() {
    return symbol;
  }
  
  @JsonProperty(JSON_PROPERTY_SYMBOL)
  public void setSymbol_JsonNullable(JsonNullable<String> symbol) {
    this.symbol = symbol;
  }

  public void setSymbol(String symbol) {
    this.symbol = JsonNullable.<String>of(symbol);
  }


  public PostSecuritizedDerivativeNotationRankingIntradayListDataItems fsym(PostSecuritizedDerivativeNotationRankingIntradayListDataItemsFsym fsym) {
    this.fsym = fsym;
    return this;
  }

   /**
   * Get fsym
   * @return fsym
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FSYM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostSecuritizedDerivativeNotationRankingIntradayListDataItemsFsym getFsym() {
    return fsym;
  }


  @JsonProperty(JSON_PROPERTY_FSYM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFsym(PostSecuritizedDerivativeNotationRankingIntradayListDataItemsFsym fsym) {
    this.fsym = fsym;
  }


  public PostSecuritizedDerivativeNotationRankingIntradayListDataItems market(PostSecuritizedDerivativeNotationRankingIntradayListDataItemsMarket market) {
    this.market = market;
    return this;
  }

   /**
   * Get market
   * @return market
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MARKET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostSecuritizedDerivativeNotationRankingIntradayListDataItemsMarket getMarket() {
    return market;
  }


  @JsonProperty(JSON_PROPERTY_MARKET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMarket(PostSecuritizedDerivativeNotationRankingIntradayListDataItemsMarket market) {
    this.market = market;
  }


  public PostSecuritizedDerivativeNotationRankingIntradayListDataItems valueUnit(PostSecuritizedDerivativeNotationRankingIntradayListDataItemsValueUnit valueUnit) {
    this.valueUnit = valueUnit;
    return this;
  }

   /**
   * Get valueUnit
   * @return valueUnit
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_VALUE_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostSecuritizedDerivativeNotationRankingIntradayListDataItemsValueUnit getValueUnit() {
    return valueUnit;
  }


  @JsonProperty(JSON_PROPERTY_VALUE_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValueUnit(PostSecuritizedDerivativeNotationRankingIntradayListDataItemsValueUnit valueUnit) {
    this.valueUnit = valueUnit;
  }


  public PostSecuritizedDerivativeNotationRankingIntradayListDataItems trade(PostSecuritizedDerivativeNotationRankingIntradayListDataItemsTrade trade) {
    this.trade = trade;
    return this;
  }

   /**
   * Get trade
   * @return trade
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TRADE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostSecuritizedDerivativeNotationRankingIntradayListDataItemsTrade getTrade() {
    return trade;
  }


  @JsonProperty(JSON_PROPERTY_TRADE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTrade(PostSecuritizedDerivativeNotationRankingIntradayListDataItemsTrade trade) {
    this.trade = trade;
  }


  public PostSecuritizedDerivativeNotationRankingIntradayListDataItems quality(QualityEnum quality) {
    this.quality = JsonNullable.<QualityEnum>of(quality);
    return this;
  }

   /**
   * Quality of the trade-related attributes, see attributes &#x60;trade&#x60; and &#x60;accumulated&#x60;. | Value | Description | | --- | --- | | RLT | Real-time: intraday prices with minimal technical processing delays. | | DLY | Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes. |  
   * @return quality
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "DLY", value = "Quality of the trade-related attributes, see attributes `trade` and `accumulated`. | Value | Description | | --- | --- | | RLT | Real-time: intraday prices with minimal technical processing delays. | | DLY | Delayed: intraday prices with an exchange-imposed delay of usually 15 to 30 minutes. |  ")
  @JsonIgnore

  public QualityEnum getQuality() {
        return quality.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_QUALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<QualityEnum> getQuality_JsonNullable() {
    return quality;
  }
  
  @JsonProperty(JSON_PROPERTY_QUALITY)
  public void setQuality_JsonNullable(JsonNullable<QualityEnum> quality) {
    this.quality = quality;
  }

  public void setQuality(QualityEnum quality) {
    this.quality = JsonNullable.<QualityEnum>of(quality);
  }


  public PostSecuritizedDerivativeNotationRankingIntradayListDataItems accumulated(PostSecuritizedDerivativeNotationRankingIntradayListDataItemsAccumulated accumulated) {
    this.accumulated = accumulated;
    return this;
  }

   /**
   * Get accumulated
   * @return accumulated
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ACCUMULATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostSecuritizedDerivativeNotationRankingIntradayListDataItemsAccumulated getAccumulated() {
    return accumulated;
  }


  @JsonProperty(JSON_PROPERTY_ACCUMULATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccumulated(PostSecuritizedDerivativeNotationRankingIntradayListDataItemsAccumulated accumulated) {
    this.accumulated = accumulated;
  }


  public PostSecuritizedDerivativeNotationRankingIntradayListDataItems instrument(PostSecuritizedDerivativeNotationRankingIntradayListDataItemsInstrument instrument) {
    this.instrument = instrument;
    return this;
  }

   /**
   * Get instrument
   * @return instrument
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INSTRUMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostSecuritizedDerivativeNotationRankingIntradayListDataItemsInstrument getInstrument() {
    return instrument;
  }


  @JsonProperty(JSON_PROPERTY_INSTRUMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInstrument(PostSecuritizedDerivativeNotationRankingIntradayListDataItemsInstrument instrument) {
    this.instrument = instrument;
  }


  public PostSecuritizedDerivativeNotationRankingIntradayListDataItems categorization(PostSecuritizedDerivativeNotationRankingIntradayListDataItemsCategorization categorization) {
    this.categorization = categorization;
    return this;
  }

   /**
   * Get categorization
   * @return categorization
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CATEGORIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostSecuritizedDerivativeNotationRankingIntradayListDataItemsCategorization getCategorization() {
    return categorization;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategorization(PostSecuritizedDerivativeNotationRankingIntradayListDataItemsCategorization categorization) {
    this.categorization = categorization;
  }


  public PostSecuritizedDerivativeNotationRankingIntradayListDataItems lifeCycle(PostSecuritizedDerivativeNotationRankingIntradayListDataItemsLifeCycle lifeCycle) {
    this.lifeCycle = lifeCycle;
    return this;
  }

   /**
   * Get lifeCycle
   * @return lifeCycle
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LIFE_CYCLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostSecuritizedDerivativeNotationRankingIntradayListDataItemsLifeCycle getLifeCycle() {
    return lifeCycle;
  }


  @JsonProperty(JSON_PROPERTY_LIFE_CYCLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLifeCycle(PostSecuritizedDerivativeNotationRankingIntradayListDataItemsLifeCycle lifeCycle) {
    this.lifeCycle = lifeCycle;
  }


  public PostSecuritizedDerivativeNotationRankingIntradayListDataItems issuer(PostSecuritizedDerivativeNotationRankingIntradayListDataItemsIssuer issuer) {
    this.issuer = issuer;
    return this;
  }

   /**
   * Get issuer
   * @return issuer
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ISSUER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostSecuritizedDerivativeNotationRankingIntradayListDataItemsIssuer getIssuer() {
    return issuer;
  }


  @JsonProperty(JSON_PROPERTY_ISSUER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIssuer(PostSecuritizedDerivativeNotationRankingIntradayListDataItemsIssuer issuer) {
    this.issuer = issuer;
  }


  public PostSecuritizedDerivativeNotationRankingIntradayListDataItems exercise(PostSecuritizedDerivativeNotationRankingIntradayListDataItemsExercise exercise) {
    this.exercise = exercise;
    return this;
  }

   /**
   * Get exercise
   * @return exercise
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EXERCISE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostSecuritizedDerivativeNotationRankingIntradayListDataItemsExercise getExercise() {
    return exercise;
  }


  @JsonProperty(JSON_PROPERTY_EXERCISE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExercise(PostSecuritizedDerivativeNotationRankingIntradayListDataItemsExercise exercise) {
    this.exercise = exercise;
  }


  public PostSecuritizedDerivativeNotationRankingIntradayListDataItems participation(ParticipationEnum participation) {
    this.participation = JsonNullable.<ParticipationEnum>of(participation);
    return this;
  }

   /**
   * Participation direction of a factor certificate at the level movement of its effective underlying. | Value | Description | | --- | --- | | long | The factor certificate participates positively with rising levels of its effective underlying. | | short | The factor certificate participates negatively with rising levels of its effective underlying. |  
   * @return participation
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "long", value = "Participation direction of a factor certificate at the level movement of its effective underlying. | Value | Description | | --- | --- | | long | The factor certificate participates positively with rising levels of its effective underlying. | | short | The factor certificate participates negatively with rising levels of its effective underlying. |  ")
  @JsonIgnore

  public ParticipationEnum getParticipation() {
        return participation.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PARTICIPATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ParticipationEnum> getParticipation_JsonNullable() {
    return participation;
  }
  
  @JsonProperty(JSON_PROPERTY_PARTICIPATION)
  public void setParticipation_JsonNullable(JsonNullable<ParticipationEnum> participation) {
    this.participation = participation;
  }

  public void setParticipation(ParticipationEnum participation) {
    this.participation = JsonNullable.<ParticipationEnum>of(participation);
  }


  public PostSecuritizedDerivativeNotationRankingIntradayListDataItems underlying(PostSecuritizedDerivativeNotationRankingIntradayListDataItemsUnderlying underlying) {
    this.underlying = underlying;
    return this;
  }

   /**
   * Get underlying
   * @return underlying
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_UNDERLYING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostSecuritizedDerivativeNotationRankingIntradayListDataItemsUnderlying getUnderlying() {
    return underlying;
  }


  @JsonProperty(JSON_PROPERTY_UNDERLYING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnderlying(PostSecuritizedDerivativeNotationRankingIntradayListDataItemsUnderlying underlying) {
    this.underlying = underlying;
  }


  public PostSecuritizedDerivativeNotationRankingIntradayListDataItems knockedOut(Boolean knockedOut) {
    this.knockedOut = JsonNullable.<Boolean>of(knockedOut);
    return this;
  }

   /**
   * Indicates whether the securitized derivative is knocked-out (&#x60;true&#x60;) or not (&#x60;false&#x60;). Particularly relevant for knock-out certificates.
   * @return knockedOut
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Indicates whether the securitized derivative is knocked-out (`true`) or not (`false`). Particularly relevant for knock-out certificates.")
  @JsonIgnore

  public Boolean getKnockedOut() {
        return knockedOut.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_KNOCKED_OUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getKnockedOut_JsonNullable() {
    return knockedOut;
  }
  
  @JsonProperty(JSON_PROPERTY_KNOCKED_OUT)
  public void setKnockedOut_JsonNullable(JsonNullable<Boolean> knockedOut) {
    this.knockedOut = knockedOut;
  }

  public void setKnockedOut(Boolean knockedOut) {
    this.knockedOut = JsonNullable.<Boolean>of(knockedOut);
  }


  public PostSecuritizedDerivativeNotationRankingIntradayListDataItems knockedIn(Boolean knockedIn) {
    this.knockedIn = JsonNullable.<Boolean>of(knockedIn);
    return this;
  }

   /**
   * Indicates whether the securitized derivative is knocked-in (&#x60;true&#x60;) or not (&#x60;false&#x60;). Particularly relevant for bonus certificates but also for securitized derivatives that might have additional protection such as reverse convertible bonds, discount certificates, and capital-protection certificates.
   * @return knockedIn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "false", value = "Indicates whether the securitized derivative is knocked-in (`true`) or not (`false`). Particularly relevant for bonus certificates but also for securitized derivatives that might have additional protection such as reverse convertible bonds, discount certificates, and capital-protection certificates.")
  @JsonIgnore

  public Boolean getKnockedIn() {
        return knockedIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_KNOCKED_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getKnockedIn_JsonNullable() {
    return knockedIn;
  }
  
  @JsonProperty(JSON_PROPERTY_KNOCKED_IN)
  public void setKnockedIn_JsonNullable(JsonNullable<Boolean> knockedIn) {
    this.knockedIn = knockedIn;
  }

  public void setKnockedIn(Boolean knockedIn) {
    this.knockedIn = JsonNullable.<Boolean>of(knockedIn);
  }


  /**
   * Return true if this PostSecuritizedDerivativeNotationRankingIntradayListDataItems object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostSecuritizedDerivativeNotationRankingIntradayListDataItems postSecuritizedDerivativeNotationRankingIntradayListDataItems = (PostSecuritizedDerivativeNotationRankingIntradayListDataItems) o;
    return equalsNullable(this.id, postSecuritizedDerivativeNotationRankingIntradayListDataItems.id) &&
        equalsNullable(this.symbol, postSecuritizedDerivativeNotationRankingIntradayListDataItems.symbol) &&
        Objects.equals(this.fsym, postSecuritizedDerivativeNotationRankingIntradayListDataItems.fsym) &&
        Objects.equals(this.market, postSecuritizedDerivativeNotationRankingIntradayListDataItems.market) &&
        Objects.equals(this.valueUnit, postSecuritizedDerivativeNotationRankingIntradayListDataItems.valueUnit) &&
        Objects.equals(this.trade, postSecuritizedDerivativeNotationRankingIntradayListDataItems.trade) &&
        equalsNullable(this.quality, postSecuritizedDerivativeNotationRankingIntradayListDataItems.quality) &&
        Objects.equals(this.accumulated, postSecuritizedDerivativeNotationRankingIntradayListDataItems.accumulated) &&
        Objects.equals(this.instrument, postSecuritizedDerivativeNotationRankingIntradayListDataItems.instrument) &&
        Objects.equals(this.categorization, postSecuritizedDerivativeNotationRankingIntradayListDataItems.categorization) &&
        Objects.equals(this.lifeCycle, postSecuritizedDerivativeNotationRankingIntradayListDataItems.lifeCycle) &&
        Objects.equals(this.issuer, postSecuritizedDerivativeNotationRankingIntradayListDataItems.issuer) &&
        Objects.equals(this.exercise, postSecuritizedDerivativeNotationRankingIntradayListDataItems.exercise) &&
        equalsNullable(this.participation, postSecuritizedDerivativeNotationRankingIntradayListDataItems.participation) &&
        Objects.equals(this.underlying, postSecuritizedDerivativeNotationRankingIntradayListDataItems.underlying) &&
        equalsNullable(this.knockedOut, postSecuritizedDerivativeNotationRankingIntradayListDataItems.knockedOut) &&
        equalsNullable(this.knockedIn, postSecuritizedDerivativeNotationRankingIntradayListDataItems.knockedIn);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(id), hashCodeNullable(symbol), fsym, market, valueUnit, trade, hashCodeNullable(quality), accumulated, instrument, categorization, lifeCycle, issuer, exercise, hashCodeNullable(participation), underlying, hashCodeNullable(knockedOut), hashCodeNullable(knockedIn));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostSecuritizedDerivativeNotationRankingIntradayListDataItems {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    fsym: ").append(toIndentedString(fsym)).append("\n");
    sb.append("    market: ").append(toIndentedString(market)).append("\n");
    sb.append("    valueUnit: ").append(toIndentedString(valueUnit)).append("\n");
    sb.append("    trade: ").append(toIndentedString(trade)).append("\n");
    sb.append("    quality: ").append(toIndentedString(quality)).append("\n");
    sb.append("    accumulated: ").append(toIndentedString(accumulated)).append("\n");
    sb.append("    instrument: ").append(toIndentedString(instrument)).append("\n");
    sb.append("    categorization: ").append(toIndentedString(categorization)).append("\n");
    sb.append("    lifeCycle: ").append(toIndentedString(lifeCycle)).append("\n");
    sb.append("    issuer: ").append(toIndentedString(issuer)).append("\n");
    sb.append("    exercise: ").append(toIndentedString(exercise)).append("\n");
    sb.append("    participation: ").append(toIndentedString(participation)).append("\n");
    sb.append("    underlying: ").append(toIndentedString(underlying)).append("\n");
    sb.append("    knockedOut: ").append(toIndentedString(knockedOut)).append("\n");
    sb.append("    knockedIn: ").append(toIndentedString(knockedIn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

