/*
 * Securitized Derivatives API For Digital Portals
 * Search for securitized derivative instruments, using a criteria-based screener. The API provides also fundamental data, notation-based key figures, list of barrier types, and details regarding the underlyings, their respective barriers and related cash flows, coupon lists and derived basic interest rate information.  The screener is based on securitized derivatives-specific parameters. The result is limited to the notations that satisfy all the selected filters. If more than one notation of an instrument matches the parameters, and no market priority has been specified, only the notation with the highest trading volume, averaged over one month, is considered. All identifier types used as parameters must be valid and application must have permissions for them.  Available search criteria include:  * validation: filter for only active listings, by price quality and latest/previous available price dates * traded markets: filter and indicate a market priority for the validation * life cycle: important dates in and features of the life cycle of the securitized derivatives instruments * filter by issuer, country of registration of the securitized derivatives * underlying and related barriers, including level and distance, and resulting cash flows * coupon data: where applicable, occurrence and frequency of coupon payments, current interest rate range * performance and volatility * product-specific ask-based key figures (not all key figures are available for all product types):     * bonus yield, sideways yield, maximum yield based on the ask price     * agio, discount     * spread     * break even, outperformance point, parity     * delta, weekly theta, vega, implied volatility     * leverage, omega     * intrinsic value, time value         Since some underlyings, e.g. an index or a performance difference of a stock and an index (alpha structure), do not represent a directly tradable asset, they do not have a price in the classical sense. Therefore, the term *level* is used instead of *price*, e.g. underlying level instead of underlying price. The endpoint does not support the search for securitized derivatives with multiple underlyings, thus only securitized derivatives with a single underlying are returned in the result.  The search can be restricted to a specific set of products by using customer-specific instrument or notation lists. Such restriction lists are set up by FactSet upon request.  This API is fully integrated with the corresponding [Quotes API](https://developer.factset.com/api-catalog/quotes-api-digital-portals), allowing access to detailed price and performance information of instruments, as well as basic security identifier cross-reference. For direct access to price histories, please refer to the [Time Series API for Digital Portals](https://developer.factset.com/api-catalog/time-series-api-digital-portals).  Similar criteria based screener APIs exist for equity and fixed income instruments: See the [Stocks API](https://developer.factset.com/api-catalog/stocks-api-digital-portals) and the [Bonds API](https://developer.factset.com/api-catalog/bonds-api-digital-portals) for details.  
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.JSON;


/**
 * End-of-day (EOD) relative performance for different time ranges. The relative performance is the difference of a notation&#39;s most recent EOD closing price against the EOD closing price on the reference date, relative to the EOD closing price on the reference date.
 */
@ApiModel(description = "End-of-day (EOD) relative performance for different time ranges. The relative performance is the difference of a notation's most recent EOD closing price against the EOD closing price on the reference date, relative to the EOD closing price on the reference date.")
@JsonPropertyOrder({
  PostSecuritizedDerivativeNotationScreenerSearchDataItemsPerformanceEndOfDay.JSON_PROPERTY_DAY1,
  PostSecuritizedDerivativeNotationScreenerSearchDataItemsPerformanceEndOfDay.JSON_PROPERTY_WEEK1,
  PostSecuritizedDerivativeNotationScreenerSearchDataItemsPerformanceEndOfDay.JSON_PROPERTY_MONTH1,
  PostSecuritizedDerivativeNotationScreenerSearchDataItemsPerformanceEndOfDay.JSON_PROPERTY_MONTHS3,
  PostSecuritizedDerivativeNotationScreenerSearchDataItemsPerformanceEndOfDay.JSON_PROPERTY_MONTHS6,
  PostSecuritizedDerivativeNotationScreenerSearchDataItemsPerformanceEndOfDay.JSON_PROPERTY_YEAR1,
  PostSecuritizedDerivativeNotationScreenerSearchDataItemsPerformanceEndOfDay.JSON_PROPERTY_YEARS3,
  PostSecuritizedDerivativeNotationScreenerSearchDataItemsPerformanceEndOfDay.JSON_PROPERTY_YEARS5,
  PostSecuritizedDerivativeNotationScreenerSearchDataItemsPerformanceEndOfDay.JSON_PROPERTY_YEAR_TO_DATE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class PostSecuritizedDerivativeNotationScreenerSearchDataItemsPerformanceEndOfDay implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_DAY1 = "day1";
  private JsonNullable<BigDecimal> day1 = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_WEEK1 = "week1";
  private JsonNullable<BigDecimal> week1 = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_MONTH1 = "month1";
  private JsonNullable<BigDecimal> month1 = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_MONTHS3 = "months3";
  private JsonNullable<BigDecimal> months3 = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_MONTHS6 = "months6";
  private JsonNullable<BigDecimal> months6 = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_YEAR1 = "year1";
  private JsonNullable<BigDecimal> year1 = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_YEARS3 = "years3";
  private JsonNullable<BigDecimal> years3 = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_YEARS5 = "years5";
  private JsonNullable<BigDecimal> years5 = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_YEAR_TO_DATE = "yearToDate";
  private JsonNullable<BigDecimal> yearToDate = JsonNullable.<BigDecimal>undefined();

  public PostSecuritizedDerivativeNotationScreenerSearchDataItemsPerformanceEndOfDay() { 
  }

  public PostSecuritizedDerivativeNotationScreenerSearchDataItemsPerformanceEndOfDay day1(BigDecimal day1) {
    this.day1 = JsonNullable.<BigDecimal>of(day1);
    return this;
  }

   /**
   * One day.
   * @return day1
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "0.4", value = "One day.")
  @JsonIgnore

  public BigDecimal getDay1() {
        return day1.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DAY1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getDay1_JsonNullable() {
    return day1;
  }
  
  @JsonProperty(JSON_PROPERTY_DAY1)
  public void setDay1_JsonNullable(JsonNullable<BigDecimal> day1) {
    this.day1 = day1;
  }

  public void setDay1(BigDecimal day1) {
    this.day1 = JsonNullable.<BigDecimal>of(day1);
  }


  public PostSecuritizedDerivativeNotationScreenerSearchDataItemsPerformanceEndOfDay week1(BigDecimal week1) {
    this.week1 = JsonNullable.<BigDecimal>of(week1);
    return this;
  }

   /**
   * One week.
   * @return week1
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "1", value = "One week.")
  @JsonIgnore

  public BigDecimal getWeek1() {
        return week1.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WEEK1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getWeek1_JsonNullable() {
    return week1;
  }
  
  @JsonProperty(JSON_PROPERTY_WEEK1)
  public void setWeek1_JsonNullable(JsonNullable<BigDecimal> week1) {
    this.week1 = week1;
  }

  public void setWeek1(BigDecimal week1) {
    this.week1 = JsonNullable.<BigDecimal>of(week1);
  }


  public PostSecuritizedDerivativeNotationScreenerSearchDataItemsPerformanceEndOfDay month1(BigDecimal month1) {
    this.month1 = JsonNullable.<BigDecimal>of(month1);
    return this;
  }

   /**
   * One month.
   * @return month1
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "0.3", value = "One month.")
  @JsonIgnore

  public BigDecimal getMonth1() {
        return month1.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MONTH1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getMonth1_JsonNullable() {
    return month1;
  }
  
  @JsonProperty(JSON_PROPERTY_MONTH1)
  public void setMonth1_JsonNullable(JsonNullable<BigDecimal> month1) {
    this.month1 = month1;
  }

  public void setMonth1(BigDecimal month1) {
    this.month1 = JsonNullable.<BigDecimal>of(month1);
  }


  public PostSecuritizedDerivativeNotationScreenerSearchDataItemsPerformanceEndOfDay months3(BigDecimal months3) {
    this.months3 = JsonNullable.<BigDecimal>of(months3);
    return this;
  }

   /**
   * Three months.
   * @return months3
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "0.4", value = "Three months.")
  @JsonIgnore

  public BigDecimal getMonths3() {
        return months3.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MONTHS3)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getMonths3_JsonNullable() {
    return months3;
  }
  
  @JsonProperty(JSON_PROPERTY_MONTHS3)
  public void setMonths3_JsonNullable(JsonNullable<BigDecimal> months3) {
    this.months3 = months3;
  }

  public void setMonths3(BigDecimal months3) {
    this.months3 = JsonNullable.<BigDecimal>of(months3);
  }


  public PostSecuritizedDerivativeNotationScreenerSearchDataItemsPerformanceEndOfDay months6(BigDecimal months6) {
    this.months6 = JsonNullable.<BigDecimal>of(months6);
    return this;
  }

   /**
   * Six months.
   * @return months6
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "0.5", value = "Six months.")
  @JsonIgnore

  public BigDecimal getMonths6() {
        return months6.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MONTHS6)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getMonths6_JsonNullable() {
    return months6;
  }
  
  @JsonProperty(JSON_PROPERTY_MONTHS6)
  public void setMonths6_JsonNullable(JsonNullable<BigDecimal> months6) {
    this.months6 = months6;
  }

  public void setMonths6(BigDecimal months6) {
    this.months6 = JsonNullable.<BigDecimal>of(months6);
  }


  public PostSecuritizedDerivativeNotationScreenerSearchDataItemsPerformanceEndOfDay year1(BigDecimal year1) {
    this.year1 = JsonNullable.<BigDecimal>of(year1);
    return this;
  }

   /**
   * One year.
   * @return year1
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "0.5", value = "One year.")
  @JsonIgnore

  public BigDecimal getYear1() {
        return year1.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_YEAR1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getYear1_JsonNullable() {
    return year1;
  }
  
  @JsonProperty(JSON_PROPERTY_YEAR1)
  public void setYear1_JsonNullable(JsonNullable<BigDecimal> year1) {
    this.year1 = year1;
  }

  public void setYear1(BigDecimal year1) {
    this.year1 = JsonNullable.<BigDecimal>of(year1);
  }


  public PostSecuritizedDerivativeNotationScreenerSearchDataItemsPerformanceEndOfDay years3(BigDecimal years3) {
    this.years3 = JsonNullable.<BigDecimal>of(years3);
    return this;
  }

   /**
   * Three years.
   * @return years3
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "0", value = "Three years.")
  @JsonIgnore

  public BigDecimal getYears3() {
        return years3.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_YEARS3)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getYears3_JsonNullable() {
    return years3;
  }
  
  @JsonProperty(JSON_PROPERTY_YEARS3)
  public void setYears3_JsonNullable(JsonNullable<BigDecimal> years3) {
    this.years3 = years3;
  }

  public void setYears3(BigDecimal years3) {
    this.years3 = JsonNullable.<BigDecimal>of(years3);
  }


  public PostSecuritizedDerivativeNotationScreenerSearchDataItemsPerformanceEndOfDay years5(BigDecimal years5) {
    this.years5 = JsonNullable.<BigDecimal>of(years5);
    return this;
  }

   /**
   * Five years.
   * @return years5
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "1", value = "Five years.")
  @JsonIgnore

  public BigDecimal getYears5() {
        return years5.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_YEARS5)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getYears5_JsonNullable() {
    return years5;
  }
  
  @JsonProperty(JSON_PROPERTY_YEARS5)
  public void setYears5_JsonNullable(JsonNullable<BigDecimal> years5) {
    this.years5 = years5;
  }

  public void setYears5(BigDecimal years5) {
    this.years5 = JsonNullable.<BigDecimal>of(years5);
  }


  public PostSecuritizedDerivativeNotationScreenerSearchDataItemsPerformanceEndOfDay yearToDate(BigDecimal yearToDate) {
    this.yearToDate = JsonNullable.<BigDecimal>of(yearToDate);
    return this;
  }

   /**
   * Year-to-date.
   * @return yearToDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "0.2", value = "Year-to-date.")
  @JsonIgnore

  public BigDecimal getYearToDate() {
        return yearToDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_YEAR_TO_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getYearToDate_JsonNullable() {
    return yearToDate;
  }
  
  @JsonProperty(JSON_PROPERTY_YEAR_TO_DATE)
  public void setYearToDate_JsonNullable(JsonNullable<BigDecimal> yearToDate) {
    this.yearToDate = yearToDate;
  }

  public void setYearToDate(BigDecimal yearToDate) {
    this.yearToDate = JsonNullable.<BigDecimal>of(yearToDate);
  }


  /**
   * Return true if this PostSecuritizedDerivativeNotationScreenerSearchDataItems_performance_endOfDay object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostSecuritizedDerivativeNotationScreenerSearchDataItemsPerformanceEndOfDay postSecuritizedDerivativeNotationScreenerSearchDataItemsPerformanceEndOfDay = (PostSecuritizedDerivativeNotationScreenerSearchDataItemsPerformanceEndOfDay) o;
    return equalsNullable(this.day1, postSecuritizedDerivativeNotationScreenerSearchDataItemsPerformanceEndOfDay.day1) &&
        equalsNullable(this.week1, postSecuritizedDerivativeNotationScreenerSearchDataItemsPerformanceEndOfDay.week1) &&
        equalsNullable(this.month1, postSecuritizedDerivativeNotationScreenerSearchDataItemsPerformanceEndOfDay.month1) &&
        equalsNullable(this.months3, postSecuritizedDerivativeNotationScreenerSearchDataItemsPerformanceEndOfDay.months3) &&
        equalsNullable(this.months6, postSecuritizedDerivativeNotationScreenerSearchDataItemsPerformanceEndOfDay.months6) &&
        equalsNullable(this.year1, postSecuritizedDerivativeNotationScreenerSearchDataItemsPerformanceEndOfDay.year1) &&
        equalsNullable(this.years3, postSecuritizedDerivativeNotationScreenerSearchDataItemsPerformanceEndOfDay.years3) &&
        equalsNullable(this.years5, postSecuritizedDerivativeNotationScreenerSearchDataItemsPerformanceEndOfDay.years5) &&
        equalsNullable(this.yearToDate, postSecuritizedDerivativeNotationScreenerSearchDataItemsPerformanceEndOfDay.yearToDate);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(day1), hashCodeNullable(week1), hashCodeNullable(month1), hashCodeNullable(months3), hashCodeNullable(months6), hashCodeNullable(year1), hashCodeNullable(years3), hashCodeNullable(years5), hashCodeNullable(yearToDate));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostSecuritizedDerivativeNotationScreenerSearchDataItemsPerformanceEndOfDay {\n");
    sb.append("    day1: ").append(toIndentedString(day1)).append("\n");
    sb.append("    week1: ").append(toIndentedString(week1)).append("\n");
    sb.append("    month1: ").append(toIndentedString(month1)).append("\n");
    sb.append("    months3: ").append(toIndentedString(months3)).append("\n");
    sb.append("    months6: ").append(toIndentedString(months6)).append("\n");
    sb.append("    year1: ").append(toIndentedString(year1)).append("\n");
    sb.append("    years3: ").append(toIndentedString(years3)).append("\n");
    sb.append("    years5: ").append(toIndentedString(years5)).append("\n");
    sb.append("    yearToDate: ").append(toIndentedString(yearToDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

