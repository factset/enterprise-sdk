/*
 * Securitized Derivatives API For Digital Portals
 * Search for securitized derivative instruments, using a criteria-based screener. The API provides also fundamental data, notation-based key figures, list of barrier types, and details regarding the underlyings, their respective barriers and related cash flows, coupon lists and derived basic interest rate information.  The screener is based on securitized derivatives-specific parameters. The result is limited to the notations that satisfy all the selected filters. If more than one notation of an instrument matches the parameters, and no market priority has been specified, only the notation with the highest trading volume, averaged over one month, is considered. All identifier types used as parameters must be valid and application must have permissions for them.  Available search criteria include:  * validation: filter for only active listings, by price quality and latest/previous available price dates * traded markets: filter and indicate a market priority for the validation * life cycle: important dates in and features of the life cycle of the securitized derivatives instruments * filter by issuer, country of registration of the securitized derivatives * underlying and related barriers, including level and distance, and resulting cash flows * coupon data: where applicable, occurrence and frequency of coupon payments, current interest rate range * performance and volatility * product-specific ask-based key figures (not all key figures are available for all product types):     * bonus yield, sideways yield, maximum yield based on the ask price     * agio, discount     * spread     * break even, outperformance point, parity     * delta, weekly theta, vega, implied volatility     * leverage, omega     * intrinsic value, time value         Since some underlyings, e.g. an index or a performance difference of a stock and an index (alpha structure), do not represent a directly tradable asset, they do not have a price in the classical sense. Therefore, the term *level* is used instead of *price*, e.g. underlying level instead of underlying price. The endpoint does not support the search for securitized derivatives with multiple underlyings, thus only securitized derivatives with a single underlying are returned in the result.  The search can be restricted to a specific set of products by using customer-specific instrument or notation lists. Such restriction lists are set up by FactSet upon request.  This API is fully integrated with the corresponding [Quotes API](https://developer.factset.com/api-catalog/quotes-api-digital-portals), allowing access to detailed price and performance information of instruments, as well as basic security identifier cross-reference. For direct access to price histories, please refer to the [Time Series API for Digital Portals](https://developer.factset.com/api-catalog/time-series-api-digital-portals).  Similar criteria based screener APIs exist for equity and fixed income instruments: See the [Stocks API](https://developer.factset.com/api-catalog/stocks-api-digital-portals) and the [Bonds API](https://developer.factset.com/api-catalog/bonds-api-digital-portals) for details.  
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresAgio;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresBonusYield;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresBreakEven;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresCurrency;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresDelta;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresDiscount;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresMaximumYield;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresSidewaysYield;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresSpread;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresThetaOneWeek;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresVega;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.JSON;


/**
 * Key figures specific to securitized derivatives; based on ask prices.
 */
@ApiModel(description = "Key figures specific to securitized derivatives; based on ask prices.")
@JsonPropertyOrder({
  PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures.JSON_PROPERTY_CURRENCY,
  PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures.JSON_PROPERTY_BONUS_YIELD,
  PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures.JSON_PROPERTY_SIDEWAYS_YIELD,
  PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures.JSON_PROPERTY_MAXIMUM_YIELD,
  PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures.JSON_PROPERTY_AGIO,
  PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures.JSON_PROPERTY_DISCOUNT,
  PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures.JSON_PROPERTY_BREAK_EVEN,
  PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures.JSON_PROPERTY_SPREAD,
  PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures.JSON_PROPERTY_DELTA,
  PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures.JSON_PROPERTY_THETA_ONE_WEEK,
  PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures.JSON_PROPERTY_VEGA,
  PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures.JSON_PROPERTY_LEVERAGE,
  PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures.JSON_PROPERTY_OMEGA,
  PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures.JSON_PROPERTY_IMPLIED_VOLATILITY,
  PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures.JSON_PROPERTY_INTRINSIC_VALUE,
  PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures.JSON_PROPERTY_TIME_VALUE,
  PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures.JSON_PROPERTY_OUTPERFORMANCE_POINT,
  PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures.JSON_PROPERTY_PARITY
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresCurrency currency;

  public static final String JSON_PROPERTY_BONUS_YIELD = "bonusYield";
  private PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresBonusYield bonusYield;

  public static final String JSON_PROPERTY_SIDEWAYS_YIELD = "sidewaysYield";
  private PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresSidewaysYield sidewaysYield;

  public static final String JSON_PROPERTY_MAXIMUM_YIELD = "maximumYield";
  private PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresMaximumYield maximumYield;

  public static final String JSON_PROPERTY_AGIO = "agio";
  private PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresAgio agio;

  public static final String JSON_PROPERTY_DISCOUNT = "discount";
  private PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresDiscount discount;

  public static final String JSON_PROPERTY_BREAK_EVEN = "breakEven";
  private PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresBreakEven breakEven;

  public static final String JSON_PROPERTY_SPREAD = "spread";
  private PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresSpread spread;

  public static final String JSON_PROPERTY_DELTA = "delta";
  private PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresDelta delta;

  public static final String JSON_PROPERTY_THETA_ONE_WEEK = "thetaOneWeek";
  private PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresThetaOneWeek thetaOneWeek;

  public static final String JSON_PROPERTY_VEGA = "vega";
  private PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresVega vega;

  public static final String JSON_PROPERTY_LEVERAGE = "leverage";
  private JsonNullable<BigDecimal> leverage = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_OMEGA = "omega";
  private JsonNullable<BigDecimal> omega = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_IMPLIED_VOLATILITY = "impliedVolatility";
  private JsonNullable<BigDecimal> impliedVolatility = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_INTRINSIC_VALUE = "intrinsicValue";
  private JsonNullable<BigDecimal> intrinsicValue = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_TIME_VALUE = "timeValue";
  private JsonNullable<BigDecimal> timeValue = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_OUTPERFORMANCE_POINT = "outperformancePoint";
  private JsonNullable<BigDecimal> outperformancePoint = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_PARITY = "parity";
  private JsonNullable<BigDecimal> parity = JsonNullable.<BigDecimal>undefined();

  public PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures() { 
  }

  public PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures currency(PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresCurrency currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresCurrency getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrency(PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresCurrency currency) {
    this.currency = currency;
  }


  public PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures bonusYield(PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresBonusYield bonusYield) {
    this.bonusYield = bonusYield;
    return this;
  }

   /**
   * Get bonusYield
   * @return bonusYield
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_BONUS_YIELD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresBonusYield getBonusYield() {
    return bonusYield;
  }


  @JsonProperty(JSON_PROPERTY_BONUS_YIELD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBonusYield(PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresBonusYield bonusYield) {
    this.bonusYield = bonusYield;
  }


  public PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures sidewaysYield(PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresSidewaysYield sidewaysYield) {
    this.sidewaysYield = sidewaysYield;
    return this;
  }

   /**
   * Get sidewaysYield
   * @return sidewaysYield
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SIDEWAYS_YIELD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresSidewaysYield getSidewaysYield() {
    return sidewaysYield;
  }


  @JsonProperty(JSON_PROPERTY_SIDEWAYS_YIELD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSidewaysYield(PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresSidewaysYield sidewaysYield) {
    this.sidewaysYield = sidewaysYield;
  }


  public PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures maximumYield(PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresMaximumYield maximumYield) {
    this.maximumYield = maximumYield;
    return this;
  }

   /**
   * Get maximumYield
   * @return maximumYield
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MAXIMUM_YIELD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresMaximumYield getMaximumYield() {
    return maximumYield;
  }


  @JsonProperty(JSON_PROPERTY_MAXIMUM_YIELD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaximumYield(PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresMaximumYield maximumYield) {
    this.maximumYield = maximumYield;
  }


  public PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures agio(PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresAgio agio) {
    this.agio = agio;
    return this;
  }

   /**
   * Get agio
   * @return agio
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_AGIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresAgio getAgio() {
    return agio;
  }


  @JsonProperty(JSON_PROPERTY_AGIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAgio(PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresAgio agio) {
    this.agio = agio;
  }


  public PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures discount(PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresDiscount discount) {
    this.discount = discount;
    return this;
  }

   /**
   * Get discount
   * @return discount
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DISCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresDiscount getDiscount() {
    return discount;
  }


  @JsonProperty(JSON_PROPERTY_DISCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDiscount(PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresDiscount discount) {
    this.discount = discount;
  }


  public PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures breakEven(PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresBreakEven breakEven) {
    this.breakEven = breakEven;
    return this;
  }

   /**
   * Get breakEven
   * @return breakEven
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_BREAK_EVEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresBreakEven getBreakEven() {
    return breakEven;
  }


  @JsonProperty(JSON_PROPERTY_BREAK_EVEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBreakEven(PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresBreakEven breakEven) {
    this.breakEven = breakEven;
  }


  public PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures spread(PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresSpread spread) {
    this.spread = spread;
    return this;
  }

   /**
   * Get spread
   * @return spread
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SPREAD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresSpread getSpread() {
    return spread;
  }


  @JsonProperty(JSON_PROPERTY_SPREAD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSpread(PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresSpread spread) {
    this.spread = spread;
  }


  public PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures delta(PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresDelta delta) {
    this.delta = delta;
    return this;
  }

   /**
   * Get delta
   * @return delta
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DELTA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresDelta getDelta() {
    return delta;
  }


  @JsonProperty(JSON_PROPERTY_DELTA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDelta(PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresDelta delta) {
    this.delta = delta;
  }


  public PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures thetaOneWeek(PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresThetaOneWeek thetaOneWeek) {
    this.thetaOneWeek = thetaOneWeek;
    return this;
  }

   /**
   * Get thetaOneWeek
   * @return thetaOneWeek
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_THETA_ONE_WEEK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresThetaOneWeek getThetaOneWeek() {
    return thetaOneWeek;
  }


  @JsonProperty(JSON_PROPERTY_THETA_ONE_WEEK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setThetaOneWeek(PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresThetaOneWeek thetaOneWeek) {
    this.thetaOneWeek = thetaOneWeek;
  }


  public PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures vega(PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresVega vega) {
    this.vega = vega;
    return this;
  }

   /**
   * Get vega
   * @return vega
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_VEGA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresVega getVega() {
    return vega;
  }


  @JsonProperty(JSON_PROPERTY_VEGA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVega(PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFiguresVega vega) {
    this.vega = vega;
  }


  public PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures leverage(BigDecimal leverage) {
    this.leverage = JsonNullable.<BigDecimal>of(leverage);
    return this;
  }

   /**
   * Leverage. It represents the ratio of the underlying level to the ask price of the securitized derivative, adjusted for the cover ratio and the currency cross rate. This key figure is calculated only for leveraged securitized derivatives (e.g. warrants, knock-out certificates).
   * @return leverage
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "1.01", value = "Leverage. It represents the ratio of the underlying level to the ask price of the securitized derivative, adjusted for the cover ratio and the currency cross rate. This key figure is calculated only for leveraged securitized derivatives (e.g. warrants, knock-out certificates).")
  @JsonIgnore

  public BigDecimal getLeverage() {
        return leverage.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LEVERAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getLeverage_JsonNullable() {
    return leverage;
  }
  
  @JsonProperty(JSON_PROPERTY_LEVERAGE)
  public void setLeverage_JsonNullable(JsonNullable<BigDecimal> leverage) {
    this.leverage = leverage;
  }

  public void setLeverage(BigDecimal leverage) {
    this.leverage = JsonNullable.<BigDecimal>of(leverage);
  }


  public PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures omega(BigDecimal omega) {
    this.omega = JsonNullable.<BigDecimal>of(omega);
    return this;
  }

   /**
   * Omega. It represents unadjusted delta (see attribute &#x60;delta.unadjusted&#x60;) multiplied with the leverage (see attribute &#x60;leverage&#x60;), both calculated based on the ask price of the derivative. Omega indicates the elasticity of the securitized derivative&#39;s price regarding the underlying level. This key figure is calculated for plain vanilla warrants only.
   * @return omega
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "2.02", value = "Omega. It represents unadjusted delta (see attribute `delta.unadjusted`) multiplied with the leverage (see attribute `leverage`), both calculated based on the ask price of the derivative. Omega indicates the elasticity of the securitized derivative's price regarding the underlying level. This key figure is calculated for plain vanilla warrants only.")
  @JsonIgnore

  public BigDecimal getOmega() {
        return omega.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OMEGA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getOmega_JsonNullable() {
    return omega;
  }
  
  @JsonProperty(JSON_PROPERTY_OMEGA)
  public void setOmega_JsonNullable(JsonNullable<BigDecimal> omega) {
    this.omega = omega;
  }

  public void setOmega(BigDecimal omega) {
    this.omega = JsonNullable.<BigDecimal>of(omega);
  }


  public PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures impliedVolatility(BigDecimal impliedVolatility) {
    this.impliedVolatility = JsonNullable.<BigDecimal>of(impliedVolatility);
    return this;
  }

   /**
   * Implied volatility. It represents the volatility of the underlying that justifies the ask price of the derivative, when used as a parameter in the derivative&#39;s pricing model (such as Black-Scholes). Its value is a result of the pricing process, thus it represents the annual volatility of the underlying expected by the market participants until maturity of the derivative. This key figure is calculated for plain vanilla warrants only.
   * @return impliedVolatility
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "0.1", value = "Implied volatility. It represents the volatility of the underlying that justifies the ask price of the derivative, when used as a parameter in the derivative's pricing model (such as Black-Scholes). Its value is a result of the pricing process, thus it represents the annual volatility of the underlying expected by the market participants until maturity of the derivative. This key figure is calculated for plain vanilla warrants only.")
  @JsonIgnore

  public BigDecimal getImpliedVolatility() {
        return impliedVolatility.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IMPLIED_VOLATILITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getImpliedVolatility_JsonNullable() {
    return impliedVolatility;
  }
  
  @JsonProperty(JSON_PROPERTY_IMPLIED_VOLATILITY)
  public void setImpliedVolatility_JsonNullable(JsonNullable<BigDecimal> impliedVolatility) {
    this.impliedVolatility = impliedVolatility;
  }

  public void setImpliedVolatility(BigDecimal impliedVolatility) {
    this.impliedVolatility = JsonNullable.<BigDecimal>of(impliedVolatility);
  }


  public PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures intrinsicValue(BigDecimal intrinsicValue) {
    this.intrinsicValue = JsonNullable.<BigDecimal>of(intrinsicValue);
    return this;
  }

   /**
   * Intrinsic value. It represents the difference between the underlying level and the strike of the securitized derivative, adjusted for the cover ratio and the currency cross rate. If the difference is negative, the intrinsic value is given as 0. The intrinsic value represents the theoretical profit from an immediate exercise of the derivative. This key figure is calculated for plain vanilla warrants only.
   * @return intrinsicValue
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "2.02", value = "Intrinsic value. It represents the difference between the underlying level and the strike of the securitized derivative, adjusted for the cover ratio and the currency cross rate. If the difference is negative, the intrinsic value is given as 0. The intrinsic value represents the theoretical profit from an immediate exercise of the derivative. This key figure is calculated for plain vanilla warrants only.")
  @JsonIgnore

  public BigDecimal getIntrinsicValue() {
        return intrinsicValue.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INTRINSIC_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getIntrinsicValue_JsonNullable() {
    return intrinsicValue;
  }
  
  @JsonProperty(JSON_PROPERTY_INTRINSIC_VALUE)
  public void setIntrinsicValue_JsonNullable(JsonNullable<BigDecimal> intrinsicValue) {
    this.intrinsicValue = intrinsicValue;
  }

  public void setIntrinsicValue(BigDecimal intrinsicValue) {
    this.intrinsicValue = JsonNullable.<BigDecimal>of(intrinsicValue);
  }


  public PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures timeValue(BigDecimal timeValue) {
    this.timeValue = JsonNullable.<BigDecimal>of(timeValue);
    return this;
  }

   /**
   * Time value. It represents the difference between the ask price of the securitized derivative and its intrinsic value (see attribute &#x60;intrinsicValue&#x60;). This key figure is calculated for plain vanilla warrants only.
   * @return timeValue
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "4.04", value = "Time value. It represents the difference between the ask price of the securitized derivative and its intrinsic value (see attribute `intrinsicValue`). This key figure is calculated for plain vanilla warrants only.")
  @JsonIgnore

  public BigDecimal getTimeValue() {
        return timeValue.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TIME_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getTimeValue_JsonNullable() {
    return timeValue;
  }
  
  @JsonProperty(JSON_PROPERTY_TIME_VALUE)
  public void setTimeValue_JsonNullable(JsonNullable<BigDecimal> timeValue) {
    this.timeValue = timeValue;
  }

  public void setTimeValue(BigDecimal timeValue) {
    this.timeValue = JsonNullable.<BigDecimal>of(timeValue);
  }


  public PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures outperformancePoint(BigDecimal outperformancePoint) {
    this.outperformancePoint = JsonNullable.<BigDecimal>of(outperformancePoint);
    return this;
  }

   /**
   * Outperformance point. It represents the underlying level from which the underlying starts to outperform the securitized derivative, thus the investor would be better off investing directly in the underlying. It is calculated only for securitized derivatives with a limited payout (e.g. capped products). For the value unit, see attribute &#x60;instrument.underlying.valueUnit&#x60;.
   * @return outperformancePoint
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "5.05", value = "Outperformance point. It represents the underlying level from which the underlying starts to outperform the securitized derivative, thus the investor would be better off investing directly in the underlying. It is calculated only for securitized derivatives with a limited payout (e.g. capped products). For the value unit, see attribute `instrument.underlying.valueUnit`.")
  @JsonIgnore

  public BigDecimal getOutperformancePoint() {
        return outperformancePoint.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OUTPERFORMANCE_POINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getOutperformancePoint_JsonNullable() {
    return outperformancePoint;
  }
  
  @JsonProperty(JSON_PROPERTY_OUTPERFORMANCE_POINT)
  public void setOutperformancePoint_JsonNullable(JsonNullable<BigDecimal> outperformancePoint) {
    this.outperformancePoint = outperformancePoint;
  }

  public void setOutperformancePoint(BigDecimal outperformancePoint) {
    this.outperformancePoint = JsonNullable.<BigDecimal>of(outperformancePoint);
  }


  public PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures parity(BigDecimal parity) {
    this.parity = JsonNullable.<BigDecimal>of(parity);
    return this;
  }

   /**
   * Parity. It represents the difference between the underlying level and the strike of the derivative, adjusted for the cover ratio and the currency cross rate. Negative values are possible. It is the gain or loss that would result from the immediate exercise of an already present warrant and a simultaneously executed compensation transaction on the spot markets. This key figure is calculated for plain vanilla warrants only.
   * @return parity
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "1.01", value = "Parity. It represents the difference between the underlying level and the strike of the derivative, adjusted for the cover ratio and the currency cross rate. Negative values are possible. It is the gain or loss that would result from the immediate exercise of an already present warrant and a simultaneously executed compensation transaction on the spot markets. This key figure is calculated for plain vanilla warrants only.")
  @JsonIgnore

  public BigDecimal getParity() {
        return parity.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PARITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getParity_JsonNullable() {
    return parity;
  }
  
  @JsonProperty(JSON_PROPERTY_PARITY)
  public void setParity_JsonNullable(JsonNullable<BigDecimal> parity) {
    this.parity = parity;
  }

  public void setParity(BigDecimal parity) {
    this.parity = JsonNullable.<BigDecimal>of(parity);
  }


  /**
   * Return true if this PostSecuritizedDerivativeNotationScreenerSearchDataItems_keyFigures object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures postSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures = (PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures) o;
    return Objects.equals(this.currency, postSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures.currency) &&
        Objects.equals(this.bonusYield, postSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures.bonusYield) &&
        Objects.equals(this.sidewaysYield, postSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures.sidewaysYield) &&
        Objects.equals(this.maximumYield, postSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures.maximumYield) &&
        Objects.equals(this.agio, postSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures.agio) &&
        Objects.equals(this.discount, postSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures.discount) &&
        Objects.equals(this.breakEven, postSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures.breakEven) &&
        Objects.equals(this.spread, postSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures.spread) &&
        Objects.equals(this.delta, postSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures.delta) &&
        Objects.equals(this.thetaOneWeek, postSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures.thetaOneWeek) &&
        Objects.equals(this.vega, postSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures.vega) &&
        equalsNullable(this.leverage, postSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures.leverage) &&
        equalsNullable(this.omega, postSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures.omega) &&
        equalsNullable(this.impliedVolatility, postSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures.impliedVolatility) &&
        equalsNullable(this.intrinsicValue, postSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures.intrinsicValue) &&
        equalsNullable(this.timeValue, postSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures.timeValue) &&
        equalsNullable(this.outperformancePoint, postSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures.outperformancePoint) &&
        equalsNullable(this.parity, postSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures.parity);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(currency, bonusYield, sidewaysYield, maximumYield, agio, discount, breakEven, spread, delta, thetaOneWeek, vega, hashCodeNullable(leverage), hashCodeNullable(omega), hashCodeNullable(impliedVolatility), hashCodeNullable(intrinsicValue), hashCodeNullable(timeValue), hashCodeNullable(outperformancePoint), hashCodeNullable(parity));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostSecuritizedDerivativeNotationScreenerSearchDataItemsKeyFigures {\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    bonusYield: ").append(toIndentedString(bonusYield)).append("\n");
    sb.append("    sidewaysYield: ").append(toIndentedString(sidewaysYield)).append("\n");
    sb.append("    maximumYield: ").append(toIndentedString(maximumYield)).append("\n");
    sb.append("    agio: ").append(toIndentedString(agio)).append("\n");
    sb.append("    discount: ").append(toIndentedString(discount)).append("\n");
    sb.append("    breakEven: ").append(toIndentedString(breakEven)).append("\n");
    sb.append("    spread: ").append(toIndentedString(spread)).append("\n");
    sb.append("    delta: ").append(toIndentedString(delta)).append("\n");
    sb.append("    thetaOneWeek: ").append(toIndentedString(thetaOneWeek)).append("\n");
    sb.append("    vega: ").append(toIndentedString(vega)).append("\n");
    sb.append("    leverage: ").append(toIndentedString(leverage)).append("\n");
    sb.append("    omega: ").append(toIndentedString(omega)).append("\n");
    sb.append("    impliedVolatility: ").append(toIndentedString(impliedVolatility)).append("\n");
    sb.append("    intrinsicValue: ").append(toIndentedString(intrinsicValue)).append("\n");
    sb.append("    timeValue: ").append(toIndentedString(timeValue)).append("\n");
    sb.append("    outperformancePoint: ").append(toIndentedString(outperformancePoint)).append("\n");
    sb.append("    parity: ").append(toIndentedString(parity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

