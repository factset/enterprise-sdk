/*
 * Securitized Derivatives API For Digital Portals
 * Search for securitized derivative instruments, using a criteria-based screener. The API provides also fundamental data, notation-based key figures, list of barrier types, and details regarding the underlyings, their respective barriers and related cash flows, coupon lists and derived basic interest rate information.  The screener is based on securitized derivatives-specific parameters. The result is limited to the notations that satisfy all the selected filters. If more than one notation of an instrument matches the parameters, and no market priority has been specified, only the notation with the highest trading volume, averaged over one month, is considered. All identifier types used as parameters must be valid and application must have permissions for them.  Available search criteria include:  * validation: filter for only active listings, by price quality and latest/previous available price dates * traded markets: filter and indicate a market priority for the validation * life cycle: important dates in and features of the life cycle of the securitized derivatives instruments * filter by issuer, country of registration of the securitized derivatives * underlying and related barriers, including level and distance, and resulting cash flows * coupon data: where applicable, occurrence and frequency of coupon payments, current interest rate range * performance and volatility * product-specific ask-based key figures (not all key figures are available for all product types):     * bonus yield, sideways yield, maximum yield based on the ask price     * agio, discount     * spread     * break even, outperformance point, parity     * delta, weekly theta, vega, implied volatility     * leverage, omega     * intrinsic value, time value         Since some underlyings, e.g. an index or a performance difference of a stock and an index (alpha structure), do not represent a directly tradable asset, they do not have a price in the classical sense. Therefore, the term *level* is used instead of *price*, e.g. underlying level instead of underlying price. The endpoint does not support the search for securitized derivatives with multiple underlyings, thus only securitized derivatives with a single underlying are returned in the result.  The search can be restricted to a specific set of products by using customer-specific instrument or notation lists. Such restriction lists are set up by FactSet upon request.  This API is fully integrated with the corresponding [Quotes API](https://developer.factset.com/api-catalog/quotes-api-digital-portals), allowing access to detailed price and performance information of instruments, as well as basic security identifier cross-reference. For direct access to price histories, please refer to the [Time Series API for Digital Portals](https://developer.factset.com/api-catalog/time-series-api-digital-portals).  Similar criteria based screener APIs exist for equity and fixed income instruments: See the [Stocks API](https://developer.factset.com/api-catalog/stocks-api-digital-portals) and the [Bonds API](https://developer.factset.com/api-catalog/bonds-api-digital-portals) for details.  
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.GetSecuritizedDerivativeGetDataCountrySecurityRegistrationItems;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.GetSecuritizedDerivativeGetDataTypeItems;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.InlineResponse200DataExercise;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.InlineResponse200DataIssue;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.InlineResponse200DataIssuer;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.InlineResponse200DataLifeCycle;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.InlineResponse200DataNominal;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.InlineResponse200DataNsin;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.InlineResponse200DataOrderVolume;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.models.InlineResponse200DataReferenceDebtor;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.SecuritizedDerivativesAPIforDigitalPortals.JSON;


/**
 * Instrument data of the securitized derivative.
 */
@ApiModel(description = "Instrument data of the securitized derivative.")
@JsonPropertyOrder({
  InlineResponse200Data.JSON_PROPERTY_ISIN,
  InlineResponse200Data.JSON_PROPERTY_ID_INSTRUMENT,
  InlineResponse200Data.JSON_PROPERTY_SOURCE_IDENTIFIER,
  InlineResponse200Data.JSON_PROPERTY_NSIN,
  InlineResponse200Data.JSON_PROPERTY_IS_PRIVATE_PLACEMENT,
  InlineResponse200Data.JSON_PROPERTY_NAME,
  InlineResponse200Data.JSON_PROPERTY_SHORT_NAME,
  InlineResponse200Data.JSON_PROPERTY_TYPE,
  InlineResponse200Data.JSON_PROPERTY_IS_INCOMPLETE,
  InlineResponse200Data.JSON_PROPERTY_LIFE_CYCLE,
  InlineResponse200Data.JSON_PROPERTY_COUNTRY_SECURITY_REGISTRATION,
  InlineResponse200Data.JSON_PROPERTY_REFERENCE_DEBTOR,
  InlineResponse200Data.JSON_PROPERTY_IS_COLLATERALIZED,
  InlineResponse200Data.JSON_PROPERTY_IS_QUANTO,
  InlineResponse200Data.JSON_PROPERTY_CAPITAL_PROTECTION,
  InlineResponse200Data.JSON_PROPERTY_HAS_CATCH_UP,
  InlineResponse200Data.JSON_PROPERTY_HAS_AUTOMATIC_EXERCISE,
  InlineResponse200Data.JSON_PROPERTY_ORDER_VOLUME,
  InlineResponse200Data.JSON_PROPERTY_REDEMPTION_AMOUNT,
  InlineResponse200Data.JSON_PROPERTY_MANAGEMENT_FEE,
  InlineResponse200Data.JSON_PROPERTY_NOMINAL,
  InlineResponse200Data.JSON_PROPERTY_ISSUER,
  InlineResponse200Data.JSON_PROPERTY_ISSUE,
  InlineResponse200Data.JSON_PROPERTY_EXERCISE,
  InlineResponse200Data.JSON_PROPERTY_SETTLEMENT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class InlineResponse200Data implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ISIN = "isin";
  private JsonNullable<String> isin = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_INSTRUMENT = "idInstrument";
  private JsonNullable<String> idInstrument = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SOURCE_IDENTIFIER = "sourceIdentifier";
  private JsonNullable<String> sourceIdentifier = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NSIN = "nsin";
  private InlineResponse200DataNsin nsin;

  public static final String JSON_PROPERTY_IS_PRIVATE_PLACEMENT = "isPrivatePlacement";
  private JsonNullable<Boolean> isPrivatePlacement = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SHORT_NAME = "shortName";
  private JsonNullable<String> shortName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TYPE = "type";
  private java.util.List<GetSecuritizedDerivativeGetDataTypeItems> type = null;

  public static final String JSON_PROPERTY_IS_INCOMPLETE = "isIncomplete";
  private JsonNullable<Boolean> isIncomplete = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_LIFE_CYCLE = "lifeCycle";
  private InlineResponse200DataLifeCycle lifeCycle;

  public static final String JSON_PROPERTY_COUNTRY_SECURITY_REGISTRATION = "countrySecurityRegistration";
  private java.util.List<GetSecuritizedDerivativeGetDataCountrySecurityRegistrationItems> countrySecurityRegistration = null;

  public static final String JSON_PROPERTY_REFERENCE_DEBTOR = "referenceDebtor";
  private InlineResponse200DataReferenceDebtor referenceDebtor;

  public static final String JSON_PROPERTY_IS_COLLATERALIZED = "isCollateralized";
  private JsonNullable<Boolean> isCollateralized = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_IS_QUANTO = "isQuanto";
  private JsonNullable<Boolean> isQuanto = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_CAPITAL_PROTECTION = "capitalProtection";
  private JsonNullable<BigDecimal> capitalProtection = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_HAS_CATCH_UP = "hasCatchUp";
  private JsonNullable<Boolean> hasCatchUp = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_HAS_AUTOMATIC_EXERCISE = "hasAutomaticExercise";
  private JsonNullable<Boolean> hasAutomaticExercise = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_ORDER_VOLUME = "orderVolume";
  private InlineResponse200DataOrderVolume orderVolume;

  public static final String JSON_PROPERTY_REDEMPTION_AMOUNT = "redemptionAmount";
  private JsonNullable<BigDecimal> redemptionAmount = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_MANAGEMENT_FEE = "managementFee";
  private JsonNullable<BigDecimal> managementFee = JsonNullable.<BigDecimal>undefined();

  public static final String JSON_PROPERTY_NOMINAL = "nominal";
  private InlineResponse200DataNominal nominal;

  public static final String JSON_PROPERTY_ISSUER = "issuer";
  private InlineResponse200DataIssuer issuer;

  public static final String JSON_PROPERTY_ISSUE = "issue";
  private InlineResponse200DataIssue issue;

  public static final String JSON_PROPERTY_EXERCISE = "exercise";
  private InlineResponse200DataExercise exercise;

  /**
   * Settlement is the fulfillment of the issuer&#39;s contractual obligations arising from the securitized derivative. Depending on the terms, the underlying asset may be delivered physically or its equivalent monetary value may be payed out. | Value | Description | | --- | --- | | cash | Transfer of a cash amount. | | physical | Physical delivery of the underlying asset. | | either | Cash or physical, at the discretion of the issuer. |  
   */
  public enum SettlementEnum {
    CASH("cash"),
    
    PHYSICAL("physical"),
    
    EITHER("either");

    private String value;

    SettlementEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SettlementEnum fromValue(String value) {
      for (SettlementEnum b : SettlementEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  public static final String JSON_PROPERTY_SETTLEMENT = "settlement";
  private JsonNullable<SettlementEnum> settlement = JsonNullable.<SettlementEnum>undefined();

  public InlineResponse200Data() { 
  }

  public InlineResponse200Data isin(String isin) {
    this.isin = JsonNullable.<String>of(isin);
    return this;
  }

   /**
   * The International Securities Identification Number (ISIN) of the instrument. The ISIN is a 12-character code of digits and upper-case letters that uniquely identifies an instrument.
   * @return isin
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "US3030751057", value = "The International Securities Identification Number (ISIN) of the instrument. The ISIN is a 12-character code of digits and upper-case letters that uniquely identifies an instrument.")
  @JsonIgnore

  public String getIsin() {
        return isin.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ISIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIsin_JsonNullable() {
    return isin;
  }
  
  @JsonProperty(JSON_PROPERTY_ISIN)
  public void setIsin_JsonNullable(JsonNullable<String> isin) {
    this.isin = isin;
  }

  public void setIsin(String isin) {
    this.isin = JsonNullable.<String>of(isin);
  }


  public InlineResponse200Data idInstrument(String idInstrument) {
    this.idInstrument = JsonNullable.<String>of(idInstrument);
    return this;
  }

   /**
   * MDG identifier of the instrument.
   * @return idInstrument
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "209485", value = "MDG identifier of the instrument.")
  @JsonIgnore

  public String getIdInstrument() {
        return idInstrument.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_INSTRUMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdInstrument_JsonNullable() {
    return idInstrument;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_INSTRUMENT)
  public void setIdInstrument_JsonNullable(JsonNullable<String> idInstrument) {
    this.idInstrument = idInstrument;
  }

  public void setIdInstrument(String idInstrument) {
    this.idInstrument = JsonNullable.<String>of(idInstrument);
  }


  public InlineResponse200Data sourceIdentifier(String sourceIdentifier) {
    this.sourceIdentifier = JsonNullable.<String>of(sourceIdentifier);
    return this;
  }

   /**
   * Identifier used in the request.
   * @return sourceIdentifier
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "FDS-US", value = "Identifier used in the request.")
  @JsonIgnore

  public String getSourceIdentifier() {
        return sourceIdentifier.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SOURCE_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSourceIdentifier_JsonNullable() {
    return sourceIdentifier;
  }
  
  @JsonProperty(JSON_PROPERTY_SOURCE_IDENTIFIER)
  public void setSourceIdentifier_JsonNullable(JsonNullable<String> sourceIdentifier) {
    this.sourceIdentifier = sourceIdentifier;
  }

  public void setSourceIdentifier(String sourceIdentifier) {
    this.sourceIdentifier = JsonNullable.<String>of(sourceIdentifier);
  }


  public InlineResponse200Data nsin(InlineResponse200DataNsin nsin) {
    this.nsin = nsin;
    return this;
  }

   /**
   * Get nsin
   * @return nsin
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NSIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse200DataNsin getNsin() {
    return nsin;
  }


  @JsonProperty(JSON_PROPERTY_NSIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNsin(InlineResponse200DataNsin nsin) {
    this.nsin = nsin;
  }


  public InlineResponse200Data isPrivatePlacement(Boolean isPrivatePlacement) {
    this.isPrivatePlacement = JsonNullable.<Boolean>of(isPrivatePlacement);
    return this;
  }

   /**
   * If true, the instrument is part of a private placement and therefore not publicly traded.
   * @return isPrivatePlacement
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "false", value = "If true, the instrument is part of a private placement and therefore not publicly traded.")
  @JsonIgnore

  public Boolean getIsPrivatePlacement() {
        return isPrivatePlacement.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IS_PRIVATE_PLACEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getIsPrivatePlacement_JsonNullable() {
    return isPrivatePlacement;
  }
  
  @JsonProperty(JSON_PROPERTY_IS_PRIVATE_PLACEMENT)
  public void setIsPrivatePlacement_JsonNullable(JsonNullable<Boolean> isPrivatePlacement) {
    this.isPrivatePlacement = isPrivatePlacement;
  }

  public void setIsPrivatePlacement(Boolean isPrivatePlacement) {
    this.isPrivatePlacement = JsonNullable.<Boolean>of(isPrivatePlacement);
  }


  public InlineResponse200Data name(String name) {
    this.name = JsonNullable.<String>of(name);
    return this;
  }

   /**
   * Name of the instrument.
   * @return name
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Lorem ipsum", value = "Name of the instrument.")
  @JsonIgnore

  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public InlineResponse200Data shortName(String shortName) {
    this.shortName = JsonNullable.<String>of(shortName);
    return this;
  }

   /**
   * Short name of the instrument.
   * @return shortName
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Lorem ipsum", value = "Short name of the instrument.")
  @JsonIgnore

  public String getShortName() {
        return shortName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SHORT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getShortName_JsonNullable() {
    return shortName;
  }
  
  @JsonProperty(JSON_PROPERTY_SHORT_NAME)
  public void setShortName_JsonNullable(JsonNullable<String> shortName) {
    this.shortName = shortName;
  }

  public void setShortName(String shortName) {
    this.shortName = JsonNullable.<String>of(shortName);
  }


  public InlineResponse200Data type(java.util.List<GetSecuritizedDerivativeGetDataTypeItems> type) {
    this.type = type;
    return this;
  }

  public InlineResponse200Data addTypeItem(GetSecuritizedDerivativeGetDataTypeItems typeItem) {
    if (this.type == null) {
      this.type = new java.util.ArrayList<>();
    }
    this.type.add(typeItem);
    return this;
  }

   /**
   * Instrument type as defined by FactSet Digital Solutions. Instrument types are arranged in a hierarchy, with the first level representing the most coarse granularity and further levels successively refining the granularity (see MDG category system 18). Please refer to endpoint &#x60;/category/get&#x60; for possible values.
   * @return type
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Instrument type as defined by FactSet Digital Solutions. Instrument types are arranged in a hierarchy, with the first level representing the most coarse granularity and further levels successively refining the granularity (see MDG category system 18). Please refer to endpoint `/category/get` for possible values.")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<GetSecuritizedDerivativeGetDataTypeItems> getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(java.util.List<GetSecuritizedDerivativeGetDataTypeItems> type) {
    this.type = type;
  }


  public InlineResponse200Data isIncomplete(Boolean isIncomplete) {
    this.isIncomplete = JsonNullable.<Boolean>of(isIncomplete);
    return this;
  }

   /**
   * If true, the data supplier has marked the data for this instrument as incomplete.
   * @return isIncomplete
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "true", value = "If true, the data supplier has marked the data for this instrument as incomplete.")
  @JsonIgnore

  public Boolean getIsIncomplete() {
        return isIncomplete.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IS_INCOMPLETE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getIsIncomplete_JsonNullable() {
    return isIncomplete;
  }
  
  @JsonProperty(JSON_PROPERTY_IS_INCOMPLETE)
  public void setIsIncomplete_JsonNullable(JsonNullable<Boolean> isIncomplete) {
    this.isIncomplete = isIncomplete;
  }

  public void setIsIncomplete(Boolean isIncomplete) {
    this.isIncomplete = JsonNullable.<Boolean>of(isIncomplete);
  }


  public InlineResponse200Data lifeCycle(InlineResponse200DataLifeCycle lifeCycle) {
    this.lifeCycle = lifeCycle;
    return this;
  }

   /**
   * Get lifeCycle
   * @return lifeCycle
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LIFE_CYCLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse200DataLifeCycle getLifeCycle() {
    return lifeCycle;
  }


  @JsonProperty(JSON_PROPERTY_LIFE_CYCLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLifeCycle(InlineResponse200DataLifeCycle lifeCycle) {
    this.lifeCycle = lifeCycle;
  }


  public InlineResponse200Data countrySecurityRegistration(java.util.List<GetSecuritizedDerivativeGetDataCountrySecurityRegistrationItems> countrySecurityRegistration) {
    this.countrySecurityRegistration = countrySecurityRegistration;
    return this;
  }

  public InlineResponse200Data addCountrySecurityRegistrationItem(GetSecuritizedDerivativeGetDataCountrySecurityRegistrationItems countrySecurityRegistrationItem) {
    if (this.countrySecurityRegistration == null) {
      this.countrySecurityRegistration = new java.util.ArrayList<>();
    }
    this.countrySecurityRegistration.add(countrySecurityRegistrationItem);
    return this;
  }

   /**
   * List of countries where the instrument is registered. See endpoint &#x60;/basic/region/country/list&#x60; for possible values.
   * @return countrySecurityRegistration
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "List of countries where the instrument is registered. See endpoint `/basic/region/country/list` for possible values.")
  @JsonProperty(JSON_PROPERTY_COUNTRY_SECURITY_REGISTRATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<GetSecuritizedDerivativeGetDataCountrySecurityRegistrationItems> getCountrySecurityRegistration() {
    return countrySecurityRegistration;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY_SECURITY_REGISTRATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountrySecurityRegistration(java.util.List<GetSecuritizedDerivativeGetDataCountrySecurityRegistrationItems> countrySecurityRegistration) {
    this.countrySecurityRegistration = countrySecurityRegistration;
  }


  public InlineResponse200Data referenceDebtor(InlineResponse200DataReferenceDebtor referenceDebtor) {
    this.referenceDebtor = referenceDebtor;
    return this;
  }

   /**
   * Get referenceDebtor
   * @return referenceDebtor
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_REFERENCE_DEBTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse200DataReferenceDebtor getReferenceDebtor() {
    return referenceDebtor;
  }


  @JsonProperty(JSON_PROPERTY_REFERENCE_DEBTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReferenceDebtor(InlineResponse200DataReferenceDebtor referenceDebtor) {
    this.referenceDebtor = referenceDebtor;
  }


  public InlineResponse200Data isCollateralized(Boolean isCollateralized) {
    this.isCollateralized = JsonNullable.<Boolean>of(isCollateralized);
    return this;
  }

   /**
   * If true, this instrument is protected against an issuer default by collateral (e.g. COSI collateralization by SIX Swiss Exchange).
   * @return isCollateralized
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "true", value = "If true, this instrument is protected against an issuer default by collateral (e.g. COSI collateralization by SIX Swiss Exchange).")
  @JsonIgnore

  public Boolean getIsCollateralized() {
        return isCollateralized.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IS_COLLATERALIZED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getIsCollateralized_JsonNullable() {
    return isCollateralized;
  }
  
  @JsonProperty(JSON_PROPERTY_IS_COLLATERALIZED)
  public void setIsCollateralized_JsonNullable(JsonNullable<Boolean> isCollateralized) {
    this.isCollateralized = isCollateralized;
  }

  public void setIsCollateralized(Boolean isCollateralized) {
    this.isCollateralized = JsonNullable.<Boolean>of(isCollateralized);
  }


  public InlineResponse200Data isQuanto(Boolean isQuanto) {
    this.isQuanto = JsonNullable.<Boolean>of(isQuanto);
    return this;
  }

   /**
   * If true, the risk of exchange rate fluctuations between the value unit of the underlying (all of them, in case of multiple underlyings) and the value unit of the redemption is hedged.
   * @return isQuanto
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "false", value = "If true, the risk of exchange rate fluctuations between the value unit of the underlying (all of them, in case of multiple underlyings) and the value unit of the redemption is hedged.")
  @JsonIgnore

  public Boolean getIsQuanto() {
        return isQuanto.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IS_QUANTO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getIsQuanto_JsonNullable() {
    return isQuanto;
  }
  
  @JsonProperty(JSON_PROPERTY_IS_QUANTO)
  public void setIsQuanto_JsonNullable(JsonNullable<Boolean> isQuanto) {
    this.isQuanto = isQuanto;
  }

  public void setIsQuanto(Boolean isQuanto) {
    this.isQuanto = JsonNullable.<Boolean>of(isQuanto);
  }


  public InlineResponse200Data capitalProtection(BigDecimal capitalProtection) {
    this.capitalProtection = JsonNullable.<BigDecimal>of(capitalProtection);
    return this;
  }

   /**
   * Proportion of the nominal amount protected against loss, usually 100%.
   * @return capitalProtection
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "0.3", value = "Proportion of the nominal amount protected against loss, usually 100%.")
  @JsonIgnore

  public BigDecimal getCapitalProtection() {
        return capitalProtection.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CAPITAL_PROTECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getCapitalProtection_JsonNullable() {
    return capitalProtection;
  }
  
  @JsonProperty(JSON_PROPERTY_CAPITAL_PROTECTION)
  public void setCapitalProtection_JsonNullable(JsonNullable<BigDecimal> capitalProtection) {
    this.capitalProtection = capitalProtection;
  }

  public void setCapitalProtection(BigDecimal capitalProtection) {
    this.capitalProtection = JsonNullable.<BigDecimal>of(capitalProtection);
  }


  public InlineResponse200Data hasCatchUp(Boolean hasCatchUp) {
    this.hasCatchUp = JsonNullable.<Boolean>of(hasCatchUp);
    return this;
  }

   /**
   * If true, the instrument has a so-called \&quot;memory feature\&quot; (also called \&quot;catch up\&quot;). This means that a conditional payment that has not been paid out could be paid on a subsequent payment date if the condition is then satisfied.
   * @return hasCatchUp
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "true", value = "If true, the instrument has a so-called \"memory feature\" (also called \"catch up\"). This means that a conditional payment that has not been paid out could be paid on a subsequent payment date if the condition is then satisfied.")
  @JsonIgnore

  public Boolean getHasCatchUp() {
        return hasCatchUp.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HAS_CATCH_UP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getHasCatchUp_JsonNullable() {
    return hasCatchUp;
  }
  
  @JsonProperty(JSON_PROPERTY_HAS_CATCH_UP)
  public void setHasCatchUp_JsonNullable(JsonNullable<Boolean> hasCatchUp) {
    this.hasCatchUp = hasCatchUp;
  }

  public void setHasCatchUp(Boolean hasCatchUp) {
    this.hasCatchUp = JsonNullable.<Boolean>of(hasCatchUp);
  }


  public InlineResponse200Data hasAutomaticExercise(Boolean hasAutomaticExercise) {
    this.hasAutomaticExercise = JsonNullable.<Boolean>of(hasAutomaticExercise);
    return this;
  }

   /**
   * If true, the instrument will be automatically exercised at termination (such as maturity, premature call, or premature payout). It prevents such products from becoming worthless, meaning the investor does not have to undertake any steps in order to receive the payable amount.
   * @return hasAutomaticExercise
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "true", value = "If true, the instrument will be automatically exercised at termination (such as maturity, premature call, or premature payout). It prevents such products from becoming worthless, meaning the investor does not have to undertake any steps in order to receive the payable amount.")
  @JsonIgnore

  public Boolean getHasAutomaticExercise() {
        return hasAutomaticExercise.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HAS_AUTOMATIC_EXERCISE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getHasAutomaticExercise_JsonNullable() {
    return hasAutomaticExercise;
  }
  
  @JsonProperty(JSON_PROPERTY_HAS_AUTOMATIC_EXERCISE)
  public void setHasAutomaticExercise_JsonNullable(JsonNullable<Boolean> hasAutomaticExercise) {
    this.hasAutomaticExercise = hasAutomaticExercise;
  }

  public void setHasAutomaticExercise(Boolean hasAutomaticExercise) {
    this.hasAutomaticExercise = JsonNullable.<Boolean>of(hasAutomaticExercise);
  }


  public InlineResponse200Data orderVolume(InlineResponse200DataOrderVolume orderVolume) {
    this.orderVolume = orderVolume;
    return this;
  }

   /**
   * Get orderVolume
   * @return orderVolume
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ORDER_VOLUME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse200DataOrderVolume getOrderVolume() {
    return orderVolume;
  }


  @JsonProperty(JSON_PROPERTY_ORDER_VOLUME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrderVolume(InlineResponse200DataOrderVolume orderVolume) {
    this.orderVolume = orderVolume;
  }


  public InlineResponse200Data redemptionAmount(BigDecimal redemptionAmount) {
    this.redemptionAmount = JsonNullable.<BigDecimal>of(redemptionAmount);
    return this;
  }

   /**
   * Actual redemption amount after expiry (e.g. knock out, maturity etc) for securitized derivatives with a so-called knock-out feature. The currency of the redemption amount is given by &#x60;issue.valueUnit&#x60; and is always a main currency for securitized derivatives with that feature. 
   * @return redemptionAmount
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "4.04", value = "Actual redemption amount after expiry (e.g. knock out, maturity etc) for securitized derivatives with a so-called knock-out feature. The currency of the redemption amount is given by `issue.valueUnit` and is always a main currency for securitized derivatives with that feature. ")
  @JsonIgnore

  public BigDecimal getRedemptionAmount() {
        return redemptionAmount.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REDEMPTION_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getRedemptionAmount_JsonNullable() {
    return redemptionAmount;
  }
  
  @JsonProperty(JSON_PROPERTY_REDEMPTION_AMOUNT)
  public void setRedemptionAmount_JsonNullable(JsonNullable<BigDecimal> redemptionAmount) {
    this.redemptionAmount = redemptionAmount;
  }

  public void setRedemptionAmount(BigDecimal redemptionAmount) {
    this.redemptionAmount = JsonNullable.<BigDecimal>of(redemptionAmount);
  }


  public InlineResponse200Data managementFee(BigDecimal managementFee) {
    this.managementFee = JsonNullable.<BigDecimal>of(managementFee);
    return this;
  }

   /**
   * Management fee paid annually by the investor to the issuer of the securitized derivative instrument.
   * @return managementFee
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "0.4", value = "Management fee paid annually by the investor to the issuer of the securitized derivative instrument.")
  @JsonIgnore

  public BigDecimal getManagementFee() {
        return managementFee.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MANAGEMENT_FEE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BigDecimal> getManagementFee_JsonNullable() {
    return managementFee;
  }
  
  @JsonProperty(JSON_PROPERTY_MANAGEMENT_FEE)
  public void setManagementFee_JsonNullable(JsonNullable<BigDecimal> managementFee) {
    this.managementFee = managementFee;
  }

  public void setManagementFee(BigDecimal managementFee) {
    this.managementFee = JsonNullable.<BigDecimal>of(managementFee);
  }


  public InlineResponse200Data nominal(InlineResponse200DataNominal nominal) {
    this.nominal = nominal;
    return this;
  }

   /**
   * Get nominal
   * @return nominal
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NOMINAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse200DataNominal getNominal() {
    return nominal;
  }


  @JsonProperty(JSON_PROPERTY_NOMINAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNominal(InlineResponse200DataNominal nominal) {
    this.nominal = nominal;
  }


  public InlineResponse200Data issuer(InlineResponse200DataIssuer issuer) {
    this.issuer = issuer;
    return this;
  }

   /**
   * Get issuer
   * @return issuer
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ISSUER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse200DataIssuer getIssuer() {
    return issuer;
  }


  @JsonProperty(JSON_PROPERTY_ISSUER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIssuer(InlineResponse200DataIssuer issuer) {
    this.issuer = issuer;
  }


  public InlineResponse200Data issue(InlineResponse200DataIssue issue) {
    this.issue = issue;
    return this;
  }

   /**
   * Get issue
   * @return issue
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ISSUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse200DataIssue getIssue() {
    return issue;
  }


  @JsonProperty(JSON_PROPERTY_ISSUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIssue(InlineResponse200DataIssue issue) {
    this.issue = issue;
  }


  public InlineResponse200Data exercise(InlineResponse200DataExercise exercise) {
    this.exercise = exercise;
    return this;
  }

   /**
   * Get exercise
   * @return exercise
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EXERCISE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InlineResponse200DataExercise getExercise() {
    return exercise;
  }


  @JsonProperty(JSON_PROPERTY_EXERCISE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExercise(InlineResponse200DataExercise exercise) {
    this.exercise = exercise;
  }


  public InlineResponse200Data settlement(SettlementEnum settlement) {
    this.settlement = JsonNullable.<SettlementEnum>of(settlement);
    return this;
  }

   /**
   * Settlement is the fulfillment of the issuer&#39;s contractual obligations arising from the securitized derivative. Depending on the terms, the underlying asset may be delivered physically or its equivalent monetary value may be payed out. | Value | Description | | --- | --- | | cash | Transfer of a cash amount. | | physical | Physical delivery of the underlying asset. | | either | Cash or physical, at the discretion of the issuer. |  
   * @return settlement
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "cash", value = "Settlement is the fulfillment of the issuer's contractual obligations arising from the securitized derivative. Depending on the terms, the underlying asset may be delivered physically or its equivalent monetary value may be payed out. | Value | Description | | --- | --- | | cash | Transfer of a cash amount. | | physical | Physical delivery of the underlying asset. | | either | Cash or physical, at the discretion of the issuer. |  ")
  @JsonIgnore

  public SettlementEnum getSettlement() {
        return settlement.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SETTLEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<SettlementEnum> getSettlement_JsonNullable() {
    return settlement;
  }
  
  @JsonProperty(JSON_PROPERTY_SETTLEMENT)
  public void setSettlement_JsonNullable(JsonNullable<SettlementEnum> settlement) {
    this.settlement = settlement;
  }

  public void setSettlement(SettlementEnum settlement) {
    this.settlement = JsonNullable.<SettlementEnum>of(settlement);
  }


  /**
   * Return true if this inline_response_200_data object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse200Data inlineResponse200Data = (InlineResponse200Data) o;
    return equalsNullable(this.isin, inlineResponse200Data.isin) &&
        equalsNullable(this.idInstrument, inlineResponse200Data.idInstrument) &&
        equalsNullable(this.sourceIdentifier, inlineResponse200Data.sourceIdentifier) &&
        Objects.equals(this.nsin, inlineResponse200Data.nsin) &&
        equalsNullable(this.isPrivatePlacement, inlineResponse200Data.isPrivatePlacement) &&
        equalsNullable(this.name, inlineResponse200Data.name) &&
        equalsNullable(this.shortName, inlineResponse200Data.shortName) &&
        Objects.equals(this.type, inlineResponse200Data.type) &&
        equalsNullable(this.isIncomplete, inlineResponse200Data.isIncomplete) &&
        Objects.equals(this.lifeCycle, inlineResponse200Data.lifeCycle) &&
        Objects.equals(this.countrySecurityRegistration, inlineResponse200Data.countrySecurityRegistration) &&
        Objects.equals(this.referenceDebtor, inlineResponse200Data.referenceDebtor) &&
        equalsNullable(this.isCollateralized, inlineResponse200Data.isCollateralized) &&
        equalsNullable(this.isQuanto, inlineResponse200Data.isQuanto) &&
        equalsNullable(this.capitalProtection, inlineResponse200Data.capitalProtection) &&
        equalsNullable(this.hasCatchUp, inlineResponse200Data.hasCatchUp) &&
        equalsNullable(this.hasAutomaticExercise, inlineResponse200Data.hasAutomaticExercise) &&
        Objects.equals(this.orderVolume, inlineResponse200Data.orderVolume) &&
        equalsNullable(this.redemptionAmount, inlineResponse200Data.redemptionAmount) &&
        equalsNullable(this.managementFee, inlineResponse200Data.managementFee) &&
        Objects.equals(this.nominal, inlineResponse200Data.nominal) &&
        Objects.equals(this.issuer, inlineResponse200Data.issuer) &&
        Objects.equals(this.issue, inlineResponse200Data.issue) &&
        Objects.equals(this.exercise, inlineResponse200Data.exercise) &&
        equalsNullable(this.settlement, inlineResponse200Data.settlement);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(isin), hashCodeNullable(idInstrument), hashCodeNullable(sourceIdentifier), nsin, hashCodeNullable(isPrivatePlacement), hashCodeNullable(name), hashCodeNullable(shortName), type, hashCodeNullable(isIncomplete), lifeCycle, countrySecurityRegistration, referenceDebtor, hashCodeNullable(isCollateralized), hashCodeNullable(isQuanto), hashCodeNullable(capitalProtection), hashCodeNullable(hasCatchUp), hashCodeNullable(hasAutomaticExercise), orderVolume, hashCodeNullable(redemptionAmount), hashCodeNullable(managementFee), nominal, issuer, issue, exercise, hashCodeNullable(settlement));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse200Data {\n");
    sb.append("    isin: ").append(toIndentedString(isin)).append("\n");
    sb.append("    idInstrument: ").append(toIndentedString(idInstrument)).append("\n");
    sb.append("    sourceIdentifier: ").append(toIndentedString(sourceIdentifier)).append("\n");
    sb.append("    nsin: ").append(toIndentedString(nsin)).append("\n");
    sb.append("    isPrivatePlacement: ").append(toIndentedString(isPrivatePlacement)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    shortName: ").append(toIndentedString(shortName)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    isIncomplete: ").append(toIndentedString(isIncomplete)).append("\n");
    sb.append("    lifeCycle: ").append(toIndentedString(lifeCycle)).append("\n");
    sb.append("    countrySecurityRegistration: ").append(toIndentedString(countrySecurityRegistration)).append("\n");
    sb.append("    referenceDebtor: ").append(toIndentedString(referenceDebtor)).append("\n");
    sb.append("    isCollateralized: ").append(toIndentedString(isCollateralized)).append("\n");
    sb.append("    isQuanto: ").append(toIndentedString(isQuanto)).append("\n");
    sb.append("    capitalProtection: ").append(toIndentedString(capitalProtection)).append("\n");
    sb.append("    hasCatchUp: ").append(toIndentedString(hasCatchUp)).append("\n");
    sb.append("    hasAutomaticExercise: ").append(toIndentedString(hasAutomaticExercise)).append("\n");
    sb.append("    orderVolume: ").append(toIndentedString(orderVolume)).append("\n");
    sb.append("    redemptionAmount: ").append(toIndentedString(redemptionAmount)).append("\n");
    sb.append("    managementFee: ").append(toIndentedString(managementFee)).append("\n");
    sb.append("    nominal: ").append(toIndentedString(nominal)).append("\n");
    sb.append("    issuer: ").append(toIndentedString(issuer)).append("\n");
    sb.append("    issue: ").append(toIndentedString(issue)).append("\n");
    sb.append("    exercise: ").append(toIndentedString(exercise)).append("\n");
    sb.append("    settlement: ").append(toIndentedString(settlement)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

