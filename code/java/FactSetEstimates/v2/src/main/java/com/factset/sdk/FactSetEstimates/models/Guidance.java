/*
 * FactSet Estimates
 * With global coverage since 1999, the FactSet Estimates API provides you with comprehensive estimates and statistics on a wide variety of financial statement items as well as industry-specific metrics. The universe is comprised of over 19,000 active companies across 90+ countries with the following types of data included:   - **Consensus** - **Detail** - **Ratings** - **Surprise** - **Segments** - **Actuals** - **Guidance** - **New Estimates and Ratings Reports Endpoints**  For clients seeking  curated and relevant financial data, the FactSet Estimates API now includes Estimates and Ratings Reports endpoints. These powerful endpoints are designed for easy integration and consumption, delivering a wide array of financial metrics, estimates, and critical statistics in a highly accessible format suitable for both mobile and web applications.   Whether you are an analyst, investor, or financial professional, the Estimates and Ratings Reports endpoints offer detailed and actionable financial insights that can support thorough analyses and strategic decision-making processes.   The Estimates and Ratings Reports endpoints are especially valuable for B2B2C  applications, empowering financial services firms, investment companies, and corporate finance teams to:   - **Elevate Client Engagement:** Enrich user experiences in client-facing applications with comprehensive and up-to-date financial metrics.  - **Build Custom Reporting Tools:** Create tailored dashboards and analytics tools that provide deep insights and foster better financial understanding.  By adopting the FactSet Estimates API with its enriched Estimates and Ratings Reports endpoints, businesses can streamline their financial data integration process, improve operational efficiency, and deliver superior financial insights to their clients and end-users.     <p>This API is rate-limited to 10 requests per second and 10 concurrent requests per user.</p>  **Download API Specification**        To programmatically download the FactSet Estimates API Specification file in .yaml format, utilize the link below. You must be authorized for this API to extract the specification. This specification can then be used for Codegen to create your own SDKs. You can also access it by selecting the \"Download Spec\" button beside the version information.      [https://api.factset.com/content/factset-estimates/v2/spec/swagger.yaml](https://api.factset.com/content/factset-estimates/v2/spec/swagger.yaml) 
 *
 * The version of the OpenAPI document: 2.8.1
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetEstimates.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDate;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetEstimates.JSON;


/**
 * Guidance
 */
@JsonPropertyOrder({
  Guidance.JSON_PROPERTY_REQUEST_ID,
  Guidance.JSON_PROPERTY_FSYM_ID,
  Guidance.JSON_PROPERTY_METRIC,
  Guidance.JSON_PROPERTY_CURRENCY,
  Guidance.JSON_PROPERTY_ESTIMATE_CURRENCY,
  Guidance.JSON_PROPERTY_PERIODICITY,
  Guidance.JSON_PROPERTY_CONSENSUS_DATE,
  Guidance.JSON_PROPERTY_FISCAL_YEAR,
  Guidance.JSON_PROPERTY_FISCAL_END_DATE,
  Guidance.JSON_PROPERTY_RELATIVE_PERIOD,
  Guidance.JSON_PROPERTY_FISCAL_PERIOD,
  Guidance.JSON_PROPERTY_GUIDANCE_DATE,
  Guidance.JSON_PROPERTY_INPUT_DATE_HIGH,
  Guidance.JSON_PROPERTY_INPUT_DATE_LOW,
  Guidance.JSON_PROPERTY_GUIDANCE_MIDPOINT,
  Guidance.JSON_PROPERTY_GUIDANCE_LOW,
  Guidance.JSON_PROPERTY_GUIDANCE_HIGH,
  Guidance.JSON_PROPERTY_GUIDANCE_RANGE,
  Guidance.JSON_PROPERTY_PREV_MIDPOINT,
  Guidance.JSON_PROPERTY_PREV_LOW,
  Guidance.JSON_PROPERTY_PREV_HIGH,
  Guidance.JSON_PROPERTY_MEAN_BEFORE,
  Guidance.JSON_PROPERTY_MEAN_SURPRISE_AMT,
  Guidance.JSON_PROPERTY_MEAN_SURPRISE_AMT_PERCENT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class Guidance implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_REQUEST_ID = "requestId";
  private String requestId;

  public static final String JSON_PROPERTY_FSYM_ID = "fsymId";
  private JsonNullable<String> fsymId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_METRIC = "metric";
  private JsonNullable<String> metric = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private JsonNullable<String> currency = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ESTIMATE_CURRENCY = "estimateCurrency";
  private JsonNullable<String> estimateCurrency = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PERIODICITY = "periodicity";
  private JsonNullable<String> periodicity = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CONSENSUS_DATE = "consensusDate";
  private JsonNullable<LocalDate> consensusDate = JsonNullable.<LocalDate>undefined();

  public static final String JSON_PROPERTY_FISCAL_YEAR = "fiscalYear";
  private JsonNullable<Integer> fiscalYear = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_FISCAL_END_DATE = "fiscalEndDate";
  private JsonNullable<LocalDate> fiscalEndDate = JsonNullable.<LocalDate>undefined();

  public static final String JSON_PROPERTY_RELATIVE_PERIOD = "relativePeriod";
  private JsonNullable<Integer> relativePeriod = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_FISCAL_PERIOD = "fiscalPeriod";
  private JsonNullable<Integer> fiscalPeriod = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_GUIDANCE_DATE = "guidanceDate";
  private JsonNullable<LocalDate> guidanceDate = JsonNullable.<LocalDate>undefined();

  public static final String JSON_PROPERTY_INPUT_DATE_HIGH = "inputDateHigh";
  private JsonNullable<LocalDate> inputDateHigh = JsonNullable.<LocalDate>undefined();

  public static final String JSON_PROPERTY_INPUT_DATE_LOW = "inputDateLow";
  private JsonNullable<LocalDate> inputDateLow = JsonNullable.<LocalDate>undefined();

  public static final String JSON_PROPERTY_GUIDANCE_MIDPOINT = "guidanceMidpoint";
  private JsonNullable<Double> guidanceMidpoint = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_GUIDANCE_LOW = "guidanceLow";
  private JsonNullable<Double> guidanceLow = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_GUIDANCE_HIGH = "guidanceHigh";
  private JsonNullable<Double> guidanceHigh = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_GUIDANCE_RANGE = "guidanceRange";
  private JsonNullable<String> guidanceRange = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PREV_MIDPOINT = "prevMidpoint";
  private JsonNullable<Double> prevMidpoint = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_PREV_LOW = "prevLow";
  private Double prevLow;

  public static final String JSON_PROPERTY_PREV_HIGH = "prevHigh";
  private JsonNullable<Double> prevHigh = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MEAN_BEFORE = "meanBefore";
  private JsonNullable<Double> meanBefore = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MEAN_SURPRISE_AMT = "meanSurpriseAmt";
  private JsonNullable<Double> meanSurpriseAmt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MEAN_SURPRISE_AMT_PERCENT = "meanSurpriseAmtPercent";
  private JsonNullable<Double> meanSurpriseAmtPercent = JsonNullable.<Double>undefined();

  public Guidance() { 
  }

  public Guidance requestId(String requestId) {
    this.requestId = requestId;
    return this;
  }

   /**
   * Guidance identifier to be used as &#x60;guidance&#x60; input in the endpoint.
   * @return requestId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "A-US", value = "Guidance identifier to be used as `guidance` input in the endpoint.")
  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRequestId() {
    return requestId;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestId(String requestId) {
    this.requestId = requestId;
  }


  public Guidance fsymId(String fsymId) {
    this.fsymId = JsonNullable.<String>of(fsymId);
    return this;
  }

   /**
   * FactSet regional security identifier. Six alpha-numeric characters, excluding vowels, with an -R suffix (XXXXXX-R). Identifies the security&#39;s best regional security data series per currency. For equities, all primary listings per region and currency are allocated a regional-level permanent identifier. The regional-level permanent identifier will be available once a SEDOL representing the region/currency has been allocated and the identifiers are on FactSet.
   * @return fsymId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "FWHC5K-R", value = "FactSet regional security identifier. Six alpha-numeric characters, excluding vowels, with an -R suffix (XXXXXX-R). Identifies the security's best regional security data series per currency. For equities, all primary listings per region and currency are allocated a regional-level permanent identifier. The regional-level permanent identifier will be available once a SEDOL representing the region/currency has been allocated and the identifiers are on FactSet.")
  @JsonIgnore

  public String getFsymId() {
        return fsymId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFsymId_JsonNullable() {
    return fsymId;
  }
  
  @JsonProperty(JSON_PROPERTY_FSYM_ID)
  public void setFsymId_JsonNullable(JsonNullable<String> fsymId) {
    this.fsymId = fsymId;
  }

  public void setFsymId(String fsymId) {
    this.fsymId = JsonNullable.<String>of(fsymId);
  }


  public Guidance metric(String metric) {
    this.metric = JsonNullable.<String>of(metric);
    return this;
  }

   /**
   * Company&#39;s Financial statement &#39;metric&#39; that is estimated. Use the factset-estimates/v#/metrics endpoint for a complete list. For more details, visit [Online Assistant Page #15034](https://oa.apps.factset.com/pages/15034)
   * @return metric
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "SALES", value = "Company's Financial statement 'metric' that is estimated. Use the factset-estimates/v#/metrics endpoint for a complete list. For more details, visit [Online Assistant Page #15034](https://oa.apps.factset.com/pages/15034)")
  @JsonIgnore

  public String getMetric() {
        return metric.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METRIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMetric_JsonNullable() {
    return metric;
  }
  
  @JsonProperty(JSON_PROPERTY_METRIC)
  public void setMetric_JsonNullable(JsonNullable<String> metric) {
    this.metric = metric;
  }

  public void setMetric(String metric) {
    this.metric = JsonNullable.<String>of(metric);
  }


  public Guidance currency(String currency) {
    this.currency = JsonNullable.<String>of(currency);
    return this;
  }

   /**
   * Currency code for adjusting the data. Use &#39;ESTIMATE&#39; as input value for the values in Estimate Currency. For a list of currency ISO codes, visit [Online Assistant Page #1470](https://oa.apps.factset.com/pages/1470).
   * @return currency
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "USD", value = "Currency code for adjusting the data. Use 'ESTIMATE' as input value for the values in Estimate Currency. For a list of currency ISO codes, visit [Online Assistant Page #1470](https://oa.apps.factset.com/pages/1470).")
  @JsonIgnore

  public String getCurrency() {
        return currency.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCurrency_JsonNullable() {
    return currency;
  }
  
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  public void setCurrency_JsonNullable(JsonNullable<String> currency) {
    this.currency = currency;
  }

  public void setCurrency(String currency) {
    this.currency = JsonNullable.<String>of(currency);
  }


  public Guidance estimateCurrency(String estimateCurrency) {
    this.estimateCurrency = JsonNullable.<String>of(estimateCurrency);
    return this;
  }

   /**
   * Estimate currency of the requested Security
   * @return estimateCurrency
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "USD", value = "Estimate currency of the requested Security")
  @JsonIgnore

  public String getEstimateCurrency() {
        return estimateCurrency.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ESTIMATE_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEstimateCurrency_JsonNullable() {
    return estimateCurrency;
  }
  
  @JsonProperty(JSON_PROPERTY_ESTIMATE_CURRENCY)
  public void setEstimateCurrency_JsonNullable(JsonNullable<String> estimateCurrency) {
    this.estimateCurrency = estimateCurrency;
  }

  public void setEstimateCurrency(String estimateCurrency) {
    this.estimateCurrency = JsonNullable.<String>of(estimateCurrency);
  }


  public Guidance periodicity(String periodicity) {
    this.periodicity = JsonNullable.<String>of(periodicity);
    return this;
  }

   /**
   * The reporting interval for the estimate. This is derived from Estimate Date and is translated to the Period List &#x3D; ANN, QTR, SEMI, LTMA, or NMTA.
   * @return periodicity
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "ANN", value = "The reporting interval for the estimate. This is derived from Estimate Date and is translated to the Period List = ANN, QTR, SEMI, LTMA, or NMTA.")
  @JsonIgnore

  public String getPeriodicity() {
        return periodicity.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PERIODICITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPeriodicity_JsonNullable() {
    return periodicity;
  }
  
  @JsonProperty(JSON_PROPERTY_PERIODICITY)
  public void setPeriodicity_JsonNullable(JsonNullable<String> periodicity) {
    this.periodicity = periodicity;
  }

  public void setPeriodicity(String periodicity) {
    this.periodicity = JsonNullable.<String>of(periodicity);
  }


  public Guidance consensusDate(LocalDate consensusDate) {
    this.consensusDate = JsonNullable.<LocalDate>of(consensusDate);
    return this;
  }

   /**
   * The perspective date representing the current consensus among analysts as of today, visit [Online Assistant Page
   * @return consensusDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Sun Dec 01 00:00:00 UTC 2024", value = "The perspective date representing the current consensus among analysts as of today, visit [Online Assistant Page")
  @JsonIgnore

  public LocalDate getConsensusDate() {
        return consensusDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CONSENSUS_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LocalDate> getConsensusDate_JsonNullable() {
    return consensusDate;
  }
  
  @JsonProperty(JSON_PROPERTY_CONSENSUS_DATE)
  public void setConsensusDate_JsonNullable(JsonNullable<LocalDate> consensusDate) {
    this.consensusDate = consensusDate;
  }

  public void setConsensusDate(LocalDate consensusDate) {
    this.consensusDate = JsonNullable.<LocalDate>of(consensusDate);
  }


  public Guidance fiscalYear(Integer fiscalYear) {
    this.fiscalYear = JsonNullable.<Integer>of(fiscalYear);
    return this;
  }

   /**
   * Company&#39;s &#39;fiscal year&#39; for the estimate record. For more details, visit [Online Assistant Page #16598](https://oa.apps.factset.com/pages/16598)
   * @return fiscalYear
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "2018", value = "Company's 'fiscal year' for the estimate record. For more details, visit [Online Assistant Page #16598](https://oa.apps.factset.com/pages/16598)")
  @JsonIgnore

  public Integer getFiscalYear() {
        return fiscalYear.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FISCAL_YEAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getFiscalYear_JsonNullable() {
    return fiscalYear;
  }
  
  @JsonProperty(JSON_PROPERTY_FISCAL_YEAR)
  public void setFiscalYear_JsonNullable(JsonNullable<Integer> fiscalYear) {
    this.fiscalYear = fiscalYear;
  }

  public void setFiscalYear(Integer fiscalYear) {
    this.fiscalYear = JsonNullable.<Integer>of(fiscalYear);
  }


  public Guidance fiscalEndDate(LocalDate fiscalEndDate) {
    this.fiscalEndDate = JsonNullable.<LocalDate>of(fiscalEndDate);
    return this;
  }

   /**
   * Company&#39;s &#39;fiscal end date&#39; for the estimate record expressed in YYYY-MM-DD format. For more details, visit [Online Assistant Page #16598](https://oa.apps.factset.com/pages/16598)
   * @return fiscalEndDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Sun Dec 31 00:00:00 UTC 2017", value = "Company's 'fiscal end date' for the estimate record expressed in YYYY-MM-DD format. For more details, visit [Online Assistant Page #16598](https://oa.apps.factset.com/pages/16598)")
  @JsonIgnore

  public LocalDate getFiscalEndDate() {
        return fiscalEndDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FISCAL_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LocalDate> getFiscalEndDate_JsonNullable() {
    return fiscalEndDate;
  }
  
  @JsonProperty(JSON_PROPERTY_FISCAL_END_DATE)
  public void setFiscalEndDate_JsonNullable(JsonNullable<LocalDate> fiscalEndDate) {
    this.fiscalEndDate = fiscalEndDate;
  }

  public void setFiscalEndDate(LocalDate fiscalEndDate) {
    this.fiscalEndDate = JsonNullable.<LocalDate>of(fiscalEndDate);
  }


  public Guidance relativePeriod(Integer relativePeriod) {
    this.relativePeriod = JsonNullable.<Integer>of(relativePeriod);
    return this;
  }

   /**
   * &#39;Fiscal period&#39; based on relationship to &#39;estimate date&#39;. This is not applicable for fixed-consensus endpoint. For more details, visit [Online Assistant Page #16598](https://oa.apps.factset.com/pages/16598)
   * @return relativePeriod
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "2", value = "'Fiscal period' based on relationship to 'estimate date'. This is not applicable for fixed-consensus endpoint. For more details, visit [Online Assistant Page #16598](https://oa.apps.factset.com/pages/16598)")
  @JsonIgnore

  public Integer getRelativePeriod() {
        return relativePeriod.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RELATIVE_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getRelativePeriod_JsonNullable() {
    return relativePeriod;
  }
  
  @JsonProperty(JSON_PROPERTY_RELATIVE_PERIOD)
  public void setRelativePeriod_JsonNullable(JsonNullable<Integer> relativePeriod) {
    this.relativePeriod = relativePeriod;
  }

  public void setRelativePeriod(Integer relativePeriod) {
    this.relativePeriod = JsonNullable.<Integer>of(relativePeriod);
  }


  public Guidance fiscalPeriod(Integer fiscalPeriod) {
    this.fiscalPeriod = JsonNullable.<Integer>of(fiscalPeriod);
    return this;
  }

   /**
   * Company&#39;s &#39;fiscal period&#39; for the estimate record.  &#39;Periodicity&#39; defines context for period.
   * @return fiscalPeriod
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "1", value = "Company's 'fiscal period' for the estimate record.  'Periodicity' defines context for period.")
  @JsonIgnore

  public Integer getFiscalPeriod() {
        return fiscalPeriod.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FISCAL_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getFiscalPeriod_JsonNullable() {
    return fiscalPeriod;
  }
  
  @JsonProperty(JSON_PROPERTY_FISCAL_PERIOD)
  public void setFiscalPeriod_JsonNullable(JsonNullable<Integer> fiscalPeriod) {
    this.fiscalPeriod = fiscalPeriod;
  }

  public void setFiscalPeriod(Integer fiscalPeriod) {
    this.fiscalPeriod = JsonNullable.<Integer>of(fiscalPeriod);
  }


  public Guidance guidanceDate(LocalDate guidanceDate) {
    this.guidanceDate = JsonNullable.<LocalDate>of(guidanceDate);
    return this;
  }

   /**
   * Date guidance was issued expressed in YYYY-MM-DD format.
   * @return guidanceDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Thu Aug 22 00:00:00 UTC 2024", value = "Date guidance was issued expressed in YYYY-MM-DD format.")
  @JsonIgnore

  public LocalDate getGuidanceDate() {
        return guidanceDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GUIDANCE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LocalDate> getGuidanceDate_JsonNullable() {
    return guidanceDate;
  }
  
  @JsonProperty(JSON_PROPERTY_GUIDANCE_DATE)
  public void setGuidanceDate_JsonNullable(JsonNullable<LocalDate> guidanceDate) {
    this.guidanceDate = guidanceDate;
  }

  public void setGuidanceDate(LocalDate guidanceDate) {
    this.guidanceDate = JsonNullable.<LocalDate>of(guidanceDate);
  }


  public Guidance inputDateHigh(LocalDate inputDateHigh) {
    this.inputDateHigh = JsonNullable.<LocalDate>of(inputDateHigh);
    return this;
  }

   /**
   * Represents the date FactSet collected the data in YYYY-MM-DD format for guidance high.
   * @return inputDateHigh
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Wed Aug 21 00:00:00 UTC 2024", value = "Represents the date FactSet collected the data in YYYY-MM-DD format for guidance high.")
  @JsonIgnore

  public LocalDate getInputDateHigh() {
        return inputDateHigh.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INPUT_DATE_HIGH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LocalDate> getInputDateHigh_JsonNullable() {
    return inputDateHigh;
  }
  
  @JsonProperty(JSON_PROPERTY_INPUT_DATE_HIGH)
  public void setInputDateHigh_JsonNullable(JsonNullable<LocalDate> inputDateHigh) {
    this.inputDateHigh = inputDateHigh;
  }

  public void setInputDateHigh(LocalDate inputDateHigh) {
    this.inputDateHigh = JsonNullable.<LocalDate>of(inputDateHigh);
  }


  public Guidance inputDateLow(LocalDate inputDateLow) {
    this.inputDateLow = JsonNullable.<LocalDate>of(inputDateLow);
    return this;
  }

   /**
   * Represents the date FactSet collected the data in YYYY-MM-DD format for guidance low.
   * @return inputDateLow
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Wed Aug 21 00:00:00 UTC 2024", value = "Represents the date FactSet collected the data in YYYY-MM-DD format for guidance low.")
  @JsonIgnore

  public LocalDate getInputDateLow() {
        return inputDateLow.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INPUT_DATE_LOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LocalDate> getInputDateLow_JsonNullable() {
    return inputDateLow;
  }
  
  @JsonProperty(JSON_PROPERTY_INPUT_DATE_LOW)
  public void setInputDateLow_JsonNullable(JsonNullable<LocalDate> inputDateLow) {
    this.inputDateLow = inputDateLow;
  }

  public void setInputDateLow(LocalDate inputDateLow) {
    this.inputDateLow = JsonNullable.<LocalDate>of(inputDateLow);
  }


  public Guidance guidanceMidpoint(Double guidanceMidpoint) {
    this.guidanceMidpoint = JsonNullable.<Double>of(guidanceMidpoint);
    return this;
  }

   /**
   *  Represents the central value in a range of projected financial guidance.
   * @return guidanceMidpoint
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "6475.926", value = " Represents the central value in a range of projected financial guidance.")
  @JsonIgnore

  public Double getGuidanceMidpoint() {
        return guidanceMidpoint.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GUIDANCE_MIDPOINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getGuidanceMidpoint_JsonNullable() {
    return guidanceMidpoint;
  }
  
  @JsonProperty(JSON_PROPERTY_GUIDANCE_MIDPOINT)
  public void setGuidanceMidpoint_JsonNullable(JsonNullable<Double> guidanceMidpoint) {
    this.guidanceMidpoint = guidanceMidpoint;
  }

  public void setGuidanceMidpoint(Double guidanceMidpoint) {
    this.guidanceMidpoint = JsonNullable.<Double>of(guidanceMidpoint);
  }


  public Guidance guidanceLow(Double guidanceLow) {
    this.guidanceLow = JsonNullable.<Double>of(guidanceLow);
    return this;
  }

   /**
   * Represents the lower end of the projected financial guidance range.
   * @return guidanceLow
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "6450.683", value = "Represents the lower end of the projected financial guidance range.")
  @JsonIgnore

  public Double getGuidanceLow() {
        return guidanceLow.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GUIDANCE_LOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getGuidanceLow_JsonNullable() {
    return guidanceLow;
  }
  
  @JsonProperty(JSON_PROPERTY_GUIDANCE_LOW)
  public void setGuidanceLow_JsonNullable(JsonNullable<Double> guidanceLow) {
    this.guidanceLow = guidanceLow;
  }

  public void setGuidanceLow(Double guidanceLow) {
    this.guidanceLow = JsonNullable.<Double>of(guidanceLow);
  }


  public Guidance guidanceHigh(Double guidanceHigh) {
    this.guidanceHigh = JsonNullable.<Double>of(guidanceHigh);
    return this;
  }

   /**
   * Represents the upper end of the projected financial guidance range.
   * @return guidanceHigh
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "6500.126", value = "Represents the upper end of the projected financial guidance range.")
  @JsonIgnore

  public Double getGuidanceHigh() {
        return guidanceHigh.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GUIDANCE_HIGH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getGuidanceHigh_JsonNullable() {
    return guidanceHigh;
  }
  
  @JsonProperty(JSON_PROPERTY_GUIDANCE_HIGH)
  public void setGuidanceHigh_JsonNullable(JsonNullable<Double> guidanceHigh) {
    this.guidanceHigh = guidanceHigh;
  }

  public void setGuidanceHigh(Double guidanceHigh) {
    this.guidanceHigh = JsonNullable.<Double>of(guidanceHigh);
  }


  public Guidance guidanceRange(String guidanceRange) {
    this.guidanceRange = JsonNullable.<String>of(guidanceRange);
    return this;
  }

   /**
   * Represents the span between the lowest and highest values in the projected financial guidance.
   * @return guidanceRange
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "6450.00-6500.00", value = "Represents the span between the lowest and highest values in the projected financial guidance.")
  @JsonIgnore

  public String getGuidanceRange() {
        return guidanceRange.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GUIDANCE_RANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getGuidanceRange_JsonNullable() {
    return guidanceRange;
  }
  
  @JsonProperty(JSON_PROPERTY_GUIDANCE_RANGE)
  public void setGuidanceRange_JsonNullable(JsonNullable<String> guidanceRange) {
    this.guidanceRange = guidanceRange;
  }

  public void setGuidanceRange(String guidanceRange) {
    this.guidanceRange = JsonNullable.<String>of(guidanceRange);
  }


  public Guidance prevMidpoint(Double prevMidpoint) {
    this.prevMidpoint = JsonNullable.<Double>of(prevMidpoint);
    return this;
  }

   /**
   * This refers to the average or central point of the financial guidance range given in a prior period.
   * @return prevMidpoint
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "6460.345", value = "This refers to the average or central point of the financial guidance range given in a prior period.")
  @JsonIgnore

  public Double getPrevMidpoint() {
        return prevMidpoint.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PREV_MIDPOINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getPrevMidpoint_JsonNullable() {
    return prevMidpoint;
  }
  
  @JsonProperty(JSON_PROPERTY_PREV_MIDPOINT)
  public void setPrevMidpoint_JsonNullable(JsonNullable<Double> prevMidpoint) {
    this.prevMidpoint = prevMidpoint;
  }

  public void setPrevMidpoint(Double prevMidpoint) {
    this.prevMidpoint = JsonNullable.<Double>of(prevMidpoint);
  }


  public Guidance prevLow(Double prevLow) {
    this.prevLow = prevLow;
    return this;
  }

   /**
   * Refers to the lowest value or estimate in a financial guidance range provided in a previous period.
   * @return prevLow
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "6420.267", value = "Refers to the lowest value or estimate in a financial guidance range provided in a previous period.")
  @JsonProperty(JSON_PROPERTY_PREV_LOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getPrevLow() {
    return prevLow;
  }


  @JsonProperty(JSON_PROPERTY_PREV_LOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrevLow(Double prevLow) {
    this.prevLow = prevLow;
  }


  public Guidance prevHigh(Double prevHigh) {
    this.prevHigh = JsonNullable.<Double>of(prevHigh);
    return this;
  }

   /**
   * Refers to the highest value or estimate in a financial guidance range provided in a previous period.
   * @return prevHigh
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "6500.12", value = "Refers to the highest value or estimate in a financial guidance range provided in a previous period.")
  @JsonIgnore

  public Double getPrevHigh() {
        return prevHigh.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PREV_HIGH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getPrevHigh_JsonNullable() {
    return prevHigh;
  }
  
  @JsonProperty(JSON_PROPERTY_PREV_HIGH)
  public void setPrevHigh_JsonNullable(JsonNullable<Double> prevHigh) {
    this.prevHigh = prevHigh;
  }

  public void setPrevHigh(Double prevHigh) {
    this.prevHigh = JsonNullable.<Double>of(prevHigh);
  }


  public Guidance meanBefore(Double meanBefore) {
    this.meanBefore = JsonNullable.<Double>of(meanBefore);
    return this;
  }

   /**
   * This is the consensus value the day before the guidance was issued. If guidance was previously issued for the period in question, this consensus will only include estimates that have been updated since the previous update.
   * @return meanBefore
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "6823.863", value = "This is the consensus value the day before the guidance was issued. If guidance was previously issued for the period in question, this consensus will only include estimates that have been updated since the previous update.")
  @JsonIgnore

  public Double getMeanBefore() {
        return meanBefore.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MEAN_BEFORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMeanBefore_JsonNullable() {
    return meanBefore;
  }
  
  @JsonProperty(JSON_PROPERTY_MEAN_BEFORE)
  public void setMeanBefore_JsonNullable(JsonNullable<Double> meanBefore) {
    this.meanBefore = meanBefore;
  }

  public void setMeanBefore(Double meanBefore) {
    this.meanBefore = JsonNullable.<Double>of(meanBefore);
  }


  public Guidance meanSurpriseAmt(Double meanSurpriseAmt) {
    this.meanSurpriseAmt = JsonNullable.<Double>of(meanSurpriseAmt);
    return this;
  }

   /**
   *  This is the difference between the before value and the guidance.
   * @return meanSurpriseAmt
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "6.13733", value = " This is the difference between the before value and the guidance.")
  @JsonIgnore

  public Double getMeanSurpriseAmt() {
        return meanSurpriseAmt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MEAN_SURPRISE_AMT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMeanSurpriseAmt_JsonNullable() {
    return meanSurpriseAmt;
  }
  
  @JsonProperty(JSON_PROPERTY_MEAN_SURPRISE_AMT)
  public void setMeanSurpriseAmt_JsonNullable(JsonNullable<Double> meanSurpriseAmt) {
    this.meanSurpriseAmt = meanSurpriseAmt;
  }

  public void setMeanSurpriseAmt(Double meanSurpriseAmt) {
    this.meanSurpriseAmt = JsonNullable.<Double>of(meanSurpriseAmt);
  }


  public Guidance meanSurpriseAmtPercent(Double meanSurpriseAmtPercent) {
    this.meanSurpriseAmtPercent = JsonNullable.<Double>of(meanSurpriseAmtPercent);
    return this;
  }

   /**
   * This represents the percentage difference between the before value and the guidance actual.
   * @return meanSurpriseAmtPercent
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "0.08993923", value = "This represents the percentage difference between the before value and the guidance actual.")
  @JsonIgnore

  public Double getMeanSurpriseAmtPercent() {
        return meanSurpriseAmtPercent.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MEAN_SURPRISE_AMT_PERCENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMeanSurpriseAmtPercent_JsonNullable() {
    return meanSurpriseAmtPercent;
  }
  
  @JsonProperty(JSON_PROPERTY_MEAN_SURPRISE_AMT_PERCENT)
  public void setMeanSurpriseAmtPercent_JsonNullable(JsonNullable<Double> meanSurpriseAmtPercent) {
    this.meanSurpriseAmtPercent = meanSurpriseAmtPercent;
  }

  public void setMeanSurpriseAmtPercent(Double meanSurpriseAmtPercent) {
    this.meanSurpriseAmtPercent = JsonNullable.<Double>of(meanSurpriseAmtPercent);
  }


  /**
   * Return true if this guidance object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Guidance guidance = (Guidance) o;
    return Objects.equals(this.requestId, guidance.requestId) &&
        equalsNullable(this.fsymId, guidance.fsymId) &&
        equalsNullable(this.metric, guidance.metric) &&
        equalsNullable(this.currency, guidance.currency) &&
        equalsNullable(this.estimateCurrency, guidance.estimateCurrency) &&
        equalsNullable(this.periodicity, guidance.periodicity) &&
        equalsNullable(this.consensusDate, guidance.consensusDate) &&
        equalsNullable(this.fiscalYear, guidance.fiscalYear) &&
        equalsNullable(this.fiscalEndDate, guidance.fiscalEndDate) &&
        equalsNullable(this.relativePeriod, guidance.relativePeriod) &&
        equalsNullable(this.fiscalPeriod, guidance.fiscalPeriod) &&
        equalsNullable(this.guidanceDate, guidance.guidanceDate) &&
        equalsNullable(this.inputDateHigh, guidance.inputDateHigh) &&
        equalsNullable(this.inputDateLow, guidance.inputDateLow) &&
        equalsNullable(this.guidanceMidpoint, guidance.guidanceMidpoint) &&
        equalsNullable(this.guidanceLow, guidance.guidanceLow) &&
        equalsNullable(this.guidanceHigh, guidance.guidanceHigh) &&
        equalsNullable(this.guidanceRange, guidance.guidanceRange) &&
        equalsNullable(this.prevMidpoint, guidance.prevMidpoint) &&
        Objects.equals(this.prevLow, guidance.prevLow) &&
        equalsNullable(this.prevHigh, guidance.prevHigh) &&
        equalsNullable(this.meanBefore, guidance.meanBefore) &&
        equalsNullable(this.meanSurpriseAmt, guidance.meanSurpriseAmt) &&
        equalsNullable(this.meanSurpriseAmtPercent, guidance.meanSurpriseAmtPercent);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestId, hashCodeNullable(fsymId), hashCodeNullable(metric), hashCodeNullable(currency), hashCodeNullable(estimateCurrency), hashCodeNullable(periodicity), hashCodeNullable(consensusDate), hashCodeNullable(fiscalYear), hashCodeNullable(fiscalEndDate), hashCodeNullable(relativePeriod), hashCodeNullable(fiscalPeriod), hashCodeNullable(guidanceDate), hashCodeNullable(inputDateHigh), hashCodeNullable(inputDateLow), hashCodeNullable(guidanceMidpoint), hashCodeNullable(guidanceLow), hashCodeNullable(guidanceHigh), hashCodeNullable(guidanceRange), hashCodeNullable(prevMidpoint), prevLow, hashCodeNullable(prevHigh), hashCodeNullable(meanBefore), hashCodeNullable(meanSurpriseAmt), hashCodeNullable(meanSurpriseAmtPercent));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Guidance {\n");
    sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
    sb.append("    fsymId: ").append(toIndentedString(fsymId)).append("\n");
    sb.append("    metric: ").append(toIndentedString(metric)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    estimateCurrency: ").append(toIndentedString(estimateCurrency)).append("\n");
    sb.append("    periodicity: ").append(toIndentedString(periodicity)).append("\n");
    sb.append("    consensusDate: ").append(toIndentedString(consensusDate)).append("\n");
    sb.append("    fiscalYear: ").append(toIndentedString(fiscalYear)).append("\n");
    sb.append("    fiscalEndDate: ").append(toIndentedString(fiscalEndDate)).append("\n");
    sb.append("    relativePeriod: ").append(toIndentedString(relativePeriod)).append("\n");
    sb.append("    fiscalPeriod: ").append(toIndentedString(fiscalPeriod)).append("\n");
    sb.append("    guidanceDate: ").append(toIndentedString(guidanceDate)).append("\n");
    sb.append("    inputDateHigh: ").append(toIndentedString(inputDateHigh)).append("\n");
    sb.append("    inputDateLow: ").append(toIndentedString(inputDateLow)).append("\n");
    sb.append("    guidanceMidpoint: ").append(toIndentedString(guidanceMidpoint)).append("\n");
    sb.append("    guidanceLow: ").append(toIndentedString(guidanceLow)).append("\n");
    sb.append("    guidanceHigh: ").append(toIndentedString(guidanceHigh)).append("\n");
    sb.append("    guidanceRange: ").append(toIndentedString(guidanceRange)).append("\n");
    sb.append("    prevMidpoint: ").append(toIndentedString(prevMidpoint)).append("\n");
    sb.append("    prevLow: ").append(toIndentedString(prevLow)).append("\n");
    sb.append("    prevHigh: ").append(toIndentedString(prevHigh)).append("\n");
    sb.append("    meanBefore: ").append(toIndentedString(meanBefore)).append("\n");
    sb.append("    meanSurpriseAmt: ").append(toIndentedString(meanSurpriseAmt)).append("\n");
    sb.append("    meanSurpriseAmtPercent: ").append(toIndentedString(meanSurpriseAmtPercent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

