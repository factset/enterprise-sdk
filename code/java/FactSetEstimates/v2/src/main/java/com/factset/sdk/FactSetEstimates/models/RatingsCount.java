/*
 * FactSet Estimates
 * With global coverage since 1999, the FactSet Estimates API provides you with comprehensive estimates and statistics on a wide variety of financial statement items as well as industry-specific metrics. The universe is comprised of over 19,000 active companies across 90+ countries with the following types of data included:   - **Consensus** - **Detail** - **Ratings** - **Surprise** - **Segments** - **Actuals** - **New Estimates and Ratings Reports Endpoints**  For clients seeking  curated and relevant financial data, the FactSet Estimates API now includes Estimates and Ratings Reports endpoints. These powerful endpoints are designed for easy integration and consumption, delivering a wide array of financial metrics, estimates, and critical statistics in a highly accessible format suitable for both mobile and web applications.   Whether you are an analyst, investor, or financial professional, the Estimates and Ratings Reports endpoints offer detailed and actionable financial insights that can support thorough analyses and strategic decision-making processes.   The Estimates and Ratings Reports endpoints are especially valuable for B2B2C  applications, empowering financial services firms, investment companies, and corporate finance teams to:   - **Elevate Client Engagement:** Enrich user experiences in client-facing applications with comprehensive and up-to-date financial metrics.  - **Build Custom Reporting Tools:** Create tailored dashboards and analytics tools that provide deep insights and foster better financial understanding.  By adopting the FactSet Estimates API with its enriched Estimates and Ratings Reports endpoints, businesses can streamline their financial data integration process, improve operational efficiency, and deliver superior financial insights to their clients and end-users.     <p>This API is rate-limited to 10 requests per second and 10 concurrent requests per user.</p>  **Download API Specification**        To programmatically download the FactSet Estimates API Specification file in .yaml format, utilize the link below. You must be authorized for this API to extract the specification. This specification can then be used for Codegen to create your own SDKs. You can also access it by selecting the \"Download Spec\" button beside the version information.      [https://api.factset.com/content/factset-estimates/v2/spec/swagger.yaml](https://api.factset.com/content/factset-estimates/v2/spec/swagger.yaml) 
 *
 * The version of the OpenAPI document: 2.7.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetEstimates.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetEstimates.JSON;


/**
 * RatingsCount
 */
@JsonPropertyOrder({
  RatingsCount.JSON_PROPERTY_BUY,
  RatingsCount.JSON_PROPERTY_OVER_WEIGHT,
  RatingsCount.JSON_PROPERTY_HOLD,
  RatingsCount.JSON_PROPERTY_UNDER_WEIGHT,
  RatingsCount.JSON_PROPERTY_SELL,
  RatingsCount.JSON_PROPERTY_TOTAL
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class RatingsCount implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_BUY = "buy";
  private Integer buy;

  public static final String JSON_PROPERTY_OVER_WEIGHT = "overWeight";
  private Integer overWeight;

  public static final String JSON_PROPERTY_HOLD = "hold";
  private Integer hold;

  public static final String JSON_PROPERTY_UNDER_WEIGHT = "underWeight";
  private Integer underWeight;

  public static final String JSON_PROPERTY_SELL = "sell";
  private Integer sell;

  public static final String JSON_PROPERTY_TOTAL = "total";
  private Integer total;

  public RatingsCount() { 
  }

  public RatingsCount buy(Integer buy) {
    this.buy = buy;
    return this;
  }

   /**
   * Specifies the number of buy ratings received for a given security identifier. Details on the date of validity for this data are provided in the &#x60;asOfMonth&#x60; field.
   * @return buy
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "5", value = "Specifies the number of buy ratings received for a given security identifier. Details on the date of validity for this data are provided in the `asOfMonth` field.")
  @JsonProperty(JSON_PROPERTY_BUY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getBuy() {
    return buy;
  }


  @JsonProperty(JSON_PROPERTY_BUY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBuy(Integer buy) {
    this.buy = buy;
  }


  public RatingsCount overWeight(Integer overWeight) {
    this.overWeight = overWeight;
    return this;
  }

   /**
   * Specifies the number of overWeight ratings received for a given security identifier. Details on the date of validity for this data are provided in the &#x60;asOfMonth&#x60; field.
   * @return overWeight
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "1", value = "Specifies the number of overWeight ratings received for a given security identifier. Details on the date of validity for this data are provided in the `asOfMonth` field.")
  @JsonProperty(JSON_PROPERTY_OVER_WEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getOverWeight() {
    return overWeight;
  }


  @JsonProperty(JSON_PROPERTY_OVER_WEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOverWeight(Integer overWeight) {
    this.overWeight = overWeight;
  }


  public RatingsCount hold(Integer hold) {
    this.hold = hold;
    return this;
  }

   /**
   * Specifies the number of hold ratings received for a given security identifier. Details on the date of validity for this data are provided in the &#x60;asOfMonth&#x60; field.
   * @return hold
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "10", value = "Specifies the number of hold ratings received for a given security identifier. Details on the date of validity for this data are provided in the `asOfMonth` field.")
  @JsonProperty(JSON_PROPERTY_HOLD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getHold() {
    return hold;
  }


  @JsonProperty(JSON_PROPERTY_HOLD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHold(Integer hold) {
    this.hold = hold;
  }


  public RatingsCount underWeight(Integer underWeight) {
    this.underWeight = underWeight;
    return this;
  }

   /**
   * Specifies the number of underWeight ratings received for a given security identifier. Details on the date of validity for this data are provided in the &#x60;asOfMonth&#x60; field.
   * @return underWeight
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "1", value = "Specifies the number of underWeight ratings received for a given security identifier. Details on the date of validity for this data are provided in the `asOfMonth` field.")
  @JsonProperty(JSON_PROPERTY_UNDER_WEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getUnderWeight() {
    return underWeight;
  }


  @JsonProperty(JSON_PROPERTY_UNDER_WEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnderWeight(Integer underWeight) {
    this.underWeight = underWeight;
  }


  public RatingsCount sell(Integer sell) {
    this.sell = sell;
    return this;
  }

   /**
   * Specifies the number of sell ratings received for a given security identifier. Details on the date of validity for this data are provided in the &#x60;asOfMonth&#x60; field.
   * @return sell
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "2", value = "Specifies the number of sell ratings received for a given security identifier. Details on the date of validity for this data are provided in the `asOfMonth` field.")
  @JsonProperty(JSON_PROPERTY_SELL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSell() {
    return sell;
  }


  @JsonProperty(JSON_PROPERTY_SELL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSell(Integer sell) {
    this.sell = sell;
  }


  public RatingsCount total(Integer total) {
    this.total = total;
    return this;
  }

   /**
   * Specifies the total number of ratings received across all categories for a given security identifier. Details on the date of validity for this data are provided in the &#x60;asOfMonth&#x60; field.
   * @return total
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "19", value = "Specifies the total number of ratings received across all categories for a given security identifier. Details on the date of validity for this data are provided in the `asOfMonth` field.")
  @JsonProperty(JSON_PROPERTY_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTotal() {
    return total;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotal(Integer total) {
    this.total = total;
  }


  /**
   * Return true if this RatingsCount object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RatingsCount ratingsCount = (RatingsCount) o;
    return Objects.equals(this.buy, ratingsCount.buy) &&
        Objects.equals(this.overWeight, ratingsCount.overWeight) &&
        Objects.equals(this.hold, ratingsCount.hold) &&
        Objects.equals(this.underWeight, ratingsCount.underWeight) &&
        Objects.equals(this.sell, ratingsCount.sell) &&
        Objects.equals(this.total, ratingsCount.total);
  }

  @Override
  public int hashCode() {
    return Objects.hash(buy, overWeight, hold, underWeight, sell, total);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RatingsCount {\n");
    sb.append("    buy: ").append(toIndentedString(buy)).append("\n");
    sb.append("    overWeight: ").append(toIndentedString(overWeight)).append("\n");
    sb.append("    hold: ").append(toIndentedString(hold)).append("\n");
    sb.append("    underWeight: ").append(toIndentedString(underWeight)).append("\n");
    sb.append("    sell: ").append(toIndentedString(sell)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

