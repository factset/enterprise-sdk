/*
 * Open:Risk API
 * Service to calculate parametric linear risk statistics and generate risk model asset identifier mappings.
 *
 * The version of the OpenAPI document: 1.26.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.OpenRisk.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.OpenRisk.JSON;


/**
 * Summary element in the list of available risk models
 */
@ApiModel(description = "Summary element in the list of available risk models")
@JsonPropertyOrder({
  RiskModelSummary.JSON_PROPERTY_AVAILABLE,
  RiskModelSummary.JSON_PROPERTY_CATEGORY,
  RiskModelSummary.JSON_PROPERTY_CODE,
  RiskModelSummary.JSON_PROPERTY_NAME,
  RiskModelSummary.JSON_PROPERTY_VENDOR
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class RiskModelSummary implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_AVAILABLE = "available";
  private Boolean available;

  public static final String JSON_PROPERTY_CATEGORY = "category";
  private String category;

  public static final String JSON_PROPERTY_CODE = "code";
  private String code;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_VENDOR = "vendor";
  private String vendor;

  public RiskModelSummary() { 
  }

  @JsonCreator
  public RiskModelSummary(
    @JsonProperty(value=JSON_PROPERTY_AVAILABLE, required=true) Boolean available, 
    @JsonProperty(value=JSON_PROPERTY_CATEGORY, required=true) String category, 
    @JsonProperty(value=JSON_PROPERTY_CODE, required=true) String code, 
    @JsonProperty(value=JSON_PROPERTY_NAME, required=true) String name, 
    @JsonProperty(value=JSON_PROPERTY_VENDOR, required=true) String vendor
  ) {
    this();
    this.available = available;
    this.category = category;
    this.code = code;
    this.name = name;
    this.vendor = vendor;
  }

  public RiskModelSummary available(Boolean available) {
    this.available = available;
    return this;
  }

   /**
   * Indicates the model is available for use, if true
   * @return available
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Indicates the model is available for use, if true")
  @JsonProperty(JSON_PROPERTY_AVAILABLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getAvailable() {
    return available;
  }


  @JsonProperty(JSON_PROPERTY_AVAILABLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAvailable(Boolean available) {
    this.available = available;
  }


  public RiskModelSummary category(String category) {
    this.category = category;
    return this;
  }

   /**
   * Model category
   * @return category
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Model category")
  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCategory() {
    return category;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCategory(String category) {
    this.category = category;
  }


  public RiskModelSummary code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Model code
   * @return code
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "FDS:GLOBAL_EQUITY_M_V1", required = true, value = "Model code")
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCode(String code) {
    this.code = code;
  }


  public RiskModelSummary name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Model name
   * @return name
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Model name")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public RiskModelSummary vendor(String vendor) {
    this.vendor = vendor;
    return this;
  }

   /**
   * Model vendor
   * @return vendor
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Model vendor")
  @JsonProperty(JSON_PROPERTY_VENDOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getVendor() {
    return vendor;
  }


  @JsonProperty(JSON_PROPERTY_VENDOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVendor(String vendor) {
    this.vendor = vendor;
  }


  /**
   * Return true if this RiskModelSummary object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RiskModelSummary riskModelSummary = (RiskModelSummary) o;
    return Objects.equals(this.available, riskModelSummary.available) &&
        Objects.equals(this.category, riskModelSummary.category) &&
        Objects.equals(this.code, riskModelSummary.code) &&
        Objects.equals(this.name, riskModelSummary.name) &&
        Objects.equals(this.vendor, riskModelSummary.vendor);
  }

  @Override
  public int hashCode() {
    return Objects.hash(available, category, code, name, vendor);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RiskModelSummary {\n");
    sb.append("    available: ").append(toIndentedString(available)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    vendor: ").append(toIndentedString(vendor)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

