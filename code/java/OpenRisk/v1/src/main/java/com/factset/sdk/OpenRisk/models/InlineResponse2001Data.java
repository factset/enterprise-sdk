/*
 * Open:Risk API
 * Service to calculate parametric linear risk statistics and generate risk model asset identifier mappings.
 *
 * The version of the OpenAPI document: 1.26.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.OpenRisk.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.OpenRisk.models.RiskModelAppendFieldType;
import com.factset.sdk.OpenRisk.models.RiskModelFactorDetails;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDate;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.OpenRisk.JSON;


/**
 * Risk model metadata
 */
@ApiModel(description = "Risk model metadata")
@JsonPropertyOrder({
  InlineResponse2001Data.JSON_PROPERTY_CODE,
  InlineResponse2001Data.JSON_PROPERTY_CURRENCIES,
  InlineResponse2001Data.JSON_PROPERTY_CURRENCY,
  InlineResponse2001Data.JSON_PROPERTY_FACTORS,
  InlineResponse2001Data.JSON_PROPERTY_FACTOR_ID_TO_ISO_CURRENCY,
  InlineResponse2001Data.JSON_PROPERTY_FIRST_DATE,
  InlineResponse2001Data.JSON_PROPERTY_FREQUENCY,
  InlineResponse2001Data.JSON_PROPERTY_LATEST_DATE,
  InlineResponse2001Data.JSON_PROPERTY_NAME,
  InlineResponse2001Data.JSON_PROPERTY_RISK_MODEL_APPEND_FORMAT,
  InlineResponse2001Data.JSON_PROPERTY_UNIVERSE_COUNT,
  InlineResponse2001Data.JSON_PROPERTY_VENDOR
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class InlineResponse2001Data implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_CODE = "code";
  private String code;

  public static final String JSON_PROPERTY_CURRENCIES = "currencies";
  private java.util.List<String> currencies = new java.util.ArrayList<>();

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private String currency;

  public static final String JSON_PROPERTY_FACTORS = "factors";
  private java.util.List<RiskModelFactorDetails> factors = new java.util.ArrayList<>();

  public static final String JSON_PROPERTY_FACTOR_ID_TO_ISO_CURRENCY = "factorIdToIsoCurrency";
  private java.util.Map<String, String> factorIdToIsoCurrency = new java.util.HashMap<>();

  public static final String JSON_PROPERTY_FIRST_DATE = "firstDate";
  private LocalDate firstDate;

  public static final String JSON_PROPERTY_FREQUENCY = "frequency";
  private String frequency;

  public static final String JSON_PROPERTY_LATEST_DATE = "latestDate";
  private LocalDate latestDate;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_RISK_MODEL_APPEND_FORMAT = "riskModelAppendFormat";
  private java.util.List<RiskModelAppendFieldType> riskModelAppendFormat = null;

  public static final String JSON_PROPERTY_UNIVERSE_COUNT = "universeCount";
  private Integer universeCount;

  public static final String JSON_PROPERTY_VENDOR = "vendor";
  private String vendor;

  public InlineResponse2001Data() { 
  }

  @JsonCreator
  public InlineResponse2001Data(
    @JsonProperty(value=JSON_PROPERTY_CODE, required=true) String code, 
    @JsonProperty(value=JSON_PROPERTY_CURRENCIES, required=true) java.util.List<String> currencies, 
    @JsonProperty(value=JSON_PROPERTY_CURRENCY, required=true) String currency, 
    @JsonProperty(value=JSON_PROPERTY_FACTORS, required=true) java.util.List<RiskModelFactorDetails> factors, 
    @JsonProperty(value=JSON_PROPERTY_FACTOR_ID_TO_ISO_CURRENCY, required=true) java.util.Map<String, String> factorIdToIsoCurrency, 
    @JsonProperty(value=JSON_PROPERTY_FIRST_DATE, required=true) LocalDate firstDate, 
    @JsonProperty(value=JSON_PROPERTY_FREQUENCY, required=true) String frequency, 
    @JsonProperty(value=JSON_PROPERTY_LATEST_DATE, required=true) LocalDate latestDate, 
    @JsonProperty(value=JSON_PROPERTY_NAME, required=true) String name, 
    @JsonProperty(value=JSON_PROPERTY_UNIVERSE_COUNT, required=true) Integer universeCount, 
    @JsonProperty(value=JSON_PROPERTY_VENDOR, required=true) String vendor
  ) {
    this();
    this.code = code;
    this.currencies = currencies;
    this.currency = currency;
    this.factors = factors;
    this.factorIdToIsoCurrency = factorIdToIsoCurrency;
    this.firstDate = firstDate;
    this.frequency = frequency;
    this.latestDate = latestDate;
    this.name = name;
    this.universeCount = universeCount;
    this.vendor = vendor;
  }

  public InlineResponse2001Data code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Model code
   * @return code
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "FDS:GLOBAL_EQUITY_M_V1", required = true, value = "Model code")
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCode(String code) {
    this.code = code;
  }


  public InlineResponse2001Data currencies(java.util.List<String> currencies) {
    this.currencies = currencies;
    return this;
  }

  public InlineResponse2001Data addCurrenciesItem(String currenciesItem) {
    this.currencies.add(currenciesItem);
    return this;
  }

   /**
   * Currencies that can be used with the model
   * @return currencies
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Currencies that can be used with the model")
  @JsonProperty(JSON_PROPERTY_CURRENCIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public java.util.List<String> getCurrencies() {
    return currencies;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCurrencies(java.util.List<String> currencies) {
    this.currencies = currencies;
  }


  public InlineResponse2001Data currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * ISO-4217 currency code for risk model and holdings data to fetch and use. Ignored only for composite asset definitions provided as inputs via &#39;compositeAssets&#39; field.
   * @return currency
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "EUR", required = true, value = "ISO-4217 currency code for risk model and holdings data to fetch and use. Ignored only for composite asset definitions provided as inputs via 'compositeAssets' field.")
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public InlineResponse2001Data factors(java.util.List<RiskModelFactorDetails> factors) {
    this.factors = factors;
    return this;
  }

  public InlineResponse2001Data addFactorsItem(RiskModelFactorDetails factorsItem) {
    this.factors.add(factorsItem);
    return this;
  }

   /**
   * Factors of the model
   * @return factors
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Factors of the model")
  @JsonProperty(JSON_PROPERTY_FACTORS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public java.util.List<RiskModelFactorDetails> getFactors() {
    return factors;
  }


  @JsonProperty(JSON_PROPERTY_FACTORS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFactors(java.util.List<RiskModelFactorDetails> factors) {
    this.factors = factors;
  }


  public InlineResponse2001Data factorIdToIsoCurrency(java.util.Map<String, String> factorIdToIsoCurrency) {
    this.factorIdToIsoCurrency = factorIdToIsoCurrency;
    return this;
  }

  public InlineResponse2001Data putFactorIdToIsoCurrencyItem(String key, String factorIdToIsoCurrencyItem) {
    this.factorIdToIsoCurrency.put(key, factorIdToIsoCurrencyItem);
    return this;
  }

   /**
   * Map of currency factor IDs to ISO currency code.
   * @return factorIdToIsoCurrency
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Map of currency factor IDs to ISO currency code.")
  @JsonProperty(JSON_PROPERTY_FACTOR_ID_TO_ISO_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public java.util.Map<String, String> getFactorIdToIsoCurrency() {
    return factorIdToIsoCurrency;
  }


  @JsonProperty(JSON_PROPERTY_FACTOR_ID_TO_ISO_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFactorIdToIsoCurrency(java.util.Map<String, String> factorIdToIsoCurrency) {
    this.factorIdToIsoCurrency = factorIdToIsoCurrency;
  }


  public InlineResponse2001Data firstDate(LocalDate firstDate) {
    this.firstDate = firstDate;
    return this;
  }

   /**
   * **(since 1.12.0)**  Date format YYYY-MM-DD.
   * @return firstDate
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "Sat Jan 26 00:00:00 UTC 2019", required = true, value = "**(since 1.12.0)**  Date format YYYY-MM-DD.")
  @JsonProperty(JSON_PROPERTY_FIRST_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public LocalDate getFirstDate() {
    return firstDate;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFirstDate(LocalDate firstDate) {
    this.firstDate = firstDate;
  }


  public InlineResponse2001Data frequency(String frequency) {
    this.frequency = frequency;
    return this;
  }

   /**
   * Frequency of the model
   * @return frequency
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Frequency of the model")
  @JsonProperty(JSON_PROPERTY_FREQUENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFrequency() {
    return frequency;
  }


  @JsonProperty(JSON_PROPERTY_FREQUENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFrequency(String frequency) {
    this.frequency = frequency;
  }


  public InlineResponse2001Data latestDate(LocalDate latestDate) {
    this.latestDate = latestDate;
    return this;
  }

   /**
   * **(since 1.12.0)**  Date format YYYY-MM-DD.
   * @return latestDate
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "Sat Jan 26 00:00:00 UTC 2019", required = true, value = "**(since 1.12.0)**  Date format YYYY-MM-DD.")
  @JsonProperty(JSON_PROPERTY_LATEST_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public LocalDate getLatestDate() {
    return latestDate;
  }


  @JsonProperty(JSON_PROPERTY_LATEST_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLatestDate(LocalDate latestDate) {
    this.latestDate = latestDate;
  }


  public InlineResponse2001Data name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Model name
   * @return name
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Model name")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public InlineResponse2001Data riskModelAppendFormat(java.util.List<RiskModelAppendFieldType> riskModelAppendFormat) {
    this.riskModelAppendFormat = riskModelAppendFormat;
    return this;
  }

  public InlineResponse2001Data addRiskModelAppendFormatItem(RiskModelAppendFieldType riskModelAppendFormatItem) {
    if (this.riskModelAppendFormat == null) {
      this.riskModelAppendFormat = new java.util.ArrayList<>();
    }
    this.riskModelAppendFormat.add(riskModelAppendFormatItem);
    return this;
  }

   /**
   * List of fields which are supported by the risk model for appending additional asset data
   * @return riskModelAppendFormat
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "List of fields which are supported by the risk model for appending additional asset data")
  @JsonProperty(JSON_PROPERTY_RISK_MODEL_APPEND_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<RiskModelAppendFieldType> getRiskModelAppendFormat() {
    return riskModelAppendFormat;
  }


  @JsonProperty(JSON_PROPERTY_RISK_MODEL_APPEND_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRiskModelAppendFormat(java.util.List<RiskModelAppendFieldType> riskModelAppendFormat) {
    this.riskModelAppendFormat = riskModelAppendFormat;
  }


  public InlineResponse2001Data universeCount(Integer universeCount) {
    this.universeCount = universeCount;
    return this;
  }

   /**
   * Total universe count of the model
   * @return universeCount
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Total universe count of the model")
  @JsonProperty(JSON_PROPERTY_UNIVERSE_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getUniverseCount() {
    return universeCount;
  }


  @JsonProperty(JSON_PROPERTY_UNIVERSE_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUniverseCount(Integer universeCount) {
    this.universeCount = universeCount;
  }


  public InlineResponse2001Data vendor(String vendor) {
    this.vendor = vendor;
    return this;
  }

   /**
   * Model vendor
   * @return vendor
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Model vendor")
  @JsonProperty(JSON_PROPERTY_VENDOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getVendor() {
    return vendor;
  }


  @JsonProperty(JSON_PROPERTY_VENDOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVendor(String vendor) {
    this.vendor = vendor;
  }


  /**
   * Return true if this inline_response_200_1_data object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2001Data inlineResponse2001Data = (InlineResponse2001Data) o;
    return Objects.equals(this.code, inlineResponse2001Data.code) &&
        Objects.equals(this.currencies, inlineResponse2001Data.currencies) &&
        Objects.equals(this.currency, inlineResponse2001Data.currency) &&
        Objects.equals(this.factors, inlineResponse2001Data.factors) &&
        Objects.equals(this.factorIdToIsoCurrency, inlineResponse2001Data.factorIdToIsoCurrency) &&
        Objects.equals(this.firstDate, inlineResponse2001Data.firstDate) &&
        Objects.equals(this.frequency, inlineResponse2001Data.frequency) &&
        Objects.equals(this.latestDate, inlineResponse2001Data.latestDate) &&
        Objects.equals(this.name, inlineResponse2001Data.name) &&
        Objects.equals(this.riskModelAppendFormat, inlineResponse2001Data.riskModelAppendFormat) &&
        Objects.equals(this.universeCount, inlineResponse2001Data.universeCount) &&
        Objects.equals(this.vendor, inlineResponse2001Data.vendor);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, currencies, currency, factors, factorIdToIsoCurrency, firstDate, frequency, latestDate, name, riskModelAppendFormat, universeCount, vendor);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2001Data {\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    currencies: ").append(toIndentedString(currencies)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    factors: ").append(toIndentedString(factors)).append("\n");
    sb.append("    factorIdToIsoCurrency: ").append(toIndentedString(factorIdToIsoCurrency)).append("\n");
    sb.append("    firstDate: ").append(toIndentedString(firstDate)).append("\n");
    sb.append("    frequency: ").append(toIndentedString(frequency)).append("\n");
    sb.append("    latestDate: ").append(toIndentedString(latestDate)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    riskModelAppendFormat: ").append(toIndentedString(riskModelAppendFormat)).append("\n");
    sb.append("    universeCount: ").append(toIndentedString(universeCount)).append("\n");
    sb.append("    vendor: ").append(toIndentedString(vendor)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

