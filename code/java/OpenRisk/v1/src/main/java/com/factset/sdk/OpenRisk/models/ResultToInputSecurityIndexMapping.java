/*
 * Open:Risk API
 * Service to calculate parametric linear risk statistics and generate risk model asset identifier mappings.
 *
 * The version of the OpenAPI document: 1.26.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.OpenRisk.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.OpenRisk.JSON;


/**
 * For each input holding from the request, a list of indices aligned to the security dimension of the results arrays and the &#x60;labels.security.ids&#x60; array. These 0-based index values key into the input holding&#39;s IDs. Values less than 0 indicate result index not originating from corresponding holding.
 */
@ApiModel(description = "For each input holding from the request, a list of indices aligned to the security dimension of the results arrays and the `labels.security.ids` array. These 0-based index values key into the input holding's IDs. Values less than 0 indicate result index not originating from corresponding holding.")
@JsonPropertyOrder({
  ResultToInputSecurityIndexMapping.JSON_PROPERTY_PORTFOLIO,
  ResultToInputSecurityIndexMapping.JSON_PROPERTY_BENCHMARK,
  ResultToInputSecurityIndexMapping.JSON_PROPERTY_MARKET
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class ResultToInputSecurityIndexMapping implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_PORTFOLIO = "portfolio";
  private java.util.List<Integer> portfolio = new java.util.ArrayList<>();

  public static final String JSON_PROPERTY_BENCHMARK = "benchmark";
  private java.util.List<Integer> benchmark = null;

  public static final String JSON_PROPERTY_MARKET = "market";
  private java.util.List<Integer> market = null;

  public ResultToInputSecurityIndexMapping() { 
  }

  @JsonCreator
  public ResultToInputSecurityIndexMapping(
    @JsonProperty(value=JSON_PROPERTY_PORTFOLIO, required=true) java.util.List<Integer> portfolio
  ) {
    this();
    this.portfolio = portfolio;
  }

  public ResultToInputSecurityIndexMapping portfolio(java.util.List<Integer> portfolio) {
    this.portfolio = portfolio;
    return this;
  }

  public ResultToInputSecurityIndexMapping addPortfolioItem(Integer portfolioItem) {
    this.portfolio.add(portfolioItem);
    return this;
  }

   /**
   * Index mapping corresponding to the input &#39;portfolio&#39; holdings
   * @return portfolio
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Index mapping corresponding to the input 'portfolio' holdings")
  @JsonProperty(JSON_PROPERTY_PORTFOLIO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public java.util.List<Integer> getPortfolio() {
    return portfolio;
  }


  @JsonProperty(JSON_PROPERTY_PORTFOLIO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPortfolio(java.util.List<Integer> portfolio) {
    this.portfolio = portfolio;
  }


  public ResultToInputSecurityIndexMapping benchmark(java.util.List<Integer> benchmark) {
    this.benchmark = benchmark;
    return this;
  }

  public ResultToInputSecurityIndexMapping addBenchmarkItem(Integer benchmarkItem) {
    if (this.benchmark == null) {
      this.benchmark = new java.util.ArrayList<>();
    }
    this.benchmark.add(benchmarkItem);
    return this;
  }

   /**
   * Index mapping corresponding to the input &#39;benchmark&#39; holdings
   * @return benchmark
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Index mapping corresponding to the input 'benchmark' holdings")
  @JsonProperty(JSON_PROPERTY_BENCHMARK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<Integer> getBenchmark() {
    return benchmark;
  }


  @JsonProperty(JSON_PROPERTY_BENCHMARK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBenchmark(java.util.List<Integer> benchmark) {
    this.benchmark = benchmark;
  }


  public ResultToInputSecurityIndexMapping market(java.util.List<Integer> market) {
    this.market = market;
    return this;
  }

  public ResultToInputSecurityIndexMapping addMarketItem(Integer marketItem) {
    if (this.market == null) {
      this.market = new java.util.ArrayList<>();
    }
    this.market.add(marketItem);
    return this;
  }

   /**
   * Index mapping corresponding to the input &#39;market&#39; holdings
   * @return market
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Index mapping corresponding to the input 'market' holdings")
  @JsonProperty(JSON_PROPERTY_MARKET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<Integer> getMarket() {
    return market;
  }


  @JsonProperty(JSON_PROPERTY_MARKET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMarket(java.util.List<Integer> market) {
    this.market = market;
  }


  /**
   * Return true if this ResultToInputSecurityIndexMapping object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResultToInputSecurityIndexMapping resultToInputSecurityIndexMapping = (ResultToInputSecurityIndexMapping) o;
    return Objects.equals(this.portfolio, resultToInputSecurityIndexMapping.portfolio) &&
        Objects.equals(this.benchmark, resultToInputSecurityIndexMapping.benchmark) &&
        Objects.equals(this.market, resultToInputSecurityIndexMapping.market);
  }

  @Override
  public int hashCode() {
    return Objects.hash(portfolio, benchmark, market);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResultToInputSecurityIndexMapping {\n");
    sb.append("    portfolio: ").append(toIndentedString(portfolio)).append("\n");
    sb.append("    benchmark: ").append(toIndentedString(benchmark)).append("\n");
    sb.append("    market: ").append(toIndentedString(market)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

