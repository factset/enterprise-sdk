/*
 * Open:Risk API
 * Service to calculate parametric linear risk statistics and generate risk model asset identifier mappings.
 *
 * The version of the OpenAPI document: 1.26.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.OpenRisk.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.OpenRisk.JSON;


/**
 * Security IDs and market values; the arrays must have the same number of items. Public security IDs such as SEDOL, CUSIP, ISIN, and Ticker are supported. If proprietary IDs are provided, they need to be mapped via composite assets. Market values are used to calculate weights and do not have to be normalized, but need to be denominated in the single same currency ISO.
 */
@ApiModel(description = "Security IDs and market values; the arrays must have the same number of items. Public security IDs such as SEDOL, CUSIP, ISIN, and Ticker are supported. If proprietary IDs are provided, they need to be mapped via composite assets. Market values are used to calculate weights and do not have to be normalized, but need to be denominated in the single same currency ISO.")
@JsonPropertyOrder({
  IDsAndMarketValues.JSON_PROPERTY_IDS,
  IDsAndMarketValues.JSON_PROPERTY_MARKET_VALUES
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class IDsAndMarketValues implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_IDS = "ids";
  private java.util.List<String> ids = new java.util.ArrayList<>();

  public static final String JSON_PROPERTY_MARKET_VALUES = "marketValues";
  private java.util.List<Double> marketValues = new java.util.ArrayList<>();

  public IDsAndMarketValues() { 
  }

  @JsonCreator
  public IDsAndMarketValues(
    @JsonProperty(value=JSON_PROPERTY_IDS, required=true) java.util.List<String> ids, 
    @JsonProperty(value=JSON_PROPERTY_MARKET_VALUES, required=true) java.util.List<Double> marketValues
  ) {
    this();
    this.ids = ids;
    this.marketValues = marketValues;
  }

  public IDsAndMarketValues ids(java.util.List<String> ids) {
    this.ids = ids;
    return this;
  }

  public IDsAndMarketValues addIdsItem(String idsItem) {
    this.ids.add(idsItem);
    return this;
  }

   /**
   * Security identifiers
   * @return ids
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Security identifiers")
  @JsonProperty(JSON_PROPERTY_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public java.util.List<String> getIds() {
    return ids;
  }


  @JsonProperty(JSON_PROPERTY_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIds(java.util.List<String> ids) {
    this.ids = ids;
  }


  public IDsAndMarketValues marketValues(java.util.List<Double> marketValues) {
    this.marketValues = marketValues;
    return this;
  }

  public IDsAndMarketValues addMarketValuesItem(Double marketValuesItem) {
    this.marketValues.add(marketValuesItem);
    return this;
  }

   /**
   * Security market values
   * @return marketValues
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Security market values")
  @JsonProperty(JSON_PROPERTY_MARKET_VALUES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public java.util.List<Double> getMarketValues() {
    return marketValues;
  }


  @JsonProperty(JSON_PROPERTY_MARKET_VALUES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMarketValues(java.util.List<Double> marketValues) {
    this.marketValues = marketValues;
  }


  /**
   * Return true if this IDsAndMarketValues object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IDsAndMarketValues idsAndMarketValues = (IDsAndMarketValues) o;
    return Objects.equals(this.ids, idsAndMarketValues.ids) &&
        Objects.equals(this.marketValues, idsAndMarketValues.marketValues);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ids, marketValues);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IDsAndMarketValues {\n");
    sb.append("    ids: ").append(toIndentedString(ids)).append("\n");
    sb.append("    marketValues: ").append(toIndentedString(marketValues)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

