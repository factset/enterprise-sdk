/*
 * Open:Risk API
 * Service to calculate parametric linear risk statistics and generate risk model asset identifier mappings.
 *
 * The version of the OpenAPI document: 1.26.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.OpenRisk.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.OpenRisk.models.InputToResultSecurityIndexMapping;
import com.factset.sdk.OpenRisk.models.ResultToInputSecurityIndexMapping;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.OpenRisk.JSON;


/**
 * Labels relevant to calculation-levels with &#39;Security&#39; in the name
 */
@ApiModel(description = "Labels relevant to calculation-levels with 'Security' in the name")
@JsonPropertyOrder({
  LabelsSecurity.JSON_PROPERTY_IDS,
  LabelsSecurity.JSON_PROPERTY_INDICES_INPUT_TO_RESULT,
  LabelsSecurity.JSON_PROPERTY_INDICES_RESULT_TO_INPUT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class LabelsSecurity implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_IDS = "ids";
  private java.util.List<String> ids = new java.util.ArrayList<>();

  public static final String JSON_PROPERTY_INDICES_INPUT_TO_RESULT = "indicesInputToResult";
  private InputToResultSecurityIndexMapping indicesInputToResult;

  public static final String JSON_PROPERTY_INDICES_RESULT_TO_INPUT = "indicesResultToInput";
  private ResultToInputSecurityIndexMapping indicesResultToInput;

  public LabelsSecurity() { 
  }

  @JsonCreator
  public LabelsSecurity(
    @JsonProperty(value=JSON_PROPERTY_IDS, required=true) java.util.List<String> ids
  ) {
    this();
    this.ids = ids;
  }

  public LabelsSecurity ids(java.util.List<String> ids) {
    this.ids = ids;
    return this;
  }

  public LabelsSecurity addIdsItem(String idsItem) {
    this.ids.add(idsItem);
    return this;
  }

   /**
   * Security IDs aligned to the calculated output. Often this will merge the individual holdings arrays into a single array.
   * @return ids
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Security IDs aligned to the calculated output. Often this will merge the individual holdings arrays into a single array.")
  @JsonProperty(JSON_PROPERTY_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public java.util.List<String> getIds() {
    return ids;
  }


  @JsonProperty(JSON_PROPERTY_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIds(java.util.List<String> ids) {
    this.ids = ids;
  }


  public LabelsSecurity indicesInputToResult(InputToResultSecurityIndexMapping indicesInputToResult) {
    this.indicesInputToResult = indicesInputToResult;
    return this;
  }

   /**
   * Get indicesInputToResult
   * @return indicesInputToResult
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INDICES_INPUT_TO_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InputToResultSecurityIndexMapping getIndicesInputToResult() {
    return indicesInputToResult;
  }


  @JsonProperty(JSON_PROPERTY_INDICES_INPUT_TO_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIndicesInputToResult(InputToResultSecurityIndexMapping indicesInputToResult) {
    this.indicesInputToResult = indicesInputToResult;
  }


  public LabelsSecurity indicesResultToInput(ResultToInputSecurityIndexMapping indicesResultToInput) {
    this.indicesResultToInput = indicesResultToInput;
    return this;
  }

   /**
   * Get indicesResultToInput
   * @return indicesResultToInput
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INDICES_RESULT_TO_INPUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ResultToInputSecurityIndexMapping getIndicesResultToInput() {
    return indicesResultToInput;
  }


  @JsonProperty(JSON_PROPERTY_INDICES_RESULT_TO_INPUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIndicesResultToInput(ResultToInputSecurityIndexMapping indicesResultToInput) {
    this.indicesResultToInput = indicesResultToInput;
  }


  /**
   * Return true if this Labels_security object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LabelsSecurity labelsSecurity = (LabelsSecurity) o;
    return Objects.equals(this.ids, labelsSecurity.ids) &&
        Objects.equals(this.indicesInputToResult, labelsSecurity.indicesInputToResult) &&
        Objects.equals(this.indicesResultToInput, labelsSecurity.indicesResultToInput);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ids, indicesInputToResult, indicesResultToInput);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LabelsSecurity {\n");
    sb.append("    ids: ").append(toIndentedString(ids)).append("\n");
    sb.append("    indicesInputToResult: ").append(toIndentedString(indicesInputToResult)).append("\n");
    sb.append("    indicesResultToInput: ").append(toIndentedString(indicesResultToInput)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

