/*
 * Portfolio Reporting Batcher
 * The Portfolio Reporting Batcher (PRB) API allows clients to systematically leverage functionalities of the PRB application.
 *
 * The version of the OpenAPI document: 0.6.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.PortfolioReportingBatcher.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.PortfolioReportingBatcher.models.PrbStatus;
import com.factset.sdk.PortfolioReportingBatcher.models.Status;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.PortfolioReportingBatcher.JSON;


/**
 * Provides full details of when the job has been run
 */
@ApiModel(description = "Provides full details of when the job has been run")
@JsonPropertyOrder({
  RunsForJob.JSON_PROPERTY_END_TIME,
  RunsForJob.JSON_PROPERTY_ID,
  RunsForJob.JSON_PROPERTY_IS_API_TRIGGERED,
  RunsForJob.JSON_PROPERTY_PRB_STATUS,
  RunsForJob.JSON_PROPERTY_RUN_DURATION,
  RunsForJob.JSON_PROPERTY_START_TIME,
  RunsForJob.JSON_PROPERTY_STATUS,
  RunsForJob.JSON_PROPERTY_STATUS_DESCRIPTION,
  RunsForJob.JSON_PROPERTY_SUBMIT_TIME
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class RunsForJob implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_END_TIME = "endTime";
  private OffsetDateTime endTime;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_IS_API_TRIGGERED = "isApiTriggered";
  private Boolean isApiTriggered;

  public static final String JSON_PROPERTY_PRB_STATUS = "prbStatus";
  private PrbStatus prbStatus;

  public static final String JSON_PROPERTY_RUN_DURATION = "runDuration";
  private BigDecimal runDuration;

  public static final String JSON_PROPERTY_START_TIME = "startTime";
  private OffsetDateTime startTime;

  public static final String JSON_PROPERTY_STATUS = "status";
  private Status status;

  public static final String JSON_PROPERTY_STATUS_DESCRIPTION = "statusDescription";
  private String statusDescription;

  public static final String JSON_PROPERTY_SUBMIT_TIME = "submitTime";
  private OffsetDateTime submitTime;

  public RunsForJob() { 
  }

  public RunsForJob endTime(OffsetDateTime endTime) {
    this.endTime = endTime;
    return this;
  }

   /**
   * The date and time the job was finished processing
   * @return endTime
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The date and time the job was finished processing")
  @JsonProperty(JSON_PROPERTY_END_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getEndTime() {
    return endTime;
  }


  @JsonProperty(JSON_PROPERTY_END_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndTime(OffsetDateTime endTime) {
    this.endTime = endTime;
  }


  public RunsForJob id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The ID of the run
   * @return id
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The ID of the run")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public RunsForJob isApiTriggered(Boolean isApiTriggered) {
    this.isApiTriggered = isApiTriggered;
    return this;
  }

   /**
   * Indicates whether the job was triggered via the PRB API
   * @return isApiTriggered
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether the job was triggered via the PRB API")
  @JsonProperty(JSON_PROPERTY_IS_API_TRIGGERED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsApiTriggered() {
    return isApiTriggered;
  }


  @JsonProperty(JSON_PROPERTY_IS_API_TRIGGERED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsApiTriggered(Boolean isApiTriggered) {
    this.isApiTriggered = isApiTriggered;
  }


  public RunsForJob prbStatus(PrbStatus prbStatus) {
    this.prbStatus = prbStatus;
    return this;
  }

   /**
   * Get prbStatus
   * @return prbStatus
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PRB_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PrbStatus getPrbStatus() {
    return prbStatus;
  }


  @JsonProperty(JSON_PROPERTY_PRB_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrbStatus(PrbStatus prbStatus) {
    this.prbStatus = prbStatus;
  }


  public RunsForJob runDuration(BigDecimal runDuration) {
    this.runDuration = runDuration;
    return this;
  }

   /**
   * Number of seconds between startTime and endTime
   * @return runDuration
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Number of seconds between startTime and endTime")
  @JsonProperty(JSON_PROPERTY_RUN_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getRunDuration() {
    return runDuration;
  }


  @JsonProperty(JSON_PROPERTY_RUN_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRunDuration(BigDecimal runDuration) {
    this.runDuration = runDuration;
  }


  public RunsForJob startTime(OffsetDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * The date and time the job started running after being submitted and potentially waiting in any queue
   * @return startTime
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The date and time the job started running after being submitted and potentially waiting in any queue")
  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getStartTime() {
    return startTime;
  }


  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartTime(OffsetDateTime startTime) {
    this.startTime = startTime;
  }


  public RunsForJob status(Status status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Status getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(Status status) {
    this.status = status;
  }


  public RunsForJob statusDescription(String statusDescription) {
    this.statusDescription = statusDescription;
    return this;
  }

   /**
   * Further details on the job&#39;s status
   * @return statusDescription
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "job has completed with success", value = "Further details on the job's status")
  @JsonProperty(JSON_PROPERTY_STATUS_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStatusDescription() {
    return statusDescription;
  }


  @JsonProperty(JSON_PROPERTY_STATUS_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatusDescription(String statusDescription) {
    this.statusDescription = statusDescription;
  }


  public RunsForJob submitTime(OffsetDateTime submitTime) {
    this.submitTime = submitTime;
    return this;
  }

   /**
   * The date and time the job was submitted
   * @return submitTime
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The date and time the job was submitted")
  @JsonProperty(JSON_PROPERTY_SUBMIT_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getSubmitTime() {
    return submitTime;
  }


  @JsonProperty(JSON_PROPERTY_SUBMIT_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubmitTime(OffsetDateTime submitTime) {
    this.submitTime = submitTime;
  }


  /**
   * Return true if this runsForJob object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RunsForJob runsForJob = (RunsForJob) o;
    return Objects.equals(this.endTime, runsForJob.endTime) &&
        Objects.equals(this.id, runsForJob.id) &&
        Objects.equals(this.isApiTriggered, runsForJob.isApiTriggered) &&
        Objects.equals(this.prbStatus, runsForJob.prbStatus) &&
        Objects.equals(this.runDuration, runsForJob.runDuration) &&
        Objects.equals(this.startTime, runsForJob.startTime) &&
        Objects.equals(this.status, runsForJob.status) &&
        Objects.equals(this.statusDescription, runsForJob.statusDescription) &&
        Objects.equals(this.submitTime, runsForJob.submitTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(endTime, id, isApiTriggered, prbStatus, runDuration, startTime, status, statusDescription, submitTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RunsForJob {\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isApiTriggered: ").append(toIndentedString(isApiTriggered)).append("\n");
    sb.append("    prbStatus: ").append(toIndentedString(prbStatus)).append("\n");
    sb.append("    runDuration: ").append(toIndentedString(runDuration)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusDescription: ").append(toIndentedString(statusDescription)).append("\n");
    sb.append("    submitTime: ").append(toIndentedString(submitTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

