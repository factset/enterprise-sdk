/*
 * Portfolio Reporting Batcher
 * The Portfolio Reporting Batcher (PRB) API allows clients to systematically leverage functionalities of the PRB application.
 *
 * The version of the OpenAPI document: 0.5.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.PortfolioReportingBatcher.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDate;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.PortfolioReportingBatcher.JSON;


/**
 * Used for Vault job type only. This creates a matrix of given accounts and dates. When the job is run, it will only run for the accounts and dates within this object. (Settings will only be used temporarily and no changes will be made to the default PRB job.)
 */
@ApiModel(description = "Used for Vault job type only. This creates a matrix of given accounts and dates. When the job is run, it will only run for the accounts and dates within this object. (Settings will only be used temporarily and no changes will be made to the default PRB job.)")
@JsonPropertyOrder({
  JobOverridesCombinationsRoot.JSON_PROPERTY_ACCOUNTS,
  JobOverridesCombinationsRoot.JSON_PROPERTY_DATES
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class JobOverridesCombinationsRoot implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ACCOUNTS = "accounts";
  private java.util.List<String> accounts = null;

  public static final String JSON_PROPERTY_DATES = "dates";
  private java.util.List<LocalDate> dates = null;

  public JobOverridesCombinationsRoot() { 
  }

  public JobOverridesCombinationsRoot accounts(java.util.List<String> accounts) {
    this.accounts = accounts;
    return this;
  }

  public JobOverridesCombinationsRoot addAccountsItem(String accountsItem) {
    if (this.accounts == null) {
      this.accounts = new java.util.ArrayList<>();
    }
    this.accounts.add(accountsItem);
    return this;
  }

   /**
   * An array of accounts
   * @return accounts
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "An array of accounts")
  @JsonProperty(JSON_PROPERTY_ACCOUNTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<String> getAccounts() {
    return accounts;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccounts(java.util.List<String> accounts) {
    this.accounts = accounts;
  }


  public JobOverridesCombinationsRoot dates(java.util.List<LocalDate> dates) {
    this.dates = dates;
    return this;
  }

  public JobOverridesCombinationsRoot addDatesItem(LocalDate datesItem) {
    if (this.dates == null) {
      this.dates = new java.util.ArrayList<>();
    }
    this.dates.add(datesItem);
    return this;
  }

   /**
   * An array of dates
   * @return dates
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "An array of dates")
  @JsonProperty(JSON_PROPERTY_DATES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<LocalDate> getDates() {
    return dates;
  }


  @JsonProperty(JSON_PROPERTY_DATES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDates(java.util.List<LocalDate> dates) {
    this.dates = dates;
  }


  /**
   * Return true if this jobOverridesCombinationsRoot object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JobOverridesCombinationsRoot jobOverridesCombinationsRoot = (JobOverridesCombinationsRoot) o;
    return Objects.equals(this.accounts, jobOverridesCombinationsRoot.accounts) &&
        Objects.equals(this.dates, jobOverridesCombinationsRoot.dates);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accounts, dates);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JobOverridesCombinationsRoot {\n");
    sb.append("    accounts: ").append(toIndentedString(accounts)).append("\n");
    sb.append("    dates: ").append(toIndentedString(dates)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

