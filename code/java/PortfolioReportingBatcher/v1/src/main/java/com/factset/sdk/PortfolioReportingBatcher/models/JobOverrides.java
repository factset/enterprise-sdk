/*
 * Portfolio Reporting Batcher
 * The Portfolio Reporting Batcher (PRB) API allows clients to systematically leverage functionalities of the PRB application.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.PortfolioReportingBatcher.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.factset.sdk.PortfolioReportingBatcher.models.JobOverridesCombinationsRoot;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.PortfolioReportingBatcher.JSON;


/**
 * If this object is provided, the settings given here will override the default settings of the job for the job run (settings will only be used temporarily and no changes will be made to the default PRB job). Only certain objects can be used for certain job types.
 */
@ApiModel(description = "If this object is provided, the settings given here will override the default settings of the job for the job run (settings will only be used temporarily and no changes will be made to the default PRB job). Only certain objects can be used for certain job types.")
@JsonPropertyOrder({
  JobOverrides.JSON_PROPERTY_COMBINATIONS,
  JobOverrides.JSON_PROPERTY_RUN_AS_SERIAL_NUMBER
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class JobOverrides implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_COMBINATIONS = "combinations";
  private java.util.List<JobOverridesCombinationsRoot> combinations = null;

  public static final String JSON_PROPERTY_RUN_AS_SERIAL_NUMBER = "runAsSerialNumber";
  private String runAsSerialNumber;

  public JobOverrides() { 
  }

  public JobOverrides combinations(java.util.List<JobOverridesCombinationsRoot> combinations) {
    this.combinations = combinations;
    return this;
  }

  public JobOverrides addCombinationsItem(JobOverridesCombinationsRoot combinationsItem) {
    if (this.combinations == null) {
      this.combinations = new java.util.ArrayList<>();
    }
    this.combinations.add(combinationsItem);
    return this;
  }

   /**
   * An array of date, account, and tasks combinations
   * @return combinations
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "An array of date, account, and tasks combinations")
  @JsonProperty(JSON_PROPERTY_COMBINATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<JobOverridesCombinationsRoot> getCombinations() {
    return combinations;
  }


  @JsonProperty(JSON_PROPERTY_COMBINATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCombinations(java.util.List<JobOverridesCombinationsRoot> combinations) {
    this.combinations = combinations;
  }


  public JobOverrides runAsSerialNumber(String runAsSerialNumber) {
    this.runAsSerialNumber = runAsSerialNumber;
    return this;
  }

   /**
   * The FactSet serial number which has the credentials wanted to run the job
   * @return runAsSerialNumber
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The FactSet serial number which has the credentials wanted to run the job")
  @JsonProperty(JSON_PROPERTY_RUN_AS_SERIAL_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRunAsSerialNumber() {
    return runAsSerialNumber;
  }


  @JsonProperty(JSON_PROPERTY_RUN_AS_SERIAL_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRunAsSerialNumber(String runAsSerialNumber) {
    this.runAsSerialNumber = runAsSerialNumber;
  }


  /**
   * Return true if this JobOverrides object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JobOverrides jobOverrides = (JobOverrides) o;
    return Objects.equals(this.combinations, jobOverrides.combinations) &&
        Objects.equals(this.runAsSerialNumber, jobOverrides.runAsSerialNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(combinations, runAsSerialNumber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JobOverrides {\n");
    sb.append("    combinations: ").append(toIndentedString(combinations)).append("\n");
    sb.append("    runAsSerialNumber: ").append(toIndentedString(runAsSerialNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

