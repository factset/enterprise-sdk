/*
 * FactSet Private Company API
 * FactSet Private Company API encompasses Private Company Financials and includes some Private Company non-periodic data. Additional Private Company firmographics can be found in the FactSet Entity API. <p><b>Rate limit is set to 10 requests per second and 10 concurrent requests per user</b>.</p> 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetPrivateCompany.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetPrivateCompany.JSON;


/**
 * Financial Statement objects
 */
@ApiModel(description = "Financial Statement objects")
@JsonPropertyOrder({
  StatementItem.JSON_PROPERTY_NAME,
  StatementItem.JSON_PROPERTY_METRIC_NAME,
  StatementItem.JSON_PROPERTY_DISPLAY_LEVEL,
  StatementItem.JSON_PROPERTY_DISPLAY_ORDER,
  StatementItem.JSON_PROPERTY_VALUE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class StatementItem implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_METRIC_NAME = "metricName";
  private String metricName;

  public static final String JSON_PROPERTY_DISPLAY_LEVEL = "displayLevel";
  private String displayLevel;

  public static final String JSON_PROPERTY_DISPLAY_ORDER = "displayOrder";
  private Integer displayOrder;

  public static final String JSON_PROPERTY_VALUE = "value";
  private java.util.List<Double> value = null;

  public StatementItem() { 
  }

  public StatementItem name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the metric
   * @return name
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Sales", value = "Name of the metric")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public StatementItem metricName(String metricName) {
    this.metricName = metricName;
    return this;
  }

   /**
   * FactSet Private Company metric representing the corresponding financial metric
   * @return metricName
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "FPC_REVENUE", value = "FactSet Private Company metric representing the corresponding financial metric")
  @JsonProperty(JSON_PROPERTY_METRIC_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMetricName() {
    return metricName;
  }


  @JsonProperty(JSON_PROPERTY_METRIC_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetricName(String metricName) {
    this.metricName = metricName;
  }


  public StatementItem displayLevel(String displayLevel) {
    this.displayLevel = displayLevel;
    return this;
  }

   /**
   * Describes the level of displaying the item
   * @return displayLevel
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "L0", value = "Describes the level of displaying the item")
  @JsonProperty(JSON_PROPERTY_DISPLAY_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplayLevel() {
    return displayLevel;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayLevel(String displayLevel) {
    this.displayLevel = displayLevel;
  }


  public StatementItem displayOrder(Integer displayOrder) {
    this.displayOrder = displayOrder;
    return this;
  }

   /**
   * Describes the order of displaying the item
   * @return displayOrder
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "1", value = "Describes the order of displaying the item")
  @JsonProperty(JSON_PROPERTY_DISPLAY_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDisplayOrder() {
    return displayOrder;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayOrder(Integer displayOrder) {
    this.displayOrder = displayOrder;
  }


  public StatementItem value(java.util.List<Double> value) {
    this.value = value;
    return this;
  }

  public StatementItem addValueItem(Double valueItem) {
    if (this.value == null) {
      this.value = new java.util.ArrayList<>();
    }
    this.value.add(valueItem);
    return this;
  }

   /**
   * Array of values for the data metrics requested. Values correspond to the reportDate and fiscalYear based on their index (array position).
   * @return value
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Array of values for the data metrics requested. Values correspond to the reportDate and fiscalYear based on their index (array position).")
  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.List<Double> getValue() {
    return value;
  }


  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValue(java.util.List<Double> value) {
    this.value = value;
  }


  /**
   * Return true if this StatementItem object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StatementItem statementItem = (StatementItem) o;
    return Objects.equals(this.name, statementItem.name) &&
        Objects.equals(this.metricName, statementItem.metricName) &&
        Objects.equals(this.displayLevel, statementItem.displayLevel) &&
        Objects.equals(this.displayOrder, statementItem.displayOrder) &&
        Objects.equals(this.value, statementItem.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, metricName, displayLevel, displayOrder, value);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StatementItem {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    metricName: ").append(toIndentedString(metricName)).append("\n");
    sb.append("    displayLevel: ").append(toIndentedString(displayLevel)).append("\n");
    sb.append("    displayOrder: ").append(toIndentedString(displayOrder)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

