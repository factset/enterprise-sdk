/*
 * FactSet Private Company API
 * FactSet Private Company API encompasses Private Company Financials and includes some Private Company non-periodic data. Additional Private Company firmographics can be found in the FactSet Entity API. <p><b>Rate limit is set to 10 requests per second and 10 concurrent requests per user</b>.</p> 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetPrivateCompany.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDate;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetPrivateCompany.JSON;


/**
 * Financials request body elements
 */
@ApiModel(description = "Financials request body elements")
@JsonPropertyOrder({
  FinancialsRequestBody.JSON_PROPERTY_IDS,
  FinancialsRequestBody.JSON_PROPERTY_METRICS,
  FinancialsRequestBody.JSON_PROPERTY_START_DATE,
  FinancialsRequestBody.JSON_PROPERTY_END_DATE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class FinancialsRequestBody implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_IDS = "ids";
  private java.util.List<String> ids = new java.util.ArrayList<>();

  public static final String JSON_PROPERTY_METRICS = "metrics";
  private java.util.List<String> metrics = new java.util.ArrayList<>();

  public static final String JSON_PROPERTY_START_DATE = "startDate";
  private LocalDate startDate;

  public static final String JSON_PROPERTY_END_DATE = "endDate";
  private LocalDate endDate;

  public FinancialsRequestBody() { 
  }

  @JsonCreator
  public FinancialsRequestBody(
    @JsonProperty(value=JSON_PROPERTY_IDS, required=true) java.util.List<String> ids, 
    @JsonProperty(value=JSON_PROPERTY_METRICS, required=true) java.util.List<String> metrics, 
    @JsonProperty(value=JSON_PROPERTY_START_DATE, required=true) LocalDate startDate
  ) {
    this();
    this.ids = ids;
    this.metrics = metrics;
    this.startDate = startDate;
  }

  public FinancialsRequestBody ids(java.util.List<String> ids) {
    this.ids = ids;
    return this;
  }

  public FinancialsRequestBody addIdsItem(String idsItem) {
    this.ids.add(idsItem);
    return this;
  }

   /**
   * Security or Entity identifiers. 
   * @return ids
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "{\"oneId\":{\"summary\":\"One security or entity identifier\",\"value\":[\"0H3R4Y-E\"]},\"multipleIds\":{\"summary\":\"Multiple security or entity identifiers\",\"value\":[\"0H3R4Y-E\",\"0G3F5Z-E\",\"00DK61-E\"]}}", required = true, value = "Security or Entity identifiers. ")
  @JsonProperty(JSON_PROPERTY_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public java.util.List<String> getIds() {
    return ids;
  }


  @JsonProperty(JSON_PROPERTY_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIds(java.util.List<String> ids) {
    this.ids = ids;
  }


  public FinancialsRequestBody metrics(java.util.List<String> metrics) {
    this.metrics = metrics;
    return this;
  }

  public FinancialsRequestBody addMetricsItem(String metricsItem) {
    this.metrics.add(metricsItem);
    return this;
  }

   /**
   * Private Company Financials Metrics. 
   * @return metrics
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "{\"oneFinancialMetric\":{\"summary\":\"One financials metric\",\"value\":[\"FPC_ASSETS\"]},\"multipleFinancialMetrics\":{\"summary\":\"Multiple financial metrics\",\"value\":[\"FPC_ASSETS\",\"FPC_EBIT\"]}}", required = true, value = "Private Company Financials Metrics. ")
  @JsonProperty(JSON_PROPERTY_METRICS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public java.util.List<String> getMetrics() {
    return metrics;
  }


  @JsonProperty(JSON_PROPERTY_METRICS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMetrics(java.util.List<String> metrics) {
    this.metrics = metrics;
  }


  public FinancialsRequestBody startDate(LocalDate startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * The start date requested for a given date range in **YYYY-MM-DD** format. Future dates (T+1) are not accepted in this endpoint. 
   * @return startDate
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "Tue Jan 01 00:00:00 UTC 2019", required = true, value = "The start date requested for a given date range in **YYYY-MM-DD** format. Future dates (T+1) are not accepted in this endpoint. ")
  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public LocalDate getStartDate() {
    return startDate;
  }


  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStartDate(LocalDate startDate) {
    this.startDate = startDate;
  }


  public FinancialsRequestBody endDate(LocalDate endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * The end date requested for a given date range in **YYYY-MM-DD** format. If left blank, the API will default to previous close. Future dates (T+1) are not accepted in this endpoint. 
   * @return endDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "Tue Dec 31 00:00:00 UTC 2019", value = "The end date requested for a given date range in **YYYY-MM-DD** format. If left blank, the API will default to previous close. Future dates (T+1) are not accepted in this endpoint. ")
  @JsonProperty(JSON_PROPERTY_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getEndDate() {
    return endDate;
  }


  @JsonProperty(JSON_PROPERTY_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndDate(LocalDate endDate) {
    this.endDate = endDate;
  }


  /**
   * Return true if this FinancialsRequestBody object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FinancialsRequestBody financialsRequestBody = (FinancialsRequestBody) o;
    return Objects.equals(this.ids, financialsRequestBody.ids) &&
        Objects.equals(this.metrics, financialsRequestBody.metrics) &&
        Objects.equals(this.startDate, financialsRequestBody.startDate) &&
        Objects.equals(this.endDate, financialsRequestBody.endDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ids, metrics, startDate, endDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FinancialsRequestBody {\n");
    sb.append("    ids: ").append(toIndentedString(ids)).append("\n");
    sb.append("    metrics: ").append(toIndentedString(metrics)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

