/*
 * FactSet Private Company API
 * FactSet Private Company API encompasses Private Company Financials and includes some Private Company non-periodic data. Additional Private Company firmographics can be found in the FactSet Entity API. <p><b>Rate limit is set to 10 requests per second and 10 concurrent requests per user</b>.</p> 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.factset.sdk.FactSetPrivateCompany.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.factset.sdk.FactSetPrivateCompany.JSON;


/**
 * Non periodic request body elements
 */
@ApiModel(description = "Non periodic request body elements")
@JsonPropertyOrder({
  NonPeriodicRequestBody.JSON_PROPERTY_IDS,
  NonPeriodicRequestBody.JSON_PROPERTY_METRICS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class NonPeriodicRequestBody implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_IDS = "ids";
  private java.util.List<String> ids = new java.util.ArrayList<>();

  public static final String JSON_PROPERTY_METRICS = "metrics";
  private java.util.List<String> metrics = new java.util.ArrayList<>();

  public NonPeriodicRequestBody() { 
  }

  @JsonCreator
  public NonPeriodicRequestBody(
    @JsonProperty(value=JSON_PROPERTY_IDS, required=true) java.util.List<String> ids, 
    @JsonProperty(value=JSON_PROPERTY_METRICS, required=true) java.util.List<String> metrics
  ) {
    this();
    this.ids = ids;
    this.metrics = metrics;
  }

  public NonPeriodicRequestBody ids(java.util.List<String> ids) {
    this.ids = ids;
    return this;
  }

  public NonPeriodicRequestBody addIdsItem(String idsItem) {
    this.ids.add(idsItem);
    return this;
  }

   /**
   * Security or Entity identifiers. 
   * @return ids
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "{\"oneId\":{\"summary\":\"One security or entity identifier\",\"value\":[\"0H3R4Y-E\"]},\"multipleIds\":{\"summary\":\"Multiple security or entity identifiers\",\"value\":[\"0H3R4Y-E\",\"0G3F5Z-E\",\"00DK61-E\"]}}", required = true, value = "Security or Entity identifiers. ")
  @JsonProperty(JSON_PROPERTY_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public java.util.List<String> getIds() {
    return ids;
  }


  @JsonProperty(JSON_PROPERTY_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIds(java.util.List<String> ids) {
    this.ids = ids;
  }


  public NonPeriodicRequestBody metrics(java.util.List<String> metrics) {
    this.metrics = metrics;
    return this;
  }

  public NonPeriodicRequestBody addMetricsItem(String metricsItem) {
    this.metrics.add(metricsItem);
    return this;
  }

   /**
   * Private Company Non-Periodic Metrics. 
   * @return metrics
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "{\"oneNonPeriodicMetric\":{\"summary\":\"One non-periodic metric\",\"value\":[\"FPE_AMT_RAISED\"]},\"multipleNonPeriodicMetrics\":{\"summary\":\"Multiple non-periodic metrics\",\"value\":[\"FPE_AMT_RAISED\",\"FPD_CEO_CURR\"]}}", required = true, value = "Private Company Non-Periodic Metrics. ")
  @JsonProperty(JSON_PROPERTY_METRICS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public java.util.List<String> getMetrics() {
    return metrics;
  }


  @JsonProperty(JSON_PROPERTY_METRICS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMetrics(java.util.List<String> metrics) {
    this.metrics = metrics;
  }


  /**
   * Return true if this NonPeriodicRequestBody object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NonPeriodicRequestBody nonPeriodicRequestBody = (NonPeriodicRequestBody) o;
    return Objects.equals(this.ids, nonPeriodicRequestBody.ids) &&
        Objects.equals(this.metrics, nonPeriodicRequestBody.metrics);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ids, metrics);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NonPeriodicRequestBody {\n");
    sb.append("    ids: ").append(toIndentedString(ids)).append("\n");
    sb.append("    metrics: ").append(toIndentedString(metrics)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

