"""
    ID Lookup API

    The ID Lookup API is a fuzzy search service that allows users to resolve symbols but are unable to find them elsewhere. The ID Lookup API allows users to search for entities in a wide variety of ways including, but not limited to, tickers, CUSIPs, URLs, a companyâ€™s brands, names and descriptions. The API does not require a complete query and will return different lists of results with each additional character, which enables users to iterate and adjust queries to return the desired results. Each search query returns a list of suggestions that can include every entity type offered by the API based on a matching and ranking algorithm.   The API response returns multiple different symbols that map to both internal FactSet identifiers like security or entity IDs as well as external identifiers like exchange tickers, Morningstar symbols and ISINs. This gives users flexibility in mapping identifiers across the FactSet universe.  # noqa: E501

    The version of the OpenAPI document: 2.0.0
    Contact: api@factset.com
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401
from multiprocessing.pool import ApplyResult
import typing

from fds.sdk.IDLookup.api_client import ApiClient, Endpoint as _Endpoint
from fds.sdk.IDLookup.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from fds.sdk.IDLookup.exceptions import ApiException
from fds.sdk.IDLookup.model.error_response import ErrorResponse
from fds.sdk.IDLookup.model.helper_endpoint import HelperEndpoint
from fds.sdk.IDLookup.model.lookup_request import LookupRequest
from fds.sdk.IDLookup.model.lookup_response import LookupResponse





class FactSetIDLookupApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

        self.helper_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (HelperEndpoint,), 400: (ErrorResponse,), 401: (ErrorResponse,), 403: (ErrorResponse,), 429: (ErrorResponse,), 500: (ErrorResponse,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/metadata/fields/list-by-dataset',
                'operation_id': 'helper',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'dataset',
                ],
                'required': [
                    'dataset',
                ],
                'nullable': [
                ],
                'enum': [
                    'dataset',
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                    ('dataset',): {

                        "EQUITIES": "equities",
                        "BANKLOANS": "bankLoans",
                        "COMMODITIES": "commodities",
                        "CEPBONDS": "cepBonds",
                        "COUNTRIES": "countries",
                        "DEALS": "deals",
                        "ECONOMICREPORTS": "economicReports",
                        "ECONOMICSERIES": "economicSeries",
                        "EQUITIESREALTIME": "equitiesRealTime",
                        "ETFS": "etfs",
                        "ETFSREALTIME": "etfsRealTime",
                        "EXCHANGERATESREALTIME": "exchangeRatesRealTime",
                        "BONDS": "bonds",
                        "FOREX": "forex",
                        "FUTURES": "futures",
                        "INDICES": "indices",
                        "INDICESREALTIME": "indicesRealTime",
                        "INDUSTRIES": "industries",
                        "MARKITLOANS": "markitLoans",
                        "MUTUALFUNDS": "mutualFunds",
                        "MUTUALFUNDSREALTIME": "mutualFundsRealTime",
                        "OWNERSHIPHOLDERS": "ownershipHolders",
                        "PEOPLE": "people",
                        "PRIVATECOMPANIES": "privateCompanies",
                        "PEVCFIRMS": "pevcFirms",
                        "PEVCFUNDS": "pevcFunds",
                        "REGIONS": "regions",
                        "YIELDS": "yields",
                        "OPTIONS": "options"
                    },
                },
                'openapi_types': {
                    'dataset':
                        (str,),
                },
                'attribute_map': {
                    'dataset': 'dataset',
                },
                'location_map': {
                    'dataset': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.search_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (LookupResponse,), 400: (ErrorResponse,), 401: (ErrorResponse,), 403: (ErrorResponse,), 429: (ErrorResponse,), 500: (ErrorResponse,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/lookup',
                'operation_id': 'search',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'lookup_request',
                ],
                'required': [
                    'lookup_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'lookup_request':
                        (LookupRequest,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'lookup_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )


    @staticmethod
    def apply_kwargs_defaults(kwargs, return_http_data_only, async_req):
        kwargs["async_req"] = async_req
        kwargs["_return_http_data_only"] = return_http_data_only
        kwargs["_preload_content"] = kwargs.get("_preload_content", True)
        kwargs["_request_timeout"] = kwargs.get("_request_timeout", None)
        kwargs["_check_input_type"] = kwargs.get("_check_input_type", True)
        kwargs["_check_return_type"] = kwargs.get("_check_return_type", True)
        kwargs["_spec_property_naming"] = kwargs.get("_spec_property_naming", False)
        kwargs["_content_type"] = kwargs.get("_content_type")
        kwargs["_host_index"] = kwargs.get("_host_index")


    def helper(
        self,
        dataset,
        **kwargs
    ) -> HelperEndpoint:
        """Helper endpoint offering a list of supported fields and values to filter a requested dataset.  # noqa: E501

        By querying this helper endpoint, users can retrieve a comprehensive list of supported fields, each associated with its permissible values. This functionality enhances the usability of the API by empowering users to construct precise queries tailored to their requirements when accessing the requested dataset.   # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            dataset (str): Type of dataset.

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            HelperEndpoint
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['dataset'] = \
            dataset
        return self.helper_endpoint.call_with_http_info(**kwargs)

    def helper_with_http_info(
        self,
        dataset,
        **kwargs
    ) -> typing.Tuple[HelperEndpoint, int, typing.MutableMapping]:
        """Helper endpoint offering a list of supported fields and values to filter a requested dataset.  # noqa: E501

        By querying this helper endpoint, users can retrieve a comprehensive list of supported fields, each associated with its permissible values. This functionality enhances the usability of the API by empowering users to construct precise queries tailored to their requirements when accessing the requested dataset.   # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            dataset (str): Type of dataset.

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            HelperEndpoint
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['dataset'] = \
            dataset
        return self.helper_endpoint.call_with_http_info(**kwargs)

    def helper_async(
        self,
        dataset,
        **kwargs
    ) -> "ApplyResult[HelperEndpoint]":
        """Helper endpoint offering a list of supported fields and values to filter a requested dataset.  # noqa: E501

        By querying this helper endpoint, users can retrieve a comprehensive list of supported fields, each associated with its permissible values. This functionality enhances the usability of the API by empowering users to construct precise queries tailored to their requirements when accessing the requested dataset.   # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            dataset (str): Type of dataset.

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[HelperEndpoint]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['dataset'] = \
            dataset
        return self.helper_endpoint.call_with_http_info(**kwargs)

    def helper_with_http_info_async(
        self,
        dataset,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[HelperEndpoint, int, typing.MutableMapping]]":
        """Helper endpoint offering a list of supported fields and values to filter a requested dataset.  # noqa: E501

        By querying this helper endpoint, users can retrieve a comprehensive list of supported fields, each associated with its permissible values. This functionality enhances the usability of the API by empowering users to construct precise queries tailored to their requirements when accessing the requested dataset.   # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            dataset (str): Type of dataset.

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(HelperEndpoint, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['dataset'] = \
            dataset
        return self.helper_endpoint.call_with_http_info(**kwargs)


    def search(
        self,
        lookup_request,
        **kwargs
    ) -> LookupResponse:
        """Search functionality to return tickers, company names, and unique identifiers for FactSet data.  # noqa: E501

        This functionality enables users to input search queries, such as company names or keywords, and receive results containing matching entities along with their associated tickers and unique identifiers.   Essentially, it provides a streamlined means of locating specific data points within the FactSet database, facilitating the efficient retrieval of essential information related to companies or financial instruments.  The dataset names provided in the table below can be used in the request body.  | Dataset Name                | Dataset Description                 | ID Type           | ID Example   | |-----------------------------|-------------------------------------|-------------------|--------------| | *`bankLoans`*               | Bank Loans                          | symbol            | LX056750     | | *`commodities`*             | Commodities                         | symbol            | DUBAIM-FDS   | | *`cepBonds`*                | Continuous Evaluated Pricing        | tickerExchange    | N3ZWW5.FI-CEP| | *`countries`*               | Countries                           | symbol            | CC_MA        | | *`deals`*                   | Deals                               | symbol            | 4161715      | | *`economicReports`*             | Economic Reports                    | symbol            | USKEY-ECON   | | *`economicSeries`*          | Economic Series                     | symbol            | EUZ.GDPR     | | *`equities`*                | Equities                            | tickerRegion      | AAPL-US      | | *`equitiesRealTime`*        | Equities RealTime                   | tickerExchange    | M-BKK        | | *`etfs`*                    | ETFs                                | tickerRegion      | ACWI-US      | | *`etfsRealTime`*            | ETFs RealTime                       | symbol            | JPNA | *`exchangeRatesRealTime`*   | Exchange Rates RealTime             | symbol            | AUDUSD-FX1   | | *`bonds`*                   | Fixed Income                        | symbol            | XS2027359756 | | *`forex`*                   | Foreign Exchange                    | symbol            | USDARS       | | *`futures`*                 | Futures (continuous)                | symbol            | AP00-SFE     | | *`indices`*                 | Indices                             | symbol            | 186745       | | *`indicesRealTime`*         | Indices RealTime                    | symbol            | BB3MUS.A-PSE | | *`industries`*              | Industries                          | symbol            | FI1225R1     | | *`markitLoans`*             | Markit Loans                        | symbol            | LX111044-USA | | *`mutualFunds`*             | Mutual Funds                        | tickerRegion      | AMECX-US     | | *`mutualFundsRealTime`*     | Mutual Funds RealTime               | symbol            | 015414       | | *`ownershipHolders`*        | Ownership Holders                   | symbol            | F5102330     | | *`people`*                  | People                              | entityId          | 065SLB-E     | | *`privateCompanies`*        | Private Companies                   | entityId          | 0CBD2D-E     | | *`pevcFirms`*               | Private Equity/Venture Capital Firms| entityId          | 000BKX-E     | | *`pevcFunds`*               | Private Equity/Venture Capital Funds| entityId          | 0WCD0X-E     | | *`regions`*                 | Region                              | symbol            | RG_AMER      | | *`yields`*                  | Yields                              | symbol            | TRYAU10Y-FDS | | *`options`*                 | options                             | tickerExchange           | A#P1924C100000-USA|   # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            lookup_request (LookupRequest): Request body to lookup any FactSet identifiers.

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            LookupResponse
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['lookup_request'] = \
            lookup_request
        return self.search_endpoint.call_with_http_info(**kwargs)

    def search_with_http_info(
        self,
        lookup_request,
        **kwargs
    ) -> typing.Tuple[LookupResponse, int, typing.MutableMapping]:
        """Search functionality to return tickers, company names, and unique identifiers for FactSet data.  # noqa: E501

        This functionality enables users to input search queries, such as company names or keywords, and receive results containing matching entities along with their associated tickers and unique identifiers.   Essentially, it provides a streamlined means of locating specific data points within the FactSet database, facilitating the efficient retrieval of essential information related to companies or financial instruments.  The dataset names provided in the table below can be used in the request body.  | Dataset Name                | Dataset Description                 | ID Type           | ID Example   | |-----------------------------|-------------------------------------|-------------------|--------------| | *`bankLoans`*               | Bank Loans                          | symbol            | LX056750     | | *`commodities`*             | Commodities                         | symbol            | DUBAIM-FDS   | | *`cepBonds`*                | Continuous Evaluated Pricing        | tickerExchange    | N3ZWW5.FI-CEP| | *`countries`*               | Countries                           | symbol            | CC_MA        | | *`deals`*                   | Deals                               | symbol            | 4161715      | | *`economicReports`*             | Economic Reports                    | symbol            | USKEY-ECON   | | *`economicSeries`*          | Economic Series                     | symbol            | EUZ.GDPR     | | *`equities`*                | Equities                            | tickerRegion      | AAPL-US      | | *`equitiesRealTime`*        | Equities RealTime                   | tickerExchange    | M-BKK        | | *`etfs`*                    | ETFs                                | tickerRegion      | ACWI-US      | | *`etfsRealTime`*            | ETFs RealTime                       | symbol            | JPNA | *`exchangeRatesRealTime`*   | Exchange Rates RealTime             | symbol            | AUDUSD-FX1   | | *`bonds`*                   | Fixed Income                        | symbol            | XS2027359756 | | *`forex`*                   | Foreign Exchange                    | symbol            | USDARS       | | *`futures`*                 | Futures (continuous)                | symbol            | AP00-SFE     | | *`indices`*                 | Indices                             | symbol            | 186745       | | *`indicesRealTime`*         | Indices RealTime                    | symbol            | BB3MUS.A-PSE | | *`industries`*              | Industries                          | symbol            | FI1225R1     | | *`markitLoans`*             | Markit Loans                        | symbol            | LX111044-USA | | *`mutualFunds`*             | Mutual Funds                        | tickerRegion      | AMECX-US     | | *`mutualFundsRealTime`*     | Mutual Funds RealTime               | symbol            | 015414       | | *`ownershipHolders`*        | Ownership Holders                   | symbol            | F5102330     | | *`people`*                  | People                              | entityId          | 065SLB-E     | | *`privateCompanies`*        | Private Companies                   | entityId          | 0CBD2D-E     | | *`pevcFirms`*               | Private Equity/Venture Capital Firms| entityId          | 000BKX-E     | | *`pevcFunds`*               | Private Equity/Venture Capital Funds| entityId          | 0WCD0X-E     | | *`regions`*                 | Region                              | symbol            | RG_AMER      | | *`yields`*                  | Yields                              | symbol            | TRYAU10Y-FDS | | *`options`*                 | options                             | tickerExchange           | A#P1924C100000-USA|   # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            lookup_request (LookupRequest): Request body to lookup any FactSet identifiers.

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            LookupResponse
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['lookup_request'] = \
            lookup_request
        return self.search_endpoint.call_with_http_info(**kwargs)

    def search_async(
        self,
        lookup_request,
        **kwargs
    ) -> "ApplyResult[LookupResponse]":
        """Search functionality to return tickers, company names, and unique identifiers for FactSet data.  # noqa: E501

        This functionality enables users to input search queries, such as company names or keywords, and receive results containing matching entities along with their associated tickers and unique identifiers.   Essentially, it provides a streamlined means of locating specific data points within the FactSet database, facilitating the efficient retrieval of essential information related to companies or financial instruments.  The dataset names provided in the table below can be used in the request body.  | Dataset Name                | Dataset Description                 | ID Type           | ID Example   | |-----------------------------|-------------------------------------|-------------------|--------------| | *`bankLoans`*               | Bank Loans                          | symbol            | LX056750     | | *`commodities`*             | Commodities                         | symbol            | DUBAIM-FDS   | | *`cepBonds`*                | Continuous Evaluated Pricing        | tickerExchange    | N3ZWW5.FI-CEP| | *`countries`*               | Countries                           | symbol            | CC_MA        | | *`deals`*                   | Deals                               | symbol            | 4161715      | | *`economicReports`*             | Economic Reports                    | symbol            | USKEY-ECON   | | *`economicSeries`*          | Economic Series                     | symbol            | EUZ.GDPR     | | *`equities`*                | Equities                            | tickerRegion      | AAPL-US      | | *`equitiesRealTime`*        | Equities RealTime                   | tickerExchange    | M-BKK        | | *`etfs`*                    | ETFs                                | tickerRegion      | ACWI-US      | | *`etfsRealTime`*            | ETFs RealTime                       | symbol            | JPNA | *`exchangeRatesRealTime`*   | Exchange Rates RealTime             | symbol            | AUDUSD-FX1   | | *`bonds`*                   | Fixed Income                        | symbol            | XS2027359756 | | *`forex`*                   | Foreign Exchange                    | symbol            | USDARS       | | *`futures`*                 | Futures (continuous)                | symbol            | AP00-SFE     | | *`indices`*                 | Indices                             | symbol            | 186745       | | *`indicesRealTime`*         | Indices RealTime                    | symbol            | BB3MUS.A-PSE | | *`industries`*              | Industries                          | symbol            | FI1225R1     | | *`markitLoans`*             | Markit Loans                        | symbol            | LX111044-USA | | *`mutualFunds`*             | Mutual Funds                        | tickerRegion      | AMECX-US     | | *`mutualFundsRealTime`*     | Mutual Funds RealTime               | symbol            | 015414       | | *`ownershipHolders`*        | Ownership Holders                   | symbol            | F5102330     | | *`people`*                  | People                              | entityId          | 065SLB-E     | | *`privateCompanies`*        | Private Companies                   | entityId          | 0CBD2D-E     | | *`pevcFirms`*               | Private Equity/Venture Capital Firms| entityId          | 000BKX-E     | | *`pevcFunds`*               | Private Equity/Venture Capital Funds| entityId          | 0WCD0X-E     | | *`regions`*                 | Region                              | symbol            | RG_AMER      | | *`yields`*                  | Yields                              | symbol            | TRYAU10Y-FDS | | *`options`*                 | options                             | tickerExchange           | A#P1924C100000-USA|   # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            lookup_request (LookupRequest): Request body to lookup any FactSet identifiers.

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[LookupResponse]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['lookup_request'] = \
            lookup_request
        return self.search_endpoint.call_with_http_info(**kwargs)

    def search_with_http_info_async(
        self,
        lookup_request,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[LookupResponse, int, typing.MutableMapping]]":
        """Search functionality to return tickers, company names, and unique identifiers for FactSet data.  # noqa: E501

        This functionality enables users to input search queries, such as company names or keywords, and receive results containing matching entities along with their associated tickers and unique identifiers.   Essentially, it provides a streamlined means of locating specific data points within the FactSet database, facilitating the efficient retrieval of essential information related to companies or financial instruments.  The dataset names provided in the table below can be used in the request body.  | Dataset Name                | Dataset Description                 | ID Type           | ID Example   | |-----------------------------|-------------------------------------|-------------------|--------------| | *`bankLoans`*               | Bank Loans                          | symbol            | LX056750     | | *`commodities`*             | Commodities                         | symbol            | DUBAIM-FDS   | | *`cepBonds`*                | Continuous Evaluated Pricing        | tickerExchange    | N3ZWW5.FI-CEP| | *`countries`*               | Countries                           | symbol            | CC_MA        | | *`deals`*                   | Deals                               | symbol            | 4161715      | | *`economicReports`*             | Economic Reports                    | symbol            | USKEY-ECON   | | *`economicSeries`*          | Economic Series                     | symbol            | EUZ.GDPR     | | *`equities`*                | Equities                            | tickerRegion      | AAPL-US      | | *`equitiesRealTime`*        | Equities RealTime                   | tickerExchange    | M-BKK        | | *`etfs`*                    | ETFs                                | tickerRegion      | ACWI-US      | | *`etfsRealTime`*            | ETFs RealTime                       | symbol            | JPNA | *`exchangeRatesRealTime`*   | Exchange Rates RealTime             | symbol            | AUDUSD-FX1   | | *`bonds`*                   | Fixed Income                        | symbol            | XS2027359756 | | *`forex`*                   | Foreign Exchange                    | symbol            | USDARS       | | *`futures`*                 | Futures (continuous)                | symbol            | AP00-SFE     | | *`indices`*                 | Indices                             | symbol            | 186745       | | *`indicesRealTime`*         | Indices RealTime                    | symbol            | BB3MUS.A-PSE | | *`industries`*              | Industries                          | symbol            | FI1225R1     | | *`markitLoans`*             | Markit Loans                        | symbol            | LX111044-USA | | *`mutualFunds`*             | Mutual Funds                        | tickerRegion      | AMECX-US     | | *`mutualFundsRealTime`*     | Mutual Funds RealTime               | symbol            | 015414       | | *`ownershipHolders`*        | Ownership Holders                   | symbol            | F5102330     | | *`people`*                  | People                              | entityId          | 065SLB-E     | | *`privateCompanies`*        | Private Companies                   | entityId          | 0CBD2D-E     | | *`pevcFirms`*               | Private Equity/Venture Capital Firms| entityId          | 000BKX-E     | | *`pevcFunds`*               | Private Equity/Venture Capital Funds| entityId          | 0WCD0X-E     | | *`regions`*                 | Region                              | symbol            | RG_AMER      | | *`yields`*                  | Yields                              | symbol            | TRYAU10Y-FDS | | *`options`*                 | options                             | tickerExchange           | A#P1924C100000-USA|   # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            lookup_request (LookupRequest): Request body to lookup any FactSet identifiers.

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(LookupResponse, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['lookup_request'] = \
            lookup_request
        return self.search_endpoint.call_with_http_info(**kwargs)


