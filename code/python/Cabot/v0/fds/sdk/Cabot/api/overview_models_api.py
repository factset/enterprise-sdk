"""
    Cabot Models API

    Cabot Models API  # noqa: E501

    The version of the OpenAPI document: 0.4.0
    Contact: api@factset.com
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401
from multiprocessing.pool import ApplyResult
import typing

from fds.sdk.Cabot.api_client import ApiClient, Endpoint as _Endpoint
from fds.sdk.Cabot.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from fds.sdk.Cabot.exceptions import ApiException
from fds.sdk.Cabot.model.client_error_response import ClientErrorResponse
from fds.sdk.Cabot.model.construction_request_body_root import ConstructionRequestBodyRoot
from fds.sdk.Cabot.model.construction_response_root import ConstructionResponseRoot
from fds.sdk.Cabot.model.hit_rate_request_body_root import HitRateRequestBodyRoot
from fds.sdk.Cabot.model.hit_rate_response_root import HitRateResponseRoot
from fds.sdk.Cabot.model.results_request_body_root import ResultsRequestBodyRoot
from fds.sdk.Cabot.model.results_response_root import ResultsResponseRoot
from fds.sdk.Cabot.model.skills_request_body_root import SkillsRequestBodyRoot
from fds.sdk.Cabot.model.skills_response_root import SkillsResponseRoot





class OverviewModelsApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

        self.get_construction_model_analytic_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (ConstructionResponseRoot,), 400: (ClientErrorResponse,), 404: (ClientErrorResponse,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/models/construction',
                'operation_id': 'get_construction_model_analytic',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'construction_request_body_root',
                ],
                'required': [
                    'construction_request_body_root',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'construction_request_body_root':
                        (ConstructionRequestBodyRoot,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'construction_request_body_root': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )

        self.get_hit_rate_model_analytic_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (HitRateResponseRoot,), 400: (ClientErrorResponse,), 404: (ClientErrorResponse,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/models/hit-rate',
                'operation_id': 'get_hit_rate_model_analytic',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'hit_rate_request_body_root',
                ],
                'required': [
                    'hit_rate_request_body_root',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'hit_rate_request_body_root':
                        (HitRateRequestBodyRoot,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'hit_rate_request_body_root': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )

        self.get_results_model_analytic_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (ResultsResponseRoot,), 400: (ClientErrorResponse,), 404: (ClientErrorResponse,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/models/results',
                'operation_id': 'get_results_model_analytic',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'results_request_body_root',
                ],
                'required': [
                    'results_request_body_root',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'results_request_body_root':
                        (ResultsRequestBodyRoot,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'results_request_body_root': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )

        self.get_skills_model_analytic_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (SkillsResponseRoot,), 400: (ClientErrorResponse,), 404: (ClientErrorResponse,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/models/skills',
                'operation_id': 'get_skills_model_analytic',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'skills_request_body_root',
                ],
                'required': [
                    'skills_request_body_root',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'skills_request_body_root':
                        (SkillsRequestBodyRoot,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'skills_request_body_root': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )


    @staticmethod
    def apply_kwargs_defaults(kwargs, return_http_data_only, async_req):
        kwargs["async_req"] = async_req
        kwargs["_return_http_data_only"] = return_http_data_only
        kwargs["_preload_content"] = kwargs.get("_preload_content", True)
        kwargs["_request_timeout"] = kwargs.get("_request_timeout", None)
        kwargs["_check_input_type"] = kwargs.get("_check_input_type", True)
        kwargs["_check_return_type"] = kwargs.get("_check_return_type", True)
        kwargs["_spec_property_naming"] = kwargs.get("_spec_property_naming", False)
        kwargs["_content_type"] = kwargs.get("_content_type")
        kwargs["_host_index"] = kwargs.get("_host_index")


    def get_construction_model_analytic(
        self,
        construction_request_body_root,
        **kwargs
    ) -> ConstructionResponseRoot:
        """Cabot main path for Construction API  # noqa: E501

        Cabot main path for Construction API  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            construction_request_body_root (ConstructionRequestBodyRoot):

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ConstructionResponseRoot
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['construction_request_body_root'] = \
            construction_request_body_root
        return self.get_construction_model_analytic_endpoint.call_with_http_info(**kwargs)

    def get_construction_model_analytic_with_http_info(
        self,
        construction_request_body_root,
        **kwargs
    ) -> typing.Tuple[ConstructionResponseRoot, int, typing.MutableMapping]:
        """Cabot main path for Construction API  # noqa: E501

        Cabot main path for Construction API  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            construction_request_body_root (ConstructionRequestBodyRoot):

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ConstructionResponseRoot
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['construction_request_body_root'] = \
            construction_request_body_root
        return self.get_construction_model_analytic_endpoint.call_with_http_info(**kwargs)

    def get_construction_model_analytic_async(
        self,
        construction_request_body_root,
        **kwargs
    ) -> "ApplyResult[ConstructionResponseRoot]":
        """Cabot main path for Construction API  # noqa: E501

        Cabot main path for Construction API  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            construction_request_body_root (ConstructionRequestBodyRoot):

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[ConstructionResponseRoot]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['construction_request_body_root'] = \
            construction_request_body_root
        return self.get_construction_model_analytic_endpoint.call_with_http_info(**kwargs)

    def get_construction_model_analytic_with_http_info_async(
        self,
        construction_request_body_root,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[ConstructionResponseRoot, int, typing.MutableMapping]]":
        """Cabot main path for Construction API  # noqa: E501

        Cabot main path for Construction API  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            construction_request_body_root (ConstructionRequestBodyRoot):

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(ConstructionResponseRoot, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['construction_request_body_root'] = \
            construction_request_body_root
        return self.get_construction_model_analytic_endpoint.call_with_http_info(**kwargs)


    def get_hit_rate_model_analytic(
        self,
        hit_rate_request_body_root,
        **kwargs
    ) -> HitRateResponseRoot:
        """Cabot main path for Hit Rate API  # noqa: E501

        Cabot main path for Hit Rate API  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            hit_rate_request_body_root (HitRateRequestBodyRoot):

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            HitRateResponseRoot
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['hit_rate_request_body_root'] = \
            hit_rate_request_body_root
        return self.get_hit_rate_model_analytic_endpoint.call_with_http_info(**kwargs)

    def get_hit_rate_model_analytic_with_http_info(
        self,
        hit_rate_request_body_root,
        **kwargs
    ) -> typing.Tuple[HitRateResponseRoot, int, typing.MutableMapping]:
        """Cabot main path for Hit Rate API  # noqa: E501

        Cabot main path for Hit Rate API  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            hit_rate_request_body_root (HitRateRequestBodyRoot):

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            HitRateResponseRoot
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['hit_rate_request_body_root'] = \
            hit_rate_request_body_root
        return self.get_hit_rate_model_analytic_endpoint.call_with_http_info(**kwargs)

    def get_hit_rate_model_analytic_async(
        self,
        hit_rate_request_body_root,
        **kwargs
    ) -> "ApplyResult[HitRateResponseRoot]":
        """Cabot main path for Hit Rate API  # noqa: E501

        Cabot main path for Hit Rate API  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            hit_rate_request_body_root (HitRateRequestBodyRoot):

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[HitRateResponseRoot]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['hit_rate_request_body_root'] = \
            hit_rate_request_body_root
        return self.get_hit_rate_model_analytic_endpoint.call_with_http_info(**kwargs)

    def get_hit_rate_model_analytic_with_http_info_async(
        self,
        hit_rate_request_body_root,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[HitRateResponseRoot, int, typing.MutableMapping]]":
        """Cabot main path for Hit Rate API  # noqa: E501

        Cabot main path for Hit Rate API  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            hit_rate_request_body_root (HitRateRequestBodyRoot):

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(HitRateResponseRoot, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['hit_rate_request_body_root'] = \
            hit_rate_request_body_root
        return self.get_hit_rate_model_analytic_endpoint.call_with_http_info(**kwargs)


    def get_results_model_analytic(
        self,
        results_request_body_root,
        **kwargs
    ) -> ResultsResponseRoot:
        """Cabot main path for Results API  # noqa: E501

        Cabot main path for Results API.     Describes portfolio returns in comparison to its benchmark. A positive value indicates excess returns while a negative value indicates underperformance.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            results_request_body_root (ResultsRequestBodyRoot):

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ResultsResponseRoot
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['results_request_body_root'] = \
            results_request_body_root
        return self.get_results_model_analytic_endpoint.call_with_http_info(**kwargs)

    def get_results_model_analytic_with_http_info(
        self,
        results_request_body_root,
        **kwargs
    ) -> typing.Tuple[ResultsResponseRoot, int, typing.MutableMapping]:
        """Cabot main path for Results API  # noqa: E501

        Cabot main path for Results API.     Describes portfolio returns in comparison to its benchmark. A positive value indicates excess returns while a negative value indicates underperformance.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            results_request_body_root (ResultsRequestBodyRoot):

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ResultsResponseRoot
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['results_request_body_root'] = \
            results_request_body_root
        return self.get_results_model_analytic_endpoint.call_with_http_info(**kwargs)

    def get_results_model_analytic_async(
        self,
        results_request_body_root,
        **kwargs
    ) -> "ApplyResult[ResultsResponseRoot]":
        """Cabot main path for Results API  # noqa: E501

        Cabot main path for Results API.     Describes portfolio returns in comparison to its benchmark. A positive value indicates excess returns while a negative value indicates underperformance.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            results_request_body_root (ResultsRequestBodyRoot):

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[ResultsResponseRoot]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['results_request_body_root'] = \
            results_request_body_root
        return self.get_results_model_analytic_endpoint.call_with_http_info(**kwargs)

    def get_results_model_analytic_with_http_info_async(
        self,
        results_request_body_root,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[ResultsResponseRoot, int, typing.MutableMapping]]":
        """Cabot main path for Results API  # noqa: E501

        Cabot main path for Results API.     Describes portfolio returns in comparison to its benchmark. A positive value indicates excess returns while a negative value indicates underperformance.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            results_request_body_root (ResultsRequestBodyRoot):

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(ResultsResponseRoot, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['results_request_body_root'] = \
            results_request_body_root
        return self.get_results_model_analytic_endpoint.call_with_http_info(**kwargs)


    def get_skills_model_analytic(
        self,
        skills_request_body_root,
        **kwargs
    ) -> SkillsResponseRoot:
        """Cabot main path for Skills API  # noqa: E501

        Cabot main path for Skills API  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            skills_request_body_root (SkillsRequestBodyRoot):

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            SkillsResponseRoot
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['skills_request_body_root'] = \
            skills_request_body_root
        return self.get_skills_model_analytic_endpoint.call_with_http_info(**kwargs)

    def get_skills_model_analytic_with_http_info(
        self,
        skills_request_body_root,
        **kwargs
    ) -> typing.Tuple[SkillsResponseRoot, int, typing.MutableMapping]:
        """Cabot main path for Skills API  # noqa: E501

        Cabot main path for Skills API  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            skills_request_body_root (SkillsRequestBodyRoot):

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            SkillsResponseRoot
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['skills_request_body_root'] = \
            skills_request_body_root
        return self.get_skills_model_analytic_endpoint.call_with_http_info(**kwargs)

    def get_skills_model_analytic_async(
        self,
        skills_request_body_root,
        **kwargs
    ) -> "ApplyResult[SkillsResponseRoot]":
        """Cabot main path for Skills API  # noqa: E501

        Cabot main path for Skills API  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            skills_request_body_root (SkillsRequestBodyRoot):

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[SkillsResponseRoot]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['skills_request_body_root'] = \
            skills_request_body_root
        return self.get_skills_model_analytic_endpoint.call_with_http_info(**kwargs)

    def get_skills_model_analytic_with_http_info_async(
        self,
        skills_request_body_root,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[SkillsResponseRoot, int, typing.MutableMapping]]":
        """Cabot main path for Skills API  # noqa: E501

        Cabot main path for Skills API  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            skills_request_body_root (SkillsRequestBodyRoot):

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(SkillsResponseRoot, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['skills_request_body_root'] = \
            skills_request_body_root
        return self.get_skills_model_analytic_endpoint.call_with_http_info(**kwargs)


