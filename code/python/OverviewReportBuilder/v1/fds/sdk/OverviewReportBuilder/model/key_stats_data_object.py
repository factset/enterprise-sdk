"""
    FactSet Overview Report Builder API

    Get relevant industry-specific data for high level analysis of public and private companies  # noqa: E501

    The version of the OpenAPI document: 1.1.0
    Contact: api@factset.com
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from fds.sdk.OverviewReportBuilder.model_utils import (  # noqa: F401
    ApiTypeError,
    ModelComposed,
    ModelNormal,
    ModelSimple,
    cached_property,
    change_keys_js_to_python,
    convert_js_args_to_python_args,
    date,
    datetime,
    file_type,
    none_type,
    validate_get_composed_info,
    OpenApiModel
)
from fds.sdk.OverviewReportBuilder.exceptions import ApiAttributeError


def lazy_import():
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity import KeyStatsDataObjectEntity
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_active_investors import KeyStatsDataObjectEntityActiveInvestors
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_annual_dividend import KeyStatsDataObjectEntityAnnualDividend
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_average_daily_vol import KeyStatsDataObjectEntityAverageDailyVol
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_average_daily_vol30_d import KeyStatsDataObjectEntityAverageDailyVol30D
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_average_rating import KeyStatsDataObjectEntityAverageRating
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_basic_shares import KeyStatsDataObjectEntityBasicShares
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_beta import KeyStatsDataObjectEntityBeta
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_branches import KeyStatsDataObjectEntityBranches
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_broker_contributors import KeyStatsDataObjectEntityBrokerContributors
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_circulating_supply import KeyStatsDataObjectEntityCirculatingSupply
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_diluted_market_cap import KeyStatsDataObjectEntityDilutedMarketCap
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_diluted_shares import KeyStatsDataObjectEntityDilutedShares
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_dividend_yield import KeyStatsDataObjectEntityDividendYield
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_employees import KeyStatsDataObjectEntityEmployees
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_enterprise_value import KeyStatsDataObjectEntityEnterpriseValue
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_estimated_vc_raised import KeyStatsDataObjectEntityEstimatedVcRaised
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_ex_dividend_date import KeyStatsDataObjectEntityExDividendDate
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_first_date import KeyStatsDataObjectEntityFirstDate
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_first_funding import KeyStatsDataObjectEntityFirstFunding
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_float import KeyStatsDataObjectEntityFloat
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_funding_rounds import KeyStatsDataObjectEntityFundingRounds
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_gross_assets import KeyStatsDataObjectEntityGrossAssets
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_gross_premiums import KeyStatsDataObjectEntityGrossPremiums
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_institutional import KeyStatsDataObjectEntityInstitutional
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_last_funding import KeyStatsDataObjectEntityLastFunding
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_last_funding_round import KeyStatsDataObjectEntityLastFundingRound
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_latest_post_money_valuation import KeyStatsDataObjectEntityLatestPostMoneyValuation
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_lt_growth_rate import KeyStatsDataObjectEntityLtGrowthRate
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_market_cap import KeyStatsDataObjectEntityMarketCap
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_net_interest_income import KeyStatsDataObjectEntityNetInterestIncome
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_next_earnings import KeyStatsDataObjectEntityNextEarnings
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_open import KeyStatsDataObjectEntityOpen
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_premiums import KeyStatsDataObjectEntityPremiums
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_previous_close import KeyStatsDataObjectEntityPreviousClose
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_primary_id import KeyStatsDataObjectEntityPrimaryId
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_primary_ticker import KeyStatsDataObjectEntityPrimaryTicker
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_range52_week import KeyStatsDataObjectEntityRange52Week
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_revenue import KeyStatsDataObjectEntityRevenue
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_security_id import KeyStatsDataObjectEntitySecurityId
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_short_interest import KeyStatsDataObjectEntityShortInterest
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_target_price import KeyStatsDataObjectEntityTargetPrice
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_top10_institutional_holders import KeyStatsDataObjectEntityTop10InstitutionalHolders
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_total_deposits import KeyStatsDataObjectEntityTotalDeposits
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_total_investors import KeyStatsDataObjectEntityTotalInvestors
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_volume import KeyStatsDataObjectEntityVolume
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_entity_wacc import KeyStatsDataObjectEntityWacc
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_fund import KeyStatsDataObjectFund
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_fund_aum_fund_month import KeyStatsDataObjectFundAumFundMonth
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_fund_aum_share_daily import KeyStatsDataObjectFundAumShareDaily
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_fund_available_for_sale import KeyStatsDataObjectFundAvailableForSale
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_fund_average_spread import KeyStatsDataObjectFundAverageSpread
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_fund_currency_iso import KeyStatsDataObjectFundCurrencyIso
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_fund_daily_trading_vol import KeyStatsDataObjectFundDailyTradingVol
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_fund_distribution_yield import KeyStatsDataObjectFundDistributionYield
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_fund_esg_compliance import KeyStatsDataObjectFundEsgCompliance
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_fund_esg_objective import KeyStatsDataObjectFundEsgObjective
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_fund_expense_ratio import KeyStatsDataObjectFundExpenseRatio
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_fund_first_nav_record import KeyStatsDataObjectFundFirstNavRecord
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_fund_fund_flow_ytd import KeyStatsDataObjectFundFundFlowYTD
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_fund_inception_date_fund import KeyStatsDataObjectFundInceptionDateFund
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_fund_inception_date_share import KeyStatsDataObjectFundInceptionDateShare
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_fund_meta import KeyStatsDataObjectFundMeta
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_fund_outstanding_share import KeyStatsDataObjectFundOutstandingShare
    from fds.sdk.OverviewReportBuilder.model.key_stats_data_object_fund_sfdr_classification import KeyStatsDataObjectFundSfdrClassification
    globals()['KeyStatsDataObjectEntity'] = KeyStatsDataObjectEntity
    globals()['KeyStatsDataObjectEntityActiveInvestors'] = KeyStatsDataObjectEntityActiveInvestors
    globals()['KeyStatsDataObjectEntityAnnualDividend'] = KeyStatsDataObjectEntityAnnualDividend
    globals()['KeyStatsDataObjectEntityAverageDailyVol'] = KeyStatsDataObjectEntityAverageDailyVol
    globals()['KeyStatsDataObjectEntityAverageDailyVol30D'] = KeyStatsDataObjectEntityAverageDailyVol30D
    globals()['KeyStatsDataObjectEntityAverageRating'] = KeyStatsDataObjectEntityAverageRating
    globals()['KeyStatsDataObjectEntityBasicShares'] = KeyStatsDataObjectEntityBasicShares
    globals()['KeyStatsDataObjectEntityBeta'] = KeyStatsDataObjectEntityBeta
    globals()['KeyStatsDataObjectEntityBranches'] = KeyStatsDataObjectEntityBranches
    globals()['KeyStatsDataObjectEntityBrokerContributors'] = KeyStatsDataObjectEntityBrokerContributors
    globals()['KeyStatsDataObjectEntityCirculatingSupply'] = KeyStatsDataObjectEntityCirculatingSupply
    globals()['KeyStatsDataObjectEntityDilutedMarketCap'] = KeyStatsDataObjectEntityDilutedMarketCap
    globals()['KeyStatsDataObjectEntityDilutedShares'] = KeyStatsDataObjectEntityDilutedShares
    globals()['KeyStatsDataObjectEntityDividendYield'] = KeyStatsDataObjectEntityDividendYield
    globals()['KeyStatsDataObjectEntityEmployees'] = KeyStatsDataObjectEntityEmployees
    globals()['KeyStatsDataObjectEntityEnterpriseValue'] = KeyStatsDataObjectEntityEnterpriseValue
    globals()['KeyStatsDataObjectEntityEstimatedVcRaised'] = KeyStatsDataObjectEntityEstimatedVcRaised
    globals()['KeyStatsDataObjectEntityExDividendDate'] = KeyStatsDataObjectEntityExDividendDate
    globals()['KeyStatsDataObjectEntityFirstDate'] = KeyStatsDataObjectEntityFirstDate
    globals()['KeyStatsDataObjectEntityFirstFunding'] = KeyStatsDataObjectEntityFirstFunding
    globals()['KeyStatsDataObjectEntityFloat'] = KeyStatsDataObjectEntityFloat
    globals()['KeyStatsDataObjectEntityFundingRounds'] = KeyStatsDataObjectEntityFundingRounds
    globals()['KeyStatsDataObjectEntityGrossAssets'] = KeyStatsDataObjectEntityGrossAssets
    globals()['KeyStatsDataObjectEntityGrossPremiums'] = KeyStatsDataObjectEntityGrossPremiums
    globals()['KeyStatsDataObjectEntityInstitutional'] = KeyStatsDataObjectEntityInstitutional
    globals()['KeyStatsDataObjectEntityLastFunding'] = KeyStatsDataObjectEntityLastFunding
    globals()['KeyStatsDataObjectEntityLastFundingRound'] = KeyStatsDataObjectEntityLastFundingRound
    globals()['KeyStatsDataObjectEntityLatestPostMoneyValuation'] = KeyStatsDataObjectEntityLatestPostMoneyValuation
    globals()['KeyStatsDataObjectEntityLtGrowthRate'] = KeyStatsDataObjectEntityLtGrowthRate
    globals()['KeyStatsDataObjectEntityMarketCap'] = KeyStatsDataObjectEntityMarketCap
    globals()['KeyStatsDataObjectEntityNetInterestIncome'] = KeyStatsDataObjectEntityNetInterestIncome
    globals()['KeyStatsDataObjectEntityNextEarnings'] = KeyStatsDataObjectEntityNextEarnings
    globals()['KeyStatsDataObjectEntityOpen'] = KeyStatsDataObjectEntityOpen
    globals()['KeyStatsDataObjectEntityPremiums'] = KeyStatsDataObjectEntityPremiums
    globals()['KeyStatsDataObjectEntityPreviousClose'] = KeyStatsDataObjectEntityPreviousClose
    globals()['KeyStatsDataObjectEntityPrimaryId'] = KeyStatsDataObjectEntityPrimaryId
    globals()['KeyStatsDataObjectEntityPrimaryTicker'] = KeyStatsDataObjectEntityPrimaryTicker
    globals()['KeyStatsDataObjectEntityRange52Week'] = KeyStatsDataObjectEntityRange52Week
    globals()['KeyStatsDataObjectEntityRevenue'] = KeyStatsDataObjectEntityRevenue
    globals()['KeyStatsDataObjectEntitySecurityId'] = KeyStatsDataObjectEntitySecurityId
    globals()['KeyStatsDataObjectEntityShortInterest'] = KeyStatsDataObjectEntityShortInterest
    globals()['KeyStatsDataObjectEntityTargetPrice'] = KeyStatsDataObjectEntityTargetPrice
    globals()['KeyStatsDataObjectEntityTop10InstitutionalHolders'] = KeyStatsDataObjectEntityTop10InstitutionalHolders
    globals()['KeyStatsDataObjectEntityTotalDeposits'] = KeyStatsDataObjectEntityTotalDeposits
    globals()['KeyStatsDataObjectEntityTotalInvestors'] = KeyStatsDataObjectEntityTotalInvestors
    globals()['KeyStatsDataObjectEntityVolume'] = KeyStatsDataObjectEntityVolume
    globals()['KeyStatsDataObjectEntityWacc'] = KeyStatsDataObjectEntityWacc
    globals()['KeyStatsDataObjectFund'] = KeyStatsDataObjectFund
    globals()['KeyStatsDataObjectFundAumFundMonth'] = KeyStatsDataObjectFundAumFundMonth
    globals()['KeyStatsDataObjectFundAumShareDaily'] = KeyStatsDataObjectFundAumShareDaily
    globals()['KeyStatsDataObjectFundAvailableForSale'] = KeyStatsDataObjectFundAvailableForSale
    globals()['KeyStatsDataObjectFundAverageSpread'] = KeyStatsDataObjectFundAverageSpread
    globals()['KeyStatsDataObjectFundCurrencyIso'] = KeyStatsDataObjectFundCurrencyIso
    globals()['KeyStatsDataObjectFundDailyTradingVol'] = KeyStatsDataObjectFundDailyTradingVol
    globals()['KeyStatsDataObjectFundDistributionYield'] = KeyStatsDataObjectFundDistributionYield
    globals()['KeyStatsDataObjectFundEsgCompliance'] = KeyStatsDataObjectFundEsgCompliance
    globals()['KeyStatsDataObjectFundEsgObjective'] = KeyStatsDataObjectFundEsgObjective
    globals()['KeyStatsDataObjectFundExpenseRatio'] = KeyStatsDataObjectFundExpenseRatio
    globals()['KeyStatsDataObjectFundFirstNavRecord'] = KeyStatsDataObjectFundFirstNavRecord
    globals()['KeyStatsDataObjectFundFundFlowYTD'] = KeyStatsDataObjectFundFundFlowYTD
    globals()['KeyStatsDataObjectFundInceptionDateFund'] = KeyStatsDataObjectFundInceptionDateFund
    globals()['KeyStatsDataObjectFundInceptionDateShare'] = KeyStatsDataObjectFundInceptionDateShare
    globals()['KeyStatsDataObjectFundMeta'] = KeyStatsDataObjectFundMeta
    globals()['KeyStatsDataObjectFundOutstandingShare'] = KeyStatsDataObjectFundOutstandingShare
    globals()['KeyStatsDataObjectFundSfdrClassification'] = KeyStatsDataObjectFundSfdrClassification


class KeyStatsDataObject(ModelComposed):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Attributes:
      allowed_values (dict): The key is the tuple path to the attribute
          and the for var_name this is (var_name,). The value is a dict
          with a capitalized key describing the allowed value and an allowed
          value. These dicts store the allowed enum values.
      attribute_map (dict): The key is attribute name
          and the value is json key in definition.
      discriminator_value_class_map (dict): A dict to go from the discriminator
          variable value to the discriminator class name.
      validations (dict): The key is the tuple path to the attribute
          and the for var_name this is (var_name,). The value is a dict
          that stores validations for max_length, min_length, max_items,
          min_items, exclusive_maximum, inclusive_maximum, exclusive_minimum,
          inclusive_minimum, and regex.
      additional_properties_type (tuple): A tuple of classes accepted
          as additional properties values.
    """

    allowed_values = {
    }

    validations = {
    }

    @cached_property
    def additional_properties_type():
        """
        This must be a method because a model may have properties that are
        of type self, this must run after the class is loaded
        """
        lazy_import()
        return (bool, date, datetime, dict, float, int, list, str, none_type,)  # noqa: E501

    _nullable = False

    @cached_property
    def openapi_types():
        """
        This must be a method because a model may have properties that are
        of type self, this must run after the class is loaded

        Returns
            openapi_types (dict): The key is attribute name
                and the value is attribute type.
        """
        lazy_import()
        return {
            'active_investors': (KeyStatsDataObjectEntityActiveInvestors,),  # noqa: E501
            'annual_dividend': (KeyStatsDataObjectEntityAnnualDividend,),  # noqa: E501
            'average_daily_vol': (KeyStatsDataObjectEntityAverageDailyVol,),  # noqa: E501
            'average_daily_vol30_d': (KeyStatsDataObjectEntityAverageDailyVol30D,),  # noqa: E501
            'average_rating': (KeyStatsDataObjectEntityAverageRating,),  # noqa: E501
            'basic_shares': (KeyStatsDataObjectEntityBasicShares,),  # noqa: E501
            'beta': (KeyStatsDataObjectEntityBeta,),  # noqa: E501
            'branches': (KeyStatsDataObjectEntityBranches,),  # noqa: E501
            'broker_contributors': (KeyStatsDataObjectEntityBrokerContributors,),  # noqa: E501
            'circulating_supply': (KeyStatsDataObjectEntityCirculatingSupply,),  # noqa: E501
            'diluted_market_cap': (KeyStatsDataObjectEntityDilutedMarketCap,),  # noqa: E501
            'diluted_shares': (KeyStatsDataObjectEntityDilutedShares,),  # noqa: E501
            'dividend_yield': (KeyStatsDataObjectEntityDividendYield,),  # noqa: E501
            'employees': (KeyStatsDataObjectEntityEmployees,),  # noqa: E501
            'enterprise_value': (KeyStatsDataObjectEntityEnterpriseValue,),  # noqa: E501
            'estimated_vc_raised': (KeyStatsDataObjectEntityEstimatedVcRaised,),  # noqa: E501
            'ex_dividend_date': (KeyStatsDataObjectEntityExDividendDate,),  # noqa: E501
            'first_date': (KeyStatsDataObjectEntityFirstDate,),  # noqa: E501
            'first_funding': (KeyStatsDataObjectEntityFirstFunding,),  # noqa: E501
            'float': (KeyStatsDataObjectEntityFloat,),  # noqa: E501
            'funding_rounds': (KeyStatsDataObjectEntityFundingRounds,),  # noqa: E501
            'gross_assets': (KeyStatsDataObjectEntityGrossAssets,),  # noqa: E501
            'gross_premiums': (KeyStatsDataObjectEntityGrossPremiums,),  # noqa: E501
            'institutional': (KeyStatsDataObjectEntityInstitutional,),  # noqa: E501
            'last_funding': (KeyStatsDataObjectEntityLastFunding,),  # noqa: E501
            'last_funding_round': (KeyStatsDataObjectEntityLastFundingRound,),  # noqa: E501
            'latest_post_money_valuation': (KeyStatsDataObjectEntityLatestPostMoneyValuation,),  # noqa: E501
            'lt_growth_rate': (KeyStatsDataObjectEntityLtGrowthRate,),  # noqa: E501
            'market_cap': (KeyStatsDataObjectEntityMarketCap,),  # noqa: E501
            'market_cap_free_float': (KeyStatsDataObjectEntityCirculatingSupply,),  # noqa: E501
            'meta': (KeyStatsDataObjectFundMeta,),  # noqa: E501
            'net_interest_income': (KeyStatsDataObjectEntityNetInterestIncome,),  # noqa: E501
            'next_earnings': (KeyStatsDataObjectEntityNextEarnings,),  # noqa: E501
            'open': (KeyStatsDataObjectEntityOpen,),  # noqa: E501
            'premiums': (KeyStatsDataObjectEntityPremiums,),  # noqa: E501
            'previous_close': (KeyStatsDataObjectEntityPreviousClose,),  # noqa: E501
            'primary_id': (KeyStatsDataObjectEntityPrimaryId,),  # noqa: E501
            'primary_ticker': (KeyStatsDataObjectEntityPrimaryTicker,),  # noqa: E501
            'range52_week': (KeyStatsDataObjectEntityRange52Week,),  # noqa: E501
            'revenue': (KeyStatsDataObjectEntityRevenue,),  # noqa: E501
            'security_id': (KeyStatsDataObjectEntitySecurityId,),  # noqa: E501
            'short_interest': (KeyStatsDataObjectEntityShortInterest,),  # noqa: E501
            'target_price': (KeyStatsDataObjectEntityTargetPrice,),  # noqa: E501
            'top10_institutional_holders': (KeyStatsDataObjectEntityTop10InstitutionalHolders,),  # noqa: E501
            'total_deposits': (KeyStatsDataObjectEntityTotalDeposits,),  # noqa: E501
            'total_investors': (KeyStatsDataObjectEntityTotalInvestors,),  # noqa: E501
            'volume': (KeyStatsDataObjectEntityVolume,),  # noqa: E501
            'volume_per_market_cap': (KeyStatsDataObjectEntityCirculatingSupply,),  # noqa: E501
            'wacc': (KeyStatsDataObjectEntityWacc,),  # noqa: E501
            'aum_fund_month': (KeyStatsDataObjectFundAumFundMonth,),  # noqa: E501
            'aum_share_daily': (KeyStatsDataObjectFundAumShareDaily,),  # noqa: E501
            'available_for_sale': (KeyStatsDataObjectFundAvailableForSale,),  # noqa: E501
            'average_spread': (KeyStatsDataObjectFundAverageSpread,),  # noqa: E501
            'currency_iso': (KeyStatsDataObjectFundCurrencyIso,),  # noqa: E501
            'daily_trading_vol': (KeyStatsDataObjectFundDailyTradingVol,),  # noqa: E501
            'distribution_yield': (KeyStatsDataObjectFundDistributionYield,),  # noqa: E501
            'esg_compliance': (KeyStatsDataObjectFundEsgCompliance,),  # noqa: E501
            'esg_objective': (KeyStatsDataObjectFundEsgObjective,),  # noqa: E501
            'expense_ratio': (KeyStatsDataObjectFundExpenseRatio,),  # noqa: E501
            'first_nav_record': (KeyStatsDataObjectFundFirstNavRecord,),  # noqa: E501
            'fund_flow_ytd': (KeyStatsDataObjectFundFundFlowYTD,),  # noqa: E501
            'inception_date_fund': (KeyStatsDataObjectFundInceptionDateFund,),  # noqa: E501
            'inception_date_share': (KeyStatsDataObjectFundInceptionDateShare,),  # noqa: E501
            'outstanding_share': (KeyStatsDataObjectFundOutstandingShare,),  # noqa: E501
            'sfdr_classification': (KeyStatsDataObjectFundSfdrClassification,),  # noqa: E501
        }

    @cached_property
    def discriminator():
        return None


    attribute_map = {
        'active_investors': 'activeInvestors',  # noqa: E501
        'annual_dividend': 'annualDividend',  # noqa: E501
        'average_daily_vol': 'averageDailyVol',  # noqa: E501
        'average_daily_vol30_d': 'averageDailyVol30D',  # noqa: E501
        'average_rating': 'averageRating',  # noqa: E501
        'basic_shares': 'basicShares',  # noqa: E501
        'beta': 'beta',  # noqa: E501
        'branches': 'branches',  # noqa: E501
        'broker_contributors': 'brokerContributors',  # noqa: E501
        'circulating_supply': 'circulatingSupply',  # noqa: E501
        'diluted_market_cap': 'dilutedMarketCap',  # noqa: E501
        'diluted_shares': 'dilutedShares',  # noqa: E501
        'dividend_yield': 'dividendYield',  # noqa: E501
        'employees': 'employees',  # noqa: E501
        'enterprise_value': 'enterpriseValue',  # noqa: E501
        'estimated_vc_raised': 'estimatedVcRaised',  # noqa: E501
        'ex_dividend_date': 'exDividendDate',  # noqa: E501
        'first_date': 'firstDate',  # noqa: E501
        'first_funding': 'firstFunding',  # noqa: E501
        'float': 'float',  # noqa: E501
        'funding_rounds': 'fundingRounds',  # noqa: E501
        'gross_assets': 'grossAssets',  # noqa: E501
        'gross_premiums': 'grossPremiums',  # noqa: E501
        'institutional': 'institutional',  # noqa: E501
        'last_funding': 'lastFunding',  # noqa: E501
        'last_funding_round': 'lastFundingRound',  # noqa: E501
        'latest_post_money_valuation': 'latestPostMoneyValuation',  # noqa: E501
        'lt_growth_rate': 'ltGrowthRate',  # noqa: E501
        'market_cap': 'marketCap',  # noqa: E501
        'market_cap_free_float': 'marketCapFreeFloat',  # noqa: E501
        'meta': 'meta',  # noqa: E501
        'net_interest_income': 'netInterestIncome',  # noqa: E501
        'next_earnings': 'nextEarnings',  # noqa: E501
        'open': 'open',  # noqa: E501
        'premiums': 'premiums',  # noqa: E501
        'previous_close': 'previousClose',  # noqa: E501
        'primary_id': 'primaryId',  # noqa: E501
        'primary_ticker': 'primaryTicker',  # noqa: E501
        'range52_week': 'range52Week',  # noqa: E501
        'revenue': 'revenue',  # noqa: E501
        'security_id': 'securityId',  # noqa: E501
        'short_interest': 'shortInterest',  # noqa: E501
        'target_price': 'targetPrice',  # noqa: E501
        'top10_institutional_holders': 'top10InstitutionalHolders',  # noqa: E501
        'total_deposits': 'totalDeposits',  # noqa: E501
        'total_investors': 'totalInvestors',  # noqa: E501
        'volume': 'volume',  # noqa: E501
        'volume_per_market_cap': 'volumePerMarketCap',  # noqa: E501
        'wacc': 'wacc',  # noqa: E501
        'aum_fund_month': 'aumFundMonth',  # noqa: E501
        'aum_share_daily': 'aumShareDaily',  # noqa: E501
        'available_for_sale': 'availableForSale',  # noqa: E501
        'average_spread': 'averageSpread',  # noqa: E501
        'currency_iso': 'currencyIso',  # noqa: E501
        'daily_trading_vol': 'dailyTradingVol',  # noqa: E501
        'distribution_yield': 'distributionYield',  # noqa: E501
        'esg_compliance': 'esgCompliance',  # noqa: E501
        'esg_objective': 'esgObjective',  # noqa: E501
        'expense_ratio': 'expenseRatio',  # noqa: E501
        'first_nav_record': 'firstNavRecord',  # noqa: E501
        'fund_flow_ytd': 'fundFlowYTD',  # noqa: E501
        'inception_date_fund': 'inceptionDateFund',  # noqa: E501
        'inception_date_share': 'inceptionDateShare',  # noqa: E501
        'outstanding_share': 'outstandingShare',  # noqa: E501
        'sfdr_classification': 'sfdrClassification',  # noqa: E501
    }

    read_only_vars = {
    }

    @classmethod
    @convert_js_args_to_python_args
    def _from_openapi_data(cls, *args, **kwargs):  # noqa: E501
        """KeyStatsDataObject - a model defined in OpenAPI

        Keyword Args:
            _check_type (bool): if True, values for parameters in openapi_types
                                will be type checked and a TypeError will be
                                raised if the wrong type is input.
                                Defaults to True
            _path_to_item (tuple/list): This is a list of keys or values to
                                drill down to the model in received_data
                                when deserializing a response
            _spec_property_naming (bool): True if the variable names in the input data
                                are serialized names, as specified in the OpenAPI document.
                                False if the variable names in the input data
                                are pythonic names, e.g. snake case (default)
            _configuration (Configuration): the instance to use when
                                deserializing a file_type parameter.
                                If passed, type conversion is attempted
                                If omitted no type conversion is done.
            _visited_composed_classes (tuple): This stores a tuple of
                                classes that we have traveled through so that
                                if we see that class again we will not use its
                                discriminator again.
                                When traveling through a discriminator, the
                                composed schema that is
                                is traveled through is added to this set.
                                For example if Animal has a discriminator
                                petType and we pass in "Dog", and the class Dog
                                allOf includes Animal, we move through Animal
                                once using the discriminator, and pick Dog.
                                Then in Dog, we will make an instance of the
                                Animal class but this time we won't travel
                                through its discriminator because we passed in
                                _visited_composed_classes = (Animal,)
            active_investors (KeyStatsDataObjectEntityActiveInvestors): [optional]  # noqa: E501
            annual_dividend (KeyStatsDataObjectEntityAnnualDividend): [optional]  # noqa: E501
            average_daily_vol (KeyStatsDataObjectEntityAverageDailyVol): [optional]  # noqa: E501
            average_daily_vol30_d (KeyStatsDataObjectEntityAverageDailyVol30D): [optional]  # noqa: E501
            average_rating (KeyStatsDataObjectEntityAverageRating): [optional]  # noqa: E501
            basic_shares (KeyStatsDataObjectEntityBasicShares): [optional]  # noqa: E501
            beta (KeyStatsDataObjectEntityBeta): [optional]  # noqa: E501
            branches (KeyStatsDataObjectEntityBranches): [optional]  # noqa: E501
            broker_contributors (KeyStatsDataObjectEntityBrokerContributors): [optional]  # noqa: E501
            circulating_supply (KeyStatsDataObjectEntityCirculatingSupply): [optional]  # noqa: E501
            diluted_market_cap (KeyStatsDataObjectEntityDilutedMarketCap): [optional]  # noqa: E501
            diluted_shares (KeyStatsDataObjectEntityDilutedShares): [optional]  # noqa: E501
            dividend_yield (KeyStatsDataObjectEntityDividendYield): [optional]  # noqa: E501
            employees (KeyStatsDataObjectEntityEmployees): [optional]  # noqa: E501
            enterprise_value (KeyStatsDataObjectEntityEnterpriseValue): [optional]  # noqa: E501
            estimated_vc_raised (KeyStatsDataObjectEntityEstimatedVcRaised): [optional]  # noqa: E501
            ex_dividend_date (KeyStatsDataObjectEntityExDividendDate): [optional]  # noqa: E501
            first_date (KeyStatsDataObjectEntityFirstDate): [optional]  # noqa: E501
            first_funding (KeyStatsDataObjectEntityFirstFunding): [optional]  # noqa: E501
            float (KeyStatsDataObjectEntityFloat): [optional]  # noqa: E501
            funding_rounds (KeyStatsDataObjectEntityFundingRounds): [optional]  # noqa: E501
            gross_assets (KeyStatsDataObjectEntityGrossAssets): [optional]  # noqa: E501
            gross_premiums (KeyStatsDataObjectEntityGrossPremiums): [optional]  # noqa: E501
            institutional (KeyStatsDataObjectEntityInstitutional): [optional]  # noqa: E501
            last_funding (KeyStatsDataObjectEntityLastFunding): [optional]  # noqa: E501
            last_funding_round (KeyStatsDataObjectEntityLastFundingRound): [optional]  # noqa: E501
            latest_post_money_valuation (KeyStatsDataObjectEntityLatestPostMoneyValuation): [optional]  # noqa: E501
            lt_growth_rate (KeyStatsDataObjectEntityLtGrowthRate): [optional]  # noqa: E501
            market_cap (KeyStatsDataObjectEntityMarketCap): [optional]  # noqa: E501
            market_cap_free_float (KeyStatsDataObjectEntityCirculatingSupply): [optional]  # noqa: E501
            meta (KeyStatsDataObjectFundMeta): [optional]  # noqa: E501
            net_interest_income (KeyStatsDataObjectEntityNetInterestIncome): [optional]  # noqa: E501
            next_earnings (KeyStatsDataObjectEntityNextEarnings): [optional]  # noqa: E501
            open (KeyStatsDataObjectEntityOpen): [optional]  # noqa: E501
            premiums (KeyStatsDataObjectEntityPremiums): [optional]  # noqa: E501
            previous_close (KeyStatsDataObjectEntityPreviousClose): [optional]  # noqa: E501
            primary_id (KeyStatsDataObjectEntityPrimaryId): [optional]  # noqa: E501
            primary_ticker (KeyStatsDataObjectEntityPrimaryTicker): [optional]  # noqa: E501
            range52_week (KeyStatsDataObjectEntityRange52Week): [optional]  # noqa: E501
            revenue (KeyStatsDataObjectEntityRevenue): [optional]  # noqa: E501
            security_id (KeyStatsDataObjectEntitySecurityId): [optional]  # noqa: E501
            short_interest (KeyStatsDataObjectEntityShortInterest): [optional]  # noqa: E501
            target_price (KeyStatsDataObjectEntityTargetPrice): [optional]  # noqa: E501
            top10_institutional_holders (KeyStatsDataObjectEntityTop10InstitutionalHolders): [optional]  # noqa: E501
            total_deposits (KeyStatsDataObjectEntityTotalDeposits): [optional]  # noqa: E501
            total_investors (KeyStatsDataObjectEntityTotalInvestors): [optional]  # noqa: E501
            volume (KeyStatsDataObjectEntityVolume): [optional]  # noqa: E501
            volume_per_market_cap (KeyStatsDataObjectEntityCirculatingSupply): [optional]  # noqa: E501
            wacc (KeyStatsDataObjectEntityWacc): [optional]  # noqa: E501
            aum_fund_month (KeyStatsDataObjectFundAumFundMonth): [optional]  # noqa: E501
            aum_share_daily (KeyStatsDataObjectFundAumShareDaily): [optional]  # noqa: E501
            available_for_sale (KeyStatsDataObjectFundAvailableForSale): [optional]  # noqa: E501
            average_spread (KeyStatsDataObjectFundAverageSpread): [optional]  # noqa: E501
            currency_iso (KeyStatsDataObjectFundCurrencyIso): [optional]  # noqa: E501
            daily_trading_vol (KeyStatsDataObjectFundDailyTradingVol): [optional]  # noqa: E501
            distribution_yield (KeyStatsDataObjectFundDistributionYield): [optional]  # noqa: E501
            esg_compliance (KeyStatsDataObjectFundEsgCompliance): [optional]  # noqa: E501
            esg_objective (KeyStatsDataObjectFundEsgObjective): [optional]  # noqa: E501
            expense_ratio (KeyStatsDataObjectFundExpenseRatio): [optional]  # noqa: E501
            first_nav_record (KeyStatsDataObjectFundFirstNavRecord): [optional]  # noqa: E501
            fund_flow_ytd (KeyStatsDataObjectFundFundFlowYTD): [optional]  # noqa: E501
            inception_date_fund (KeyStatsDataObjectFundInceptionDateFund): [optional]  # noqa: E501
            inception_date_share (KeyStatsDataObjectFundInceptionDateShare): [optional]  # noqa: E501
            outstanding_share (KeyStatsDataObjectFundOutstandingShare): [optional]  # noqa: E501
            sfdr_classification (KeyStatsDataObjectFundSfdrClassification): [optional]  # noqa: E501
        """

        _check_type = kwargs.pop('_check_type', True)
        _spec_property_naming = kwargs.pop('_spec_property_naming', False)
        _path_to_item = kwargs.pop('_path_to_item', ())
        _configuration = kwargs.pop('_configuration', None)
        _visited_composed_classes = kwargs.pop('_visited_composed_classes', ())

        self = super(OpenApiModel, cls).__new__(cls)

        if args:
            raise ApiTypeError(
                "Invalid positional arguments=%s passed to %s. Remove those invalid positional arguments." % (
                    args,
                    self.__class__.__name__,
                ),
                path_to_item=_path_to_item,
                valid_classes=(self.__class__,),
            )

        self._data_store = {}
        self._check_type = _check_type
        self._spec_property_naming = _spec_property_naming
        self._path_to_item = _path_to_item
        self._configuration = _configuration
        self._visited_composed_classes = _visited_composed_classes + (self.__class__,)

        constant_args = {
            '_check_type': _check_type,
            '_path_to_item': _path_to_item,
            '_spec_property_naming': _spec_property_naming,
            '_configuration': _configuration,
            '_visited_composed_classes': self._visited_composed_classes,
        }
        composed_info = validate_get_composed_info(
            constant_args, kwargs, self)
        self._composed_instances = composed_info[0]
        self._var_name_to_model_instances = composed_info[1]
        self._additional_properties_model_instances = composed_info[2]
        discarded_args = composed_info[3]

        for var_name, var_value in kwargs.items():
            if var_name in discarded_args and \
                        self._configuration is not None and \
                        self._configuration.discard_unknown_keys and \
                        self._additional_properties_model_instances:
                # discard variable.
                continue
            setattr(self, var_name, var_value)

        return self

    required_properties = set([
        '_data_store',
        '_check_type',
        '_spec_property_naming',
        '_path_to_item',
        '_configuration',
        '_visited_composed_classes',
        '_composed_instances',
        '_var_name_to_model_instances',
        '_additional_properties_model_instances',
    ])

    @convert_js_args_to_python_args
    def __init__(self, *args, **kwargs):  # noqa: E501
        """KeyStatsDataObject - a model defined in OpenAPI

        Keyword Args:
            _check_type (bool): if True, values for parameters in openapi_types
                                will be type checked and a TypeError will be
                                raised if the wrong type is input.
                                Defaults to True
            _path_to_item (tuple/list): This is a list of keys or values to
                                drill down to the model in received_data
                                when deserializing a response
            _spec_property_naming (bool): True if the variable names in the input data
                                are serialized names, as specified in the OpenAPI document.
                                False if the variable names in the input data
                                are pythonic names, e.g. snake case (default)
            _configuration (Configuration): the instance to use when
                                deserializing a file_type parameter.
                                If passed, type conversion is attempted
                                If omitted no type conversion is done.
            _visited_composed_classes (tuple): This stores a tuple of
                                classes that we have traveled through so that
                                if we see that class again we will not use its
                                discriminator again.
                                When traveling through a discriminator, the
                                composed schema that is
                                is traveled through is added to this set.
                                For example if Animal has a discriminator
                                petType and we pass in "Dog", and the class Dog
                                allOf includes Animal, we move through Animal
                                once using the discriminator, and pick Dog.
                                Then in Dog, we will make an instance of the
                                Animal class but this time we won't travel
                                through its discriminator because we passed in
                                _visited_composed_classes = (Animal,)
            active_investors (KeyStatsDataObjectEntityActiveInvestors): [optional]  # noqa: E501
            annual_dividend (KeyStatsDataObjectEntityAnnualDividend): [optional]  # noqa: E501
            average_daily_vol (KeyStatsDataObjectEntityAverageDailyVol): [optional]  # noqa: E501
            average_daily_vol30_d (KeyStatsDataObjectEntityAverageDailyVol30D): [optional]  # noqa: E501
            average_rating (KeyStatsDataObjectEntityAverageRating): [optional]  # noqa: E501
            basic_shares (KeyStatsDataObjectEntityBasicShares): [optional]  # noqa: E501
            beta (KeyStatsDataObjectEntityBeta): [optional]  # noqa: E501
            branches (KeyStatsDataObjectEntityBranches): [optional]  # noqa: E501
            broker_contributors (KeyStatsDataObjectEntityBrokerContributors): [optional]  # noqa: E501
            circulating_supply (KeyStatsDataObjectEntityCirculatingSupply): [optional]  # noqa: E501
            diluted_market_cap (KeyStatsDataObjectEntityDilutedMarketCap): [optional]  # noqa: E501
            diluted_shares (KeyStatsDataObjectEntityDilutedShares): [optional]  # noqa: E501
            dividend_yield (KeyStatsDataObjectEntityDividendYield): [optional]  # noqa: E501
            employees (KeyStatsDataObjectEntityEmployees): [optional]  # noqa: E501
            enterprise_value (KeyStatsDataObjectEntityEnterpriseValue): [optional]  # noqa: E501
            estimated_vc_raised (KeyStatsDataObjectEntityEstimatedVcRaised): [optional]  # noqa: E501
            ex_dividend_date (KeyStatsDataObjectEntityExDividendDate): [optional]  # noqa: E501
            first_date (KeyStatsDataObjectEntityFirstDate): [optional]  # noqa: E501
            first_funding (KeyStatsDataObjectEntityFirstFunding): [optional]  # noqa: E501
            float (KeyStatsDataObjectEntityFloat): [optional]  # noqa: E501
            funding_rounds (KeyStatsDataObjectEntityFundingRounds): [optional]  # noqa: E501
            gross_assets (KeyStatsDataObjectEntityGrossAssets): [optional]  # noqa: E501
            gross_premiums (KeyStatsDataObjectEntityGrossPremiums): [optional]  # noqa: E501
            institutional (KeyStatsDataObjectEntityInstitutional): [optional]  # noqa: E501
            last_funding (KeyStatsDataObjectEntityLastFunding): [optional]  # noqa: E501
            last_funding_round (KeyStatsDataObjectEntityLastFundingRound): [optional]  # noqa: E501
            latest_post_money_valuation (KeyStatsDataObjectEntityLatestPostMoneyValuation): [optional]  # noqa: E501
            lt_growth_rate (KeyStatsDataObjectEntityLtGrowthRate): [optional]  # noqa: E501
            market_cap (KeyStatsDataObjectEntityMarketCap): [optional]  # noqa: E501
            market_cap_free_float (KeyStatsDataObjectEntityCirculatingSupply): [optional]  # noqa: E501
            meta (KeyStatsDataObjectFundMeta): [optional]  # noqa: E501
            net_interest_income (KeyStatsDataObjectEntityNetInterestIncome): [optional]  # noqa: E501
            next_earnings (KeyStatsDataObjectEntityNextEarnings): [optional]  # noqa: E501
            open (KeyStatsDataObjectEntityOpen): [optional]  # noqa: E501
            premiums (KeyStatsDataObjectEntityPremiums): [optional]  # noqa: E501
            previous_close (KeyStatsDataObjectEntityPreviousClose): [optional]  # noqa: E501
            primary_id (KeyStatsDataObjectEntityPrimaryId): [optional]  # noqa: E501
            primary_ticker (KeyStatsDataObjectEntityPrimaryTicker): [optional]  # noqa: E501
            range52_week (KeyStatsDataObjectEntityRange52Week): [optional]  # noqa: E501
            revenue (KeyStatsDataObjectEntityRevenue): [optional]  # noqa: E501
            security_id (KeyStatsDataObjectEntitySecurityId): [optional]  # noqa: E501
            short_interest (KeyStatsDataObjectEntityShortInterest): [optional]  # noqa: E501
            target_price (KeyStatsDataObjectEntityTargetPrice): [optional]  # noqa: E501
            top10_institutional_holders (KeyStatsDataObjectEntityTop10InstitutionalHolders): [optional]  # noqa: E501
            total_deposits (KeyStatsDataObjectEntityTotalDeposits): [optional]  # noqa: E501
            total_investors (KeyStatsDataObjectEntityTotalInvestors): [optional]  # noqa: E501
            volume (KeyStatsDataObjectEntityVolume): [optional]  # noqa: E501
            volume_per_market_cap (KeyStatsDataObjectEntityCirculatingSupply): [optional]  # noqa: E501
            wacc (KeyStatsDataObjectEntityWacc): [optional]  # noqa: E501
            aum_fund_month (KeyStatsDataObjectFundAumFundMonth): [optional]  # noqa: E501
            aum_share_daily (KeyStatsDataObjectFundAumShareDaily): [optional]  # noqa: E501
            available_for_sale (KeyStatsDataObjectFundAvailableForSale): [optional]  # noqa: E501
            average_spread (KeyStatsDataObjectFundAverageSpread): [optional]  # noqa: E501
            currency_iso (KeyStatsDataObjectFundCurrencyIso): [optional]  # noqa: E501
            daily_trading_vol (KeyStatsDataObjectFundDailyTradingVol): [optional]  # noqa: E501
            distribution_yield (KeyStatsDataObjectFundDistributionYield): [optional]  # noqa: E501
            esg_compliance (KeyStatsDataObjectFundEsgCompliance): [optional]  # noqa: E501
            esg_objective (KeyStatsDataObjectFundEsgObjective): [optional]  # noqa: E501
            expense_ratio (KeyStatsDataObjectFundExpenseRatio): [optional]  # noqa: E501
            first_nav_record (KeyStatsDataObjectFundFirstNavRecord): [optional]  # noqa: E501
            fund_flow_ytd (KeyStatsDataObjectFundFundFlowYTD): [optional]  # noqa: E501
            inception_date_fund (KeyStatsDataObjectFundInceptionDateFund): [optional]  # noqa: E501
            inception_date_share (KeyStatsDataObjectFundInceptionDateShare): [optional]  # noqa: E501
            outstanding_share (KeyStatsDataObjectFundOutstandingShare): [optional]  # noqa: E501
            sfdr_classification (KeyStatsDataObjectFundSfdrClassification): [optional]  # noqa: E501
        """

        _check_type = kwargs.pop('_check_type', True)
        _spec_property_naming = kwargs.pop('_spec_property_naming', False)
        _path_to_item = kwargs.pop('_path_to_item', ())
        _configuration = kwargs.pop('_configuration', None)
        _visited_composed_classes = kwargs.pop('_visited_composed_classes', ())

        if args:
            raise ApiTypeError(
                "Invalid positional arguments=%s passed to %s. Remove those invalid positional arguments." % (
                    args,
                    self.__class__.__name__,
                ),
                path_to_item=_path_to_item,
                valid_classes=(self.__class__,),
            )

        self._data_store = {}
        self._check_type = _check_type
        self._spec_property_naming = _spec_property_naming
        self._path_to_item = _path_to_item
        self._configuration = _configuration
        self._visited_composed_classes = _visited_composed_classes + (self.__class__,)

        constant_args = {
            '_check_type': _check_type,
            '_path_to_item': _path_to_item,
            '_spec_property_naming': _spec_property_naming,
            '_configuration': _configuration,
            '_visited_composed_classes': self._visited_composed_classes,
        }
        composed_info = validate_get_composed_info(
            constant_args, kwargs, self)
        self._composed_instances = composed_info[0]
        self._var_name_to_model_instances = composed_info[1]
        self._additional_properties_model_instances = composed_info[2]
        discarded_args = composed_info[3]

        for var_name, var_value in kwargs.items():
            if var_name in discarded_args and \
                        self._configuration is not None and \
                        self._configuration.discard_unknown_keys and \
                        self._additional_properties_model_instances:
                # discard variable.
                continue
            setattr(self, var_name, var_value)
            if var_name in self.read_only_vars:
                raise ApiAttributeError(f"`{var_name}` is a read-only attribute. Use `from_openapi_data` to instantiate "
                                     f"class with read only attributes.")

    @cached_property
    def _composed_schemas():
        # we need this here to make our import statements work
        # we must store _composed_schemas in here so the code is only run
        # when we invoke this method. If we kept this at the class
        # level we would get an error because the class level
        # code would be run when this module is imported, and these composed
        # classes don't exist yet because their module has not finished
        # loading
        lazy_import()
        return {
          'anyOf': [
          ],
          'allOf': [
          ],
          'oneOf': [
              KeyStatsDataObjectEntity,
              KeyStatsDataObjectFund,
          ],
        }
