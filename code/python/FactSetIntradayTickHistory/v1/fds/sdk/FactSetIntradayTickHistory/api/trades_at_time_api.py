"""
    Tick History

    <p>FactSetâ€™s Tick History provides cost-effective access to real-time and delayed global exchange data. Proprietary technology normalizes over 200 global exchanges and 19 tick history fields. Asset types integrated include equities, futures, options, fixed income, mutual funds, ETFs, indices, commodities, and FX rates.</p><p>Tick History provides dynamic access to tick data for a specific security intra-day or historically via standard HTTPS protocol. History is available for all quotes and trades for a trailing 6 months or 1-year, respectively. Quotes and trade data for Options is available for 30 days. Tick History data is also available in a separate end-of-day feed.</p>     # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: api@factset.com
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401
from multiprocessing.pool import ApplyResult
import typing

from fds.sdk.FactSetIntradayTickHistory.api_client import ApiClient, Endpoint as _Endpoint
from fds.sdk.FactSetIntradayTickHistory.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from fds.sdk.FactSetIntradayTickHistory.exceptions import ApiException
from fds.sdk.FactSetIntradayTickHistory.model.tickhistory_response import TickhistoryResponse





class TradesAtTimeApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

        self.tick_history_tradesattime_get_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (TickhistoryResponse,), 401: ({str: (bool, date, datetime, dict, float, int, list, str, none_type)},), 403: ({str: (bool, date, datetime, dict, float, int, list, str, none_type)},), 405: ({str: (bool, date, datetime, dict, float, int, list, str, none_type)},),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/TickHistory/tradesattime',
                'operation_id': 'tick_history_tradesattime_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'id',
                    'req_id',
                    'format',
                    'date',
                    'time',
                ],
                'required': [
                    'id',
                ],
                'nullable': [
                ],
                'enum': [
                    'format',
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                    ('format',): {

                        "XML": "XML",
                        "JSON": "JSON",
                        "CSV": "CSV",
                        "CSV_NO_HEADER": "CSV_NO_HEADER"
                    },
                },
                'openapi_types': {
                    'id':
                        (str,),
                    'req_id':
                        (str,),
                    'format':
                        (str,),
                    'date':
                        (str,),
                    'time':
                        (str,),
                },
                'attribute_map': {
                    'id': 'id',
                    'req_id': 'req_id',
                    'format': 'format',
                    'date': 'date',
                    'time': 'time',
                },
                'location_map': {
                    'id': 'query',
                    'req_id': 'query',
                    'format': 'query',
                    'date': 'query',
                    'time': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json',
                    'application/xml',
                    'text/csv'
                ],
                'content_type': [],
            },
            api_client=api_client
        )


    @staticmethod
    def apply_kwargs_defaults(kwargs, return_http_data_only, async_req):
        kwargs["async_req"] = async_req
        kwargs["_return_http_data_only"] = return_http_data_only
        kwargs["_preload_content"] = kwargs.get("_preload_content", True)
        kwargs["_request_timeout"] = kwargs.get("_request_timeout", None)
        kwargs["_check_input_type"] = kwargs.get("_check_input_type", True)
        kwargs["_check_return_type"] = kwargs.get("_check_return_type", True)
        kwargs["_spec_property_naming"] = kwargs.get("_spec_property_naming", False)
        kwargs["_content_type"] = kwargs.get("_content_type")
        kwargs["_host_index"] = kwargs.get("_host_index")


    def tick_history_tradesattime_get(
        self,
        id,
        **kwargs
    ) -> TickhistoryResponse:
        """Request returns the before and after trade data along with the associated quotes for the specified time  # noqa: E501

        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            id (str): Requested symbol or security. The symbol can be a FactSet exchange symbol, CUSIP, or SEDOL. **NOTE**: Only one identifier can be requested per request.<P>**TRY IT OUT** - Choose One from - BABA-USA,WALMEX-MX,7203-TKS,VOD-LON,NPN-JSE,MABAX,NZF,SPY-USA,AGG-USA,GLD-USA,AOR-USA,MNA-USA,UUP-USA,SP50-SPX,ESX-STX,XAO-ASX,WD-MSX,NG00-USA,GC00-USA,CC00-USA,C00-USA,FC00-USA,ER00-USA,EURUSD-FX1,USDMXN-FX1,AUDJPY-FX1,EURCZK-FX1,USDILS-FX1,USDZAR-FX1,US10YY-TU1,FDS#190621C00145000-USA,FDS#190621P00145000-USA

        Keyword Args:
            req_id (str): Request Identification String. Can be used by the application to keep track of requests. The id is not used by this service, however, it is included in the XML response.. [optional]
            format (str): The format of the output file. TRY IT OUT Choose from JSON, CSV, CSV_NO_HEADER. [optional] if omitted the server will use the default value of "XML"
            date (str): Request should be made in the format **YYYYMMDD**. The initial release only supports requests from completed trading days. [optional]
            time (str): Request should be made in the format **HHMMSSS**.HH- Hour, MM- Minutes, SS- Seconds. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            TickhistoryResponse
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['id'] = \
            id
        return self.tick_history_tradesattime_get_endpoint.call_with_http_info(**kwargs)

    def tick_history_tradesattime_get_with_http_info(
        self,
        id,
        **kwargs
    ) -> typing.Tuple[TickhistoryResponse, int, typing.MutableMapping]:
        """Request returns the before and after trade data along with the associated quotes for the specified time  # noqa: E501

        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            id (str): Requested symbol or security. The symbol can be a FactSet exchange symbol, CUSIP, or SEDOL. **NOTE**: Only one identifier can be requested per request.<P>**TRY IT OUT** - Choose One from - BABA-USA,WALMEX-MX,7203-TKS,VOD-LON,NPN-JSE,MABAX,NZF,SPY-USA,AGG-USA,GLD-USA,AOR-USA,MNA-USA,UUP-USA,SP50-SPX,ESX-STX,XAO-ASX,WD-MSX,NG00-USA,GC00-USA,CC00-USA,C00-USA,FC00-USA,ER00-USA,EURUSD-FX1,USDMXN-FX1,AUDJPY-FX1,EURCZK-FX1,USDILS-FX1,USDZAR-FX1,US10YY-TU1,FDS#190621C00145000-USA,FDS#190621P00145000-USA

        Keyword Args:
            req_id (str): Request Identification String. Can be used by the application to keep track of requests. The id is not used by this service, however, it is included in the XML response.. [optional]
            format (str): The format of the output file. TRY IT OUT Choose from JSON, CSV, CSV_NO_HEADER. [optional] if omitted the server will use the default value of "XML"
            date (str): Request should be made in the format **YYYYMMDD**. The initial release only supports requests from completed trading days. [optional]
            time (str): Request should be made in the format **HHMMSSS**.HH- Hour, MM- Minutes, SS- Seconds. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            TickhistoryResponse
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['id'] = \
            id
        return self.tick_history_tradesattime_get_endpoint.call_with_http_info(**kwargs)

    def tick_history_tradesattime_get_async(
        self,
        id,
        **kwargs
    ) -> "ApplyResult[TickhistoryResponse]":
        """Request returns the before and after trade data along with the associated quotes for the specified time  # noqa: E501

        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            id (str): Requested symbol or security. The symbol can be a FactSet exchange symbol, CUSIP, or SEDOL. **NOTE**: Only one identifier can be requested per request.<P>**TRY IT OUT** - Choose One from - BABA-USA,WALMEX-MX,7203-TKS,VOD-LON,NPN-JSE,MABAX,NZF,SPY-USA,AGG-USA,GLD-USA,AOR-USA,MNA-USA,UUP-USA,SP50-SPX,ESX-STX,XAO-ASX,WD-MSX,NG00-USA,GC00-USA,CC00-USA,C00-USA,FC00-USA,ER00-USA,EURUSD-FX1,USDMXN-FX1,AUDJPY-FX1,EURCZK-FX1,USDILS-FX1,USDZAR-FX1,US10YY-TU1,FDS#190621C00145000-USA,FDS#190621P00145000-USA

        Keyword Args:
            req_id (str): Request Identification String. Can be used by the application to keep track of requests. The id is not used by this service, however, it is included in the XML response.. [optional]
            format (str): The format of the output file. TRY IT OUT Choose from JSON, CSV, CSV_NO_HEADER. [optional] if omitted the server will use the default value of "XML"
            date (str): Request should be made in the format **YYYYMMDD**. The initial release only supports requests from completed trading days. [optional]
            time (str): Request should be made in the format **HHMMSSS**.HH- Hour, MM- Minutes, SS- Seconds. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[TickhistoryResponse]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['id'] = \
            id
        return self.tick_history_tradesattime_get_endpoint.call_with_http_info(**kwargs)

    def tick_history_tradesattime_get_with_http_info_async(
        self,
        id,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[TickhistoryResponse, int, typing.MutableMapping]]":
        """Request returns the before and after trade data along with the associated quotes for the specified time  # noqa: E501

        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            id (str): Requested symbol or security. The symbol can be a FactSet exchange symbol, CUSIP, or SEDOL. **NOTE**: Only one identifier can be requested per request.<P>**TRY IT OUT** - Choose One from - BABA-USA,WALMEX-MX,7203-TKS,VOD-LON,NPN-JSE,MABAX,NZF,SPY-USA,AGG-USA,GLD-USA,AOR-USA,MNA-USA,UUP-USA,SP50-SPX,ESX-STX,XAO-ASX,WD-MSX,NG00-USA,GC00-USA,CC00-USA,C00-USA,FC00-USA,ER00-USA,EURUSD-FX1,USDMXN-FX1,AUDJPY-FX1,EURCZK-FX1,USDILS-FX1,USDZAR-FX1,US10YY-TU1,FDS#190621C00145000-USA,FDS#190621P00145000-USA

        Keyword Args:
            req_id (str): Request Identification String. Can be used by the application to keep track of requests. The id is not used by this service, however, it is included in the XML response.. [optional]
            format (str): The format of the output file. TRY IT OUT Choose from JSON, CSV, CSV_NO_HEADER. [optional] if omitted the server will use the default value of "XML"
            date (str): Request should be made in the format **YYYYMMDD**. The initial release only supports requests from completed trading days. [optional]
            time (str): Request should be made in the format **HHMMSSS**.HH- Hour, MM- Minutes, SS- Seconds. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(TickhistoryResponse, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['id'] = \
            id
        return self.tick_history_tradesattime_get_endpoint.call_with_http_info(**kwargs)


