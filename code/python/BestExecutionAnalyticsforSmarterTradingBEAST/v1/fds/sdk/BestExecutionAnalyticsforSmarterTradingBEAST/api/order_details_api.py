"""
    Best Execution Analytics for Smarter Trading (BEAST) API

    Enables clients to programmatically access the underlying data which powers the BEAST Liquidity Analytics (LA) and Transaction Cost Analysis (TCA) applications.  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: api@factset.com
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401
from multiprocessing.pool import ApplyResult
import typing

from fds.sdk.BestExecutionAnalyticsforSmarterTradingBEAST.api_client import ApiClient, Endpoint as _Endpoint
from fds.sdk.BestExecutionAnalyticsforSmarterTradingBEAST.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from fds.sdk.BestExecutionAnalyticsforSmarterTradingBEAST.exceptions import ApiException
from fds.sdk.BestExecutionAnalyticsforSmarterTradingBEAST.model.error_response import ErrorResponse
from fds.sdk.BestExecutionAnalyticsforSmarterTradingBEAST.model.index_etf_response_root import IndexETFResponseRoot
from fds.sdk.BestExecutionAnalyticsforSmarterTradingBEAST.model.intra_order_stat_response_root import IntraOrderStatResponseRoot
from fds.sdk.BestExecutionAnalyticsforSmarterTradingBEAST.model.investment_timing_response_root import InvestmentTimingResponseRoot
from fds.sdk.BestExecutionAnalyticsforSmarterTradingBEAST.model.order_fill_count_response_root import OrderFillCountResponseRoot
from fds.sdk.BestExecutionAnalyticsforSmarterTradingBEAST.model.order_info_response_root import OrderInfoResponseRoot
from fds.sdk.BestExecutionAnalyticsforSmarterTradingBEAST.model.price_time_fill_response_root import PriceTimeFillResponseRoot
from fds.sdk.BestExecutionAnalyticsforSmarterTradingBEAST.model.price_time_quote_response_root import PriceTimeQuoteResponseRoot
from fds.sdk.BestExecutionAnalyticsforSmarterTradingBEAST.model.price_time_trade_response_root import PriceTimeTradeResponseRoot
from fds.sdk.BestExecutionAnalyticsforSmarterTradingBEAST.model.volume_price_response_root import VolumePriceResponseRoot
from fds.sdk.BestExecutionAnalyticsforSmarterTradingBEAST.model.volume_time_response_root import VolumeTimeResponseRoot
from fds.sdk.BestExecutionAnalyticsforSmarterTradingBEAST.model.volume_venue_response_root import VolumeVenueResponseRoot





class OrderDetailsApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

        self.get_order_fill_count_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (OrderFillCountResponseRoot,), 400: (ErrorResponse,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/tca/order/fill-count',
                'operation_id': 'get_order_fill_count',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'order_id',
                    'date',
                ],
                'required': [
                    'order_id',
                    'date',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'order_id':
                        (str,),
                    'date':
                        (str,),
                },
                'attribute_map': {
                    'order_id': 'orderId',
                    'date': 'date',
                },
                'location_map': {
                    'order_id': 'query',
                    'date': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_order_index_etf_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (IndexETFResponseRoot,), 400: (ErrorResponse,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/tca/order/index-etf',
                'operation_id': 'get_order_index_etf',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'order_id',
                    'date',
                ],
                'required': [
                    'order_id',
                    'date',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'order_id':
                        (str,),
                    'date':
                        (str,),
                },
                'attribute_map': {
                    'order_id': 'orderId',
                    'date': 'date',
                },
                'location_map': {
                    'order_id': 'query',
                    'date': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_order_info_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (OrderInfoResponseRoot,), 400: (ErrorResponse,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/tca/order/order-info',
                'operation_id': 'get_order_info',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'order_id',
                    'date',
                ],
                'required': [
                    'order_id',
                    'date',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'order_id':
                        (str,),
                    'date':
                        (str,),
                },
                'attribute_map': {
                    'order_id': 'orderId',
                    'date': 'date',
                },
                'location_map': {
                    'order_id': 'query',
                    'date': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_order_intra_stats_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (IntraOrderStatResponseRoot,), 400: (ErrorResponse,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/tca/order/intra-order-stats',
                'operation_id': 'get_order_intra_stats',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'order_id',
                    'date',
                ],
                'required': [
                    'order_id',
                    'date',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'order_id':
                        (str,),
                    'date':
                        (str,),
                },
                'attribute_map': {
                    'order_id': 'orderId',
                    'date': 'date',
                },
                'location_map': {
                    'order_id': 'query',
                    'date': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_order_investment_timing_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (InvestmentTimingResponseRoot,), 400: (ErrorResponse,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/tca/order/investment-timing',
                'operation_id': 'get_order_investment_timing',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'order_id',
                    'date',
                ],
                'required': [
                    'order_id',
                    'date',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'order_id':
                        (str,),
                    'date':
                        (str,),
                },
                'attribute_map': {
                    'order_id': 'orderId',
                    'date': 'date',
                },
                'location_map': {
                    'order_id': 'query',
                    'date': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_order_price_time_fills_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (PriceTimeFillResponseRoot,), 400: (ErrorResponse,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/tca/order/price-time-fills',
                'operation_id': 'get_order_price_time_fills',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'order_id',
                    'date',
                ],
                'required': [
                    'order_id',
                    'date',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'order_id':
                        (str,),
                    'date':
                        (str,),
                },
                'attribute_map': {
                    'order_id': 'orderId',
                    'date': 'date',
                },
                'location_map': {
                    'order_id': 'query',
                    'date': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_order_price_time_quotes_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (PriceTimeQuoteResponseRoot,), 400: (ErrorResponse,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/tca/order/price-time-quotes',
                'operation_id': 'get_order_price_time_quotes',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'order_id',
                    'date',
                ],
                'required': [
                    'order_id',
                    'date',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'order_id':
                        (str,),
                    'date':
                        (str,),
                },
                'attribute_map': {
                    'order_id': 'orderId',
                    'date': 'date',
                },
                'location_map': {
                    'order_id': 'query',
                    'date': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_order_price_time_trades_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (PriceTimeTradeResponseRoot,), 400: (ErrorResponse,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/tca/order/price-time-trades',
                'operation_id': 'get_order_price_time_trades',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'order_id',
                    'date',
                ],
                'required': [
                    'order_id',
                    'date',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'order_id':
                        (str,),
                    'date':
                        (str,),
                },
                'attribute_map': {
                    'order_id': 'orderId',
                    'date': 'date',
                },
                'location_map': {
                    'order_id': 'query',
                    'date': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_order_volume_price_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (VolumePriceResponseRoot,), 400: (ErrorResponse,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/tca/order/volume-price',
                'operation_id': 'get_order_volume_price',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'order_id',
                    'date',
                ],
                'required': [
                    'order_id',
                    'date',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'order_id':
                        (str,),
                    'date':
                        (str,),
                },
                'attribute_map': {
                    'order_id': 'orderId',
                    'date': 'date',
                },
                'location_map': {
                    'order_id': 'query',
                    'date': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_order_volume_time_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (VolumeTimeResponseRoot,), 400: (ErrorResponse,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/tca/order/volume-time',
                'operation_id': 'get_order_volume_time',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'order_id',
                    'date',
                ],
                'required': [
                    'order_id',
                    'date',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'order_id':
                        (str,),
                    'date':
                        (str,),
                },
                'attribute_map': {
                    'order_id': 'orderId',
                    'date': 'date',
                },
                'location_map': {
                    'order_id': 'query',
                    'date': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_order_volume_venue_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (VolumeVenueResponseRoot,), 400: (ErrorResponse,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/tca/order/volume-venue',
                'operation_id': 'get_order_volume_venue',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'order_id',
                    'date',
                ],
                'required': [
                    'order_id',
                    'date',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'order_id':
                        (str,),
                    'date':
                        (str,),
                },
                'attribute_map': {
                    'order_id': 'orderId',
                    'date': 'date',
                },
                'location_map': {
                    'order_id': 'query',
                    'date': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )


    @staticmethod
    def apply_kwargs_defaults(kwargs, return_http_data_only, async_req):
        kwargs["async_req"] = async_req
        kwargs["_return_http_data_only"] = return_http_data_only
        kwargs["_preload_content"] = kwargs.get("_preload_content", True)
        kwargs["_request_timeout"] = kwargs.get("_request_timeout", None)
        kwargs["_check_input_type"] = kwargs.get("_check_input_type", True)
        kwargs["_check_return_type"] = kwargs.get("_check_return_type", True)
        kwargs["_spec_property_naming"] = kwargs.get("_spec_property_naming", False)
        kwargs["_content_type"] = kwargs.get("_content_type")
        kwargs["_host_index"] = kwargs.get("_host_index")


    def get_order_fill_count(
        self,
        order_id,
        date,
        **kwargs
    ) -> OrderFillCountResponseRoot:
        """Get Order Fill Count  # noqa: E501

        Get specified order fill count  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            OrderFillCountResponseRoot
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_fill_count_endpoint.call_with_http_info(**kwargs)

    def get_order_fill_count_with_http_info(
        self,
        order_id,
        date,
        **kwargs
    ) -> typing.Tuple[OrderFillCountResponseRoot, int, typing.MutableMapping]:
        """Get Order Fill Count  # noqa: E501

        Get specified order fill count  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            OrderFillCountResponseRoot
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_fill_count_endpoint.call_with_http_info(**kwargs)

    def get_order_fill_count_async(
        self,
        order_id,
        date,
        **kwargs
    ) -> "ApplyResult[OrderFillCountResponseRoot]":
        """Get Order Fill Count  # noqa: E501

        Get specified order fill count  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[OrderFillCountResponseRoot]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_fill_count_endpoint.call_with_http_info(**kwargs)

    def get_order_fill_count_with_http_info_async(
        self,
        order_id,
        date,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[OrderFillCountResponseRoot, int, typing.MutableMapping]]":
        """Get Order Fill Count  # noqa: E501

        Get specified order fill count  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(OrderFillCountResponseRoot, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_fill_count_endpoint.call_with_http_info(**kwargs)


    def get_order_index_etf(
        self,
        order_id,
        date,
        **kwargs
    ) -> IndexETFResponseRoot:
        """Get Index ETF data  # noqa: E501

        Get Index ETF data  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            IndexETFResponseRoot
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_index_etf_endpoint.call_with_http_info(**kwargs)

    def get_order_index_etf_with_http_info(
        self,
        order_id,
        date,
        **kwargs
    ) -> typing.Tuple[IndexETFResponseRoot, int, typing.MutableMapping]:
        """Get Index ETF data  # noqa: E501

        Get Index ETF data  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            IndexETFResponseRoot
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_index_etf_endpoint.call_with_http_info(**kwargs)

    def get_order_index_etf_async(
        self,
        order_id,
        date,
        **kwargs
    ) -> "ApplyResult[IndexETFResponseRoot]":
        """Get Index ETF data  # noqa: E501

        Get Index ETF data  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[IndexETFResponseRoot]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_index_etf_endpoint.call_with_http_info(**kwargs)

    def get_order_index_etf_with_http_info_async(
        self,
        order_id,
        date,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[IndexETFResponseRoot, int, typing.MutableMapping]]":
        """Get Index ETF data  # noqa: E501

        Get Index ETF data  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(IndexETFResponseRoot, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_index_etf_endpoint.call_with_http_info(**kwargs)


    def get_order_info(
        self,
        order_id,
        date,
        **kwargs
    ) -> OrderInfoResponseRoot:
        """Get Order Information  # noqa: E501

        Get specified order information  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            OrderInfoResponseRoot
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_info_endpoint.call_with_http_info(**kwargs)

    def get_order_info_with_http_info(
        self,
        order_id,
        date,
        **kwargs
    ) -> typing.Tuple[OrderInfoResponseRoot, int, typing.MutableMapping]:
        """Get Order Information  # noqa: E501

        Get specified order information  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            OrderInfoResponseRoot
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_info_endpoint.call_with_http_info(**kwargs)

    def get_order_info_async(
        self,
        order_id,
        date,
        **kwargs
    ) -> "ApplyResult[OrderInfoResponseRoot]":
        """Get Order Information  # noqa: E501

        Get specified order information  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[OrderInfoResponseRoot]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_info_endpoint.call_with_http_info(**kwargs)

    def get_order_info_with_http_info_async(
        self,
        order_id,
        date,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[OrderInfoResponseRoot, int, typing.MutableMapping]]":
        """Get Order Information  # noqa: E501

        Get specified order information  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(OrderInfoResponseRoot, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_info_endpoint.call_with_http_info(**kwargs)


    def get_order_intra_stats(
        self,
        order_id,
        date,
        **kwargs
    ) -> IntraOrderStatResponseRoot:
        """Get Intra Order Stats  # noqa: E501

        Get Intra Order Stats  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            IntraOrderStatResponseRoot
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_intra_stats_endpoint.call_with_http_info(**kwargs)

    def get_order_intra_stats_with_http_info(
        self,
        order_id,
        date,
        **kwargs
    ) -> typing.Tuple[IntraOrderStatResponseRoot, int, typing.MutableMapping]:
        """Get Intra Order Stats  # noqa: E501

        Get Intra Order Stats  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            IntraOrderStatResponseRoot
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_intra_stats_endpoint.call_with_http_info(**kwargs)

    def get_order_intra_stats_async(
        self,
        order_id,
        date,
        **kwargs
    ) -> "ApplyResult[IntraOrderStatResponseRoot]":
        """Get Intra Order Stats  # noqa: E501

        Get Intra Order Stats  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[IntraOrderStatResponseRoot]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_intra_stats_endpoint.call_with_http_info(**kwargs)

    def get_order_intra_stats_with_http_info_async(
        self,
        order_id,
        date,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[IntraOrderStatResponseRoot, int, typing.MutableMapping]]":
        """Get Intra Order Stats  # noqa: E501

        Get Intra Order Stats  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(IntraOrderStatResponseRoot, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_intra_stats_endpoint.call_with_http_info(**kwargs)


    def get_order_investment_timing(
        self,
        order_id,
        date,
        **kwargs
    ) -> InvestmentTimingResponseRoot:
        """Get Order Investment Timings  # noqa: E501

        Get Order Investment Timings  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InvestmentTimingResponseRoot
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_investment_timing_endpoint.call_with_http_info(**kwargs)

    def get_order_investment_timing_with_http_info(
        self,
        order_id,
        date,
        **kwargs
    ) -> typing.Tuple[InvestmentTimingResponseRoot, int, typing.MutableMapping]:
        """Get Order Investment Timings  # noqa: E501

        Get Order Investment Timings  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            InvestmentTimingResponseRoot
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_investment_timing_endpoint.call_with_http_info(**kwargs)

    def get_order_investment_timing_async(
        self,
        order_id,
        date,
        **kwargs
    ) -> "ApplyResult[InvestmentTimingResponseRoot]":
        """Get Order Investment Timings  # noqa: E501

        Get Order Investment Timings  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[InvestmentTimingResponseRoot]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_investment_timing_endpoint.call_with_http_info(**kwargs)

    def get_order_investment_timing_with_http_info_async(
        self,
        order_id,
        date,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[InvestmentTimingResponseRoot, int, typing.MutableMapping]]":
        """Get Order Investment Timings  # noqa: E501

        Get Order Investment Timings  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(InvestmentTimingResponseRoot, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_investment_timing_endpoint.call_with_http_info(**kwargs)


    def get_order_price_time_fills(
        self,
        order_id,
        date,
        **kwargs
    ) -> PriceTimeFillResponseRoot:
        """Get Price Time Fills  # noqa: E501

        Get Price Time Fills  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            PriceTimeFillResponseRoot
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_price_time_fills_endpoint.call_with_http_info(**kwargs)

    def get_order_price_time_fills_with_http_info(
        self,
        order_id,
        date,
        **kwargs
    ) -> typing.Tuple[PriceTimeFillResponseRoot, int, typing.MutableMapping]:
        """Get Price Time Fills  # noqa: E501

        Get Price Time Fills  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            PriceTimeFillResponseRoot
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_price_time_fills_endpoint.call_with_http_info(**kwargs)

    def get_order_price_time_fills_async(
        self,
        order_id,
        date,
        **kwargs
    ) -> "ApplyResult[PriceTimeFillResponseRoot]":
        """Get Price Time Fills  # noqa: E501

        Get Price Time Fills  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[PriceTimeFillResponseRoot]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_price_time_fills_endpoint.call_with_http_info(**kwargs)

    def get_order_price_time_fills_with_http_info_async(
        self,
        order_id,
        date,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[PriceTimeFillResponseRoot, int, typing.MutableMapping]]":
        """Get Price Time Fills  # noqa: E501

        Get Price Time Fills  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(PriceTimeFillResponseRoot, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_price_time_fills_endpoint.call_with_http_info(**kwargs)


    def get_order_price_time_quotes(
        self,
        order_id,
        date,
        **kwargs
    ) -> PriceTimeQuoteResponseRoot:
        """Get Price Time Quotes  # noqa: E501

        Get Price Time Quotes  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            PriceTimeQuoteResponseRoot
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_price_time_quotes_endpoint.call_with_http_info(**kwargs)

    def get_order_price_time_quotes_with_http_info(
        self,
        order_id,
        date,
        **kwargs
    ) -> typing.Tuple[PriceTimeQuoteResponseRoot, int, typing.MutableMapping]:
        """Get Price Time Quotes  # noqa: E501

        Get Price Time Quotes  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            PriceTimeQuoteResponseRoot
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_price_time_quotes_endpoint.call_with_http_info(**kwargs)

    def get_order_price_time_quotes_async(
        self,
        order_id,
        date,
        **kwargs
    ) -> "ApplyResult[PriceTimeQuoteResponseRoot]":
        """Get Price Time Quotes  # noqa: E501

        Get Price Time Quotes  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[PriceTimeQuoteResponseRoot]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_price_time_quotes_endpoint.call_with_http_info(**kwargs)

    def get_order_price_time_quotes_with_http_info_async(
        self,
        order_id,
        date,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[PriceTimeQuoteResponseRoot, int, typing.MutableMapping]]":
        """Get Price Time Quotes  # noqa: E501

        Get Price Time Quotes  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(PriceTimeQuoteResponseRoot, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_price_time_quotes_endpoint.call_with_http_info(**kwargs)


    def get_order_price_time_trades(
        self,
        order_id,
        date,
        **kwargs
    ) -> PriceTimeTradeResponseRoot:
        """Get Price Time Trades  # noqa: E501

        Get Price Time Trades  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            PriceTimeTradeResponseRoot
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_price_time_trades_endpoint.call_with_http_info(**kwargs)

    def get_order_price_time_trades_with_http_info(
        self,
        order_id,
        date,
        **kwargs
    ) -> typing.Tuple[PriceTimeTradeResponseRoot, int, typing.MutableMapping]:
        """Get Price Time Trades  # noqa: E501

        Get Price Time Trades  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            PriceTimeTradeResponseRoot
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_price_time_trades_endpoint.call_with_http_info(**kwargs)

    def get_order_price_time_trades_async(
        self,
        order_id,
        date,
        **kwargs
    ) -> "ApplyResult[PriceTimeTradeResponseRoot]":
        """Get Price Time Trades  # noqa: E501

        Get Price Time Trades  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[PriceTimeTradeResponseRoot]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_price_time_trades_endpoint.call_with_http_info(**kwargs)

    def get_order_price_time_trades_with_http_info_async(
        self,
        order_id,
        date,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[PriceTimeTradeResponseRoot, int, typing.MutableMapping]]":
        """Get Price Time Trades  # noqa: E501

        Get Price Time Trades  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(PriceTimeTradeResponseRoot, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_price_time_trades_endpoint.call_with_http_info(**kwargs)


    def get_order_volume_price(
        self,
        order_id,
        date,
        **kwargs
    ) -> VolumePriceResponseRoot:
        """Get Order Volume Prices  # noqa: E501

        Get Order Volume Prices  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            VolumePriceResponseRoot
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_volume_price_endpoint.call_with_http_info(**kwargs)

    def get_order_volume_price_with_http_info(
        self,
        order_id,
        date,
        **kwargs
    ) -> typing.Tuple[VolumePriceResponseRoot, int, typing.MutableMapping]:
        """Get Order Volume Prices  # noqa: E501

        Get Order Volume Prices  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            VolumePriceResponseRoot
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_volume_price_endpoint.call_with_http_info(**kwargs)

    def get_order_volume_price_async(
        self,
        order_id,
        date,
        **kwargs
    ) -> "ApplyResult[VolumePriceResponseRoot]":
        """Get Order Volume Prices  # noqa: E501

        Get Order Volume Prices  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[VolumePriceResponseRoot]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_volume_price_endpoint.call_with_http_info(**kwargs)

    def get_order_volume_price_with_http_info_async(
        self,
        order_id,
        date,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[VolumePriceResponseRoot, int, typing.MutableMapping]]":
        """Get Order Volume Prices  # noqa: E501

        Get Order Volume Prices  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(VolumePriceResponseRoot, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_volume_price_endpoint.call_with_http_info(**kwargs)


    def get_order_volume_time(
        self,
        order_id,
        date,
        **kwargs
    ) -> VolumeTimeResponseRoot:
        """Get Order Volume Times  # noqa: E501

        Get Order Volume Times  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            VolumeTimeResponseRoot
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_volume_time_endpoint.call_with_http_info(**kwargs)

    def get_order_volume_time_with_http_info(
        self,
        order_id,
        date,
        **kwargs
    ) -> typing.Tuple[VolumeTimeResponseRoot, int, typing.MutableMapping]:
        """Get Order Volume Times  # noqa: E501

        Get Order Volume Times  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            VolumeTimeResponseRoot
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_volume_time_endpoint.call_with_http_info(**kwargs)

    def get_order_volume_time_async(
        self,
        order_id,
        date,
        **kwargs
    ) -> "ApplyResult[VolumeTimeResponseRoot]":
        """Get Order Volume Times  # noqa: E501

        Get Order Volume Times  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[VolumeTimeResponseRoot]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_volume_time_endpoint.call_with_http_info(**kwargs)

    def get_order_volume_time_with_http_info_async(
        self,
        order_id,
        date,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[VolumeTimeResponseRoot, int, typing.MutableMapping]]":
        """Get Order Volume Times  # noqa: E501

        Get Order Volume Times  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(VolumeTimeResponseRoot, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_volume_time_endpoint.call_with_http_info(**kwargs)


    def get_order_volume_venue(
        self,
        order_id,
        date,
        **kwargs
    ) -> VolumeVenueResponseRoot:
        """Get Order Volume Venues  # noqa: E501

        Get Order Volume Venues  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            VolumeVenueResponseRoot
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_volume_venue_endpoint.call_with_http_info(**kwargs)

    def get_order_volume_venue_with_http_info(
        self,
        order_id,
        date,
        **kwargs
    ) -> typing.Tuple[VolumeVenueResponseRoot, int, typing.MutableMapping]:
        """Get Order Volume Venues  # noqa: E501

        Get Order Volume Venues  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            VolumeVenueResponseRoot
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_volume_venue_endpoint.call_with_http_info(**kwargs)

    def get_order_volume_venue_async(
        self,
        order_id,
        date,
        **kwargs
    ) -> "ApplyResult[VolumeVenueResponseRoot]":
        """Get Order Volume Venues  # noqa: E501

        Get Order Volume Venues  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[VolumeVenueResponseRoot]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_volume_venue_endpoint.call_with_http_info(**kwargs)

    def get_order_volume_venue_with_http_info_async(
        self,
        order_id,
        date,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[VolumeVenueResponseRoot, int, typing.MutableMapping]]":
        """Get Order Volume Venues  # noqa: E501

        Get Order Volume Venues  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            order_id (str): The Order Id
            date (str): The Order Date in the format YYYY-MM-DD

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(VolumeVenueResponseRoot, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['order_id'] = \
            order_id
        kwargs['date'] = \
            date
        return self.get_order_volume_venue_endpoint.call_with_http_info(**kwargs)


