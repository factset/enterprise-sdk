"""
    Best Execution Analytics for Smarter Trading (BEAST) API

    Enables clients to programmatically access the underlying data which powers the BEAST Liquidity Analytics (LA) and Transaction Cost Analysis (TCA) applications.  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Contact: api@factset.com
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401
from multiprocessing.pool import ApplyResult
import typing

from fds.sdk.BestExecutionAnalyticsforSmarterTradingBEAST.api_client import ApiClient, Endpoint as _Endpoint
from fds.sdk.BestExecutionAnalyticsforSmarterTradingBEAST.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from fds.sdk.BestExecutionAnalyticsforSmarterTradingBEAST.exceptions import ApiException
from fds.sdk.BestExecutionAnalyticsforSmarterTradingBEAST.model.cost_impact_response_root import CostImpactResponseRoot
from fds.sdk.BestExecutionAnalyticsforSmarterTradingBEAST.model.cost_impact_standard_response_root import CostImpactStandardResponseRoot
from fds.sdk.BestExecutionAnalyticsforSmarterTradingBEAST.model.error_response import ErrorResponse
from fds.sdk.BestExecutionAnalyticsforSmarterTradingBEAST.model.vwap_response_root import VwapResponseRoot





class MarketImpactApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

        self.get_cost_impact_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (CostImpactResponseRoot,), 400: (ErrorResponse,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/tca/market-impact/cost-impact',
                'operation_id': 'get_cost_impact',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'date',
                    'start_time',
                    'end_time',
                    'pause_start_time',
                    'pause_end_time',
                    'security_id',
                    'region',
                    'order_volume',
                    'front_load_half_life',
                    'currency',
                    'isin',
                    'spread_sensitivity',
                    'liquidity_sensitivity',
                ],
                'required': [
                    'date',
                    'start_time',
                    'end_time',
                    'pause_start_time',
                    'pause_end_time',
                    'security_id',
                    'region',
                    'order_volume',
                    'front_load_half_life',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'date':
                        (str,),
                    'start_time':
                        (str,),
                    'end_time':
                        (str,),
                    'pause_start_time':
                        (str,),
                    'pause_end_time':
                        (str,),
                    'security_id':
                        (str,),
                    'region':
                        (str,),
                    'order_volume':
                        (float,),
                    'front_load_half_life':
                        (float,),
                    'currency':
                        (str,),
                    'isin':
                        (str,),
                    'spread_sensitivity':
                        (float,),
                    'liquidity_sensitivity':
                        (float,),
                },
                'attribute_map': {
                    'date': 'date',
                    'start_time': 'startTime',
                    'end_time': 'endTime',
                    'pause_start_time': 'pauseStartTime',
                    'pause_end_time': 'pauseEndTime',
                    'security_id': 'securityId',
                    'region': 'region',
                    'order_volume': 'orderVolume',
                    'front_load_half_life': 'frontLoadHalfLife',
                    'currency': 'currency',
                    'isin': 'isin',
                    'spread_sensitivity': 'spreadSensitivity',
                    'liquidity_sensitivity': 'liquiditySensitivity',
                },
                'location_map': {
                    'date': 'query',
                    'start_time': 'query',
                    'end_time': 'query',
                    'pause_start_time': 'query',
                    'pause_end_time': 'query',
                    'security_id': 'query',
                    'region': 'query',
                    'order_volume': 'query',
                    'front_load_half_life': 'query',
                    'currency': 'query',
                    'isin': 'query',
                    'spread_sensitivity': 'query',
                    'liquidity_sensitivity': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_cost_impact_standard_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (CostImpactStandardResponseRoot,), 400: (ErrorResponse,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/tca/market-impact/cost-impact-standard',
                'operation_id': 'get_cost_impact_standard',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'security_id',
                    'region',
                    'order_volume',
                    'currency',
                ],
                'required': [
                    'security_id',
                    'region',
                    'order_volume',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'security_id':
                        (str,),
                    'region':
                        (str,),
                    'order_volume':
                        (float,),
                    'currency':
                        (str,),
                },
                'attribute_map': {
                    'security_id': 'securityId',
                    'region': 'region',
                    'order_volume': 'orderVolume',
                    'currency': 'currency',
                },
                'location_map': {
                    'security_id': 'query',
                    'region': 'query',
                    'order_volume': 'query',
                    'currency': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_previous_vwaps_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (VwapResponseRoot,), 400: (ErrorResponse,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/tca/market-impact/previous-vwaps',
                'operation_id': 'get_previous_vwaps',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'date',
                    'start_time',
                    'end_time',
                    'security_id',
                    'region',
                    'currency',
                ],
                'required': [
                    'date',
                    'start_time',
                    'end_time',
                    'security_id',
                    'region',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'date':
                        (str,),
                    'start_time':
                        (str,),
                    'end_time':
                        (str,),
                    'security_id':
                        (str,),
                    'region':
                        (str,),
                    'currency':
                        (str,),
                },
                'attribute_map': {
                    'date': 'date',
                    'start_time': 'startTime',
                    'end_time': 'endTime',
                    'security_id': 'securityId',
                    'region': 'region',
                    'currency': 'currency',
                },
                'location_map': {
                    'date': 'query',
                    'start_time': 'query',
                    'end_time': 'query',
                    'security_id': 'query',
                    'region': 'query',
                    'currency': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )


    @staticmethod
    def apply_kwargs_defaults(kwargs, return_http_data_only, async_req):
        kwargs["async_req"] = async_req
        kwargs["_return_http_data_only"] = return_http_data_only
        kwargs["_preload_content"] = kwargs.get("_preload_content", True)
        kwargs["_request_timeout"] = kwargs.get("_request_timeout", None)
        kwargs["_check_input_type"] = kwargs.get("_check_input_type", True)
        kwargs["_check_return_type"] = kwargs.get("_check_return_type", True)
        kwargs["_spec_property_naming"] = kwargs.get("_spec_property_naming", False)
        kwargs["_content_type"] = kwargs.get("_content_type")
        kwargs["_host_index"] = kwargs.get("_host_index")


    def get_cost_impact(
        self,
        date,
        start_time,
        end_time,
        pause_start_time,
        pause_end_time,
        security_id,
        region,
        order_volume,
        front_load_half_life,
        **kwargs
    ) -> CostImpactResponseRoot:
        """Get Cost Impact  # noqa: E501

        Get Cost Impact  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            date (str): Date in the format YYYY-MM-DD
            start_time (str): Start Time in the format HH:MM:SS
            end_time (str): End Time in the format HH:MM:SS
            pause_start_time (str): Pause Start Time in the format HH:MM:SS
            pause_end_time (str): Pause End Time in the format HH:MM:SS
            security_id (str): ISIN for European securities, otherwise TICKER
            region (str): The two character ISO country code of the trading region. EMEA is used for the European trading region
            order_volume (float): Order Volume
            front_load_half_life (float): Front Load Half Life

        Keyword Args:
            currency (str): The ISO 4217 currency code. [optional]
            isin (str): Isin code. [optional]
            spread_sensitivity (float): Spread Sensitivity. [optional] if omitted the server will use the default value of 0
            liquidity_sensitivity (float): Liquidity Sensitivity. [optional] if omitted the server will use the default value of 0
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            CostImpactResponseRoot
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['date'] = \
            date
        kwargs['start_time'] = \
            start_time
        kwargs['end_time'] = \
            end_time
        kwargs['pause_start_time'] = \
            pause_start_time
        kwargs['pause_end_time'] = \
            pause_end_time
        kwargs['security_id'] = \
            security_id
        kwargs['region'] = \
            region
        kwargs['order_volume'] = \
            order_volume
        kwargs['front_load_half_life'] = \
            front_load_half_life
        return self.get_cost_impact_endpoint.call_with_http_info(**kwargs)

    def get_cost_impact_with_http_info(
        self,
        date,
        start_time,
        end_time,
        pause_start_time,
        pause_end_time,
        security_id,
        region,
        order_volume,
        front_load_half_life,
        **kwargs
    ) -> typing.Tuple[CostImpactResponseRoot, int, typing.MutableMapping]:
        """Get Cost Impact  # noqa: E501

        Get Cost Impact  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            date (str): Date in the format YYYY-MM-DD
            start_time (str): Start Time in the format HH:MM:SS
            end_time (str): End Time in the format HH:MM:SS
            pause_start_time (str): Pause Start Time in the format HH:MM:SS
            pause_end_time (str): Pause End Time in the format HH:MM:SS
            security_id (str): ISIN for European securities, otherwise TICKER
            region (str): The two character ISO country code of the trading region. EMEA is used for the European trading region
            order_volume (float): Order Volume
            front_load_half_life (float): Front Load Half Life

        Keyword Args:
            currency (str): The ISO 4217 currency code. [optional]
            isin (str): Isin code. [optional]
            spread_sensitivity (float): Spread Sensitivity. [optional] if omitted the server will use the default value of 0
            liquidity_sensitivity (float): Liquidity Sensitivity. [optional] if omitted the server will use the default value of 0
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            CostImpactResponseRoot
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['date'] = \
            date
        kwargs['start_time'] = \
            start_time
        kwargs['end_time'] = \
            end_time
        kwargs['pause_start_time'] = \
            pause_start_time
        kwargs['pause_end_time'] = \
            pause_end_time
        kwargs['security_id'] = \
            security_id
        kwargs['region'] = \
            region
        kwargs['order_volume'] = \
            order_volume
        kwargs['front_load_half_life'] = \
            front_load_half_life
        return self.get_cost_impact_endpoint.call_with_http_info(**kwargs)

    def get_cost_impact_async(
        self,
        date,
        start_time,
        end_time,
        pause_start_time,
        pause_end_time,
        security_id,
        region,
        order_volume,
        front_load_half_life,
        **kwargs
    ) -> "ApplyResult[CostImpactResponseRoot]":
        """Get Cost Impact  # noqa: E501

        Get Cost Impact  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            date (str): Date in the format YYYY-MM-DD
            start_time (str): Start Time in the format HH:MM:SS
            end_time (str): End Time in the format HH:MM:SS
            pause_start_time (str): Pause Start Time in the format HH:MM:SS
            pause_end_time (str): Pause End Time in the format HH:MM:SS
            security_id (str): ISIN for European securities, otherwise TICKER
            region (str): The two character ISO country code of the trading region. EMEA is used for the European trading region
            order_volume (float): Order Volume
            front_load_half_life (float): Front Load Half Life

        Keyword Args:
            currency (str): The ISO 4217 currency code. [optional]
            isin (str): Isin code. [optional]
            spread_sensitivity (float): Spread Sensitivity. [optional] if omitted the server will use the default value of 0
            liquidity_sensitivity (float): Liquidity Sensitivity. [optional] if omitted the server will use the default value of 0
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[CostImpactResponseRoot]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['date'] = \
            date
        kwargs['start_time'] = \
            start_time
        kwargs['end_time'] = \
            end_time
        kwargs['pause_start_time'] = \
            pause_start_time
        kwargs['pause_end_time'] = \
            pause_end_time
        kwargs['security_id'] = \
            security_id
        kwargs['region'] = \
            region
        kwargs['order_volume'] = \
            order_volume
        kwargs['front_load_half_life'] = \
            front_load_half_life
        return self.get_cost_impact_endpoint.call_with_http_info(**kwargs)

    def get_cost_impact_with_http_info_async(
        self,
        date,
        start_time,
        end_time,
        pause_start_time,
        pause_end_time,
        security_id,
        region,
        order_volume,
        front_load_half_life,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[CostImpactResponseRoot, int, typing.MutableMapping]]":
        """Get Cost Impact  # noqa: E501

        Get Cost Impact  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            date (str): Date in the format YYYY-MM-DD
            start_time (str): Start Time in the format HH:MM:SS
            end_time (str): End Time in the format HH:MM:SS
            pause_start_time (str): Pause Start Time in the format HH:MM:SS
            pause_end_time (str): Pause End Time in the format HH:MM:SS
            security_id (str): ISIN for European securities, otherwise TICKER
            region (str): The two character ISO country code of the trading region. EMEA is used for the European trading region
            order_volume (float): Order Volume
            front_load_half_life (float): Front Load Half Life

        Keyword Args:
            currency (str): The ISO 4217 currency code. [optional]
            isin (str): Isin code. [optional]
            spread_sensitivity (float): Spread Sensitivity. [optional] if omitted the server will use the default value of 0
            liquidity_sensitivity (float): Liquidity Sensitivity. [optional] if omitted the server will use the default value of 0
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(CostImpactResponseRoot, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['date'] = \
            date
        kwargs['start_time'] = \
            start_time
        kwargs['end_time'] = \
            end_time
        kwargs['pause_start_time'] = \
            pause_start_time
        kwargs['pause_end_time'] = \
            pause_end_time
        kwargs['security_id'] = \
            security_id
        kwargs['region'] = \
            region
        kwargs['order_volume'] = \
            order_volume
        kwargs['front_load_half_life'] = \
            front_load_half_life
        return self.get_cost_impact_endpoint.call_with_http_info(**kwargs)


    def get_cost_impact_standard(
        self,
        security_id,
        region,
        order_volume,
        **kwargs
    ) -> CostImpactStandardResponseRoot:
        """Get Standard Cost Impact  # noqa: E501

        Get Standard Cost Impact  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            security_id (str): ISIN for European securities, otherwise TICKER
            region (str): The two character ISO country code of the trading region. EMEA is used for the European trading region
            order_volume (float): Order Volume

        Keyword Args:
            currency (str): The ISO 4217 currency code. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            CostImpactStandardResponseRoot
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['security_id'] = \
            security_id
        kwargs['region'] = \
            region
        kwargs['order_volume'] = \
            order_volume
        return self.get_cost_impact_standard_endpoint.call_with_http_info(**kwargs)

    def get_cost_impact_standard_with_http_info(
        self,
        security_id,
        region,
        order_volume,
        **kwargs
    ) -> typing.Tuple[CostImpactStandardResponseRoot, int, typing.MutableMapping]:
        """Get Standard Cost Impact  # noqa: E501

        Get Standard Cost Impact  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            security_id (str): ISIN for European securities, otherwise TICKER
            region (str): The two character ISO country code of the trading region. EMEA is used for the European trading region
            order_volume (float): Order Volume

        Keyword Args:
            currency (str): The ISO 4217 currency code. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            CostImpactStandardResponseRoot
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['security_id'] = \
            security_id
        kwargs['region'] = \
            region
        kwargs['order_volume'] = \
            order_volume
        return self.get_cost_impact_standard_endpoint.call_with_http_info(**kwargs)

    def get_cost_impact_standard_async(
        self,
        security_id,
        region,
        order_volume,
        **kwargs
    ) -> "ApplyResult[CostImpactStandardResponseRoot]":
        """Get Standard Cost Impact  # noqa: E501

        Get Standard Cost Impact  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            security_id (str): ISIN for European securities, otherwise TICKER
            region (str): The two character ISO country code of the trading region. EMEA is used for the European trading region
            order_volume (float): Order Volume

        Keyword Args:
            currency (str): The ISO 4217 currency code. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[CostImpactStandardResponseRoot]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['security_id'] = \
            security_id
        kwargs['region'] = \
            region
        kwargs['order_volume'] = \
            order_volume
        return self.get_cost_impact_standard_endpoint.call_with_http_info(**kwargs)

    def get_cost_impact_standard_with_http_info_async(
        self,
        security_id,
        region,
        order_volume,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[CostImpactStandardResponseRoot, int, typing.MutableMapping]]":
        """Get Standard Cost Impact  # noqa: E501

        Get Standard Cost Impact  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            security_id (str): ISIN for European securities, otherwise TICKER
            region (str): The two character ISO country code of the trading region. EMEA is used for the European trading region
            order_volume (float): Order Volume

        Keyword Args:
            currency (str): The ISO 4217 currency code. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(CostImpactStandardResponseRoot, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['security_id'] = \
            security_id
        kwargs['region'] = \
            region
        kwargs['order_volume'] = \
            order_volume
        return self.get_cost_impact_standard_endpoint.call_with_http_info(**kwargs)


    def get_previous_vwaps(
        self,
        date,
        start_time,
        end_time,
        security_id,
        region,
        **kwargs
    ) -> VwapResponseRoot:
        """Get Previous Volume Weighted Average Prices  # noqa: E501

        Get previous vwaps by specified date, time range, security, region and optional currency  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            date (str): Date in the format YYYY-MM-DD
            start_time (str): Start Time in the format HH:MM:SS
            end_time (str): End Time in the format HH:MM:SS
            security_id (str): ISIN for European securities, otherwise TICKER
            region (str): The two character ISO country code of the trading region. EMEA is used for the European trading region

        Keyword Args:
            currency (str): The ISO 4217 currency code. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            VwapResponseRoot
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['date'] = \
            date
        kwargs['start_time'] = \
            start_time
        kwargs['end_time'] = \
            end_time
        kwargs['security_id'] = \
            security_id
        kwargs['region'] = \
            region
        return self.get_previous_vwaps_endpoint.call_with_http_info(**kwargs)

    def get_previous_vwaps_with_http_info(
        self,
        date,
        start_time,
        end_time,
        security_id,
        region,
        **kwargs
    ) -> typing.Tuple[VwapResponseRoot, int, typing.MutableMapping]:
        """Get Previous Volume Weighted Average Prices  # noqa: E501

        Get previous vwaps by specified date, time range, security, region and optional currency  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            date (str): Date in the format YYYY-MM-DD
            start_time (str): Start Time in the format HH:MM:SS
            end_time (str): End Time in the format HH:MM:SS
            security_id (str): ISIN for European securities, otherwise TICKER
            region (str): The two character ISO country code of the trading region. EMEA is used for the European trading region

        Keyword Args:
            currency (str): The ISO 4217 currency code. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            VwapResponseRoot
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['date'] = \
            date
        kwargs['start_time'] = \
            start_time
        kwargs['end_time'] = \
            end_time
        kwargs['security_id'] = \
            security_id
        kwargs['region'] = \
            region
        return self.get_previous_vwaps_endpoint.call_with_http_info(**kwargs)

    def get_previous_vwaps_async(
        self,
        date,
        start_time,
        end_time,
        security_id,
        region,
        **kwargs
    ) -> "ApplyResult[VwapResponseRoot]":
        """Get Previous Volume Weighted Average Prices  # noqa: E501

        Get previous vwaps by specified date, time range, security, region and optional currency  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            date (str): Date in the format YYYY-MM-DD
            start_time (str): Start Time in the format HH:MM:SS
            end_time (str): End Time in the format HH:MM:SS
            security_id (str): ISIN for European securities, otherwise TICKER
            region (str): The two character ISO country code of the trading region. EMEA is used for the European trading region

        Keyword Args:
            currency (str): The ISO 4217 currency code. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[VwapResponseRoot]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['date'] = \
            date
        kwargs['start_time'] = \
            start_time
        kwargs['end_time'] = \
            end_time
        kwargs['security_id'] = \
            security_id
        kwargs['region'] = \
            region
        return self.get_previous_vwaps_endpoint.call_with_http_info(**kwargs)

    def get_previous_vwaps_with_http_info_async(
        self,
        date,
        start_time,
        end_time,
        security_id,
        region,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[VwapResponseRoot, int, typing.MutableMapping]]":
        """Get Previous Volume Weighted Average Prices  # noqa: E501

        Get previous vwaps by specified date, time range, security, region and optional currency  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            date (str): Date in the format YYYY-MM-DD
            start_time (str): Start Time in the format HH:MM:SS
            end_time (str): End Time in the format HH:MM:SS
            security_id (str): ISIN for European securities, otherwise TICKER
            region (str): The two character ISO country code of the trading region. EMEA is used for the European trading region

        Keyword Args:
            currency (str): The ISO 4217 currency code. [optional]
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(VwapResponseRoot, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['date'] = \
            date
        kwargs['start_time'] = \
            start_time
        kwargs['end_time'] = \
            end_time
        kwargs['security_id'] = \
            security_id
        kwargs['region'] = \
            region
        return self.get_previous_vwaps_endpoint.call_with_http_info(**kwargs)


