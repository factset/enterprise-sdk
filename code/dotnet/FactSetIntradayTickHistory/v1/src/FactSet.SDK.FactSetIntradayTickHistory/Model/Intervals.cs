/*
 * Tick History
 *
 * <p>FactSetâ€™s Tick History provides cost-effective access to real-time and delayed global exchange data. Proprietary technology normalizes over 200 global exchanges and 19 tick history fields. Asset types integrated include equities, futures, options, fixed income, mutual funds, ETFs, indices, commodities, and FX rates.</p><p>Tick History provides dynamic access to tick data for a specific security intra-day or historically via standard HTTPS protocol. History is available for all quotes and trades for a trailing 6 months or 1-year, respectively. Quotes and trade data for Options is available for 30 days. Tick History data is also available in a separate end-of-day feed.</p>   
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = FactSet.SDK.FactSetIntradayTickHistory.Client.OpenAPIDateConverter;

namespace FactSet.SDK.FactSetIntradayTickHistory.Model
{
    /// <summary>
    /// Intervals
    /// </summary>
    [DataContract(Name = "intervals")]
    public partial class Intervals : IEquatable<Intervals>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Intervals" /> class.
        /// </summary>
        /// <param name="_0">Every Tick. Max days requested &#x3D; 1.</param>
        /// <param name="_1s">1 Second. Max days requested &#x3D; 1.</param>
        /// <param name="_5s">5 Seconds. Max days requested &#x3D; 1.</param>
        /// <param name="_10s">10 Seconds. Max days requested &#x3D; 1.</param>
        /// <param name="_15s">15 Seconds. Max days requested &#x3D; 1.</param>
        /// <param name="_30s">30 Seconds. Max days requested &#x3D; 15.</param>
        /// <param name="_1m">1 Minute. Max days requested &#x3D; 30.</param>
        /// <param name="_2m">2 Minutes. Max days requested &#x3D; 60.</param>
        /// <param name="_5m">5 Minutes. Max days requested &#x3D; 60.</param>
        /// <param name="_10m">10 Minutes. Max days requested &#x3D; 60.</param>
        /// <param name="_15m">15 Minutes. Max days requested &#x3D; 60.</param>
        /// <param name="_30m">30 Minutes. Max days requested &#x3D; 60.</param>
        /// <param name="_1h">1 Hour. Max days requested &#x3D; 60.</param>
        public Intervals(string _0 = default(string), string _1s = default(string), string _5s = default(string), string _10s = default(string), string _15s = default(string), string _30s = default(string), string _1m = default(string), string _2m = default(string), string _5m = default(string), string _10m = default(string), string _15m = default(string), string _30m = default(string), string _1h = default(string))
        {
            this._0 = _0;
            this._1S = _1s;
            this._5S = _5s;
            this._10S = _10s;
            this._15S = _15s;
            this._30S = _30s;
            this._1M = _1m;
            this._2M = _2m;
            this._5M = _5m;
            this._10M = _10m;
            this._15M = _15m;
            this._30M = _30m;
            this._1H = _1h;
        }

        /// <summary>
        /// Every Tick. Max days requested &#x3D; 1
        /// </summary>
        /// <value>Every Tick. Max days requested &#x3D; 1</value>
        [DataMember(Name = "0", EmitDefaultValue = false)]
        public string _0 { get; set; }

        /// <summary>
        /// 1 Second. Max days requested &#x3D; 1
        /// </summary>
        /// <value>1 Second. Max days requested &#x3D; 1</value>
        [DataMember(Name = "1S", EmitDefaultValue = false)]
        public string _1S { get; set; }

        /// <summary>
        /// 5 Seconds. Max days requested &#x3D; 1
        /// </summary>
        /// <value>5 Seconds. Max days requested &#x3D; 1</value>
        [DataMember(Name = "5S", EmitDefaultValue = false)]
        public string _5S { get; set; }

        /// <summary>
        /// 10 Seconds. Max days requested &#x3D; 1
        /// </summary>
        /// <value>10 Seconds. Max days requested &#x3D; 1</value>
        [DataMember(Name = "10S", EmitDefaultValue = false)]
        public string _10S { get; set; }

        /// <summary>
        /// 15 Seconds. Max days requested &#x3D; 1
        /// </summary>
        /// <value>15 Seconds. Max days requested &#x3D; 1</value>
        [DataMember(Name = "15S", EmitDefaultValue = false)]
        public string _15S { get; set; }

        /// <summary>
        /// 30 Seconds. Max days requested &#x3D; 15
        /// </summary>
        /// <value>30 Seconds. Max days requested &#x3D; 15</value>
        [DataMember(Name = "30S", EmitDefaultValue = false)]
        public string _30S { get; set; }

        /// <summary>
        /// 1 Minute. Max days requested &#x3D; 30
        /// </summary>
        /// <value>1 Minute. Max days requested &#x3D; 30</value>
        [DataMember(Name = "1M", EmitDefaultValue = false)]
        public string _1M { get; set; }

        /// <summary>
        /// 2 Minutes. Max days requested &#x3D; 60
        /// </summary>
        /// <value>2 Minutes. Max days requested &#x3D; 60</value>
        [DataMember(Name = "2M", EmitDefaultValue = false)]
        public string _2M { get; set; }

        /// <summary>
        /// 5 Minutes. Max days requested &#x3D; 60
        /// </summary>
        /// <value>5 Minutes. Max days requested &#x3D; 60</value>
        [DataMember(Name = "5M", EmitDefaultValue = false)]
        public string _5M { get; set; }

        /// <summary>
        /// 10 Minutes. Max days requested &#x3D; 60
        /// </summary>
        /// <value>10 Minutes. Max days requested &#x3D; 60</value>
        [DataMember(Name = "10M", EmitDefaultValue = false)]
        public string _10M { get; set; }

        /// <summary>
        /// 15 Minutes. Max days requested &#x3D; 60
        /// </summary>
        /// <value>15 Minutes. Max days requested &#x3D; 60</value>
        [DataMember(Name = "15M", EmitDefaultValue = false)]
        public string _15M { get; set; }

        /// <summary>
        /// 30 Minutes. Max days requested &#x3D; 60
        /// </summary>
        /// <value>30 Minutes. Max days requested &#x3D; 60</value>
        [DataMember(Name = "30M", EmitDefaultValue = false)]
        public string _30M { get; set; }

        /// <summary>
        /// 1 Hour. Max days requested &#x3D; 60
        /// </summary>
        /// <value>1 Hour. Max days requested &#x3D; 60</value>
        [DataMember(Name = "1H", EmitDefaultValue = false)]
        public string _1H { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Intervals {\n");
            sb.Append("  _0: ").Append(_0).Append("\n");
            sb.Append("  _1S: ").Append(_1S).Append("\n");
            sb.Append("  _5S: ").Append(_5S).Append("\n");
            sb.Append("  _10S: ").Append(_10S).Append("\n");
            sb.Append("  _15S: ").Append(_15S).Append("\n");
            sb.Append("  _30S: ").Append(_30S).Append("\n");
            sb.Append("  _1M: ").Append(_1M).Append("\n");
            sb.Append("  _2M: ").Append(_2M).Append("\n");
            sb.Append("  _5M: ").Append(_5M).Append("\n");
            sb.Append("  _10M: ").Append(_10M).Append("\n");
            sb.Append("  _15M: ").Append(_15M).Append("\n");
            sb.Append("  _30M: ").Append(_30M).Append("\n");
            sb.Append("  _1H: ").Append(_1H).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Intervals);
        }

        /// <summary>
        /// Returns true if Intervals instances are equal
        /// </summary>
        /// <param name="input">Instance of Intervals to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Intervals input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this._0 == input._0 ||
                    (this._0 != null &&
                    this._0.Equals(input._0))
                ) && 
                (
                    this._1S == input._1S ||
                    (this._1S != null &&
                    this._1S.Equals(input._1S))
                ) && 
                (
                    this._5S == input._5S ||
                    (this._5S != null &&
                    this._5S.Equals(input._5S))
                ) && 
                (
                    this._10S == input._10S ||
                    (this._10S != null &&
                    this._10S.Equals(input._10S))
                ) && 
                (
                    this._15S == input._15S ||
                    (this._15S != null &&
                    this._15S.Equals(input._15S))
                ) && 
                (
                    this._30S == input._30S ||
                    (this._30S != null &&
                    this._30S.Equals(input._30S))
                ) && 
                (
                    this._1M == input._1M ||
                    (this._1M != null &&
                    this._1M.Equals(input._1M))
                ) && 
                (
                    this._2M == input._2M ||
                    (this._2M != null &&
                    this._2M.Equals(input._2M))
                ) && 
                (
                    this._5M == input._5M ||
                    (this._5M != null &&
                    this._5M.Equals(input._5M))
                ) && 
                (
                    this._10M == input._10M ||
                    (this._10M != null &&
                    this._10M.Equals(input._10M))
                ) && 
                (
                    this._15M == input._15M ||
                    (this._15M != null &&
                    this._15M.Equals(input._15M))
                ) && 
                (
                    this._30M == input._30M ||
                    (this._30M != null &&
                    this._30M.Equals(input._30M))
                ) && 
                (
                    this._1H == input._1H ||
                    (this._1H != null &&
                    this._1H.Equals(input._1H))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this._0 != null)
                {
                    hashCode = (hashCode * 59) + this._0.GetHashCode();
                }
                if (this._1S != null)
                {
                    hashCode = (hashCode * 59) + this._1S.GetHashCode();
                }
                if (this._5S != null)
                {
                    hashCode = (hashCode * 59) + this._5S.GetHashCode();
                }
                if (this._10S != null)
                {
                    hashCode = (hashCode * 59) + this._10S.GetHashCode();
                }
                if (this._15S != null)
                {
                    hashCode = (hashCode * 59) + this._15S.GetHashCode();
                }
                if (this._30S != null)
                {
                    hashCode = (hashCode * 59) + this._30S.GetHashCode();
                }
                if (this._1M != null)
                {
                    hashCode = (hashCode * 59) + this._1M.GetHashCode();
                }
                if (this._2M != null)
                {
                    hashCode = (hashCode * 59) + this._2M.GetHashCode();
                }
                if (this._5M != null)
                {
                    hashCode = (hashCode * 59) + this._5M.GetHashCode();
                }
                if (this._10M != null)
                {
                    hashCode = (hashCode * 59) + this._10M.GetHashCode();
                }
                if (this._15M != null)
                {
                    hashCode = (hashCode * 59) + this._15M.GetHashCode();
                }
                if (this._30M != null)
                {
                    hashCode = (hashCode * 59) + this._30M.GetHashCode();
                }
                if (this._1H != null)
                {
                    hashCode = (hashCode * 59) + this._1H.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
