/*
 * FactSet Capital Structure Report Builder
 *
 * License info
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using FactSet.SDK.CapitalStructureReportBuilder.Client;
using FactSet.SDK.CapitalStructureReportBuilder.Model;
using FactSet.SDK.Utils.Authentication;

namespace FactSet.SDK.CapitalStructureReportBuilder.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ICapitalStructureApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Debt Capital Structure (DCS)
        /// </summary>
        /// <remarks>
        /// Get the DCS Detail component&#39;s data
        /// </remarks>
        /// <exception cref="FactSet.SDK.CapitalStructureReportBuilder.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">Company ticker</param>
        /// <param name="schema">The schema that the data is returned as. The following are descriptions for the accepted values: - table_group_level - STACH 2.0 row organized package format with parent-child relationships represented using STACH group level cell metadata - table_parent_child_columns - STACH 2.0 row organized package format with parent-child relationships represented using STACH parent-child columns  (optional, default to table_parent_child_columns)</param>
        /// <returns>Response</returns>
        Response GetDcsDetail(string id, string schema = default(string));

        /// <summary>
        /// Debt Capital Structure (DCS)
        /// </summary>
        /// <remarks>
        /// Get the DCS Detail component&#39;s data
        /// </remarks>
        /// <exception cref="FactSet.SDK.CapitalStructureReportBuilder.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">Company ticker</param>
        /// <param name="schema">The schema that the data is returned as. The following are descriptions for the accepted values: - table_group_level - STACH 2.0 row organized package format with parent-child relationships represented using STACH group level cell metadata - table_parent_child_columns - STACH 2.0 row organized package format with parent-child relationships represented using STACH parent-child columns  (optional, default to table_parent_child_columns)</param>
        /// <returns>ApiResponse of Response</returns>
        ApiResponse<Response> GetDcsDetailWithHttpInfo(string id, string schema = default(string));
        /// <summary>
        /// Debt Capital Structure (DCS) Summary
        /// </summary>
        /// <remarks>
        /// Get the DCS Summary component&#39;s data
        /// </remarks>
        /// <exception cref="FactSet.SDK.CapitalStructureReportBuilder.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">Company ticker</param>
        /// <param name="schema">The schema that the data is returned as. The following are descriptions for the accepted values: - table_group_level - STACH 2.0 row organized package format with parent-child relationships represented using STACH group level cell metadata - table_parent_child_columns - STACH 2.0 row organized package format with parent-child relationships represented using STACH parent-child columns  (optional, default to table_parent_child_columns)</param>
        /// <returns>Response</returns>
        Response GetDcsSummary(string id, string schema = default(string));

        /// <summary>
        /// Debt Capital Structure (DCS) Summary
        /// </summary>
        /// <remarks>
        /// Get the DCS Summary component&#39;s data
        /// </remarks>
        /// <exception cref="FactSet.SDK.CapitalStructureReportBuilder.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">Company ticker</param>
        /// <param name="schema">The schema that the data is returned as. The following are descriptions for the accepted values: - table_group_level - STACH 2.0 row organized package format with parent-child relationships represented using STACH group level cell metadata - table_parent_child_columns - STACH 2.0 row organized package format with parent-child relationships represented using STACH parent-child columns  (optional, default to table_parent_child_columns)</param>
        /// <returns>ApiResponse of Response</returns>
        ApiResponse<Response> GetDcsSummaryWithHttpInfo(string id, string schema = default(string));
        /// <summary>
        /// Source of Capital
        /// </summary>
        /// <remarks>
        /// Get the Source of Capital component&#39;s data
        /// </remarks>
        /// <exception cref="FactSet.SDK.CapitalStructureReportBuilder.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">Company ticker</param>
        /// <returns>Response</returns>
        Response GetSourceOfCapital(string id);

        /// <summary>
        /// Source of Capital
        /// </summary>
        /// <remarks>
        /// Get the Source of Capital component&#39;s data
        /// </remarks>
        /// <exception cref="FactSet.SDK.CapitalStructureReportBuilder.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">Company ticker</param>
        /// <returns>ApiResponse of Response</returns>
        ApiResponse<Response> GetSourceOfCapitalWithHttpInfo(string id);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ICapitalStructureApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// Debt Capital Structure (DCS)
        /// </summary>
        /// <remarks>
        /// Get the DCS Detail component&#39;s data
        /// </remarks>
        /// <exception cref="FactSet.SDK.CapitalStructureReportBuilder.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">Company ticker</param>
        /// <param name="schema">The schema that the data is returned as. The following are descriptions for the accepted values: - table_group_level - STACH 2.0 row organized package format with parent-child relationships represented using STACH group level cell metadata - table_parent_child_columns - STACH 2.0 row organized package format with parent-child relationships represented using STACH parent-child columns  (optional, default to table_parent_child_columns)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Response</returns>
        System.Threading.Tasks.Task<Response> GetDcsDetailAsync(string id, string schema = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Debt Capital Structure (DCS)
        /// </summary>
        /// <remarks>
        /// Get the DCS Detail component&#39;s data
        /// </remarks>
        /// <exception cref="FactSet.SDK.CapitalStructureReportBuilder.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">Company ticker</param>
        /// <param name="schema">The schema that the data is returned as. The following are descriptions for the accepted values: - table_group_level - STACH 2.0 row organized package format with parent-child relationships represented using STACH group level cell metadata - table_parent_child_columns - STACH 2.0 row organized package format with parent-child relationships represented using STACH parent-child columns  (optional, default to table_parent_child_columns)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<Response>> GetDcsDetailWithHttpInfoAsync(string id, string schema = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Debt Capital Structure (DCS) Summary
        /// </summary>
        /// <remarks>
        /// Get the DCS Summary component&#39;s data
        /// </remarks>
        /// <exception cref="FactSet.SDK.CapitalStructureReportBuilder.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">Company ticker</param>
        /// <param name="schema">The schema that the data is returned as. The following are descriptions for the accepted values: - table_group_level - STACH 2.0 row organized package format with parent-child relationships represented using STACH group level cell metadata - table_parent_child_columns - STACH 2.0 row organized package format with parent-child relationships represented using STACH parent-child columns  (optional, default to table_parent_child_columns)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Response</returns>
        System.Threading.Tasks.Task<Response> GetDcsSummaryAsync(string id, string schema = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Debt Capital Structure (DCS) Summary
        /// </summary>
        /// <remarks>
        /// Get the DCS Summary component&#39;s data
        /// </remarks>
        /// <exception cref="FactSet.SDK.CapitalStructureReportBuilder.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">Company ticker</param>
        /// <param name="schema">The schema that the data is returned as. The following are descriptions for the accepted values: - table_group_level - STACH 2.0 row organized package format with parent-child relationships represented using STACH group level cell metadata - table_parent_child_columns - STACH 2.0 row organized package format with parent-child relationships represented using STACH parent-child columns  (optional, default to table_parent_child_columns)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<Response>> GetDcsSummaryWithHttpInfoAsync(string id, string schema = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Source of Capital
        /// </summary>
        /// <remarks>
        /// Get the Source of Capital component&#39;s data
        /// </remarks>
        /// <exception cref="FactSet.SDK.CapitalStructureReportBuilder.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">Company ticker</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Response</returns>
        System.Threading.Tasks.Task<Response> GetSourceOfCapitalAsync(string id, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Source of Capital
        /// </summary>
        /// <remarks>
        /// Get the Source of Capital component&#39;s data
        /// </remarks>
        /// <exception cref="FactSet.SDK.CapitalStructureReportBuilder.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">Company ticker</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<Response>> GetSourceOfCapitalWithHttpInfoAsync(string id, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ICapitalStructureApi : ICapitalStructureApiSync, ICapitalStructureApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class CapitalStructureApi : ICapitalStructureApi
    {
        private FactSet.SDK.CapitalStructureReportBuilder.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        # region Response Type Disctionaries
        
        private static readonly Dictionary<HttpStatusCode, System.Type> GetDcsDetailResponseTypeDictionary = new Dictionary<HttpStatusCode, System.Type>
        {
            { (HttpStatusCode)200, typeof(Response) },
            { (HttpStatusCode)400, typeof(ErrorResponse) },
            { (HttpStatusCode)403, typeof(ErrorResponse) },
            { (HttpStatusCode)404, typeof(ErrorResponse) },
            { (HttpStatusCode)500, typeof(ErrorResponse) },
        };

        private static readonly Dictionary<HttpStatusCode, System.Type> GetDcsSummaryResponseTypeDictionary = new Dictionary<HttpStatusCode, System.Type>
        {
            { (HttpStatusCode)200, typeof(Response) },
            { (HttpStatusCode)400, typeof(ErrorResponse) },
            { (HttpStatusCode)403, typeof(ErrorResponse) },
            { (HttpStatusCode)404, typeof(ErrorResponse) },
            { (HttpStatusCode)500, typeof(ErrorResponse) },
        };

        private static readonly Dictionary<HttpStatusCode, System.Type> GetSourceOfCapitalResponseTypeDictionary = new Dictionary<HttpStatusCode, System.Type>
        {
            { (HttpStatusCode)200, typeof(Response) },
            { (HttpStatusCode)400, typeof(ErrorResponse) },
            { (HttpStatusCode)403, typeof(ErrorResponse) },
            { (HttpStatusCode)404, typeof(ErrorResponse) },
            { (HttpStatusCode)500, typeof(ErrorResponse) },
        };

        # endregion Response Type Disctionaries

        # region Api Response Objects
        

        # endregion Api Response Objects

        /// <summary>
        /// Initializes a new instance of the <see cref="CapitalStructureApi"/> class.
        /// </summary>
        /// <returns></returns>
        public CapitalStructureApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CapitalStructureApi"/> class.
        /// </summary>
        /// <returns></returns>
        public CapitalStructureApi(string basePath)
        {
            this.Configuration = FactSet.SDK.CapitalStructureReportBuilder.Client.Configuration.MergeConfigurations(
                FactSet.SDK.CapitalStructureReportBuilder.Client.GlobalConfiguration.Instance,
                new FactSet.SDK.CapitalStructureReportBuilder.Client.Configuration { BasePath = basePath }
            );
            this.Client = new FactSet.SDK.CapitalStructureReportBuilder.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new FactSet.SDK.CapitalStructureReportBuilder.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = FactSet.SDK.CapitalStructureReportBuilder.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CapitalStructureApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public CapitalStructureApi(FactSet.SDK.CapitalStructureReportBuilder.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = FactSet.SDK.CapitalStructureReportBuilder.Client.Configuration.MergeConfigurations(
                FactSet.SDK.CapitalStructureReportBuilder.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new FactSet.SDK.CapitalStructureReportBuilder.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new FactSet.SDK.CapitalStructureReportBuilder.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = FactSet.SDK.CapitalStructureReportBuilder.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CapitalStructureApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public CapitalStructureApi(FactSet.SDK.CapitalStructureReportBuilder.Client.ISynchronousClient client, FactSet.SDK.CapitalStructureReportBuilder.Client.IAsynchronousClient asyncClient, FactSet.SDK.CapitalStructureReportBuilder.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = FactSet.SDK.CapitalStructureReportBuilder.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public FactSet.SDK.CapitalStructureReportBuilder.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public FactSet.SDK.CapitalStructureReportBuilder.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public FactSet.SDK.CapitalStructureReportBuilder.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public FactSet.SDK.CapitalStructureReportBuilder.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Debt Capital Structure (DCS) Get the DCS Detail component&#39;s data
        /// </summary>
        /// <exception cref="FactSet.SDK.CapitalStructureReportBuilder.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">Company ticker</param>
        /// <param name="schema">The schema that the data is returned as. The following are descriptions for the accepted values: - table_group_level - STACH 2.0 row organized package format with parent-child relationships represented using STACH group level cell metadata - table_parent_child_columns - STACH 2.0 row organized package format with parent-child relationships represented using STACH parent-child columns  (optional, default to table_parent_child_columns)</param>
        /// <returns>Response</returns>
        public Response GetDcsDetail(string id, string schema = default(string))
        {
            var localVarResponse = GetDcsDetailWithHttpInfo(id, schema);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Debt Capital Structure (DCS) Get the DCS Detail component&#39;s data
        /// </summary>
        /// <exception cref="FactSet.SDK.CapitalStructureReportBuilder.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">Company ticker</param>
        /// <param name="schema">The schema that the data is returned as. The following are descriptions for the accepted values: - table_group_level - STACH 2.0 row organized package format with parent-child relationships represented using STACH group level cell metadata - table_parent_child_columns - STACH 2.0 row organized package format with parent-child relationships represented using STACH parent-child columns  (optional, default to table_parent_child_columns)</param>
        /// <returns>ApiResponse of Response</returns>
        public ApiResponse<Response> GetDcsDetailWithHttpInfo(string id, string schema = default(string))
        {
            // verify the required parameter 'id' is set
            if (id == null)
            {
                throw new FactSet.SDK.CapitalStructureReportBuilder.Client.ApiException(400, "Missing required parameter 'id' when calling CapitalStructureApi->GetDcsDetail");
            }

            FactSet.SDK.CapitalStructureReportBuilder.Client.RequestOptions localVarRequestOptions = new FactSet.SDK.CapitalStructureReportBuilder.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = FactSet.SDK.CapitalStructureReportBuilder.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = FactSet.SDK.CapitalStructureReportBuilder.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(FactSet.SDK.CapitalStructureReportBuilder.Client.ClientUtils.ParameterToMultiMap("", "id", id));
            if (schema != null)
            {
                localVarRequestOptions.QueryParameters.Add(FactSet.SDK.CapitalStructureReportBuilder.Client.ClientUtils.ParameterToMultiMap("", "schema", schema));
            }

            // authentication (FactSetApiKey) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + FactSet.SDK.CapitalStructureReportBuilder.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (FactSetOAuth2) required
            // oauth required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // FactSet Authentication Client required
            if (this.Configuration.OAuth2Client != null)
            {
                var token = this.Configuration.OAuth2Client.GetAccessTokenAsync().Result;
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + token);
            }

            localVarRequestOptions.ResponseTypeDictionary = GetDcsDetailResponseTypeDictionary;

            // make the HTTP request
            var localVarResponse = this.Client.Get<
            Response>("/dcs-detail", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetDcsDetail", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }
            return localVarResponse;
        }

        /// <summary>
        /// Debt Capital Structure (DCS) Get the DCS Detail component&#39;s data
        /// </summary>
        /// <exception cref="FactSet.SDK.CapitalStructureReportBuilder.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">Company ticker</param>
        /// <param name="schema">The schema that the data is returned as. The following are descriptions for the accepted values: - table_group_level - STACH 2.0 row organized package format with parent-child relationships represented using STACH group level cell metadata - table_parent_child_columns - STACH 2.0 row organized package format with parent-child relationships represented using STACH parent-child columns  (optional, default to table_parent_child_columns)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Response</returns>
        public async System.Threading.Tasks.Task<Response>GetDcsDetailAsync(string id, string schema = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            var localVarResponse = await GetDcsDetailWithHttpInfoAsync(id, schema, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Debt Capital Structure (DCS) Get the DCS Detail component&#39;s data
        /// </summary>
        /// <exception cref="FactSet.SDK.CapitalStructureReportBuilder.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">Company ticker</param>
        /// <param name="schema">The schema that the data is returned as. The following are descriptions for the accepted values: - table_group_level - STACH 2.0 row organized package format with parent-child relationships represented using STACH group level cell metadata - table_parent_child_columns - STACH 2.0 row organized package format with parent-child relationships represented using STACH parent-child columns  (optional, default to table_parent_child_columns)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Response)</returns>

        public async System.Threading.Tasks.Task<ApiResponse<Response>> GetDcsDetailWithHttpInfoAsync(string id, string schema = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'id' is set
            if (id == null)
            {
                throw new FactSet.SDK.CapitalStructureReportBuilder.Client.ApiException(400, "Missing required parameter 'id' when calling CapitalStructureApi->GetDcsDetail");
            }


            FactSet.SDK.CapitalStructureReportBuilder.Client.RequestOptions localVarRequestOptions = new FactSet.SDK.CapitalStructureReportBuilder.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = FactSet.SDK.CapitalStructureReportBuilder.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = FactSet.SDK.CapitalStructureReportBuilder.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(FactSet.SDK.CapitalStructureReportBuilder.Client.ClientUtils.ParameterToMultiMap("", "id", id));
            if (schema != null)
            {
                localVarRequestOptions.QueryParameters.Add(FactSet.SDK.CapitalStructureReportBuilder.Client.ClientUtils.ParameterToMultiMap("", "schema", schema));
            }

            // authentication (FactSetApiKey) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + FactSet.SDK.CapitalStructureReportBuilder.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (FactSetOAuth2) required
            // oauth required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // FactSet Authentication Client required
            if (this.Configuration.OAuth2Client != null) {
                var token = await this.Configuration.OAuth2Client.GetAccessTokenAsync();
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + token);
            }


            localVarRequestOptions.ResponseTypeDictionary = GetDcsDetailResponseTypeDictionary;

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<Response>("/dcs-detail", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetDcsDetail", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Debt Capital Structure (DCS) Summary Get the DCS Summary component&#39;s data
        /// </summary>
        /// <exception cref="FactSet.SDK.CapitalStructureReportBuilder.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">Company ticker</param>
        /// <param name="schema">The schema that the data is returned as. The following are descriptions for the accepted values: - table_group_level - STACH 2.0 row organized package format with parent-child relationships represented using STACH group level cell metadata - table_parent_child_columns - STACH 2.0 row organized package format with parent-child relationships represented using STACH parent-child columns  (optional, default to table_parent_child_columns)</param>
        /// <returns>Response</returns>
        public Response GetDcsSummary(string id, string schema = default(string))
        {
            var localVarResponse = GetDcsSummaryWithHttpInfo(id, schema);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Debt Capital Structure (DCS) Summary Get the DCS Summary component&#39;s data
        /// </summary>
        /// <exception cref="FactSet.SDK.CapitalStructureReportBuilder.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">Company ticker</param>
        /// <param name="schema">The schema that the data is returned as. The following are descriptions for the accepted values: - table_group_level - STACH 2.0 row organized package format with parent-child relationships represented using STACH group level cell metadata - table_parent_child_columns - STACH 2.0 row organized package format with parent-child relationships represented using STACH parent-child columns  (optional, default to table_parent_child_columns)</param>
        /// <returns>ApiResponse of Response</returns>
        public ApiResponse<Response> GetDcsSummaryWithHttpInfo(string id, string schema = default(string))
        {
            // verify the required parameter 'id' is set
            if (id == null)
            {
                throw new FactSet.SDK.CapitalStructureReportBuilder.Client.ApiException(400, "Missing required parameter 'id' when calling CapitalStructureApi->GetDcsSummary");
            }

            FactSet.SDK.CapitalStructureReportBuilder.Client.RequestOptions localVarRequestOptions = new FactSet.SDK.CapitalStructureReportBuilder.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = FactSet.SDK.CapitalStructureReportBuilder.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = FactSet.SDK.CapitalStructureReportBuilder.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(FactSet.SDK.CapitalStructureReportBuilder.Client.ClientUtils.ParameterToMultiMap("", "id", id));
            if (schema != null)
            {
                localVarRequestOptions.QueryParameters.Add(FactSet.SDK.CapitalStructureReportBuilder.Client.ClientUtils.ParameterToMultiMap("", "schema", schema));
            }

            // authentication (FactSetApiKey) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + FactSet.SDK.CapitalStructureReportBuilder.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (FactSetOAuth2) required
            // oauth required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // FactSet Authentication Client required
            if (this.Configuration.OAuth2Client != null)
            {
                var token = this.Configuration.OAuth2Client.GetAccessTokenAsync().Result;
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + token);
            }

            localVarRequestOptions.ResponseTypeDictionary = GetDcsSummaryResponseTypeDictionary;

            // make the HTTP request
            var localVarResponse = this.Client.Get<
            Response>("/dcs-summary", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetDcsSummary", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }
            return localVarResponse;
        }

        /// <summary>
        /// Debt Capital Structure (DCS) Summary Get the DCS Summary component&#39;s data
        /// </summary>
        /// <exception cref="FactSet.SDK.CapitalStructureReportBuilder.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">Company ticker</param>
        /// <param name="schema">The schema that the data is returned as. The following are descriptions for the accepted values: - table_group_level - STACH 2.0 row organized package format with parent-child relationships represented using STACH group level cell metadata - table_parent_child_columns - STACH 2.0 row organized package format with parent-child relationships represented using STACH parent-child columns  (optional, default to table_parent_child_columns)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Response</returns>
        public async System.Threading.Tasks.Task<Response>GetDcsSummaryAsync(string id, string schema = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            var localVarResponse = await GetDcsSummaryWithHttpInfoAsync(id, schema, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Debt Capital Structure (DCS) Summary Get the DCS Summary component&#39;s data
        /// </summary>
        /// <exception cref="FactSet.SDK.CapitalStructureReportBuilder.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">Company ticker</param>
        /// <param name="schema">The schema that the data is returned as. The following are descriptions for the accepted values: - table_group_level - STACH 2.0 row organized package format with parent-child relationships represented using STACH group level cell metadata - table_parent_child_columns - STACH 2.0 row organized package format with parent-child relationships represented using STACH parent-child columns  (optional, default to table_parent_child_columns)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Response)</returns>

        public async System.Threading.Tasks.Task<ApiResponse<Response>> GetDcsSummaryWithHttpInfoAsync(string id, string schema = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'id' is set
            if (id == null)
            {
                throw new FactSet.SDK.CapitalStructureReportBuilder.Client.ApiException(400, "Missing required parameter 'id' when calling CapitalStructureApi->GetDcsSummary");
            }


            FactSet.SDK.CapitalStructureReportBuilder.Client.RequestOptions localVarRequestOptions = new FactSet.SDK.CapitalStructureReportBuilder.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = FactSet.SDK.CapitalStructureReportBuilder.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = FactSet.SDK.CapitalStructureReportBuilder.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(FactSet.SDK.CapitalStructureReportBuilder.Client.ClientUtils.ParameterToMultiMap("", "id", id));
            if (schema != null)
            {
                localVarRequestOptions.QueryParameters.Add(FactSet.SDK.CapitalStructureReportBuilder.Client.ClientUtils.ParameterToMultiMap("", "schema", schema));
            }

            // authentication (FactSetApiKey) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + FactSet.SDK.CapitalStructureReportBuilder.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (FactSetOAuth2) required
            // oauth required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // FactSet Authentication Client required
            if (this.Configuration.OAuth2Client != null) {
                var token = await this.Configuration.OAuth2Client.GetAccessTokenAsync();
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + token);
            }


            localVarRequestOptions.ResponseTypeDictionary = GetDcsSummaryResponseTypeDictionary;

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<Response>("/dcs-summary", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetDcsSummary", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Source of Capital Get the Source of Capital component&#39;s data
        /// </summary>
        /// <exception cref="FactSet.SDK.CapitalStructureReportBuilder.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">Company ticker</param>
        /// <returns>Response</returns>
        public Response GetSourceOfCapital(string id)
        {
            var localVarResponse = GetSourceOfCapitalWithHttpInfo(id);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Source of Capital Get the Source of Capital component&#39;s data
        /// </summary>
        /// <exception cref="FactSet.SDK.CapitalStructureReportBuilder.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">Company ticker</param>
        /// <returns>ApiResponse of Response</returns>
        public ApiResponse<Response> GetSourceOfCapitalWithHttpInfo(string id)
        {
            // verify the required parameter 'id' is set
            if (id == null)
            {
                throw new FactSet.SDK.CapitalStructureReportBuilder.Client.ApiException(400, "Missing required parameter 'id' when calling CapitalStructureApi->GetSourceOfCapital");
            }

            FactSet.SDK.CapitalStructureReportBuilder.Client.RequestOptions localVarRequestOptions = new FactSet.SDK.CapitalStructureReportBuilder.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = FactSet.SDK.CapitalStructureReportBuilder.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = FactSet.SDK.CapitalStructureReportBuilder.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(FactSet.SDK.CapitalStructureReportBuilder.Client.ClientUtils.ParameterToMultiMap("", "id", id));

            // authentication (FactSetApiKey) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + FactSet.SDK.CapitalStructureReportBuilder.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (FactSetOAuth2) required
            // oauth required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // FactSet Authentication Client required
            if (this.Configuration.OAuth2Client != null)
            {
                var token = this.Configuration.OAuth2Client.GetAccessTokenAsync().Result;
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + token);
            }

            localVarRequestOptions.ResponseTypeDictionary = GetSourceOfCapitalResponseTypeDictionary;

            // make the HTTP request
            var localVarResponse = this.Client.Get<
            Response>("/source-of-capital", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetSourceOfCapital", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }
            return localVarResponse;
        }

        /// <summary>
        /// Source of Capital Get the Source of Capital component&#39;s data
        /// </summary>
        /// <exception cref="FactSet.SDK.CapitalStructureReportBuilder.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">Company ticker</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Response</returns>
        public async System.Threading.Tasks.Task<Response>GetSourceOfCapitalAsync(string id, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            var localVarResponse = await GetSourceOfCapitalWithHttpInfoAsync(id, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Source of Capital Get the Source of Capital component&#39;s data
        /// </summary>
        /// <exception cref="FactSet.SDK.CapitalStructureReportBuilder.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">Company ticker</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Response)</returns>

        public async System.Threading.Tasks.Task<ApiResponse<Response>> GetSourceOfCapitalWithHttpInfoAsync(string id, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'id' is set
            if (id == null)
            {
                throw new FactSet.SDK.CapitalStructureReportBuilder.Client.ApiException(400, "Missing required parameter 'id' when calling CapitalStructureApi->GetSourceOfCapital");
            }


            FactSet.SDK.CapitalStructureReportBuilder.Client.RequestOptions localVarRequestOptions = new FactSet.SDK.CapitalStructureReportBuilder.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = FactSet.SDK.CapitalStructureReportBuilder.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = FactSet.SDK.CapitalStructureReportBuilder.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(FactSet.SDK.CapitalStructureReportBuilder.Client.ClientUtils.ParameterToMultiMap("", "id", id));

            // authentication (FactSetApiKey) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + FactSet.SDK.CapitalStructureReportBuilder.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (FactSetOAuth2) required
            // oauth required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // FactSet Authentication Client required
            if (this.Configuration.OAuth2Client != null) {
                var token = await this.Configuration.OAuth2Client.GetAccessTokenAsync();
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + token);
            }


            localVarRequestOptions.ResponseTypeDictionary = GetSourceOfCapitalResponseTypeDictionary;

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<Response>("/source-of-capital", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetSourceOfCapital", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
