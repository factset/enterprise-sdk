/*
 * FactSet Overview Report Builder API
 *
 * Get relevant industry-specific data for high level analysis of public and private companies
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: api@factset.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = FactSet.SDK.OverviewReportBuilder.Client.OpenAPIDateConverter;

namespace FactSet.SDK.OverviewReportBuilder.Model
{
    /// <summary>
    /// ProfileDataObjectSize
    /// </summary>
    [DataContract(Name = "ProfileDataObject_size")]
    public partial class ProfileDataObjectSize : IEquatable<ProfileDataObjectSize>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ProfileDataObjectSize" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ProfileDataObjectSize() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ProfileDataObjectSize" /> class.
        /// </summary>
        /// <param name="employeeNumber">employeeNumber (required).</param>
        /// <param name="ev">ev (required).</param>
        /// <param name="mcap">mcap (required).</param>
        /// <param name="revenue">revenue (required).</param>
        public ProfileDataObjectSize(KeyStatsDataObjectFundAverageSpreadValue employeeNumber, ProfileDataObjectSizeEv ev, ProfileDataObjectSizeEv mcap, ProfileDataObjectSizeRevenue revenue)
        {
            // to ensure "employeeNumber" is required (not null)
            if (employeeNumber == null) {
                throw new ArgumentNullException("employeeNumber is a required property for ProfileDataObjectSize and cannot be null");
            }
            this.EmployeeNumber = employeeNumber;
            // to ensure "ev" is required (not null)
            if (ev == null) {
                throw new ArgumentNullException("ev is a required property for ProfileDataObjectSize and cannot be null");
            }
            this.Ev = ev;
            // to ensure "mcap" is required (not null)
            if (mcap == null) {
                throw new ArgumentNullException("mcap is a required property for ProfileDataObjectSize and cannot be null");
            }
            this.Mcap = mcap;
            // to ensure "revenue" is required (not null)
            if (revenue == null) {
                throw new ArgumentNullException("revenue is a required property for ProfileDataObjectSize and cannot be null");
            }
            this.Revenue = revenue;
        }

        /// <summary>
        /// Gets or Sets EmployeeNumber
        /// </summary>
        [DataMember(Name = "employeeNumber", IsRequired = true, EmitDefaultValue = false)]
        public KeyStatsDataObjectFundAverageSpreadValue EmployeeNumber { get; set; }

        /// <summary>
        /// Gets or Sets Ev
        /// </summary>
        [DataMember(Name = "ev", IsRequired = true, EmitDefaultValue = false)]
        public ProfileDataObjectSizeEv Ev { get; set; }

        /// <summary>
        /// Gets or Sets Mcap
        /// </summary>
        [DataMember(Name = "mcap", IsRequired = true, EmitDefaultValue = false)]
        public ProfileDataObjectSizeEv Mcap { get; set; }

        /// <summary>
        /// Gets or Sets Revenue
        /// </summary>
        [DataMember(Name = "revenue", IsRequired = true, EmitDefaultValue = false)]
        public ProfileDataObjectSizeRevenue Revenue { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ProfileDataObjectSize {\n");
            sb.Append("  EmployeeNumber: ").Append(EmployeeNumber).Append("\n");
            sb.Append("  Ev: ").Append(Ev).Append("\n");
            sb.Append("  Mcap: ").Append(Mcap).Append("\n");
            sb.Append("  Revenue: ").Append(Revenue).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ProfileDataObjectSize);
        }

        /// <summary>
        /// Returns true if ProfileDataObjectSize instances are equal
        /// </summary>
        /// <param name="input">Instance of ProfileDataObjectSize to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ProfileDataObjectSize input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.EmployeeNumber == input.EmployeeNumber ||
                    (this.EmployeeNumber != null &&
                    this.EmployeeNumber.Equals(input.EmployeeNumber))
                ) && 
                (
                    this.Ev == input.Ev ||
                    (this.Ev != null &&
                    this.Ev.Equals(input.Ev))
                ) && 
                (
                    this.Mcap == input.Mcap ||
                    (this.Mcap != null &&
                    this.Mcap.Equals(input.Mcap))
                ) && 
                (
                    this.Revenue == input.Revenue ||
                    (this.Revenue != null &&
                    this.Revenue.Equals(input.Revenue))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.EmployeeNumber != null)
                {
                    hashCode = (hashCode * 59) + this.EmployeeNumber.GetHashCode();
                }
                if (this.Ev != null)
                {
                    hashCode = (hashCode * 59) + this.Ev.GetHashCode();
                }
                if (this.Mcap != null)
                {
                    hashCode = (hashCode * 59) + this.Mcap.GetHashCode();
                }
                if (this.Revenue != null)
                {
                    hashCode = (hashCode * 59) + this.Revenue.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
