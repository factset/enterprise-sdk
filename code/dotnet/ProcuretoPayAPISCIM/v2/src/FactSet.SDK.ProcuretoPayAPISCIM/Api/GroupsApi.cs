/*
 * FactSet SCIM API
 *
 * FactSet's SCIM API implementation.
 *
 * The version of the OpenAPI document: 2.6.0
 * Contact: api@factset.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using FactSet.SDK.ProcuretoPayAPISCIM.Client;
using FactSet.SDK.ProcuretoPayAPISCIM.Model;
using FactSet.SDK.Utils.Authentication;

namespace FactSet.SDK.ProcuretoPayAPISCIM.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IGroupsApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Get a group.
        /// </summary>
        /// <remarks>
        /// Get a specific group resource.
        /// </remarks>
        /// <exception cref="FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">ID of resource.</param>
        /// <param name="attributes">Attribute whitelist filter string. A comma-separated list of resource attribute names to be returned in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *excludedAttributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="excludedAttributes">Attribute blacklist filter string. A comma-separated list of resource attribute names to be excluded in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="additionalAttributes">Non-standard attribute filter string. A comma-separated list of resource attribute names to be included in the response, complementing the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *excludedAttributes* parameters. (optional)</param>
        /// <returns>GroupResource</returns>
        GroupResource GetGroup(string id, List<string> attributes = default(List<string>), List<string> excludedAttributes = default(List<string>), List<string> additionalAttributes = default(List<string>));

        /// <summary>
        /// Get a group.
        /// </summary>
        /// <remarks>
        /// Get a specific group resource.
        /// </remarks>
        /// <exception cref="FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">ID of resource.</param>
        /// <param name="attributes">Attribute whitelist filter string. A comma-separated list of resource attribute names to be returned in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *excludedAttributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="excludedAttributes">Attribute blacklist filter string. A comma-separated list of resource attribute names to be excluded in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="additionalAttributes">Non-standard attribute filter string. A comma-separated list of resource attribute names to be included in the response, complementing the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *excludedAttributes* parameters. (optional)</param>
        /// <returns>ApiResponse of GroupResource</returns>
        ApiResponse<GroupResource> GetGroupWithHttpInfo(string id, List<string> attributes = default(List<string>), List<string> excludedAttributes = default(List<string>), List<string> additionalAttributes = default(List<string>));
        /// <summary>
        /// Get a list of groups.
        /// </summary>
        /// <remarks>
        /// Get a list of group resources.
        /// </remarks>
        /// <exception cref="FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="filter">Resource filter string. See [RFC 7644 section 3.4.2.2](https://tools.ietf.org/html/rfc7644#section-3.4.2.2) for syntax. Note this API implementation also supports a non-standard \&quot;re\&quot; operator for regular expression matching against string attributes. When using the \&quot;re\&quot; operator, do not include slash characters as delimiters (e.g. use \&quot;foo\&quot; instead of \&quot;/foo/\&quot;.) Also note the case-sensitivity of the regular expression corresponds to the \&quot;caseExact\&quot; characteristic of the target attribute. (optional)</param>
        /// <param name="sortBy">Attribute to be used for sorting resources. See [RFC 7644 section 3.4.2.3](https://tools.ietf.org/html/rfc7644#section-3.4.2.3). The attribute name must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) Use the *sortOrder* parameter to specify whether resources should be sorted in ascending or descending order. (optional)</param>
        /// <param name="sortOrder">The order by which resources are to be sorted. See [RFC 7644 section 3.4.2.3](https://tools.ietf.org/html/rfc7644#section-3.4.2.3). Valid values are &#39;&#39;ascending&#39;&#39; (the default value) or &#39;&#39;descending&#39;&#39;. This parameter may not be used unless the *sortBy* parameter is also specified. (optional)</param>
        /// <param name="startIndex">Result start index. The one-based index of the first result to be returned in the list of resources. For example, to exclude the first two resources, use a *startIndex* value of 3. This parameter has a default value of 1. This index applies *after* any resource filtration has been applied as specified by the *filter* argument. (optional)</param>
        /// <param name="count">Maximum resource count. The server will not return more resources than this value, although it may return fewer. (optional)</param>
        /// <param name="attributes">Attribute whitelist filter string. A comma-separated list of resource attribute names to be returned in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *excludedAttributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="excludedAttributes">Attribute blacklist filter string. A comma-separated list of resource attribute names to be excluded in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="additionalAttributes">Non-standard attribute filter string. A comma-separated list of resource attribute names to be included in the response, complementing the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *excludedAttributes* parameters. (optional)</param>
        /// <returns>GroupResourceList</returns>
        GroupResourceList GetGroups(string filter = default(string), string sortBy = default(string), string sortOrder = default(string), int? startIndex = default(int?), int? count = default(int?), List<string> attributes = default(List<string>), List<string> excludedAttributes = default(List<string>), List<string> additionalAttributes = default(List<string>));

        /// <summary>
        /// Get a list of groups.
        /// </summary>
        /// <remarks>
        /// Get a list of group resources.
        /// </remarks>
        /// <exception cref="FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="filter">Resource filter string. See [RFC 7644 section 3.4.2.2](https://tools.ietf.org/html/rfc7644#section-3.4.2.2) for syntax. Note this API implementation also supports a non-standard \&quot;re\&quot; operator for regular expression matching against string attributes. When using the \&quot;re\&quot; operator, do not include slash characters as delimiters (e.g. use \&quot;foo\&quot; instead of \&quot;/foo/\&quot;.) Also note the case-sensitivity of the regular expression corresponds to the \&quot;caseExact\&quot; characteristic of the target attribute. (optional)</param>
        /// <param name="sortBy">Attribute to be used for sorting resources. See [RFC 7644 section 3.4.2.3](https://tools.ietf.org/html/rfc7644#section-3.4.2.3). The attribute name must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) Use the *sortOrder* parameter to specify whether resources should be sorted in ascending or descending order. (optional)</param>
        /// <param name="sortOrder">The order by which resources are to be sorted. See [RFC 7644 section 3.4.2.3](https://tools.ietf.org/html/rfc7644#section-3.4.2.3). Valid values are &#39;&#39;ascending&#39;&#39; (the default value) or &#39;&#39;descending&#39;&#39;. This parameter may not be used unless the *sortBy* parameter is also specified. (optional)</param>
        /// <param name="startIndex">Result start index. The one-based index of the first result to be returned in the list of resources. For example, to exclude the first two resources, use a *startIndex* value of 3. This parameter has a default value of 1. This index applies *after* any resource filtration has been applied as specified by the *filter* argument. (optional)</param>
        /// <param name="count">Maximum resource count. The server will not return more resources than this value, although it may return fewer. (optional)</param>
        /// <param name="attributes">Attribute whitelist filter string. A comma-separated list of resource attribute names to be returned in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *excludedAttributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="excludedAttributes">Attribute blacklist filter string. A comma-separated list of resource attribute names to be excluded in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="additionalAttributes">Non-standard attribute filter string. A comma-separated list of resource attribute names to be included in the response, complementing the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *excludedAttributes* parameters. (optional)</param>
        /// <returns>ApiResponse of GroupResourceList</returns>
        ApiResponse<GroupResourceList> GetGroupsWithHttpInfo(string filter = default(string), string sortBy = default(string), string sortOrder = default(string), int? startIndex = default(int?), int? count = default(int?), List<string> attributes = default(List<string>), List<string> excludedAttributes = default(List<string>), List<string> additionalAttributes = default(List<string>));
        /// <summary>
        /// Patch a group.
        /// </summary>
        /// <remarks>
        /// Modify a specific group resource (i.e. add, replace, or remove attributes of a group resource.)
        /// </remarks>
        /// <exception cref="FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">ID of resource.</param>
        /// <param name="attributes">Attribute whitelist filter string. A comma-separated list of resource attribute names to be returned in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *excludedAttributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="excludedAttributes">Attribute blacklist filter string. A comma-separated list of resource attribute names to be excluded in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="additionalAttributes">Non-standard attribute filter string. A comma-separated list of resource attribute names to be included in the response, complementing the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *excludedAttributes* parameters. (optional)</param>
        /// <param name="patch"> (optional)</param>
        /// <returns>GroupResource</returns>
        GroupResource ModifyGroup(string id, List<string> attributes = default(List<string>), List<string> excludedAttributes = default(List<string>), List<string> additionalAttributes = default(List<string>), Patch patch = default(Patch));

        /// <summary>
        /// Patch a group.
        /// </summary>
        /// <remarks>
        /// Modify a specific group resource (i.e. add, replace, or remove attributes of a group resource.)
        /// </remarks>
        /// <exception cref="FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">ID of resource.</param>
        /// <param name="attributes">Attribute whitelist filter string. A comma-separated list of resource attribute names to be returned in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *excludedAttributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="excludedAttributes">Attribute blacklist filter string. A comma-separated list of resource attribute names to be excluded in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="additionalAttributes">Non-standard attribute filter string. A comma-separated list of resource attribute names to be included in the response, complementing the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *excludedAttributes* parameters. (optional)</param>
        /// <param name="patch"> (optional)</param>
        /// <returns>ApiResponse of GroupResource</returns>
        ApiResponse<GroupResource> ModifyGroupWithHttpInfo(string id, List<string> attributes = default(List<string>), List<string> excludedAttributes = default(List<string>), List<string> additionalAttributes = default(List<string>), Patch patch = default(Patch));
        /// <summary>
        /// Replace a group.
        /// </summary>
        /// <remarks>
        /// Replace a specific group resource with another provided group resource.
        /// </remarks>
        /// <exception cref="FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">ID of resource.</param>
        /// <param name="groupResource">Group resource.</param>
        /// <param name="attributes">Attribute whitelist filter string. A comma-separated list of resource attribute names to be returned in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *excludedAttributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="excludedAttributes">Attribute blacklist filter string. A comma-separated list of resource attribute names to be excluded in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="additionalAttributes">Non-standard attribute filter string. A comma-separated list of resource attribute names to be included in the response, complementing the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *excludedAttributes* parameters. (optional)</param>
        /// <returns>GroupResource</returns>
        GroupResource ReplaceGroup(string id, GroupResource groupResource, List<string> attributes = default(List<string>), List<string> excludedAttributes = default(List<string>), List<string> additionalAttributes = default(List<string>));

        /// <summary>
        /// Replace a group.
        /// </summary>
        /// <remarks>
        /// Replace a specific group resource with another provided group resource.
        /// </remarks>
        /// <exception cref="FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">ID of resource.</param>
        /// <param name="groupResource">Group resource.</param>
        /// <param name="attributes">Attribute whitelist filter string. A comma-separated list of resource attribute names to be returned in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *excludedAttributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="excludedAttributes">Attribute blacklist filter string. A comma-separated list of resource attribute names to be excluded in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="additionalAttributes">Non-standard attribute filter string. A comma-separated list of resource attribute names to be included in the response, complementing the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *excludedAttributes* parameters. (optional)</param>
        /// <returns>ApiResponse of GroupResource</returns>
        ApiResponse<GroupResource> ReplaceGroupWithHttpInfo(string id, GroupResource groupResource, List<string> attributes = default(List<string>), List<string> excludedAttributes = default(List<string>), List<string> additionalAttributes = default(List<string>));
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IGroupsApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// Get a group.
        /// </summary>
        /// <remarks>
        /// Get a specific group resource.
        /// </remarks>
        /// <exception cref="FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">ID of resource.</param>
        /// <param name="attributes">Attribute whitelist filter string. A comma-separated list of resource attribute names to be returned in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *excludedAttributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="excludedAttributes">Attribute blacklist filter string. A comma-separated list of resource attribute names to be excluded in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="additionalAttributes">Non-standard attribute filter string. A comma-separated list of resource attribute names to be included in the response, complementing the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *excludedAttributes* parameters. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GroupResource</returns>
        System.Threading.Tasks.Task<GroupResource> GetGroupAsync(string id, List<string> attributes = default(List<string>), List<string> excludedAttributes = default(List<string>), List<string> additionalAttributes = default(List<string>), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Get a group.
        /// </summary>
        /// <remarks>
        /// Get a specific group resource.
        /// </remarks>
        /// <exception cref="FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">ID of resource.</param>
        /// <param name="attributes">Attribute whitelist filter string. A comma-separated list of resource attribute names to be returned in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *excludedAttributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="excludedAttributes">Attribute blacklist filter string. A comma-separated list of resource attribute names to be excluded in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="additionalAttributes">Non-standard attribute filter string. A comma-separated list of resource attribute names to be included in the response, complementing the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *excludedAttributes* parameters. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GroupResource)</returns>
        System.Threading.Tasks.Task<ApiResponse<GroupResource>> GetGroupWithHttpInfoAsync(string id, List<string> attributes = default(List<string>), List<string> excludedAttributes = default(List<string>), List<string> additionalAttributes = default(List<string>), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get a list of groups.
        /// </summary>
        /// <remarks>
        /// Get a list of group resources.
        /// </remarks>
        /// <exception cref="FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="filter">Resource filter string. See [RFC 7644 section 3.4.2.2](https://tools.ietf.org/html/rfc7644#section-3.4.2.2) for syntax. Note this API implementation also supports a non-standard \&quot;re\&quot; operator for regular expression matching against string attributes. When using the \&quot;re\&quot; operator, do not include slash characters as delimiters (e.g. use \&quot;foo\&quot; instead of \&quot;/foo/\&quot;.) Also note the case-sensitivity of the regular expression corresponds to the \&quot;caseExact\&quot; characteristic of the target attribute. (optional)</param>
        /// <param name="sortBy">Attribute to be used for sorting resources. See [RFC 7644 section 3.4.2.3](https://tools.ietf.org/html/rfc7644#section-3.4.2.3). The attribute name must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) Use the *sortOrder* parameter to specify whether resources should be sorted in ascending or descending order. (optional)</param>
        /// <param name="sortOrder">The order by which resources are to be sorted. See [RFC 7644 section 3.4.2.3](https://tools.ietf.org/html/rfc7644#section-3.4.2.3). Valid values are &#39;&#39;ascending&#39;&#39; (the default value) or &#39;&#39;descending&#39;&#39;. This parameter may not be used unless the *sortBy* parameter is also specified. (optional)</param>
        /// <param name="startIndex">Result start index. The one-based index of the first result to be returned in the list of resources. For example, to exclude the first two resources, use a *startIndex* value of 3. This parameter has a default value of 1. This index applies *after* any resource filtration has been applied as specified by the *filter* argument. (optional)</param>
        /// <param name="count">Maximum resource count. The server will not return more resources than this value, although it may return fewer. (optional)</param>
        /// <param name="attributes">Attribute whitelist filter string. A comma-separated list of resource attribute names to be returned in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *excludedAttributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="excludedAttributes">Attribute blacklist filter string. A comma-separated list of resource attribute names to be excluded in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="additionalAttributes">Non-standard attribute filter string. A comma-separated list of resource attribute names to be included in the response, complementing the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *excludedAttributes* parameters. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GroupResourceList</returns>
        System.Threading.Tasks.Task<GroupResourceList> GetGroupsAsync(string filter = default(string), string sortBy = default(string), string sortOrder = default(string), int? startIndex = default(int?), int? count = default(int?), List<string> attributes = default(List<string>), List<string> excludedAttributes = default(List<string>), List<string> additionalAttributes = default(List<string>), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Get a list of groups.
        /// </summary>
        /// <remarks>
        /// Get a list of group resources.
        /// </remarks>
        /// <exception cref="FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="filter">Resource filter string. See [RFC 7644 section 3.4.2.2](https://tools.ietf.org/html/rfc7644#section-3.4.2.2) for syntax. Note this API implementation also supports a non-standard \&quot;re\&quot; operator for regular expression matching against string attributes. When using the \&quot;re\&quot; operator, do not include slash characters as delimiters (e.g. use \&quot;foo\&quot; instead of \&quot;/foo/\&quot;.) Also note the case-sensitivity of the regular expression corresponds to the \&quot;caseExact\&quot; characteristic of the target attribute. (optional)</param>
        /// <param name="sortBy">Attribute to be used for sorting resources. See [RFC 7644 section 3.4.2.3](https://tools.ietf.org/html/rfc7644#section-3.4.2.3). The attribute name must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) Use the *sortOrder* parameter to specify whether resources should be sorted in ascending or descending order. (optional)</param>
        /// <param name="sortOrder">The order by which resources are to be sorted. See [RFC 7644 section 3.4.2.3](https://tools.ietf.org/html/rfc7644#section-3.4.2.3). Valid values are &#39;&#39;ascending&#39;&#39; (the default value) or &#39;&#39;descending&#39;&#39;. This parameter may not be used unless the *sortBy* parameter is also specified. (optional)</param>
        /// <param name="startIndex">Result start index. The one-based index of the first result to be returned in the list of resources. For example, to exclude the first two resources, use a *startIndex* value of 3. This parameter has a default value of 1. This index applies *after* any resource filtration has been applied as specified by the *filter* argument. (optional)</param>
        /// <param name="count">Maximum resource count. The server will not return more resources than this value, although it may return fewer. (optional)</param>
        /// <param name="attributes">Attribute whitelist filter string. A comma-separated list of resource attribute names to be returned in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *excludedAttributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="excludedAttributes">Attribute blacklist filter string. A comma-separated list of resource attribute names to be excluded in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="additionalAttributes">Non-standard attribute filter string. A comma-separated list of resource attribute names to be included in the response, complementing the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *excludedAttributes* parameters. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GroupResourceList)</returns>
        System.Threading.Tasks.Task<ApiResponse<GroupResourceList>> GetGroupsWithHttpInfoAsync(string filter = default(string), string sortBy = default(string), string sortOrder = default(string), int? startIndex = default(int?), int? count = default(int?), List<string> attributes = default(List<string>), List<string> excludedAttributes = default(List<string>), List<string> additionalAttributes = default(List<string>), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Patch a group.
        /// </summary>
        /// <remarks>
        /// Modify a specific group resource (i.e. add, replace, or remove attributes of a group resource.)
        /// </remarks>
        /// <exception cref="FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">ID of resource.</param>
        /// <param name="attributes">Attribute whitelist filter string. A comma-separated list of resource attribute names to be returned in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *excludedAttributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="excludedAttributes">Attribute blacklist filter string. A comma-separated list of resource attribute names to be excluded in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="additionalAttributes">Non-standard attribute filter string. A comma-separated list of resource attribute names to be included in the response, complementing the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *excludedAttributes* parameters. (optional)</param>
        /// <param name="patch"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GroupResource</returns>
        System.Threading.Tasks.Task<GroupResource> ModifyGroupAsync(string id, List<string> attributes = default(List<string>), List<string> excludedAttributes = default(List<string>), List<string> additionalAttributes = default(List<string>), Patch patch = default(Patch), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Patch a group.
        /// </summary>
        /// <remarks>
        /// Modify a specific group resource (i.e. add, replace, or remove attributes of a group resource.)
        /// </remarks>
        /// <exception cref="FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">ID of resource.</param>
        /// <param name="attributes">Attribute whitelist filter string. A comma-separated list of resource attribute names to be returned in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *excludedAttributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="excludedAttributes">Attribute blacklist filter string. A comma-separated list of resource attribute names to be excluded in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="additionalAttributes">Non-standard attribute filter string. A comma-separated list of resource attribute names to be included in the response, complementing the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *excludedAttributes* parameters. (optional)</param>
        /// <param name="patch"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GroupResource)</returns>
        System.Threading.Tasks.Task<ApiResponse<GroupResource>> ModifyGroupWithHttpInfoAsync(string id, List<string> attributes = default(List<string>), List<string> excludedAttributes = default(List<string>), List<string> additionalAttributes = default(List<string>), Patch patch = default(Patch), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Replace a group.
        /// </summary>
        /// <remarks>
        /// Replace a specific group resource with another provided group resource.
        /// </remarks>
        /// <exception cref="FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">ID of resource.</param>
        /// <param name="groupResource">Group resource.</param>
        /// <param name="attributes">Attribute whitelist filter string. A comma-separated list of resource attribute names to be returned in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *excludedAttributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="excludedAttributes">Attribute blacklist filter string. A comma-separated list of resource attribute names to be excluded in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="additionalAttributes">Non-standard attribute filter string. A comma-separated list of resource attribute names to be included in the response, complementing the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *excludedAttributes* parameters. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GroupResource</returns>
        System.Threading.Tasks.Task<GroupResource> ReplaceGroupAsync(string id, GroupResource groupResource, List<string> attributes = default(List<string>), List<string> excludedAttributes = default(List<string>), List<string> additionalAttributes = default(List<string>), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Replace a group.
        /// </summary>
        /// <remarks>
        /// Replace a specific group resource with another provided group resource.
        /// </remarks>
        /// <exception cref="FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">ID of resource.</param>
        /// <param name="groupResource">Group resource.</param>
        /// <param name="attributes">Attribute whitelist filter string. A comma-separated list of resource attribute names to be returned in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *excludedAttributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="excludedAttributes">Attribute blacklist filter string. A comma-separated list of resource attribute names to be excluded in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="additionalAttributes">Non-standard attribute filter string. A comma-separated list of resource attribute names to be included in the response, complementing the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *excludedAttributes* parameters. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GroupResource)</returns>
        System.Threading.Tasks.Task<ApiResponse<GroupResource>> ReplaceGroupWithHttpInfoAsync(string id, GroupResource groupResource, List<string> attributes = default(List<string>), List<string> excludedAttributes = default(List<string>), List<string> additionalAttributes = default(List<string>), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IGroupsApi : IGroupsApiSync, IGroupsApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class GroupsApi : IGroupsApi
    {
        private FactSet.SDK.ProcuretoPayAPISCIM.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        # region Response Type Disctionaries
        
        private static readonly Dictionary<HttpStatusCode, System.Type> GetGroupResponseTypeDictionary = new Dictionary<HttpStatusCode, System.Type>
        {
            { (HttpStatusCode)200, typeof(GroupResource) },
            { (HttpStatusCode)401, typeof(Error) },
            { (HttpStatusCode)403, typeof(Error) },
            { (HttpStatusCode)404, typeof(Error) },
            { (HttpStatusCode)429, typeof(InlineResponse429) },
            { (HttpStatusCode)500, typeof(Error) },
        };

        private static readonly Dictionary<HttpStatusCode, System.Type> GetGroupsResponseTypeDictionary = new Dictionary<HttpStatusCode, System.Type>
        {
            { (HttpStatusCode)200, typeof(GroupResourceList) },
            { (HttpStatusCode)400, typeof(Error) },
            { (HttpStatusCode)401, typeof(Error) },
            { (HttpStatusCode)403, typeof(Error) },
            { (HttpStatusCode)429, typeof(InlineResponse429) },
            { (HttpStatusCode)500, typeof(Error) },
        };

        private static readonly Dictionary<HttpStatusCode, System.Type> ModifyGroupResponseTypeDictionary = new Dictionary<HttpStatusCode, System.Type>
        {
            { (HttpStatusCode)200, typeof(GroupResource) },
            { (HttpStatusCode)400, typeof(Error) },
            { (HttpStatusCode)401, typeof(Error) },
            { (HttpStatusCode)403, typeof(Error) },
            { (HttpStatusCode)429, typeof(InlineResponse429) },
            { (HttpStatusCode)500, typeof(Error) },
            { (HttpStatusCode)501, typeof(Error) },
        };

        private static readonly Dictionary<HttpStatusCode, System.Type> ReplaceGroupResponseTypeDictionary = new Dictionary<HttpStatusCode, System.Type>
        {
            { (HttpStatusCode)200, typeof(GroupResource) },
            { (HttpStatusCode)400, typeof(Error) },
            { (HttpStatusCode)401, typeof(Error) },
            { (HttpStatusCode)403, typeof(Error) },
            { (HttpStatusCode)404, typeof(Error) },
            { (HttpStatusCode)429, typeof(InlineResponse429) },
            { (HttpStatusCode)500, typeof(Error) },
        };

        # endregion Response Type Disctionaries

        # region Api Response Objects
        

        # endregion Api Response Objects

        /// <summary>
        /// Initializes a new instance of the <see cref="GroupsApi"/> class.
        /// </summary>
        /// <returns></returns>
        public GroupsApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="GroupsApi"/> class.
        /// </summary>
        /// <returns></returns>
        public GroupsApi(string basePath)
        {
            this.Configuration = FactSet.SDK.ProcuretoPayAPISCIM.Client.Configuration.MergeConfigurations(
                FactSet.SDK.ProcuretoPayAPISCIM.Client.GlobalConfiguration.Instance,
                new FactSet.SDK.ProcuretoPayAPISCIM.Client.Configuration { BasePath = basePath }
            );
            this.Client = new FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = FactSet.SDK.ProcuretoPayAPISCIM.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="GroupsApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public GroupsApi(FactSet.SDK.ProcuretoPayAPISCIM.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = FactSet.SDK.ProcuretoPayAPISCIM.Client.Configuration.MergeConfigurations(
                FactSet.SDK.ProcuretoPayAPISCIM.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = FactSet.SDK.ProcuretoPayAPISCIM.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="GroupsApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public GroupsApi(FactSet.SDK.ProcuretoPayAPISCIM.Client.ISynchronousClient client, FactSet.SDK.ProcuretoPayAPISCIM.Client.IAsynchronousClient asyncClient, FactSet.SDK.ProcuretoPayAPISCIM.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = FactSet.SDK.ProcuretoPayAPISCIM.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public FactSet.SDK.ProcuretoPayAPISCIM.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public FactSet.SDK.ProcuretoPayAPISCIM.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public FactSet.SDK.ProcuretoPayAPISCIM.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public FactSet.SDK.ProcuretoPayAPISCIM.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Get a group. Get a specific group resource.
        /// </summary>
        /// <exception cref="FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">ID of resource.</param>
        /// <param name="attributes">Attribute whitelist filter string. A comma-separated list of resource attribute names to be returned in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *excludedAttributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="excludedAttributes">Attribute blacklist filter string. A comma-separated list of resource attribute names to be excluded in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="additionalAttributes">Non-standard attribute filter string. A comma-separated list of resource attribute names to be included in the response, complementing the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *excludedAttributes* parameters. (optional)</param>
        /// <returns>GroupResource</returns>
        public GroupResource GetGroup(string id, List<string> attributes = default(List<string>), List<string> excludedAttributes = default(List<string>), List<string> additionalAttributes = default(List<string>))
        {
            var localVarResponse = GetGroupWithHttpInfo(id, attributes, excludedAttributes, additionalAttributes);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get a group. Get a specific group resource.
        /// </summary>
        /// <exception cref="FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">ID of resource.</param>
        /// <param name="attributes">Attribute whitelist filter string. A comma-separated list of resource attribute names to be returned in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *excludedAttributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="excludedAttributes">Attribute blacklist filter string. A comma-separated list of resource attribute names to be excluded in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="additionalAttributes">Non-standard attribute filter string. A comma-separated list of resource attribute names to be included in the response, complementing the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *excludedAttributes* parameters. (optional)</param>
        /// <returns>ApiResponse of GroupResource</returns>
        public ApiResponse<GroupResource> GetGroupWithHttpInfo(string id, List<string> attributes = default(List<string>), List<string> excludedAttributes = default(List<string>), List<string> additionalAttributes = default(List<string>))
        {
            // verify the required parameter 'id' is set
            if (id == null)
            {
                throw new FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiException(400, "Missing required parameter 'id' when calling GroupsApi->GetGroup");
            }

            FactSet.SDK.ProcuretoPayAPISCIM.Client.RequestOptions localVarRequestOptions = new FactSet.SDK.ProcuretoPayAPISCIM.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/scim+json",
                "application/json"
            };

            var localVarContentType = FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("id", FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.ParameterToString(id)); // path parameter
            if (attributes != null)
            {
                localVarRequestOptions.QueryParameters.Add(FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.ParameterToMultiMap("csv", "attributes", attributes));
            }
            if (excludedAttributes != null)
            {
                localVarRequestOptions.QueryParameters.Add(FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.ParameterToMultiMap("csv", "excludedAttributes", excludedAttributes));
            }
            if (additionalAttributes != null)
            {
                localVarRequestOptions.QueryParameters.Add(FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.ParameterToMultiMap("csv", "additionalAttributes", additionalAttributes));
            }

            // authentication (FactSetApiKey) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (FactSetOAuth2) required
            // oauth required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // FactSet Authentication Client required
            if (this.Configuration.OAuth2Client != null)
            {
                var token = this.Configuration.OAuth2Client.GetAccessTokenAsync().Result;
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + token);
            }

            localVarRequestOptions.ResponseTypeDictionary = GetGroupResponseTypeDictionary;

            // make the HTTP request
            var localVarResponse = this.Client.Get<
            GroupResource>("/Group/{id}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetGroup", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }
            return localVarResponse;
        }

        /// <summary>
        /// Get a group. Get a specific group resource.
        /// </summary>
        /// <exception cref="FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">ID of resource.</param>
        /// <param name="attributes">Attribute whitelist filter string. A comma-separated list of resource attribute names to be returned in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *excludedAttributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="excludedAttributes">Attribute blacklist filter string. A comma-separated list of resource attribute names to be excluded in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="additionalAttributes">Non-standard attribute filter string. A comma-separated list of resource attribute names to be included in the response, complementing the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *excludedAttributes* parameters. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GroupResource</returns>
        public async System.Threading.Tasks.Task<GroupResource>GetGroupAsync(string id, List<string> attributes = default(List<string>), List<string> excludedAttributes = default(List<string>), List<string> additionalAttributes = default(List<string>), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            var localVarResponse = await GetGroupWithHttpInfoAsync(id, attributes, excludedAttributes, additionalAttributes, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get a group. Get a specific group resource.
        /// </summary>
        /// <exception cref="FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">ID of resource.</param>
        /// <param name="attributes">Attribute whitelist filter string. A comma-separated list of resource attribute names to be returned in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *excludedAttributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="excludedAttributes">Attribute blacklist filter string. A comma-separated list of resource attribute names to be excluded in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="additionalAttributes">Non-standard attribute filter string. A comma-separated list of resource attribute names to be included in the response, complementing the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *excludedAttributes* parameters. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GroupResource)</returns>

        public async System.Threading.Tasks.Task<ApiResponse<GroupResource>> GetGroupWithHttpInfoAsync(string id, List<string> attributes = default(List<string>), List<string> excludedAttributes = default(List<string>), List<string> additionalAttributes = default(List<string>), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'id' is set
            if (id == null)
            {
                throw new FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiException(400, "Missing required parameter 'id' when calling GroupsApi->GetGroup");
            }


            FactSet.SDK.ProcuretoPayAPISCIM.Client.RequestOptions localVarRequestOptions = new FactSet.SDK.ProcuretoPayAPISCIM.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/scim+json",
                "application/json"
            };

            var localVarContentType = FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("id", FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.ParameterToString(id)); // path parameter
            if (attributes != null)
            {
                localVarRequestOptions.QueryParameters.Add(FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.ParameterToMultiMap("csv", "attributes", attributes));
            }
            if (excludedAttributes != null)
            {
                localVarRequestOptions.QueryParameters.Add(FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.ParameterToMultiMap("csv", "excludedAttributes", excludedAttributes));
            }
            if (additionalAttributes != null)
            {
                localVarRequestOptions.QueryParameters.Add(FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.ParameterToMultiMap("csv", "additionalAttributes", additionalAttributes));
            }

            // authentication (FactSetApiKey) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (FactSetOAuth2) required
            // oauth required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // FactSet Authentication Client required
            if (this.Configuration.OAuth2Client != null) {
                var token = await this.Configuration.OAuth2Client.GetAccessTokenAsync();
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + token);
            }


            localVarRequestOptions.ResponseTypeDictionary = GetGroupResponseTypeDictionary;

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<GroupResource>("/Group/{id}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetGroup", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get a list of groups. Get a list of group resources.
        /// </summary>
        /// <exception cref="FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="filter">Resource filter string. See [RFC 7644 section 3.4.2.2](https://tools.ietf.org/html/rfc7644#section-3.4.2.2) for syntax. Note this API implementation also supports a non-standard \&quot;re\&quot; operator for regular expression matching against string attributes. When using the \&quot;re\&quot; operator, do not include slash characters as delimiters (e.g. use \&quot;foo\&quot; instead of \&quot;/foo/\&quot;.) Also note the case-sensitivity of the regular expression corresponds to the \&quot;caseExact\&quot; characteristic of the target attribute. (optional)</param>
        /// <param name="sortBy">Attribute to be used for sorting resources. See [RFC 7644 section 3.4.2.3](https://tools.ietf.org/html/rfc7644#section-3.4.2.3). The attribute name must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) Use the *sortOrder* parameter to specify whether resources should be sorted in ascending or descending order. (optional)</param>
        /// <param name="sortOrder">The order by which resources are to be sorted. See [RFC 7644 section 3.4.2.3](https://tools.ietf.org/html/rfc7644#section-3.4.2.3). Valid values are &#39;&#39;ascending&#39;&#39; (the default value) or &#39;&#39;descending&#39;&#39;. This parameter may not be used unless the *sortBy* parameter is also specified. (optional)</param>
        /// <param name="startIndex">Result start index. The one-based index of the first result to be returned in the list of resources. For example, to exclude the first two resources, use a *startIndex* value of 3. This parameter has a default value of 1. This index applies *after* any resource filtration has been applied as specified by the *filter* argument. (optional)</param>
        /// <param name="count">Maximum resource count. The server will not return more resources than this value, although it may return fewer. (optional)</param>
        /// <param name="attributes">Attribute whitelist filter string. A comma-separated list of resource attribute names to be returned in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *excludedAttributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="excludedAttributes">Attribute blacklist filter string. A comma-separated list of resource attribute names to be excluded in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="additionalAttributes">Non-standard attribute filter string. A comma-separated list of resource attribute names to be included in the response, complementing the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *excludedAttributes* parameters. (optional)</param>
        /// <returns>GroupResourceList</returns>
        public GroupResourceList GetGroups(string filter = default(string), string sortBy = default(string), string sortOrder = default(string), int? startIndex = default(int?), int? count = default(int?), List<string> attributes = default(List<string>), List<string> excludedAttributes = default(List<string>), List<string> additionalAttributes = default(List<string>))
        {
            var localVarResponse = GetGroupsWithHttpInfo(filter, sortBy, sortOrder, startIndex, count, attributes, excludedAttributes, additionalAttributes);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get a list of groups. Get a list of group resources.
        /// </summary>
        /// <exception cref="FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="filter">Resource filter string. See [RFC 7644 section 3.4.2.2](https://tools.ietf.org/html/rfc7644#section-3.4.2.2) for syntax. Note this API implementation also supports a non-standard \&quot;re\&quot; operator for regular expression matching against string attributes. When using the \&quot;re\&quot; operator, do not include slash characters as delimiters (e.g. use \&quot;foo\&quot; instead of \&quot;/foo/\&quot;.) Also note the case-sensitivity of the regular expression corresponds to the \&quot;caseExact\&quot; characteristic of the target attribute. (optional)</param>
        /// <param name="sortBy">Attribute to be used for sorting resources. See [RFC 7644 section 3.4.2.3](https://tools.ietf.org/html/rfc7644#section-3.4.2.3). The attribute name must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) Use the *sortOrder* parameter to specify whether resources should be sorted in ascending or descending order. (optional)</param>
        /// <param name="sortOrder">The order by which resources are to be sorted. See [RFC 7644 section 3.4.2.3](https://tools.ietf.org/html/rfc7644#section-3.4.2.3). Valid values are &#39;&#39;ascending&#39;&#39; (the default value) or &#39;&#39;descending&#39;&#39;. This parameter may not be used unless the *sortBy* parameter is also specified. (optional)</param>
        /// <param name="startIndex">Result start index. The one-based index of the first result to be returned in the list of resources. For example, to exclude the first two resources, use a *startIndex* value of 3. This parameter has a default value of 1. This index applies *after* any resource filtration has been applied as specified by the *filter* argument. (optional)</param>
        /// <param name="count">Maximum resource count. The server will not return more resources than this value, although it may return fewer. (optional)</param>
        /// <param name="attributes">Attribute whitelist filter string. A comma-separated list of resource attribute names to be returned in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *excludedAttributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="excludedAttributes">Attribute blacklist filter string. A comma-separated list of resource attribute names to be excluded in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="additionalAttributes">Non-standard attribute filter string. A comma-separated list of resource attribute names to be included in the response, complementing the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *excludedAttributes* parameters. (optional)</param>
        /// <returns>ApiResponse of GroupResourceList</returns>
        public ApiResponse<GroupResourceList> GetGroupsWithHttpInfo(string filter = default(string), string sortBy = default(string), string sortOrder = default(string), int? startIndex = default(int?), int? count = default(int?), List<string> attributes = default(List<string>), List<string> excludedAttributes = default(List<string>), List<string> additionalAttributes = default(List<string>))
        {
            FactSet.SDK.ProcuretoPayAPISCIM.Client.RequestOptions localVarRequestOptions = new FactSet.SDK.ProcuretoPayAPISCIM.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/scim+json",
                "application/json"
            };

            var localVarContentType = FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (filter != null)
            {
                localVarRequestOptions.QueryParameters.Add(FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.ParameterToMultiMap("", "filter", filter));
            }
            if (sortBy != null)
            {
                localVarRequestOptions.QueryParameters.Add(FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.ParameterToMultiMap("", "sortBy", sortBy));
            }
            if (sortOrder != null)
            {
                localVarRequestOptions.QueryParameters.Add(FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.ParameterToMultiMap("", "sortOrder", sortOrder));
            }
            if (startIndex != null)
            {
                localVarRequestOptions.QueryParameters.Add(FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.ParameterToMultiMap("", "startIndex", startIndex));
            }
            if (count != null)
            {
                localVarRequestOptions.QueryParameters.Add(FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.ParameterToMultiMap("", "count", count));
            }
            if (attributes != null)
            {
                localVarRequestOptions.QueryParameters.Add(FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.ParameterToMultiMap("csv", "attributes", attributes));
            }
            if (excludedAttributes != null)
            {
                localVarRequestOptions.QueryParameters.Add(FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.ParameterToMultiMap("csv", "excludedAttributes", excludedAttributes));
            }
            if (additionalAttributes != null)
            {
                localVarRequestOptions.QueryParameters.Add(FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.ParameterToMultiMap("csv", "additionalAttributes", additionalAttributes));
            }

            // authentication (FactSetApiKey) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (FactSetOAuth2) required
            // oauth required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // FactSet Authentication Client required
            if (this.Configuration.OAuth2Client != null)
            {
                var token = this.Configuration.OAuth2Client.GetAccessTokenAsync().Result;
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + token);
            }

            localVarRequestOptions.ResponseTypeDictionary = GetGroupsResponseTypeDictionary;

            // make the HTTP request
            var localVarResponse = this.Client.Get<
            GroupResourceList>("/Groups", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetGroups", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }
            return localVarResponse;
        }

        /// <summary>
        /// Get a list of groups. Get a list of group resources.
        /// </summary>
        /// <exception cref="FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="filter">Resource filter string. See [RFC 7644 section 3.4.2.2](https://tools.ietf.org/html/rfc7644#section-3.4.2.2) for syntax. Note this API implementation also supports a non-standard \&quot;re\&quot; operator for regular expression matching against string attributes. When using the \&quot;re\&quot; operator, do not include slash characters as delimiters (e.g. use \&quot;foo\&quot; instead of \&quot;/foo/\&quot;.) Also note the case-sensitivity of the regular expression corresponds to the \&quot;caseExact\&quot; characteristic of the target attribute. (optional)</param>
        /// <param name="sortBy">Attribute to be used for sorting resources. See [RFC 7644 section 3.4.2.3](https://tools.ietf.org/html/rfc7644#section-3.4.2.3). The attribute name must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) Use the *sortOrder* parameter to specify whether resources should be sorted in ascending or descending order. (optional)</param>
        /// <param name="sortOrder">The order by which resources are to be sorted. See [RFC 7644 section 3.4.2.3](https://tools.ietf.org/html/rfc7644#section-3.4.2.3). Valid values are &#39;&#39;ascending&#39;&#39; (the default value) or &#39;&#39;descending&#39;&#39;. This parameter may not be used unless the *sortBy* parameter is also specified. (optional)</param>
        /// <param name="startIndex">Result start index. The one-based index of the first result to be returned in the list of resources. For example, to exclude the first two resources, use a *startIndex* value of 3. This parameter has a default value of 1. This index applies *after* any resource filtration has been applied as specified by the *filter* argument. (optional)</param>
        /// <param name="count">Maximum resource count. The server will not return more resources than this value, although it may return fewer. (optional)</param>
        /// <param name="attributes">Attribute whitelist filter string. A comma-separated list of resource attribute names to be returned in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *excludedAttributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="excludedAttributes">Attribute blacklist filter string. A comma-separated list of resource attribute names to be excluded in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="additionalAttributes">Non-standard attribute filter string. A comma-separated list of resource attribute names to be included in the response, complementing the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *excludedAttributes* parameters. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GroupResourceList</returns>
        public async System.Threading.Tasks.Task<GroupResourceList>GetGroupsAsync(string filter = default(string), string sortBy = default(string), string sortOrder = default(string), int? startIndex = default(int?), int? count = default(int?), List<string> attributes = default(List<string>), List<string> excludedAttributes = default(List<string>), List<string> additionalAttributes = default(List<string>), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            var localVarResponse = await GetGroupsWithHttpInfoAsync(filter, sortBy, sortOrder, startIndex, count, attributes, excludedAttributes, additionalAttributes, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get a list of groups. Get a list of group resources.
        /// </summary>
        /// <exception cref="FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="filter">Resource filter string. See [RFC 7644 section 3.4.2.2](https://tools.ietf.org/html/rfc7644#section-3.4.2.2) for syntax. Note this API implementation also supports a non-standard \&quot;re\&quot; operator for regular expression matching against string attributes. When using the \&quot;re\&quot; operator, do not include slash characters as delimiters (e.g. use \&quot;foo\&quot; instead of \&quot;/foo/\&quot;.) Also note the case-sensitivity of the regular expression corresponds to the \&quot;caseExact\&quot; characteristic of the target attribute. (optional)</param>
        /// <param name="sortBy">Attribute to be used for sorting resources. See [RFC 7644 section 3.4.2.3](https://tools.ietf.org/html/rfc7644#section-3.4.2.3). The attribute name must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) Use the *sortOrder* parameter to specify whether resources should be sorted in ascending or descending order. (optional)</param>
        /// <param name="sortOrder">The order by which resources are to be sorted. See [RFC 7644 section 3.4.2.3](https://tools.ietf.org/html/rfc7644#section-3.4.2.3). Valid values are &#39;&#39;ascending&#39;&#39; (the default value) or &#39;&#39;descending&#39;&#39;. This parameter may not be used unless the *sortBy* parameter is also specified. (optional)</param>
        /// <param name="startIndex">Result start index. The one-based index of the first result to be returned in the list of resources. For example, to exclude the first two resources, use a *startIndex* value of 3. This parameter has a default value of 1. This index applies *after* any resource filtration has been applied as specified by the *filter* argument. (optional)</param>
        /// <param name="count">Maximum resource count. The server will not return more resources than this value, although it may return fewer. (optional)</param>
        /// <param name="attributes">Attribute whitelist filter string. A comma-separated list of resource attribute names to be returned in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *excludedAttributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="excludedAttributes">Attribute blacklist filter string. A comma-separated list of resource attribute names to be excluded in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="additionalAttributes">Non-standard attribute filter string. A comma-separated list of resource attribute names to be included in the response, complementing the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *excludedAttributes* parameters. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GroupResourceList)</returns>

        public async System.Threading.Tasks.Task<ApiResponse<GroupResourceList>> GetGroupsWithHttpInfoAsync(string filter = default(string), string sortBy = default(string), string sortOrder = default(string), int? startIndex = default(int?), int? count = default(int?), List<string> attributes = default(List<string>), List<string> excludedAttributes = default(List<string>), List<string> additionalAttributes = default(List<string>), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            FactSet.SDK.ProcuretoPayAPISCIM.Client.RequestOptions localVarRequestOptions = new FactSet.SDK.ProcuretoPayAPISCIM.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/scim+json",
                "application/json"
            };

            var localVarContentType = FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (filter != null)
            {
                localVarRequestOptions.QueryParameters.Add(FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.ParameterToMultiMap("", "filter", filter));
            }
            if (sortBy != null)
            {
                localVarRequestOptions.QueryParameters.Add(FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.ParameterToMultiMap("", "sortBy", sortBy));
            }
            if (sortOrder != null)
            {
                localVarRequestOptions.QueryParameters.Add(FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.ParameterToMultiMap("", "sortOrder", sortOrder));
            }
            if (startIndex != null)
            {
                localVarRequestOptions.QueryParameters.Add(FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.ParameterToMultiMap("", "startIndex", startIndex));
            }
            if (count != null)
            {
                localVarRequestOptions.QueryParameters.Add(FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.ParameterToMultiMap("", "count", count));
            }
            if (attributes != null)
            {
                localVarRequestOptions.QueryParameters.Add(FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.ParameterToMultiMap("csv", "attributes", attributes));
            }
            if (excludedAttributes != null)
            {
                localVarRequestOptions.QueryParameters.Add(FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.ParameterToMultiMap("csv", "excludedAttributes", excludedAttributes));
            }
            if (additionalAttributes != null)
            {
                localVarRequestOptions.QueryParameters.Add(FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.ParameterToMultiMap("csv", "additionalAttributes", additionalAttributes));
            }

            // authentication (FactSetApiKey) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (FactSetOAuth2) required
            // oauth required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // FactSet Authentication Client required
            if (this.Configuration.OAuth2Client != null) {
                var token = await this.Configuration.OAuth2Client.GetAccessTokenAsync();
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + token);
            }


            localVarRequestOptions.ResponseTypeDictionary = GetGroupsResponseTypeDictionary;

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<GroupResourceList>("/Groups", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetGroups", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Patch a group. Modify a specific group resource (i.e. add, replace, or remove attributes of a group resource.)
        /// </summary>
        /// <exception cref="FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">ID of resource.</param>
        /// <param name="attributes">Attribute whitelist filter string. A comma-separated list of resource attribute names to be returned in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *excludedAttributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="excludedAttributes">Attribute blacklist filter string. A comma-separated list of resource attribute names to be excluded in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="additionalAttributes">Non-standard attribute filter string. A comma-separated list of resource attribute names to be included in the response, complementing the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *excludedAttributes* parameters. (optional)</param>
        /// <param name="patch"> (optional)</param>
        /// <returns>GroupResource</returns>
        public GroupResource ModifyGroup(string id, List<string> attributes = default(List<string>), List<string> excludedAttributes = default(List<string>), List<string> additionalAttributes = default(List<string>), Patch patch = default(Patch))
        {
            var localVarResponse = ModifyGroupWithHttpInfo(id, attributes, excludedAttributes, additionalAttributes, patch);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Patch a group. Modify a specific group resource (i.e. add, replace, or remove attributes of a group resource.)
        /// </summary>
        /// <exception cref="FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">ID of resource.</param>
        /// <param name="attributes">Attribute whitelist filter string. A comma-separated list of resource attribute names to be returned in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *excludedAttributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="excludedAttributes">Attribute blacklist filter string. A comma-separated list of resource attribute names to be excluded in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="additionalAttributes">Non-standard attribute filter string. A comma-separated list of resource attribute names to be included in the response, complementing the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *excludedAttributes* parameters. (optional)</param>
        /// <param name="patch"> (optional)</param>
        /// <returns>ApiResponse of GroupResource</returns>
        public ApiResponse<GroupResource> ModifyGroupWithHttpInfo(string id, List<string> attributes = default(List<string>), List<string> excludedAttributes = default(List<string>), List<string> additionalAttributes = default(List<string>), Patch patch = default(Patch))
        {
            // verify the required parameter 'id' is set
            if (id == null)
            {
                throw new FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiException(400, "Missing required parameter 'id' when calling GroupsApi->ModifyGroup");
            }

            FactSet.SDK.ProcuretoPayAPISCIM.Client.RequestOptions localVarRequestOptions = new FactSet.SDK.ProcuretoPayAPISCIM.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/scim+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/scim+json",
                "application/json"
            };

            var localVarContentType = FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("id", FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.ParameterToString(id)); // path parameter
            if (attributes != null)
            {
                localVarRequestOptions.QueryParameters.Add(FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.ParameterToMultiMap("csv", "attributes", attributes));
            }
            if (excludedAttributes != null)
            {
                localVarRequestOptions.QueryParameters.Add(FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.ParameterToMultiMap("csv", "excludedAttributes", excludedAttributes));
            }
            if (additionalAttributes != null)
            {
                localVarRequestOptions.QueryParameters.Add(FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.ParameterToMultiMap("csv", "additionalAttributes", additionalAttributes));
            }
            localVarRequestOptions.Data = patch;

            // authentication (FactSetApiKey) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (FactSetOAuth2) required
            // oauth required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // FactSet Authentication Client required
            if (this.Configuration.OAuth2Client != null)
            {
                var token = this.Configuration.OAuth2Client.GetAccessTokenAsync().Result;
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + token);
            }

            localVarRequestOptions.ResponseTypeDictionary = ModifyGroupResponseTypeDictionary;

            // make the HTTP request
            var localVarResponse = this.Client.Patch<
            GroupResource>("/Group/{id}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ModifyGroup", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }
            return localVarResponse;
        }

        /// <summary>
        /// Patch a group. Modify a specific group resource (i.e. add, replace, or remove attributes of a group resource.)
        /// </summary>
        /// <exception cref="FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">ID of resource.</param>
        /// <param name="attributes">Attribute whitelist filter string. A comma-separated list of resource attribute names to be returned in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *excludedAttributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="excludedAttributes">Attribute blacklist filter string. A comma-separated list of resource attribute names to be excluded in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="additionalAttributes">Non-standard attribute filter string. A comma-separated list of resource attribute names to be included in the response, complementing the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *excludedAttributes* parameters. (optional)</param>
        /// <param name="patch"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GroupResource</returns>
        public async System.Threading.Tasks.Task<GroupResource>ModifyGroupAsync(string id, List<string> attributes = default(List<string>), List<string> excludedAttributes = default(List<string>), List<string> additionalAttributes = default(List<string>), Patch patch = default(Patch), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            var localVarResponse = await ModifyGroupWithHttpInfoAsync(id, attributes, excludedAttributes, additionalAttributes, patch, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Patch a group. Modify a specific group resource (i.e. add, replace, or remove attributes of a group resource.)
        /// </summary>
        /// <exception cref="FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">ID of resource.</param>
        /// <param name="attributes">Attribute whitelist filter string. A comma-separated list of resource attribute names to be returned in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *excludedAttributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="excludedAttributes">Attribute blacklist filter string. A comma-separated list of resource attribute names to be excluded in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="additionalAttributes">Non-standard attribute filter string. A comma-separated list of resource attribute names to be included in the response, complementing the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *excludedAttributes* parameters. (optional)</param>
        /// <param name="patch"> (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GroupResource)</returns>

        public async System.Threading.Tasks.Task<ApiResponse<GroupResource>> ModifyGroupWithHttpInfoAsync(string id, List<string> attributes = default(List<string>), List<string> excludedAttributes = default(List<string>), List<string> additionalAttributes = default(List<string>), Patch patch = default(Patch), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'id' is set
            if (id == null)
            {
                throw new FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiException(400, "Missing required parameter 'id' when calling GroupsApi->ModifyGroup");
            }


            FactSet.SDK.ProcuretoPayAPISCIM.Client.RequestOptions localVarRequestOptions = new FactSet.SDK.ProcuretoPayAPISCIM.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/scim+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/scim+json",
                "application/json"
            };

            var localVarContentType = FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("id", FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.ParameterToString(id)); // path parameter
            if (attributes != null)
            {
                localVarRequestOptions.QueryParameters.Add(FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.ParameterToMultiMap("csv", "attributes", attributes));
            }
            if (excludedAttributes != null)
            {
                localVarRequestOptions.QueryParameters.Add(FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.ParameterToMultiMap("csv", "excludedAttributes", excludedAttributes));
            }
            if (additionalAttributes != null)
            {
                localVarRequestOptions.QueryParameters.Add(FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.ParameterToMultiMap("csv", "additionalAttributes", additionalAttributes));
            }
            localVarRequestOptions.Data = patch;

            // authentication (FactSetApiKey) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (FactSetOAuth2) required
            // oauth required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // FactSet Authentication Client required
            if (this.Configuration.OAuth2Client != null) {
                var token = await this.Configuration.OAuth2Client.GetAccessTokenAsync();
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + token);
            }


            localVarRequestOptions.ResponseTypeDictionary = ModifyGroupResponseTypeDictionary;

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PatchAsync<GroupResource>("/Group/{id}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ModifyGroup", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Replace a group. Replace a specific group resource with another provided group resource.
        /// </summary>
        /// <exception cref="FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">ID of resource.</param>
        /// <param name="groupResource">Group resource.</param>
        /// <param name="attributes">Attribute whitelist filter string. A comma-separated list of resource attribute names to be returned in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *excludedAttributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="excludedAttributes">Attribute blacklist filter string. A comma-separated list of resource attribute names to be excluded in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="additionalAttributes">Non-standard attribute filter string. A comma-separated list of resource attribute names to be included in the response, complementing the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *excludedAttributes* parameters. (optional)</param>
        /// <returns>GroupResource</returns>
        public GroupResource ReplaceGroup(string id, GroupResource groupResource, List<string> attributes = default(List<string>), List<string> excludedAttributes = default(List<string>), List<string> additionalAttributes = default(List<string>))
        {
            var localVarResponse = ReplaceGroupWithHttpInfo(id, groupResource, attributes, excludedAttributes, additionalAttributes);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Replace a group. Replace a specific group resource with another provided group resource.
        /// </summary>
        /// <exception cref="FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">ID of resource.</param>
        /// <param name="groupResource">Group resource.</param>
        /// <param name="attributes">Attribute whitelist filter string. A comma-separated list of resource attribute names to be returned in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *excludedAttributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="excludedAttributes">Attribute blacklist filter string. A comma-separated list of resource attribute names to be excluded in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="additionalAttributes">Non-standard attribute filter string. A comma-separated list of resource attribute names to be included in the response, complementing the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *excludedAttributes* parameters. (optional)</param>
        /// <returns>ApiResponse of GroupResource</returns>
        public ApiResponse<GroupResource> ReplaceGroupWithHttpInfo(string id, GroupResource groupResource, List<string> attributes = default(List<string>), List<string> excludedAttributes = default(List<string>), List<string> additionalAttributes = default(List<string>))
        {
            // verify the required parameter 'id' is set
            if (id == null)
            {
                throw new FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiException(400, "Missing required parameter 'id' when calling GroupsApi->ReplaceGroup");
            }

            // verify the required parameter 'groupResource' is set
            if (groupResource == null)
            {
                throw new FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiException(400, "Missing required parameter 'groupResource' when calling GroupsApi->ReplaceGroup");
            }

            FactSet.SDK.ProcuretoPayAPISCIM.Client.RequestOptions localVarRequestOptions = new FactSet.SDK.ProcuretoPayAPISCIM.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/scim+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/scim+json",
                "application/json"
            };

            var localVarContentType = FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("id", FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.ParameterToString(id)); // path parameter
            if (attributes != null)
            {
                localVarRequestOptions.QueryParameters.Add(FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.ParameterToMultiMap("csv", "attributes", attributes));
            }
            if (excludedAttributes != null)
            {
                localVarRequestOptions.QueryParameters.Add(FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.ParameterToMultiMap("csv", "excludedAttributes", excludedAttributes));
            }
            if (additionalAttributes != null)
            {
                localVarRequestOptions.QueryParameters.Add(FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.ParameterToMultiMap("csv", "additionalAttributes", additionalAttributes));
            }
            localVarRequestOptions.Data = groupResource;

            // authentication (FactSetApiKey) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (FactSetOAuth2) required
            // oauth required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // FactSet Authentication Client required
            if (this.Configuration.OAuth2Client != null)
            {
                var token = this.Configuration.OAuth2Client.GetAccessTokenAsync().Result;
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + token);
            }

            localVarRequestOptions.ResponseTypeDictionary = ReplaceGroupResponseTypeDictionary;

            // make the HTTP request
            var localVarResponse = this.Client.Put<
            GroupResource>("/Group/{id}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ReplaceGroup", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }
            return localVarResponse;
        }

        /// <summary>
        /// Replace a group. Replace a specific group resource with another provided group resource.
        /// </summary>
        /// <exception cref="FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">ID of resource.</param>
        /// <param name="groupResource">Group resource.</param>
        /// <param name="attributes">Attribute whitelist filter string. A comma-separated list of resource attribute names to be returned in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *excludedAttributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="excludedAttributes">Attribute blacklist filter string. A comma-separated list of resource attribute names to be excluded in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="additionalAttributes">Non-standard attribute filter string. A comma-separated list of resource attribute names to be included in the response, complementing the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *excludedAttributes* parameters. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of GroupResource</returns>
        public async System.Threading.Tasks.Task<GroupResource>ReplaceGroupAsync(string id, GroupResource groupResource, List<string> attributes = default(List<string>), List<string> excludedAttributes = default(List<string>), List<string> additionalAttributes = default(List<string>), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            var localVarResponse = await ReplaceGroupWithHttpInfoAsync(id, groupResource, attributes, excludedAttributes, additionalAttributes, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Replace a group. Replace a specific group resource with another provided group resource.
        /// </summary>
        /// <exception cref="FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">ID of resource.</param>
        /// <param name="groupResource">Group resource.</param>
        /// <param name="attributes">Attribute whitelist filter string. A comma-separated list of resource attribute names to be returned in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *excludedAttributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="excludedAttributes">Attribute blacklist filter string. A comma-separated list of resource attribute names to be excluded in the response, overriding the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *additionalAttributes* parameters. (optional)</param>
        /// <param name="additionalAttributes">Non-standard attribute filter string. A comma-separated list of resource attribute names to be included in the response, complementing the set of attributes that would be returned by default. Attribute names must be specified in standard attribute notation (see [RFC 7644 section 3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This parameter cannot be used with the *attributes* or *excludedAttributes* parameters. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (GroupResource)</returns>

        public async System.Threading.Tasks.Task<ApiResponse<GroupResource>> ReplaceGroupWithHttpInfoAsync(string id, GroupResource groupResource, List<string> attributes = default(List<string>), List<string> excludedAttributes = default(List<string>), List<string> additionalAttributes = default(List<string>), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'id' is set
            if (id == null)
            {
                throw new FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiException(400, "Missing required parameter 'id' when calling GroupsApi->ReplaceGroup");
            }

            // verify the required parameter 'groupResource' is set
            if (groupResource == null)
            {
                throw new FactSet.SDK.ProcuretoPayAPISCIM.Client.ApiException(400, "Missing required parameter 'groupResource' when calling GroupsApi->ReplaceGroup");
            }


            FactSet.SDK.ProcuretoPayAPISCIM.Client.RequestOptions localVarRequestOptions = new FactSet.SDK.ProcuretoPayAPISCIM.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/scim+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/scim+json",
                "application/json"
            };

            var localVarContentType = FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("id", FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.ParameterToString(id)); // path parameter
            if (attributes != null)
            {
                localVarRequestOptions.QueryParameters.Add(FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.ParameterToMultiMap("csv", "attributes", attributes));
            }
            if (excludedAttributes != null)
            {
                localVarRequestOptions.QueryParameters.Add(FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.ParameterToMultiMap("csv", "excludedAttributes", excludedAttributes));
            }
            if (additionalAttributes != null)
            {
                localVarRequestOptions.QueryParameters.Add(FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.ParameterToMultiMap("csv", "additionalAttributes", additionalAttributes));
            }
            localVarRequestOptions.Data = groupResource;

            // authentication (FactSetApiKey) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + FactSet.SDK.ProcuretoPayAPISCIM.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (FactSetOAuth2) required
            // oauth required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // FactSet Authentication Client required
            if (this.Configuration.OAuth2Client != null) {
                var token = await this.Configuration.OAuth2Client.GetAccessTokenAsync();
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + token);
            }


            localVarRequestOptions.ResponseTypeDictionary = ReplaceGroupResponseTypeDictionary;

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PutAsync<GroupResource>("/Group/{id}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ReplaceGroup", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
