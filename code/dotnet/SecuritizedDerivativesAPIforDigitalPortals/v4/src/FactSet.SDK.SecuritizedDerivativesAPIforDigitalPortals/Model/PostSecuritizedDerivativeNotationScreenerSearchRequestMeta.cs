/*
 * Securitized Derivatives API For Digital Portals
 *
 * Search for securitized derivative instruments, using a criteria-based screener. The API provides also fundamental data, notation-based key figures, list of barrier types, and details regarding the underlyings, their respective barriers and related cash flows, coupon lists and derived basic interest rate information.  The screener is based on securitized derivatives-specific parameters. The result is limited to the notations that satisfy all the selected filters. If more than one notation of an instrument matches the parameters, and no market priority has been specified, only the notation with the highest trading volume, averaged over one month, is considered. All identifier types used as parameters must be valid and application must have permissions for them.  Available search criteria include:  * validation: filter for only active listings, by price quality and latest/previous available price dates * traded markets: filter and indicate a market priority for the validation * life cycle: important dates in and features of the life cycle of the securitized derivatives instruments * filter by issuer, country of registration of the securitized derivatives * underlying and related barriers, including level and distance, and resulting cash flows * coupon data: where applicable, occurrence and frequency of coupon payments, current interest rate range * performance and volatility * product-specific ask-based key figures (not all key figures are available for all product types):     * bonus yield, sideways yield, maximum yield based on the ask price     * agio, discount     * spread     * break even, outperformance point, parity     * delta, weekly theta, vega, implied volatility     * leverage, omega     * intrinsic value, time value         Since some underlyings, e.g. an index or a performance difference of a stock and an index (alpha structure), do not represent a directly tradable asset, they do not have a price in the classical sense. Therefore, the term *level* is used instead of *price*, e.g. underlying level instead of underlying price. The endpoint does not support the search for securitized derivatives with multiple underlyings, thus only securitized derivatives with a single underlying are returned in the result.  The search can be restricted to a specific set of products by using customer-specific instrument or notation lists. Such restriction lists are set up by FactSet upon request.  This API is fully integrated with the corresponding [Quotes API](https://developer.factset.com/api-catalog/quotes-api-digital-portals), allowing access to detailed price and performance information of instruments, as well as basic security identifier cross-reference. For direct access to price histories, please refer to the [Time Series API for Digital Portals](https://developer.factset.com/api-catalog/time-series-api-digital-portals).  Similar criteria based screener APIs exist for equity and fixed income instruments: See the [Stocks API](https://developer.factset.com/api-catalog/stocks-api-digital-portals) and the [Bonds API](https://developer.factset.com/api-catalog/bonds-api-digital-portals) for details.  
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: api@factset.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = FactSet.SDK.SecuritizedDerivativesAPIforDigitalPortals.Client.OpenAPIDateConverter;

namespace FactSet.SDK.SecuritizedDerivativesAPIforDigitalPortals.Model
{
    /// <summary>
    /// The meta member contains the meta information of the request.
    /// </summary>
    [DataContract(Name = "PostSecuritizedDerivativeNotationScreenerSearchRequest_meta")]
    public partial class PostSecuritizedDerivativeNotationScreenerSearchRequestMeta : IEquatable<PostSecuritizedDerivativeNotationScreenerSearchRequestMeta>, IValidatableObject
    {
        /// <summary>
        /// Defines Sort
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum SortEnum
        {
            /// <summary>
            /// Enum Symbol for value: symbol
            /// </summary>
            [EnumMember(Value = "symbol")]
            Symbol = 1,

            /// <summary>
            /// Enum MINUS_Symbol for value: -symbol
            /// </summary>
            [EnumMember(Value = "-symbol")]
            MINUS_Symbol = 2,

            /// <summary>
            /// Enum MarketName for value: market.name
            /// </summary>
            [EnumMember(Value = "market.name")]
            MarketName = 3,

            /// <summary>
            /// Enum MINUS_MarketName for value: -market.name
            /// </summary>
            [EnumMember(Value = "-market.name")]
            MINUS_MarketName = 4,

            /// <summary>
            /// Enum InstrumentName for value: instrument.name
            /// </summary>
            [EnumMember(Value = "instrument.name")]
            InstrumentName = 5,

            /// <summary>
            /// Enum MINUS_InstrumentName for value: -instrument.name
            /// </summary>
            [EnumMember(Value = "-instrument.name")]
            MINUS_InstrumentName = 6,

            /// <summary>
            /// Enum InstrumentShortName for value: instrument.shortName
            /// </summary>
            [EnumMember(Value = "instrument.shortName")]
            InstrumentShortName = 7,

            /// <summary>
            /// Enum MINUS_InstrumentShortName for value: -instrument.shortName
            /// </summary>
            [EnumMember(Value = "-instrument.shortName")]
            MINUS_InstrumentShortName = 8,

            /// <summary>
            /// Enum InstrumentCategorizationDdvLevel1Name for value: instrument.categorization.ddv.level1.name
            /// </summary>
            [EnumMember(Value = "instrument.categorization.ddv.level1.name")]
            InstrumentCategorizationDdvLevel1Name = 9,

            /// <summary>
            /// Enum MINUS_InstrumentCategorizationDdvLevel1Name for value: -instrument.categorization.ddv.level1.name
            /// </summary>
            [EnumMember(Value = "-instrument.categorization.ddv.level1.name")]
            MINUS_InstrumentCategorizationDdvLevel1Name = 10,

            /// <summary>
            /// Enum InstrumentCategorizationDdvLevel2Name for value: instrument.categorization.ddv.level2.name
            /// </summary>
            [EnumMember(Value = "instrument.categorization.ddv.level2.name")]
            InstrumentCategorizationDdvLevel2Name = 11,

            /// <summary>
            /// Enum MINUS_InstrumentCategorizationDdvLevel2Name for value: -instrument.categorization.ddv.level2.name
            /// </summary>
            [EnumMember(Value = "-instrument.categorization.ddv.level2.name")]
            MINUS_InstrumentCategorizationDdvLevel2Name = 12,

            /// <summary>
            /// Enum InstrumentCategorizationDdvLevel3Name for value: instrument.categorization.ddv.level3.name
            /// </summary>
            [EnumMember(Value = "instrument.categorization.ddv.level3.name")]
            InstrumentCategorizationDdvLevel3Name = 13,

            /// <summary>
            /// Enum MINUS_InstrumentCategorizationDdvLevel3Name for value: -instrument.categorization.ddv.level3.name
            /// </summary>
            [EnumMember(Value = "-instrument.categorization.ddv.level3.name")]
            MINUS_InstrumentCategorizationDdvLevel3Name = 14,

            /// <summary>
            /// Enum InstrumentCategorizationEusipaLevel1Name for value: instrument.categorization.eusipa.level1.name
            /// </summary>
            [EnumMember(Value = "instrument.categorization.eusipa.level1.name")]
            InstrumentCategorizationEusipaLevel1Name = 15,

            /// <summary>
            /// Enum MINUS_InstrumentCategorizationEusipaLevel1Name for value: -instrument.categorization.eusipa.level1.name
            /// </summary>
            [EnumMember(Value = "-instrument.categorization.eusipa.level1.name")]
            MINUS_InstrumentCategorizationEusipaLevel1Name = 16,

            /// <summary>
            /// Enum InstrumentCategorizationEusipaLevel2Name for value: instrument.categorization.eusipa.level2.name
            /// </summary>
            [EnumMember(Value = "instrument.categorization.eusipa.level2.name")]
            InstrumentCategorizationEusipaLevel2Name = 17,

            /// <summary>
            /// Enum MINUS_InstrumentCategorizationEusipaLevel2Name for value: -instrument.categorization.eusipa.level2.name
            /// </summary>
            [EnumMember(Value = "-instrument.categorization.eusipa.level2.name")]
            MINUS_InstrumentCategorizationEusipaLevel2Name = 18,

            /// <summary>
            /// Enum InstrumentCategorizationEusipaLevel3Name for value: instrument.categorization.eusipa.level3.name
            /// </summary>
            [EnumMember(Value = "instrument.categorization.eusipa.level3.name")]
            InstrumentCategorizationEusipaLevel3Name = 19,

            /// <summary>
            /// Enum MINUS_InstrumentCategorizationEusipaLevel3Name for value: -instrument.categorization.eusipa.level3.name
            /// </summary>
            [EnumMember(Value = "-instrument.categorization.eusipa.level3.name")]
            MINUS_InstrumentCategorizationEusipaLevel3Name = 20,

            /// <summary>
            /// Enum InstrumentLifeCycleMaturityDate for value: instrument.lifeCycle.maturity.date
            /// </summary>
            [EnumMember(Value = "instrument.lifeCycle.maturity.date")]
            InstrumentLifeCycleMaturityDate = 21,

            /// <summary>
            /// Enum MINUS_InstrumentLifeCycleMaturityDate for value: -instrument.lifeCycle.maturity.date
            /// </summary>
            [EnumMember(Value = "-instrument.lifeCycle.maturity.date")]
            MINUS_InstrumentLifeCycleMaturityDate = 22,

            /// <summary>
            /// Enum InstrumentLifeCycleMaturityRemainingTermDays for value: instrument.lifeCycle.maturity.remainingTermDays
            /// </summary>
            [EnumMember(Value = "instrument.lifeCycle.maturity.remainingTermDays")]
            InstrumentLifeCycleMaturityRemainingTermDays = 23,

            /// <summary>
            /// Enum MINUS_InstrumentLifeCycleMaturityRemainingTermDays for value: -instrument.lifeCycle.maturity.remainingTermDays
            /// </summary>
            [EnumMember(Value = "-instrument.lifeCycle.maturity.remainingTermDays")]
            MINUS_InstrumentLifeCycleMaturityRemainingTermDays = 24,

            /// <summary>
            /// Enum InstrumentLifeCycleMaturityPerpetual for value: instrument.lifeCycle.maturity.perpetual
            /// </summary>
            [EnumMember(Value = "instrument.lifeCycle.maturity.perpetual")]
            InstrumentLifeCycleMaturityPerpetual = 25,

            /// <summary>
            /// Enum MINUS_InstrumentLifeCycleMaturityPerpetual for value: -instrument.lifeCycle.maturity.perpetual
            /// </summary>
            [EnumMember(Value = "-instrument.lifeCycle.maturity.perpetual")]
            MINUS_InstrumentLifeCycleMaturityPerpetual = 26,

            /// <summary>
            /// Enum InstrumentLifeCycleCallable for value: instrument.lifeCycle.callable
            /// </summary>
            [EnumMember(Value = "instrument.lifeCycle.callable")]
            InstrumentLifeCycleCallable = 27,

            /// <summary>
            /// Enum MINUS_InstrumentLifeCycleCallable for value: -instrument.lifeCycle.callable
            /// </summary>
            [EnumMember(Value = "-instrument.lifeCycle.callable")]
            MINUS_InstrumentLifeCycleCallable = 28,

            /// <summary>
            /// Enum InstrumentLifeCycleValuation for value: instrument.lifeCycle.valuation
            /// </summary>
            [EnumMember(Value = "instrument.lifeCycle.valuation")]
            InstrumentLifeCycleValuation = 29,

            /// <summary>
            /// Enum MINUS_InstrumentLifeCycleValuation for value: -instrument.lifeCycle.valuation
            /// </summary>
            [EnumMember(Value = "-instrument.lifeCycle.valuation")]
            MINUS_InstrumentLifeCycleValuation = 30,

            /// <summary>
            /// Enum InstrumentLifeCycleRepayment for value: instrument.lifeCycle.repayment
            /// </summary>
            [EnumMember(Value = "instrument.lifeCycle.repayment")]
            InstrumentLifeCycleRepayment = 31,

            /// <summary>
            /// Enum MINUS_InstrumentLifeCycleRepayment for value: -instrument.lifeCycle.repayment
            /// </summary>
            [EnumMember(Value = "-instrument.lifeCycle.repayment")]
            MINUS_InstrumentLifeCycleRepayment = 32,

            /// <summary>
            /// Enum InstrumentIssuerName for value: instrument.issuer.name
            /// </summary>
            [EnumMember(Value = "instrument.issuer.name")]
            InstrumentIssuerName = 33,

            /// <summary>
            /// Enum MINUS_InstrumentIssuerName for value: -instrument.issuer.name
            /// </summary>
            [EnumMember(Value = "-instrument.issuer.name")]
            MINUS_InstrumentIssuerName = 34,

            /// <summary>
            /// Enum InstrumentIssuerGroupName for value: instrument.issuer.group.name
            /// </summary>
            [EnumMember(Value = "instrument.issuer.group.name")]
            InstrumentIssuerGroupName = 35,

            /// <summary>
            /// Enum MINUS_InstrumentIssuerGroupName for value: -instrument.issuer.group.name
            /// </summary>
            [EnumMember(Value = "-instrument.issuer.group.name")]
            MINUS_InstrumentIssuerGroupName = 36,

            /// <summary>
            /// Enum InstrumentExerciseRight for value: instrument.exercise.right
            /// </summary>
            [EnumMember(Value = "instrument.exercise.right")]
            InstrumentExerciseRight = 37,

            /// <summary>
            /// Enum MINUS_InstrumentExerciseRight for value: -instrument.exercise.right
            /// </summary>
            [EnumMember(Value = "-instrument.exercise.right")]
            MINUS_InstrumentExerciseRight = 38,

            /// <summary>
            /// Enum InstrumentExerciseStyle for value: instrument.exercise.style
            /// </summary>
            [EnumMember(Value = "instrument.exercise.style")]
            InstrumentExerciseStyle = 39,

            /// <summary>
            /// Enum MINUS_InstrumentExerciseStyle for value: -instrument.exercise.style
            /// </summary>
            [EnumMember(Value = "-instrument.exercise.style")]
            MINUS_InstrumentExerciseStyle = 40,

            /// <summary>
            /// Enum InstrumentSettlement for value: instrument.settlement
            /// </summary>
            [EnumMember(Value = "instrument.settlement")]
            InstrumentSettlement = 41,

            /// <summary>
            /// Enum MINUS_InstrumentSettlement for value: -instrument.settlement
            /// </summary>
            [EnumMember(Value = "-instrument.settlement")]
            MINUS_InstrumentSettlement = 42,

            /// <summary>
            /// Enum InstrumentQuanto for value: instrument.quanto
            /// </summary>
            [EnumMember(Value = "instrument.quanto")]
            InstrumentQuanto = 43,

            /// <summary>
            /// Enum MINUS_InstrumentQuanto for value: -instrument.quanto
            /// </summary>
            [EnumMember(Value = "-instrument.quanto")]
            MINUS_InstrumentQuanto = 44,

            /// <summary>
            /// Enum InstrumentCapitalProtection for value: instrument.capitalProtection
            /// </summary>
            [EnumMember(Value = "instrument.capitalProtection")]
            InstrumentCapitalProtection = 45,

            /// <summary>
            /// Enum MINUS_InstrumentCapitalProtection for value: -instrument.capitalProtection
            /// </summary>
            [EnumMember(Value = "-instrument.capitalProtection")]
            MINUS_InstrumentCapitalProtection = 46,

            /// <summary>
            /// Enum InstrumentUnderlyingName for value: instrument.underlying.name
            /// </summary>
            [EnumMember(Value = "instrument.underlying.name")]
            InstrumentUnderlyingName = 47,

            /// <summary>
            /// Enum MINUS_InstrumentUnderlyingName for value: -instrument.underlying.name
            /// </summary>
            [EnumMember(Value = "-instrument.underlying.name")]
            MINUS_InstrumentUnderlyingName = 48,

            /// <summary>
            /// Enum InstrumentUnderlyingValueUnitCode for value: instrument.underlying.valueUnit.code
            /// </summary>
            [EnumMember(Value = "instrument.underlying.valueUnit.code")]
            InstrumentUnderlyingValueUnitCode = 49,

            /// <summary>
            /// Enum MINUS_InstrumentUnderlyingValueUnitCode for value: -instrument.underlying.valueUnit.code
            /// </summary>
            [EnumMember(Value = "-instrument.underlying.valueUnit.code")]
            MINUS_InstrumentUnderlyingValueUnitCode = 50,

            /// <summary>
            /// Enum InstrumentUnderlyingNotationInstrumentTypeComposite for value: instrument.underlying.notation.instrument.typeComposite
            /// </summary>
            [EnumMember(Value = "instrument.underlying.notation.instrument.typeComposite")]
            InstrumentUnderlyingNotationInstrumentTypeComposite = 51,

            /// <summary>
            /// Enum MINUS_InstrumentUnderlyingNotationInstrumentTypeComposite for value: -instrument.underlying.notation.instrument.typeComposite
            /// </summary>
            [EnumMember(Value = "-instrument.underlying.notation.instrument.typeComposite")]
            MINUS_InstrumentUnderlyingNotationInstrumentTypeComposite = 52,

            /// <summary>
            /// Enum InstrumentStrikeValue for value: instrument.strike.value
            /// </summary>
            [EnumMember(Value = "instrument.strike.value")]
            InstrumentStrikeValue = 53,

            /// <summary>
            /// Enum MINUS_InstrumentStrikeValue for value: -instrument.strike.value
            /// </summary>
            [EnumMember(Value = "-instrument.strike.value")]
            MINUS_InstrumentStrikeValue = 54,

            /// <summary>
            /// Enum InstrumentStrikeDistanceAbsolute for value: instrument.strike.distance.absolute
            /// </summary>
            [EnumMember(Value = "instrument.strike.distance.absolute")]
            InstrumentStrikeDistanceAbsolute = 55,

            /// <summary>
            /// Enum MINUS_InstrumentStrikeDistanceAbsolute for value: -instrument.strike.distance.absolute
            /// </summary>
            [EnumMember(Value = "-instrument.strike.distance.absolute")]
            MINUS_InstrumentStrikeDistanceAbsolute = 56,

            /// <summary>
            /// Enum InstrumentStrikeDistanceRelative for value: instrument.strike.distance.relative
            /// </summary>
            [EnumMember(Value = "instrument.strike.distance.relative")]
            InstrumentStrikeDistanceRelative = 57,

            /// <summary>
            /// Enum MINUS_InstrumentStrikeDistanceRelative for value: -instrument.strike.distance.relative
            /// </summary>
            [EnumMember(Value = "-instrument.strike.distance.relative")]
            MINUS_InstrumentStrikeDistanceRelative = 58,

            /// <summary>
            /// Enum InstrumentBonusLevelValue for value: instrument.bonusLevel.value
            /// </summary>
            [EnumMember(Value = "instrument.bonusLevel.value")]
            InstrumentBonusLevelValue = 59,

            /// <summary>
            /// Enum MINUS_InstrumentBonusLevelValue for value: -instrument.bonusLevel.value
            /// </summary>
            [EnumMember(Value = "-instrument.bonusLevel.value")]
            MINUS_InstrumentBonusLevelValue = 60,

            /// <summary>
            /// Enum InstrumentBonusLevelDistanceAbsolute for value: instrument.bonusLevel.distance.absolute
            /// </summary>
            [EnumMember(Value = "instrument.bonusLevel.distance.absolute")]
            InstrumentBonusLevelDistanceAbsolute = 61,

            /// <summary>
            /// Enum MINUS_InstrumentBonusLevelDistanceAbsolute for value: -instrument.bonusLevel.distance.absolute
            /// </summary>
            [EnumMember(Value = "-instrument.bonusLevel.distance.absolute")]
            MINUS_InstrumentBonusLevelDistanceAbsolute = 62,

            /// <summary>
            /// Enum InstrumentBonusLevelDistanceRelative for value: instrument.bonusLevel.distance.relative
            /// </summary>
            [EnumMember(Value = "instrument.bonusLevel.distance.relative")]
            InstrumentBonusLevelDistanceRelative = 63,

            /// <summary>
            /// Enum MINUS_InstrumentBonusLevelDistanceRelative for value: -instrument.bonusLevel.distance.relative
            /// </summary>
            [EnumMember(Value = "-instrument.bonusLevel.distance.relative")]
            MINUS_InstrumentBonusLevelDistanceRelative = 64,

            /// <summary>
            /// Enum InstrumentCapValue for value: instrument.cap.value
            /// </summary>
            [EnumMember(Value = "instrument.cap.value")]
            InstrumentCapValue = 65,

            /// <summary>
            /// Enum MINUS_InstrumentCapValue for value: -instrument.cap.value
            /// </summary>
            [EnumMember(Value = "-instrument.cap.value")]
            MINUS_InstrumentCapValue = 66,

            /// <summary>
            /// Enum InstrumentCapDistanceAbsolute for value: instrument.cap.distance.absolute
            /// </summary>
            [EnumMember(Value = "instrument.cap.distance.absolute")]
            InstrumentCapDistanceAbsolute = 67,

            /// <summary>
            /// Enum MINUS_InstrumentCapDistanceAbsolute for value: -instrument.cap.distance.absolute
            /// </summary>
            [EnumMember(Value = "-instrument.cap.distance.absolute")]
            MINUS_InstrumentCapDistanceAbsolute = 68,

            /// <summary>
            /// Enum InstrumentCapDistanceRelative for value: instrument.cap.distance.relative
            /// </summary>
            [EnumMember(Value = "instrument.cap.distance.relative")]
            InstrumentCapDistanceRelative = 69,

            /// <summary>
            /// Enum MINUS_InstrumentCapDistanceRelative for value: -instrument.cap.distance.relative
            /// </summary>
            [EnumMember(Value = "-instrument.cap.distance.relative")]
            MINUS_InstrumentCapDistanceRelative = 70,

            /// <summary>
            /// Enum InstrumentCapCashFlow for value: instrument.cap.cashFlow
            /// </summary>
            [EnumMember(Value = "instrument.cap.cashFlow")]
            InstrumentCapCashFlow = 71,

            /// <summary>
            /// Enum MINUS_InstrumentCapCashFlow for value: -instrument.cap.cashFlow
            /// </summary>
            [EnumMember(Value = "-instrument.cap.cashFlow")]
            MINUS_InstrumentCapCashFlow = 72,

            /// <summary>
            /// Enum InstrumentKnockOutObservationType for value: instrument.knockOut.observation.type
            /// </summary>
            [EnumMember(Value = "instrument.knockOut.observation.type")]
            InstrumentKnockOutObservationType = 73,

            /// <summary>
            /// Enum MINUS_InstrumentKnockOutObservationType for value: -instrument.knockOut.observation.type
            /// </summary>
            [EnumMember(Value = "-instrument.knockOut.observation.type")]
            MINUS_InstrumentKnockOutObservationType = 74,

            /// <summary>
            /// Enum InstrumentKnockOutValue for value: instrument.knockOut.value
            /// </summary>
            [EnumMember(Value = "instrument.knockOut.value")]
            InstrumentKnockOutValue = 75,

            /// <summary>
            /// Enum MINUS_InstrumentKnockOutValue for value: -instrument.knockOut.value
            /// </summary>
            [EnumMember(Value = "-instrument.knockOut.value")]
            MINUS_InstrumentKnockOutValue = 76,

            /// <summary>
            /// Enum InstrumentKnockOutDistanceAbsolute for value: instrument.knockOut.distance.absolute
            /// </summary>
            [EnumMember(Value = "instrument.knockOut.distance.absolute")]
            InstrumentKnockOutDistanceAbsolute = 77,

            /// <summary>
            /// Enum MINUS_InstrumentKnockOutDistanceAbsolute for value: -instrument.knockOut.distance.absolute
            /// </summary>
            [EnumMember(Value = "-instrument.knockOut.distance.absolute")]
            MINUS_InstrumentKnockOutDistanceAbsolute = 78,

            /// <summary>
            /// Enum InstrumentKnockOutDistanceRelative for value: instrument.knockOut.distance.relative
            /// </summary>
            [EnumMember(Value = "instrument.knockOut.distance.relative")]
            InstrumentKnockOutDistanceRelative = 79,

            /// <summary>
            /// Enum MINUS_InstrumentKnockOutDistanceRelative for value: -instrument.knockOut.distance.relative
            /// </summary>
            [EnumMember(Value = "-instrument.knockOut.distance.relative")]
            MINUS_InstrumentKnockOutDistanceRelative = 80,

            /// <summary>
            /// Enum InstrumentKnockOutBreachBreached for value: instrument.knockOut.breach.breached
            /// </summary>
            [EnumMember(Value = "instrument.knockOut.breach.breached")]
            InstrumentKnockOutBreachBreached = 81,

            /// <summary>
            /// Enum MINUS_InstrumentKnockOutBreachBreached for value: -instrument.knockOut.breach.breached
            /// </summary>
            [EnumMember(Value = "-instrument.knockOut.breach.breached")]
            MINUS_InstrumentKnockOutBreachBreached = 82,

            /// <summary>
            /// Enum InstrumentKnockOutBreachDatetime for value: instrument.knockOut.breach.datetime
            /// </summary>
            [EnumMember(Value = "instrument.knockOut.breach.datetime")]
            InstrumentKnockOutBreachDatetime = 83,

            /// <summary>
            /// Enum MINUS_InstrumentKnockOutBreachDatetime for value: -instrument.knockOut.breach.datetime
            /// </summary>
            [EnumMember(Value = "-instrument.knockOut.breach.datetime")]
            MINUS_InstrumentKnockOutBreachDatetime = 84,

            /// <summary>
            /// Enum InstrumentKnockInObservationType for value: instrument.knockIn.observation.type
            /// </summary>
            [EnumMember(Value = "instrument.knockIn.observation.type")]
            InstrumentKnockInObservationType = 85,

            /// <summary>
            /// Enum MINUS_InstrumentKnockInObservationType for value: -instrument.knockIn.observation.type
            /// </summary>
            [EnumMember(Value = "-instrument.knockIn.observation.type")]
            MINUS_InstrumentKnockInObservationType = 86,

            /// <summary>
            /// Enum InstrumentKnockInValue for value: instrument.knockIn.value
            /// </summary>
            [EnumMember(Value = "instrument.knockIn.value")]
            InstrumentKnockInValue = 87,

            /// <summary>
            /// Enum MINUS_InstrumentKnockInValue for value: -instrument.knockIn.value
            /// </summary>
            [EnumMember(Value = "-instrument.knockIn.value")]
            MINUS_InstrumentKnockInValue = 88,

            /// <summary>
            /// Enum InstrumentKnockInDistanceAbsolute for value: instrument.knockIn.distance.absolute
            /// </summary>
            [EnumMember(Value = "instrument.knockIn.distance.absolute")]
            InstrumentKnockInDistanceAbsolute = 89,

            /// <summary>
            /// Enum MINUS_InstrumentKnockInDistanceAbsolute for value: -instrument.knockIn.distance.absolute
            /// </summary>
            [EnumMember(Value = "-instrument.knockIn.distance.absolute")]
            MINUS_InstrumentKnockInDistanceAbsolute = 90,

            /// <summary>
            /// Enum InstrumentKnockInDistanceRelative for value: instrument.knockIn.distance.relative
            /// </summary>
            [EnumMember(Value = "instrument.knockIn.distance.relative")]
            InstrumentKnockInDistanceRelative = 91,

            /// <summary>
            /// Enum MINUS_InstrumentKnockInDistanceRelative for value: -instrument.knockIn.distance.relative
            /// </summary>
            [EnumMember(Value = "-instrument.knockIn.distance.relative")]
            MINUS_InstrumentKnockInDistanceRelative = 92,

            /// <summary>
            /// Enum InstrumentKnockInBreachBreached for value: instrument.knockIn.breach.breached
            /// </summary>
            [EnumMember(Value = "instrument.knockIn.breach.breached")]
            InstrumentKnockInBreachBreached = 93,

            /// <summary>
            /// Enum MINUS_InstrumentKnockInBreachBreached for value: -instrument.knockIn.breach.breached
            /// </summary>
            [EnumMember(Value = "-instrument.knockIn.breach.breached")]
            MINUS_InstrumentKnockInBreachBreached = 94,

            /// <summary>
            /// Enum InstrumentKnockInBreachDatetime for value: instrument.knockIn.breach.datetime
            /// </summary>
            [EnumMember(Value = "instrument.knockIn.breach.datetime")]
            InstrumentKnockInBreachDatetime = 95,

            /// <summary>
            /// Enum MINUS_InstrumentKnockInBreachDatetime for value: -instrument.knockIn.breach.datetime
            /// </summary>
            [EnumMember(Value = "-instrument.knockIn.breach.datetime")]
            MINUS_InstrumentKnockInBreachDatetime = 96,

            /// <summary>
            /// Enum InstrumentLockOutObservationType for value: instrument.lockOut.observation.type
            /// </summary>
            [EnumMember(Value = "instrument.lockOut.observation.type")]
            InstrumentLockOutObservationType = 97,

            /// <summary>
            /// Enum MINUS_InstrumentLockOutObservationType for value: -instrument.lockOut.observation.type
            /// </summary>
            [EnumMember(Value = "-instrument.lockOut.observation.type")]
            MINUS_InstrumentLockOutObservationType = 98,

            /// <summary>
            /// Enum InstrumentLockOutValue for value: instrument.lockOut.value
            /// </summary>
            [EnumMember(Value = "instrument.lockOut.value")]
            InstrumentLockOutValue = 99,

            /// <summary>
            /// Enum MINUS_InstrumentLockOutValue for value: -instrument.lockOut.value
            /// </summary>
            [EnumMember(Value = "-instrument.lockOut.value")]
            MINUS_InstrumentLockOutValue = 100,

            /// <summary>
            /// Enum InstrumentLockOutDistanceAbsolute for value: instrument.lockOut.distance.absolute
            /// </summary>
            [EnumMember(Value = "instrument.lockOut.distance.absolute")]
            InstrumentLockOutDistanceAbsolute = 101,

            /// <summary>
            /// Enum MINUS_InstrumentLockOutDistanceAbsolute for value: -instrument.lockOut.distance.absolute
            /// </summary>
            [EnumMember(Value = "-instrument.lockOut.distance.absolute")]
            MINUS_InstrumentLockOutDistanceAbsolute = 102,

            /// <summary>
            /// Enum InstrumentLockOutDistanceRelative for value: instrument.lockOut.distance.relative
            /// </summary>
            [EnumMember(Value = "instrument.lockOut.distance.relative")]
            InstrumentLockOutDistanceRelative = 103,

            /// <summary>
            /// Enum MINUS_InstrumentLockOutDistanceRelative for value: -instrument.lockOut.distance.relative
            /// </summary>
            [EnumMember(Value = "-instrument.lockOut.distance.relative")]
            MINUS_InstrumentLockOutDistanceRelative = 104,

            /// <summary>
            /// Enum InstrumentLockOutCashFlow for value: instrument.lockOut.cashFlow
            /// </summary>
            [EnumMember(Value = "instrument.lockOut.cashFlow")]
            InstrumentLockOutCashFlow = 105,

            /// <summary>
            /// Enum MINUS_InstrumentLockOutCashFlow for value: -instrument.lockOut.cashFlow
            /// </summary>
            [EnumMember(Value = "-instrument.lockOut.cashFlow")]
            MINUS_InstrumentLockOutCashFlow = 106,

            /// <summary>
            /// Enum InstrumentLockInObservationType for value: instrument.lockIn.observation.type
            /// </summary>
            [EnumMember(Value = "instrument.lockIn.observation.type")]
            InstrumentLockInObservationType = 107,

            /// <summary>
            /// Enum MINUS_InstrumentLockInObservationType for value: -instrument.lockIn.observation.type
            /// </summary>
            [EnumMember(Value = "-instrument.lockIn.observation.type")]
            MINUS_InstrumentLockInObservationType = 108,

            /// <summary>
            /// Enum InstrumentLockInValue for value: instrument.lockIn.value
            /// </summary>
            [EnumMember(Value = "instrument.lockIn.value")]
            InstrumentLockInValue = 109,

            /// <summary>
            /// Enum MINUS_InstrumentLockInValue for value: -instrument.lockIn.value
            /// </summary>
            [EnumMember(Value = "-instrument.lockIn.value")]
            MINUS_InstrumentLockInValue = 110,

            /// <summary>
            /// Enum InstrumentLockInDistanceAbsolute for value: instrument.lockIn.distance.absolute
            /// </summary>
            [EnumMember(Value = "instrument.lockIn.distance.absolute")]
            InstrumentLockInDistanceAbsolute = 111,

            /// <summary>
            /// Enum MINUS_InstrumentLockInDistanceAbsolute for value: -instrument.lockIn.distance.absolute
            /// </summary>
            [EnumMember(Value = "-instrument.lockIn.distance.absolute")]
            MINUS_InstrumentLockInDistanceAbsolute = 112,

            /// <summary>
            /// Enum InstrumentLockInDistanceRelative for value: instrument.lockIn.distance.relative
            /// </summary>
            [EnumMember(Value = "instrument.lockIn.distance.relative")]
            InstrumentLockInDistanceRelative = 113,

            /// <summary>
            /// Enum MINUS_InstrumentLockInDistanceRelative for value: -instrument.lockIn.distance.relative
            /// </summary>
            [EnumMember(Value = "-instrument.lockIn.distance.relative")]
            MINUS_InstrumentLockInDistanceRelative = 114,

            /// <summary>
            /// Enum InstrumentLockInCashFlow for value: instrument.lockIn.cashFlow
            /// </summary>
            [EnumMember(Value = "instrument.lockIn.cashFlow")]
            InstrumentLockInCashFlow = 115,

            /// <summary>
            /// Enum MINUS_InstrumentLockInCashFlow for value: -instrument.lockIn.cashFlow
            /// </summary>
            [EnumMember(Value = "-instrument.lockIn.cashFlow")]
            MINUS_InstrumentLockInCashFlow = 116,

            /// <summary>
            /// Enum InstrumentCapitalGuaranteeValue for value: instrument.capitalGuarantee.value
            /// </summary>
            [EnumMember(Value = "instrument.capitalGuarantee.value")]
            InstrumentCapitalGuaranteeValue = 117,

            /// <summary>
            /// Enum MINUS_InstrumentCapitalGuaranteeValue for value: -instrument.capitalGuarantee.value
            /// </summary>
            [EnumMember(Value = "-instrument.capitalGuarantee.value")]
            MINUS_InstrumentCapitalGuaranteeValue = 118,

            /// <summary>
            /// Enum InstrumentCapitalGuaranteeDistanceAbsolute for value: instrument.capitalGuarantee.distance.absolute
            /// </summary>
            [EnumMember(Value = "instrument.capitalGuarantee.distance.absolute")]
            InstrumentCapitalGuaranteeDistanceAbsolute = 119,

            /// <summary>
            /// Enum MINUS_InstrumentCapitalGuaranteeDistanceAbsolute for value: -instrument.capitalGuarantee.distance.absolute
            /// </summary>
            [EnumMember(Value = "-instrument.capitalGuarantee.distance.absolute")]
            MINUS_InstrumentCapitalGuaranteeDistanceAbsolute = 120,

            /// <summary>
            /// Enum InstrumentCapitalGuaranteeDistanceRelative for value: instrument.capitalGuarantee.distance.relative
            /// </summary>
            [EnumMember(Value = "instrument.capitalGuarantee.distance.relative")]
            InstrumentCapitalGuaranteeDistanceRelative = 121,

            /// <summary>
            /// Enum MINUS_InstrumentCapitalGuaranteeDistanceRelative for value: -instrument.capitalGuarantee.distance.relative
            /// </summary>
            [EnumMember(Value = "-instrument.capitalGuarantee.distance.relative")]
            MINUS_InstrumentCapitalGuaranteeDistanceRelative = 122,

            /// <summary>
            /// Enum InstrumentCapitalGuaranteeCashFlow for value: instrument.capitalGuarantee.cashFlow
            /// </summary>
            [EnumMember(Value = "instrument.capitalGuarantee.cashFlow")]
            InstrumentCapitalGuaranteeCashFlow = 123,

            /// <summary>
            /// Enum MINUS_InstrumentCapitalGuaranteeCashFlow for value: -instrument.capitalGuarantee.cashFlow
            /// </summary>
            [EnumMember(Value = "-instrument.capitalGuarantee.cashFlow")]
            MINUS_InstrumentCapitalGuaranteeCashFlow = 124,

            /// <summary>
            /// Enum InstrumentCouponTriggerLevelValue for value: instrument.couponTriggerLevel.value
            /// </summary>
            [EnumMember(Value = "instrument.couponTriggerLevel.value")]
            InstrumentCouponTriggerLevelValue = 125,

            /// <summary>
            /// Enum MINUS_InstrumentCouponTriggerLevelValue for value: -instrument.couponTriggerLevel.value
            /// </summary>
            [EnumMember(Value = "-instrument.couponTriggerLevel.value")]
            MINUS_InstrumentCouponTriggerLevelValue = 126,

            /// <summary>
            /// Enum InstrumentCouponTriggerLevelDistanceAbsolute for value: instrument.couponTriggerLevel.distance.absolute
            /// </summary>
            [EnumMember(Value = "instrument.couponTriggerLevel.distance.absolute")]
            InstrumentCouponTriggerLevelDistanceAbsolute = 127,

            /// <summary>
            /// Enum MINUS_InstrumentCouponTriggerLevelDistanceAbsolute for value: -instrument.couponTriggerLevel.distance.absolute
            /// </summary>
            [EnumMember(Value = "-instrument.couponTriggerLevel.distance.absolute")]
            MINUS_InstrumentCouponTriggerLevelDistanceAbsolute = 128,

            /// <summary>
            /// Enum InstrumentCouponTriggerLevelDistanceRelative for value: instrument.couponTriggerLevel.distance.relative
            /// </summary>
            [EnumMember(Value = "instrument.couponTriggerLevel.distance.relative")]
            InstrumentCouponTriggerLevelDistanceRelative = 129,

            /// <summary>
            /// Enum MINUS_InstrumentCouponTriggerLevelDistanceRelative for value: -instrument.couponTriggerLevel.distance.relative
            /// </summary>
            [EnumMember(Value = "-instrument.couponTriggerLevel.distance.relative")]
            MINUS_InstrumentCouponTriggerLevelDistanceRelative = 130,

            /// <summary>
            /// Enum InstrumentCouponTriggerLevelCashFlow for value: instrument.couponTriggerLevel.cashFlow
            /// </summary>
            [EnumMember(Value = "instrument.couponTriggerLevel.cashFlow")]
            InstrumentCouponTriggerLevelCashFlow = 131,

            /// <summary>
            /// Enum MINUS_InstrumentCouponTriggerLevelCashFlow for value: -instrument.couponTriggerLevel.cashFlow
            /// </summary>
            [EnumMember(Value = "-instrument.couponTriggerLevel.cashFlow")]
            MINUS_InstrumentCouponTriggerLevelCashFlow = 132,

            /// <summary>
            /// Enum InstrumentRangeKnockOutObservationType for value: instrument.rangeKnockOut.observation.type
            /// </summary>
            [EnumMember(Value = "instrument.rangeKnockOut.observation.type")]
            InstrumentRangeKnockOutObservationType = 133,

            /// <summary>
            /// Enum MINUS_InstrumentRangeKnockOutObservationType for value: -instrument.rangeKnockOut.observation.type
            /// </summary>
            [EnumMember(Value = "-instrument.rangeKnockOut.observation.type")]
            MINUS_InstrumentRangeKnockOutObservationType = 134,

            /// <summary>
            /// Enum InstrumentRangeKnockOutUpperValue for value: instrument.rangeKnockOut.upper.value
            /// </summary>
            [EnumMember(Value = "instrument.rangeKnockOut.upper.value")]
            InstrumentRangeKnockOutUpperValue = 135,

            /// <summary>
            /// Enum MINUS_InstrumentRangeKnockOutUpperValue for value: -instrument.rangeKnockOut.upper.value
            /// </summary>
            [EnumMember(Value = "-instrument.rangeKnockOut.upper.value")]
            MINUS_InstrumentRangeKnockOutUpperValue = 136,

            /// <summary>
            /// Enum InstrumentRangeKnockOutLowerValue for value: instrument.rangeKnockOut.lower.value
            /// </summary>
            [EnumMember(Value = "instrument.rangeKnockOut.lower.value")]
            InstrumentRangeKnockOutLowerValue = 137,

            /// <summary>
            /// Enum MINUS_InstrumentRangeKnockOutLowerValue for value: -instrument.rangeKnockOut.lower.value
            /// </summary>
            [EnumMember(Value = "-instrument.rangeKnockOut.lower.value")]
            MINUS_InstrumentRangeKnockOutLowerValue = 138,

            /// <summary>
            /// Enum InstrumentRangeKnockOutBreachBreached for value: instrument.rangeKnockOut.breach.breached
            /// </summary>
            [EnumMember(Value = "instrument.rangeKnockOut.breach.breached")]
            InstrumentRangeKnockOutBreachBreached = 139,

            /// <summary>
            /// Enum MINUS_InstrumentRangeKnockOutBreachBreached for value: -instrument.rangeKnockOut.breach.breached
            /// </summary>
            [EnumMember(Value = "-instrument.rangeKnockOut.breach.breached")]
            MINUS_InstrumentRangeKnockOutBreachBreached = 140,

            /// <summary>
            /// Enum InstrumentRangeKnockOutBreachDatetime for value: instrument.rangeKnockOut.breach.datetime
            /// </summary>
            [EnumMember(Value = "instrument.rangeKnockOut.breach.datetime")]
            InstrumentRangeKnockOutBreachDatetime = 141,

            /// <summary>
            /// Enum MINUS_InstrumentRangeKnockOutBreachDatetime for value: -instrument.rangeKnockOut.breach.datetime
            /// </summary>
            [EnumMember(Value = "-instrument.rangeKnockOut.breach.datetime")]
            MINUS_InstrumentRangeKnockOutBreachDatetime = 142,

            /// <summary>
            /// Enum InstrumentRangeKnockOutCashFlow for value: instrument.rangeKnockOut.cashFlow
            /// </summary>
            [EnumMember(Value = "instrument.rangeKnockOut.cashFlow")]
            InstrumentRangeKnockOutCashFlow = 143,

            /// <summary>
            /// Enum MINUS_InstrumentRangeKnockOutCashFlow for value: -instrument.rangeKnockOut.cashFlow
            /// </summary>
            [EnumMember(Value = "-instrument.rangeKnockOut.cashFlow")]
            MINUS_InstrumentRangeKnockOutCashFlow = 144,

            /// <summary>
            /// Enum InstrumentParticipation for value: instrument.participation
            /// </summary>
            [EnumMember(Value = "instrument.participation")]
            InstrumentParticipation = 145,

            /// <summary>
            /// Enum MINUS_InstrumentParticipation for value: -instrument.participation
            /// </summary>
            [EnumMember(Value = "-instrument.participation")]
            MINUS_InstrumentParticipation = 146,

            /// <summary>
            /// Enum InstrumentConstantLeverage for value: instrument.constantLeverage
            /// </summary>
            [EnumMember(Value = "instrument.constantLeverage")]
            InstrumentConstantLeverage = 147,

            /// <summary>
            /// Enum MINUS_InstrumentConstantLeverage for value: -instrument.constantLeverage
            /// </summary>
            [EnumMember(Value = "-instrument.constantLeverage")]
            MINUS_InstrumentConstantLeverage = 148,

            /// <summary>
            /// Enum InstrumentNominalCurrencyIsoCode for value: instrument.nominalCurrency.isoCode
            /// </summary>
            [EnumMember(Value = "instrument.nominalCurrency.isoCode")]
            InstrumentNominalCurrencyIsoCode = 149,

            /// <summary>
            /// Enum MINUS_InstrumentNominalCurrencyIsoCode for value: -instrument.nominalCurrency.isoCode
            /// </summary>
            [EnumMember(Value = "-instrument.nominalCurrency.isoCode")]
            MINUS_InstrumentNominalCurrencyIsoCode = 150,

            /// <summary>
            /// Enum InstrumentCurrentInterestRateType for value: instrument.currentInterestRate.type
            /// </summary>
            [EnumMember(Value = "instrument.currentInterestRate.type")]
            InstrumentCurrentInterestRateType = 151,

            /// <summary>
            /// Enum MINUS_InstrumentCurrentInterestRateType for value: -instrument.currentInterestRate.type
            /// </summary>
            [EnumMember(Value = "-instrument.currentInterestRate.type")]
            MINUS_InstrumentCurrentInterestRateType = 152,

            /// <summary>
            /// Enum InstrumentCurrentInterestRateValue for value: instrument.currentInterestRate.value
            /// </summary>
            [EnumMember(Value = "instrument.currentInterestRate.value")]
            InstrumentCurrentInterestRateValue = 153,

            /// <summary>
            /// Enum MINUS_InstrumentCurrentInterestRateValue for value: -instrument.currentInterestRate.value
            /// </summary>
            [EnumMember(Value = "-instrument.currentInterestRate.value")]
            MINUS_InstrumentCurrentInterestRateValue = 154,

            /// <summary>
            /// Enum KeyFiguresBonusYieldAbsolute for value: keyFigures.bonusYield.absolute
            /// </summary>
            [EnumMember(Value = "keyFigures.bonusYield.absolute")]
            KeyFiguresBonusYieldAbsolute = 155,

            /// <summary>
            /// Enum MINUS_KeyFiguresBonusYieldAbsolute for value: -keyFigures.bonusYield.absolute
            /// </summary>
            [EnumMember(Value = "-keyFigures.bonusYield.absolute")]
            MINUS_KeyFiguresBonusYieldAbsolute = 156,

            /// <summary>
            /// Enum KeyFiguresBonusYieldRelative for value: keyFigures.bonusYield.relative
            /// </summary>
            [EnumMember(Value = "keyFigures.bonusYield.relative")]
            KeyFiguresBonusYieldRelative = 157,

            /// <summary>
            /// Enum MINUS_KeyFiguresBonusYieldRelative for value: -keyFigures.bonusYield.relative
            /// </summary>
            [EnumMember(Value = "-keyFigures.bonusYield.relative")]
            MINUS_KeyFiguresBonusYieldRelative = 158,

            /// <summary>
            /// Enum KeyFiguresBonusYieldAnnualized for value: keyFigures.bonusYield.annualized
            /// </summary>
            [EnumMember(Value = "keyFigures.bonusYield.annualized")]
            KeyFiguresBonusYieldAnnualized = 159,

            /// <summary>
            /// Enum MINUS_KeyFiguresBonusYieldAnnualized for value: -keyFigures.bonusYield.annualized
            /// </summary>
            [EnumMember(Value = "-keyFigures.bonusYield.annualized")]
            MINUS_KeyFiguresBonusYieldAnnualized = 160,

            /// <summary>
            /// Enum KeyFiguresSidewaysYieldAbsolute for value: keyFigures.sidewaysYield.absolute
            /// </summary>
            [EnumMember(Value = "keyFigures.sidewaysYield.absolute")]
            KeyFiguresSidewaysYieldAbsolute = 161,

            /// <summary>
            /// Enum MINUS_KeyFiguresSidewaysYieldAbsolute for value: -keyFigures.sidewaysYield.absolute
            /// </summary>
            [EnumMember(Value = "-keyFigures.sidewaysYield.absolute")]
            MINUS_KeyFiguresSidewaysYieldAbsolute = 162,

            /// <summary>
            /// Enum KeyFiguresSidewaysYieldRelative for value: keyFigures.sidewaysYield.relative
            /// </summary>
            [EnumMember(Value = "keyFigures.sidewaysYield.relative")]
            KeyFiguresSidewaysYieldRelative = 163,

            /// <summary>
            /// Enum MINUS_KeyFiguresSidewaysYieldRelative for value: -keyFigures.sidewaysYield.relative
            /// </summary>
            [EnumMember(Value = "-keyFigures.sidewaysYield.relative")]
            MINUS_KeyFiguresSidewaysYieldRelative = 164,

            /// <summary>
            /// Enum KeyFiguresSidewaysYieldAnnualized for value: keyFigures.sidewaysYield.annualized
            /// </summary>
            [EnumMember(Value = "keyFigures.sidewaysYield.annualized")]
            KeyFiguresSidewaysYieldAnnualized = 165,

            /// <summary>
            /// Enum MINUS_KeyFiguresSidewaysYieldAnnualized for value: -keyFigures.sidewaysYield.annualized
            /// </summary>
            [EnumMember(Value = "-keyFigures.sidewaysYield.annualized")]
            MINUS_KeyFiguresSidewaysYieldAnnualized = 166,

            /// <summary>
            /// Enum KeyFiguresMaximumYieldAbsolute for value: keyFigures.maximumYield.absolute
            /// </summary>
            [EnumMember(Value = "keyFigures.maximumYield.absolute")]
            KeyFiguresMaximumYieldAbsolute = 167,

            /// <summary>
            /// Enum MINUS_KeyFiguresMaximumYieldAbsolute for value: -keyFigures.maximumYield.absolute
            /// </summary>
            [EnumMember(Value = "-keyFigures.maximumYield.absolute")]
            MINUS_KeyFiguresMaximumYieldAbsolute = 168,

            /// <summary>
            /// Enum KeyFiguresMaximumYieldRelative for value: keyFigures.maximumYield.relative
            /// </summary>
            [EnumMember(Value = "keyFigures.maximumYield.relative")]
            KeyFiguresMaximumYieldRelative = 169,

            /// <summary>
            /// Enum MINUS_KeyFiguresMaximumYieldRelative for value: -keyFigures.maximumYield.relative
            /// </summary>
            [EnumMember(Value = "-keyFigures.maximumYield.relative")]
            MINUS_KeyFiguresMaximumYieldRelative = 170,

            /// <summary>
            /// Enum KeyFiguresMaximumYieldAnnualized for value: keyFigures.maximumYield.annualized
            /// </summary>
            [EnumMember(Value = "keyFigures.maximumYield.annualized")]
            KeyFiguresMaximumYieldAnnualized = 171,

            /// <summary>
            /// Enum MINUS_KeyFiguresMaximumYieldAnnualized for value: -keyFigures.maximumYield.annualized
            /// </summary>
            [EnumMember(Value = "-keyFigures.maximumYield.annualized")]
            MINUS_KeyFiguresMaximumYieldAnnualized = 172,

            /// <summary>
            /// Enum KeyFiguresAgioAbsolute for value: keyFigures.agio.absolute
            /// </summary>
            [EnumMember(Value = "keyFigures.agio.absolute")]
            KeyFiguresAgioAbsolute = 173,

            /// <summary>
            /// Enum MINUS_KeyFiguresAgioAbsolute for value: -keyFigures.agio.absolute
            /// </summary>
            [EnumMember(Value = "-keyFigures.agio.absolute")]
            MINUS_KeyFiguresAgioAbsolute = 174,

            /// <summary>
            /// Enum KeyFiguresAgioRelative for value: keyFigures.agio.relative
            /// </summary>
            [EnumMember(Value = "keyFigures.agio.relative")]
            KeyFiguresAgioRelative = 175,

            /// <summary>
            /// Enum MINUS_KeyFiguresAgioRelative for value: -keyFigures.agio.relative
            /// </summary>
            [EnumMember(Value = "-keyFigures.agio.relative")]
            MINUS_KeyFiguresAgioRelative = 176,

            /// <summary>
            /// Enum KeyFiguresAgioAnnualized for value: keyFigures.agio.annualized
            /// </summary>
            [EnumMember(Value = "keyFigures.agio.annualized")]
            KeyFiguresAgioAnnualized = 177,

            /// <summary>
            /// Enum MINUS_KeyFiguresAgioAnnualized for value: -keyFigures.agio.annualized
            /// </summary>
            [EnumMember(Value = "-keyFigures.agio.annualized")]
            MINUS_KeyFiguresAgioAnnualized = 178,

            /// <summary>
            /// Enum KeyFiguresDiscountAbsolute for value: keyFigures.discount.absolute
            /// </summary>
            [EnumMember(Value = "keyFigures.discount.absolute")]
            KeyFiguresDiscountAbsolute = 179,

            /// <summary>
            /// Enum MINUS_KeyFiguresDiscountAbsolute for value: -keyFigures.discount.absolute
            /// </summary>
            [EnumMember(Value = "-keyFigures.discount.absolute")]
            MINUS_KeyFiguresDiscountAbsolute = 180,

            /// <summary>
            /// Enum KeyFiguresDiscountRelative for value: keyFigures.discount.relative
            /// </summary>
            [EnumMember(Value = "keyFigures.discount.relative")]
            KeyFiguresDiscountRelative = 181,

            /// <summary>
            /// Enum MINUS_KeyFiguresDiscountRelative for value: -keyFigures.discount.relative
            /// </summary>
            [EnumMember(Value = "-keyFigures.discount.relative")]
            MINUS_KeyFiguresDiscountRelative = 182,

            /// <summary>
            /// Enum KeyFiguresBreakEvenBreakEvenPoint for value: keyFigures.breakEven.breakEvenPoint
            /// </summary>
            [EnumMember(Value = "keyFigures.breakEven.breakEvenPoint")]
            KeyFiguresBreakEvenBreakEvenPoint = 183,

            /// <summary>
            /// Enum MINUS_KeyFiguresBreakEvenBreakEvenPoint for value: -keyFigures.breakEven.breakEvenPoint
            /// </summary>
            [EnumMember(Value = "-keyFigures.breakEven.breakEvenPoint")]
            MINUS_KeyFiguresBreakEvenBreakEvenPoint = 184,

            /// <summary>
            /// Enum KeyFiguresSpreadHarmonized for value: keyFigures.spread.harmonized
            /// </summary>
            [EnumMember(Value = "keyFigures.spread.harmonized")]
            KeyFiguresSpreadHarmonized = 185,

            /// <summary>
            /// Enum MINUS_KeyFiguresSpreadHarmonized for value: -keyFigures.spread.harmonized
            /// </summary>
            [EnumMember(Value = "-keyFigures.spread.harmonized")]
            MINUS_KeyFiguresSpreadHarmonized = 186,

            /// <summary>
            /// Enum KeyFiguresSpreadRelative for value: keyFigures.spread.relative
            /// </summary>
            [EnumMember(Value = "keyFigures.spread.relative")]
            KeyFiguresSpreadRelative = 187,

            /// <summary>
            /// Enum MINUS_KeyFiguresSpreadRelative for value: -keyFigures.spread.relative
            /// </summary>
            [EnumMember(Value = "-keyFigures.spread.relative")]
            MINUS_KeyFiguresSpreadRelative = 188,

            /// <summary>
            /// Enum KeyFiguresDeltaEffective for value: keyFigures.delta.effective
            /// </summary>
            [EnumMember(Value = "keyFigures.delta.effective")]
            KeyFiguresDeltaEffective = 189,

            /// <summary>
            /// Enum MINUS_KeyFiguresDeltaEffective for value: -keyFigures.delta.effective
            /// </summary>
            [EnumMember(Value = "-keyFigures.delta.effective")]
            MINUS_KeyFiguresDeltaEffective = 190,

            /// <summary>
            /// Enum KeyFiguresDeltaUnadjusted for value: keyFigures.delta.unadjusted
            /// </summary>
            [EnumMember(Value = "keyFigures.delta.unadjusted")]
            KeyFiguresDeltaUnadjusted = 191,

            /// <summary>
            /// Enum MINUS_KeyFiguresDeltaUnadjusted for value: -keyFigures.delta.unadjusted
            /// </summary>
            [EnumMember(Value = "-keyFigures.delta.unadjusted")]
            MINUS_KeyFiguresDeltaUnadjusted = 192,

            /// <summary>
            /// Enum KeyFiguresThetaOneWeekEffective for value: keyFigures.thetaOneWeek.effective
            /// </summary>
            [EnumMember(Value = "keyFigures.thetaOneWeek.effective")]
            KeyFiguresThetaOneWeekEffective = 193,

            /// <summary>
            /// Enum MINUS_KeyFiguresThetaOneWeekEffective for value: -keyFigures.thetaOneWeek.effective
            /// </summary>
            [EnumMember(Value = "-keyFigures.thetaOneWeek.effective")]
            MINUS_KeyFiguresThetaOneWeekEffective = 194,

            /// <summary>
            /// Enum KeyFiguresThetaOneWeekUnadjusted for value: keyFigures.thetaOneWeek.unadjusted
            /// </summary>
            [EnumMember(Value = "keyFigures.thetaOneWeek.unadjusted")]
            KeyFiguresThetaOneWeekUnadjusted = 195,

            /// <summary>
            /// Enum MINUS_KeyFiguresThetaOneWeekUnadjusted for value: -keyFigures.thetaOneWeek.unadjusted
            /// </summary>
            [EnumMember(Value = "-keyFigures.thetaOneWeek.unadjusted")]
            MINUS_KeyFiguresThetaOneWeekUnadjusted = 196,

            /// <summary>
            /// Enum KeyFiguresVegaEffective for value: keyFigures.vega.effective
            /// </summary>
            [EnumMember(Value = "keyFigures.vega.effective")]
            KeyFiguresVegaEffective = 197,

            /// <summary>
            /// Enum MINUS_KeyFiguresVegaEffective for value: -keyFigures.vega.effective
            /// </summary>
            [EnumMember(Value = "-keyFigures.vega.effective")]
            MINUS_KeyFiguresVegaEffective = 198,

            /// <summary>
            /// Enum KeyFiguresVegaUnadjusted for value: keyFigures.vega.unadjusted
            /// </summary>
            [EnumMember(Value = "keyFigures.vega.unadjusted")]
            KeyFiguresVegaUnadjusted = 199,

            /// <summary>
            /// Enum MINUS_KeyFiguresVegaUnadjusted for value: -keyFigures.vega.unadjusted
            /// </summary>
            [EnumMember(Value = "-keyFigures.vega.unadjusted")]
            MINUS_KeyFiguresVegaUnadjusted = 200,

            /// <summary>
            /// Enum KeyFiguresLeverage for value: keyFigures.leverage
            /// </summary>
            [EnumMember(Value = "keyFigures.leverage")]
            KeyFiguresLeverage = 201,

            /// <summary>
            /// Enum MINUS_KeyFiguresLeverage for value: -keyFigures.leverage
            /// </summary>
            [EnumMember(Value = "-keyFigures.leverage")]
            MINUS_KeyFiguresLeverage = 202,

            /// <summary>
            /// Enum KeyFiguresOmega for value: keyFigures.omega
            /// </summary>
            [EnumMember(Value = "keyFigures.omega")]
            KeyFiguresOmega = 203,

            /// <summary>
            /// Enum MINUS_KeyFiguresOmega for value: -keyFigures.omega
            /// </summary>
            [EnumMember(Value = "-keyFigures.omega")]
            MINUS_KeyFiguresOmega = 204,

            /// <summary>
            /// Enum KeyFiguresImpliedVolatility for value: keyFigures.impliedVolatility
            /// </summary>
            [EnumMember(Value = "keyFigures.impliedVolatility")]
            KeyFiguresImpliedVolatility = 205,

            /// <summary>
            /// Enum MINUS_KeyFiguresImpliedVolatility for value: -keyFigures.impliedVolatility
            /// </summary>
            [EnumMember(Value = "-keyFigures.impliedVolatility")]
            MINUS_KeyFiguresImpliedVolatility = 206,

            /// <summary>
            /// Enum KeyFiguresIntrinsicValue for value: keyFigures.intrinsicValue
            /// </summary>
            [EnumMember(Value = "keyFigures.intrinsicValue")]
            KeyFiguresIntrinsicValue = 207,

            /// <summary>
            /// Enum MINUS_KeyFiguresIntrinsicValue for value: -keyFigures.intrinsicValue
            /// </summary>
            [EnumMember(Value = "-keyFigures.intrinsicValue")]
            MINUS_KeyFiguresIntrinsicValue = 208,

            /// <summary>
            /// Enum KeyFiguresTimeValue for value: keyFigures.timeValue
            /// </summary>
            [EnumMember(Value = "keyFigures.timeValue")]
            KeyFiguresTimeValue = 209,

            /// <summary>
            /// Enum MINUS_KeyFiguresTimeValue for value: -keyFigures.timeValue
            /// </summary>
            [EnumMember(Value = "-keyFigures.timeValue")]
            MINUS_KeyFiguresTimeValue = 210,

            /// <summary>
            /// Enum KeyFiguresOutperformancePoint for value: keyFigures.outperformancePoint
            /// </summary>
            [EnumMember(Value = "keyFigures.outperformancePoint")]
            KeyFiguresOutperformancePoint = 211,

            /// <summary>
            /// Enum MINUS_KeyFiguresOutperformancePoint for value: -keyFigures.outperformancePoint
            /// </summary>
            [EnumMember(Value = "-keyFigures.outperformancePoint")]
            MINUS_KeyFiguresOutperformancePoint = 212,

            /// <summary>
            /// Enum KeyFiguresParity for value: keyFigures.parity
            /// </summary>
            [EnumMember(Value = "keyFigures.parity")]
            KeyFiguresParity = 213,

            /// <summary>
            /// Enum MINUS_KeyFiguresParity for value: -keyFigures.parity
            /// </summary>
            [EnumMember(Value = "-keyFigures.parity")]
            MINUS_KeyFiguresParity = 214,

            /// <summary>
            /// Enum PerformanceIntraday for value: performance.intraday
            /// </summary>
            [EnumMember(Value = "performance.intraday")]
            PerformanceIntraday = 215,

            /// <summary>
            /// Enum MINUS_PerformanceIntraday for value: -performance.intraday
            /// </summary>
            [EnumMember(Value = "-performance.intraday")]
            MINUS_PerformanceIntraday = 216,

            /// <summary>
            /// Enum PerformanceSinceIssueAsk for value: performance.sinceIssue.ask
            /// </summary>
            [EnumMember(Value = "performance.sinceIssue.ask")]
            PerformanceSinceIssueAsk = 217,

            /// <summary>
            /// Enum MINUS_PerformanceSinceIssueAsk for value: -performance.sinceIssue.ask
            /// </summary>
            [EnumMember(Value = "-performance.sinceIssue.ask")]
            MINUS_PerformanceSinceIssueAsk = 218,

            /// <summary>
            /// Enum PerformanceSinceIssueBid for value: performance.sinceIssue.bid
            /// </summary>
            [EnumMember(Value = "performance.sinceIssue.bid")]
            PerformanceSinceIssueBid = 219,

            /// <summary>
            /// Enum MINUS_PerformanceSinceIssueBid for value: -performance.sinceIssue.bid
            /// </summary>
            [EnumMember(Value = "-performance.sinceIssue.bid")]
            MINUS_PerformanceSinceIssueBid = 220,

            /// <summary>
            /// Enum PerformanceEndOfDayDay1 for value: performance.endOfDay.day1
            /// </summary>
            [EnumMember(Value = "performance.endOfDay.day1")]
            PerformanceEndOfDayDay1 = 221,

            /// <summary>
            /// Enum MINUS_PerformanceEndOfDayDay1 for value: -performance.endOfDay.day1
            /// </summary>
            [EnumMember(Value = "-performance.endOfDay.day1")]
            MINUS_PerformanceEndOfDayDay1 = 222,

            /// <summary>
            /// Enum PerformanceEndOfDayWeek1 for value: performance.endOfDay.week1
            /// </summary>
            [EnumMember(Value = "performance.endOfDay.week1")]
            PerformanceEndOfDayWeek1 = 223,

            /// <summary>
            /// Enum MINUS_PerformanceEndOfDayWeek1 for value: -performance.endOfDay.week1
            /// </summary>
            [EnumMember(Value = "-performance.endOfDay.week1")]
            MINUS_PerformanceEndOfDayWeek1 = 224,

            /// <summary>
            /// Enum PerformanceEndOfDayMonth1 for value: performance.endOfDay.month1
            /// </summary>
            [EnumMember(Value = "performance.endOfDay.month1")]
            PerformanceEndOfDayMonth1 = 225,

            /// <summary>
            /// Enum MINUS_PerformanceEndOfDayMonth1 for value: -performance.endOfDay.month1
            /// </summary>
            [EnumMember(Value = "-performance.endOfDay.month1")]
            MINUS_PerformanceEndOfDayMonth1 = 226,

            /// <summary>
            /// Enum PerformanceEndOfDayMonths3 for value: performance.endOfDay.months3
            /// </summary>
            [EnumMember(Value = "performance.endOfDay.months3")]
            PerformanceEndOfDayMonths3 = 227,

            /// <summary>
            /// Enum MINUS_PerformanceEndOfDayMonths3 for value: -performance.endOfDay.months3
            /// </summary>
            [EnumMember(Value = "-performance.endOfDay.months3")]
            MINUS_PerformanceEndOfDayMonths3 = 228,

            /// <summary>
            /// Enum PerformanceEndOfDayMonths6 for value: performance.endOfDay.months6
            /// </summary>
            [EnumMember(Value = "performance.endOfDay.months6")]
            PerformanceEndOfDayMonths6 = 229,

            /// <summary>
            /// Enum MINUS_PerformanceEndOfDayMonths6 for value: -performance.endOfDay.months6
            /// </summary>
            [EnumMember(Value = "-performance.endOfDay.months6")]
            MINUS_PerformanceEndOfDayMonths6 = 230,

            /// <summary>
            /// Enum PerformanceEndOfDayYear1 for value: performance.endOfDay.year1
            /// </summary>
            [EnumMember(Value = "performance.endOfDay.year1")]
            PerformanceEndOfDayYear1 = 231,

            /// <summary>
            /// Enum MINUS_PerformanceEndOfDayYear1 for value: -performance.endOfDay.year1
            /// </summary>
            [EnumMember(Value = "-performance.endOfDay.year1")]
            MINUS_PerformanceEndOfDayYear1 = 232,

            /// <summary>
            /// Enum PerformanceEndOfDayYears3 for value: performance.endOfDay.years3
            /// </summary>
            [EnumMember(Value = "performance.endOfDay.years3")]
            PerformanceEndOfDayYears3 = 233,

            /// <summary>
            /// Enum MINUS_PerformanceEndOfDayYears3 for value: -performance.endOfDay.years3
            /// </summary>
            [EnumMember(Value = "-performance.endOfDay.years3")]
            MINUS_PerformanceEndOfDayYears3 = 234,

            /// <summary>
            /// Enum PerformanceEndOfDayYears5 for value: performance.endOfDay.years5
            /// </summary>
            [EnumMember(Value = "performance.endOfDay.years5")]
            PerformanceEndOfDayYears5 = 235,

            /// <summary>
            /// Enum MINUS_PerformanceEndOfDayYears5 for value: -performance.endOfDay.years5
            /// </summary>
            [EnumMember(Value = "-performance.endOfDay.years5")]
            MINUS_PerformanceEndOfDayYears5 = 236,

            /// <summary>
            /// Enum PerformanceEndOfDayYearToDate for value: performance.endOfDay.yearToDate
            /// </summary>
            [EnumMember(Value = "performance.endOfDay.yearToDate")]
            PerformanceEndOfDayYearToDate = 237,

            /// <summary>
            /// Enum MINUS_PerformanceEndOfDayYearToDate for value: -performance.endOfDay.yearToDate
            /// </summary>
            [EnumMember(Value = "-performance.endOfDay.yearToDate")]
            MINUS_PerformanceEndOfDayYearToDate = 238,

            /// <summary>
            /// Enum VolatilityWeek1 for value: volatility.week1
            /// </summary>
            [EnumMember(Value = "volatility.week1")]
            VolatilityWeek1 = 239,

            /// <summary>
            /// Enum MINUS_VolatilityWeek1 for value: -volatility.week1
            /// </summary>
            [EnumMember(Value = "-volatility.week1")]
            MINUS_VolatilityWeek1 = 240,

            /// <summary>
            /// Enum VolatilityMonth1 for value: volatility.month1
            /// </summary>
            [EnumMember(Value = "volatility.month1")]
            VolatilityMonth1 = 241,

            /// <summary>
            /// Enum MINUS_VolatilityMonth1 for value: -volatility.month1
            /// </summary>
            [EnumMember(Value = "-volatility.month1")]
            MINUS_VolatilityMonth1 = 242,

            /// <summary>
            /// Enum VolatilityMonths3 for value: volatility.months3
            /// </summary>
            [EnumMember(Value = "volatility.months3")]
            VolatilityMonths3 = 243,

            /// <summary>
            /// Enum MINUS_VolatilityMonths3 for value: -volatility.months3
            /// </summary>
            [EnumMember(Value = "-volatility.months3")]
            MINUS_VolatilityMonths3 = 244,

            /// <summary>
            /// Enum VolatilityMonths6 for value: volatility.months6
            /// </summary>
            [EnumMember(Value = "volatility.months6")]
            VolatilityMonths6 = 245,

            /// <summary>
            /// Enum MINUS_VolatilityMonths6 for value: -volatility.months6
            /// </summary>
            [EnumMember(Value = "-volatility.months6")]
            MINUS_VolatilityMonths6 = 246,

            /// <summary>
            /// Enum VolatilityYear1 for value: volatility.year1
            /// </summary>
            [EnumMember(Value = "volatility.year1")]
            VolatilityYear1 = 247,

            /// <summary>
            /// Enum MINUS_VolatilityYear1 for value: -volatility.year1
            /// </summary>
            [EnumMember(Value = "-volatility.year1")]
            MINUS_VolatilityYear1 = 248,

            /// <summary>
            /// Enum VolatilityYears3 for value: volatility.years3
            /// </summary>
            [EnumMember(Value = "volatility.years3")]
            VolatilityYears3 = 249,

            /// <summary>
            /// Enum MINUS_VolatilityYears3 for value: -volatility.years3
            /// </summary>
            [EnumMember(Value = "-volatility.years3")]
            MINUS_VolatilityYears3 = 250,

            /// <summary>
            /// Enum VolatilityYears5 for value: volatility.years5
            /// </summary>
            [EnumMember(Value = "volatility.years5")]
            VolatilityYears5 = 251,

            /// <summary>
            /// Enum MINUS_VolatilityYears5 for value: -volatility.years5
            /// </summary>
            [EnumMember(Value = "-volatility.years5")]
            MINUS_VolatilityYears5 = 252,

            /// <summary>
            /// Enum VolatilityYearToDate for value: volatility.yearToDate
            /// </summary>
            [EnumMember(Value = "volatility.yearToDate")]
            VolatilityYearToDate = 253,

            /// <summary>
            /// Enum MINUS_VolatilityYearToDate for value: -volatility.yearToDate
            /// </summary>
            [EnumMember(Value = "-volatility.yearToDate")]
            MINUS_VolatilityYearToDate = 254

        }



        /// <summary>
        /// Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 10 (possibly prefixed) attribute name(s) is allowed. | Value | | - -- | | symbol | | -symbol | | market.name | | -market.name | | instrument.name | | -instrument.name | | instrument.shortName | | -instrument.shortName | | instrument.categorization.ddv.level1.name | | -instrument.categorization.ddv.level1.name | | instrument.categorization.ddv.level2.name | | -instrument.categorization.ddv.level2.name | | instrument.categorization.ddv.level3.name | | -instrument.categorization.ddv.level3.name | | instrument.categorization.eusipa.level1.name | | -instrument.categorization.eusipa.level1.name | | instrument.categorization.eusipa.level2.name | | -instrument.categorization.eusipa.level2.name | | instrument.categorization.eusipa.level3.name | | -instrument.categorization.eusipa.level3.name | | instrument.lifeCycle.maturity.date | | -instrument.lifeCycle.maturity.date | | instrument.lifeCycle.maturity.remainingTermDays | | -instrument.lifeCycle.maturity.remainingTermDays | | instrument.lifeCycle.maturity.perpetual | | -instrument.lifeCycle.maturity.perpetual | | instrument.lifeCycle.callable | | -instrument.lifeCycle.callable | | instrument.lifeCycle.valuation | | -instrument.lifeCycle.valuation | | instrument.lifeCycle.repayment | | -instrument.lifeCycle.repayment | | instrument.issuer.name | | -instrument.issuer.name | | instrument.issuer.group.name | | -instrument.issuer.group.name | | instrument.exercise.right | | -instrument.exercise.right | | instrument.exercise.style | | -instrument.exercise.style | | instrument.settlement | | -instrument.settlement | | instrument.quanto | | -instrument.quanto | | instrument.capitalProtection | | -instrument.capitalProtection | | instrument.underlying.name | | -instrument.underlying.name | | instrument.underlying.valueUnit.code | | -instrument.underlying.valueUnit.code | | instrument.underlying.notation.instrument.typeComposite | | -instrument.underlying.notation.instrument.typeComposite | | instrument.strike.value | | -instrument.strike.value | | instrument.strike.distance.absolute | | -instrument.strike.distance.absolute | | instrument.strike.distance.relative | | -instrument.strike.distance.relative | | instrument.bonusLevel.value | | -instrument.bonusLevel.value | | instrument.bonusLevel.distance.absolute | | -instrument.bonusLevel.distance.absolute | | instrument.bonusLevel.distance.relative | | -instrument.bonusLevel.distance.relative | | instrument.cap.value | | -instrument.cap.value | | instrument.cap.distance.absolute | | -instrument.cap.distance.absolute | | instrument.cap.distance.relative | | -instrument.cap.distance.relative | | instrument.cap.cashFlow | | -instrument.cap.cashFlow | | instrument.knockOut.observation.type | | -instrument.knockOut.observation.type | | instrument.knockOut.value | | -instrument.knockOut.value | | instrument.knockOut.distance.absolute | | -instrument.knockOut.distance.absolute | | instrument.knockOut.distance.relative | | -instrument.knockOut.distance.relative | | instrument.knockOut.breach.breached | | -instrument.knockOut.breach.breached | | instrument.knockOut.breach.datetime | | -instrument.knockOut.breach.datetime | | instrument.knockIn.observation.type | | -instrument.knockIn.observation.type | | instrument.knockIn.value | | -instrument.knockIn.value | | instrument.knockIn.distance.absolute | | -instrument.knockIn.distance.absolute | | instrument.knockIn.distance.relative | | -instrument.knockIn.distance.relative | | instrument.knockIn.breach.breached | | -instrument.knockIn.breach.breached | | instrument.knockIn.breach.datetime | | -instrument.knockIn.breach.datetime | | instrument.lockOut.observation.type | | -instrument.lockOut.observation.type | | instrument.lockOut.value | | -instrument.lockOut.value | | instrument.lockOut.distance.absolute | | -instrument.lockOut.distance.absolute | | instrument.lockOut.distance.relative | | -instrument.lockOut.distance.relative | | instrument.lockOut.cashFlow | | -instrument.lockOut.cashFlow | | instrument.lockIn.observation.type | | -instrument.lockIn.observation.type | | instrument.lockIn.value | | -instrument.lockIn.value | | instrument.lockIn.distance.absolute | | -instrument.lockIn.distance.absolute | | instrument.lockIn.distance.relative | | -instrument.lockIn.distance.relative | | instrument.lockIn.cashFlow | | -instrument.lockIn.cashFlow | | instrument.capitalGuarantee.value | | -instrument.capitalGuarantee.value | | instrument.capitalGuarantee.distance.absolute | | -instrument.capitalGuarantee.distance.absolute | | instrument.capitalGuarantee.distance.relative | | -instrument.capitalGuarantee.distance.relative | | instrument.capitalGuarantee.cashFlow | | -instrument.capitalGuarantee.cashFlow | | instrument.couponTriggerLevel.value | | -instrument.couponTriggerLevel.value | | instrument.couponTriggerLevel.distance.absolute | | -instrument.couponTriggerLevel.distance.absolute | | instrument.couponTriggerLevel.distance.relative | | -instrument.couponTriggerLevel.distance.relative | | instrument.couponTriggerLevel.cashFlow | | -instrument.couponTriggerLevel.cashFlow | | instrument.rangeKnockOut.observation.type | | -instrument.rangeKnockOut.observation.type | | instrument.rangeKnockOut.upper.value | | -instrument.rangeKnockOut.upper.value | | instrument.rangeKnockOut.lower.value | | -instrument.rangeKnockOut.lower.value | | instrument.rangeKnockOut.breach.breached | | -instrument.rangeKnockOut.breach.breached | | instrument.rangeKnockOut.breach.datetime | | -instrument.rangeKnockOut.breach.datetime | | instrument.rangeKnockOut.cashFlow | | -instrument.rangeKnockOut.cashFlow | | instrument.participation | | -instrument.participation | | instrument.constantLeverage | | -instrument.constantLeverage | | instrument.nominalCurrency.isoCode | | -instrument.nominalCurrency.isoCode | | instrument.currentInterestRate.type | | -instrument.currentInterestRate.type | | instrument.currentInterestRate.value | | -instrument.currentInterestRate.value | | keyFigures.bonusYield.absolute | | -keyFigures.bonusYield.absolute | | keyFigures.bonusYield.relative | | -keyFigures.bonusYield.relative | | keyFigures.bonusYield.annualized | | -keyFigures.bonusYield.annualized | | keyFigures.sidewaysYield.absolute | | -keyFigures.sidewaysYield.absolute | | keyFigures.sidewaysYield.relative | | -keyFigures.sidewaysYield.relative | | keyFigures.sidewaysYield.annualized | | -keyFigures.sidewaysYield.annualized | | keyFigures.maximumYield.absolute | | -keyFigures.maximumYield.absolute | | keyFigures.maximumYield.relative | | -keyFigures.maximumYield.relative | | keyFigures.maximumYield.annualized | | -keyFigures.maximumYield.annualized | | keyFigures.agio.absolute | | -keyFigures.agio.absolute | | keyFigures.agio.relative | | -keyFigures.agio.relative | | keyFigures.agio.annualized | | -keyFigures.agio.annualized | | keyFigures.discount.absolute | | -keyFigures.discount.absolute | | keyFigures.discount.relative | | -keyFigures.discount.relative | | keyFigures.breakEven.breakEvenPoint | | -keyFigures.breakEven.breakEvenPoint | | keyFigures.spread.harmonized | | -keyFigures.spread.harmonized | | keyFigures.spread.relative | | -keyFigures.spread.relative | | keyFigures.delta.effective | | -keyFigures.delta.effective | | keyFigures.delta.unadjusted | | -keyFigures.delta.unadjusted | | keyFigures.thetaOneWeek.effective | | -keyFigures.thetaOneWeek.effective | | keyFigures.thetaOneWeek.unadjusted | | -keyFigures.thetaOneWeek.unadjusted | | keyFigures.vega.effective | | -keyFigures.vega.effective | | keyFigures.vega.unadjusted | | -keyFigures.vega.unadjusted | | keyFigures.leverage | | -keyFigures.leverage | | keyFigures.omega | | -keyFigures.omega | | keyFigures.impliedVolatility | | -keyFigures.impliedVolatility | | keyFigures.intrinsicValue | | -keyFigures.intrinsicValue | | keyFigures.timeValue | | -keyFigures.timeValue | | keyFigures.outperformancePoint | | -keyFigures.outperformancePoint | | keyFigures.parity | | -keyFigures.parity | | performance.intraday | | -performance.intraday | | performance.sinceIssue.ask | | -performance.sinceIssue.ask | | performance.sinceIssue.bid | | -performance.sinceIssue.bid | | performance.endOfDay.day1 | | -performance.endOfDay.day1 | | performance.endOfDay.week1 | | -performance.endOfDay.week1 | | performance.endOfDay.month1 | | -performance.endOfDay.month1 | | performance.endOfDay.months3 | | -performance.endOfDay.months3 | | performance.endOfDay.months6 | | -performance.endOfDay.months6 | | performance.endOfDay.year1 | | -performance.endOfDay.year1 | | performance.endOfDay.years3 | | -performance.endOfDay.years3 | | performance.endOfDay.years5 | | -performance.endOfDay.years5 | | performance.endOfDay.yearToDate | | -performance.endOfDay.yearToDate | | volatility.week1 | | -volatility.week1 | | volatility.month1 | | -volatility.month1 | | volatility.months3 | | -volatility.months3 | | volatility.months6 | | -volatility.months6 | | volatility.year1 | | -volatility.year1 | | volatility.years3 | | -volatility.years3 | | volatility.years5 | | -volatility.years5 | | volatility.yearToDate | | -volatility.yearToDate |  
        /// </summary>
        /// <value>Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 10 (possibly prefixed) attribute name(s) is allowed. | Value | | - -- | | symbol | | -symbol | | market.name | | -market.name | | instrument.name | | -instrument.name | | instrument.shortName | | -instrument.shortName | | instrument.categorization.ddv.level1.name | | -instrument.categorization.ddv.level1.name | | instrument.categorization.ddv.level2.name | | -instrument.categorization.ddv.level2.name | | instrument.categorization.ddv.level3.name | | -instrument.categorization.ddv.level3.name | | instrument.categorization.eusipa.level1.name | | -instrument.categorization.eusipa.level1.name | | instrument.categorization.eusipa.level2.name | | -instrument.categorization.eusipa.level2.name | | instrument.categorization.eusipa.level3.name | | -instrument.categorization.eusipa.level3.name | | instrument.lifeCycle.maturity.date | | -instrument.lifeCycle.maturity.date | | instrument.lifeCycle.maturity.remainingTermDays | | -instrument.lifeCycle.maturity.remainingTermDays | | instrument.lifeCycle.maturity.perpetual | | -instrument.lifeCycle.maturity.perpetual | | instrument.lifeCycle.callable | | -instrument.lifeCycle.callable | | instrument.lifeCycle.valuation | | -instrument.lifeCycle.valuation | | instrument.lifeCycle.repayment | | -instrument.lifeCycle.repayment | | instrument.issuer.name | | -instrument.issuer.name | | instrument.issuer.group.name | | -instrument.issuer.group.name | | instrument.exercise.right | | -instrument.exercise.right | | instrument.exercise.style | | -instrument.exercise.style | | instrument.settlement | | -instrument.settlement | | instrument.quanto | | -instrument.quanto | | instrument.capitalProtection | | -instrument.capitalProtection | | instrument.underlying.name | | -instrument.underlying.name | | instrument.underlying.valueUnit.code | | -instrument.underlying.valueUnit.code | | instrument.underlying.notation.instrument.typeComposite | | -instrument.underlying.notation.instrument.typeComposite | | instrument.strike.value | | -instrument.strike.value | | instrument.strike.distance.absolute | | -instrument.strike.distance.absolute | | instrument.strike.distance.relative | | -instrument.strike.distance.relative | | instrument.bonusLevel.value | | -instrument.bonusLevel.value | | instrument.bonusLevel.distance.absolute | | -instrument.bonusLevel.distance.absolute | | instrument.bonusLevel.distance.relative | | -instrument.bonusLevel.distance.relative | | instrument.cap.value | | -instrument.cap.value | | instrument.cap.distance.absolute | | -instrument.cap.distance.absolute | | instrument.cap.distance.relative | | -instrument.cap.distance.relative | | instrument.cap.cashFlow | | -instrument.cap.cashFlow | | instrument.knockOut.observation.type | | -instrument.knockOut.observation.type | | instrument.knockOut.value | | -instrument.knockOut.value | | instrument.knockOut.distance.absolute | | -instrument.knockOut.distance.absolute | | instrument.knockOut.distance.relative | | -instrument.knockOut.distance.relative | | instrument.knockOut.breach.breached | | -instrument.knockOut.breach.breached | | instrument.knockOut.breach.datetime | | -instrument.knockOut.breach.datetime | | instrument.knockIn.observation.type | | -instrument.knockIn.observation.type | | instrument.knockIn.value | | -instrument.knockIn.value | | instrument.knockIn.distance.absolute | | -instrument.knockIn.distance.absolute | | instrument.knockIn.distance.relative | | -instrument.knockIn.distance.relative | | instrument.knockIn.breach.breached | | -instrument.knockIn.breach.breached | | instrument.knockIn.breach.datetime | | -instrument.knockIn.breach.datetime | | instrument.lockOut.observation.type | | -instrument.lockOut.observation.type | | instrument.lockOut.value | | -instrument.lockOut.value | | instrument.lockOut.distance.absolute | | -instrument.lockOut.distance.absolute | | instrument.lockOut.distance.relative | | -instrument.lockOut.distance.relative | | instrument.lockOut.cashFlow | | -instrument.lockOut.cashFlow | | instrument.lockIn.observation.type | | -instrument.lockIn.observation.type | | instrument.lockIn.value | | -instrument.lockIn.value | | instrument.lockIn.distance.absolute | | -instrument.lockIn.distance.absolute | | instrument.lockIn.distance.relative | | -instrument.lockIn.distance.relative | | instrument.lockIn.cashFlow | | -instrument.lockIn.cashFlow | | instrument.capitalGuarantee.value | | -instrument.capitalGuarantee.value | | instrument.capitalGuarantee.distance.absolute | | -instrument.capitalGuarantee.distance.absolute | | instrument.capitalGuarantee.distance.relative | | -instrument.capitalGuarantee.distance.relative | | instrument.capitalGuarantee.cashFlow | | -instrument.capitalGuarantee.cashFlow | | instrument.couponTriggerLevel.value | | -instrument.couponTriggerLevel.value | | instrument.couponTriggerLevel.distance.absolute | | -instrument.couponTriggerLevel.distance.absolute | | instrument.couponTriggerLevel.distance.relative | | -instrument.couponTriggerLevel.distance.relative | | instrument.couponTriggerLevel.cashFlow | | -instrument.couponTriggerLevel.cashFlow | | instrument.rangeKnockOut.observation.type | | -instrument.rangeKnockOut.observation.type | | instrument.rangeKnockOut.upper.value | | -instrument.rangeKnockOut.upper.value | | instrument.rangeKnockOut.lower.value | | -instrument.rangeKnockOut.lower.value | | instrument.rangeKnockOut.breach.breached | | -instrument.rangeKnockOut.breach.breached | | instrument.rangeKnockOut.breach.datetime | | -instrument.rangeKnockOut.breach.datetime | | instrument.rangeKnockOut.cashFlow | | -instrument.rangeKnockOut.cashFlow | | instrument.participation | | -instrument.participation | | instrument.constantLeverage | | -instrument.constantLeverage | | instrument.nominalCurrency.isoCode | | -instrument.nominalCurrency.isoCode | | instrument.currentInterestRate.type | | -instrument.currentInterestRate.type | | instrument.currentInterestRate.value | | -instrument.currentInterestRate.value | | keyFigures.bonusYield.absolute | | -keyFigures.bonusYield.absolute | | keyFigures.bonusYield.relative | | -keyFigures.bonusYield.relative | | keyFigures.bonusYield.annualized | | -keyFigures.bonusYield.annualized | | keyFigures.sidewaysYield.absolute | | -keyFigures.sidewaysYield.absolute | | keyFigures.sidewaysYield.relative | | -keyFigures.sidewaysYield.relative | | keyFigures.sidewaysYield.annualized | | -keyFigures.sidewaysYield.annualized | | keyFigures.maximumYield.absolute | | -keyFigures.maximumYield.absolute | | keyFigures.maximumYield.relative | | -keyFigures.maximumYield.relative | | keyFigures.maximumYield.annualized | | -keyFigures.maximumYield.annualized | | keyFigures.agio.absolute | | -keyFigures.agio.absolute | | keyFigures.agio.relative | | -keyFigures.agio.relative | | keyFigures.agio.annualized | | -keyFigures.agio.annualized | | keyFigures.discount.absolute | | -keyFigures.discount.absolute | | keyFigures.discount.relative | | -keyFigures.discount.relative | | keyFigures.breakEven.breakEvenPoint | | -keyFigures.breakEven.breakEvenPoint | | keyFigures.spread.harmonized | | -keyFigures.spread.harmonized | | keyFigures.spread.relative | | -keyFigures.spread.relative | | keyFigures.delta.effective | | -keyFigures.delta.effective | | keyFigures.delta.unadjusted | | -keyFigures.delta.unadjusted | | keyFigures.thetaOneWeek.effective | | -keyFigures.thetaOneWeek.effective | | keyFigures.thetaOneWeek.unadjusted | | -keyFigures.thetaOneWeek.unadjusted | | keyFigures.vega.effective | | -keyFigures.vega.effective | | keyFigures.vega.unadjusted | | -keyFigures.vega.unadjusted | | keyFigures.leverage | | -keyFigures.leverage | | keyFigures.omega | | -keyFigures.omega | | keyFigures.impliedVolatility | | -keyFigures.impliedVolatility | | keyFigures.intrinsicValue | | -keyFigures.intrinsicValue | | keyFigures.timeValue | | -keyFigures.timeValue | | keyFigures.outperformancePoint | | -keyFigures.outperformancePoint | | keyFigures.parity | | -keyFigures.parity | | performance.intraday | | -performance.intraday | | performance.sinceIssue.ask | | -performance.sinceIssue.ask | | performance.sinceIssue.bid | | -performance.sinceIssue.bid | | performance.endOfDay.day1 | | -performance.endOfDay.day1 | | performance.endOfDay.week1 | | -performance.endOfDay.week1 | | performance.endOfDay.month1 | | -performance.endOfDay.month1 | | performance.endOfDay.months3 | | -performance.endOfDay.months3 | | performance.endOfDay.months6 | | -performance.endOfDay.months6 | | performance.endOfDay.year1 | | -performance.endOfDay.year1 | | performance.endOfDay.years3 | | -performance.endOfDay.years3 | | performance.endOfDay.years5 | | -performance.endOfDay.years5 | | performance.endOfDay.yearToDate | | -performance.endOfDay.yearToDate | | volatility.week1 | | -volatility.week1 | | volatility.month1 | | -volatility.month1 | | volatility.months3 | | -volatility.months3 | | volatility.months6 | | -volatility.months6 | | volatility.year1 | | -volatility.year1 | | volatility.years3 | | -volatility.years3 | | volatility.years5 | | -volatility.years5 | | volatility.yearToDate | | -volatility.yearToDate |  </value>
        [DataMember(Name = "sort", EmitDefaultValue = false)]
        public HashSet<SortEnum> Sort { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="PostSecuritizedDerivativeNotationScreenerSearchRequestMeta" /> class.
        /// </summary>
        /// <param name="attributes">Limit the attributes returned in the response to the specified set..</param>
        /// <param name="language">ISO 639-1 code of the language..</param>
        /// <param name="sort">Sortable attributes. The sort order is ascending unless it is prefixed with a minus sign, in which case it is descending. A list of at most 10 (possibly prefixed) attribute name(s) is allowed. | Value | | - -- | | symbol | | -symbol | | market.name | | -market.name | | instrument.name | | -instrument.name | | instrument.shortName | | -instrument.shortName | | instrument.categorization.ddv.level1.name | | -instrument.categorization.ddv.level1.name | | instrument.categorization.ddv.level2.name | | -instrument.categorization.ddv.level2.name | | instrument.categorization.ddv.level3.name | | -instrument.categorization.ddv.level3.name | | instrument.categorization.eusipa.level1.name | | -instrument.categorization.eusipa.level1.name | | instrument.categorization.eusipa.level2.name | | -instrument.categorization.eusipa.level2.name | | instrument.categorization.eusipa.level3.name | | -instrument.categorization.eusipa.level3.name | | instrument.lifeCycle.maturity.date | | -instrument.lifeCycle.maturity.date | | instrument.lifeCycle.maturity.remainingTermDays | | -instrument.lifeCycle.maturity.remainingTermDays | | instrument.lifeCycle.maturity.perpetual | | -instrument.lifeCycle.maturity.perpetual | | instrument.lifeCycle.callable | | -instrument.lifeCycle.callable | | instrument.lifeCycle.valuation | | -instrument.lifeCycle.valuation | | instrument.lifeCycle.repayment | | -instrument.lifeCycle.repayment | | instrument.issuer.name | | -instrument.issuer.name | | instrument.issuer.group.name | | -instrument.issuer.group.name | | instrument.exercise.right | | -instrument.exercise.right | | instrument.exercise.style | | -instrument.exercise.style | | instrument.settlement | | -instrument.settlement | | instrument.quanto | | -instrument.quanto | | instrument.capitalProtection | | -instrument.capitalProtection | | instrument.underlying.name | | -instrument.underlying.name | | instrument.underlying.valueUnit.code | | -instrument.underlying.valueUnit.code | | instrument.underlying.notation.instrument.typeComposite | | -instrument.underlying.notation.instrument.typeComposite | | instrument.strike.value | | -instrument.strike.value | | instrument.strike.distance.absolute | | -instrument.strike.distance.absolute | | instrument.strike.distance.relative | | -instrument.strike.distance.relative | | instrument.bonusLevel.value | | -instrument.bonusLevel.value | | instrument.bonusLevel.distance.absolute | | -instrument.bonusLevel.distance.absolute | | instrument.bonusLevel.distance.relative | | -instrument.bonusLevel.distance.relative | | instrument.cap.value | | -instrument.cap.value | | instrument.cap.distance.absolute | | -instrument.cap.distance.absolute | | instrument.cap.distance.relative | | -instrument.cap.distance.relative | | instrument.cap.cashFlow | | -instrument.cap.cashFlow | | instrument.knockOut.observation.type | | -instrument.knockOut.observation.type | | instrument.knockOut.value | | -instrument.knockOut.value | | instrument.knockOut.distance.absolute | | -instrument.knockOut.distance.absolute | | instrument.knockOut.distance.relative | | -instrument.knockOut.distance.relative | | instrument.knockOut.breach.breached | | -instrument.knockOut.breach.breached | | instrument.knockOut.breach.datetime | | -instrument.knockOut.breach.datetime | | instrument.knockIn.observation.type | | -instrument.knockIn.observation.type | | instrument.knockIn.value | | -instrument.knockIn.value | | instrument.knockIn.distance.absolute | | -instrument.knockIn.distance.absolute | | instrument.knockIn.distance.relative | | -instrument.knockIn.distance.relative | | instrument.knockIn.breach.breached | | -instrument.knockIn.breach.breached | | instrument.knockIn.breach.datetime | | -instrument.knockIn.breach.datetime | | instrument.lockOut.observation.type | | -instrument.lockOut.observation.type | | instrument.lockOut.value | | -instrument.lockOut.value | | instrument.lockOut.distance.absolute | | -instrument.lockOut.distance.absolute | | instrument.lockOut.distance.relative | | -instrument.lockOut.distance.relative | | instrument.lockOut.cashFlow | | -instrument.lockOut.cashFlow | | instrument.lockIn.observation.type | | -instrument.lockIn.observation.type | | instrument.lockIn.value | | -instrument.lockIn.value | | instrument.lockIn.distance.absolute | | -instrument.lockIn.distance.absolute | | instrument.lockIn.distance.relative | | -instrument.lockIn.distance.relative | | instrument.lockIn.cashFlow | | -instrument.lockIn.cashFlow | | instrument.capitalGuarantee.value | | -instrument.capitalGuarantee.value | | instrument.capitalGuarantee.distance.absolute | | -instrument.capitalGuarantee.distance.absolute | | instrument.capitalGuarantee.distance.relative | | -instrument.capitalGuarantee.distance.relative | | instrument.capitalGuarantee.cashFlow | | -instrument.capitalGuarantee.cashFlow | | instrument.couponTriggerLevel.value | | -instrument.couponTriggerLevel.value | | instrument.couponTriggerLevel.distance.absolute | | -instrument.couponTriggerLevel.distance.absolute | | instrument.couponTriggerLevel.distance.relative | | -instrument.couponTriggerLevel.distance.relative | | instrument.couponTriggerLevel.cashFlow | | -instrument.couponTriggerLevel.cashFlow | | instrument.rangeKnockOut.observation.type | | -instrument.rangeKnockOut.observation.type | | instrument.rangeKnockOut.upper.value | | -instrument.rangeKnockOut.upper.value | | instrument.rangeKnockOut.lower.value | | -instrument.rangeKnockOut.lower.value | | instrument.rangeKnockOut.breach.breached | | -instrument.rangeKnockOut.breach.breached | | instrument.rangeKnockOut.breach.datetime | | -instrument.rangeKnockOut.breach.datetime | | instrument.rangeKnockOut.cashFlow | | -instrument.rangeKnockOut.cashFlow | | instrument.participation | | -instrument.participation | | instrument.constantLeverage | | -instrument.constantLeverage | | instrument.nominalCurrency.isoCode | | -instrument.nominalCurrency.isoCode | | instrument.currentInterestRate.type | | -instrument.currentInterestRate.type | | instrument.currentInterestRate.value | | -instrument.currentInterestRate.value | | keyFigures.bonusYield.absolute | | -keyFigures.bonusYield.absolute | | keyFigures.bonusYield.relative | | -keyFigures.bonusYield.relative | | keyFigures.bonusYield.annualized | | -keyFigures.bonusYield.annualized | | keyFigures.sidewaysYield.absolute | | -keyFigures.sidewaysYield.absolute | | keyFigures.sidewaysYield.relative | | -keyFigures.sidewaysYield.relative | | keyFigures.sidewaysYield.annualized | | -keyFigures.sidewaysYield.annualized | | keyFigures.maximumYield.absolute | | -keyFigures.maximumYield.absolute | | keyFigures.maximumYield.relative | | -keyFigures.maximumYield.relative | | keyFigures.maximumYield.annualized | | -keyFigures.maximumYield.annualized | | keyFigures.agio.absolute | | -keyFigures.agio.absolute | | keyFigures.agio.relative | | -keyFigures.agio.relative | | keyFigures.agio.annualized | | -keyFigures.agio.annualized | | keyFigures.discount.absolute | | -keyFigures.discount.absolute | | keyFigures.discount.relative | | -keyFigures.discount.relative | | keyFigures.breakEven.breakEvenPoint | | -keyFigures.breakEven.breakEvenPoint | | keyFigures.spread.harmonized | | -keyFigures.spread.harmonized | | keyFigures.spread.relative | | -keyFigures.spread.relative | | keyFigures.delta.effective | | -keyFigures.delta.effective | | keyFigures.delta.unadjusted | | -keyFigures.delta.unadjusted | | keyFigures.thetaOneWeek.effective | | -keyFigures.thetaOneWeek.effective | | keyFigures.thetaOneWeek.unadjusted | | -keyFigures.thetaOneWeek.unadjusted | | keyFigures.vega.effective | | -keyFigures.vega.effective | | keyFigures.vega.unadjusted | | -keyFigures.vega.unadjusted | | keyFigures.leverage | | -keyFigures.leverage | | keyFigures.omega | | -keyFigures.omega | | keyFigures.impliedVolatility | | -keyFigures.impliedVolatility | | keyFigures.intrinsicValue | | -keyFigures.intrinsicValue | | keyFigures.timeValue | | -keyFigures.timeValue | | keyFigures.outperformancePoint | | -keyFigures.outperformancePoint | | keyFigures.parity | | -keyFigures.parity | | performance.intraday | | -performance.intraday | | performance.sinceIssue.ask | | -performance.sinceIssue.ask | | performance.sinceIssue.bid | | -performance.sinceIssue.bid | | performance.endOfDay.day1 | | -performance.endOfDay.day1 | | performance.endOfDay.week1 | | -performance.endOfDay.week1 | | performance.endOfDay.month1 | | -performance.endOfDay.month1 | | performance.endOfDay.months3 | | -performance.endOfDay.months3 | | performance.endOfDay.months6 | | -performance.endOfDay.months6 | | performance.endOfDay.year1 | | -performance.endOfDay.year1 | | performance.endOfDay.years3 | | -performance.endOfDay.years3 | | performance.endOfDay.years5 | | -performance.endOfDay.years5 | | performance.endOfDay.yearToDate | | -performance.endOfDay.yearToDate | | volatility.week1 | | -volatility.week1 | | volatility.month1 | | -volatility.month1 | | volatility.months3 | | -volatility.months3 | | volatility.months6 | | -volatility.months6 | | volatility.year1 | | -volatility.year1 | | volatility.years3 | | -volatility.years3 | | volatility.years5 | | -volatility.years5 | | volatility.yearToDate | | -volatility.yearToDate |  .</param>
        /// <param name="pagination">pagination.</param>
        public PostSecuritizedDerivativeNotationScreenerSearchRequestMeta(HashSet<string> attributes = default(HashSet<string>), string language = default(string), HashSet<SortEnum> sort = default(HashSet<SortEnum>), PostSecuritizedDerivativeNotationScreenerSearchRequestMetaPagination pagination = default(PostSecuritizedDerivativeNotationScreenerSearchRequestMetaPagination))
        {
            this.Attributes = attributes;
            this.Language = language;
            this.Sort = sort;
            this.Pagination = pagination;
        }

        /// <summary>
        /// Limit the attributes returned in the response to the specified set.
        /// </summary>
        /// <value>Limit the attributes returned in the response to the specified set.</value>
        [DataMember(Name = "attributes", EmitDefaultValue = false)]
        public HashSet<string> Attributes { get; set; }

        /// <summary>
        /// ISO 639-1 code of the language.
        /// </summary>
        /// <value>ISO 639-1 code of the language.</value>
        [DataMember(Name = "language", EmitDefaultValue = false)]
        public string Language { get; set; }

        /// <summary>
        /// Gets or Sets Pagination
        /// </summary>
        [DataMember(Name = "pagination", EmitDefaultValue = false)]
        public PostSecuritizedDerivativeNotationScreenerSearchRequestMetaPagination Pagination { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PostSecuritizedDerivativeNotationScreenerSearchRequestMeta {\n");
            sb.Append("  Attributes: ").Append(Attributes).Append("\n");
            sb.Append("  Language: ").Append(Language).Append("\n");
            sb.Append("  Sort: ").Append(Sort).Append("\n");
            sb.Append("  Pagination: ").Append(Pagination).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PostSecuritizedDerivativeNotationScreenerSearchRequestMeta);
        }

        /// <summary>
        /// Returns true if PostSecuritizedDerivativeNotationScreenerSearchRequestMeta instances are equal
        /// </summary>
        /// <param name="input">Instance of PostSecuritizedDerivativeNotationScreenerSearchRequestMeta to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PostSecuritizedDerivativeNotationScreenerSearchRequestMeta input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Attributes == input.Attributes ||
                    this.Attributes != null &&
                    input.Attributes != null &&
                    this.Attributes.SequenceEqual(input.Attributes)
                ) && 
                (
                    this.Language == input.Language ||
                    (this.Language != null &&
                    this.Language.Equals(input.Language))
                ) && 
                (
                    this.Sort == input.Sort ||
                    this.Sort.SequenceEqual(input.Sort)
                ) && 
                (
                    this.Pagination == input.Pagination ||
                    (this.Pagination != null &&
                    this.Pagination.Equals(input.Pagination))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Attributes != null)
                {
                    hashCode = (hashCode * 59) + this.Attributes.GetHashCode();
                }
                if (this.Language != null)
                {
                    hashCode = (hashCode * 59) + this.Language.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.Sort.GetHashCode();
                if (this.Pagination != null)
                {
                    hashCode = (hashCode * 59) + this.Pagination.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            // Language (string) maxLength
            if (this.Language != null && this.Language.Length > 2)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Language, length must be less than 2.", new [] { "Language" });
            }

            // Language (string) minLength
            if (this.Language != null && this.Language.Length < 2)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Language, length must be greater than 2.", new [] { "Language" });
            }

            yield break;
        }
    }

}
