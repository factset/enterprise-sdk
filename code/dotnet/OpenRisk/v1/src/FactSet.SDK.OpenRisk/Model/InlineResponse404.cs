/*
 * Open:Risk API
 *
 * Service to calculate parametric linear risk statistics and generate risk model asset identifier mappings.
 *
 * The version of the OpenAPI document: 1.26.0
 * Contact: api@factset.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = FactSet.SDK.OpenRisk.Client.OpenAPIDateConverter;

namespace FactSet.SDK.OpenRisk.Model
{
    /// <summary>
    /// Response from the health check route in the event of a &#39;fail&#39; status
    /// </summary>
    [DataContract(Name = "inline_response_404")]
    public partial class InlineResponse404 : IEquatable<InlineResponse404>, IValidatableObject
    {
        /// <summary>
        /// Fail status
        /// </summary>
        /// <value>Fail status</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum StatusEnum
        {
            /// <summary>
            /// Enum Fail for value: fail
            /// </summary>
            [EnumMember(Value = "fail")]
            Fail = 1

        }


        /// <summary>
        /// Fail status
        /// </summary>
        /// <value>Fail status</value>
        [DataMember(Name = "status", IsRequired = true, EmitDefaultValue = false)]
        public StatusEnum Status { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineResponse404" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected InlineResponse404() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineResponse404" /> class.
        /// </summary>
        /// <param name="status">Fail status (required).</param>
        /// <param name="output">Raw error output describing the failure(s) (required).</param>
        public InlineResponse404(StatusEnum status, string output)
        {
            this.Status = status;
            // to ensure "output" is required (not null)
            if (output == null) {
                throw new ArgumentNullException("output is a required property for InlineResponse404 and cannot be null");
            }
            this.Output = output;
        }

        /// <summary>
        /// Raw error output describing the failure(s)
        /// </summary>
        /// <value>Raw error output describing the failure(s)</value>
        [DataMember(Name = "output", IsRequired = true, EmitDefaultValue = false)]
        public string Output { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class InlineResponse404 {\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  Output: ").Append(Output).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InlineResponse404);
        }

        /// <summary>
        /// Returns true if InlineResponse404 instances are equal
        /// </summary>
        /// <param name="input">Instance of InlineResponse404 to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InlineResponse404 input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Status == input.Status ||
                    this.Status.Equals(input.Status)
                ) && 
                (
                    this.Output == input.Output ||
                    (this.Output != null &&
                    this.Output.Equals(input.Output))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.Status.GetHashCode();
                if (this.Output != null)
                {
                    hashCode = (hashCode * 59) + this.Output.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            // Output (string) minLength
            if (this.Output != null && this.Output.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Output, length must be greater than 1.", new [] { "Output" });
            }

            yield break;
        }
    }

}
