/*
 * FactSet Fundamentals API
 *
 * Gain access to current, comprehensive, and comparative information on securities in worldwide developed and emerging markets. In addition to the latest reported data, this API provides Point-in-Time (PIT) views to access fundamentals data as it was known on any given date. Composed of annual and interim/quarterly data, detailed historical financial statement content, per-share data, and calculated ratios, FactSet Fundamentals provides you with the information you need for a global investment perspective.<p>This API is rate-limited to 10 requests per second and 10 concurrent requests per user.</p> 
 *
 * The version of the OpenAPI document: 2.5.0
 * Contact: api@factset.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = FactSet.SDK.FactSetFundamentals.Client.OpenAPIDateConverter;

namespace FactSet.SDK.FactSetFundamentals.Model
{
    /// <summary>
    /// Specifies the frequency of fiscal periods for the data requested.  * &#x60;ANN&#x60;: Annual Original * &#x60;ANN_R&#x60;: Annual Restated * &#x60;QTR&#x60;: Quarterly Original * &#x60;QTR_R&#x60;: Quarterly Restated * &#x60;SEMI&#x60;: Semi-Annual Original * &#x60;SEMI_R&#x60;: Semi-Annual Restated * &#x60;LTM&#x60;: Last Twelve Months (Calculated) * &#x60;LTM_R&#x60;: Last Twelve Months Restated (Calculated) * &#x60;LTM_SEMI&#x60;: LTM based on Semi-Annual * &#x60;LTM_SEMI_R&#x60;: LTM Restated based on Semi-Annual * &#x60;LTMSG&#x60;: LTM Global (QTR preferred over SEMI) * &#x60;YTD&#x60;: Year-to-Date 
    /// </summary>
    /// <value>Specifies the frequency of fiscal periods for the data requested.  * &#x60;ANN&#x60;: Annual Original * &#x60;ANN_R&#x60;: Annual Restated * &#x60;QTR&#x60;: Quarterly Original * &#x60;QTR_R&#x60;: Quarterly Restated * &#x60;SEMI&#x60;: Semi-Annual Original * &#x60;SEMI_R&#x60;: Semi-Annual Restated * &#x60;LTM&#x60;: Last Twelve Months (Calculated) * &#x60;LTM_R&#x60;: Last Twelve Months Restated (Calculated) * &#x60;LTM_SEMI&#x60;: LTM based on Semi-Annual * &#x60;LTM_SEMI_R&#x60;: LTM Restated based on Semi-Annual * &#x60;LTMSG&#x60;: LTM Global (QTR preferred over SEMI) * &#x60;YTD&#x60;: Year-to-Date </value>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum PeriodicityEnum
    {
        /// <summary>
        /// Enum ANN for value: ANN
        /// </summary>
        [EnumMember(Value = "ANN")]
        ANN = 1,

        /// <summary>
        /// Enum ANNR for value: ANN_R
        /// </summary>
        [EnumMember(Value = "ANN_R")]
        ANNR = 2,

        /// <summary>
        /// Enum QTR for value: QTR
        /// </summary>
        [EnumMember(Value = "QTR")]
        QTR = 3,

        /// <summary>
        /// Enum QTRR for value: QTR_R
        /// </summary>
        [EnumMember(Value = "QTR_R")]
        QTRR = 4,

        /// <summary>
        /// Enum SEMI for value: SEMI
        /// </summary>
        [EnumMember(Value = "SEMI")]
        SEMI = 5,

        /// <summary>
        /// Enum SEMIR for value: SEMI_R
        /// </summary>
        [EnumMember(Value = "SEMI_R")]
        SEMIR = 6,

        /// <summary>
        /// Enum LTM for value: LTM
        /// </summary>
        [EnumMember(Value = "LTM")]
        LTM = 7,

        /// <summary>
        /// Enum LTMR for value: LTM_R
        /// </summary>
        [EnumMember(Value = "LTM_R")]
        LTMR = 8,

        /// <summary>
        /// Enum LTMSEMI for value: LTM_SEMI
        /// </summary>
        [EnumMember(Value = "LTM_SEMI")]
        LTMSEMI = 9,

        /// <summary>
        /// Enum LTMSEMIR for value: LTM_SEMI_R
        /// </summary>
        [EnumMember(Value = "LTM_SEMI_R")]
        LTMSEMIR = 10,

        /// <summary>
        /// Enum LTMSG for value: LTMSG
        /// </summary>
        [EnumMember(Value = "LTMSG")]
        LTMSG = 11,

        /// <summary>
        /// Enum YTD for value: YTD
        /// </summary>
        [EnumMember(Value = "YTD")]
        YTD = 12

    }

}
