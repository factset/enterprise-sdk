/*
 * FactSet Debt Capital Structure API
 *
 * The FactSet Debt Capital Structure API offers insights into public and private company debt financing for 69,000+ entities globally. Analyze at the individual-instrument level through summary and detailed information of the debt structure with history available back through 2006. Instrument types covered include Revolving Credit, Term Loans, Notes, and Bonds.   **How to Programmatically Download API Specification file:**  Please use the below link to download the FactSet Debt Capital Structure API Specification file in .yaml. You must be authorized for this API to extract. This specification can then be used for Codegen to create your own SDKs. You can also access by selecting the \"Download Spec\" button to the right of the version below.  [https://api.factset.com/content/factset-dcs/v1/spec/swagger.yaml](https://api.factset.com/content/factset-dcs/v1/spec/swagger.yaml)  This API is rate-limited to 10 requests per second and 10 concurrent requests per user. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@factset.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using FactSet.SDK.FactSetDebtCapitalStructure.Client;
using FactSet.SDK.FactSetDebtCapitalStructure.Model;
using FactSet.SDK.Utils.Authentication;

namespace FactSet.SDK.FactSetDebtCapitalStructure.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IReferenceApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Returns debt instruments for a list of companies.
        /// </summary>
        /// <remarks>
        /// Gets instruments of varying types such as Revolving Credit, Term Loans, ST Debt Total, Notes/Bonds, and Other. 
        /// </remarks>
        /// <exception cref="FactSet.SDK.FactSetDebtCapitalStructure.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="detailsRequest">Request object for &#x60;Details&#x60;.</param>
        /// <returns>DetailsResponse</returns>
        DetailsResponse GetDetailsList(DetailsRequest detailsRequest);

        /// <summary>
        /// Returns debt instruments for a list of companies.
        /// </summary>
        /// <remarks>
        /// Gets instruments of varying types such as Revolving Credit, Term Loans, ST Debt Total, Notes/Bonds, and Other. 
        /// </remarks>
        /// <exception cref="FactSet.SDK.FactSetDebtCapitalStructure.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="detailsRequest">Request object for &#x60;Details&#x60;.</param>
        /// <returns>ApiResponse of DetailsResponse</returns>
        ApiResponse<DetailsResponse> GetDetailsListWithHttpInfo(DetailsRequest detailsRequest);
        /// <summary>
        /// Returns most recently available debt instrument data for a list of companies.
        /// </summary>
        /// <remarks>
        /// Gets instruments of varying types such as Revolving Credit, Term Loans, ST Debt Total, Notes/Bonds, and Other. The data returned by this endpoint is for the interim period and only returns the most recently available value. 
        /// </remarks>
        /// <exception cref="FactSet.SDK.FactSetDebtCapitalStructure.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="interimDetailsRequest">Request object for &#x60;Details&#x60;.</param>
        /// <returns>DetailsResponse</returns>
        DetailsResponse GetInterimDetailsList(InterimDetailsRequest interimDetailsRequest);

        /// <summary>
        /// Returns most recently available debt instrument data for a list of companies.
        /// </summary>
        /// <remarks>
        /// Gets instruments of varying types such as Revolving Credit, Term Loans, ST Debt Total, Notes/Bonds, and Other. The data returned by this endpoint is for the interim period and only returns the most recently available value. 
        /// </remarks>
        /// <exception cref="FactSet.SDK.FactSetDebtCapitalStructure.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="interimDetailsRequest">Request object for &#x60;Details&#x60;.</param>
        /// <returns>ApiResponse of DetailsResponse</returns>
        ApiResponse<DetailsResponse> GetInterimDetailsListWithHttpInfo(InterimDetailsRequest interimDetailsRequest);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IReferenceApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// Returns debt instruments for a list of companies.
        /// </summary>
        /// <remarks>
        /// Gets instruments of varying types such as Revolving Credit, Term Loans, ST Debt Total, Notes/Bonds, and Other. 
        /// </remarks>
        /// <exception cref="FactSet.SDK.FactSetDebtCapitalStructure.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="detailsRequest">Request object for &#x60;Details&#x60;.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of DetailsResponse</returns>
        System.Threading.Tasks.Task<DetailsResponse> GetDetailsListAsync(DetailsRequest detailsRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Returns debt instruments for a list of companies.
        /// </summary>
        /// <remarks>
        /// Gets instruments of varying types such as Revolving Credit, Term Loans, ST Debt Total, Notes/Bonds, and Other. 
        /// </remarks>
        /// <exception cref="FactSet.SDK.FactSetDebtCapitalStructure.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="detailsRequest">Request object for &#x60;Details&#x60;.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (DetailsResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<DetailsResponse>> GetDetailsListWithHttpInfoAsync(DetailsRequest detailsRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Returns most recently available debt instrument data for a list of companies.
        /// </summary>
        /// <remarks>
        /// Gets instruments of varying types such as Revolving Credit, Term Loans, ST Debt Total, Notes/Bonds, and Other. The data returned by this endpoint is for the interim period and only returns the most recently available value. 
        /// </remarks>
        /// <exception cref="FactSet.SDK.FactSetDebtCapitalStructure.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="interimDetailsRequest">Request object for &#x60;Details&#x60;.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of DetailsResponse</returns>
        System.Threading.Tasks.Task<DetailsResponse> GetInterimDetailsListAsync(InterimDetailsRequest interimDetailsRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Returns most recently available debt instrument data for a list of companies.
        /// </summary>
        /// <remarks>
        /// Gets instruments of varying types such as Revolving Credit, Term Loans, ST Debt Total, Notes/Bonds, and Other. The data returned by this endpoint is for the interim period and only returns the most recently available value. 
        /// </remarks>
        /// <exception cref="FactSet.SDK.FactSetDebtCapitalStructure.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="interimDetailsRequest">Request object for &#x60;Details&#x60;.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (DetailsResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<DetailsResponse>> GetInterimDetailsListWithHttpInfoAsync(InterimDetailsRequest interimDetailsRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IReferenceApi : IReferenceApiSync, IReferenceApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class ReferenceApi : IReferenceApi
    {
        private FactSet.SDK.FactSetDebtCapitalStructure.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        # region Response Type Disctionaries
        
        private static readonly Dictionary<HttpStatusCode, System.Type> GetDetailsListResponseTypeDictionary = new Dictionary<HttpStatusCode, System.Type>
        {
            { (HttpStatusCode)200, typeof(DetailsResponse) },
            { (HttpStatusCode)400, typeof(ErrorResponse) },
            { (HttpStatusCode)401, typeof(ErrorResponse) },
            { (HttpStatusCode)403, typeof(ErrorResponse) },
            { (HttpStatusCode)404, typeof(ErrorResponse) },
            { (HttpStatusCode)415, typeof(ErrorResponse) },
            { (HttpStatusCode)500, typeof(ErrorResponse) },
        };

        private static readonly Dictionary<HttpStatusCode, System.Type> GetInterimDetailsListResponseTypeDictionary = new Dictionary<HttpStatusCode, System.Type>
        {
            { (HttpStatusCode)200, typeof(DetailsResponse) },
            { (HttpStatusCode)400, typeof(ErrorResponse) },
            { (HttpStatusCode)401, typeof(ErrorResponse) },
            { (HttpStatusCode)403, typeof(ErrorResponse) },
            { (HttpStatusCode)404, typeof(ErrorResponse) },
            { (HttpStatusCode)415, typeof(ErrorResponse) },
            { (HttpStatusCode)500, typeof(ErrorResponse) },
        };

        # endregion Response Type Disctionaries

        # region Api Response Objects
        

        # endregion Api Response Objects

        /// <summary>
        /// Initializes a new instance of the <see cref="ReferenceApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ReferenceApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ReferenceApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ReferenceApi(string basePath)
        {
            this.Configuration = FactSet.SDK.FactSetDebtCapitalStructure.Client.Configuration.MergeConfigurations(
                FactSet.SDK.FactSetDebtCapitalStructure.Client.GlobalConfiguration.Instance,
                new FactSet.SDK.FactSetDebtCapitalStructure.Client.Configuration { BasePath = basePath }
            );
            this.Client = new FactSet.SDK.FactSetDebtCapitalStructure.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new FactSet.SDK.FactSetDebtCapitalStructure.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = FactSet.SDK.FactSetDebtCapitalStructure.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ReferenceApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public ReferenceApi(FactSet.SDK.FactSetDebtCapitalStructure.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = FactSet.SDK.FactSetDebtCapitalStructure.Client.Configuration.MergeConfigurations(
                FactSet.SDK.FactSetDebtCapitalStructure.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new FactSet.SDK.FactSetDebtCapitalStructure.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new FactSet.SDK.FactSetDebtCapitalStructure.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = FactSet.SDK.FactSetDebtCapitalStructure.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ReferenceApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public ReferenceApi(FactSet.SDK.FactSetDebtCapitalStructure.Client.ISynchronousClient client, FactSet.SDK.FactSetDebtCapitalStructure.Client.IAsynchronousClient asyncClient, FactSet.SDK.FactSetDebtCapitalStructure.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = FactSet.SDK.FactSetDebtCapitalStructure.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public FactSet.SDK.FactSetDebtCapitalStructure.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public FactSet.SDK.FactSetDebtCapitalStructure.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public FactSet.SDK.FactSetDebtCapitalStructure.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public FactSet.SDK.FactSetDebtCapitalStructure.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Returns debt instruments for a list of companies. Gets instruments of varying types such as Revolving Credit, Term Loans, ST Debt Total, Notes/Bonds, and Other. 
        /// </summary>
        /// <exception cref="FactSet.SDK.FactSetDebtCapitalStructure.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="detailsRequest">Request object for &#x60;Details&#x60;.</param>
        /// <returns>DetailsResponse</returns>
        public DetailsResponse GetDetailsList(DetailsRequest detailsRequest)
        {
            var localVarResponse = GetDetailsListWithHttpInfo(detailsRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Returns debt instruments for a list of companies. Gets instruments of varying types such as Revolving Credit, Term Loans, ST Debt Total, Notes/Bonds, and Other. 
        /// </summary>
        /// <exception cref="FactSet.SDK.FactSetDebtCapitalStructure.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="detailsRequest">Request object for &#x60;Details&#x60;.</param>
        /// <returns>ApiResponse of DetailsResponse</returns>
        public ApiResponse<DetailsResponse> GetDetailsListWithHttpInfo(DetailsRequest detailsRequest)
        {
            // verify the required parameter 'detailsRequest' is set
            if (detailsRequest == null)
            {
                throw new FactSet.SDK.FactSetDebtCapitalStructure.Client.ApiException(400, "Missing required parameter 'detailsRequest' when calling ReferenceApi->GetDetailsList");
            }

            FactSet.SDK.FactSetDebtCapitalStructure.Client.RequestOptions localVarRequestOptions = new FactSet.SDK.FactSetDebtCapitalStructure.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = FactSet.SDK.FactSetDebtCapitalStructure.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = FactSet.SDK.FactSetDebtCapitalStructure.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = detailsRequest;

            // authentication (FactSetApiKey) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + FactSet.SDK.FactSetDebtCapitalStructure.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (FactSetOAuth2) required
            // oauth required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // FactSet Authentication Client required
            if (this.Configuration.OAuth2Client != null)
            {
                var token = this.Configuration.OAuth2Client.GetAccessTokenAsync().Result;
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + token);
            }

            localVarRequestOptions.ResponseTypeDictionary = GetDetailsListResponseTypeDictionary;

            // make the HTTP request
            var localVarResponse = this.Client.Post<
            DetailsResponse>("/details", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetDetailsList", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }
            return localVarResponse;
        }

        /// <summary>
        /// Returns debt instruments for a list of companies. Gets instruments of varying types such as Revolving Credit, Term Loans, ST Debt Total, Notes/Bonds, and Other. 
        /// </summary>
        /// <exception cref="FactSet.SDK.FactSetDebtCapitalStructure.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="detailsRequest">Request object for &#x60;Details&#x60;.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of DetailsResponse</returns>
        public async System.Threading.Tasks.Task<DetailsResponse>GetDetailsListAsync(DetailsRequest detailsRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            var localVarResponse = await GetDetailsListWithHttpInfoAsync(detailsRequest, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Returns debt instruments for a list of companies. Gets instruments of varying types such as Revolving Credit, Term Loans, ST Debt Total, Notes/Bonds, and Other. 
        /// </summary>
        /// <exception cref="FactSet.SDK.FactSetDebtCapitalStructure.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="detailsRequest">Request object for &#x60;Details&#x60;.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (DetailsResponse)</returns>

        public async System.Threading.Tasks.Task<ApiResponse<DetailsResponse>> GetDetailsListWithHttpInfoAsync(DetailsRequest detailsRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'detailsRequest' is set
            if (detailsRequest == null)
            {
                throw new FactSet.SDK.FactSetDebtCapitalStructure.Client.ApiException(400, "Missing required parameter 'detailsRequest' when calling ReferenceApi->GetDetailsList");
            }


            FactSet.SDK.FactSetDebtCapitalStructure.Client.RequestOptions localVarRequestOptions = new FactSet.SDK.FactSetDebtCapitalStructure.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = FactSet.SDK.FactSetDebtCapitalStructure.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = FactSet.SDK.FactSetDebtCapitalStructure.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = detailsRequest;

            // authentication (FactSetApiKey) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + FactSet.SDK.FactSetDebtCapitalStructure.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (FactSetOAuth2) required
            // oauth required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // FactSet Authentication Client required
            if (this.Configuration.OAuth2Client != null) {
                var token = await this.Configuration.OAuth2Client.GetAccessTokenAsync();
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + token);
            }


            localVarRequestOptions.ResponseTypeDictionary = GetDetailsListResponseTypeDictionary;

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<DetailsResponse>("/details", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetDetailsList", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Returns most recently available debt instrument data for a list of companies. Gets instruments of varying types such as Revolving Credit, Term Loans, ST Debt Total, Notes/Bonds, and Other. The data returned by this endpoint is for the interim period and only returns the most recently available value. 
        /// </summary>
        /// <exception cref="FactSet.SDK.FactSetDebtCapitalStructure.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="interimDetailsRequest">Request object for &#x60;Details&#x60;.</param>
        /// <returns>DetailsResponse</returns>
        public DetailsResponse GetInterimDetailsList(InterimDetailsRequest interimDetailsRequest)
        {
            var localVarResponse = GetInterimDetailsListWithHttpInfo(interimDetailsRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Returns most recently available debt instrument data for a list of companies. Gets instruments of varying types such as Revolving Credit, Term Loans, ST Debt Total, Notes/Bonds, and Other. The data returned by this endpoint is for the interim period and only returns the most recently available value. 
        /// </summary>
        /// <exception cref="FactSet.SDK.FactSetDebtCapitalStructure.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="interimDetailsRequest">Request object for &#x60;Details&#x60;.</param>
        /// <returns>ApiResponse of DetailsResponse</returns>
        public ApiResponse<DetailsResponse> GetInterimDetailsListWithHttpInfo(InterimDetailsRequest interimDetailsRequest)
        {
            // verify the required parameter 'interimDetailsRequest' is set
            if (interimDetailsRequest == null)
            {
                throw new FactSet.SDK.FactSetDebtCapitalStructure.Client.ApiException(400, "Missing required parameter 'interimDetailsRequest' when calling ReferenceApi->GetInterimDetailsList");
            }

            FactSet.SDK.FactSetDebtCapitalStructure.Client.RequestOptions localVarRequestOptions = new FactSet.SDK.FactSetDebtCapitalStructure.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = FactSet.SDK.FactSetDebtCapitalStructure.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = FactSet.SDK.FactSetDebtCapitalStructure.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = interimDetailsRequest;

            // authentication (FactSetApiKey) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + FactSet.SDK.FactSetDebtCapitalStructure.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (FactSetOAuth2) required
            // oauth required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // FactSet Authentication Client required
            if (this.Configuration.OAuth2Client != null)
            {
                var token = this.Configuration.OAuth2Client.GetAccessTokenAsync().Result;
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + token);
            }

            localVarRequestOptions.ResponseTypeDictionary = GetInterimDetailsListResponseTypeDictionary;

            // make the HTTP request
            var localVarResponse = this.Client.Post<
            DetailsResponse>("/details-interim", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetInterimDetailsList", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }
            return localVarResponse;
        }

        /// <summary>
        /// Returns most recently available debt instrument data for a list of companies. Gets instruments of varying types such as Revolving Credit, Term Loans, ST Debt Total, Notes/Bonds, and Other. The data returned by this endpoint is for the interim period and only returns the most recently available value. 
        /// </summary>
        /// <exception cref="FactSet.SDK.FactSetDebtCapitalStructure.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="interimDetailsRequest">Request object for &#x60;Details&#x60;.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of DetailsResponse</returns>
        public async System.Threading.Tasks.Task<DetailsResponse>GetInterimDetailsListAsync(InterimDetailsRequest interimDetailsRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            var localVarResponse = await GetInterimDetailsListWithHttpInfoAsync(interimDetailsRequest, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Returns most recently available debt instrument data for a list of companies. Gets instruments of varying types such as Revolving Credit, Term Loans, ST Debt Total, Notes/Bonds, and Other. The data returned by this endpoint is for the interim period and only returns the most recently available value. 
        /// </summary>
        /// <exception cref="FactSet.SDK.FactSetDebtCapitalStructure.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="interimDetailsRequest">Request object for &#x60;Details&#x60;.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (DetailsResponse)</returns>

        public async System.Threading.Tasks.Task<ApiResponse<DetailsResponse>> GetInterimDetailsListWithHttpInfoAsync(InterimDetailsRequest interimDetailsRequest, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'interimDetailsRequest' is set
            if (interimDetailsRequest == null)
            {
                throw new FactSet.SDK.FactSetDebtCapitalStructure.Client.ApiException(400, "Missing required parameter 'interimDetailsRequest' when calling ReferenceApi->GetInterimDetailsList");
            }


            FactSet.SDK.FactSetDebtCapitalStructure.Client.RequestOptions localVarRequestOptions = new FactSet.SDK.FactSetDebtCapitalStructure.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = FactSet.SDK.FactSetDebtCapitalStructure.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = FactSet.SDK.FactSetDebtCapitalStructure.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = interimDetailsRequest;

            // authentication (FactSetApiKey) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + FactSet.SDK.FactSetDebtCapitalStructure.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (FactSetOAuth2) required
            // oauth required
            if (!string.IsNullOrEmpty(this.Configuration.AccessToken) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
            }

            // FactSet Authentication Client required
            if (this.Configuration.OAuth2Client != null) {
                var token = await this.Configuration.OAuth2Client.GetAccessTokenAsync();
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + token);
            }


            localVarRequestOptions.ResponseTypeDictionary = GetInterimDetailsListResponseTypeDictionary;

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<DetailsResponse>("/details-interim", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("GetInterimDetailsList", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
