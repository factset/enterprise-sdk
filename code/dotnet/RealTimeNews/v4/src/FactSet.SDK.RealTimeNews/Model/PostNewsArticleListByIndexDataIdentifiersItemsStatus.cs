/*
 * Real-Time News API
 *
 * Consume FactSetâ€™s StreetAccount news and 3rd party content through an API that seamlessly integrates with [quotes](https://developer.factset.com/api-catalog/real-time-quotes-api), [time series](https://developer.factset.com/api-catalog/real-time-time-series-api), [watchlists](https://developer.factset.com/api-catalog/watchlist-api-digital-portals), and other Functional APIs.  Search for news articles from various news distributors and publishers. Incorporate a multitude of search parameters such as region, category, source, article type and provider-specific meta data, to easily filter out the noise.  All search and list endpoints can be subscribed to receive streamed updates.  News providers include:  * APA * AWP  * Businesswire * Cercle Finance * Direkt News SE * Dow Jones News * dpa * dpa-AFX  * EUWAX * GlobenewsWire * Kauppalehti * MT Newswires * MoneyAM * newsaktuell * OMX * PR Newswire  * Ritzau Finans * StreetAccount News * TDN News        See the [Real-Time Quotes API](https://developer.factset.com/api-catalog/real-time-quotes-api) for access to detailed price and performance information, plus basic support for security identifier cross-reference. 
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: api@factset.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = FactSet.SDK.RealTimeNews.Client.OpenAPIDateConverter;

namespace FactSet.SDK.RealTimeNews.Model
{
    /// <summary>
    /// Error status for the requested identifier.
    /// </summary>
    [DataContract(Name = "PostNewsArticleListByIndexDataIdentifiersItems_status")]
    public partial class PostNewsArticleListByIndexDataIdentifiersItemsStatus : IEquatable<PostNewsArticleListByIndexDataIdentifiersItemsStatus>, IValidatableObject
    {
        /// <summary>
        /// Code of the error condition. | Value | Description | | - -- | - -- | | none | No error. | | parameter | The provided identifier does not refer to a valid listing level identifier. | | entitlement | Not entitled to see data for the identifier. | | identifierMapping | Unable to resolve the provided identifier. |  
        /// </summary>
        /// <value>Code of the error condition. | Value | Description | | - -- | - -- | | none | No error. | | parameter | The provided identifier does not refer to a valid listing level identifier. | | entitlement | Not entitled to see data for the identifier. | | identifierMapping | Unable to resolve the provided identifier. |  </value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum CodeEnum
        {
            /// <summary>
            /// Enum None for value: none
            /// </summary>
            [EnumMember(Value = "none")]
            None = 1,

            /// <summary>
            /// Enum Parameter for value: parameter
            /// </summary>
            [EnumMember(Value = "parameter")]
            Parameter = 2,

            /// <summary>
            /// Enum Entitlement for value: entitlement
            /// </summary>
            [EnumMember(Value = "entitlement")]
            Entitlement = 3,

            /// <summary>
            /// Enum IdentifierMapping for value: identifierMapping
            /// </summary>
            [EnumMember(Value = "identifierMapping")]
            IdentifierMapping = 4

        }


        /// <summary>
        /// Code of the error condition. | Value | Description | | - -- | - -- | | none | No error. | | parameter | The provided identifier does not refer to a valid listing level identifier. | | entitlement | Not entitled to see data for the identifier. | | identifierMapping | Unable to resolve the provided identifier. |  
        /// </summary>
        /// <value>Code of the error condition. | Value | Description | | - -- | - -- | | none | No error. | | parameter | The provided identifier does not refer to a valid listing level identifier. | | entitlement | Not entitled to see data for the identifier. | | identifierMapping | Unable to resolve the provided identifier. |  </value>
        [DataMember(Name = "code", EmitDefaultValue = true)]
        public CodeEnum? Code { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="PostNewsArticleListByIndexDataIdentifiersItemsStatus" /> class.
        /// </summary>
        /// <param name="code">Code of the error condition. | Value | Description | | - -- | - -- | | none | No error. | | parameter | The provided identifier does not refer to a valid listing level identifier. | | entitlement | Not entitled to see data for the identifier. | | identifierMapping | Unable to resolve the provided identifier. |  .</param>
        /// <param name="identifier">Provided identifier..</param>
        /// <param name="details">A human-readable, unstructured explanation specific to this occurrence of the problem..</param>
        /// <param name="encryptedDetails">Base64-encoded internal details about the error..</param>
        public PostNewsArticleListByIndexDataIdentifiersItemsStatus(CodeEnum? code = default(CodeEnum?), string identifier = default(string), string details = default(string), string encryptedDetails = default(string))
        {
            this.Code = code;
            this.Identifier = identifier;
            this.Details = details;
            this.EncryptedDetails = encryptedDetails;
        }

        /// <summary>
        /// Provided identifier.
        /// </summary>
        /// <value>Provided identifier.</value>
        [DataMember(Name = "identifier", EmitDefaultValue = true)]
        public string Identifier { get; set; }

        /// <summary>
        /// A human-readable, unstructured explanation specific to this occurrence of the problem.
        /// </summary>
        /// <value>A human-readable, unstructured explanation specific to this occurrence of the problem.</value>
        [DataMember(Name = "details", EmitDefaultValue = true)]
        public string Details { get; set; }

        /// <summary>
        /// Base64-encoded internal details about the error.
        /// </summary>
        /// <value>Base64-encoded internal details about the error.</value>
        [DataMember(Name = "encryptedDetails", EmitDefaultValue = true)]
        public string EncryptedDetails { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PostNewsArticleListByIndexDataIdentifiersItemsStatus {\n");
            sb.Append("  Code: ").Append(Code).Append("\n");
            sb.Append("  Identifier: ").Append(Identifier).Append("\n");
            sb.Append("  Details: ").Append(Details).Append("\n");
            sb.Append("  EncryptedDetails: ").Append(EncryptedDetails).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PostNewsArticleListByIndexDataIdentifiersItemsStatus);
        }

        /// <summary>
        /// Returns true if PostNewsArticleListByIndexDataIdentifiersItemsStatus instances are equal
        /// </summary>
        /// <param name="input">Instance of PostNewsArticleListByIndexDataIdentifiersItemsStatus to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PostNewsArticleListByIndexDataIdentifiersItemsStatus input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Code == input.Code ||
                    this.Code.Equals(input.Code)
                ) && 
                (
                    this.Identifier == input.Identifier ||
                    (this.Identifier != null &&
                    this.Identifier.Equals(input.Identifier))
                ) && 
                (
                    this.Details == input.Details ||
                    (this.Details != null &&
                    this.Details.Equals(input.Details))
                ) && 
                (
                    this.EncryptedDetails == input.EncryptedDetails ||
                    (this.EncryptedDetails != null &&
                    this.EncryptedDetails.Equals(input.EncryptedDetails))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.Code.GetHashCode();
                if (this.Identifier != null)
                {
                    hashCode = (hashCode * 59) + this.Identifier.GetHashCode();
                }
                if (this.Details != null)
                {
                    hashCode = (hashCode * 59) + this.Details.GetHashCode();
                }
                if (this.EncryptedDetails != null)
                {
                    hashCode = (hashCode * 59) + this.EncryptedDetails.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
