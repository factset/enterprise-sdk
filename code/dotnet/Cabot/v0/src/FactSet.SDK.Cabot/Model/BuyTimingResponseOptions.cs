/*
 * Cabot Models API
 *
 * Cabot Models API
 *
 * The version of the OpenAPI document: 0.3.0
 * Contact: api@factset.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = FactSet.SDK.Cabot.Client.OpenAPIDateConverter;

namespace FactSet.SDK.Cabot.Model
{
    /// <summary>
    /// BuyTimingResponseOptions
    /// </summary>
    [DataContract(Name = "BuyTimingResponseOptions")]
    public partial class BuyTimingResponseOptions : IEquatable<BuyTimingResponseOptions>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BuyTimingResponseOptions" /> class.
        /// </summary>
        /// <param name="attribute">attribute.</param>
        /// <param name="buyTimingValues">buyTimingValues.</param>
        /// <param name="highBuyTimingValues">highBuyTimingValues.</param>
        /// <param name="holdingsData">holdingsData.</param>
        /// <param name="lowBuyTimingValues">lowBuyTimingValues.</param>
        public BuyTimingResponseOptions(string attribute = default(string), List<BuyTimingModelAnalytics> buyTimingValues = default(List<BuyTimingModelAnalytics>), List<BuyTimingModelAnalytics> highBuyTimingValues = default(List<BuyTimingModelAnalytics>), HoldingsResponseOptions holdingsData = default(HoldingsResponseOptions), List<BuyTimingModelAnalytics> lowBuyTimingValues = default(List<BuyTimingModelAnalytics>))
        {
            this.Attribute = attribute;
            this.BuyTimingValues = buyTimingValues;
            this.HighBuyTimingValues = highBuyTimingValues;
            this.HoldingsData = holdingsData;
            this.LowBuyTimingValues = lowBuyTimingValues;
        }

        /// <summary>
        /// Gets or Sets Attribute
        /// </summary>
        [DataMember(Name = "attribute", EmitDefaultValue = true)]
        public string Attribute { get; set; }

        /// <summary>
        /// Gets or Sets BuyTimingValues
        /// </summary>
        [DataMember(Name = "buyTimingValues", EmitDefaultValue = false)]
        public List<BuyTimingModelAnalytics> BuyTimingValues { get; set; }

        /// <summary>
        /// Gets or Sets HighBuyTimingValues
        /// </summary>
        [DataMember(Name = "highBuyTimingValues", EmitDefaultValue = false)]
        public List<BuyTimingModelAnalytics> HighBuyTimingValues { get; set; }

        /// <summary>
        /// Gets or Sets HoldingsData
        /// </summary>
        [DataMember(Name = "holdingsData", EmitDefaultValue = false)]
        public HoldingsResponseOptions HoldingsData { get; set; }

        /// <summary>
        /// Gets or Sets LowBuyTimingValues
        /// </summary>
        [DataMember(Name = "lowBuyTimingValues", EmitDefaultValue = false)]
        public List<BuyTimingModelAnalytics> LowBuyTimingValues { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class BuyTimingResponseOptions {\n");
            sb.Append("  Attribute: ").Append(Attribute).Append("\n");
            sb.Append("  BuyTimingValues: ").Append(BuyTimingValues).Append("\n");
            sb.Append("  HighBuyTimingValues: ").Append(HighBuyTimingValues).Append("\n");
            sb.Append("  HoldingsData: ").Append(HoldingsData).Append("\n");
            sb.Append("  LowBuyTimingValues: ").Append(LowBuyTimingValues).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as BuyTimingResponseOptions);
        }

        /// <summary>
        /// Returns true if BuyTimingResponseOptions instances are equal
        /// </summary>
        /// <param name="input">Instance of BuyTimingResponseOptions to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(BuyTimingResponseOptions input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Attribute == input.Attribute ||
                    (this.Attribute != null &&
                    this.Attribute.Equals(input.Attribute))
                ) && 
                (
                    this.BuyTimingValues == input.BuyTimingValues ||
                    this.BuyTimingValues != null &&
                    input.BuyTimingValues != null &&
                    this.BuyTimingValues.SequenceEqual(input.BuyTimingValues)
                ) && 
                (
                    this.HighBuyTimingValues == input.HighBuyTimingValues ||
                    this.HighBuyTimingValues != null &&
                    input.HighBuyTimingValues != null &&
                    this.HighBuyTimingValues.SequenceEqual(input.HighBuyTimingValues)
                ) && 
                (
                    this.HoldingsData == input.HoldingsData ||
                    (this.HoldingsData != null &&
                    this.HoldingsData.Equals(input.HoldingsData))
                ) && 
                (
                    this.LowBuyTimingValues == input.LowBuyTimingValues ||
                    this.LowBuyTimingValues != null &&
                    input.LowBuyTimingValues != null &&
                    this.LowBuyTimingValues.SequenceEqual(input.LowBuyTimingValues)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Attribute != null)
                {
                    hashCode = (hashCode * 59) + this.Attribute.GetHashCode();
                }
                if (this.BuyTimingValues != null)
                {
                    hashCode = (hashCode * 59) + this.BuyTimingValues.GetHashCode();
                }
                if (this.HighBuyTimingValues != null)
                {
                    hashCode = (hashCode * 59) + this.HighBuyTimingValues.GetHashCode();
                }
                if (this.HoldingsData != null)
                {
                    hashCode = (hashCode * 59) + this.HoldingsData.GetHashCode();
                }
                if (this.LowBuyTimingValues != null)
                {
                    hashCode = (hashCode * 59) + this.LowBuyTimingValues.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
